// Code generated by protoc-gen-goten-object
// File: edgelq/limits/proto/v1alpha2/plan_assignment.proto
// DO NOT EDIT!!!

package plan_assignment

// proto imports
import (
	ntt_meta "github.com/cloudwan/edgelq-sdk/common/types/meta"
	multi_region_policy "github.com/cloudwan/edgelq-sdk/common/types/multi_region_policy"
	iam_organization "github.com/cloudwan/edgelq-sdk/iam/resources/v1alpha2/organization"
	iam_project "github.com/cloudwan/edgelq-sdk/iam/resources/v1alpha2/project"
	accepted_plan "github.com/cloudwan/edgelq-sdk/limits/resources/v1alpha2/accepted_plan"
	common "github.com/cloudwan/edgelq-sdk/limits/resources/v1alpha2/common"
	plan "github.com/cloudwan/edgelq-sdk/limits/resources/v1alpha2/plan"
	meta_resource "github.com/cloudwan/edgelq-sdk/meta/resources/v1alpha2/resource"
	meta_service "github.com/cloudwan/edgelq-sdk/meta/resources/v1alpha2/service"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
)

// make sure we're using proto imports
var (
	_ = &ntt_meta.Meta{}
	_ = &multi_region_policy.MultiRegionPolicy{}
	_ = &iam_organization.Organization{}
	_ = &iam_project.Project{}
	_ = &accepted_plan.AcceptedPlan{}
	_ = &common.Allowance{}
	_ = &plan.Plan{}
	_ = &meta_resource.Resource{}
	_ = &meta_service.Service{}
	_ = &timestamp.Timestamp{}
)

type PlanAssignmentFieldPathBuilder struct{}

func NewPlanAssignmentFieldPathBuilder() PlanAssignmentFieldPathBuilder {
	return PlanAssignmentFieldPathBuilder{}
}
func (PlanAssignmentFieldPathBuilder) Name() PlanAssignmentPathSelectorName {
	return PlanAssignmentPathSelectorName{}
}
func (PlanAssignmentFieldPathBuilder) Plan() PlanAssignmentPathSelectorPlan {
	return PlanAssignmentPathSelectorPlan{}
}
func (PlanAssignmentFieldPathBuilder) Service() PlanAssignmentPathSelectorService {
	return PlanAssignmentPathSelectorService{}
}
func (PlanAssignmentFieldPathBuilder) Extensions() PlanAssignmentPathSelectorExtensions {
	return PlanAssignmentPathSelectorExtensions{}
}
func (PlanAssignmentFieldPathBuilder) RegionalDistributions() PlanAssignmentPathSelectorRegionalDistributions {
	return PlanAssignmentPathSelectorRegionalDistributions{}
}
func (PlanAssignmentFieldPathBuilder) Source() PlanAssignmentPathSelectorSource {
	return PlanAssignmentPathSelectorSource{}
}
func (PlanAssignmentFieldPathBuilder) Metadata() PlanAssignmentPathSelectorMetadata {
	return PlanAssignmentPathSelectorMetadata{}
}

type PlanAssignmentPathSelectorName struct{}

func (PlanAssignmentPathSelectorName) FieldPath() *PlanAssignment_FieldTerminalPath {
	return &PlanAssignment_FieldTerminalPath{selector: PlanAssignment_FieldPathSelectorName}
}

func (s PlanAssignmentPathSelectorName) WithValue(value *Name) *PlanAssignment_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*PlanAssignment_FieldTerminalPathValue)
}

func (s PlanAssignmentPathSelectorName) WithArrayOfValues(values []*Name) *PlanAssignment_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*PlanAssignment_FieldTerminalPathArrayOfValues)
}

type PlanAssignmentPathSelectorPlan struct{}

func (PlanAssignmentPathSelectorPlan) FieldPath() *PlanAssignment_FieldTerminalPath {
	return &PlanAssignment_FieldTerminalPath{selector: PlanAssignment_FieldPathSelectorPlan}
}

func (s PlanAssignmentPathSelectorPlan) WithValue(value *plan.Reference) *PlanAssignment_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*PlanAssignment_FieldTerminalPathValue)
}

func (s PlanAssignmentPathSelectorPlan) WithArrayOfValues(values []*plan.Reference) *PlanAssignment_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*PlanAssignment_FieldTerminalPathArrayOfValues)
}

type PlanAssignmentPathSelectorService struct{}

func (PlanAssignmentPathSelectorService) FieldPath() *PlanAssignment_FieldTerminalPath {
	return &PlanAssignment_FieldTerminalPath{selector: PlanAssignment_FieldPathSelectorService}
}

func (s PlanAssignmentPathSelectorService) WithValue(value *meta_service.Reference) *PlanAssignment_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*PlanAssignment_FieldTerminalPathValue)
}

func (s PlanAssignmentPathSelectorService) WithArrayOfValues(values []*meta_service.Reference) *PlanAssignment_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*PlanAssignment_FieldTerminalPathArrayOfValues)
}

type PlanAssignmentPathSelectorExtensions struct{}

func (PlanAssignmentPathSelectorExtensions) FieldPath() *PlanAssignment_FieldTerminalPath {
	return &PlanAssignment_FieldTerminalPath{selector: PlanAssignment_FieldPathSelectorExtensions}
}

func (s PlanAssignmentPathSelectorExtensions) WithValue(value []*common.Allowance) *PlanAssignment_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*PlanAssignment_FieldTerminalPathValue)
}

func (s PlanAssignmentPathSelectorExtensions) WithArrayOfValues(values [][]*common.Allowance) *PlanAssignment_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*PlanAssignment_FieldTerminalPathArrayOfValues)
}

func (s PlanAssignmentPathSelectorExtensions) WithItemValue(value *common.Allowance) *PlanAssignment_FieldTerminalPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*PlanAssignment_FieldTerminalPathArrayItemValue)
}
func (PlanAssignmentPathSelectorExtensions) WithSubPath(subPath common.Allowance_FieldPath) *PlanAssignment_FieldSubPath {
	return &PlanAssignment_FieldSubPath{selector: PlanAssignment_FieldPathSelectorExtensions, subPath: subPath}
}

func (s PlanAssignmentPathSelectorExtensions) WithSubValue(subPathValue common.Allowance_FieldPathValue) *PlanAssignment_FieldSubPathValue {
	return &PlanAssignment_FieldSubPathValue{PlanAssignment_FieldPath: s.WithSubPath(subPathValue), subPathValue: subPathValue}
}

func (s PlanAssignmentPathSelectorExtensions) WithSubArrayOfValues(subPathArrayOfValues common.Allowance_FieldPathArrayOfValues) *PlanAssignment_FieldSubPathArrayOfValues {
	return &PlanAssignment_FieldSubPathArrayOfValues{PlanAssignment_FieldPath: s.WithSubPath(subPathArrayOfValues), subPathArrayOfValues: subPathArrayOfValues}
}

func (s PlanAssignmentPathSelectorExtensions) WithSubArrayItemValue(subPathArrayItemValue common.Allowance_FieldPathArrayItemValue) *PlanAssignment_FieldSubPathArrayItemValue {
	return &PlanAssignment_FieldSubPathArrayItemValue{PlanAssignment_FieldPath: s.WithSubPath(subPathArrayItemValue), subPathItemValue: subPathArrayItemValue}
}

func (PlanAssignmentPathSelectorExtensions) Resource() PlanAssignmentPathSelectorExtensionsResource {
	return PlanAssignmentPathSelectorExtensionsResource{}
}

func (PlanAssignmentPathSelectorExtensions) Value() PlanAssignmentPathSelectorExtensionsValue {
	return PlanAssignmentPathSelectorExtensionsValue{}
}

type PlanAssignmentPathSelectorExtensionsResource struct{}

func (PlanAssignmentPathSelectorExtensionsResource) FieldPath() *PlanAssignment_FieldSubPath {
	return &PlanAssignment_FieldSubPath{
		selector: PlanAssignment_FieldPathSelectorExtensions,
		subPath:  common.NewAllowanceFieldPathBuilder().Resource().FieldPath(),
	}
}

func (s PlanAssignmentPathSelectorExtensionsResource) WithValue(value *meta_resource.Reference) *PlanAssignment_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*PlanAssignment_FieldSubPathValue)
}

func (s PlanAssignmentPathSelectorExtensionsResource) WithArrayOfValues(values []*meta_resource.Reference) *PlanAssignment_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*PlanAssignment_FieldSubPathArrayOfValues)
}

type PlanAssignmentPathSelectorExtensionsValue struct{}

func (PlanAssignmentPathSelectorExtensionsValue) FieldPath() *PlanAssignment_FieldSubPath {
	return &PlanAssignment_FieldSubPath{
		selector: PlanAssignment_FieldPathSelectorExtensions,
		subPath:  common.NewAllowanceFieldPathBuilder().Value().FieldPath(),
	}
}

func (s PlanAssignmentPathSelectorExtensionsValue) WithValue(value int64) *PlanAssignment_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*PlanAssignment_FieldSubPathValue)
}

func (s PlanAssignmentPathSelectorExtensionsValue) WithArrayOfValues(values []int64) *PlanAssignment_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*PlanAssignment_FieldSubPathArrayOfValues)
}

type PlanAssignmentPathSelectorRegionalDistributions struct{}

func (PlanAssignmentPathSelectorRegionalDistributions) FieldPath() *PlanAssignment_FieldTerminalPath {
	return &PlanAssignment_FieldTerminalPath{selector: PlanAssignment_FieldPathSelectorRegionalDistributions}
}

func (s PlanAssignmentPathSelectorRegionalDistributions) WithValue(value []*common.RegionalDistribution) *PlanAssignment_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*PlanAssignment_FieldTerminalPathValue)
}

func (s PlanAssignmentPathSelectorRegionalDistributions) WithArrayOfValues(values [][]*common.RegionalDistribution) *PlanAssignment_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*PlanAssignment_FieldTerminalPathArrayOfValues)
}

func (s PlanAssignmentPathSelectorRegionalDistributions) WithItemValue(value *common.RegionalDistribution) *PlanAssignment_FieldTerminalPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*PlanAssignment_FieldTerminalPathArrayItemValue)
}
func (PlanAssignmentPathSelectorRegionalDistributions) WithSubPath(subPath common.RegionalDistribution_FieldPath) *PlanAssignment_FieldSubPath {
	return &PlanAssignment_FieldSubPath{selector: PlanAssignment_FieldPathSelectorRegionalDistributions, subPath: subPath}
}

func (s PlanAssignmentPathSelectorRegionalDistributions) WithSubValue(subPathValue common.RegionalDistribution_FieldPathValue) *PlanAssignment_FieldSubPathValue {
	return &PlanAssignment_FieldSubPathValue{PlanAssignment_FieldPath: s.WithSubPath(subPathValue), subPathValue: subPathValue}
}

func (s PlanAssignmentPathSelectorRegionalDistributions) WithSubArrayOfValues(subPathArrayOfValues common.RegionalDistribution_FieldPathArrayOfValues) *PlanAssignment_FieldSubPathArrayOfValues {
	return &PlanAssignment_FieldSubPathArrayOfValues{PlanAssignment_FieldPath: s.WithSubPath(subPathArrayOfValues), subPathArrayOfValues: subPathArrayOfValues}
}

func (s PlanAssignmentPathSelectorRegionalDistributions) WithSubArrayItemValue(subPathArrayItemValue common.RegionalDistribution_FieldPathArrayItemValue) *PlanAssignment_FieldSubPathArrayItemValue {
	return &PlanAssignment_FieldSubPathArrayItemValue{PlanAssignment_FieldPath: s.WithSubPath(subPathArrayItemValue), subPathItemValue: subPathArrayItemValue}
}

func (PlanAssignmentPathSelectorRegionalDistributions) Resource() PlanAssignmentPathSelectorRegionalDistributionsResource {
	return PlanAssignmentPathSelectorRegionalDistributionsResource{}
}

func (PlanAssignmentPathSelectorRegionalDistributions) LimitsByRegion() PlanAssignmentPathSelectorRegionalDistributionsLimitsByRegion {
	return PlanAssignmentPathSelectorRegionalDistributionsLimitsByRegion{}
}

type PlanAssignmentPathSelectorRegionalDistributionsResource struct{}

func (PlanAssignmentPathSelectorRegionalDistributionsResource) FieldPath() *PlanAssignment_FieldSubPath {
	return &PlanAssignment_FieldSubPath{
		selector: PlanAssignment_FieldPathSelectorRegionalDistributions,
		subPath:  common.NewRegionalDistributionFieldPathBuilder().Resource().FieldPath(),
	}
}

func (s PlanAssignmentPathSelectorRegionalDistributionsResource) WithValue(value *meta_resource.Reference) *PlanAssignment_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*PlanAssignment_FieldSubPathValue)
}

func (s PlanAssignmentPathSelectorRegionalDistributionsResource) WithArrayOfValues(values []*meta_resource.Reference) *PlanAssignment_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*PlanAssignment_FieldSubPathArrayOfValues)
}

type PlanAssignmentPathSelectorRegionalDistributionsLimitsByRegion struct{}

func (PlanAssignmentPathSelectorRegionalDistributionsLimitsByRegion) FieldPath() *PlanAssignment_FieldSubPath {
	return &PlanAssignment_FieldSubPath{
		selector: PlanAssignment_FieldPathSelectorRegionalDistributions,
		subPath:  common.NewRegionalDistributionFieldPathBuilder().LimitsByRegion().FieldPath(),
	}
}

func (s PlanAssignmentPathSelectorRegionalDistributionsLimitsByRegion) WithValue(value map[string]int64) *PlanAssignment_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*PlanAssignment_FieldSubPathValue)
}

func (s PlanAssignmentPathSelectorRegionalDistributionsLimitsByRegion) WithArrayOfValues(values []map[string]int64) *PlanAssignment_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*PlanAssignment_FieldSubPathArrayOfValues)
}

func (PlanAssignmentPathSelectorRegionalDistributionsLimitsByRegion) WithKey(key string) PlanAssignmentMapPathSelectorRegionalDistributionsLimitsByRegion {
	return PlanAssignmentMapPathSelectorRegionalDistributionsLimitsByRegion{key: key}
}

type PlanAssignmentMapPathSelectorRegionalDistributionsLimitsByRegion struct {
	key string
}

func (s PlanAssignmentMapPathSelectorRegionalDistributionsLimitsByRegion) FieldPath() *PlanAssignment_FieldSubPath {
	return &PlanAssignment_FieldSubPath{
		selector: PlanAssignment_FieldPathSelectorRegionalDistributions,
		subPath:  common.NewRegionalDistributionFieldPathBuilder().LimitsByRegion().WithKey(s.key).FieldPath(),
	}
}

func (s PlanAssignmentMapPathSelectorRegionalDistributionsLimitsByRegion) WithValue(value int64) *PlanAssignment_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*PlanAssignment_FieldSubPathValue)
}

func (s PlanAssignmentMapPathSelectorRegionalDistributionsLimitsByRegion) WithArrayOfValues(values []int64) *PlanAssignment_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*PlanAssignment_FieldSubPathArrayOfValues)
}

type PlanAssignmentPathSelectorSource struct{}

func (PlanAssignmentPathSelectorSource) FieldPath() *PlanAssignment_FieldTerminalPath {
	return &PlanAssignment_FieldTerminalPath{selector: PlanAssignment_FieldPathSelectorSource}
}

func (s PlanAssignmentPathSelectorSource) WithValue(value *accepted_plan.Reference) *PlanAssignment_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*PlanAssignment_FieldTerminalPathValue)
}

func (s PlanAssignmentPathSelectorSource) WithArrayOfValues(values []*accepted_plan.Reference) *PlanAssignment_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*PlanAssignment_FieldTerminalPathArrayOfValues)
}

type PlanAssignmentPathSelectorMetadata struct{}

func (PlanAssignmentPathSelectorMetadata) FieldPath() *PlanAssignment_FieldTerminalPath {
	return &PlanAssignment_FieldTerminalPath{selector: PlanAssignment_FieldPathSelectorMetadata}
}

func (s PlanAssignmentPathSelectorMetadata) WithValue(value *ntt_meta.Meta) *PlanAssignment_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*PlanAssignment_FieldTerminalPathValue)
}

func (s PlanAssignmentPathSelectorMetadata) WithArrayOfValues(values []*ntt_meta.Meta) *PlanAssignment_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*PlanAssignment_FieldTerminalPathArrayOfValues)
}

func (PlanAssignmentPathSelectorMetadata) WithSubPath(subPath ntt_meta.Meta_FieldPath) *PlanAssignment_FieldSubPath {
	return &PlanAssignment_FieldSubPath{selector: PlanAssignment_FieldPathSelectorMetadata, subPath: subPath}
}

func (s PlanAssignmentPathSelectorMetadata) WithSubValue(subPathValue ntt_meta.Meta_FieldPathValue) *PlanAssignment_FieldSubPathValue {
	return &PlanAssignment_FieldSubPathValue{PlanAssignment_FieldPath: s.WithSubPath(subPathValue), subPathValue: subPathValue}
}

func (s PlanAssignmentPathSelectorMetadata) WithSubArrayOfValues(subPathArrayOfValues ntt_meta.Meta_FieldPathArrayOfValues) *PlanAssignment_FieldSubPathArrayOfValues {
	return &PlanAssignment_FieldSubPathArrayOfValues{PlanAssignment_FieldPath: s.WithSubPath(subPathArrayOfValues), subPathArrayOfValues: subPathArrayOfValues}
}

func (s PlanAssignmentPathSelectorMetadata) WithSubArrayItemValue(subPathArrayItemValue ntt_meta.Meta_FieldPathArrayItemValue) *PlanAssignment_FieldSubPathArrayItemValue {
	return &PlanAssignment_FieldSubPathArrayItemValue{PlanAssignment_FieldPath: s.WithSubPath(subPathArrayItemValue), subPathItemValue: subPathArrayItemValue}
}

func (PlanAssignmentPathSelectorMetadata) CreateTime() PlanAssignmentPathSelectorMetadataCreateTime {
	return PlanAssignmentPathSelectorMetadataCreateTime{}
}

func (PlanAssignmentPathSelectorMetadata) UpdateTime() PlanAssignmentPathSelectorMetadataUpdateTime {
	return PlanAssignmentPathSelectorMetadataUpdateTime{}
}

func (PlanAssignmentPathSelectorMetadata) DeleteTime() PlanAssignmentPathSelectorMetadataDeleteTime {
	return PlanAssignmentPathSelectorMetadataDeleteTime{}
}

func (PlanAssignmentPathSelectorMetadata) Uuid() PlanAssignmentPathSelectorMetadataUuid {
	return PlanAssignmentPathSelectorMetadataUuid{}
}

func (PlanAssignmentPathSelectorMetadata) Tags() PlanAssignmentPathSelectorMetadataTags {
	return PlanAssignmentPathSelectorMetadataTags{}
}

func (PlanAssignmentPathSelectorMetadata) Labels() PlanAssignmentPathSelectorMetadataLabels {
	return PlanAssignmentPathSelectorMetadataLabels{}
}

func (PlanAssignmentPathSelectorMetadata) Annotations() PlanAssignmentPathSelectorMetadataAnnotations {
	return PlanAssignmentPathSelectorMetadataAnnotations{}
}

func (PlanAssignmentPathSelectorMetadata) Generation() PlanAssignmentPathSelectorMetadataGeneration {
	return PlanAssignmentPathSelectorMetadataGeneration{}
}

func (PlanAssignmentPathSelectorMetadata) ResourceVersion() PlanAssignmentPathSelectorMetadataResourceVersion {
	return PlanAssignmentPathSelectorMetadataResourceVersion{}
}

func (PlanAssignmentPathSelectorMetadata) OwnerReferences() PlanAssignmentPathSelectorMetadataOwnerReferences {
	return PlanAssignmentPathSelectorMetadataOwnerReferences{}
}

func (PlanAssignmentPathSelectorMetadata) Shards() PlanAssignmentPathSelectorMetadataShards {
	return PlanAssignmentPathSelectorMetadataShards{}
}

func (PlanAssignmentPathSelectorMetadata) Syncing() PlanAssignmentPathSelectorMetadataSyncing {
	return PlanAssignmentPathSelectorMetadataSyncing{}
}

func (PlanAssignmentPathSelectorMetadata) Lifecycle() PlanAssignmentPathSelectorMetadataLifecycle {
	return PlanAssignmentPathSelectorMetadataLifecycle{}
}

type PlanAssignmentPathSelectorMetadataCreateTime struct{}

func (PlanAssignmentPathSelectorMetadataCreateTime) FieldPath() *PlanAssignment_FieldSubPath {
	return &PlanAssignment_FieldSubPath{
		selector: PlanAssignment_FieldPathSelectorMetadata,
		subPath:  ntt_meta.NewMetaFieldPathBuilder().CreateTime().FieldPath(),
	}
}

func (s PlanAssignmentPathSelectorMetadataCreateTime) WithValue(value *timestamp.Timestamp) *PlanAssignment_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*PlanAssignment_FieldSubPathValue)
}

func (s PlanAssignmentPathSelectorMetadataCreateTime) WithArrayOfValues(values []*timestamp.Timestamp) *PlanAssignment_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*PlanAssignment_FieldSubPathArrayOfValues)
}

type PlanAssignmentPathSelectorMetadataUpdateTime struct{}

func (PlanAssignmentPathSelectorMetadataUpdateTime) FieldPath() *PlanAssignment_FieldSubPath {
	return &PlanAssignment_FieldSubPath{
		selector: PlanAssignment_FieldPathSelectorMetadata,
		subPath:  ntt_meta.NewMetaFieldPathBuilder().UpdateTime().FieldPath(),
	}
}

func (s PlanAssignmentPathSelectorMetadataUpdateTime) WithValue(value *timestamp.Timestamp) *PlanAssignment_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*PlanAssignment_FieldSubPathValue)
}

func (s PlanAssignmentPathSelectorMetadataUpdateTime) WithArrayOfValues(values []*timestamp.Timestamp) *PlanAssignment_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*PlanAssignment_FieldSubPathArrayOfValues)
}

type PlanAssignmentPathSelectorMetadataDeleteTime struct{}

func (PlanAssignmentPathSelectorMetadataDeleteTime) FieldPath() *PlanAssignment_FieldSubPath {
	return &PlanAssignment_FieldSubPath{
		selector: PlanAssignment_FieldPathSelectorMetadata,
		subPath:  ntt_meta.NewMetaFieldPathBuilder().DeleteTime().FieldPath(),
	}
}

func (s PlanAssignmentPathSelectorMetadataDeleteTime) WithValue(value *timestamp.Timestamp) *PlanAssignment_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*PlanAssignment_FieldSubPathValue)
}

func (s PlanAssignmentPathSelectorMetadataDeleteTime) WithArrayOfValues(values []*timestamp.Timestamp) *PlanAssignment_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*PlanAssignment_FieldSubPathArrayOfValues)
}

type PlanAssignmentPathSelectorMetadataUuid struct{}

func (PlanAssignmentPathSelectorMetadataUuid) FieldPath() *PlanAssignment_FieldSubPath {
	return &PlanAssignment_FieldSubPath{
		selector: PlanAssignment_FieldPathSelectorMetadata,
		subPath:  ntt_meta.NewMetaFieldPathBuilder().Uuid().FieldPath(),
	}
}

func (s PlanAssignmentPathSelectorMetadataUuid) WithValue(value string) *PlanAssignment_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*PlanAssignment_FieldSubPathValue)
}

func (s PlanAssignmentPathSelectorMetadataUuid) WithArrayOfValues(values []string) *PlanAssignment_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*PlanAssignment_FieldSubPathArrayOfValues)
}

type PlanAssignmentPathSelectorMetadataTags struct{}

func (PlanAssignmentPathSelectorMetadataTags) FieldPath() *PlanAssignment_FieldSubPath {
	return &PlanAssignment_FieldSubPath{
		selector: PlanAssignment_FieldPathSelectorMetadata,
		subPath:  ntt_meta.NewMetaFieldPathBuilder().Tags().FieldPath(),
	}
}

func (s PlanAssignmentPathSelectorMetadataTags) WithValue(value []string) *PlanAssignment_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*PlanAssignment_FieldSubPathValue)
}

func (s PlanAssignmentPathSelectorMetadataTags) WithArrayOfValues(values [][]string) *PlanAssignment_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*PlanAssignment_FieldSubPathArrayOfValues)
}

func (s PlanAssignmentPathSelectorMetadataTags) WithItemValue(value string) *PlanAssignment_FieldSubPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*PlanAssignment_FieldSubPathArrayItemValue)
}

type PlanAssignmentPathSelectorMetadataLabels struct{}

func (PlanAssignmentPathSelectorMetadataLabels) FieldPath() *PlanAssignment_FieldSubPath {
	return &PlanAssignment_FieldSubPath{
		selector: PlanAssignment_FieldPathSelectorMetadata,
		subPath:  ntt_meta.NewMetaFieldPathBuilder().Labels().FieldPath(),
	}
}

func (s PlanAssignmentPathSelectorMetadataLabels) WithValue(value map[string]string) *PlanAssignment_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*PlanAssignment_FieldSubPathValue)
}

func (s PlanAssignmentPathSelectorMetadataLabels) WithArrayOfValues(values []map[string]string) *PlanAssignment_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*PlanAssignment_FieldSubPathArrayOfValues)
}

func (PlanAssignmentPathSelectorMetadataLabels) WithKey(key string) PlanAssignmentMapPathSelectorMetadataLabels {
	return PlanAssignmentMapPathSelectorMetadataLabels{key: key}
}

type PlanAssignmentMapPathSelectorMetadataLabels struct {
	key string
}

func (s PlanAssignmentMapPathSelectorMetadataLabels) FieldPath() *PlanAssignment_FieldSubPath {
	return &PlanAssignment_FieldSubPath{
		selector: PlanAssignment_FieldPathSelectorMetadata,
		subPath:  ntt_meta.NewMetaFieldPathBuilder().Labels().WithKey(s.key).FieldPath(),
	}
}

func (s PlanAssignmentMapPathSelectorMetadataLabels) WithValue(value string) *PlanAssignment_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*PlanAssignment_FieldSubPathValue)
}

func (s PlanAssignmentMapPathSelectorMetadataLabels) WithArrayOfValues(values []string) *PlanAssignment_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*PlanAssignment_FieldSubPathArrayOfValues)
}

type PlanAssignmentPathSelectorMetadataAnnotations struct{}

func (PlanAssignmentPathSelectorMetadataAnnotations) FieldPath() *PlanAssignment_FieldSubPath {
	return &PlanAssignment_FieldSubPath{
		selector: PlanAssignment_FieldPathSelectorMetadata,
		subPath:  ntt_meta.NewMetaFieldPathBuilder().Annotations().FieldPath(),
	}
}

func (s PlanAssignmentPathSelectorMetadataAnnotations) WithValue(value map[string]string) *PlanAssignment_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*PlanAssignment_FieldSubPathValue)
}

func (s PlanAssignmentPathSelectorMetadataAnnotations) WithArrayOfValues(values []map[string]string) *PlanAssignment_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*PlanAssignment_FieldSubPathArrayOfValues)
}

func (PlanAssignmentPathSelectorMetadataAnnotations) WithKey(key string) PlanAssignmentMapPathSelectorMetadataAnnotations {
	return PlanAssignmentMapPathSelectorMetadataAnnotations{key: key}
}

type PlanAssignmentMapPathSelectorMetadataAnnotations struct {
	key string
}

func (s PlanAssignmentMapPathSelectorMetadataAnnotations) FieldPath() *PlanAssignment_FieldSubPath {
	return &PlanAssignment_FieldSubPath{
		selector: PlanAssignment_FieldPathSelectorMetadata,
		subPath:  ntt_meta.NewMetaFieldPathBuilder().Annotations().WithKey(s.key).FieldPath(),
	}
}

func (s PlanAssignmentMapPathSelectorMetadataAnnotations) WithValue(value string) *PlanAssignment_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*PlanAssignment_FieldSubPathValue)
}

func (s PlanAssignmentMapPathSelectorMetadataAnnotations) WithArrayOfValues(values []string) *PlanAssignment_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*PlanAssignment_FieldSubPathArrayOfValues)
}

type PlanAssignmentPathSelectorMetadataGeneration struct{}

func (PlanAssignmentPathSelectorMetadataGeneration) FieldPath() *PlanAssignment_FieldSubPath {
	return &PlanAssignment_FieldSubPath{
		selector: PlanAssignment_FieldPathSelectorMetadata,
		subPath:  ntt_meta.NewMetaFieldPathBuilder().Generation().FieldPath(),
	}
}

func (s PlanAssignmentPathSelectorMetadataGeneration) WithValue(value int64) *PlanAssignment_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*PlanAssignment_FieldSubPathValue)
}

func (s PlanAssignmentPathSelectorMetadataGeneration) WithArrayOfValues(values []int64) *PlanAssignment_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*PlanAssignment_FieldSubPathArrayOfValues)
}

type PlanAssignmentPathSelectorMetadataResourceVersion struct{}

func (PlanAssignmentPathSelectorMetadataResourceVersion) FieldPath() *PlanAssignment_FieldSubPath {
	return &PlanAssignment_FieldSubPath{
		selector: PlanAssignment_FieldPathSelectorMetadata,
		subPath:  ntt_meta.NewMetaFieldPathBuilder().ResourceVersion().FieldPath(),
	}
}

func (s PlanAssignmentPathSelectorMetadataResourceVersion) WithValue(value string) *PlanAssignment_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*PlanAssignment_FieldSubPathValue)
}

func (s PlanAssignmentPathSelectorMetadataResourceVersion) WithArrayOfValues(values []string) *PlanAssignment_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*PlanAssignment_FieldSubPathArrayOfValues)
}

type PlanAssignmentPathSelectorMetadataOwnerReferences struct{}

func (PlanAssignmentPathSelectorMetadataOwnerReferences) FieldPath() *PlanAssignment_FieldSubPath {
	return &PlanAssignment_FieldSubPath{
		selector: PlanAssignment_FieldPathSelectorMetadata,
		subPath:  ntt_meta.NewMetaFieldPathBuilder().OwnerReferences().FieldPath(),
	}
}

func (s PlanAssignmentPathSelectorMetadataOwnerReferences) WithValue(value []*ntt_meta.OwnerReference) *PlanAssignment_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*PlanAssignment_FieldSubPathValue)
}

func (s PlanAssignmentPathSelectorMetadataOwnerReferences) WithArrayOfValues(values [][]*ntt_meta.OwnerReference) *PlanAssignment_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*PlanAssignment_FieldSubPathArrayOfValues)
}

func (s PlanAssignmentPathSelectorMetadataOwnerReferences) WithItemValue(value *ntt_meta.OwnerReference) *PlanAssignment_FieldSubPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*PlanAssignment_FieldSubPathArrayItemValue)
}

func (PlanAssignmentPathSelectorMetadataOwnerReferences) Kind() PlanAssignmentPathSelectorMetadataOwnerReferencesKind {
	return PlanAssignmentPathSelectorMetadataOwnerReferencesKind{}
}

func (PlanAssignmentPathSelectorMetadataOwnerReferences) Version() PlanAssignmentPathSelectorMetadataOwnerReferencesVersion {
	return PlanAssignmentPathSelectorMetadataOwnerReferencesVersion{}
}

func (PlanAssignmentPathSelectorMetadataOwnerReferences) Name() PlanAssignmentPathSelectorMetadataOwnerReferencesName {
	return PlanAssignmentPathSelectorMetadataOwnerReferencesName{}
}

func (PlanAssignmentPathSelectorMetadataOwnerReferences) Region() PlanAssignmentPathSelectorMetadataOwnerReferencesRegion {
	return PlanAssignmentPathSelectorMetadataOwnerReferencesRegion{}
}

func (PlanAssignmentPathSelectorMetadataOwnerReferences) Controller() PlanAssignmentPathSelectorMetadataOwnerReferencesController {
	return PlanAssignmentPathSelectorMetadataOwnerReferencesController{}
}

func (PlanAssignmentPathSelectorMetadataOwnerReferences) BlockOwnerDeletion() PlanAssignmentPathSelectorMetadataOwnerReferencesBlockOwnerDeletion {
	return PlanAssignmentPathSelectorMetadataOwnerReferencesBlockOwnerDeletion{}
}

func (PlanAssignmentPathSelectorMetadataOwnerReferences) RequiresOwnerReference() PlanAssignmentPathSelectorMetadataOwnerReferencesRequiresOwnerReference {
	return PlanAssignmentPathSelectorMetadataOwnerReferencesRequiresOwnerReference{}
}

type PlanAssignmentPathSelectorMetadataOwnerReferencesKind struct{}

func (PlanAssignmentPathSelectorMetadataOwnerReferencesKind) FieldPath() *PlanAssignment_FieldSubPath {
	return &PlanAssignment_FieldSubPath{
		selector: PlanAssignment_FieldPathSelectorMetadata,
		subPath:  ntt_meta.NewMetaFieldPathBuilder().OwnerReferences().Kind().FieldPath(),
	}
}

func (s PlanAssignmentPathSelectorMetadataOwnerReferencesKind) WithValue(value string) *PlanAssignment_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*PlanAssignment_FieldSubPathValue)
}

func (s PlanAssignmentPathSelectorMetadataOwnerReferencesKind) WithArrayOfValues(values []string) *PlanAssignment_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*PlanAssignment_FieldSubPathArrayOfValues)
}

type PlanAssignmentPathSelectorMetadataOwnerReferencesVersion struct{}

func (PlanAssignmentPathSelectorMetadataOwnerReferencesVersion) FieldPath() *PlanAssignment_FieldSubPath {
	return &PlanAssignment_FieldSubPath{
		selector: PlanAssignment_FieldPathSelectorMetadata,
		subPath:  ntt_meta.NewMetaFieldPathBuilder().OwnerReferences().Version().FieldPath(),
	}
}

func (s PlanAssignmentPathSelectorMetadataOwnerReferencesVersion) WithValue(value string) *PlanAssignment_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*PlanAssignment_FieldSubPathValue)
}

func (s PlanAssignmentPathSelectorMetadataOwnerReferencesVersion) WithArrayOfValues(values []string) *PlanAssignment_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*PlanAssignment_FieldSubPathArrayOfValues)
}

type PlanAssignmentPathSelectorMetadataOwnerReferencesName struct{}

func (PlanAssignmentPathSelectorMetadataOwnerReferencesName) FieldPath() *PlanAssignment_FieldSubPath {
	return &PlanAssignment_FieldSubPath{
		selector: PlanAssignment_FieldPathSelectorMetadata,
		subPath:  ntt_meta.NewMetaFieldPathBuilder().OwnerReferences().Name().FieldPath(),
	}
}

func (s PlanAssignmentPathSelectorMetadataOwnerReferencesName) WithValue(value string) *PlanAssignment_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*PlanAssignment_FieldSubPathValue)
}

func (s PlanAssignmentPathSelectorMetadataOwnerReferencesName) WithArrayOfValues(values []string) *PlanAssignment_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*PlanAssignment_FieldSubPathArrayOfValues)
}

type PlanAssignmentPathSelectorMetadataOwnerReferencesRegion struct{}

func (PlanAssignmentPathSelectorMetadataOwnerReferencesRegion) FieldPath() *PlanAssignment_FieldSubPath {
	return &PlanAssignment_FieldSubPath{
		selector: PlanAssignment_FieldPathSelectorMetadata,
		subPath:  ntt_meta.NewMetaFieldPathBuilder().OwnerReferences().Region().FieldPath(),
	}
}

func (s PlanAssignmentPathSelectorMetadataOwnerReferencesRegion) WithValue(value string) *PlanAssignment_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*PlanAssignment_FieldSubPathValue)
}

func (s PlanAssignmentPathSelectorMetadataOwnerReferencesRegion) WithArrayOfValues(values []string) *PlanAssignment_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*PlanAssignment_FieldSubPathArrayOfValues)
}

type PlanAssignmentPathSelectorMetadataOwnerReferencesController struct{}

func (PlanAssignmentPathSelectorMetadataOwnerReferencesController) FieldPath() *PlanAssignment_FieldSubPath {
	return &PlanAssignment_FieldSubPath{
		selector: PlanAssignment_FieldPathSelectorMetadata,
		subPath:  ntt_meta.NewMetaFieldPathBuilder().OwnerReferences().Controller().FieldPath(),
	}
}

func (s PlanAssignmentPathSelectorMetadataOwnerReferencesController) WithValue(value bool) *PlanAssignment_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*PlanAssignment_FieldSubPathValue)
}

func (s PlanAssignmentPathSelectorMetadataOwnerReferencesController) WithArrayOfValues(values []bool) *PlanAssignment_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*PlanAssignment_FieldSubPathArrayOfValues)
}

type PlanAssignmentPathSelectorMetadataOwnerReferencesBlockOwnerDeletion struct{}

func (PlanAssignmentPathSelectorMetadataOwnerReferencesBlockOwnerDeletion) FieldPath() *PlanAssignment_FieldSubPath {
	return &PlanAssignment_FieldSubPath{
		selector: PlanAssignment_FieldPathSelectorMetadata,
		subPath:  ntt_meta.NewMetaFieldPathBuilder().OwnerReferences().BlockOwnerDeletion().FieldPath(),
	}
}

func (s PlanAssignmentPathSelectorMetadataOwnerReferencesBlockOwnerDeletion) WithValue(value bool) *PlanAssignment_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*PlanAssignment_FieldSubPathValue)
}

func (s PlanAssignmentPathSelectorMetadataOwnerReferencesBlockOwnerDeletion) WithArrayOfValues(values []bool) *PlanAssignment_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*PlanAssignment_FieldSubPathArrayOfValues)
}

type PlanAssignmentPathSelectorMetadataOwnerReferencesRequiresOwnerReference struct{}

func (PlanAssignmentPathSelectorMetadataOwnerReferencesRequiresOwnerReference) FieldPath() *PlanAssignment_FieldSubPath {
	return &PlanAssignment_FieldSubPath{
		selector: PlanAssignment_FieldPathSelectorMetadata,
		subPath:  ntt_meta.NewMetaFieldPathBuilder().OwnerReferences().RequiresOwnerReference().FieldPath(),
	}
}

func (s PlanAssignmentPathSelectorMetadataOwnerReferencesRequiresOwnerReference) WithValue(value bool) *PlanAssignment_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*PlanAssignment_FieldSubPathValue)
}

func (s PlanAssignmentPathSelectorMetadataOwnerReferencesRequiresOwnerReference) WithArrayOfValues(values []bool) *PlanAssignment_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*PlanAssignment_FieldSubPathArrayOfValues)
}

type PlanAssignmentPathSelectorMetadataShards struct{}

func (PlanAssignmentPathSelectorMetadataShards) FieldPath() *PlanAssignment_FieldSubPath {
	return &PlanAssignment_FieldSubPath{
		selector: PlanAssignment_FieldPathSelectorMetadata,
		subPath:  ntt_meta.NewMetaFieldPathBuilder().Shards().FieldPath(),
	}
}

func (s PlanAssignmentPathSelectorMetadataShards) WithValue(value map[string]int64) *PlanAssignment_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*PlanAssignment_FieldSubPathValue)
}

func (s PlanAssignmentPathSelectorMetadataShards) WithArrayOfValues(values []map[string]int64) *PlanAssignment_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*PlanAssignment_FieldSubPathArrayOfValues)
}

func (PlanAssignmentPathSelectorMetadataShards) WithKey(key string) PlanAssignmentMapPathSelectorMetadataShards {
	return PlanAssignmentMapPathSelectorMetadataShards{key: key}
}

type PlanAssignmentMapPathSelectorMetadataShards struct {
	key string
}

func (s PlanAssignmentMapPathSelectorMetadataShards) FieldPath() *PlanAssignment_FieldSubPath {
	return &PlanAssignment_FieldSubPath{
		selector: PlanAssignment_FieldPathSelectorMetadata,
		subPath:  ntt_meta.NewMetaFieldPathBuilder().Shards().WithKey(s.key).FieldPath(),
	}
}

func (s PlanAssignmentMapPathSelectorMetadataShards) WithValue(value int64) *PlanAssignment_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*PlanAssignment_FieldSubPathValue)
}

func (s PlanAssignmentMapPathSelectorMetadataShards) WithArrayOfValues(values []int64) *PlanAssignment_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*PlanAssignment_FieldSubPathArrayOfValues)
}

type PlanAssignmentPathSelectorMetadataSyncing struct{}

func (PlanAssignmentPathSelectorMetadataSyncing) FieldPath() *PlanAssignment_FieldSubPath {
	return &PlanAssignment_FieldSubPath{
		selector: PlanAssignment_FieldPathSelectorMetadata,
		subPath:  ntt_meta.NewMetaFieldPathBuilder().Syncing().FieldPath(),
	}
}

func (s PlanAssignmentPathSelectorMetadataSyncing) WithValue(value *ntt_meta.SyncingMeta) *PlanAssignment_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*PlanAssignment_FieldSubPathValue)
}

func (s PlanAssignmentPathSelectorMetadataSyncing) WithArrayOfValues(values []*ntt_meta.SyncingMeta) *PlanAssignment_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*PlanAssignment_FieldSubPathArrayOfValues)
}

func (PlanAssignmentPathSelectorMetadataSyncing) OwningRegion() PlanAssignmentPathSelectorMetadataSyncingOwningRegion {
	return PlanAssignmentPathSelectorMetadataSyncingOwningRegion{}
}

func (PlanAssignmentPathSelectorMetadataSyncing) Regions() PlanAssignmentPathSelectorMetadataSyncingRegions {
	return PlanAssignmentPathSelectorMetadataSyncingRegions{}
}

type PlanAssignmentPathSelectorMetadataSyncingOwningRegion struct{}

func (PlanAssignmentPathSelectorMetadataSyncingOwningRegion) FieldPath() *PlanAssignment_FieldSubPath {
	return &PlanAssignment_FieldSubPath{
		selector: PlanAssignment_FieldPathSelectorMetadata,
		subPath:  ntt_meta.NewMetaFieldPathBuilder().Syncing().OwningRegion().FieldPath(),
	}
}

func (s PlanAssignmentPathSelectorMetadataSyncingOwningRegion) WithValue(value string) *PlanAssignment_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*PlanAssignment_FieldSubPathValue)
}

func (s PlanAssignmentPathSelectorMetadataSyncingOwningRegion) WithArrayOfValues(values []string) *PlanAssignment_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*PlanAssignment_FieldSubPathArrayOfValues)
}

type PlanAssignmentPathSelectorMetadataSyncingRegions struct{}

func (PlanAssignmentPathSelectorMetadataSyncingRegions) FieldPath() *PlanAssignment_FieldSubPath {
	return &PlanAssignment_FieldSubPath{
		selector: PlanAssignment_FieldPathSelectorMetadata,
		subPath:  ntt_meta.NewMetaFieldPathBuilder().Syncing().Regions().FieldPath(),
	}
}

func (s PlanAssignmentPathSelectorMetadataSyncingRegions) WithValue(value []string) *PlanAssignment_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*PlanAssignment_FieldSubPathValue)
}

func (s PlanAssignmentPathSelectorMetadataSyncingRegions) WithArrayOfValues(values [][]string) *PlanAssignment_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*PlanAssignment_FieldSubPathArrayOfValues)
}

func (s PlanAssignmentPathSelectorMetadataSyncingRegions) WithItemValue(value string) *PlanAssignment_FieldSubPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*PlanAssignment_FieldSubPathArrayItemValue)
}

type PlanAssignmentPathSelectorMetadataLifecycle struct{}

func (PlanAssignmentPathSelectorMetadataLifecycle) FieldPath() *PlanAssignment_FieldSubPath {
	return &PlanAssignment_FieldSubPath{
		selector: PlanAssignment_FieldPathSelectorMetadata,
		subPath:  ntt_meta.NewMetaFieldPathBuilder().Lifecycle().FieldPath(),
	}
}

func (s PlanAssignmentPathSelectorMetadataLifecycle) WithValue(value *ntt_meta.Lifecycle) *PlanAssignment_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*PlanAssignment_FieldSubPathValue)
}

func (s PlanAssignmentPathSelectorMetadataLifecycle) WithArrayOfValues(values []*ntt_meta.Lifecycle) *PlanAssignment_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*PlanAssignment_FieldSubPathArrayOfValues)
}

func (PlanAssignmentPathSelectorMetadataLifecycle) State() PlanAssignmentPathSelectorMetadataLifecycleState {
	return PlanAssignmentPathSelectorMetadataLifecycleState{}
}

func (PlanAssignmentPathSelectorMetadataLifecycle) BlockDeletion() PlanAssignmentPathSelectorMetadataLifecycleBlockDeletion {
	return PlanAssignmentPathSelectorMetadataLifecycleBlockDeletion{}
}

type PlanAssignmentPathSelectorMetadataLifecycleState struct{}

func (PlanAssignmentPathSelectorMetadataLifecycleState) FieldPath() *PlanAssignment_FieldSubPath {
	return &PlanAssignment_FieldSubPath{
		selector: PlanAssignment_FieldPathSelectorMetadata,
		subPath:  ntt_meta.NewMetaFieldPathBuilder().Lifecycle().State().FieldPath(),
	}
}

func (s PlanAssignmentPathSelectorMetadataLifecycleState) WithValue(value ntt_meta.Lifecycle_State) *PlanAssignment_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*PlanAssignment_FieldSubPathValue)
}

func (s PlanAssignmentPathSelectorMetadataLifecycleState) WithArrayOfValues(values []ntt_meta.Lifecycle_State) *PlanAssignment_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*PlanAssignment_FieldSubPathArrayOfValues)
}

type PlanAssignmentPathSelectorMetadataLifecycleBlockDeletion struct{}

func (PlanAssignmentPathSelectorMetadataLifecycleBlockDeletion) FieldPath() *PlanAssignment_FieldSubPath {
	return &PlanAssignment_FieldSubPath{
		selector: PlanAssignment_FieldPathSelectorMetadata,
		subPath:  ntt_meta.NewMetaFieldPathBuilder().Lifecycle().BlockDeletion().FieldPath(),
	}
}

func (s PlanAssignmentPathSelectorMetadataLifecycleBlockDeletion) WithValue(value bool) *PlanAssignment_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*PlanAssignment_FieldSubPathValue)
}

func (s PlanAssignmentPathSelectorMetadataLifecycleBlockDeletion) WithArrayOfValues(values []bool) *PlanAssignment_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*PlanAssignment_FieldSubPathArrayOfValues)
}
