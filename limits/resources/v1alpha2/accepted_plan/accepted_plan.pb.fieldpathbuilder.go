// Code generated by protoc-gen-goten-object
// File: edgelq/limits/proto/v1alpha2/accepted_plan.proto
// DO NOT EDIT!!!

package accepted_plan

// proto imports
import (
	iam_iam_common "github.com/cloudwan/edgelq-sdk/iam/resources/v1alpha2/common"
	iam_organization "github.com/cloudwan/edgelq-sdk/iam/resources/v1alpha2/organization"
	iam_project "github.com/cloudwan/edgelq-sdk/iam/resources/v1alpha2/project"
	common "github.com/cloudwan/edgelq-sdk/limits/resources/v1alpha2/common"
	plan "github.com/cloudwan/edgelq-sdk/limits/resources/v1alpha2/plan"
	meta_resource "github.com/cloudwan/edgelq-sdk/meta/resources/v1alpha2/resource"
	meta_service "github.com/cloudwan/edgelq-sdk/meta/resources/v1alpha2/service"
	meta "github.com/cloudwan/goten-sdk/types/meta"
	multi_region_policy "github.com/cloudwan/goten-sdk/types/multi_region_policy"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
)

// make sure we're using proto imports
var (
	_ = &iam_iam_common.PCR{}
	_ = &iam_organization.Organization{}
	_ = &iam_project.Project{}
	_ = &common.Allowance{}
	_ = &plan.Plan{}
	_ = &meta_resource.Resource{}
	_ = &meta_service.Service{}
	_ = &timestamppb.Timestamp{}
	_ = &meta.Meta{}
	_ = &multi_region_policy.MultiRegionPolicy{}
)

type AcceptedPlanFieldPathBuilder struct{}

func NewAcceptedPlanFieldPathBuilder() AcceptedPlanFieldPathBuilder {
	return AcceptedPlanFieldPathBuilder{}
}
func (AcceptedPlanFieldPathBuilder) Name() AcceptedPlanPathSelectorName {
	return AcceptedPlanPathSelectorName{}
}
func (AcceptedPlanFieldPathBuilder) Plan() AcceptedPlanPathSelectorPlan {
	return AcceptedPlanPathSelectorPlan{}
}
func (AcceptedPlanFieldPathBuilder) Service() AcceptedPlanPathSelectorService {
	return AcceptedPlanPathSelectorService{}
}
func (AcceptedPlanFieldPathBuilder) Extensions() AcceptedPlanPathSelectorExtensions {
	return AcceptedPlanPathSelectorExtensions{}
}
func (AcceptedPlanFieldPathBuilder) RegionalDistributions() AcceptedPlanPathSelectorRegionalDistributions {
	return AcceptedPlanPathSelectorRegionalDistributions{}
}
func (AcceptedPlanFieldPathBuilder) Assignee() AcceptedPlanPathSelectorAssignee {
	return AcceptedPlanPathSelectorAssignee{}
}
func (AcceptedPlanFieldPathBuilder) Metadata() AcceptedPlanPathSelectorMetadata {
	return AcceptedPlanPathSelectorMetadata{}
}

type AcceptedPlanPathSelectorName struct{}

func (AcceptedPlanPathSelectorName) FieldPath() *AcceptedPlan_FieldTerminalPath {
	return &AcceptedPlan_FieldTerminalPath{selector: AcceptedPlan_FieldPathSelectorName}
}

func (s AcceptedPlanPathSelectorName) WithValue(value *Name) *AcceptedPlan_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*AcceptedPlan_FieldTerminalPathValue)
}

func (s AcceptedPlanPathSelectorName) WithArrayOfValues(values []*Name) *AcceptedPlan_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*AcceptedPlan_FieldTerminalPathArrayOfValues)
}

type AcceptedPlanPathSelectorPlan struct{}

func (AcceptedPlanPathSelectorPlan) FieldPath() *AcceptedPlan_FieldTerminalPath {
	return &AcceptedPlan_FieldTerminalPath{selector: AcceptedPlan_FieldPathSelectorPlan}
}

func (s AcceptedPlanPathSelectorPlan) WithValue(value *plan.Reference) *AcceptedPlan_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*AcceptedPlan_FieldTerminalPathValue)
}

func (s AcceptedPlanPathSelectorPlan) WithArrayOfValues(values []*plan.Reference) *AcceptedPlan_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*AcceptedPlan_FieldTerminalPathArrayOfValues)
}

type AcceptedPlanPathSelectorService struct{}

func (AcceptedPlanPathSelectorService) FieldPath() *AcceptedPlan_FieldTerminalPath {
	return &AcceptedPlan_FieldTerminalPath{selector: AcceptedPlan_FieldPathSelectorService}
}

func (s AcceptedPlanPathSelectorService) WithValue(value *meta_service.Reference) *AcceptedPlan_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*AcceptedPlan_FieldTerminalPathValue)
}

func (s AcceptedPlanPathSelectorService) WithArrayOfValues(values []*meta_service.Reference) *AcceptedPlan_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*AcceptedPlan_FieldTerminalPathArrayOfValues)
}

type AcceptedPlanPathSelectorExtensions struct{}

func (AcceptedPlanPathSelectorExtensions) FieldPath() *AcceptedPlan_FieldTerminalPath {
	return &AcceptedPlan_FieldTerminalPath{selector: AcceptedPlan_FieldPathSelectorExtensions}
}

func (s AcceptedPlanPathSelectorExtensions) WithValue(value []*common.Allowance) *AcceptedPlan_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*AcceptedPlan_FieldTerminalPathValue)
}

func (s AcceptedPlanPathSelectorExtensions) WithArrayOfValues(values [][]*common.Allowance) *AcceptedPlan_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*AcceptedPlan_FieldTerminalPathArrayOfValues)
}

func (s AcceptedPlanPathSelectorExtensions) WithItemValue(value *common.Allowance) *AcceptedPlan_FieldTerminalPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*AcceptedPlan_FieldTerminalPathArrayItemValue)
}
func (AcceptedPlanPathSelectorExtensions) WithSubPath(subPath common.Allowance_FieldPath) *AcceptedPlan_FieldSubPath {
	return &AcceptedPlan_FieldSubPath{selector: AcceptedPlan_FieldPathSelectorExtensions, subPath: subPath}
}

func (s AcceptedPlanPathSelectorExtensions) WithSubValue(subPathValue common.Allowance_FieldPathValue) *AcceptedPlan_FieldSubPathValue {
	return &AcceptedPlan_FieldSubPathValue{AcceptedPlan_FieldPath: s.WithSubPath(subPathValue), subPathValue: subPathValue}
}

func (s AcceptedPlanPathSelectorExtensions) WithSubArrayOfValues(subPathArrayOfValues common.Allowance_FieldPathArrayOfValues) *AcceptedPlan_FieldSubPathArrayOfValues {
	return &AcceptedPlan_FieldSubPathArrayOfValues{AcceptedPlan_FieldPath: s.WithSubPath(subPathArrayOfValues), subPathArrayOfValues: subPathArrayOfValues}
}

func (s AcceptedPlanPathSelectorExtensions) WithSubArrayItemValue(subPathArrayItemValue common.Allowance_FieldPathArrayItemValue) *AcceptedPlan_FieldSubPathArrayItemValue {
	return &AcceptedPlan_FieldSubPathArrayItemValue{AcceptedPlan_FieldPath: s.WithSubPath(subPathArrayItemValue), subPathItemValue: subPathArrayItemValue}
}

func (AcceptedPlanPathSelectorExtensions) Resource() AcceptedPlanPathSelectorExtensionsResource {
	return AcceptedPlanPathSelectorExtensionsResource{}
}

func (AcceptedPlanPathSelectorExtensions) Value() AcceptedPlanPathSelectorExtensionsValue {
	return AcceptedPlanPathSelectorExtensionsValue{}
}

type AcceptedPlanPathSelectorExtensionsResource struct{}

func (AcceptedPlanPathSelectorExtensionsResource) FieldPath() *AcceptedPlan_FieldSubPath {
	return &AcceptedPlan_FieldSubPath{
		selector: AcceptedPlan_FieldPathSelectorExtensions,
		subPath:  common.NewAllowanceFieldPathBuilder().Resource().FieldPath(),
	}
}

func (s AcceptedPlanPathSelectorExtensionsResource) WithValue(value *meta_resource.Reference) *AcceptedPlan_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*AcceptedPlan_FieldSubPathValue)
}

func (s AcceptedPlanPathSelectorExtensionsResource) WithArrayOfValues(values []*meta_resource.Reference) *AcceptedPlan_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*AcceptedPlan_FieldSubPathArrayOfValues)
}

type AcceptedPlanPathSelectorExtensionsValue struct{}

func (AcceptedPlanPathSelectorExtensionsValue) FieldPath() *AcceptedPlan_FieldSubPath {
	return &AcceptedPlan_FieldSubPath{
		selector: AcceptedPlan_FieldPathSelectorExtensions,
		subPath:  common.NewAllowanceFieldPathBuilder().Value().FieldPath(),
	}
}

func (s AcceptedPlanPathSelectorExtensionsValue) WithValue(value int64) *AcceptedPlan_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*AcceptedPlan_FieldSubPathValue)
}

func (s AcceptedPlanPathSelectorExtensionsValue) WithArrayOfValues(values []int64) *AcceptedPlan_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*AcceptedPlan_FieldSubPathArrayOfValues)
}

type AcceptedPlanPathSelectorRegionalDistributions struct{}

func (AcceptedPlanPathSelectorRegionalDistributions) FieldPath() *AcceptedPlan_FieldTerminalPath {
	return &AcceptedPlan_FieldTerminalPath{selector: AcceptedPlan_FieldPathSelectorRegionalDistributions}
}

func (s AcceptedPlanPathSelectorRegionalDistributions) WithValue(value []*common.RegionalDistribution) *AcceptedPlan_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*AcceptedPlan_FieldTerminalPathValue)
}

func (s AcceptedPlanPathSelectorRegionalDistributions) WithArrayOfValues(values [][]*common.RegionalDistribution) *AcceptedPlan_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*AcceptedPlan_FieldTerminalPathArrayOfValues)
}

func (s AcceptedPlanPathSelectorRegionalDistributions) WithItemValue(value *common.RegionalDistribution) *AcceptedPlan_FieldTerminalPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*AcceptedPlan_FieldTerminalPathArrayItemValue)
}
func (AcceptedPlanPathSelectorRegionalDistributions) WithSubPath(subPath common.RegionalDistribution_FieldPath) *AcceptedPlan_FieldSubPath {
	return &AcceptedPlan_FieldSubPath{selector: AcceptedPlan_FieldPathSelectorRegionalDistributions, subPath: subPath}
}

func (s AcceptedPlanPathSelectorRegionalDistributions) WithSubValue(subPathValue common.RegionalDistribution_FieldPathValue) *AcceptedPlan_FieldSubPathValue {
	return &AcceptedPlan_FieldSubPathValue{AcceptedPlan_FieldPath: s.WithSubPath(subPathValue), subPathValue: subPathValue}
}

func (s AcceptedPlanPathSelectorRegionalDistributions) WithSubArrayOfValues(subPathArrayOfValues common.RegionalDistribution_FieldPathArrayOfValues) *AcceptedPlan_FieldSubPathArrayOfValues {
	return &AcceptedPlan_FieldSubPathArrayOfValues{AcceptedPlan_FieldPath: s.WithSubPath(subPathArrayOfValues), subPathArrayOfValues: subPathArrayOfValues}
}

func (s AcceptedPlanPathSelectorRegionalDistributions) WithSubArrayItemValue(subPathArrayItemValue common.RegionalDistribution_FieldPathArrayItemValue) *AcceptedPlan_FieldSubPathArrayItemValue {
	return &AcceptedPlan_FieldSubPathArrayItemValue{AcceptedPlan_FieldPath: s.WithSubPath(subPathArrayItemValue), subPathItemValue: subPathArrayItemValue}
}

func (AcceptedPlanPathSelectorRegionalDistributions) Resource() AcceptedPlanPathSelectorRegionalDistributionsResource {
	return AcceptedPlanPathSelectorRegionalDistributionsResource{}
}

func (AcceptedPlanPathSelectorRegionalDistributions) LimitsByRegion() AcceptedPlanPathSelectorRegionalDistributionsLimitsByRegion {
	return AcceptedPlanPathSelectorRegionalDistributionsLimitsByRegion{}
}

type AcceptedPlanPathSelectorRegionalDistributionsResource struct{}

func (AcceptedPlanPathSelectorRegionalDistributionsResource) FieldPath() *AcceptedPlan_FieldSubPath {
	return &AcceptedPlan_FieldSubPath{
		selector: AcceptedPlan_FieldPathSelectorRegionalDistributions,
		subPath:  common.NewRegionalDistributionFieldPathBuilder().Resource().FieldPath(),
	}
}

func (s AcceptedPlanPathSelectorRegionalDistributionsResource) WithValue(value *meta_resource.Reference) *AcceptedPlan_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*AcceptedPlan_FieldSubPathValue)
}

func (s AcceptedPlanPathSelectorRegionalDistributionsResource) WithArrayOfValues(values []*meta_resource.Reference) *AcceptedPlan_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*AcceptedPlan_FieldSubPathArrayOfValues)
}

type AcceptedPlanPathSelectorRegionalDistributionsLimitsByRegion struct{}

func (AcceptedPlanPathSelectorRegionalDistributionsLimitsByRegion) FieldPath() *AcceptedPlan_FieldSubPath {
	return &AcceptedPlan_FieldSubPath{
		selector: AcceptedPlan_FieldPathSelectorRegionalDistributions,
		subPath:  common.NewRegionalDistributionFieldPathBuilder().LimitsByRegion().FieldPath(),
	}
}

func (s AcceptedPlanPathSelectorRegionalDistributionsLimitsByRegion) WithValue(value map[string]int64) *AcceptedPlan_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*AcceptedPlan_FieldSubPathValue)
}

func (s AcceptedPlanPathSelectorRegionalDistributionsLimitsByRegion) WithArrayOfValues(values []map[string]int64) *AcceptedPlan_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*AcceptedPlan_FieldSubPathArrayOfValues)
}

func (AcceptedPlanPathSelectorRegionalDistributionsLimitsByRegion) WithKey(key string) AcceptedPlanMapPathSelectorRegionalDistributionsLimitsByRegion {
	return AcceptedPlanMapPathSelectorRegionalDistributionsLimitsByRegion{key: key}
}

type AcceptedPlanMapPathSelectorRegionalDistributionsLimitsByRegion struct {
	key string
}

func (s AcceptedPlanMapPathSelectorRegionalDistributionsLimitsByRegion) FieldPath() *AcceptedPlan_FieldSubPath {
	return &AcceptedPlan_FieldSubPath{
		selector: AcceptedPlan_FieldPathSelectorRegionalDistributions,
		subPath:  common.NewRegionalDistributionFieldPathBuilder().LimitsByRegion().WithKey(s.key).FieldPath(),
	}
}

func (s AcceptedPlanMapPathSelectorRegionalDistributionsLimitsByRegion) WithValue(value int64) *AcceptedPlan_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*AcceptedPlan_FieldSubPathValue)
}

func (s AcceptedPlanMapPathSelectorRegionalDistributionsLimitsByRegion) WithArrayOfValues(values []int64) *AcceptedPlan_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*AcceptedPlan_FieldSubPathArrayOfValues)
}

type AcceptedPlanPathSelectorAssignee struct{}

func (AcceptedPlanPathSelectorAssignee) FieldPath() *AcceptedPlan_FieldTerminalPath {
	return &AcceptedPlan_FieldTerminalPath{selector: AcceptedPlan_FieldPathSelectorAssignee}
}

func (s AcceptedPlanPathSelectorAssignee) WithValue(value *AcceptedPlan_Assignee) *AcceptedPlan_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*AcceptedPlan_FieldTerminalPathValue)
}

func (s AcceptedPlanPathSelectorAssignee) WithArrayOfValues(values []*AcceptedPlan_Assignee) *AcceptedPlan_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*AcceptedPlan_FieldTerminalPathArrayOfValues)
}

func (AcceptedPlanPathSelectorAssignee) WithSubPath(subPath AcceptedPlanAssignee_FieldPath) *AcceptedPlan_FieldSubPath {
	return &AcceptedPlan_FieldSubPath{selector: AcceptedPlan_FieldPathSelectorAssignee, subPath: subPath}
}

func (s AcceptedPlanPathSelectorAssignee) WithSubValue(subPathValue AcceptedPlanAssignee_FieldPathValue) *AcceptedPlan_FieldSubPathValue {
	return &AcceptedPlan_FieldSubPathValue{AcceptedPlan_FieldPath: s.WithSubPath(subPathValue), subPathValue: subPathValue}
}

func (s AcceptedPlanPathSelectorAssignee) WithSubArrayOfValues(subPathArrayOfValues AcceptedPlanAssignee_FieldPathArrayOfValues) *AcceptedPlan_FieldSubPathArrayOfValues {
	return &AcceptedPlan_FieldSubPathArrayOfValues{AcceptedPlan_FieldPath: s.WithSubPath(subPathArrayOfValues), subPathArrayOfValues: subPathArrayOfValues}
}

func (s AcceptedPlanPathSelectorAssignee) WithSubArrayItemValue(subPathArrayItemValue AcceptedPlanAssignee_FieldPathArrayItemValue) *AcceptedPlan_FieldSubPathArrayItemValue {
	return &AcceptedPlan_FieldSubPathArrayItemValue{AcceptedPlan_FieldPath: s.WithSubPath(subPathArrayItemValue), subPathItemValue: subPathArrayItemValue}
}

func (AcceptedPlanPathSelectorAssignee) ProjectAssignee() AcceptedPlanPathSelectorAssigneeProjectAssignee {
	return AcceptedPlanPathSelectorAssigneeProjectAssignee{}
}

func (AcceptedPlanPathSelectorAssignee) OrganizationAssignee() AcceptedPlanPathSelectorAssigneeOrganizationAssignee {
	return AcceptedPlanPathSelectorAssigneeOrganizationAssignee{}
}

func (AcceptedPlanPathSelectorAssignee) SystemAssignee() AcceptedPlanPathSelectorAssigneeSystemAssignee {
	return AcceptedPlanPathSelectorAssigneeSystemAssignee{}
}

type AcceptedPlanPathSelectorAssigneeProjectAssignee struct{}

func (AcceptedPlanPathSelectorAssigneeProjectAssignee) FieldPath() *AcceptedPlan_FieldSubPath {
	return &AcceptedPlan_FieldSubPath{
		selector: AcceptedPlan_FieldPathSelectorAssignee,
		subPath:  NewAcceptedPlanAssigneeFieldPathBuilder().ProjectAssignee().FieldPath(),
	}
}

func (s AcceptedPlanPathSelectorAssigneeProjectAssignee) WithValue(value *iam_project.Reference) *AcceptedPlan_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*AcceptedPlan_FieldSubPathValue)
}

func (s AcceptedPlanPathSelectorAssigneeProjectAssignee) WithArrayOfValues(values []*iam_project.Reference) *AcceptedPlan_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*AcceptedPlan_FieldSubPathArrayOfValues)
}

type AcceptedPlanPathSelectorAssigneeOrganizationAssignee struct{}

func (AcceptedPlanPathSelectorAssigneeOrganizationAssignee) FieldPath() *AcceptedPlan_FieldSubPath {
	return &AcceptedPlan_FieldSubPath{
		selector: AcceptedPlan_FieldPathSelectorAssignee,
		subPath:  NewAcceptedPlanAssigneeFieldPathBuilder().OrganizationAssignee().FieldPath(),
	}
}

func (s AcceptedPlanPathSelectorAssigneeOrganizationAssignee) WithValue(value *iam_organization.Reference) *AcceptedPlan_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*AcceptedPlan_FieldSubPathValue)
}

func (s AcceptedPlanPathSelectorAssigneeOrganizationAssignee) WithArrayOfValues(values []*iam_organization.Reference) *AcceptedPlan_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*AcceptedPlan_FieldSubPathArrayOfValues)
}

type AcceptedPlanPathSelectorAssigneeSystemAssignee struct{}

func (AcceptedPlanPathSelectorAssigneeSystemAssignee) FieldPath() *AcceptedPlan_FieldSubPath {
	return &AcceptedPlan_FieldSubPath{
		selector: AcceptedPlan_FieldPathSelectorAssignee,
		subPath:  NewAcceptedPlanAssigneeFieldPathBuilder().SystemAssignee().FieldPath(),
	}
}

func (s AcceptedPlanPathSelectorAssigneeSystemAssignee) WithValue(value bool) *AcceptedPlan_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*AcceptedPlan_FieldSubPathValue)
}

func (s AcceptedPlanPathSelectorAssigneeSystemAssignee) WithArrayOfValues(values []bool) *AcceptedPlan_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*AcceptedPlan_FieldSubPathArrayOfValues)
}

type AcceptedPlanPathSelectorMetadata struct{}

func (AcceptedPlanPathSelectorMetadata) FieldPath() *AcceptedPlan_FieldTerminalPath {
	return &AcceptedPlan_FieldTerminalPath{selector: AcceptedPlan_FieldPathSelectorMetadata}
}

func (s AcceptedPlanPathSelectorMetadata) WithValue(value *meta.Meta) *AcceptedPlan_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*AcceptedPlan_FieldTerminalPathValue)
}

func (s AcceptedPlanPathSelectorMetadata) WithArrayOfValues(values []*meta.Meta) *AcceptedPlan_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*AcceptedPlan_FieldTerminalPathArrayOfValues)
}

func (AcceptedPlanPathSelectorMetadata) WithSubPath(subPath meta.Meta_FieldPath) *AcceptedPlan_FieldSubPath {
	return &AcceptedPlan_FieldSubPath{selector: AcceptedPlan_FieldPathSelectorMetadata, subPath: subPath}
}

func (s AcceptedPlanPathSelectorMetadata) WithSubValue(subPathValue meta.Meta_FieldPathValue) *AcceptedPlan_FieldSubPathValue {
	return &AcceptedPlan_FieldSubPathValue{AcceptedPlan_FieldPath: s.WithSubPath(subPathValue), subPathValue: subPathValue}
}

func (s AcceptedPlanPathSelectorMetadata) WithSubArrayOfValues(subPathArrayOfValues meta.Meta_FieldPathArrayOfValues) *AcceptedPlan_FieldSubPathArrayOfValues {
	return &AcceptedPlan_FieldSubPathArrayOfValues{AcceptedPlan_FieldPath: s.WithSubPath(subPathArrayOfValues), subPathArrayOfValues: subPathArrayOfValues}
}

func (s AcceptedPlanPathSelectorMetadata) WithSubArrayItemValue(subPathArrayItemValue meta.Meta_FieldPathArrayItemValue) *AcceptedPlan_FieldSubPathArrayItemValue {
	return &AcceptedPlan_FieldSubPathArrayItemValue{AcceptedPlan_FieldPath: s.WithSubPath(subPathArrayItemValue), subPathItemValue: subPathArrayItemValue}
}

func (AcceptedPlanPathSelectorMetadata) CreateTime() AcceptedPlanPathSelectorMetadataCreateTime {
	return AcceptedPlanPathSelectorMetadataCreateTime{}
}

func (AcceptedPlanPathSelectorMetadata) UpdateTime() AcceptedPlanPathSelectorMetadataUpdateTime {
	return AcceptedPlanPathSelectorMetadataUpdateTime{}
}

func (AcceptedPlanPathSelectorMetadata) DeleteTime() AcceptedPlanPathSelectorMetadataDeleteTime {
	return AcceptedPlanPathSelectorMetadataDeleteTime{}
}

func (AcceptedPlanPathSelectorMetadata) Uuid() AcceptedPlanPathSelectorMetadataUuid {
	return AcceptedPlanPathSelectorMetadataUuid{}
}

func (AcceptedPlanPathSelectorMetadata) Tags() AcceptedPlanPathSelectorMetadataTags {
	return AcceptedPlanPathSelectorMetadataTags{}
}

func (AcceptedPlanPathSelectorMetadata) Labels() AcceptedPlanPathSelectorMetadataLabels {
	return AcceptedPlanPathSelectorMetadataLabels{}
}

func (AcceptedPlanPathSelectorMetadata) Annotations() AcceptedPlanPathSelectorMetadataAnnotations {
	return AcceptedPlanPathSelectorMetadataAnnotations{}
}

func (AcceptedPlanPathSelectorMetadata) Generation() AcceptedPlanPathSelectorMetadataGeneration {
	return AcceptedPlanPathSelectorMetadataGeneration{}
}

func (AcceptedPlanPathSelectorMetadata) ResourceVersion() AcceptedPlanPathSelectorMetadataResourceVersion {
	return AcceptedPlanPathSelectorMetadataResourceVersion{}
}

func (AcceptedPlanPathSelectorMetadata) OwnerReferences() AcceptedPlanPathSelectorMetadataOwnerReferences {
	return AcceptedPlanPathSelectorMetadataOwnerReferences{}
}

func (AcceptedPlanPathSelectorMetadata) Shards() AcceptedPlanPathSelectorMetadataShards {
	return AcceptedPlanPathSelectorMetadataShards{}
}

func (AcceptedPlanPathSelectorMetadata) Syncing() AcceptedPlanPathSelectorMetadataSyncing {
	return AcceptedPlanPathSelectorMetadataSyncing{}
}

func (AcceptedPlanPathSelectorMetadata) Lifecycle() AcceptedPlanPathSelectorMetadataLifecycle {
	return AcceptedPlanPathSelectorMetadataLifecycle{}
}

func (AcceptedPlanPathSelectorMetadata) Services() AcceptedPlanPathSelectorMetadataServices {
	return AcceptedPlanPathSelectorMetadataServices{}
}

type AcceptedPlanPathSelectorMetadataCreateTime struct{}

func (AcceptedPlanPathSelectorMetadataCreateTime) FieldPath() *AcceptedPlan_FieldSubPath {
	return &AcceptedPlan_FieldSubPath{
		selector: AcceptedPlan_FieldPathSelectorMetadata,
		subPath:  meta.NewMetaFieldPathBuilder().CreateTime().FieldPath(),
	}
}

func (s AcceptedPlanPathSelectorMetadataCreateTime) WithValue(value *timestamppb.Timestamp) *AcceptedPlan_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*AcceptedPlan_FieldSubPathValue)
}

func (s AcceptedPlanPathSelectorMetadataCreateTime) WithArrayOfValues(values []*timestamppb.Timestamp) *AcceptedPlan_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*AcceptedPlan_FieldSubPathArrayOfValues)
}

type AcceptedPlanPathSelectorMetadataUpdateTime struct{}

func (AcceptedPlanPathSelectorMetadataUpdateTime) FieldPath() *AcceptedPlan_FieldSubPath {
	return &AcceptedPlan_FieldSubPath{
		selector: AcceptedPlan_FieldPathSelectorMetadata,
		subPath:  meta.NewMetaFieldPathBuilder().UpdateTime().FieldPath(),
	}
}

func (s AcceptedPlanPathSelectorMetadataUpdateTime) WithValue(value *timestamppb.Timestamp) *AcceptedPlan_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*AcceptedPlan_FieldSubPathValue)
}

func (s AcceptedPlanPathSelectorMetadataUpdateTime) WithArrayOfValues(values []*timestamppb.Timestamp) *AcceptedPlan_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*AcceptedPlan_FieldSubPathArrayOfValues)
}

type AcceptedPlanPathSelectorMetadataDeleteTime struct{}

func (AcceptedPlanPathSelectorMetadataDeleteTime) FieldPath() *AcceptedPlan_FieldSubPath {
	return &AcceptedPlan_FieldSubPath{
		selector: AcceptedPlan_FieldPathSelectorMetadata,
		subPath:  meta.NewMetaFieldPathBuilder().DeleteTime().FieldPath(),
	}
}

func (s AcceptedPlanPathSelectorMetadataDeleteTime) WithValue(value *timestamppb.Timestamp) *AcceptedPlan_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*AcceptedPlan_FieldSubPathValue)
}

func (s AcceptedPlanPathSelectorMetadataDeleteTime) WithArrayOfValues(values []*timestamppb.Timestamp) *AcceptedPlan_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*AcceptedPlan_FieldSubPathArrayOfValues)
}

type AcceptedPlanPathSelectorMetadataUuid struct{}

func (AcceptedPlanPathSelectorMetadataUuid) FieldPath() *AcceptedPlan_FieldSubPath {
	return &AcceptedPlan_FieldSubPath{
		selector: AcceptedPlan_FieldPathSelectorMetadata,
		subPath:  meta.NewMetaFieldPathBuilder().Uuid().FieldPath(),
	}
}

func (s AcceptedPlanPathSelectorMetadataUuid) WithValue(value string) *AcceptedPlan_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*AcceptedPlan_FieldSubPathValue)
}

func (s AcceptedPlanPathSelectorMetadataUuid) WithArrayOfValues(values []string) *AcceptedPlan_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*AcceptedPlan_FieldSubPathArrayOfValues)
}

type AcceptedPlanPathSelectorMetadataTags struct{}

func (AcceptedPlanPathSelectorMetadataTags) FieldPath() *AcceptedPlan_FieldSubPath {
	return &AcceptedPlan_FieldSubPath{
		selector: AcceptedPlan_FieldPathSelectorMetadata,
		subPath:  meta.NewMetaFieldPathBuilder().Tags().FieldPath(),
	}
}

func (s AcceptedPlanPathSelectorMetadataTags) WithValue(value []string) *AcceptedPlan_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*AcceptedPlan_FieldSubPathValue)
}

func (s AcceptedPlanPathSelectorMetadataTags) WithArrayOfValues(values [][]string) *AcceptedPlan_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*AcceptedPlan_FieldSubPathArrayOfValues)
}

func (s AcceptedPlanPathSelectorMetadataTags) WithItemValue(value string) *AcceptedPlan_FieldSubPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*AcceptedPlan_FieldSubPathArrayItemValue)
}

type AcceptedPlanPathSelectorMetadataLabels struct{}

func (AcceptedPlanPathSelectorMetadataLabels) FieldPath() *AcceptedPlan_FieldSubPath {
	return &AcceptedPlan_FieldSubPath{
		selector: AcceptedPlan_FieldPathSelectorMetadata,
		subPath:  meta.NewMetaFieldPathBuilder().Labels().FieldPath(),
	}
}

func (s AcceptedPlanPathSelectorMetadataLabels) WithValue(value map[string]string) *AcceptedPlan_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*AcceptedPlan_FieldSubPathValue)
}

func (s AcceptedPlanPathSelectorMetadataLabels) WithArrayOfValues(values []map[string]string) *AcceptedPlan_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*AcceptedPlan_FieldSubPathArrayOfValues)
}

func (AcceptedPlanPathSelectorMetadataLabels) WithKey(key string) AcceptedPlanMapPathSelectorMetadataLabels {
	return AcceptedPlanMapPathSelectorMetadataLabels{key: key}
}

type AcceptedPlanMapPathSelectorMetadataLabels struct {
	key string
}

func (s AcceptedPlanMapPathSelectorMetadataLabels) FieldPath() *AcceptedPlan_FieldSubPath {
	return &AcceptedPlan_FieldSubPath{
		selector: AcceptedPlan_FieldPathSelectorMetadata,
		subPath:  meta.NewMetaFieldPathBuilder().Labels().WithKey(s.key).FieldPath(),
	}
}

func (s AcceptedPlanMapPathSelectorMetadataLabels) WithValue(value string) *AcceptedPlan_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*AcceptedPlan_FieldSubPathValue)
}

func (s AcceptedPlanMapPathSelectorMetadataLabels) WithArrayOfValues(values []string) *AcceptedPlan_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*AcceptedPlan_FieldSubPathArrayOfValues)
}

type AcceptedPlanPathSelectorMetadataAnnotations struct{}

func (AcceptedPlanPathSelectorMetadataAnnotations) FieldPath() *AcceptedPlan_FieldSubPath {
	return &AcceptedPlan_FieldSubPath{
		selector: AcceptedPlan_FieldPathSelectorMetadata,
		subPath:  meta.NewMetaFieldPathBuilder().Annotations().FieldPath(),
	}
}

func (s AcceptedPlanPathSelectorMetadataAnnotations) WithValue(value map[string]string) *AcceptedPlan_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*AcceptedPlan_FieldSubPathValue)
}

func (s AcceptedPlanPathSelectorMetadataAnnotations) WithArrayOfValues(values []map[string]string) *AcceptedPlan_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*AcceptedPlan_FieldSubPathArrayOfValues)
}

func (AcceptedPlanPathSelectorMetadataAnnotations) WithKey(key string) AcceptedPlanMapPathSelectorMetadataAnnotations {
	return AcceptedPlanMapPathSelectorMetadataAnnotations{key: key}
}

type AcceptedPlanMapPathSelectorMetadataAnnotations struct {
	key string
}

func (s AcceptedPlanMapPathSelectorMetadataAnnotations) FieldPath() *AcceptedPlan_FieldSubPath {
	return &AcceptedPlan_FieldSubPath{
		selector: AcceptedPlan_FieldPathSelectorMetadata,
		subPath:  meta.NewMetaFieldPathBuilder().Annotations().WithKey(s.key).FieldPath(),
	}
}

func (s AcceptedPlanMapPathSelectorMetadataAnnotations) WithValue(value string) *AcceptedPlan_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*AcceptedPlan_FieldSubPathValue)
}

func (s AcceptedPlanMapPathSelectorMetadataAnnotations) WithArrayOfValues(values []string) *AcceptedPlan_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*AcceptedPlan_FieldSubPathArrayOfValues)
}

type AcceptedPlanPathSelectorMetadataGeneration struct{}

func (AcceptedPlanPathSelectorMetadataGeneration) FieldPath() *AcceptedPlan_FieldSubPath {
	return &AcceptedPlan_FieldSubPath{
		selector: AcceptedPlan_FieldPathSelectorMetadata,
		subPath:  meta.NewMetaFieldPathBuilder().Generation().FieldPath(),
	}
}

func (s AcceptedPlanPathSelectorMetadataGeneration) WithValue(value int64) *AcceptedPlan_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*AcceptedPlan_FieldSubPathValue)
}

func (s AcceptedPlanPathSelectorMetadataGeneration) WithArrayOfValues(values []int64) *AcceptedPlan_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*AcceptedPlan_FieldSubPathArrayOfValues)
}

type AcceptedPlanPathSelectorMetadataResourceVersion struct{}

func (AcceptedPlanPathSelectorMetadataResourceVersion) FieldPath() *AcceptedPlan_FieldSubPath {
	return &AcceptedPlan_FieldSubPath{
		selector: AcceptedPlan_FieldPathSelectorMetadata,
		subPath:  meta.NewMetaFieldPathBuilder().ResourceVersion().FieldPath(),
	}
}

func (s AcceptedPlanPathSelectorMetadataResourceVersion) WithValue(value string) *AcceptedPlan_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*AcceptedPlan_FieldSubPathValue)
}

func (s AcceptedPlanPathSelectorMetadataResourceVersion) WithArrayOfValues(values []string) *AcceptedPlan_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*AcceptedPlan_FieldSubPathArrayOfValues)
}

type AcceptedPlanPathSelectorMetadataOwnerReferences struct{}

func (AcceptedPlanPathSelectorMetadataOwnerReferences) FieldPath() *AcceptedPlan_FieldSubPath {
	return &AcceptedPlan_FieldSubPath{
		selector: AcceptedPlan_FieldPathSelectorMetadata,
		subPath:  meta.NewMetaFieldPathBuilder().OwnerReferences().FieldPath(),
	}
}

func (s AcceptedPlanPathSelectorMetadataOwnerReferences) WithValue(value []*meta.OwnerReference) *AcceptedPlan_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*AcceptedPlan_FieldSubPathValue)
}

func (s AcceptedPlanPathSelectorMetadataOwnerReferences) WithArrayOfValues(values [][]*meta.OwnerReference) *AcceptedPlan_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*AcceptedPlan_FieldSubPathArrayOfValues)
}

func (s AcceptedPlanPathSelectorMetadataOwnerReferences) WithItemValue(value *meta.OwnerReference) *AcceptedPlan_FieldSubPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*AcceptedPlan_FieldSubPathArrayItemValue)
}

func (AcceptedPlanPathSelectorMetadataOwnerReferences) Kind() AcceptedPlanPathSelectorMetadataOwnerReferencesKind {
	return AcceptedPlanPathSelectorMetadataOwnerReferencesKind{}
}

func (AcceptedPlanPathSelectorMetadataOwnerReferences) Version() AcceptedPlanPathSelectorMetadataOwnerReferencesVersion {
	return AcceptedPlanPathSelectorMetadataOwnerReferencesVersion{}
}

func (AcceptedPlanPathSelectorMetadataOwnerReferences) Name() AcceptedPlanPathSelectorMetadataOwnerReferencesName {
	return AcceptedPlanPathSelectorMetadataOwnerReferencesName{}
}

func (AcceptedPlanPathSelectorMetadataOwnerReferences) Region() AcceptedPlanPathSelectorMetadataOwnerReferencesRegion {
	return AcceptedPlanPathSelectorMetadataOwnerReferencesRegion{}
}

func (AcceptedPlanPathSelectorMetadataOwnerReferences) Controller() AcceptedPlanPathSelectorMetadataOwnerReferencesController {
	return AcceptedPlanPathSelectorMetadataOwnerReferencesController{}
}

func (AcceptedPlanPathSelectorMetadataOwnerReferences) RequiresOwnerReference() AcceptedPlanPathSelectorMetadataOwnerReferencesRequiresOwnerReference {
	return AcceptedPlanPathSelectorMetadataOwnerReferencesRequiresOwnerReference{}
}

func (AcceptedPlanPathSelectorMetadataOwnerReferences) UnsetOnDelete() AcceptedPlanPathSelectorMetadataOwnerReferencesUnsetOnDelete {
	return AcceptedPlanPathSelectorMetadataOwnerReferencesUnsetOnDelete{}
}

type AcceptedPlanPathSelectorMetadataOwnerReferencesKind struct{}

func (AcceptedPlanPathSelectorMetadataOwnerReferencesKind) FieldPath() *AcceptedPlan_FieldSubPath {
	return &AcceptedPlan_FieldSubPath{
		selector: AcceptedPlan_FieldPathSelectorMetadata,
		subPath:  meta.NewMetaFieldPathBuilder().OwnerReferences().Kind().FieldPath(),
	}
}

func (s AcceptedPlanPathSelectorMetadataOwnerReferencesKind) WithValue(value string) *AcceptedPlan_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*AcceptedPlan_FieldSubPathValue)
}

func (s AcceptedPlanPathSelectorMetadataOwnerReferencesKind) WithArrayOfValues(values []string) *AcceptedPlan_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*AcceptedPlan_FieldSubPathArrayOfValues)
}

type AcceptedPlanPathSelectorMetadataOwnerReferencesVersion struct{}

func (AcceptedPlanPathSelectorMetadataOwnerReferencesVersion) FieldPath() *AcceptedPlan_FieldSubPath {
	return &AcceptedPlan_FieldSubPath{
		selector: AcceptedPlan_FieldPathSelectorMetadata,
		subPath:  meta.NewMetaFieldPathBuilder().OwnerReferences().Version().FieldPath(),
	}
}

func (s AcceptedPlanPathSelectorMetadataOwnerReferencesVersion) WithValue(value string) *AcceptedPlan_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*AcceptedPlan_FieldSubPathValue)
}

func (s AcceptedPlanPathSelectorMetadataOwnerReferencesVersion) WithArrayOfValues(values []string) *AcceptedPlan_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*AcceptedPlan_FieldSubPathArrayOfValues)
}

type AcceptedPlanPathSelectorMetadataOwnerReferencesName struct{}

func (AcceptedPlanPathSelectorMetadataOwnerReferencesName) FieldPath() *AcceptedPlan_FieldSubPath {
	return &AcceptedPlan_FieldSubPath{
		selector: AcceptedPlan_FieldPathSelectorMetadata,
		subPath:  meta.NewMetaFieldPathBuilder().OwnerReferences().Name().FieldPath(),
	}
}

func (s AcceptedPlanPathSelectorMetadataOwnerReferencesName) WithValue(value string) *AcceptedPlan_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*AcceptedPlan_FieldSubPathValue)
}

func (s AcceptedPlanPathSelectorMetadataOwnerReferencesName) WithArrayOfValues(values []string) *AcceptedPlan_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*AcceptedPlan_FieldSubPathArrayOfValues)
}

type AcceptedPlanPathSelectorMetadataOwnerReferencesRegion struct{}

func (AcceptedPlanPathSelectorMetadataOwnerReferencesRegion) FieldPath() *AcceptedPlan_FieldSubPath {
	return &AcceptedPlan_FieldSubPath{
		selector: AcceptedPlan_FieldPathSelectorMetadata,
		subPath:  meta.NewMetaFieldPathBuilder().OwnerReferences().Region().FieldPath(),
	}
}

func (s AcceptedPlanPathSelectorMetadataOwnerReferencesRegion) WithValue(value string) *AcceptedPlan_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*AcceptedPlan_FieldSubPathValue)
}

func (s AcceptedPlanPathSelectorMetadataOwnerReferencesRegion) WithArrayOfValues(values []string) *AcceptedPlan_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*AcceptedPlan_FieldSubPathArrayOfValues)
}

type AcceptedPlanPathSelectorMetadataOwnerReferencesController struct{}

func (AcceptedPlanPathSelectorMetadataOwnerReferencesController) FieldPath() *AcceptedPlan_FieldSubPath {
	return &AcceptedPlan_FieldSubPath{
		selector: AcceptedPlan_FieldPathSelectorMetadata,
		subPath:  meta.NewMetaFieldPathBuilder().OwnerReferences().Controller().FieldPath(),
	}
}

func (s AcceptedPlanPathSelectorMetadataOwnerReferencesController) WithValue(value bool) *AcceptedPlan_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*AcceptedPlan_FieldSubPathValue)
}

func (s AcceptedPlanPathSelectorMetadataOwnerReferencesController) WithArrayOfValues(values []bool) *AcceptedPlan_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*AcceptedPlan_FieldSubPathArrayOfValues)
}

type AcceptedPlanPathSelectorMetadataOwnerReferencesRequiresOwnerReference struct{}

func (AcceptedPlanPathSelectorMetadataOwnerReferencesRequiresOwnerReference) FieldPath() *AcceptedPlan_FieldSubPath {
	return &AcceptedPlan_FieldSubPath{
		selector: AcceptedPlan_FieldPathSelectorMetadata,
		subPath:  meta.NewMetaFieldPathBuilder().OwnerReferences().RequiresOwnerReference().FieldPath(),
	}
}

func (s AcceptedPlanPathSelectorMetadataOwnerReferencesRequiresOwnerReference) WithValue(value bool) *AcceptedPlan_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*AcceptedPlan_FieldSubPathValue)
}

func (s AcceptedPlanPathSelectorMetadataOwnerReferencesRequiresOwnerReference) WithArrayOfValues(values []bool) *AcceptedPlan_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*AcceptedPlan_FieldSubPathArrayOfValues)
}

type AcceptedPlanPathSelectorMetadataOwnerReferencesUnsetOnDelete struct{}

func (AcceptedPlanPathSelectorMetadataOwnerReferencesUnsetOnDelete) FieldPath() *AcceptedPlan_FieldSubPath {
	return &AcceptedPlan_FieldSubPath{
		selector: AcceptedPlan_FieldPathSelectorMetadata,
		subPath:  meta.NewMetaFieldPathBuilder().OwnerReferences().UnsetOnDelete().FieldPath(),
	}
}

func (s AcceptedPlanPathSelectorMetadataOwnerReferencesUnsetOnDelete) WithValue(value bool) *AcceptedPlan_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*AcceptedPlan_FieldSubPathValue)
}

func (s AcceptedPlanPathSelectorMetadataOwnerReferencesUnsetOnDelete) WithArrayOfValues(values []bool) *AcceptedPlan_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*AcceptedPlan_FieldSubPathArrayOfValues)
}

type AcceptedPlanPathSelectorMetadataShards struct{}

func (AcceptedPlanPathSelectorMetadataShards) FieldPath() *AcceptedPlan_FieldSubPath {
	return &AcceptedPlan_FieldSubPath{
		selector: AcceptedPlan_FieldPathSelectorMetadata,
		subPath:  meta.NewMetaFieldPathBuilder().Shards().FieldPath(),
	}
}

func (s AcceptedPlanPathSelectorMetadataShards) WithValue(value map[string]int64) *AcceptedPlan_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*AcceptedPlan_FieldSubPathValue)
}

func (s AcceptedPlanPathSelectorMetadataShards) WithArrayOfValues(values []map[string]int64) *AcceptedPlan_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*AcceptedPlan_FieldSubPathArrayOfValues)
}

func (AcceptedPlanPathSelectorMetadataShards) WithKey(key string) AcceptedPlanMapPathSelectorMetadataShards {
	return AcceptedPlanMapPathSelectorMetadataShards{key: key}
}

type AcceptedPlanMapPathSelectorMetadataShards struct {
	key string
}

func (s AcceptedPlanMapPathSelectorMetadataShards) FieldPath() *AcceptedPlan_FieldSubPath {
	return &AcceptedPlan_FieldSubPath{
		selector: AcceptedPlan_FieldPathSelectorMetadata,
		subPath:  meta.NewMetaFieldPathBuilder().Shards().WithKey(s.key).FieldPath(),
	}
}

func (s AcceptedPlanMapPathSelectorMetadataShards) WithValue(value int64) *AcceptedPlan_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*AcceptedPlan_FieldSubPathValue)
}

func (s AcceptedPlanMapPathSelectorMetadataShards) WithArrayOfValues(values []int64) *AcceptedPlan_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*AcceptedPlan_FieldSubPathArrayOfValues)
}

type AcceptedPlanPathSelectorMetadataSyncing struct{}

func (AcceptedPlanPathSelectorMetadataSyncing) FieldPath() *AcceptedPlan_FieldSubPath {
	return &AcceptedPlan_FieldSubPath{
		selector: AcceptedPlan_FieldPathSelectorMetadata,
		subPath:  meta.NewMetaFieldPathBuilder().Syncing().FieldPath(),
	}
}

func (s AcceptedPlanPathSelectorMetadataSyncing) WithValue(value *meta.SyncingMeta) *AcceptedPlan_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*AcceptedPlan_FieldSubPathValue)
}

func (s AcceptedPlanPathSelectorMetadataSyncing) WithArrayOfValues(values []*meta.SyncingMeta) *AcceptedPlan_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*AcceptedPlan_FieldSubPathArrayOfValues)
}

func (AcceptedPlanPathSelectorMetadataSyncing) OwningRegion() AcceptedPlanPathSelectorMetadataSyncingOwningRegion {
	return AcceptedPlanPathSelectorMetadataSyncingOwningRegion{}
}

func (AcceptedPlanPathSelectorMetadataSyncing) Regions() AcceptedPlanPathSelectorMetadataSyncingRegions {
	return AcceptedPlanPathSelectorMetadataSyncingRegions{}
}

type AcceptedPlanPathSelectorMetadataSyncingOwningRegion struct{}

func (AcceptedPlanPathSelectorMetadataSyncingOwningRegion) FieldPath() *AcceptedPlan_FieldSubPath {
	return &AcceptedPlan_FieldSubPath{
		selector: AcceptedPlan_FieldPathSelectorMetadata,
		subPath:  meta.NewMetaFieldPathBuilder().Syncing().OwningRegion().FieldPath(),
	}
}

func (s AcceptedPlanPathSelectorMetadataSyncingOwningRegion) WithValue(value string) *AcceptedPlan_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*AcceptedPlan_FieldSubPathValue)
}

func (s AcceptedPlanPathSelectorMetadataSyncingOwningRegion) WithArrayOfValues(values []string) *AcceptedPlan_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*AcceptedPlan_FieldSubPathArrayOfValues)
}

type AcceptedPlanPathSelectorMetadataSyncingRegions struct{}

func (AcceptedPlanPathSelectorMetadataSyncingRegions) FieldPath() *AcceptedPlan_FieldSubPath {
	return &AcceptedPlan_FieldSubPath{
		selector: AcceptedPlan_FieldPathSelectorMetadata,
		subPath:  meta.NewMetaFieldPathBuilder().Syncing().Regions().FieldPath(),
	}
}

func (s AcceptedPlanPathSelectorMetadataSyncingRegions) WithValue(value []string) *AcceptedPlan_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*AcceptedPlan_FieldSubPathValue)
}

func (s AcceptedPlanPathSelectorMetadataSyncingRegions) WithArrayOfValues(values [][]string) *AcceptedPlan_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*AcceptedPlan_FieldSubPathArrayOfValues)
}

func (s AcceptedPlanPathSelectorMetadataSyncingRegions) WithItemValue(value string) *AcceptedPlan_FieldSubPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*AcceptedPlan_FieldSubPathArrayItemValue)
}

type AcceptedPlanPathSelectorMetadataLifecycle struct{}

func (AcceptedPlanPathSelectorMetadataLifecycle) FieldPath() *AcceptedPlan_FieldSubPath {
	return &AcceptedPlan_FieldSubPath{
		selector: AcceptedPlan_FieldPathSelectorMetadata,
		subPath:  meta.NewMetaFieldPathBuilder().Lifecycle().FieldPath(),
	}
}

func (s AcceptedPlanPathSelectorMetadataLifecycle) WithValue(value *meta.Lifecycle) *AcceptedPlan_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*AcceptedPlan_FieldSubPathValue)
}

func (s AcceptedPlanPathSelectorMetadataLifecycle) WithArrayOfValues(values []*meta.Lifecycle) *AcceptedPlan_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*AcceptedPlan_FieldSubPathArrayOfValues)
}

func (AcceptedPlanPathSelectorMetadataLifecycle) State() AcceptedPlanPathSelectorMetadataLifecycleState {
	return AcceptedPlanPathSelectorMetadataLifecycleState{}
}

func (AcceptedPlanPathSelectorMetadataLifecycle) BlockDeletion() AcceptedPlanPathSelectorMetadataLifecycleBlockDeletion {
	return AcceptedPlanPathSelectorMetadataLifecycleBlockDeletion{}
}

type AcceptedPlanPathSelectorMetadataLifecycleState struct{}

func (AcceptedPlanPathSelectorMetadataLifecycleState) FieldPath() *AcceptedPlan_FieldSubPath {
	return &AcceptedPlan_FieldSubPath{
		selector: AcceptedPlan_FieldPathSelectorMetadata,
		subPath:  meta.NewMetaFieldPathBuilder().Lifecycle().State().FieldPath(),
	}
}

func (s AcceptedPlanPathSelectorMetadataLifecycleState) WithValue(value meta.Lifecycle_State) *AcceptedPlan_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*AcceptedPlan_FieldSubPathValue)
}

func (s AcceptedPlanPathSelectorMetadataLifecycleState) WithArrayOfValues(values []meta.Lifecycle_State) *AcceptedPlan_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*AcceptedPlan_FieldSubPathArrayOfValues)
}

type AcceptedPlanPathSelectorMetadataLifecycleBlockDeletion struct{}

func (AcceptedPlanPathSelectorMetadataLifecycleBlockDeletion) FieldPath() *AcceptedPlan_FieldSubPath {
	return &AcceptedPlan_FieldSubPath{
		selector: AcceptedPlan_FieldPathSelectorMetadata,
		subPath:  meta.NewMetaFieldPathBuilder().Lifecycle().BlockDeletion().FieldPath(),
	}
}

func (s AcceptedPlanPathSelectorMetadataLifecycleBlockDeletion) WithValue(value bool) *AcceptedPlan_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*AcceptedPlan_FieldSubPathValue)
}

func (s AcceptedPlanPathSelectorMetadataLifecycleBlockDeletion) WithArrayOfValues(values []bool) *AcceptedPlan_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*AcceptedPlan_FieldSubPathArrayOfValues)
}

type AcceptedPlanPathSelectorMetadataServices struct{}

func (AcceptedPlanPathSelectorMetadataServices) FieldPath() *AcceptedPlan_FieldSubPath {
	return &AcceptedPlan_FieldSubPath{
		selector: AcceptedPlan_FieldPathSelectorMetadata,
		subPath:  meta.NewMetaFieldPathBuilder().Services().FieldPath(),
	}
}

func (s AcceptedPlanPathSelectorMetadataServices) WithValue(value *meta.ServicesInfo) *AcceptedPlan_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*AcceptedPlan_FieldSubPathValue)
}

func (s AcceptedPlanPathSelectorMetadataServices) WithArrayOfValues(values []*meta.ServicesInfo) *AcceptedPlan_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*AcceptedPlan_FieldSubPathArrayOfValues)
}

func (AcceptedPlanPathSelectorMetadataServices) OwningService() AcceptedPlanPathSelectorMetadataServicesOwningService {
	return AcceptedPlanPathSelectorMetadataServicesOwningService{}
}

func (AcceptedPlanPathSelectorMetadataServices) AllowedServices() AcceptedPlanPathSelectorMetadataServicesAllowedServices {
	return AcceptedPlanPathSelectorMetadataServicesAllowedServices{}
}

type AcceptedPlanPathSelectorMetadataServicesOwningService struct{}

func (AcceptedPlanPathSelectorMetadataServicesOwningService) FieldPath() *AcceptedPlan_FieldSubPath {
	return &AcceptedPlan_FieldSubPath{
		selector: AcceptedPlan_FieldPathSelectorMetadata,
		subPath:  meta.NewMetaFieldPathBuilder().Services().OwningService().FieldPath(),
	}
}

func (s AcceptedPlanPathSelectorMetadataServicesOwningService) WithValue(value string) *AcceptedPlan_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*AcceptedPlan_FieldSubPathValue)
}

func (s AcceptedPlanPathSelectorMetadataServicesOwningService) WithArrayOfValues(values []string) *AcceptedPlan_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*AcceptedPlan_FieldSubPathArrayOfValues)
}

type AcceptedPlanPathSelectorMetadataServicesAllowedServices struct{}

func (AcceptedPlanPathSelectorMetadataServicesAllowedServices) FieldPath() *AcceptedPlan_FieldSubPath {
	return &AcceptedPlan_FieldSubPath{
		selector: AcceptedPlan_FieldPathSelectorMetadata,
		subPath:  meta.NewMetaFieldPathBuilder().Services().AllowedServices().FieldPath(),
	}
}

func (s AcceptedPlanPathSelectorMetadataServicesAllowedServices) WithValue(value []string) *AcceptedPlan_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*AcceptedPlan_FieldSubPathValue)
}

func (s AcceptedPlanPathSelectorMetadataServicesAllowedServices) WithArrayOfValues(values [][]string) *AcceptedPlan_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*AcceptedPlan_FieldSubPathArrayOfValues)
}

func (s AcceptedPlanPathSelectorMetadataServicesAllowedServices) WithItemValue(value string) *AcceptedPlan_FieldSubPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*AcceptedPlan_FieldSubPathArrayItemValue)
}

type AcceptedPlanAssigneeFieldPathBuilder struct{}

func NewAcceptedPlanAssigneeFieldPathBuilder() AcceptedPlanAssigneeFieldPathBuilder {
	return AcceptedPlanAssigneeFieldPathBuilder{}
}
func (AcceptedPlanAssigneeFieldPathBuilder) ProjectAssignee() AcceptedPlan_AssigneePathSelectorProjectAssignee {
	return AcceptedPlan_AssigneePathSelectorProjectAssignee{}
}
func (AcceptedPlanAssigneeFieldPathBuilder) OrganizationAssignee() AcceptedPlan_AssigneePathSelectorOrganizationAssignee {
	return AcceptedPlan_AssigneePathSelectorOrganizationAssignee{}
}
func (AcceptedPlanAssigneeFieldPathBuilder) SystemAssignee() AcceptedPlan_AssigneePathSelectorSystemAssignee {
	return AcceptedPlan_AssigneePathSelectorSystemAssignee{}
}

type AcceptedPlan_AssigneePathSelectorProjectAssignee struct{}

func (AcceptedPlan_AssigneePathSelectorProjectAssignee) FieldPath() *AcceptedPlanAssignee_FieldTerminalPath {
	return &AcceptedPlanAssignee_FieldTerminalPath{selector: AcceptedPlanAssignee_FieldPathSelectorProjectAssignee}
}

func (s AcceptedPlan_AssigneePathSelectorProjectAssignee) WithValue(value *iam_project.Reference) *AcceptedPlanAssignee_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*AcceptedPlanAssignee_FieldTerminalPathValue)
}

func (s AcceptedPlan_AssigneePathSelectorProjectAssignee) WithArrayOfValues(values []*iam_project.Reference) *AcceptedPlanAssignee_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*AcceptedPlanAssignee_FieldTerminalPathArrayOfValues)
}

type AcceptedPlan_AssigneePathSelectorOrganizationAssignee struct{}

func (AcceptedPlan_AssigneePathSelectorOrganizationAssignee) FieldPath() *AcceptedPlanAssignee_FieldTerminalPath {
	return &AcceptedPlanAssignee_FieldTerminalPath{selector: AcceptedPlanAssignee_FieldPathSelectorOrganizationAssignee}
}

func (s AcceptedPlan_AssigneePathSelectorOrganizationAssignee) WithValue(value *iam_organization.Reference) *AcceptedPlanAssignee_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*AcceptedPlanAssignee_FieldTerminalPathValue)
}

func (s AcceptedPlan_AssigneePathSelectorOrganizationAssignee) WithArrayOfValues(values []*iam_organization.Reference) *AcceptedPlanAssignee_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*AcceptedPlanAssignee_FieldTerminalPathArrayOfValues)
}

type AcceptedPlan_AssigneePathSelectorSystemAssignee struct{}

func (AcceptedPlan_AssigneePathSelectorSystemAssignee) FieldPath() *AcceptedPlanAssignee_FieldTerminalPath {
	return &AcceptedPlanAssignee_FieldTerminalPath{selector: AcceptedPlanAssignee_FieldPathSelectorSystemAssignee}
}

func (s AcceptedPlan_AssigneePathSelectorSystemAssignee) WithValue(value bool) *AcceptedPlanAssignee_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*AcceptedPlanAssignee_FieldTerminalPathValue)
}

func (s AcceptedPlan_AssigneePathSelectorSystemAssignee) WithArrayOfValues(values []bool) *AcceptedPlanAssignee_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*AcceptedPlanAssignee_FieldTerminalPathArrayOfValues)
}
