// Code generated by protoc-gen-goten-object
// File: edgelq/limits/proto/v1/plan.proto
// DO NOT EDIT!!!

package plan

// proto imports
import (
	iam_iam_common "github.com/cloudwan/edgelq-sdk/iam/resources/v1/common"
	iam_organization "github.com/cloudwan/edgelq-sdk/iam/resources/v1/organization"
	meta_resource "github.com/cloudwan/goten-sdk/meta-service/resources/v1/resource"
	meta_service "github.com/cloudwan/goten-sdk/meta-service/resources/v1/service"
	meta "github.com/cloudwan/goten-sdk/types/meta"
	multi_region_policy "github.com/cloudwan/goten-sdk/types/multi_region_policy"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
)

// make sure we're using proto imports
var (
	_ = &iam_iam_common.PCR{}
	_ = &iam_organization.Organization{}
	_ = &timestamppb.Timestamp{}
	_ = &meta_resource.Resource{}
	_ = &meta_service.Service{}
	_ = &meta.Meta{}
	_ = &multi_region_policy.MultiRegionPolicy{}
)

type PlanFieldPathBuilder struct{}

func NewPlanFieldPathBuilder() PlanFieldPathBuilder {
	return PlanFieldPathBuilder{}
}
func (PlanFieldPathBuilder) Name() PlanPathSelectorName {
	return PlanPathSelectorName{}
}
func (PlanFieldPathBuilder) Metadata() PlanPathSelectorMetadata {
	return PlanPathSelectorMetadata{}
}
func (PlanFieldPathBuilder) DisplayName() PlanPathSelectorDisplayName {
	return PlanPathSelectorDisplayName{}
}
func (PlanFieldPathBuilder) Service() PlanPathSelectorService {
	return PlanPathSelectorService{}
}
func (PlanFieldPathBuilder) ResourceLimits() PlanPathSelectorResourceLimits {
	return PlanPathSelectorResourceLimits{}
}
func (PlanFieldPathBuilder) PlanLevel() PlanPathSelectorPlanLevel {
	return PlanPathSelectorPlanLevel{}
}
func (PlanFieldPathBuilder) BusinessTier() PlanPathSelectorBusinessTier {
	return PlanPathSelectorBusinessTier{}
}
func (PlanFieldPathBuilder) Generation() PlanPathSelectorGeneration {
	return PlanPathSelectorGeneration{}
}

type PlanPathSelectorName struct{}

func (PlanPathSelectorName) FieldPath() *Plan_FieldTerminalPath {
	return &Plan_FieldTerminalPath{selector: Plan_FieldPathSelectorName}
}

func (s PlanPathSelectorName) WithValue(value *Name) *Plan_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*Plan_FieldTerminalPathValue)
}

func (s PlanPathSelectorName) WithArrayOfValues(values []*Name) *Plan_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*Plan_FieldTerminalPathArrayOfValues)
}

type PlanPathSelectorMetadata struct{}

func (PlanPathSelectorMetadata) FieldPath() *Plan_FieldTerminalPath {
	return &Plan_FieldTerminalPath{selector: Plan_FieldPathSelectorMetadata}
}

func (s PlanPathSelectorMetadata) WithValue(value *meta.Meta) *Plan_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*Plan_FieldTerminalPathValue)
}

func (s PlanPathSelectorMetadata) WithArrayOfValues(values []*meta.Meta) *Plan_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*Plan_FieldTerminalPathArrayOfValues)
}

func (PlanPathSelectorMetadata) WithSubPath(subPath meta.Meta_FieldPath) *Plan_FieldSubPath {
	return &Plan_FieldSubPath{selector: Plan_FieldPathSelectorMetadata, subPath: subPath}
}

func (s PlanPathSelectorMetadata) WithSubValue(subPathValue meta.Meta_FieldPathValue) *Plan_FieldSubPathValue {
	return &Plan_FieldSubPathValue{Plan_FieldPath: s.WithSubPath(subPathValue), subPathValue: subPathValue}
}

func (s PlanPathSelectorMetadata) WithSubArrayOfValues(subPathArrayOfValues meta.Meta_FieldPathArrayOfValues) *Plan_FieldSubPathArrayOfValues {
	return &Plan_FieldSubPathArrayOfValues{Plan_FieldPath: s.WithSubPath(subPathArrayOfValues), subPathArrayOfValues: subPathArrayOfValues}
}

func (s PlanPathSelectorMetadata) WithSubArrayItemValue(subPathArrayItemValue meta.Meta_FieldPathArrayItemValue) *Plan_FieldSubPathArrayItemValue {
	return &Plan_FieldSubPathArrayItemValue{Plan_FieldPath: s.WithSubPath(subPathArrayItemValue), subPathItemValue: subPathArrayItemValue}
}

func (PlanPathSelectorMetadata) CreateTime() PlanPathSelectorMetadataCreateTime {
	return PlanPathSelectorMetadataCreateTime{}
}

func (PlanPathSelectorMetadata) UpdateTime() PlanPathSelectorMetadataUpdateTime {
	return PlanPathSelectorMetadataUpdateTime{}
}

func (PlanPathSelectorMetadata) DeleteTime() PlanPathSelectorMetadataDeleteTime {
	return PlanPathSelectorMetadataDeleteTime{}
}

func (PlanPathSelectorMetadata) Uuid() PlanPathSelectorMetadataUuid {
	return PlanPathSelectorMetadataUuid{}
}

func (PlanPathSelectorMetadata) Tags() PlanPathSelectorMetadataTags {
	return PlanPathSelectorMetadataTags{}
}

func (PlanPathSelectorMetadata) Labels() PlanPathSelectorMetadataLabels {
	return PlanPathSelectorMetadataLabels{}
}

func (PlanPathSelectorMetadata) Annotations() PlanPathSelectorMetadataAnnotations {
	return PlanPathSelectorMetadataAnnotations{}
}

func (PlanPathSelectorMetadata) Generation() PlanPathSelectorMetadataGeneration {
	return PlanPathSelectorMetadataGeneration{}
}

func (PlanPathSelectorMetadata) ResourceVersion() PlanPathSelectorMetadataResourceVersion {
	return PlanPathSelectorMetadataResourceVersion{}
}

func (PlanPathSelectorMetadata) OwnerReferences() PlanPathSelectorMetadataOwnerReferences {
	return PlanPathSelectorMetadataOwnerReferences{}
}

func (PlanPathSelectorMetadata) Shards() PlanPathSelectorMetadataShards {
	return PlanPathSelectorMetadataShards{}
}

func (PlanPathSelectorMetadata) Syncing() PlanPathSelectorMetadataSyncing {
	return PlanPathSelectorMetadataSyncing{}
}

func (PlanPathSelectorMetadata) Lifecycle() PlanPathSelectorMetadataLifecycle {
	return PlanPathSelectorMetadataLifecycle{}
}

func (PlanPathSelectorMetadata) Services() PlanPathSelectorMetadataServices {
	return PlanPathSelectorMetadataServices{}
}

type PlanPathSelectorMetadataCreateTime struct{}

func (PlanPathSelectorMetadataCreateTime) FieldPath() *Plan_FieldSubPath {
	return &Plan_FieldSubPath{
		selector: Plan_FieldPathSelectorMetadata,
		subPath:  meta.NewMetaFieldPathBuilder().CreateTime().FieldPath(),
	}
}

func (s PlanPathSelectorMetadataCreateTime) WithValue(value *timestamppb.Timestamp) *Plan_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*Plan_FieldSubPathValue)
}

func (s PlanPathSelectorMetadataCreateTime) WithArrayOfValues(values []*timestamppb.Timestamp) *Plan_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*Plan_FieldSubPathArrayOfValues)
}

type PlanPathSelectorMetadataUpdateTime struct{}

func (PlanPathSelectorMetadataUpdateTime) FieldPath() *Plan_FieldSubPath {
	return &Plan_FieldSubPath{
		selector: Plan_FieldPathSelectorMetadata,
		subPath:  meta.NewMetaFieldPathBuilder().UpdateTime().FieldPath(),
	}
}

func (s PlanPathSelectorMetadataUpdateTime) WithValue(value *timestamppb.Timestamp) *Plan_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*Plan_FieldSubPathValue)
}

func (s PlanPathSelectorMetadataUpdateTime) WithArrayOfValues(values []*timestamppb.Timestamp) *Plan_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*Plan_FieldSubPathArrayOfValues)
}

type PlanPathSelectorMetadataDeleteTime struct{}

func (PlanPathSelectorMetadataDeleteTime) FieldPath() *Plan_FieldSubPath {
	return &Plan_FieldSubPath{
		selector: Plan_FieldPathSelectorMetadata,
		subPath:  meta.NewMetaFieldPathBuilder().DeleteTime().FieldPath(),
	}
}

func (s PlanPathSelectorMetadataDeleteTime) WithValue(value *timestamppb.Timestamp) *Plan_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*Plan_FieldSubPathValue)
}

func (s PlanPathSelectorMetadataDeleteTime) WithArrayOfValues(values []*timestamppb.Timestamp) *Plan_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*Plan_FieldSubPathArrayOfValues)
}

type PlanPathSelectorMetadataUuid struct{}

func (PlanPathSelectorMetadataUuid) FieldPath() *Plan_FieldSubPath {
	return &Plan_FieldSubPath{
		selector: Plan_FieldPathSelectorMetadata,
		subPath:  meta.NewMetaFieldPathBuilder().Uuid().FieldPath(),
	}
}

func (s PlanPathSelectorMetadataUuid) WithValue(value string) *Plan_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*Plan_FieldSubPathValue)
}

func (s PlanPathSelectorMetadataUuid) WithArrayOfValues(values []string) *Plan_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*Plan_FieldSubPathArrayOfValues)
}

type PlanPathSelectorMetadataTags struct{}

func (PlanPathSelectorMetadataTags) FieldPath() *Plan_FieldSubPath {
	return &Plan_FieldSubPath{
		selector: Plan_FieldPathSelectorMetadata,
		subPath:  meta.NewMetaFieldPathBuilder().Tags().FieldPath(),
	}
}

func (s PlanPathSelectorMetadataTags) WithValue(value []string) *Plan_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*Plan_FieldSubPathValue)
}

func (s PlanPathSelectorMetadataTags) WithArrayOfValues(values [][]string) *Plan_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*Plan_FieldSubPathArrayOfValues)
}

func (s PlanPathSelectorMetadataTags) WithItemValue(value string) *Plan_FieldSubPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*Plan_FieldSubPathArrayItemValue)
}

type PlanPathSelectorMetadataLabels struct{}

func (PlanPathSelectorMetadataLabels) FieldPath() *Plan_FieldSubPath {
	return &Plan_FieldSubPath{
		selector: Plan_FieldPathSelectorMetadata,
		subPath:  meta.NewMetaFieldPathBuilder().Labels().FieldPath(),
	}
}

func (s PlanPathSelectorMetadataLabels) WithValue(value map[string]string) *Plan_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*Plan_FieldSubPathValue)
}

func (s PlanPathSelectorMetadataLabels) WithArrayOfValues(values []map[string]string) *Plan_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*Plan_FieldSubPathArrayOfValues)
}

func (PlanPathSelectorMetadataLabels) WithKey(key string) PlanMapPathSelectorMetadataLabels {
	return PlanMapPathSelectorMetadataLabels{key: key}
}

type PlanMapPathSelectorMetadataLabels struct {
	key string
}

func (s PlanMapPathSelectorMetadataLabels) FieldPath() *Plan_FieldSubPath {
	return &Plan_FieldSubPath{
		selector: Plan_FieldPathSelectorMetadata,
		subPath:  meta.NewMetaFieldPathBuilder().Labels().WithKey(s.key).FieldPath(),
	}
}

func (s PlanMapPathSelectorMetadataLabels) WithValue(value string) *Plan_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*Plan_FieldSubPathValue)
}

func (s PlanMapPathSelectorMetadataLabels) WithArrayOfValues(values []string) *Plan_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*Plan_FieldSubPathArrayOfValues)
}

type PlanPathSelectorMetadataAnnotations struct{}

func (PlanPathSelectorMetadataAnnotations) FieldPath() *Plan_FieldSubPath {
	return &Plan_FieldSubPath{
		selector: Plan_FieldPathSelectorMetadata,
		subPath:  meta.NewMetaFieldPathBuilder().Annotations().FieldPath(),
	}
}

func (s PlanPathSelectorMetadataAnnotations) WithValue(value map[string]string) *Plan_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*Plan_FieldSubPathValue)
}

func (s PlanPathSelectorMetadataAnnotations) WithArrayOfValues(values []map[string]string) *Plan_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*Plan_FieldSubPathArrayOfValues)
}

func (PlanPathSelectorMetadataAnnotations) WithKey(key string) PlanMapPathSelectorMetadataAnnotations {
	return PlanMapPathSelectorMetadataAnnotations{key: key}
}

type PlanMapPathSelectorMetadataAnnotations struct {
	key string
}

func (s PlanMapPathSelectorMetadataAnnotations) FieldPath() *Plan_FieldSubPath {
	return &Plan_FieldSubPath{
		selector: Plan_FieldPathSelectorMetadata,
		subPath:  meta.NewMetaFieldPathBuilder().Annotations().WithKey(s.key).FieldPath(),
	}
}

func (s PlanMapPathSelectorMetadataAnnotations) WithValue(value string) *Plan_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*Plan_FieldSubPathValue)
}

func (s PlanMapPathSelectorMetadataAnnotations) WithArrayOfValues(values []string) *Plan_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*Plan_FieldSubPathArrayOfValues)
}

type PlanPathSelectorMetadataGeneration struct{}

func (PlanPathSelectorMetadataGeneration) FieldPath() *Plan_FieldSubPath {
	return &Plan_FieldSubPath{
		selector: Plan_FieldPathSelectorMetadata,
		subPath:  meta.NewMetaFieldPathBuilder().Generation().FieldPath(),
	}
}

func (s PlanPathSelectorMetadataGeneration) WithValue(value int64) *Plan_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*Plan_FieldSubPathValue)
}

func (s PlanPathSelectorMetadataGeneration) WithArrayOfValues(values []int64) *Plan_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*Plan_FieldSubPathArrayOfValues)
}

type PlanPathSelectorMetadataResourceVersion struct{}

func (PlanPathSelectorMetadataResourceVersion) FieldPath() *Plan_FieldSubPath {
	return &Plan_FieldSubPath{
		selector: Plan_FieldPathSelectorMetadata,
		subPath:  meta.NewMetaFieldPathBuilder().ResourceVersion().FieldPath(),
	}
}

func (s PlanPathSelectorMetadataResourceVersion) WithValue(value string) *Plan_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*Plan_FieldSubPathValue)
}

func (s PlanPathSelectorMetadataResourceVersion) WithArrayOfValues(values []string) *Plan_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*Plan_FieldSubPathArrayOfValues)
}

type PlanPathSelectorMetadataOwnerReferences struct{}

func (PlanPathSelectorMetadataOwnerReferences) FieldPath() *Plan_FieldSubPath {
	return &Plan_FieldSubPath{
		selector: Plan_FieldPathSelectorMetadata,
		subPath:  meta.NewMetaFieldPathBuilder().OwnerReferences().FieldPath(),
	}
}

func (s PlanPathSelectorMetadataOwnerReferences) WithValue(value []*meta.OwnerReference) *Plan_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*Plan_FieldSubPathValue)
}

func (s PlanPathSelectorMetadataOwnerReferences) WithArrayOfValues(values [][]*meta.OwnerReference) *Plan_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*Plan_FieldSubPathArrayOfValues)
}

func (s PlanPathSelectorMetadataOwnerReferences) WithItemValue(value *meta.OwnerReference) *Plan_FieldSubPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*Plan_FieldSubPathArrayItemValue)
}

func (PlanPathSelectorMetadataOwnerReferences) Kind() PlanPathSelectorMetadataOwnerReferencesKind {
	return PlanPathSelectorMetadataOwnerReferencesKind{}
}

func (PlanPathSelectorMetadataOwnerReferences) Version() PlanPathSelectorMetadataOwnerReferencesVersion {
	return PlanPathSelectorMetadataOwnerReferencesVersion{}
}

func (PlanPathSelectorMetadataOwnerReferences) Name() PlanPathSelectorMetadataOwnerReferencesName {
	return PlanPathSelectorMetadataOwnerReferencesName{}
}

func (PlanPathSelectorMetadataOwnerReferences) Region() PlanPathSelectorMetadataOwnerReferencesRegion {
	return PlanPathSelectorMetadataOwnerReferencesRegion{}
}

func (PlanPathSelectorMetadataOwnerReferences) Controller() PlanPathSelectorMetadataOwnerReferencesController {
	return PlanPathSelectorMetadataOwnerReferencesController{}
}

func (PlanPathSelectorMetadataOwnerReferences) RequiresOwnerReference() PlanPathSelectorMetadataOwnerReferencesRequiresOwnerReference {
	return PlanPathSelectorMetadataOwnerReferencesRequiresOwnerReference{}
}

func (PlanPathSelectorMetadataOwnerReferences) UnsetOnDelete() PlanPathSelectorMetadataOwnerReferencesUnsetOnDelete {
	return PlanPathSelectorMetadataOwnerReferencesUnsetOnDelete{}
}

type PlanPathSelectorMetadataOwnerReferencesKind struct{}

func (PlanPathSelectorMetadataOwnerReferencesKind) FieldPath() *Plan_FieldSubPath {
	return &Plan_FieldSubPath{
		selector: Plan_FieldPathSelectorMetadata,
		subPath:  meta.NewMetaFieldPathBuilder().OwnerReferences().Kind().FieldPath(),
	}
}

func (s PlanPathSelectorMetadataOwnerReferencesKind) WithValue(value string) *Plan_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*Plan_FieldSubPathValue)
}

func (s PlanPathSelectorMetadataOwnerReferencesKind) WithArrayOfValues(values []string) *Plan_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*Plan_FieldSubPathArrayOfValues)
}

type PlanPathSelectorMetadataOwnerReferencesVersion struct{}

func (PlanPathSelectorMetadataOwnerReferencesVersion) FieldPath() *Plan_FieldSubPath {
	return &Plan_FieldSubPath{
		selector: Plan_FieldPathSelectorMetadata,
		subPath:  meta.NewMetaFieldPathBuilder().OwnerReferences().Version().FieldPath(),
	}
}

func (s PlanPathSelectorMetadataOwnerReferencesVersion) WithValue(value string) *Plan_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*Plan_FieldSubPathValue)
}

func (s PlanPathSelectorMetadataOwnerReferencesVersion) WithArrayOfValues(values []string) *Plan_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*Plan_FieldSubPathArrayOfValues)
}

type PlanPathSelectorMetadataOwnerReferencesName struct{}

func (PlanPathSelectorMetadataOwnerReferencesName) FieldPath() *Plan_FieldSubPath {
	return &Plan_FieldSubPath{
		selector: Plan_FieldPathSelectorMetadata,
		subPath:  meta.NewMetaFieldPathBuilder().OwnerReferences().Name().FieldPath(),
	}
}

func (s PlanPathSelectorMetadataOwnerReferencesName) WithValue(value string) *Plan_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*Plan_FieldSubPathValue)
}

func (s PlanPathSelectorMetadataOwnerReferencesName) WithArrayOfValues(values []string) *Plan_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*Plan_FieldSubPathArrayOfValues)
}

type PlanPathSelectorMetadataOwnerReferencesRegion struct{}

func (PlanPathSelectorMetadataOwnerReferencesRegion) FieldPath() *Plan_FieldSubPath {
	return &Plan_FieldSubPath{
		selector: Plan_FieldPathSelectorMetadata,
		subPath:  meta.NewMetaFieldPathBuilder().OwnerReferences().Region().FieldPath(),
	}
}

func (s PlanPathSelectorMetadataOwnerReferencesRegion) WithValue(value string) *Plan_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*Plan_FieldSubPathValue)
}

func (s PlanPathSelectorMetadataOwnerReferencesRegion) WithArrayOfValues(values []string) *Plan_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*Plan_FieldSubPathArrayOfValues)
}

type PlanPathSelectorMetadataOwnerReferencesController struct{}

func (PlanPathSelectorMetadataOwnerReferencesController) FieldPath() *Plan_FieldSubPath {
	return &Plan_FieldSubPath{
		selector: Plan_FieldPathSelectorMetadata,
		subPath:  meta.NewMetaFieldPathBuilder().OwnerReferences().Controller().FieldPath(),
	}
}

func (s PlanPathSelectorMetadataOwnerReferencesController) WithValue(value bool) *Plan_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*Plan_FieldSubPathValue)
}

func (s PlanPathSelectorMetadataOwnerReferencesController) WithArrayOfValues(values []bool) *Plan_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*Plan_FieldSubPathArrayOfValues)
}

type PlanPathSelectorMetadataOwnerReferencesRequiresOwnerReference struct{}

func (PlanPathSelectorMetadataOwnerReferencesRequiresOwnerReference) FieldPath() *Plan_FieldSubPath {
	return &Plan_FieldSubPath{
		selector: Plan_FieldPathSelectorMetadata,
		subPath:  meta.NewMetaFieldPathBuilder().OwnerReferences().RequiresOwnerReference().FieldPath(),
	}
}

func (s PlanPathSelectorMetadataOwnerReferencesRequiresOwnerReference) WithValue(value bool) *Plan_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*Plan_FieldSubPathValue)
}

func (s PlanPathSelectorMetadataOwnerReferencesRequiresOwnerReference) WithArrayOfValues(values []bool) *Plan_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*Plan_FieldSubPathArrayOfValues)
}

type PlanPathSelectorMetadataOwnerReferencesUnsetOnDelete struct{}

func (PlanPathSelectorMetadataOwnerReferencesUnsetOnDelete) FieldPath() *Plan_FieldSubPath {
	return &Plan_FieldSubPath{
		selector: Plan_FieldPathSelectorMetadata,
		subPath:  meta.NewMetaFieldPathBuilder().OwnerReferences().UnsetOnDelete().FieldPath(),
	}
}

func (s PlanPathSelectorMetadataOwnerReferencesUnsetOnDelete) WithValue(value bool) *Plan_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*Plan_FieldSubPathValue)
}

func (s PlanPathSelectorMetadataOwnerReferencesUnsetOnDelete) WithArrayOfValues(values []bool) *Plan_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*Plan_FieldSubPathArrayOfValues)
}

type PlanPathSelectorMetadataShards struct{}

func (PlanPathSelectorMetadataShards) FieldPath() *Plan_FieldSubPath {
	return &Plan_FieldSubPath{
		selector: Plan_FieldPathSelectorMetadata,
		subPath:  meta.NewMetaFieldPathBuilder().Shards().FieldPath(),
	}
}

func (s PlanPathSelectorMetadataShards) WithValue(value map[string]int64) *Plan_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*Plan_FieldSubPathValue)
}

func (s PlanPathSelectorMetadataShards) WithArrayOfValues(values []map[string]int64) *Plan_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*Plan_FieldSubPathArrayOfValues)
}

func (PlanPathSelectorMetadataShards) WithKey(key string) PlanMapPathSelectorMetadataShards {
	return PlanMapPathSelectorMetadataShards{key: key}
}

type PlanMapPathSelectorMetadataShards struct {
	key string
}

func (s PlanMapPathSelectorMetadataShards) FieldPath() *Plan_FieldSubPath {
	return &Plan_FieldSubPath{
		selector: Plan_FieldPathSelectorMetadata,
		subPath:  meta.NewMetaFieldPathBuilder().Shards().WithKey(s.key).FieldPath(),
	}
}

func (s PlanMapPathSelectorMetadataShards) WithValue(value int64) *Plan_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*Plan_FieldSubPathValue)
}

func (s PlanMapPathSelectorMetadataShards) WithArrayOfValues(values []int64) *Plan_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*Plan_FieldSubPathArrayOfValues)
}

type PlanPathSelectorMetadataSyncing struct{}

func (PlanPathSelectorMetadataSyncing) FieldPath() *Plan_FieldSubPath {
	return &Plan_FieldSubPath{
		selector: Plan_FieldPathSelectorMetadata,
		subPath:  meta.NewMetaFieldPathBuilder().Syncing().FieldPath(),
	}
}

func (s PlanPathSelectorMetadataSyncing) WithValue(value *meta.SyncingMeta) *Plan_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*Plan_FieldSubPathValue)
}

func (s PlanPathSelectorMetadataSyncing) WithArrayOfValues(values []*meta.SyncingMeta) *Plan_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*Plan_FieldSubPathArrayOfValues)
}

func (PlanPathSelectorMetadataSyncing) OwningRegion() PlanPathSelectorMetadataSyncingOwningRegion {
	return PlanPathSelectorMetadataSyncingOwningRegion{}
}

func (PlanPathSelectorMetadataSyncing) Regions() PlanPathSelectorMetadataSyncingRegions {
	return PlanPathSelectorMetadataSyncingRegions{}
}

type PlanPathSelectorMetadataSyncingOwningRegion struct{}

func (PlanPathSelectorMetadataSyncingOwningRegion) FieldPath() *Plan_FieldSubPath {
	return &Plan_FieldSubPath{
		selector: Plan_FieldPathSelectorMetadata,
		subPath:  meta.NewMetaFieldPathBuilder().Syncing().OwningRegion().FieldPath(),
	}
}

func (s PlanPathSelectorMetadataSyncingOwningRegion) WithValue(value string) *Plan_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*Plan_FieldSubPathValue)
}

func (s PlanPathSelectorMetadataSyncingOwningRegion) WithArrayOfValues(values []string) *Plan_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*Plan_FieldSubPathArrayOfValues)
}

type PlanPathSelectorMetadataSyncingRegions struct{}

func (PlanPathSelectorMetadataSyncingRegions) FieldPath() *Plan_FieldSubPath {
	return &Plan_FieldSubPath{
		selector: Plan_FieldPathSelectorMetadata,
		subPath:  meta.NewMetaFieldPathBuilder().Syncing().Regions().FieldPath(),
	}
}

func (s PlanPathSelectorMetadataSyncingRegions) WithValue(value []string) *Plan_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*Plan_FieldSubPathValue)
}

func (s PlanPathSelectorMetadataSyncingRegions) WithArrayOfValues(values [][]string) *Plan_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*Plan_FieldSubPathArrayOfValues)
}

func (s PlanPathSelectorMetadataSyncingRegions) WithItemValue(value string) *Plan_FieldSubPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*Plan_FieldSubPathArrayItemValue)
}

type PlanPathSelectorMetadataLifecycle struct{}

func (PlanPathSelectorMetadataLifecycle) FieldPath() *Plan_FieldSubPath {
	return &Plan_FieldSubPath{
		selector: Plan_FieldPathSelectorMetadata,
		subPath:  meta.NewMetaFieldPathBuilder().Lifecycle().FieldPath(),
	}
}

func (s PlanPathSelectorMetadataLifecycle) WithValue(value *meta.Lifecycle) *Plan_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*Plan_FieldSubPathValue)
}

func (s PlanPathSelectorMetadataLifecycle) WithArrayOfValues(values []*meta.Lifecycle) *Plan_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*Plan_FieldSubPathArrayOfValues)
}

func (PlanPathSelectorMetadataLifecycle) State() PlanPathSelectorMetadataLifecycleState {
	return PlanPathSelectorMetadataLifecycleState{}
}

func (PlanPathSelectorMetadataLifecycle) BlockDeletion() PlanPathSelectorMetadataLifecycleBlockDeletion {
	return PlanPathSelectorMetadataLifecycleBlockDeletion{}
}

type PlanPathSelectorMetadataLifecycleState struct{}

func (PlanPathSelectorMetadataLifecycleState) FieldPath() *Plan_FieldSubPath {
	return &Plan_FieldSubPath{
		selector: Plan_FieldPathSelectorMetadata,
		subPath:  meta.NewMetaFieldPathBuilder().Lifecycle().State().FieldPath(),
	}
}

func (s PlanPathSelectorMetadataLifecycleState) WithValue(value meta.Lifecycle_State) *Plan_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*Plan_FieldSubPathValue)
}

func (s PlanPathSelectorMetadataLifecycleState) WithArrayOfValues(values []meta.Lifecycle_State) *Plan_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*Plan_FieldSubPathArrayOfValues)
}

type PlanPathSelectorMetadataLifecycleBlockDeletion struct{}

func (PlanPathSelectorMetadataLifecycleBlockDeletion) FieldPath() *Plan_FieldSubPath {
	return &Plan_FieldSubPath{
		selector: Plan_FieldPathSelectorMetadata,
		subPath:  meta.NewMetaFieldPathBuilder().Lifecycle().BlockDeletion().FieldPath(),
	}
}

func (s PlanPathSelectorMetadataLifecycleBlockDeletion) WithValue(value bool) *Plan_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*Plan_FieldSubPathValue)
}

func (s PlanPathSelectorMetadataLifecycleBlockDeletion) WithArrayOfValues(values []bool) *Plan_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*Plan_FieldSubPathArrayOfValues)
}

type PlanPathSelectorMetadataServices struct{}

func (PlanPathSelectorMetadataServices) FieldPath() *Plan_FieldSubPath {
	return &Plan_FieldSubPath{
		selector: Plan_FieldPathSelectorMetadata,
		subPath:  meta.NewMetaFieldPathBuilder().Services().FieldPath(),
	}
}

func (s PlanPathSelectorMetadataServices) WithValue(value *meta.ServicesInfo) *Plan_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*Plan_FieldSubPathValue)
}

func (s PlanPathSelectorMetadataServices) WithArrayOfValues(values []*meta.ServicesInfo) *Plan_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*Plan_FieldSubPathArrayOfValues)
}

func (PlanPathSelectorMetadataServices) OwningService() PlanPathSelectorMetadataServicesOwningService {
	return PlanPathSelectorMetadataServicesOwningService{}
}

func (PlanPathSelectorMetadataServices) AllowedServices() PlanPathSelectorMetadataServicesAllowedServices {
	return PlanPathSelectorMetadataServicesAllowedServices{}
}

type PlanPathSelectorMetadataServicesOwningService struct{}

func (PlanPathSelectorMetadataServicesOwningService) FieldPath() *Plan_FieldSubPath {
	return &Plan_FieldSubPath{
		selector: Plan_FieldPathSelectorMetadata,
		subPath:  meta.NewMetaFieldPathBuilder().Services().OwningService().FieldPath(),
	}
}

func (s PlanPathSelectorMetadataServicesOwningService) WithValue(value string) *Plan_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*Plan_FieldSubPathValue)
}

func (s PlanPathSelectorMetadataServicesOwningService) WithArrayOfValues(values []string) *Plan_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*Plan_FieldSubPathArrayOfValues)
}

type PlanPathSelectorMetadataServicesAllowedServices struct{}

func (PlanPathSelectorMetadataServicesAllowedServices) FieldPath() *Plan_FieldSubPath {
	return &Plan_FieldSubPath{
		selector: Plan_FieldPathSelectorMetadata,
		subPath:  meta.NewMetaFieldPathBuilder().Services().AllowedServices().FieldPath(),
	}
}

func (s PlanPathSelectorMetadataServicesAllowedServices) WithValue(value []string) *Plan_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*Plan_FieldSubPathValue)
}

func (s PlanPathSelectorMetadataServicesAllowedServices) WithArrayOfValues(values [][]string) *Plan_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*Plan_FieldSubPathArrayOfValues)
}

func (s PlanPathSelectorMetadataServicesAllowedServices) WithItemValue(value string) *Plan_FieldSubPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*Plan_FieldSubPathArrayItemValue)
}

type PlanPathSelectorDisplayName struct{}

func (PlanPathSelectorDisplayName) FieldPath() *Plan_FieldTerminalPath {
	return &Plan_FieldTerminalPath{selector: Plan_FieldPathSelectorDisplayName}
}

func (s PlanPathSelectorDisplayName) WithValue(value string) *Plan_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*Plan_FieldTerminalPathValue)
}

func (s PlanPathSelectorDisplayName) WithArrayOfValues(values []string) *Plan_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*Plan_FieldTerminalPathArrayOfValues)
}

type PlanPathSelectorService struct{}

func (PlanPathSelectorService) FieldPath() *Plan_FieldTerminalPath {
	return &Plan_FieldTerminalPath{selector: Plan_FieldPathSelectorService}
}

func (s PlanPathSelectorService) WithValue(value *meta_service.Reference) *Plan_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*Plan_FieldTerminalPathValue)
}

func (s PlanPathSelectorService) WithArrayOfValues(values []*meta_service.Reference) *Plan_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*Plan_FieldTerminalPathArrayOfValues)
}

type PlanPathSelectorResourceLimits struct{}

func (PlanPathSelectorResourceLimits) FieldPath() *Plan_FieldTerminalPath {
	return &Plan_FieldTerminalPath{selector: Plan_FieldPathSelectorResourceLimits}
}

func (s PlanPathSelectorResourceLimits) WithValue(value []*Plan_LimitValue) *Plan_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*Plan_FieldTerminalPathValue)
}

func (s PlanPathSelectorResourceLimits) WithArrayOfValues(values [][]*Plan_LimitValue) *Plan_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*Plan_FieldTerminalPathArrayOfValues)
}

func (s PlanPathSelectorResourceLimits) WithItemValue(value *Plan_LimitValue) *Plan_FieldTerminalPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*Plan_FieldTerminalPathArrayItemValue)
}
func (PlanPathSelectorResourceLimits) WithSubPath(subPath PlanLimitValue_FieldPath) *Plan_FieldSubPath {
	return &Plan_FieldSubPath{selector: Plan_FieldPathSelectorResourceLimits, subPath: subPath}
}

func (s PlanPathSelectorResourceLimits) WithSubValue(subPathValue PlanLimitValue_FieldPathValue) *Plan_FieldSubPathValue {
	return &Plan_FieldSubPathValue{Plan_FieldPath: s.WithSubPath(subPathValue), subPathValue: subPathValue}
}

func (s PlanPathSelectorResourceLimits) WithSubArrayOfValues(subPathArrayOfValues PlanLimitValue_FieldPathArrayOfValues) *Plan_FieldSubPathArrayOfValues {
	return &Plan_FieldSubPathArrayOfValues{Plan_FieldPath: s.WithSubPath(subPathArrayOfValues), subPathArrayOfValues: subPathArrayOfValues}
}

func (s PlanPathSelectorResourceLimits) WithSubArrayItemValue(subPathArrayItemValue PlanLimitValue_FieldPathArrayItemValue) *Plan_FieldSubPathArrayItemValue {
	return &Plan_FieldSubPathArrayItemValue{Plan_FieldPath: s.WithSubPath(subPathArrayItemValue), subPathItemValue: subPathArrayItemValue}
}

func (PlanPathSelectorResourceLimits) Resource() PlanPathSelectorResourceLimitsResource {
	return PlanPathSelectorResourceLimitsResource{}
}

func (PlanPathSelectorResourceLimits) Value() PlanPathSelectorResourceLimitsValue {
	return PlanPathSelectorResourceLimitsValue{}
}

type PlanPathSelectorResourceLimitsResource struct{}

func (PlanPathSelectorResourceLimitsResource) FieldPath() *Plan_FieldSubPath {
	return &Plan_FieldSubPath{
		selector: Plan_FieldPathSelectorResourceLimits,
		subPath:  NewPlanLimitValueFieldPathBuilder().Resource().FieldPath(),
	}
}

func (s PlanPathSelectorResourceLimitsResource) WithValue(value *meta_resource.Reference) *Plan_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*Plan_FieldSubPathValue)
}

func (s PlanPathSelectorResourceLimitsResource) WithArrayOfValues(values []*meta_resource.Reference) *Plan_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*Plan_FieldSubPathArrayOfValues)
}

type PlanPathSelectorResourceLimitsValue struct{}

func (PlanPathSelectorResourceLimitsValue) FieldPath() *Plan_FieldSubPath {
	return &Plan_FieldSubPath{
		selector: Plan_FieldPathSelectorResourceLimits,
		subPath:  NewPlanLimitValueFieldPathBuilder().Value().FieldPath(),
	}
}

func (s PlanPathSelectorResourceLimitsValue) WithValue(value int64) *Plan_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*Plan_FieldSubPathValue)
}

func (s PlanPathSelectorResourceLimitsValue) WithArrayOfValues(values []int64) *Plan_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*Plan_FieldSubPathArrayOfValues)
}

type PlanPathSelectorPlanLevel struct{}

func (PlanPathSelectorPlanLevel) FieldPath() *Plan_FieldTerminalPath {
	return &Plan_FieldTerminalPath{selector: Plan_FieldPathSelectorPlanLevel}
}

func (s PlanPathSelectorPlanLevel) WithValue(value Plan_PlanLevel) *Plan_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*Plan_FieldTerminalPathValue)
}

func (s PlanPathSelectorPlanLevel) WithArrayOfValues(values []Plan_PlanLevel) *Plan_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*Plan_FieldTerminalPathArrayOfValues)
}

type PlanPathSelectorBusinessTier struct{}

func (PlanPathSelectorBusinessTier) FieldPath() *Plan_FieldTerminalPath {
	return &Plan_FieldTerminalPath{selector: Plan_FieldPathSelectorBusinessTier}
}

func (s PlanPathSelectorBusinessTier) WithValue(value iam_iam_common.BusinessTier) *Plan_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*Plan_FieldTerminalPathValue)
}

func (s PlanPathSelectorBusinessTier) WithArrayOfValues(values []iam_iam_common.BusinessTier) *Plan_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*Plan_FieldTerminalPathArrayOfValues)
}

type PlanPathSelectorGeneration struct{}

func (PlanPathSelectorGeneration) FieldPath() *Plan_FieldTerminalPath {
	return &Plan_FieldTerminalPath{selector: Plan_FieldPathSelectorGeneration}
}

func (s PlanPathSelectorGeneration) WithValue(value int64) *Plan_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*Plan_FieldTerminalPathValue)
}

func (s PlanPathSelectorGeneration) WithArrayOfValues(values []int64) *Plan_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*Plan_FieldTerminalPathArrayOfValues)
}

type PlanLimitValueFieldPathBuilder struct{}

func NewPlanLimitValueFieldPathBuilder() PlanLimitValueFieldPathBuilder {
	return PlanLimitValueFieldPathBuilder{}
}
func (PlanLimitValueFieldPathBuilder) Resource() Plan_LimitValuePathSelectorResource {
	return Plan_LimitValuePathSelectorResource{}
}
func (PlanLimitValueFieldPathBuilder) Value() Plan_LimitValuePathSelectorValue {
	return Plan_LimitValuePathSelectorValue{}
}

type Plan_LimitValuePathSelectorResource struct{}

func (Plan_LimitValuePathSelectorResource) FieldPath() *PlanLimitValue_FieldTerminalPath {
	return &PlanLimitValue_FieldTerminalPath{selector: PlanLimitValue_FieldPathSelectorResource}
}

func (s Plan_LimitValuePathSelectorResource) WithValue(value *meta_resource.Reference) *PlanLimitValue_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*PlanLimitValue_FieldTerminalPathValue)
}

func (s Plan_LimitValuePathSelectorResource) WithArrayOfValues(values []*meta_resource.Reference) *PlanLimitValue_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*PlanLimitValue_FieldTerminalPathArrayOfValues)
}

type Plan_LimitValuePathSelectorValue struct{}

func (Plan_LimitValuePathSelectorValue) FieldPath() *PlanLimitValue_FieldTerminalPath {
	return &PlanLimitValue_FieldTerminalPath{selector: PlanLimitValue_FieldPathSelectorValue}
}

func (s Plan_LimitValuePathSelectorValue) WithValue(value int64) *PlanLimitValue_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*PlanLimitValue_FieldTerminalPathValue)
}

func (s Plan_LimitValuePathSelectorValue) WithArrayOfValues(values []int64) *PlanLimitValue_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*PlanLimitValue_FieldTerminalPathArrayOfValues)
}
