// Code generated by protoc-gen-goten-object
// File: edgelq/limits/proto/v1alpha2/plan_service.proto
// DO NOT EDIT!!!

package plan_client

// proto imports
import (
	ntt_meta "github.com/cloudwan/edgelq-sdk/common/types/meta"
	common "github.com/cloudwan/edgelq-sdk/limits/resources/v1alpha2/common"
	plan "github.com/cloudwan/edgelq-sdk/limits/resources/v1alpha2/plan"
	meta_resource "github.com/cloudwan/edgelq-sdk/meta/resources/v1alpha2/resource"
	meta_service "github.com/cloudwan/edgelq-sdk/meta/resources/v1alpha2/service"
	view "github.com/cloudwan/goten-sdk/runtime/api/view"
	watch_type "github.com/cloudwan/goten-sdk/runtime/api/watch_type"
	empty "github.com/golang/protobuf/ptypes/empty"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	field_mask "google.golang.org/genproto/protobuf/field_mask"
)

// make sure we're using proto imports
var (
	_ = &ntt_meta.Meta{}
	_ = &common.Allowance{}
	_ = &plan.Plan{}
	_ = &meta_resource.Resource{}
	_ = &meta_service.Service{}
	_ = &empty.Empty{}
	_ = &field_mask.FieldMask{}
	_ = &timestamp.Timestamp{}
	_ = view.View(0)
	_ = watch_type.WatchType(0)
)

type GetPlanRequestFieldPathBuilder struct{}

func NewGetPlanRequestFieldPathBuilder() GetPlanRequestFieldPathBuilder {
	return GetPlanRequestFieldPathBuilder{}
}
func (GetPlanRequestFieldPathBuilder) Name() GetPlanRequestPathSelectorName {
	return GetPlanRequestPathSelectorName{}
}
func (GetPlanRequestFieldPathBuilder) FieldMask() GetPlanRequestPathSelectorFieldMask {
	return GetPlanRequestPathSelectorFieldMask{}
}
func (GetPlanRequestFieldPathBuilder) View() GetPlanRequestPathSelectorView {
	return GetPlanRequestPathSelectorView{}
}

type GetPlanRequestPathSelectorName struct{}

func (GetPlanRequestPathSelectorName) FieldPath() *GetPlanRequest_FieldTerminalPath {
	return &GetPlanRequest_FieldTerminalPath{selector: GetPlanRequest_FieldPathSelectorName}
}

func (s GetPlanRequestPathSelectorName) WithValue(value *plan.Reference) *GetPlanRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*GetPlanRequest_FieldTerminalPathValue)
}

func (s GetPlanRequestPathSelectorName) WithArrayOfValues(values []*plan.Reference) *GetPlanRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*GetPlanRequest_FieldTerminalPathArrayOfValues)
}

type GetPlanRequestPathSelectorFieldMask struct{}

func (GetPlanRequestPathSelectorFieldMask) FieldPath() *GetPlanRequest_FieldTerminalPath {
	return &GetPlanRequest_FieldTerminalPath{selector: GetPlanRequest_FieldPathSelectorFieldMask}
}

func (s GetPlanRequestPathSelectorFieldMask) WithValue(value *plan.Plan_FieldMask) *GetPlanRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*GetPlanRequest_FieldTerminalPathValue)
}

func (s GetPlanRequestPathSelectorFieldMask) WithArrayOfValues(values []*plan.Plan_FieldMask) *GetPlanRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*GetPlanRequest_FieldTerminalPathArrayOfValues)
}

type GetPlanRequestPathSelectorView struct{}

func (GetPlanRequestPathSelectorView) FieldPath() *GetPlanRequest_FieldTerminalPath {
	return &GetPlanRequest_FieldTerminalPath{selector: GetPlanRequest_FieldPathSelectorView}
}

func (s GetPlanRequestPathSelectorView) WithValue(value view.View) *GetPlanRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*GetPlanRequest_FieldTerminalPathValue)
}

func (s GetPlanRequestPathSelectorView) WithArrayOfValues(values []view.View) *GetPlanRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*GetPlanRequest_FieldTerminalPathArrayOfValues)
}

type BatchGetPlansRequestFieldPathBuilder struct{}

func NewBatchGetPlansRequestFieldPathBuilder() BatchGetPlansRequestFieldPathBuilder {
	return BatchGetPlansRequestFieldPathBuilder{}
}
func (BatchGetPlansRequestFieldPathBuilder) Names() BatchGetPlansRequestPathSelectorNames {
	return BatchGetPlansRequestPathSelectorNames{}
}
func (BatchGetPlansRequestFieldPathBuilder) FieldMask() BatchGetPlansRequestPathSelectorFieldMask {
	return BatchGetPlansRequestPathSelectorFieldMask{}
}
func (BatchGetPlansRequestFieldPathBuilder) View() BatchGetPlansRequestPathSelectorView {
	return BatchGetPlansRequestPathSelectorView{}
}

type BatchGetPlansRequestPathSelectorNames struct{}

func (BatchGetPlansRequestPathSelectorNames) FieldPath() *BatchGetPlansRequest_FieldTerminalPath {
	return &BatchGetPlansRequest_FieldTerminalPath{selector: BatchGetPlansRequest_FieldPathSelectorNames}
}

func (s BatchGetPlansRequestPathSelectorNames) WithValue(value []*plan.Reference) *BatchGetPlansRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetPlansRequest_FieldTerminalPathValue)
}

func (s BatchGetPlansRequestPathSelectorNames) WithArrayOfValues(values [][]*plan.Reference) *BatchGetPlansRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetPlansRequest_FieldTerminalPathArrayOfValues)
}

func (s BatchGetPlansRequestPathSelectorNames) WithItemValue(value *plan.Reference) *BatchGetPlansRequest_FieldTerminalPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*BatchGetPlansRequest_FieldTerminalPathArrayItemValue)
}

type BatchGetPlansRequestPathSelectorFieldMask struct{}

func (BatchGetPlansRequestPathSelectorFieldMask) FieldPath() *BatchGetPlansRequest_FieldTerminalPath {
	return &BatchGetPlansRequest_FieldTerminalPath{selector: BatchGetPlansRequest_FieldPathSelectorFieldMask}
}

func (s BatchGetPlansRequestPathSelectorFieldMask) WithValue(value *plan.Plan_FieldMask) *BatchGetPlansRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetPlansRequest_FieldTerminalPathValue)
}

func (s BatchGetPlansRequestPathSelectorFieldMask) WithArrayOfValues(values []*plan.Plan_FieldMask) *BatchGetPlansRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetPlansRequest_FieldTerminalPathArrayOfValues)
}

type BatchGetPlansRequestPathSelectorView struct{}

func (BatchGetPlansRequestPathSelectorView) FieldPath() *BatchGetPlansRequest_FieldTerminalPath {
	return &BatchGetPlansRequest_FieldTerminalPath{selector: BatchGetPlansRequest_FieldPathSelectorView}
}

func (s BatchGetPlansRequestPathSelectorView) WithValue(value view.View) *BatchGetPlansRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetPlansRequest_FieldTerminalPathValue)
}

func (s BatchGetPlansRequestPathSelectorView) WithArrayOfValues(values []view.View) *BatchGetPlansRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetPlansRequest_FieldTerminalPathArrayOfValues)
}

type BatchGetPlansResponseFieldPathBuilder struct{}

func NewBatchGetPlansResponseFieldPathBuilder() BatchGetPlansResponseFieldPathBuilder {
	return BatchGetPlansResponseFieldPathBuilder{}
}
func (BatchGetPlansResponseFieldPathBuilder) Plans() BatchGetPlansResponsePathSelectorPlans {
	return BatchGetPlansResponsePathSelectorPlans{}
}
func (BatchGetPlansResponseFieldPathBuilder) Missing() BatchGetPlansResponsePathSelectorMissing {
	return BatchGetPlansResponsePathSelectorMissing{}
}

type BatchGetPlansResponsePathSelectorPlans struct{}

func (BatchGetPlansResponsePathSelectorPlans) FieldPath() *BatchGetPlansResponse_FieldTerminalPath {
	return &BatchGetPlansResponse_FieldTerminalPath{selector: BatchGetPlansResponse_FieldPathSelectorPlans}
}

func (s BatchGetPlansResponsePathSelectorPlans) WithValue(value []*plan.Plan) *BatchGetPlansResponse_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetPlansResponse_FieldTerminalPathValue)
}

func (s BatchGetPlansResponsePathSelectorPlans) WithArrayOfValues(values [][]*plan.Plan) *BatchGetPlansResponse_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetPlansResponse_FieldTerminalPathArrayOfValues)
}

func (s BatchGetPlansResponsePathSelectorPlans) WithItemValue(value *plan.Plan) *BatchGetPlansResponse_FieldTerminalPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*BatchGetPlansResponse_FieldTerminalPathArrayItemValue)
}
func (BatchGetPlansResponsePathSelectorPlans) WithSubPath(subPath plan.Plan_FieldPath) *BatchGetPlansResponse_FieldSubPath {
	return &BatchGetPlansResponse_FieldSubPath{selector: BatchGetPlansResponse_FieldPathSelectorPlans, subPath: subPath}
}

func (s BatchGetPlansResponsePathSelectorPlans) WithSubValue(subPathValue plan.Plan_FieldPathValue) *BatchGetPlansResponse_FieldSubPathValue {
	return &BatchGetPlansResponse_FieldSubPathValue{BatchGetPlansResponse_FieldPath: s.WithSubPath(subPathValue), subPathValue: subPathValue}
}

func (s BatchGetPlansResponsePathSelectorPlans) WithSubArrayOfValues(subPathArrayOfValues plan.Plan_FieldPathArrayOfValues) *BatchGetPlansResponse_FieldSubPathArrayOfValues {
	return &BatchGetPlansResponse_FieldSubPathArrayOfValues{BatchGetPlansResponse_FieldPath: s.WithSubPath(subPathArrayOfValues), subPathArrayOfValues: subPathArrayOfValues}
}

func (s BatchGetPlansResponsePathSelectorPlans) WithSubArrayItemValue(subPathArrayItemValue plan.Plan_FieldPathArrayItemValue) *BatchGetPlansResponse_FieldSubPathArrayItemValue {
	return &BatchGetPlansResponse_FieldSubPathArrayItemValue{BatchGetPlansResponse_FieldPath: s.WithSubPath(subPathArrayItemValue), subPathItemValue: subPathArrayItemValue}
}

func (BatchGetPlansResponsePathSelectorPlans) Name() BatchGetPlansResponsePathSelectorPlansName {
	return BatchGetPlansResponsePathSelectorPlansName{}
}

func (BatchGetPlansResponsePathSelectorPlans) DisplayName() BatchGetPlansResponsePathSelectorPlansDisplayName {
	return BatchGetPlansResponsePathSelectorPlansDisplayName{}
}

func (BatchGetPlansResponsePathSelectorPlans) Service() BatchGetPlansResponsePathSelectorPlansService {
	return BatchGetPlansResponsePathSelectorPlansService{}
}

func (BatchGetPlansResponsePathSelectorPlans) ResourceLimits() BatchGetPlansResponsePathSelectorPlansResourceLimits {
	return BatchGetPlansResponsePathSelectorPlansResourceLimits{}
}

func (BatchGetPlansResponsePathSelectorPlans) Metadata() BatchGetPlansResponsePathSelectorPlansMetadata {
	return BatchGetPlansResponsePathSelectorPlansMetadata{}
}

type BatchGetPlansResponsePathSelectorPlansName struct{}

func (BatchGetPlansResponsePathSelectorPlansName) FieldPath() *BatchGetPlansResponse_FieldSubPath {
	return &BatchGetPlansResponse_FieldSubPath{
		selector: BatchGetPlansResponse_FieldPathSelectorPlans,
		subPath:  plan.NewPlanFieldPathBuilder().Name().FieldPath(),
	}
}

func (s BatchGetPlansResponsePathSelectorPlansName) WithValue(value *plan.Name) *BatchGetPlansResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetPlansResponse_FieldSubPathValue)
}

func (s BatchGetPlansResponsePathSelectorPlansName) WithArrayOfValues(values []*plan.Name) *BatchGetPlansResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetPlansResponse_FieldSubPathArrayOfValues)
}

type BatchGetPlansResponsePathSelectorPlansDisplayName struct{}

func (BatchGetPlansResponsePathSelectorPlansDisplayName) FieldPath() *BatchGetPlansResponse_FieldSubPath {
	return &BatchGetPlansResponse_FieldSubPath{
		selector: BatchGetPlansResponse_FieldPathSelectorPlans,
		subPath:  plan.NewPlanFieldPathBuilder().DisplayName().FieldPath(),
	}
}

func (s BatchGetPlansResponsePathSelectorPlansDisplayName) WithValue(value string) *BatchGetPlansResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetPlansResponse_FieldSubPathValue)
}

func (s BatchGetPlansResponsePathSelectorPlansDisplayName) WithArrayOfValues(values []string) *BatchGetPlansResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetPlansResponse_FieldSubPathArrayOfValues)
}

type BatchGetPlansResponsePathSelectorPlansService struct{}

func (BatchGetPlansResponsePathSelectorPlansService) FieldPath() *BatchGetPlansResponse_FieldSubPath {
	return &BatchGetPlansResponse_FieldSubPath{
		selector: BatchGetPlansResponse_FieldPathSelectorPlans,
		subPath:  plan.NewPlanFieldPathBuilder().Service().FieldPath(),
	}
}

func (s BatchGetPlansResponsePathSelectorPlansService) WithValue(value *meta_service.Reference) *BatchGetPlansResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetPlansResponse_FieldSubPathValue)
}

func (s BatchGetPlansResponsePathSelectorPlansService) WithArrayOfValues(values []*meta_service.Reference) *BatchGetPlansResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetPlansResponse_FieldSubPathArrayOfValues)
}

type BatchGetPlansResponsePathSelectorPlansResourceLimits struct{}

func (BatchGetPlansResponsePathSelectorPlansResourceLimits) FieldPath() *BatchGetPlansResponse_FieldSubPath {
	return &BatchGetPlansResponse_FieldSubPath{
		selector: BatchGetPlansResponse_FieldPathSelectorPlans,
		subPath:  plan.NewPlanFieldPathBuilder().ResourceLimits().FieldPath(),
	}
}

func (s BatchGetPlansResponsePathSelectorPlansResourceLimits) WithValue(value []*common.Allowance) *BatchGetPlansResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetPlansResponse_FieldSubPathValue)
}

func (s BatchGetPlansResponsePathSelectorPlansResourceLimits) WithArrayOfValues(values [][]*common.Allowance) *BatchGetPlansResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetPlansResponse_FieldSubPathArrayOfValues)
}

func (s BatchGetPlansResponsePathSelectorPlansResourceLimits) WithItemValue(value *common.Allowance) *BatchGetPlansResponse_FieldSubPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*BatchGetPlansResponse_FieldSubPathArrayItemValue)
}

func (BatchGetPlansResponsePathSelectorPlansResourceLimits) Resource() BatchGetPlansResponsePathSelectorPlansResourceLimitsResource {
	return BatchGetPlansResponsePathSelectorPlansResourceLimitsResource{}
}

func (BatchGetPlansResponsePathSelectorPlansResourceLimits) Value() BatchGetPlansResponsePathSelectorPlansResourceLimitsValue {
	return BatchGetPlansResponsePathSelectorPlansResourceLimitsValue{}
}

type BatchGetPlansResponsePathSelectorPlansResourceLimitsResource struct{}

func (BatchGetPlansResponsePathSelectorPlansResourceLimitsResource) FieldPath() *BatchGetPlansResponse_FieldSubPath {
	return &BatchGetPlansResponse_FieldSubPath{
		selector: BatchGetPlansResponse_FieldPathSelectorPlans,
		subPath:  plan.NewPlanFieldPathBuilder().ResourceLimits().Resource().FieldPath(),
	}
}

func (s BatchGetPlansResponsePathSelectorPlansResourceLimitsResource) WithValue(value *meta_resource.Reference) *BatchGetPlansResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetPlansResponse_FieldSubPathValue)
}

func (s BatchGetPlansResponsePathSelectorPlansResourceLimitsResource) WithArrayOfValues(values []*meta_resource.Reference) *BatchGetPlansResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetPlansResponse_FieldSubPathArrayOfValues)
}

type BatchGetPlansResponsePathSelectorPlansResourceLimitsValue struct{}

func (BatchGetPlansResponsePathSelectorPlansResourceLimitsValue) FieldPath() *BatchGetPlansResponse_FieldSubPath {
	return &BatchGetPlansResponse_FieldSubPath{
		selector: BatchGetPlansResponse_FieldPathSelectorPlans,
		subPath:  plan.NewPlanFieldPathBuilder().ResourceLimits().Value().FieldPath(),
	}
}

func (s BatchGetPlansResponsePathSelectorPlansResourceLimitsValue) WithValue(value int64) *BatchGetPlansResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetPlansResponse_FieldSubPathValue)
}

func (s BatchGetPlansResponsePathSelectorPlansResourceLimitsValue) WithArrayOfValues(values []int64) *BatchGetPlansResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetPlansResponse_FieldSubPathArrayOfValues)
}

type BatchGetPlansResponsePathSelectorPlansMetadata struct{}

func (BatchGetPlansResponsePathSelectorPlansMetadata) FieldPath() *BatchGetPlansResponse_FieldSubPath {
	return &BatchGetPlansResponse_FieldSubPath{
		selector: BatchGetPlansResponse_FieldPathSelectorPlans,
		subPath:  plan.NewPlanFieldPathBuilder().Metadata().FieldPath(),
	}
}

func (s BatchGetPlansResponsePathSelectorPlansMetadata) WithValue(value *ntt_meta.Meta) *BatchGetPlansResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetPlansResponse_FieldSubPathValue)
}

func (s BatchGetPlansResponsePathSelectorPlansMetadata) WithArrayOfValues(values []*ntt_meta.Meta) *BatchGetPlansResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetPlansResponse_FieldSubPathArrayOfValues)
}

func (BatchGetPlansResponsePathSelectorPlansMetadata) CreateTime() BatchGetPlansResponsePathSelectorPlansMetadataCreateTime {
	return BatchGetPlansResponsePathSelectorPlansMetadataCreateTime{}
}

func (BatchGetPlansResponsePathSelectorPlansMetadata) UpdateTime() BatchGetPlansResponsePathSelectorPlansMetadataUpdateTime {
	return BatchGetPlansResponsePathSelectorPlansMetadataUpdateTime{}
}

func (BatchGetPlansResponsePathSelectorPlansMetadata) Uuid() BatchGetPlansResponsePathSelectorPlansMetadataUuid {
	return BatchGetPlansResponsePathSelectorPlansMetadataUuid{}
}

func (BatchGetPlansResponsePathSelectorPlansMetadata) Tags() BatchGetPlansResponsePathSelectorPlansMetadataTags {
	return BatchGetPlansResponsePathSelectorPlansMetadataTags{}
}

func (BatchGetPlansResponsePathSelectorPlansMetadata) Labels() BatchGetPlansResponsePathSelectorPlansMetadataLabels {
	return BatchGetPlansResponsePathSelectorPlansMetadataLabels{}
}

func (BatchGetPlansResponsePathSelectorPlansMetadata) Annotations() BatchGetPlansResponsePathSelectorPlansMetadataAnnotations {
	return BatchGetPlansResponsePathSelectorPlansMetadataAnnotations{}
}

func (BatchGetPlansResponsePathSelectorPlansMetadata) Generation() BatchGetPlansResponsePathSelectorPlansMetadataGeneration {
	return BatchGetPlansResponsePathSelectorPlansMetadataGeneration{}
}

func (BatchGetPlansResponsePathSelectorPlansMetadata) ResourceVersion() BatchGetPlansResponsePathSelectorPlansMetadataResourceVersion {
	return BatchGetPlansResponsePathSelectorPlansMetadataResourceVersion{}
}

func (BatchGetPlansResponsePathSelectorPlansMetadata) OwnerReferences() BatchGetPlansResponsePathSelectorPlansMetadataOwnerReferences {
	return BatchGetPlansResponsePathSelectorPlansMetadataOwnerReferences{}
}

func (BatchGetPlansResponsePathSelectorPlansMetadata) Shards() BatchGetPlansResponsePathSelectorPlansMetadataShards {
	return BatchGetPlansResponsePathSelectorPlansMetadataShards{}
}

func (BatchGetPlansResponsePathSelectorPlansMetadata) Syncing() BatchGetPlansResponsePathSelectorPlansMetadataSyncing {
	return BatchGetPlansResponsePathSelectorPlansMetadataSyncing{}
}

type BatchGetPlansResponsePathSelectorPlansMetadataCreateTime struct{}

func (BatchGetPlansResponsePathSelectorPlansMetadataCreateTime) FieldPath() *BatchGetPlansResponse_FieldSubPath {
	return &BatchGetPlansResponse_FieldSubPath{
		selector: BatchGetPlansResponse_FieldPathSelectorPlans,
		subPath:  plan.NewPlanFieldPathBuilder().Metadata().CreateTime().FieldPath(),
	}
}

func (s BatchGetPlansResponsePathSelectorPlansMetadataCreateTime) WithValue(value *timestamp.Timestamp) *BatchGetPlansResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetPlansResponse_FieldSubPathValue)
}

func (s BatchGetPlansResponsePathSelectorPlansMetadataCreateTime) WithArrayOfValues(values []*timestamp.Timestamp) *BatchGetPlansResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetPlansResponse_FieldSubPathArrayOfValues)
}

type BatchGetPlansResponsePathSelectorPlansMetadataUpdateTime struct{}

func (BatchGetPlansResponsePathSelectorPlansMetadataUpdateTime) FieldPath() *BatchGetPlansResponse_FieldSubPath {
	return &BatchGetPlansResponse_FieldSubPath{
		selector: BatchGetPlansResponse_FieldPathSelectorPlans,
		subPath:  plan.NewPlanFieldPathBuilder().Metadata().UpdateTime().FieldPath(),
	}
}

func (s BatchGetPlansResponsePathSelectorPlansMetadataUpdateTime) WithValue(value *timestamp.Timestamp) *BatchGetPlansResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetPlansResponse_FieldSubPathValue)
}

func (s BatchGetPlansResponsePathSelectorPlansMetadataUpdateTime) WithArrayOfValues(values []*timestamp.Timestamp) *BatchGetPlansResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetPlansResponse_FieldSubPathArrayOfValues)
}

type BatchGetPlansResponsePathSelectorPlansMetadataUuid struct{}

func (BatchGetPlansResponsePathSelectorPlansMetadataUuid) FieldPath() *BatchGetPlansResponse_FieldSubPath {
	return &BatchGetPlansResponse_FieldSubPath{
		selector: BatchGetPlansResponse_FieldPathSelectorPlans,
		subPath:  plan.NewPlanFieldPathBuilder().Metadata().Uuid().FieldPath(),
	}
}

func (s BatchGetPlansResponsePathSelectorPlansMetadataUuid) WithValue(value string) *BatchGetPlansResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetPlansResponse_FieldSubPathValue)
}

func (s BatchGetPlansResponsePathSelectorPlansMetadataUuid) WithArrayOfValues(values []string) *BatchGetPlansResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetPlansResponse_FieldSubPathArrayOfValues)
}

type BatchGetPlansResponsePathSelectorPlansMetadataTags struct{}

func (BatchGetPlansResponsePathSelectorPlansMetadataTags) FieldPath() *BatchGetPlansResponse_FieldSubPath {
	return &BatchGetPlansResponse_FieldSubPath{
		selector: BatchGetPlansResponse_FieldPathSelectorPlans,
		subPath:  plan.NewPlanFieldPathBuilder().Metadata().Tags().FieldPath(),
	}
}

func (s BatchGetPlansResponsePathSelectorPlansMetadataTags) WithValue(value []string) *BatchGetPlansResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetPlansResponse_FieldSubPathValue)
}

func (s BatchGetPlansResponsePathSelectorPlansMetadataTags) WithArrayOfValues(values [][]string) *BatchGetPlansResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetPlansResponse_FieldSubPathArrayOfValues)
}

func (s BatchGetPlansResponsePathSelectorPlansMetadataTags) WithItemValue(value string) *BatchGetPlansResponse_FieldSubPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*BatchGetPlansResponse_FieldSubPathArrayItemValue)
}

type BatchGetPlansResponsePathSelectorPlansMetadataLabels struct{}

func (BatchGetPlansResponsePathSelectorPlansMetadataLabels) FieldPath() *BatchGetPlansResponse_FieldSubPath {
	return &BatchGetPlansResponse_FieldSubPath{
		selector: BatchGetPlansResponse_FieldPathSelectorPlans,
		subPath:  plan.NewPlanFieldPathBuilder().Metadata().Labels().FieldPath(),
	}
}

func (s BatchGetPlansResponsePathSelectorPlansMetadataLabels) WithValue(value map[string]string) *BatchGetPlansResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetPlansResponse_FieldSubPathValue)
}

func (s BatchGetPlansResponsePathSelectorPlansMetadataLabels) WithArrayOfValues(values []map[string]string) *BatchGetPlansResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetPlansResponse_FieldSubPathArrayOfValues)
}

func (BatchGetPlansResponsePathSelectorPlansMetadataLabels) WithKey(key string) BatchGetPlansResponseMapPathSelectorPlansMetadataLabels {
	return BatchGetPlansResponseMapPathSelectorPlansMetadataLabels{key: key}
}

type BatchGetPlansResponseMapPathSelectorPlansMetadataLabels struct {
	key string
}

func (s BatchGetPlansResponseMapPathSelectorPlansMetadataLabels) FieldPath() *BatchGetPlansResponse_FieldSubPath {
	return &BatchGetPlansResponse_FieldSubPath{
		selector: BatchGetPlansResponse_FieldPathSelectorPlans,
		subPath:  plan.NewPlanFieldPathBuilder().Metadata().Labels().WithKey(s.key).FieldPath(),
	}
}

func (s BatchGetPlansResponseMapPathSelectorPlansMetadataLabels) WithValue(value string) *BatchGetPlansResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetPlansResponse_FieldSubPathValue)
}

func (s BatchGetPlansResponseMapPathSelectorPlansMetadataLabels) WithArrayOfValues(values []string) *BatchGetPlansResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetPlansResponse_FieldSubPathArrayOfValues)
}

type BatchGetPlansResponsePathSelectorPlansMetadataAnnotations struct{}

func (BatchGetPlansResponsePathSelectorPlansMetadataAnnotations) FieldPath() *BatchGetPlansResponse_FieldSubPath {
	return &BatchGetPlansResponse_FieldSubPath{
		selector: BatchGetPlansResponse_FieldPathSelectorPlans,
		subPath:  plan.NewPlanFieldPathBuilder().Metadata().Annotations().FieldPath(),
	}
}

func (s BatchGetPlansResponsePathSelectorPlansMetadataAnnotations) WithValue(value map[string]string) *BatchGetPlansResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetPlansResponse_FieldSubPathValue)
}

func (s BatchGetPlansResponsePathSelectorPlansMetadataAnnotations) WithArrayOfValues(values []map[string]string) *BatchGetPlansResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetPlansResponse_FieldSubPathArrayOfValues)
}

func (BatchGetPlansResponsePathSelectorPlansMetadataAnnotations) WithKey(key string) BatchGetPlansResponseMapPathSelectorPlansMetadataAnnotations {
	return BatchGetPlansResponseMapPathSelectorPlansMetadataAnnotations{key: key}
}

type BatchGetPlansResponseMapPathSelectorPlansMetadataAnnotations struct {
	key string
}

func (s BatchGetPlansResponseMapPathSelectorPlansMetadataAnnotations) FieldPath() *BatchGetPlansResponse_FieldSubPath {
	return &BatchGetPlansResponse_FieldSubPath{
		selector: BatchGetPlansResponse_FieldPathSelectorPlans,
		subPath:  plan.NewPlanFieldPathBuilder().Metadata().Annotations().WithKey(s.key).FieldPath(),
	}
}

func (s BatchGetPlansResponseMapPathSelectorPlansMetadataAnnotations) WithValue(value string) *BatchGetPlansResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetPlansResponse_FieldSubPathValue)
}

func (s BatchGetPlansResponseMapPathSelectorPlansMetadataAnnotations) WithArrayOfValues(values []string) *BatchGetPlansResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetPlansResponse_FieldSubPathArrayOfValues)
}

type BatchGetPlansResponsePathSelectorPlansMetadataGeneration struct{}

func (BatchGetPlansResponsePathSelectorPlansMetadataGeneration) FieldPath() *BatchGetPlansResponse_FieldSubPath {
	return &BatchGetPlansResponse_FieldSubPath{
		selector: BatchGetPlansResponse_FieldPathSelectorPlans,
		subPath:  plan.NewPlanFieldPathBuilder().Metadata().Generation().FieldPath(),
	}
}

func (s BatchGetPlansResponsePathSelectorPlansMetadataGeneration) WithValue(value int64) *BatchGetPlansResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetPlansResponse_FieldSubPathValue)
}

func (s BatchGetPlansResponsePathSelectorPlansMetadataGeneration) WithArrayOfValues(values []int64) *BatchGetPlansResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetPlansResponse_FieldSubPathArrayOfValues)
}

type BatchGetPlansResponsePathSelectorPlansMetadataResourceVersion struct{}

func (BatchGetPlansResponsePathSelectorPlansMetadataResourceVersion) FieldPath() *BatchGetPlansResponse_FieldSubPath {
	return &BatchGetPlansResponse_FieldSubPath{
		selector: BatchGetPlansResponse_FieldPathSelectorPlans,
		subPath:  plan.NewPlanFieldPathBuilder().Metadata().ResourceVersion().FieldPath(),
	}
}

func (s BatchGetPlansResponsePathSelectorPlansMetadataResourceVersion) WithValue(value string) *BatchGetPlansResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetPlansResponse_FieldSubPathValue)
}

func (s BatchGetPlansResponsePathSelectorPlansMetadataResourceVersion) WithArrayOfValues(values []string) *BatchGetPlansResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetPlansResponse_FieldSubPathArrayOfValues)
}

type BatchGetPlansResponsePathSelectorPlansMetadataOwnerReferences struct{}

func (BatchGetPlansResponsePathSelectorPlansMetadataOwnerReferences) FieldPath() *BatchGetPlansResponse_FieldSubPath {
	return &BatchGetPlansResponse_FieldSubPath{
		selector: BatchGetPlansResponse_FieldPathSelectorPlans,
		subPath:  plan.NewPlanFieldPathBuilder().Metadata().OwnerReferences().FieldPath(),
	}
}

func (s BatchGetPlansResponsePathSelectorPlansMetadataOwnerReferences) WithValue(value []*ntt_meta.OwnerReference) *BatchGetPlansResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetPlansResponse_FieldSubPathValue)
}

func (s BatchGetPlansResponsePathSelectorPlansMetadataOwnerReferences) WithArrayOfValues(values [][]*ntt_meta.OwnerReference) *BatchGetPlansResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetPlansResponse_FieldSubPathArrayOfValues)
}

func (s BatchGetPlansResponsePathSelectorPlansMetadataOwnerReferences) WithItemValue(value *ntt_meta.OwnerReference) *BatchGetPlansResponse_FieldSubPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*BatchGetPlansResponse_FieldSubPathArrayItemValue)
}

func (BatchGetPlansResponsePathSelectorPlansMetadataOwnerReferences) ApiVersion() BatchGetPlansResponsePathSelectorPlansMetadataOwnerReferencesApiVersion {
	return BatchGetPlansResponsePathSelectorPlansMetadataOwnerReferencesApiVersion{}
}

func (BatchGetPlansResponsePathSelectorPlansMetadataOwnerReferences) Kind() BatchGetPlansResponsePathSelectorPlansMetadataOwnerReferencesKind {
	return BatchGetPlansResponsePathSelectorPlansMetadataOwnerReferencesKind{}
}

func (BatchGetPlansResponsePathSelectorPlansMetadataOwnerReferences) Name() BatchGetPlansResponsePathSelectorPlansMetadataOwnerReferencesName {
	return BatchGetPlansResponsePathSelectorPlansMetadataOwnerReferencesName{}
}

func (BatchGetPlansResponsePathSelectorPlansMetadataOwnerReferences) Uid() BatchGetPlansResponsePathSelectorPlansMetadataOwnerReferencesUid {
	return BatchGetPlansResponsePathSelectorPlansMetadataOwnerReferencesUid{}
}

func (BatchGetPlansResponsePathSelectorPlansMetadataOwnerReferences) Controller() BatchGetPlansResponsePathSelectorPlansMetadataOwnerReferencesController {
	return BatchGetPlansResponsePathSelectorPlansMetadataOwnerReferencesController{}
}

func (BatchGetPlansResponsePathSelectorPlansMetadataOwnerReferences) BlockOwnerDeletion() BatchGetPlansResponsePathSelectorPlansMetadataOwnerReferencesBlockOwnerDeletion {
	return BatchGetPlansResponsePathSelectorPlansMetadataOwnerReferencesBlockOwnerDeletion{}
}

type BatchGetPlansResponsePathSelectorPlansMetadataOwnerReferencesApiVersion struct{}

func (BatchGetPlansResponsePathSelectorPlansMetadataOwnerReferencesApiVersion) FieldPath() *BatchGetPlansResponse_FieldSubPath {
	return &BatchGetPlansResponse_FieldSubPath{
		selector: BatchGetPlansResponse_FieldPathSelectorPlans,
		subPath:  plan.NewPlanFieldPathBuilder().Metadata().OwnerReferences().ApiVersion().FieldPath(),
	}
}

func (s BatchGetPlansResponsePathSelectorPlansMetadataOwnerReferencesApiVersion) WithValue(value string) *BatchGetPlansResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetPlansResponse_FieldSubPathValue)
}

func (s BatchGetPlansResponsePathSelectorPlansMetadataOwnerReferencesApiVersion) WithArrayOfValues(values []string) *BatchGetPlansResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetPlansResponse_FieldSubPathArrayOfValues)
}

type BatchGetPlansResponsePathSelectorPlansMetadataOwnerReferencesKind struct{}

func (BatchGetPlansResponsePathSelectorPlansMetadataOwnerReferencesKind) FieldPath() *BatchGetPlansResponse_FieldSubPath {
	return &BatchGetPlansResponse_FieldSubPath{
		selector: BatchGetPlansResponse_FieldPathSelectorPlans,
		subPath:  plan.NewPlanFieldPathBuilder().Metadata().OwnerReferences().Kind().FieldPath(),
	}
}

func (s BatchGetPlansResponsePathSelectorPlansMetadataOwnerReferencesKind) WithValue(value string) *BatchGetPlansResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetPlansResponse_FieldSubPathValue)
}

func (s BatchGetPlansResponsePathSelectorPlansMetadataOwnerReferencesKind) WithArrayOfValues(values []string) *BatchGetPlansResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetPlansResponse_FieldSubPathArrayOfValues)
}

type BatchGetPlansResponsePathSelectorPlansMetadataOwnerReferencesName struct{}

func (BatchGetPlansResponsePathSelectorPlansMetadataOwnerReferencesName) FieldPath() *BatchGetPlansResponse_FieldSubPath {
	return &BatchGetPlansResponse_FieldSubPath{
		selector: BatchGetPlansResponse_FieldPathSelectorPlans,
		subPath:  plan.NewPlanFieldPathBuilder().Metadata().OwnerReferences().Name().FieldPath(),
	}
}

func (s BatchGetPlansResponsePathSelectorPlansMetadataOwnerReferencesName) WithValue(value string) *BatchGetPlansResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetPlansResponse_FieldSubPathValue)
}

func (s BatchGetPlansResponsePathSelectorPlansMetadataOwnerReferencesName) WithArrayOfValues(values []string) *BatchGetPlansResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetPlansResponse_FieldSubPathArrayOfValues)
}

type BatchGetPlansResponsePathSelectorPlansMetadataOwnerReferencesUid struct{}

func (BatchGetPlansResponsePathSelectorPlansMetadataOwnerReferencesUid) FieldPath() *BatchGetPlansResponse_FieldSubPath {
	return &BatchGetPlansResponse_FieldSubPath{
		selector: BatchGetPlansResponse_FieldPathSelectorPlans,
		subPath:  plan.NewPlanFieldPathBuilder().Metadata().OwnerReferences().Uid().FieldPath(),
	}
}

func (s BatchGetPlansResponsePathSelectorPlansMetadataOwnerReferencesUid) WithValue(value string) *BatchGetPlansResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetPlansResponse_FieldSubPathValue)
}

func (s BatchGetPlansResponsePathSelectorPlansMetadataOwnerReferencesUid) WithArrayOfValues(values []string) *BatchGetPlansResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetPlansResponse_FieldSubPathArrayOfValues)
}

type BatchGetPlansResponsePathSelectorPlansMetadataOwnerReferencesController struct{}

func (BatchGetPlansResponsePathSelectorPlansMetadataOwnerReferencesController) FieldPath() *BatchGetPlansResponse_FieldSubPath {
	return &BatchGetPlansResponse_FieldSubPath{
		selector: BatchGetPlansResponse_FieldPathSelectorPlans,
		subPath:  plan.NewPlanFieldPathBuilder().Metadata().OwnerReferences().Controller().FieldPath(),
	}
}

func (s BatchGetPlansResponsePathSelectorPlansMetadataOwnerReferencesController) WithValue(value bool) *BatchGetPlansResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetPlansResponse_FieldSubPathValue)
}

func (s BatchGetPlansResponsePathSelectorPlansMetadataOwnerReferencesController) WithArrayOfValues(values []bool) *BatchGetPlansResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetPlansResponse_FieldSubPathArrayOfValues)
}

type BatchGetPlansResponsePathSelectorPlansMetadataOwnerReferencesBlockOwnerDeletion struct{}

func (BatchGetPlansResponsePathSelectorPlansMetadataOwnerReferencesBlockOwnerDeletion) FieldPath() *BatchGetPlansResponse_FieldSubPath {
	return &BatchGetPlansResponse_FieldSubPath{
		selector: BatchGetPlansResponse_FieldPathSelectorPlans,
		subPath:  plan.NewPlanFieldPathBuilder().Metadata().OwnerReferences().BlockOwnerDeletion().FieldPath(),
	}
}

func (s BatchGetPlansResponsePathSelectorPlansMetadataOwnerReferencesBlockOwnerDeletion) WithValue(value bool) *BatchGetPlansResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetPlansResponse_FieldSubPathValue)
}

func (s BatchGetPlansResponsePathSelectorPlansMetadataOwnerReferencesBlockOwnerDeletion) WithArrayOfValues(values []bool) *BatchGetPlansResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetPlansResponse_FieldSubPathArrayOfValues)
}

type BatchGetPlansResponsePathSelectorPlansMetadataShards struct{}

func (BatchGetPlansResponsePathSelectorPlansMetadataShards) FieldPath() *BatchGetPlansResponse_FieldSubPath {
	return &BatchGetPlansResponse_FieldSubPath{
		selector: BatchGetPlansResponse_FieldPathSelectorPlans,
		subPath:  plan.NewPlanFieldPathBuilder().Metadata().Shards().FieldPath(),
	}
}

func (s BatchGetPlansResponsePathSelectorPlansMetadataShards) WithValue(value map[string]int64) *BatchGetPlansResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetPlansResponse_FieldSubPathValue)
}

func (s BatchGetPlansResponsePathSelectorPlansMetadataShards) WithArrayOfValues(values []map[string]int64) *BatchGetPlansResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetPlansResponse_FieldSubPathArrayOfValues)
}

func (BatchGetPlansResponsePathSelectorPlansMetadataShards) WithKey(key string) BatchGetPlansResponseMapPathSelectorPlansMetadataShards {
	return BatchGetPlansResponseMapPathSelectorPlansMetadataShards{key: key}
}

type BatchGetPlansResponseMapPathSelectorPlansMetadataShards struct {
	key string
}

func (s BatchGetPlansResponseMapPathSelectorPlansMetadataShards) FieldPath() *BatchGetPlansResponse_FieldSubPath {
	return &BatchGetPlansResponse_FieldSubPath{
		selector: BatchGetPlansResponse_FieldPathSelectorPlans,
		subPath:  plan.NewPlanFieldPathBuilder().Metadata().Shards().WithKey(s.key).FieldPath(),
	}
}

func (s BatchGetPlansResponseMapPathSelectorPlansMetadataShards) WithValue(value int64) *BatchGetPlansResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetPlansResponse_FieldSubPathValue)
}

func (s BatchGetPlansResponseMapPathSelectorPlansMetadataShards) WithArrayOfValues(values []int64) *BatchGetPlansResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetPlansResponse_FieldSubPathArrayOfValues)
}

type BatchGetPlansResponsePathSelectorPlansMetadataSyncing struct{}

func (BatchGetPlansResponsePathSelectorPlansMetadataSyncing) FieldPath() *BatchGetPlansResponse_FieldSubPath {
	return &BatchGetPlansResponse_FieldSubPath{
		selector: BatchGetPlansResponse_FieldPathSelectorPlans,
		subPath:  plan.NewPlanFieldPathBuilder().Metadata().Syncing().FieldPath(),
	}
}

func (s BatchGetPlansResponsePathSelectorPlansMetadataSyncing) WithValue(value *ntt_meta.SyncingMeta) *BatchGetPlansResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetPlansResponse_FieldSubPathValue)
}

func (s BatchGetPlansResponsePathSelectorPlansMetadataSyncing) WithArrayOfValues(values []*ntt_meta.SyncingMeta) *BatchGetPlansResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetPlansResponse_FieldSubPathArrayOfValues)
}

func (BatchGetPlansResponsePathSelectorPlansMetadataSyncing) OwningRegion() BatchGetPlansResponsePathSelectorPlansMetadataSyncingOwningRegion {
	return BatchGetPlansResponsePathSelectorPlansMetadataSyncingOwningRegion{}
}

func (BatchGetPlansResponsePathSelectorPlansMetadataSyncing) Regions() BatchGetPlansResponsePathSelectorPlansMetadataSyncingRegions {
	return BatchGetPlansResponsePathSelectorPlansMetadataSyncingRegions{}
}

type BatchGetPlansResponsePathSelectorPlansMetadataSyncingOwningRegion struct{}

func (BatchGetPlansResponsePathSelectorPlansMetadataSyncingOwningRegion) FieldPath() *BatchGetPlansResponse_FieldSubPath {
	return &BatchGetPlansResponse_FieldSubPath{
		selector: BatchGetPlansResponse_FieldPathSelectorPlans,
		subPath:  plan.NewPlanFieldPathBuilder().Metadata().Syncing().OwningRegion().FieldPath(),
	}
}

func (s BatchGetPlansResponsePathSelectorPlansMetadataSyncingOwningRegion) WithValue(value string) *BatchGetPlansResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetPlansResponse_FieldSubPathValue)
}

func (s BatchGetPlansResponsePathSelectorPlansMetadataSyncingOwningRegion) WithArrayOfValues(values []string) *BatchGetPlansResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetPlansResponse_FieldSubPathArrayOfValues)
}

type BatchGetPlansResponsePathSelectorPlansMetadataSyncingRegions struct{}

func (BatchGetPlansResponsePathSelectorPlansMetadataSyncingRegions) FieldPath() *BatchGetPlansResponse_FieldSubPath {
	return &BatchGetPlansResponse_FieldSubPath{
		selector: BatchGetPlansResponse_FieldPathSelectorPlans,
		subPath:  plan.NewPlanFieldPathBuilder().Metadata().Syncing().Regions().FieldPath(),
	}
}

func (s BatchGetPlansResponsePathSelectorPlansMetadataSyncingRegions) WithValue(value []string) *BatchGetPlansResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetPlansResponse_FieldSubPathValue)
}

func (s BatchGetPlansResponsePathSelectorPlansMetadataSyncingRegions) WithArrayOfValues(values [][]string) *BatchGetPlansResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetPlansResponse_FieldSubPathArrayOfValues)
}

func (s BatchGetPlansResponsePathSelectorPlansMetadataSyncingRegions) WithItemValue(value string) *BatchGetPlansResponse_FieldSubPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*BatchGetPlansResponse_FieldSubPathArrayItemValue)
}

type BatchGetPlansResponsePathSelectorMissing struct{}

func (BatchGetPlansResponsePathSelectorMissing) FieldPath() *BatchGetPlansResponse_FieldTerminalPath {
	return &BatchGetPlansResponse_FieldTerminalPath{selector: BatchGetPlansResponse_FieldPathSelectorMissing}
}

func (s BatchGetPlansResponsePathSelectorMissing) WithValue(value []*plan.Reference) *BatchGetPlansResponse_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetPlansResponse_FieldTerminalPathValue)
}

func (s BatchGetPlansResponsePathSelectorMissing) WithArrayOfValues(values [][]*plan.Reference) *BatchGetPlansResponse_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetPlansResponse_FieldTerminalPathArrayOfValues)
}

func (s BatchGetPlansResponsePathSelectorMissing) WithItemValue(value *plan.Reference) *BatchGetPlansResponse_FieldTerminalPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*BatchGetPlansResponse_FieldTerminalPathArrayItemValue)
}

type ListPlansRequestFieldPathBuilder struct{}

func NewListPlansRequestFieldPathBuilder() ListPlansRequestFieldPathBuilder {
	return ListPlansRequestFieldPathBuilder{}
}
func (ListPlansRequestFieldPathBuilder) PageSize() ListPlansRequestPathSelectorPageSize {
	return ListPlansRequestPathSelectorPageSize{}
}
func (ListPlansRequestFieldPathBuilder) PageToken() ListPlansRequestPathSelectorPageToken {
	return ListPlansRequestPathSelectorPageToken{}
}
func (ListPlansRequestFieldPathBuilder) OrderBy() ListPlansRequestPathSelectorOrderBy {
	return ListPlansRequestPathSelectorOrderBy{}
}
func (ListPlansRequestFieldPathBuilder) Filter() ListPlansRequestPathSelectorFilter {
	return ListPlansRequestPathSelectorFilter{}
}
func (ListPlansRequestFieldPathBuilder) FieldMask() ListPlansRequestPathSelectorFieldMask {
	return ListPlansRequestPathSelectorFieldMask{}
}
func (ListPlansRequestFieldPathBuilder) View() ListPlansRequestPathSelectorView {
	return ListPlansRequestPathSelectorView{}
}

type ListPlansRequestPathSelectorPageSize struct{}

func (ListPlansRequestPathSelectorPageSize) FieldPath() *ListPlansRequest_FieldTerminalPath {
	return &ListPlansRequest_FieldTerminalPath{selector: ListPlansRequest_FieldPathSelectorPageSize}
}

func (s ListPlansRequestPathSelectorPageSize) WithValue(value int32) *ListPlansRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*ListPlansRequest_FieldTerminalPathValue)
}

func (s ListPlansRequestPathSelectorPageSize) WithArrayOfValues(values []int32) *ListPlansRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListPlansRequest_FieldTerminalPathArrayOfValues)
}

type ListPlansRequestPathSelectorPageToken struct{}

func (ListPlansRequestPathSelectorPageToken) FieldPath() *ListPlansRequest_FieldTerminalPath {
	return &ListPlansRequest_FieldTerminalPath{selector: ListPlansRequest_FieldPathSelectorPageToken}
}

func (s ListPlansRequestPathSelectorPageToken) WithValue(value *plan.PagerCursor) *ListPlansRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*ListPlansRequest_FieldTerminalPathValue)
}

func (s ListPlansRequestPathSelectorPageToken) WithArrayOfValues(values []*plan.PagerCursor) *ListPlansRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListPlansRequest_FieldTerminalPathArrayOfValues)
}

type ListPlansRequestPathSelectorOrderBy struct{}

func (ListPlansRequestPathSelectorOrderBy) FieldPath() *ListPlansRequest_FieldTerminalPath {
	return &ListPlansRequest_FieldTerminalPath{selector: ListPlansRequest_FieldPathSelectorOrderBy}
}

func (s ListPlansRequestPathSelectorOrderBy) WithValue(value *plan.OrderBy) *ListPlansRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*ListPlansRequest_FieldTerminalPathValue)
}

func (s ListPlansRequestPathSelectorOrderBy) WithArrayOfValues(values []*plan.OrderBy) *ListPlansRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListPlansRequest_FieldTerminalPathArrayOfValues)
}

type ListPlansRequestPathSelectorFilter struct{}

func (ListPlansRequestPathSelectorFilter) FieldPath() *ListPlansRequest_FieldTerminalPath {
	return &ListPlansRequest_FieldTerminalPath{selector: ListPlansRequest_FieldPathSelectorFilter}
}

func (s ListPlansRequestPathSelectorFilter) WithValue(value *plan.Filter) *ListPlansRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*ListPlansRequest_FieldTerminalPathValue)
}

func (s ListPlansRequestPathSelectorFilter) WithArrayOfValues(values []*plan.Filter) *ListPlansRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListPlansRequest_FieldTerminalPathArrayOfValues)
}

type ListPlansRequestPathSelectorFieldMask struct{}

func (ListPlansRequestPathSelectorFieldMask) FieldPath() *ListPlansRequest_FieldTerminalPath {
	return &ListPlansRequest_FieldTerminalPath{selector: ListPlansRequest_FieldPathSelectorFieldMask}
}

func (s ListPlansRequestPathSelectorFieldMask) WithValue(value *plan.Plan_FieldMask) *ListPlansRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*ListPlansRequest_FieldTerminalPathValue)
}

func (s ListPlansRequestPathSelectorFieldMask) WithArrayOfValues(values []*plan.Plan_FieldMask) *ListPlansRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListPlansRequest_FieldTerminalPathArrayOfValues)
}

type ListPlansRequestPathSelectorView struct{}

func (ListPlansRequestPathSelectorView) FieldPath() *ListPlansRequest_FieldTerminalPath {
	return &ListPlansRequest_FieldTerminalPath{selector: ListPlansRequest_FieldPathSelectorView}
}

func (s ListPlansRequestPathSelectorView) WithValue(value view.View) *ListPlansRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*ListPlansRequest_FieldTerminalPathValue)
}

func (s ListPlansRequestPathSelectorView) WithArrayOfValues(values []view.View) *ListPlansRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListPlansRequest_FieldTerminalPathArrayOfValues)
}

type ListPlansResponseFieldPathBuilder struct{}

func NewListPlansResponseFieldPathBuilder() ListPlansResponseFieldPathBuilder {
	return ListPlansResponseFieldPathBuilder{}
}
func (ListPlansResponseFieldPathBuilder) Plans() ListPlansResponsePathSelectorPlans {
	return ListPlansResponsePathSelectorPlans{}
}
func (ListPlansResponseFieldPathBuilder) PrevPageToken() ListPlansResponsePathSelectorPrevPageToken {
	return ListPlansResponsePathSelectorPrevPageToken{}
}
func (ListPlansResponseFieldPathBuilder) NextPageToken() ListPlansResponsePathSelectorNextPageToken {
	return ListPlansResponsePathSelectorNextPageToken{}
}

type ListPlansResponsePathSelectorPlans struct{}

func (ListPlansResponsePathSelectorPlans) FieldPath() *ListPlansResponse_FieldTerminalPath {
	return &ListPlansResponse_FieldTerminalPath{selector: ListPlansResponse_FieldPathSelectorPlans}
}

func (s ListPlansResponsePathSelectorPlans) WithValue(value []*plan.Plan) *ListPlansResponse_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*ListPlansResponse_FieldTerminalPathValue)
}

func (s ListPlansResponsePathSelectorPlans) WithArrayOfValues(values [][]*plan.Plan) *ListPlansResponse_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListPlansResponse_FieldTerminalPathArrayOfValues)
}

func (s ListPlansResponsePathSelectorPlans) WithItemValue(value *plan.Plan) *ListPlansResponse_FieldTerminalPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*ListPlansResponse_FieldTerminalPathArrayItemValue)
}
func (ListPlansResponsePathSelectorPlans) WithSubPath(subPath plan.Plan_FieldPath) *ListPlansResponse_FieldSubPath {
	return &ListPlansResponse_FieldSubPath{selector: ListPlansResponse_FieldPathSelectorPlans, subPath: subPath}
}

func (s ListPlansResponsePathSelectorPlans) WithSubValue(subPathValue plan.Plan_FieldPathValue) *ListPlansResponse_FieldSubPathValue {
	return &ListPlansResponse_FieldSubPathValue{ListPlansResponse_FieldPath: s.WithSubPath(subPathValue), subPathValue: subPathValue}
}

func (s ListPlansResponsePathSelectorPlans) WithSubArrayOfValues(subPathArrayOfValues plan.Plan_FieldPathArrayOfValues) *ListPlansResponse_FieldSubPathArrayOfValues {
	return &ListPlansResponse_FieldSubPathArrayOfValues{ListPlansResponse_FieldPath: s.WithSubPath(subPathArrayOfValues), subPathArrayOfValues: subPathArrayOfValues}
}

func (s ListPlansResponsePathSelectorPlans) WithSubArrayItemValue(subPathArrayItemValue plan.Plan_FieldPathArrayItemValue) *ListPlansResponse_FieldSubPathArrayItemValue {
	return &ListPlansResponse_FieldSubPathArrayItemValue{ListPlansResponse_FieldPath: s.WithSubPath(subPathArrayItemValue), subPathItemValue: subPathArrayItemValue}
}

func (ListPlansResponsePathSelectorPlans) Name() ListPlansResponsePathSelectorPlansName {
	return ListPlansResponsePathSelectorPlansName{}
}

func (ListPlansResponsePathSelectorPlans) DisplayName() ListPlansResponsePathSelectorPlansDisplayName {
	return ListPlansResponsePathSelectorPlansDisplayName{}
}

func (ListPlansResponsePathSelectorPlans) Service() ListPlansResponsePathSelectorPlansService {
	return ListPlansResponsePathSelectorPlansService{}
}

func (ListPlansResponsePathSelectorPlans) ResourceLimits() ListPlansResponsePathSelectorPlansResourceLimits {
	return ListPlansResponsePathSelectorPlansResourceLimits{}
}

func (ListPlansResponsePathSelectorPlans) Metadata() ListPlansResponsePathSelectorPlansMetadata {
	return ListPlansResponsePathSelectorPlansMetadata{}
}

type ListPlansResponsePathSelectorPlansName struct{}

func (ListPlansResponsePathSelectorPlansName) FieldPath() *ListPlansResponse_FieldSubPath {
	return &ListPlansResponse_FieldSubPath{
		selector: ListPlansResponse_FieldPathSelectorPlans,
		subPath:  plan.NewPlanFieldPathBuilder().Name().FieldPath(),
	}
}

func (s ListPlansResponsePathSelectorPlansName) WithValue(value *plan.Name) *ListPlansResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListPlansResponse_FieldSubPathValue)
}

func (s ListPlansResponsePathSelectorPlansName) WithArrayOfValues(values []*plan.Name) *ListPlansResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListPlansResponse_FieldSubPathArrayOfValues)
}

type ListPlansResponsePathSelectorPlansDisplayName struct{}

func (ListPlansResponsePathSelectorPlansDisplayName) FieldPath() *ListPlansResponse_FieldSubPath {
	return &ListPlansResponse_FieldSubPath{
		selector: ListPlansResponse_FieldPathSelectorPlans,
		subPath:  plan.NewPlanFieldPathBuilder().DisplayName().FieldPath(),
	}
}

func (s ListPlansResponsePathSelectorPlansDisplayName) WithValue(value string) *ListPlansResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListPlansResponse_FieldSubPathValue)
}

func (s ListPlansResponsePathSelectorPlansDisplayName) WithArrayOfValues(values []string) *ListPlansResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListPlansResponse_FieldSubPathArrayOfValues)
}

type ListPlansResponsePathSelectorPlansService struct{}

func (ListPlansResponsePathSelectorPlansService) FieldPath() *ListPlansResponse_FieldSubPath {
	return &ListPlansResponse_FieldSubPath{
		selector: ListPlansResponse_FieldPathSelectorPlans,
		subPath:  plan.NewPlanFieldPathBuilder().Service().FieldPath(),
	}
}

func (s ListPlansResponsePathSelectorPlansService) WithValue(value *meta_service.Reference) *ListPlansResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListPlansResponse_FieldSubPathValue)
}

func (s ListPlansResponsePathSelectorPlansService) WithArrayOfValues(values []*meta_service.Reference) *ListPlansResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListPlansResponse_FieldSubPathArrayOfValues)
}

type ListPlansResponsePathSelectorPlansResourceLimits struct{}

func (ListPlansResponsePathSelectorPlansResourceLimits) FieldPath() *ListPlansResponse_FieldSubPath {
	return &ListPlansResponse_FieldSubPath{
		selector: ListPlansResponse_FieldPathSelectorPlans,
		subPath:  plan.NewPlanFieldPathBuilder().ResourceLimits().FieldPath(),
	}
}

func (s ListPlansResponsePathSelectorPlansResourceLimits) WithValue(value []*common.Allowance) *ListPlansResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListPlansResponse_FieldSubPathValue)
}

func (s ListPlansResponsePathSelectorPlansResourceLimits) WithArrayOfValues(values [][]*common.Allowance) *ListPlansResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListPlansResponse_FieldSubPathArrayOfValues)
}

func (s ListPlansResponsePathSelectorPlansResourceLimits) WithItemValue(value *common.Allowance) *ListPlansResponse_FieldSubPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*ListPlansResponse_FieldSubPathArrayItemValue)
}

func (ListPlansResponsePathSelectorPlansResourceLimits) Resource() ListPlansResponsePathSelectorPlansResourceLimitsResource {
	return ListPlansResponsePathSelectorPlansResourceLimitsResource{}
}

func (ListPlansResponsePathSelectorPlansResourceLimits) Value() ListPlansResponsePathSelectorPlansResourceLimitsValue {
	return ListPlansResponsePathSelectorPlansResourceLimitsValue{}
}

type ListPlansResponsePathSelectorPlansResourceLimitsResource struct{}

func (ListPlansResponsePathSelectorPlansResourceLimitsResource) FieldPath() *ListPlansResponse_FieldSubPath {
	return &ListPlansResponse_FieldSubPath{
		selector: ListPlansResponse_FieldPathSelectorPlans,
		subPath:  plan.NewPlanFieldPathBuilder().ResourceLimits().Resource().FieldPath(),
	}
}

func (s ListPlansResponsePathSelectorPlansResourceLimitsResource) WithValue(value *meta_resource.Reference) *ListPlansResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListPlansResponse_FieldSubPathValue)
}

func (s ListPlansResponsePathSelectorPlansResourceLimitsResource) WithArrayOfValues(values []*meta_resource.Reference) *ListPlansResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListPlansResponse_FieldSubPathArrayOfValues)
}

type ListPlansResponsePathSelectorPlansResourceLimitsValue struct{}

func (ListPlansResponsePathSelectorPlansResourceLimitsValue) FieldPath() *ListPlansResponse_FieldSubPath {
	return &ListPlansResponse_FieldSubPath{
		selector: ListPlansResponse_FieldPathSelectorPlans,
		subPath:  plan.NewPlanFieldPathBuilder().ResourceLimits().Value().FieldPath(),
	}
}

func (s ListPlansResponsePathSelectorPlansResourceLimitsValue) WithValue(value int64) *ListPlansResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListPlansResponse_FieldSubPathValue)
}

func (s ListPlansResponsePathSelectorPlansResourceLimitsValue) WithArrayOfValues(values []int64) *ListPlansResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListPlansResponse_FieldSubPathArrayOfValues)
}

type ListPlansResponsePathSelectorPlansMetadata struct{}

func (ListPlansResponsePathSelectorPlansMetadata) FieldPath() *ListPlansResponse_FieldSubPath {
	return &ListPlansResponse_FieldSubPath{
		selector: ListPlansResponse_FieldPathSelectorPlans,
		subPath:  plan.NewPlanFieldPathBuilder().Metadata().FieldPath(),
	}
}

func (s ListPlansResponsePathSelectorPlansMetadata) WithValue(value *ntt_meta.Meta) *ListPlansResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListPlansResponse_FieldSubPathValue)
}

func (s ListPlansResponsePathSelectorPlansMetadata) WithArrayOfValues(values []*ntt_meta.Meta) *ListPlansResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListPlansResponse_FieldSubPathArrayOfValues)
}

func (ListPlansResponsePathSelectorPlansMetadata) CreateTime() ListPlansResponsePathSelectorPlansMetadataCreateTime {
	return ListPlansResponsePathSelectorPlansMetadataCreateTime{}
}

func (ListPlansResponsePathSelectorPlansMetadata) UpdateTime() ListPlansResponsePathSelectorPlansMetadataUpdateTime {
	return ListPlansResponsePathSelectorPlansMetadataUpdateTime{}
}

func (ListPlansResponsePathSelectorPlansMetadata) Uuid() ListPlansResponsePathSelectorPlansMetadataUuid {
	return ListPlansResponsePathSelectorPlansMetadataUuid{}
}

func (ListPlansResponsePathSelectorPlansMetadata) Tags() ListPlansResponsePathSelectorPlansMetadataTags {
	return ListPlansResponsePathSelectorPlansMetadataTags{}
}

func (ListPlansResponsePathSelectorPlansMetadata) Labels() ListPlansResponsePathSelectorPlansMetadataLabels {
	return ListPlansResponsePathSelectorPlansMetadataLabels{}
}

func (ListPlansResponsePathSelectorPlansMetadata) Annotations() ListPlansResponsePathSelectorPlansMetadataAnnotations {
	return ListPlansResponsePathSelectorPlansMetadataAnnotations{}
}

func (ListPlansResponsePathSelectorPlansMetadata) Generation() ListPlansResponsePathSelectorPlansMetadataGeneration {
	return ListPlansResponsePathSelectorPlansMetadataGeneration{}
}

func (ListPlansResponsePathSelectorPlansMetadata) ResourceVersion() ListPlansResponsePathSelectorPlansMetadataResourceVersion {
	return ListPlansResponsePathSelectorPlansMetadataResourceVersion{}
}

func (ListPlansResponsePathSelectorPlansMetadata) OwnerReferences() ListPlansResponsePathSelectorPlansMetadataOwnerReferences {
	return ListPlansResponsePathSelectorPlansMetadataOwnerReferences{}
}

func (ListPlansResponsePathSelectorPlansMetadata) Shards() ListPlansResponsePathSelectorPlansMetadataShards {
	return ListPlansResponsePathSelectorPlansMetadataShards{}
}

func (ListPlansResponsePathSelectorPlansMetadata) Syncing() ListPlansResponsePathSelectorPlansMetadataSyncing {
	return ListPlansResponsePathSelectorPlansMetadataSyncing{}
}

type ListPlansResponsePathSelectorPlansMetadataCreateTime struct{}

func (ListPlansResponsePathSelectorPlansMetadataCreateTime) FieldPath() *ListPlansResponse_FieldSubPath {
	return &ListPlansResponse_FieldSubPath{
		selector: ListPlansResponse_FieldPathSelectorPlans,
		subPath:  plan.NewPlanFieldPathBuilder().Metadata().CreateTime().FieldPath(),
	}
}

func (s ListPlansResponsePathSelectorPlansMetadataCreateTime) WithValue(value *timestamp.Timestamp) *ListPlansResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListPlansResponse_FieldSubPathValue)
}

func (s ListPlansResponsePathSelectorPlansMetadataCreateTime) WithArrayOfValues(values []*timestamp.Timestamp) *ListPlansResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListPlansResponse_FieldSubPathArrayOfValues)
}

type ListPlansResponsePathSelectorPlansMetadataUpdateTime struct{}

func (ListPlansResponsePathSelectorPlansMetadataUpdateTime) FieldPath() *ListPlansResponse_FieldSubPath {
	return &ListPlansResponse_FieldSubPath{
		selector: ListPlansResponse_FieldPathSelectorPlans,
		subPath:  plan.NewPlanFieldPathBuilder().Metadata().UpdateTime().FieldPath(),
	}
}

func (s ListPlansResponsePathSelectorPlansMetadataUpdateTime) WithValue(value *timestamp.Timestamp) *ListPlansResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListPlansResponse_FieldSubPathValue)
}

func (s ListPlansResponsePathSelectorPlansMetadataUpdateTime) WithArrayOfValues(values []*timestamp.Timestamp) *ListPlansResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListPlansResponse_FieldSubPathArrayOfValues)
}

type ListPlansResponsePathSelectorPlansMetadataUuid struct{}

func (ListPlansResponsePathSelectorPlansMetadataUuid) FieldPath() *ListPlansResponse_FieldSubPath {
	return &ListPlansResponse_FieldSubPath{
		selector: ListPlansResponse_FieldPathSelectorPlans,
		subPath:  plan.NewPlanFieldPathBuilder().Metadata().Uuid().FieldPath(),
	}
}

func (s ListPlansResponsePathSelectorPlansMetadataUuid) WithValue(value string) *ListPlansResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListPlansResponse_FieldSubPathValue)
}

func (s ListPlansResponsePathSelectorPlansMetadataUuid) WithArrayOfValues(values []string) *ListPlansResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListPlansResponse_FieldSubPathArrayOfValues)
}

type ListPlansResponsePathSelectorPlansMetadataTags struct{}

func (ListPlansResponsePathSelectorPlansMetadataTags) FieldPath() *ListPlansResponse_FieldSubPath {
	return &ListPlansResponse_FieldSubPath{
		selector: ListPlansResponse_FieldPathSelectorPlans,
		subPath:  plan.NewPlanFieldPathBuilder().Metadata().Tags().FieldPath(),
	}
}

func (s ListPlansResponsePathSelectorPlansMetadataTags) WithValue(value []string) *ListPlansResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListPlansResponse_FieldSubPathValue)
}

func (s ListPlansResponsePathSelectorPlansMetadataTags) WithArrayOfValues(values [][]string) *ListPlansResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListPlansResponse_FieldSubPathArrayOfValues)
}

func (s ListPlansResponsePathSelectorPlansMetadataTags) WithItemValue(value string) *ListPlansResponse_FieldSubPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*ListPlansResponse_FieldSubPathArrayItemValue)
}

type ListPlansResponsePathSelectorPlansMetadataLabels struct{}

func (ListPlansResponsePathSelectorPlansMetadataLabels) FieldPath() *ListPlansResponse_FieldSubPath {
	return &ListPlansResponse_FieldSubPath{
		selector: ListPlansResponse_FieldPathSelectorPlans,
		subPath:  plan.NewPlanFieldPathBuilder().Metadata().Labels().FieldPath(),
	}
}

func (s ListPlansResponsePathSelectorPlansMetadataLabels) WithValue(value map[string]string) *ListPlansResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListPlansResponse_FieldSubPathValue)
}

func (s ListPlansResponsePathSelectorPlansMetadataLabels) WithArrayOfValues(values []map[string]string) *ListPlansResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListPlansResponse_FieldSubPathArrayOfValues)
}

func (ListPlansResponsePathSelectorPlansMetadataLabels) WithKey(key string) ListPlansResponseMapPathSelectorPlansMetadataLabels {
	return ListPlansResponseMapPathSelectorPlansMetadataLabels{key: key}
}

type ListPlansResponseMapPathSelectorPlansMetadataLabels struct {
	key string
}

func (s ListPlansResponseMapPathSelectorPlansMetadataLabels) FieldPath() *ListPlansResponse_FieldSubPath {
	return &ListPlansResponse_FieldSubPath{
		selector: ListPlansResponse_FieldPathSelectorPlans,
		subPath:  plan.NewPlanFieldPathBuilder().Metadata().Labels().WithKey(s.key).FieldPath(),
	}
}

func (s ListPlansResponseMapPathSelectorPlansMetadataLabels) WithValue(value string) *ListPlansResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListPlansResponse_FieldSubPathValue)
}

func (s ListPlansResponseMapPathSelectorPlansMetadataLabels) WithArrayOfValues(values []string) *ListPlansResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListPlansResponse_FieldSubPathArrayOfValues)
}

type ListPlansResponsePathSelectorPlansMetadataAnnotations struct{}

func (ListPlansResponsePathSelectorPlansMetadataAnnotations) FieldPath() *ListPlansResponse_FieldSubPath {
	return &ListPlansResponse_FieldSubPath{
		selector: ListPlansResponse_FieldPathSelectorPlans,
		subPath:  plan.NewPlanFieldPathBuilder().Metadata().Annotations().FieldPath(),
	}
}

func (s ListPlansResponsePathSelectorPlansMetadataAnnotations) WithValue(value map[string]string) *ListPlansResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListPlansResponse_FieldSubPathValue)
}

func (s ListPlansResponsePathSelectorPlansMetadataAnnotations) WithArrayOfValues(values []map[string]string) *ListPlansResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListPlansResponse_FieldSubPathArrayOfValues)
}

func (ListPlansResponsePathSelectorPlansMetadataAnnotations) WithKey(key string) ListPlansResponseMapPathSelectorPlansMetadataAnnotations {
	return ListPlansResponseMapPathSelectorPlansMetadataAnnotations{key: key}
}

type ListPlansResponseMapPathSelectorPlansMetadataAnnotations struct {
	key string
}

func (s ListPlansResponseMapPathSelectorPlansMetadataAnnotations) FieldPath() *ListPlansResponse_FieldSubPath {
	return &ListPlansResponse_FieldSubPath{
		selector: ListPlansResponse_FieldPathSelectorPlans,
		subPath:  plan.NewPlanFieldPathBuilder().Metadata().Annotations().WithKey(s.key).FieldPath(),
	}
}

func (s ListPlansResponseMapPathSelectorPlansMetadataAnnotations) WithValue(value string) *ListPlansResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListPlansResponse_FieldSubPathValue)
}

func (s ListPlansResponseMapPathSelectorPlansMetadataAnnotations) WithArrayOfValues(values []string) *ListPlansResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListPlansResponse_FieldSubPathArrayOfValues)
}

type ListPlansResponsePathSelectorPlansMetadataGeneration struct{}

func (ListPlansResponsePathSelectorPlansMetadataGeneration) FieldPath() *ListPlansResponse_FieldSubPath {
	return &ListPlansResponse_FieldSubPath{
		selector: ListPlansResponse_FieldPathSelectorPlans,
		subPath:  plan.NewPlanFieldPathBuilder().Metadata().Generation().FieldPath(),
	}
}

func (s ListPlansResponsePathSelectorPlansMetadataGeneration) WithValue(value int64) *ListPlansResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListPlansResponse_FieldSubPathValue)
}

func (s ListPlansResponsePathSelectorPlansMetadataGeneration) WithArrayOfValues(values []int64) *ListPlansResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListPlansResponse_FieldSubPathArrayOfValues)
}

type ListPlansResponsePathSelectorPlansMetadataResourceVersion struct{}

func (ListPlansResponsePathSelectorPlansMetadataResourceVersion) FieldPath() *ListPlansResponse_FieldSubPath {
	return &ListPlansResponse_FieldSubPath{
		selector: ListPlansResponse_FieldPathSelectorPlans,
		subPath:  plan.NewPlanFieldPathBuilder().Metadata().ResourceVersion().FieldPath(),
	}
}

func (s ListPlansResponsePathSelectorPlansMetadataResourceVersion) WithValue(value string) *ListPlansResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListPlansResponse_FieldSubPathValue)
}

func (s ListPlansResponsePathSelectorPlansMetadataResourceVersion) WithArrayOfValues(values []string) *ListPlansResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListPlansResponse_FieldSubPathArrayOfValues)
}

type ListPlansResponsePathSelectorPlansMetadataOwnerReferences struct{}

func (ListPlansResponsePathSelectorPlansMetadataOwnerReferences) FieldPath() *ListPlansResponse_FieldSubPath {
	return &ListPlansResponse_FieldSubPath{
		selector: ListPlansResponse_FieldPathSelectorPlans,
		subPath:  plan.NewPlanFieldPathBuilder().Metadata().OwnerReferences().FieldPath(),
	}
}

func (s ListPlansResponsePathSelectorPlansMetadataOwnerReferences) WithValue(value []*ntt_meta.OwnerReference) *ListPlansResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListPlansResponse_FieldSubPathValue)
}

func (s ListPlansResponsePathSelectorPlansMetadataOwnerReferences) WithArrayOfValues(values [][]*ntt_meta.OwnerReference) *ListPlansResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListPlansResponse_FieldSubPathArrayOfValues)
}

func (s ListPlansResponsePathSelectorPlansMetadataOwnerReferences) WithItemValue(value *ntt_meta.OwnerReference) *ListPlansResponse_FieldSubPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*ListPlansResponse_FieldSubPathArrayItemValue)
}

func (ListPlansResponsePathSelectorPlansMetadataOwnerReferences) ApiVersion() ListPlansResponsePathSelectorPlansMetadataOwnerReferencesApiVersion {
	return ListPlansResponsePathSelectorPlansMetadataOwnerReferencesApiVersion{}
}

func (ListPlansResponsePathSelectorPlansMetadataOwnerReferences) Kind() ListPlansResponsePathSelectorPlansMetadataOwnerReferencesKind {
	return ListPlansResponsePathSelectorPlansMetadataOwnerReferencesKind{}
}

func (ListPlansResponsePathSelectorPlansMetadataOwnerReferences) Name() ListPlansResponsePathSelectorPlansMetadataOwnerReferencesName {
	return ListPlansResponsePathSelectorPlansMetadataOwnerReferencesName{}
}

func (ListPlansResponsePathSelectorPlansMetadataOwnerReferences) Uid() ListPlansResponsePathSelectorPlansMetadataOwnerReferencesUid {
	return ListPlansResponsePathSelectorPlansMetadataOwnerReferencesUid{}
}

func (ListPlansResponsePathSelectorPlansMetadataOwnerReferences) Controller() ListPlansResponsePathSelectorPlansMetadataOwnerReferencesController {
	return ListPlansResponsePathSelectorPlansMetadataOwnerReferencesController{}
}

func (ListPlansResponsePathSelectorPlansMetadataOwnerReferences) BlockOwnerDeletion() ListPlansResponsePathSelectorPlansMetadataOwnerReferencesBlockOwnerDeletion {
	return ListPlansResponsePathSelectorPlansMetadataOwnerReferencesBlockOwnerDeletion{}
}

type ListPlansResponsePathSelectorPlansMetadataOwnerReferencesApiVersion struct{}

func (ListPlansResponsePathSelectorPlansMetadataOwnerReferencesApiVersion) FieldPath() *ListPlansResponse_FieldSubPath {
	return &ListPlansResponse_FieldSubPath{
		selector: ListPlansResponse_FieldPathSelectorPlans,
		subPath:  plan.NewPlanFieldPathBuilder().Metadata().OwnerReferences().ApiVersion().FieldPath(),
	}
}

func (s ListPlansResponsePathSelectorPlansMetadataOwnerReferencesApiVersion) WithValue(value string) *ListPlansResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListPlansResponse_FieldSubPathValue)
}

func (s ListPlansResponsePathSelectorPlansMetadataOwnerReferencesApiVersion) WithArrayOfValues(values []string) *ListPlansResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListPlansResponse_FieldSubPathArrayOfValues)
}

type ListPlansResponsePathSelectorPlansMetadataOwnerReferencesKind struct{}

func (ListPlansResponsePathSelectorPlansMetadataOwnerReferencesKind) FieldPath() *ListPlansResponse_FieldSubPath {
	return &ListPlansResponse_FieldSubPath{
		selector: ListPlansResponse_FieldPathSelectorPlans,
		subPath:  plan.NewPlanFieldPathBuilder().Metadata().OwnerReferences().Kind().FieldPath(),
	}
}

func (s ListPlansResponsePathSelectorPlansMetadataOwnerReferencesKind) WithValue(value string) *ListPlansResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListPlansResponse_FieldSubPathValue)
}

func (s ListPlansResponsePathSelectorPlansMetadataOwnerReferencesKind) WithArrayOfValues(values []string) *ListPlansResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListPlansResponse_FieldSubPathArrayOfValues)
}

type ListPlansResponsePathSelectorPlansMetadataOwnerReferencesName struct{}

func (ListPlansResponsePathSelectorPlansMetadataOwnerReferencesName) FieldPath() *ListPlansResponse_FieldSubPath {
	return &ListPlansResponse_FieldSubPath{
		selector: ListPlansResponse_FieldPathSelectorPlans,
		subPath:  plan.NewPlanFieldPathBuilder().Metadata().OwnerReferences().Name().FieldPath(),
	}
}

func (s ListPlansResponsePathSelectorPlansMetadataOwnerReferencesName) WithValue(value string) *ListPlansResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListPlansResponse_FieldSubPathValue)
}

func (s ListPlansResponsePathSelectorPlansMetadataOwnerReferencesName) WithArrayOfValues(values []string) *ListPlansResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListPlansResponse_FieldSubPathArrayOfValues)
}

type ListPlansResponsePathSelectorPlansMetadataOwnerReferencesUid struct{}

func (ListPlansResponsePathSelectorPlansMetadataOwnerReferencesUid) FieldPath() *ListPlansResponse_FieldSubPath {
	return &ListPlansResponse_FieldSubPath{
		selector: ListPlansResponse_FieldPathSelectorPlans,
		subPath:  plan.NewPlanFieldPathBuilder().Metadata().OwnerReferences().Uid().FieldPath(),
	}
}

func (s ListPlansResponsePathSelectorPlansMetadataOwnerReferencesUid) WithValue(value string) *ListPlansResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListPlansResponse_FieldSubPathValue)
}

func (s ListPlansResponsePathSelectorPlansMetadataOwnerReferencesUid) WithArrayOfValues(values []string) *ListPlansResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListPlansResponse_FieldSubPathArrayOfValues)
}

type ListPlansResponsePathSelectorPlansMetadataOwnerReferencesController struct{}

func (ListPlansResponsePathSelectorPlansMetadataOwnerReferencesController) FieldPath() *ListPlansResponse_FieldSubPath {
	return &ListPlansResponse_FieldSubPath{
		selector: ListPlansResponse_FieldPathSelectorPlans,
		subPath:  plan.NewPlanFieldPathBuilder().Metadata().OwnerReferences().Controller().FieldPath(),
	}
}

func (s ListPlansResponsePathSelectorPlansMetadataOwnerReferencesController) WithValue(value bool) *ListPlansResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListPlansResponse_FieldSubPathValue)
}

func (s ListPlansResponsePathSelectorPlansMetadataOwnerReferencesController) WithArrayOfValues(values []bool) *ListPlansResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListPlansResponse_FieldSubPathArrayOfValues)
}

type ListPlansResponsePathSelectorPlansMetadataOwnerReferencesBlockOwnerDeletion struct{}

func (ListPlansResponsePathSelectorPlansMetadataOwnerReferencesBlockOwnerDeletion) FieldPath() *ListPlansResponse_FieldSubPath {
	return &ListPlansResponse_FieldSubPath{
		selector: ListPlansResponse_FieldPathSelectorPlans,
		subPath:  plan.NewPlanFieldPathBuilder().Metadata().OwnerReferences().BlockOwnerDeletion().FieldPath(),
	}
}

func (s ListPlansResponsePathSelectorPlansMetadataOwnerReferencesBlockOwnerDeletion) WithValue(value bool) *ListPlansResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListPlansResponse_FieldSubPathValue)
}

func (s ListPlansResponsePathSelectorPlansMetadataOwnerReferencesBlockOwnerDeletion) WithArrayOfValues(values []bool) *ListPlansResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListPlansResponse_FieldSubPathArrayOfValues)
}

type ListPlansResponsePathSelectorPlansMetadataShards struct{}

func (ListPlansResponsePathSelectorPlansMetadataShards) FieldPath() *ListPlansResponse_FieldSubPath {
	return &ListPlansResponse_FieldSubPath{
		selector: ListPlansResponse_FieldPathSelectorPlans,
		subPath:  plan.NewPlanFieldPathBuilder().Metadata().Shards().FieldPath(),
	}
}

func (s ListPlansResponsePathSelectorPlansMetadataShards) WithValue(value map[string]int64) *ListPlansResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListPlansResponse_FieldSubPathValue)
}

func (s ListPlansResponsePathSelectorPlansMetadataShards) WithArrayOfValues(values []map[string]int64) *ListPlansResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListPlansResponse_FieldSubPathArrayOfValues)
}

func (ListPlansResponsePathSelectorPlansMetadataShards) WithKey(key string) ListPlansResponseMapPathSelectorPlansMetadataShards {
	return ListPlansResponseMapPathSelectorPlansMetadataShards{key: key}
}

type ListPlansResponseMapPathSelectorPlansMetadataShards struct {
	key string
}

func (s ListPlansResponseMapPathSelectorPlansMetadataShards) FieldPath() *ListPlansResponse_FieldSubPath {
	return &ListPlansResponse_FieldSubPath{
		selector: ListPlansResponse_FieldPathSelectorPlans,
		subPath:  plan.NewPlanFieldPathBuilder().Metadata().Shards().WithKey(s.key).FieldPath(),
	}
}

func (s ListPlansResponseMapPathSelectorPlansMetadataShards) WithValue(value int64) *ListPlansResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListPlansResponse_FieldSubPathValue)
}

func (s ListPlansResponseMapPathSelectorPlansMetadataShards) WithArrayOfValues(values []int64) *ListPlansResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListPlansResponse_FieldSubPathArrayOfValues)
}

type ListPlansResponsePathSelectorPlansMetadataSyncing struct{}

func (ListPlansResponsePathSelectorPlansMetadataSyncing) FieldPath() *ListPlansResponse_FieldSubPath {
	return &ListPlansResponse_FieldSubPath{
		selector: ListPlansResponse_FieldPathSelectorPlans,
		subPath:  plan.NewPlanFieldPathBuilder().Metadata().Syncing().FieldPath(),
	}
}

func (s ListPlansResponsePathSelectorPlansMetadataSyncing) WithValue(value *ntt_meta.SyncingMeta) *ListPlansResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListPlansResponse_FieldSubPathValue)
}

func (s ListPlansResponsePathSelectorPlansMetadataSyncing) WithArrayOfValues(values []*ntt_meta.SyncingMeta) *ListPlansResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListPlansResponse_FieldSubPathArrayOfValues)
}

func (ListPlansResponsePathSelectorPlansMetadataSyncing) OwningRegion() ListPlansResponsePathSelectorPlansMetadataSyncingOwningRegion {
	return ListPlansResponsePathSelectorPlansMetadataSyncingOwningRegion{}
}

func (ListPlansResponsePathSelectorPlansMetadataSyncing) Regions() ListPlansResponsePathSelectorPlansMetadataSyncingRegions {
	return ListPlansResponsePathSelectorPlansMetadataSyncingRegions{}
}

type ListPlansResponsePathSelectorPlansMetadataSyncingOwningRegion struct{}

func (ListPlansResponsePathSelectorPlansMetadataSyncingOwningRegion) FieldPath() *ListPlansResponse_FieldSubPath {
	return &ListPlansResponse_FieldSubPath{
		selector: ListPlansResponse_FieldPathSelectorPlans,
		subPath:  plan.NewPlanFieldPathBuilder().Metadata().Syncing().OwningRegion().FieldPath(),
	}
}

func (s ListPlansResponsePathSelectorPlansMetadataSyncingOwningRegion) WithValue(value string) *ListPlansResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListPlansResponse_FieldSubPathValue)
}

func (s ListPlansResponsePathSelectorPlansMetadataSyncingOwningRegion) WithArrayOfValues(values []string) *ListPlansResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListPlansResponse_FieldSubPathArrayOfValues)
}

type ListPlansResponsePathSelectorPlansMetadataSyncingRegions struct{}

func (ListPlansResponsePathSelectorPlansMetadataSyncingRegions) FieldPath() *ListPlansResponse_FieldSubPath {
	return &ListPlansResponse_FieldSubPath{
		selector: ListPlansResponse_FieldPathSelectorPlans,
		subPath:  plan.NewPlanFieldPathBuilder().Metadata().Syncing().Regions().FieldPath(),
	}
}

func (s ListPlansResponsePathSelectorPlansMetadataSyncingRegions) WithValue(value []string) *ListPlansResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListPlansResponse_FieldSubPathValue)
}

func (s ListPlansResponsePathSelectorPlansMetadataSyncingRegions) WithArrayOfValues(values [][]string) *ListPlansResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListPlansResponse_FieldSubPathArrayOfValues)
}

func (s ListPlansResponsePathSelectorPlansMetadataSyncingRegions) WithItemValue(value string) *ListPlansResponse_FieldSubPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*ListPlansResponse_FieldSubPathArrayItemValue)
}

type ListPlansResponsePathSelectorPrevPageToken struct{}

func (ListPlansResponsePathSelectorPrevPageToken) FieldPath() *ListPlansResponse_FieldTerminalPath {
	return &ListPlansResponse_FieldTerminalPath{selector: ListPlansResponse_FieldPathSelectorPrevPageToken}
}

func (s ListPlansResponsePathSelectorPrevPageToken) WithValue(value *plan.PagerCursor) *ListPlansResponse_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*ListPlansResponse_FieldTerminalPathValue)
}

func (s ListPlansResponsePathSelectorPrevPageToken) WithArrayOfValues(values []*plan.PagerCursor) *ListPlansResponse_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListPlansResponse_FieldTerminalPathArrayOfValues)
}

type ListPlansResponsePathSelectorNextPageToken struct{}

func (ListPlansResponsePathSelectorNextPageToken) FieldPath() *ListPlansResponse_FieldTerminalPath {
	return &ListPlansResponse_FieldTerminalPath{selector: ListPlansResponse_FieldPathSelectorNextPageToken}
}

func (s ListPlansResponsePathSelectorNextPageToken) WithValue(value *plan.PagerCursor) *ListPlansResponse_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*ListPlansResponse_FieldTerminalPathValue)
}

func (s ListPlansResponsePathSelectorNextPageToken) WithArrayOfValues(values []*plan.PagerCursor) *ListPlansResponse_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListPlansResponse_FieldTerminalPathArrayOfValues)
}

type WatchPlanRequestFieldPathBuilder struct{}

func NewWatchPlanRequestFieldPathBuilder() WatchPlanRequestFieldPathBuilder {
	return WatchPlanRequestFieldPathBuilder{}
}
func (WatchPlanRequestFieldPathBuilder) Name() WatchPlanRequestPathSelectorName {
	return WatchPlanRequestPathSelectorName{}
}
func (WatchPlanRequestFieldPathBuilder) FieldMask() WatchPlanRequestPathSelectorFieldMask {
	return WatchPlanRequestPathSelectorFieldMask{}
}
func (WatchPlanRequestFieldPathBuilder) View() WatchPlanRequestPathSelectorView {
	return WatchPlanRequestPathSelectorView{}
}

type WatchPlanRequestPathSelectorName struct{}

func (WatchPlanRequestPathSelectorName) FieldPath() *WatchPlanRequest_FieldTerminalPath {
	return &WatchPlanRequest_FieldTerminalPath{selector: WatchPlanRequest_FieldPathSelectorName}
}

func (s WatchPlanRequestPathSelectorName) WithValue(value *plan.Reference) *WatchPlanRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*WatchPlanRequest_FieldTerminalPathValue)
}

func (s WatchPlanRequestPathSelectorName) WithArrayOfValues(values []*plan.Reference) *WatchPlanRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*WatchPlanRequest_FieldTerminalPathArrayOfValues)
}

type WatchPlanRequestPathSelectorFieldMask struct{}

func (WatchPlanRequestPathSelectorFieldMask) FieldPath() *WatchPlanRequest_FieldTerminalPath {
	return &WatchPlanRequest_FieldTerminalPath{selector: WatchPlanRequest_FieldPathSelectorFieldMask}
}

func (s WatchPlanRequestPathSelectorFieldMask) WithValue(value *plan.Plan_FieldMask) *WatchPlanRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*WatchPlanRequest_FieldTerminalPathValue)
}

func (s WatchPlanRequestPathSelectorFieldMask) WithArrayOfValues(values []*plan.Plan_FieldMask) *WatchPlanRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*WatchPlanRequest_FieldTerminalPathArrayOfValues)
}

type WatchPlanRequestPathSelectorView struct{}

func (WatchPlanRequestPathSelectorView) FieldPath() *WatchPlanRequest_FieldTerminalPath {
	return &WatchPlanRequest_FieldTerminalPath{selector: WatchPlanRequest_FieldPathSelectorView}
}

func (s WatchPlanRequestPathSelectorView) WithValue(value view.View) *WatchPlanRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*WatchPlanRequest_FieldTerminalPathValue)
}

func (s WatchPlanRequestPathSelectorView) WithArrayOfValues(values []view.View) *WatchPlanRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*WatchPlanRequest_FieldTerminalPathArrayOfValues)
}

type WatchPlanResponseFieldPathBuilder struct{}

func NewWatchPlanResponseFieldPathBuilder() WatchPlanResponseFieldPathBuilder {
	return WatchPlanResponseFieldPathBuilder{}
}
func (WatchPlanResponseFieldPathBuilder) Change() WatchPlanResponsePathSelectorChange {
	return WatchPlanResponsePathSelectorChange{}
}

type WatchPlanResponsePathSelectorChange struct{}

func (WatchPlanResponsePathSelectorChange) FieldPath() *WatchPlanResponse_FieldTerminalPath {
	return &WatchPlanResponse_FieldTerminalPath{selector: WatchPlanResponse_FieldPathSelectorChange}
}

func (s WatchPlanResponsePathSelectorChange) WithValue(value *plan.PlanChange) *WatchPlanResponse_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*WatchPlanResponse_FieldTerminalPathValue)
}

func (s WatchPlanResponsePathSelectorChange) WithArrayOfValues(values []*plan.PlanChange) *WatchPlanResponse_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*WatchPlanResponse_FieldTerminalPathArrayOfValues)
}

type WatchPlansRequestFieldPathBuilder struct{}

func NewWatchPlansRequestFieldPathBuilder() WatchPlansRequestFieldPathBuilder {
	return WatchPlansRequestFieldPathBuilder{}
}
func (WatchPlansRequestFieldPathBuilder) Type() WatchPlansRequestPathSelectorType {
	return WatchPlansRequestPathSelectorType{}
}
func (WatchPlansRequestFieldPathBuilder) PageSize() WatchPlansRequestPathSelectorPageSize {
	return WatchPlansRequestPathSelectorPageSize{}
}
func (WatchPlansRequestFieldPathBuilder) PageToken() WatchPlansRequestPathSelectorPageToken {
	return WatchPlansRequestPathSelectorPageToken{}
}
func (WatchPlansRequestFieldPathBuilder) OrderBy() WatchPlansRequestPathSelectorOrderBy {
	return WatchPlansRequestPathSelectorOrderBy{}
}
func (WatchPlansRequestFieldPathBuilder) ResumeToken() WatchPlansRequestPathSelectorResumeToken {
	return WatchPlansRequestPathSelectorResumeToken{}
}
func (WatchPlansRequestFieldPathBuilder) Filter() WatchPlansRequestPathSelectorFilter {
	return WatchPlansRequestPathSelectorFilter{}
}
func (WatchPlansRequestFieldPathBuilder) FieldMask() WatchPlansRequestPathSelectorFieldMask {
	return WatchPlansRequestPathSelectorFieldMask{}
}
func (WatchPlansRequestFieldPathBuilder) View() WatchPlansRequestPathSelectorView {
	return WatchPlansRequestPathSelectorView{}
}
func (WatchPlansRequestFieldPathBuilder) MaxChunkSize() WatchPlansRequestPathSelectorMaxChunkSize {
	return WatchPlansRequestPathSelectorMaxChunkSize{}
}

type WatchPlansRequestPathSelectorType struct{}

func (WatchPlansRequestPathSelectorType) FieldPath() *WatchPlansRequest_FieldTerminalPath {
	return &WatchPlansRequest_FieldTerminalPath{selector: WatchPlansRequest_FieldPathSelectorType}
}

func (s WatchPlansRequestPathSelectorType) WithValue(value watch_type.WatchType) *WatchPlansRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*WatchPlansRequest_FieldTerminalPathValue)
}

func (s WatchPlansRequestPathSelectorType) WithArrayOfValues(values []watch_type.WatchType) *WatchPlansRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*WatchPlansRequest_FieldTerminalPathArrayOfValues)
}

type WatchPlansRequestPathSelectorPageSize struct{}

func (WatchPlansRequestPathSelectorPageSize) FieldPath() *WatchPlansRequest_FieldTerminalPath {
	return &WatchPlansRequest_FieldTerminalPath{selector: WatchPlansRequest_FieldPathSelectorPageSize}
}

func (s WatchPlansRequestPathSelectorPageSize) WithValue(value int32) *WatchPlansRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*WatchPlansRequest_FieldTerminalPathValue)
}

func (s WatchPlansRequestPathSelectorPageSize) WithArrayOfValues(values []int32) *WatchPlansRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*WatchPlansRequest_FieldTerminalPathArrayOfValues)
}

type WatchPlansRequestPathSelectorPageToken struct{}

func (WatchPlansRequestPathSelectorPageToken) FieldPath() *WatchPlansRequest_FieldTerminalPath {
	return &WatchPlansRequest_FieldTerminalPath{selector: WatchPlansRequest_FieldPathSelectorPageToken}
}

func (s WatchPlansRequestPathSelectorPageToken) WithValue(value *plan.PagerCursor) *WatchPlansRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*WatchPlansRequest_FieldTerminalPathValue)
}

func (s WatchPlansRequestPathSelectorPageToken) WithArrayOfValues(values []*plan.PagerCursor) *WatchPlansRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*WatchPlansRequest_FieldTerminalPathArrayOfValues)
}

type WatchPlansRequestPathSelectorOrderBy struct{}

func (WatchPlansRequestPathSelectorOrderBy) FieldPath() *WatchPlansRequest_FieldTerminalPath {
	return &WatchPlansRequest_FieldTerminalPath{selector: WatchPlansRequest_FieldPathSelectorOrderBy}
}

func (s WatchPlansRequestPathSelectorOrderBy) WithValue(value *plan.OrderBy) *WatchPlansRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*WatchPlansRequest_FieldTerminalPathValue)
}

func (s WatchPlansRequestPathSelectorOrderBy) WithArrayOfValues(values []*plan.OrderBy) *WatchPlansRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*WatchPlansRequest_FieldTerminalPathArrayOfValues)
}

type WatchPlansRequestPathSelectorResumeToken struct{}

func (WatchPlansRequestPathSelectorResumeToken) FieldPath() *WatchPlansRequest_FieldTerminalPath {
	return &WatchPlansRequest_FieldTerminalPath{selector: WatchPlansRequest_FieldPathSelectorResumeToken}
}

func (s WatchPlansRequestPathSelectorResumeToken) WithValue(value string) *WatchPlansRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*WatchPlansRequest_FieldTerminalPathValue)
}

func (s WatchPlansRequestPathSelectorResumeToken) WithArrayOfValues(values []string) *WatchPlansRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*WatchPlansRequest_FieldTerminalPathArrayOfValues)
}

type WatchPlansRequestPathSelectorFilter struct{}

func (WatchPlansRequestPathSelectorFilter) FieldPath() *WatchPlansRequest_FieldTerminalPath {
	return &WatchPlansRequest_FieldTerminalPath{selector: WatchPlansRequest_FieldPathSelectorFilter}
}

func (s WatchPlansRequestPathSelectorFilter) WithValue(value *plan.Filter) *WatchPlansRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*WatchPlansRequest_FieldTerminalPathValue)
}

func (s WatchPlansRequestPathSelectorFilter) WithArrayOfValues(values []*plan.Filter) *WatchPlansRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*WatchPlansRequest_FieldTerminalPathArrayOfValues)
}

type WatchPlansRequestPathSelectorFieldMask struct{}

func (WatchPlansRequestPathSelectorFieldMask) FieldPath() *WatchPlansRequest_FieldTerminalPath {
	return &WatchPlansRequest_FieldTerminalPath{selector: WatchPlansRequest_FieldPathSelectorFieldMask}
}

func (s WatchPlansRequestPathSelectorFieldMask) WithValue(value *plan.Plan_FieldMask) *WatchPlansRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*WatchPlansRequest_FieldTerminalPathValue)
}

func (s WatchPlansRequestPathSelectorFieldMask) WithArrayOfValues(values []*plan.Plan_FieldMask) *WatchPlansRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*WatchPlansRequest_FieldTerminalPathArrayOfValues)
}

type WatchPlansRequestPathSelectorView struct{}

func (WatchPlansRequestPathSelectorView) FieldPath() *WatchPlansRequest_FieldTerminalPath {
	return &WatchPlansRequest_FieldTerminalPath{selector: WatchPlansRequest_FieldPathSelectorView}
}

func (s WatchPlansRequestPathSelectorView) WithValue(value view.View) *WatchPlansRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*WatchPlansRequest_FieldTerminalPathValue)
}

func (s WatchPlansRequestPathSelectorView) WithArrayOfValues(values []view.View) *WatchPlansRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*WatchPlansRequest_FieldTerminalPathArrayOfValues)
}

type WatchPlansRequestPathSelectorMaxChunkSize struct{}

func (WatchPlansRequestPathSelectorMaxChunkSize) FieldPath() *WatchPlansRequest_FieldTerminalPath {
	return &WatchPlansRequest_FieldTerminalPath{selector: WatchPlansRequest_FieldPathSelectorMaxChunkSize}
}

func (s WatchPlansRequestPathSelectorMaxChunkSize) WithValue(value int32) *WatchPlansRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*WatchPlansRequest_FieldTerminalPathValue)
}

func (s WatchPlansRequestPathSelectorMaxChunkSize) WithArrayOfValues(values []int32) *WatchPlansRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*WatchPlansRequest_FieldTerminalPathArrayOfValues)
}

type WatchPlansResponseFieldPathBuilder struct{}

func NewWatchPlansResponseFieldPathBuilder() WatchPlansResponseFieldPathBuilder {
	return WatchPlansResponseFieldPathBuilder{}
}
func (WatchPlansResponseFieldPathBuilder) PlanChanges() WatchPlansResponsePathSelectorPlanChanges {
	return WatchPlansResponsePathSelectorPlanChanges{}
}
func (WatchPlansResponseFieldPathBuilder) IsCurrent() WatchPlansResponsePathSelectorIsCurrent {
	return WatchPlansResponsePathSelectorIsCurrent{}
}
func (WatchPlansResponseFieldPathBuilder) PageTokenChange() WatchPlansResponsePathSelectorPageTokenChange {
	return WatchPlansResponsePathSelectorPageTokenChange{}
}
func (WatchPlansResponseFieldPathBuilder) ResumeToken() WatchPlansResponsePathSelectorResumeToken {
	return WatchPlansResponsePathSelectorResumeToken{}
}
func (WatchPlansResponseFieldPathBuilder) SnapshotSize() WatchPlansResponsePathSelectorSnapshotSize {
	return WatchPlansResponsePathSelectorSnapshotSize{}
}
func (WatchPlansResponseFieldPathBuilder) IsSoftReset() WatchPlansResponsePathSelectorIsSoftReset {
	return WatchPlansResponsePathSelectorIsSoftReset{}
}
func (WatchPlansResponseFieldPathBuilder) IsHardReset() WatchPlansResponsePathSelectorIsHardReset {
	return WatchPlansResponsePathSelectorIsHardReset{}
}

type WatchPlansResponsePathSelectorPlanChanges struct{}

func (WatchPlansResponsePathSelectorPlanChanges) FieldPath() *WatchPlansResponse_FieldTerminalPath {
	return &WatchPlansResponse_FieldTerminalPath{selector: WatchPlansResponse_FieldPathSelectorPlanChanges}
}

func (s WatchPlansResponsePathSelectorPlanChanges) WithValue(value []*plan.PlanChange) *WatchPlansResponse_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*WatchPlansResponse_FieldTerminalPathValue)
}

func (s WatchPlansResponsePathSelectorPlanChanges) WithArrayOfValues(values [][]*plan.PlanChange) *WatchPlansResponse_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*WatchPlansResponse_FieldTerminalPathArrayOfValues)
}

func (s WatchPlansResponsePathSelectorPlanChanges) WithItemValue(value *plan.PlanChange) *WatchPlansResponse_FieldTerminalPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*WatchPlansResponse_FieldTerminalPathArrayItemValue)
}

type WatchPlansResponsePathSelectorIsCurrent struct{}

func (WatchPlansResponsePathSelectorIsCurrent) FieldPath() *WatchPlansResponse_FieldTerminalPath {
	return &WatchPlansResponse_FieldTerminalPath{selector: WatchPlansResponse_FieldPathSelectorIsCurrent}
}

func (s WatchPlansResponsePathSelectorIsCurrent) WithValue(value bool) *WatchPlansResponse_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*WatchPlansResponse_FieldTerminalPathValue)
}

func (s WatchPlansResponsePathSelectorIsCurrent) WithArrayOfValues(values []bool) *WatchPlansResponse_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*WatchPlansResponse_FieldTerminalPathArrayOfValues)
}

type WatchPlansResponsePathSelectorPageTokenChange struct{}

func (WatchPlansResponsePathSelectorPageTokenChange) FieldPath() *WatchPlansResponse_FieldTerminalPath {
	return &WatchPlansResponse_FieldTerminalPath{selector: WatchPlansResponse_FieldPathSelectorPageTokenChange}
}

func (s WatchPlansResponsePathSelectorPageTokenChange) WithValue(value *WatchPlansResponse_PageTokenChange) *WatchPlansResponse_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*WatchPlansResponse_FieldTerminalPathValue)
}

func (s WatchPlansResponsePathSelectorPageTokenChange) WithArrayOfValues(values []*WatchPlansResponse_PageTokenChange) *WatchPlansResponse_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*WatchPlansResponse_FieldTerminalPathArrayOfValues)
}

func (WatchPlansResponsePathSelectorPageTokenChange) WithSubPath(subPath WatchPlansResponsePageTokenChange_FieldPath) *WatchPlansResponse_FieldSubPath {
	return &WatchPlansResponse_FieldSubPath{selector: WatchPlansResponse_FieldPathSelectorPageTokenChange, subPath: subPath}
}

func (s WatchPlansResponsePathSelectorPageTokenChange) WithSubValue(subPathValue WatchPlansResponsePageTokenChange_FieldPathValue) *WatchPlansResponse_FieldSubPathValue {
	return &WatchPlansResponse_FieldSubPathValue{WatchPlansResponse_FieldPath: s.WithSubPath(subPathValue), subPathValue: subPathValue}
}

func (s WatchPlansResponsePathSelectorPageTokenChange) WithSubArrayOfValues(subPathArrayOfValues WatchPlansResponsePageTokenChange_FieldPathArrayOfValues) *WatchPlansResponse_FieldSubPathArrayOfValues {
	return &WatchPlansResponse_FieldSubPathArrayOfValues{WatchPlansResponse_FieldPath: s.WithSubPath(subPathArrayOfValues), subPathArrayOfValues: subPathArrayOfValues}
}

func (s WatchPlansResponsePathSelectorPageTokenChange) WithSubArrayItemValue(subPathArrayItemValue WatchPlansResponsePageTokenChange_FieldPathArrayItemValue) *WatchPlansResponse_FieldSubPathArrayItemValue {
	return &WatchPlansResponse_FieldSubPathArrayItemValue{WatchPlansResponse_FieldPath: s.WithSubPath(subPathArrayItemValue), subPathItemValue: subPathArrayItemValue}
}

func (WatchPlansResponsePathSelectorPageTokenChange) PrevPageToken() WatchPlansResponsePathSelectorPageTokenChangePrevPageToken {
	return WatchPlansResponsePathSelectorPageTokenChangePrevPageToken{}
}

func (WatchPlansResponsePathSelectorPageTokenChange) NextPageToken() WatchPlansResponsePathSelectorPageTokenChangeNextPageToken {
	return WatchPlansResponsePathSelectorPageTokenChangeNextPageToken{}
}

type WatchPlansResponsePathSelectorPageTokenChangePrevPageToken struct{}

func (WatchPlansResponsePathSelectorPageTokenChangePrevPageToken) FieldPath() *WatchPlansResponse_FieldSubPath {
	return &WatchPlansResponse_FieldSubPath{
		selector: WatchPlansResponse_FieldPathSelectorPageTokenChange,
		subPath:  NewWatchPlansResponsePageTokenChangeFieldPathBuilder().PrevPageToken().FieldPath(),
	}
}

func (s WatchPlansResponsePathSelectorPageTokenChangePrevPageToken) WithValue(value *plan.PagerCursor) *WatchPlansResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*WatchPlansResponse_FieldSubPathValue)
}

func (s WatchPlansResponsePathSelectorPageTokenChangePrevPageToken) WithArrayOfValues(values []*plan.PagerCursor) *WatchPlansResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*WatchPlansResponse_FieldSubPathArrayOfValues)
}

type WatchPlansResponsePathSelectorPageTokenChangeNextPageToken struct{}

func (WatchPlansResponsePathSelectorPageTokenChangeNextPageToken) FieldPath() *WatchPlansResponse_FieldSubPath {
	return &WatchPlansResponse_FieldSubPath{
		selector: WatchPlansResponse_FieldPathSelectorPageTokenChange,
		subPath:  NewWatchPlansResponsePageTokenChangeFieldPathBuilder().NextPageToken().FieldPath(),
	}
}

func (s WatchPlansResponsePathSelectorPageTokenChangeNextPageToken) WithValue(value *plan.PagerCursor) *WatchPlansResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*WatchPlansResponse_FieldSubPathValue)
}

func (s WatchPlansResponsePathSelectorPageTokenChangeNextPageToken) WithArrayOfValues(values []*plan.PagerCursor) *WatchPlansResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*WatchPlansResponse_FieldSubPathArrayOfValues)
}

type WatchPlansResponsePathSelectorResumeToken struct{}

func (WatchPlansResponsePathSelectorResumeToken) FieldPath() *WatchPlansResponse_FieldTerminalPath {
	return &WatchPlansResponse_FieldTerminalPath{selector: WatchPlansResponse_FieldPathSelectorResumeToken}
}

func (s WatchPlansResponsePathSelectorResumeToken) WithValue(value string) *WatchPlansResponse_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*WatchPlansResponse_FieldTerminalPathValue)
}

func (s WatchPlansResponsePathSelectorResumeToken) WithArrayOfValues(values []string) *WatchPlansResponse_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*WatchPlansResponse_FieldTerminalPathArrayOfValues)
}

type WatchPlansResponsePathSelectorSnapshotSize struct{}

func (WatchPlansResponsePathSelectorSnapshotSize) FieldPath() *WatchPlansResponse_FieldTerminalPath {
	return &WatchPlansResponse_FieldTerminalPath{selector: WatchPlansResponse_FieldPathSelectorSnapshotSize}
}

func (s WatchPlansResponsePathSelectorSnapshotSize) WithValue(value int64) *WatchPlansResponse_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*WatchPlansResponse_FieldTerminalPathValue)
}

func (s WatchPlansResponsePathSelectorSnapshotSize) WithArrayOfValues(values []int64) *WatchPlansResponse_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*WatchPlansResponse_FieldTerminalPathArrayOfValues)
}

type WatchPlansResponsePathSelectorIsSoftReset struct{}

func (WatchPlansResponsePathSelectorIsSoftReset) FieldPath() *WatchPlansResponse_FieldTerminalPath {
	return &WatchPlansResponse_FieldTerminalPath{selector: WatchPlansResponse_FieldPathSelectorIsSoftReset}
}

func (s WatchPlansResponsePathSelectorIsSoftReset) WithValue(value bool) *WatchPlansResponse_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*WatchPlansResponse_FieldTerminalPathValue)
}

func (s WatchPlansResponsePathSelectorIsSoftReset) WithArrayOfValues(values []bool) *WatchPlansResponse_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*WatchPlansResponse_FieldTerminalPathArrayOfValues)
}

type WatchPlansResponsePathSelectorIsHardReset struct{}

func (WatchPlansResponsePathSelectorIsHardReset) FieldPath() *WatchPlansResponse_FieldTerminalPath {
	return &WatchPlansResponse_FieldTerminalPath{selector: WatchPlansResponse_FieldPathSelectorIsHardReset}
}

func (s WatchPlansResponsePathSelectorIsHardReset) WithValue(value bool) *WatchPlansResponse_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*WatchPlansResponse_FieldTerminalPathValue)
}

func (s WatchPlansResponsePathSelectorIsHardReset) WithArrayOfValues(values []bool) *WatchPlansResponse_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*WatchPlansResponse_FieldTerminalPathArrayOfValues)
}

type WatchPlansResponsePageTokenChangeFieldPathBuilder struct{}

func NewWatchPlansResponsePageTokenChangeFieldPathBuilder() WatchPlansResponsePageTokenChangeFieldPathBuilder {
	return WatchPlansResponsePageTokenChangeFieldPathBuilder{}
}
func (WatchPlansResponsePageTokenChangeFieldPathBuilder) PrevPageToken() WatchPlansResponse_PageTokenChangePathSelectorPrevPageToken {
	return WatchPlansResponse_PageTokenChangePathSelectorPrevPageToken{}
}
func (WatchPlansResponsePageTokenChangeFieldPathBuilder) NextPageToken() WatchPlansResponse_PageTokenChangePathSelectorNextPageToken {
	return WatchPlansResponse_PageTokenChangePathSelectorNextPageToken{}
}

type WatchPlansResponse_PageTokenChangePathSelectorPrevPageToken struct{}

func (WatchPlansResponse_PageTokenChangePathSelectorPrevPageToken) FieldPath() *WatchPlansResponsePageTokenChange_FieldTerminalPath {
	return &WatchPlansResponsePageTokenChange_FieldTerminalPath{selector: WatchPlansResponsePageTokenChange_FieldPathSelectorPrevPageToken}
}

func (s WatchPlansResponse_PageTokenChangePathSelectorPrevPageToken) WithValue(value *plan.PagerCursor) *WatchPlansResponsePageTokenChange_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*WatchPlansResponsePageTokenChange_FieldTerminalPathValue)
}

func (s WatchPlansResponse_PageTokenChangePathSelectorPrevPageToken) WithArrayOfValues(values []*plan.PagerCursor) *WatchPlansResponsePageTokenChange_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*WatchPlansResponsePageTokenChange_FieldTerminalPathArrayOfValues)
}

type WatchPlansResponse_PageTokenChangePathSelectorNextPageToken struct{}

func (WatchPlansResponse_PageTokenChangePathSelectorNextPageToken) FieldPath() *WatchPlansResponsePageTokenChange_FieldTerminalPath {
	return &WatchPlansResponsePageTokenChange_FieldTerminalPath{selector: WatchPlansResponsePageTokenChange_FieldPathSelectorNextPageToken}
}

func (s WatchPlansResponse_PageTokenChangePathSelectorNextPageToken) WithValue(value *plan.PagerCursor) *WatchPlansResponsePageTokenChange_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*WatchPlansResponsePageTokenChange_FieldTerminalPathValue)
}

func (s WatchPlansResponse_PageTokenChangePathSelectorNextPageToken) WithArrayOfValues(values []*plan.PagerCursor) *WatchPlansResponsePageTokenChange_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*WatchPlansResponsePageTokenChange_FieldTerminalPathArrayOfValues)
}

type CreatePlanRequestFieldPathBuilder struct{}

func NewCreatePlanRequestFieldPathBuilder() CreatePlanRequestFieldPathBuilder {
	return CreatePlanRequestFieldPathBuilder{}
}
func (CreatePlanRequestFieldPathBuilder) Plan() CreatePlanRequestPathSelectorPlan {
	return CreatePlanRequestPathSelectorPlan{}
}

type CreatePlanRequestPathSelectorPlan struct{}

func (CreatePlanRequestPathSelectorPlan) FieldPath() *CreatePlanRequest_FieldTerminalPath {
	return &CreatePlanRequest_FieldTerminalPath{selector: CreatePlanRequest_FieldPathSelectorPlan}
}

func (s CreatePlanRequestPathSelectorPlan) WithValue(value *plan.Plan) *CreatePlanRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*CreatePlanRequest_FieldTerminalPathValue)
}

func (s CreatePlanRequestPathSelectorPlan) WithArrayOfValues(values []*plan.Plan) *CreatePlanRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CreatePlanRequest_FieldTerminalPathArrayOfValues)
}

func (CreatePlanRequestPathSelectorPlan) WithSubPath(subPath plan.Plan_FieldPath) *CreatePlanRequest_FieldSubPath {
	return &CreatePlanRequest_FieldSubPath{selector: CreatePlanRequest_FieldPathSelectorPlan, subPath: subPath}
}

func (s CreatePlanRequestPathSelectorPlan) WithSubValue(subPathValue plan.Plan_FieldPathValue) *CreatePlanRequest_FieldSubPathValue {
	return &CreatePlanRequest_FieldSubPathValue{CreatePlanRequest_FieldPath: s.WithSubPath(subPathValue), subPathValue: subPathValue}
}

func (s CreatePlanRequestPathSelectorPlan) WithSubArrayOfValues(subPathArrayOfValues plan.Plan_FieldPathArrayOfValues) *CreatePlanRequest_FieldSubPathArrayOfValues {
	return &CreatePlanRequest_FieldSubPathArrayOfValues{CreatePlanRequest_FieldPath: s.WithSubPath(subPathArrayOfValues), subPathArrayOfValues: subPathArrayOfValues}
}

func (s CreatePlanRequestPathSelectorPlan) WithSubArrayItemValue(subPathArrayItemValue plan.Plan_FieldPathArrayItemValue) *CreatePlanRequest_FieldSubPathArrayItemValue {
	return &CreatePlanRequest_FieldSubPathArrayItemValue{CreatePlanRequest_FieldPath: s.WithSubPath(subPathArrayItemValue), subPathItemValue: subPathArrayItemValue}
}

func (CreatePlanRequestPathSelectorPlan) Name() CreatePlanRequestPathSelectorPlanName {
	return CreatePlanRequestPathSelectorPlanName{}
}

func (CreatePlanRequestPathSelectorPlan) DisplayName() CreatePlanRequestPathSelectorPlanDisplayName {
	return CreatePlanRequestPathSelectorPlanDisplayName{}
}

func (CreatePlanRequestPathSelectorPlan) Service() CreatePlanRequestPathSelectorPlanService {
	return CreatePlanRequestPathSelectorPlanService{}
}

func (CreatePlanRequestPathSelectorPlan) ResourceLimits() CreatePlanRequestPathSelectorPlanResourceLimits {
	return CreatePlanRequestPathSelectorPlanResourceLimits{}
}

func (CreatePlanRequestPathSelectorPlan) Metadata() CreatePlanRequestPathSelectorPlanMetadata {
	return CreatePlanRequestPathSelectorPlanMetadata{}
}

type CreatePlanRequestPathSelectorPlanName struct{}

func (CreatePlanRequestPathSelectorPlanName) FieldPath() *CreatePlanRequest_FieldSubPath {
	return &CreatePlanRequest_FieldSubPath{
		selector: CreatePlanRequest_FieldPathSelectorPlan,
		subPath:  plan.NewPlanFieldPathBuilder().Name().FieldPath(),
	}
}

func (s CreatePlanRequestPathSelectorPlanName) WithValue(value *plan.Name) *CreatePlanRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*CreatePlanRequest_FieldSubPathValue)
}

func (s CreatePlanRequestPathSelectorPlanName) WithArrayOfValues(values []*plan.Name) *CreatePlanRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CreatePlanRequest_FieldSubPathArrayOfValues)
}

type CreatePlanRequestPathSelectorPlanDisplayName struct{}

func (CreatePlanRequestPathSelectorPlanDisplayName) FieldPath() *CreatePlanRequest_FieldSubPath {
	return &CreatePlanRequest_FieldSubPath{
		selector: CreatePlanRequest_FieldPathSelectorPlan,
		subPath:  plan.NewPlanFieldPathBuilder().DisplayName().FieldPath(),
	}
}

func (s CreatePlanRequestPathSelectorPlanDisplayName) WithValue(value string) *CreatePlanRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*CreatePlanRequest_FieldSubPathValue)
}

func (s CreatePlanRequestPathSelectorPlanDisplayName) WithArrayOfValues(values []string) *CreatePlanRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CreatePlanRequest_FieldSubPathArrayOfValues)
}

type CreatePlanRequestPathSelectorPlanService struct{}

func (CreatePlanRequestPathSelectorPlanService) FieldPath() *CreatePlanRequest_FieldSubPath {
	return &CreatePlanRequest_FieldSubPath{
		selector: CreatePlanRequest_FieldPathSelectorPlan,
		subPath:  plan.NewPlanFieldPathBuilder().Service().FieldPath(),
	}
}

func (s CreatePlanRequestPathSelectorPlanService) WithValue(value *meta_service.Reference) *CreatePlanRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*CreatePlanRequest_FieldSubPathValue)
}

func (s CreatePlanRequestPathSelectorPlanService) WithArrayOfValues(values []*meta_service.Reference) *CreatePlanRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CreatePlanRequest_FieldSubPathArrayOfValues)
}

type CreatePlanRequestPathSelectorPlanResourceLimits struct{}

func (CreatePlanRequestPathSelectorPlanResourceLimits) FieldPath() *CreatePlanRequest_FieldSubPath {
	return &CreatePlanRequest_FieldSubPath{
		selector: CreatePlanRequest_FieldPathSelectorPlan,
		subPath:  plan.NewPlanFieldPathBuilder().ResourceLimits().FieldPath(),
	}
}

func (s CreatePlanRequestPathSelectorPlanResourceLimits) WithValue(value []*common.Allowance) *CreatePlanRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*CreatePlanRequest_FieldSubPathValue)
}

func (s CreatePlanRequestPathSelectorPlanResourceLimits) WithArrayOfValues(values [][]*common.Allowance) *CreatePlanRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CreatePlanRequest_FieldSubPathArrayOfValues)
}

func (s CreatePlanRequestPathSelectorPlanResourceLimits) WithItemValue(value *common.Allowance) *CreatePlanRequest_FieldSubPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*CreatePlanRequest_FieldSubPathArrayItemValue)
}

func (CreatePlanRequestPathSelectorPlanResourceLimits) Resource() CreatePlanRequestPathSelectorPlanResourceLimitsResource {
	return CreatePlanRequestPathSelectorPlanResourceLimitsResource{}
}

func (CreatePlanRequestPathSelectorPlanResourceLimits) Value() CreatePlanRequestPathSelectorPlanResourceLimitsValue {
	return CreatePlanRequestPathSelectorPlanResourceLimitsValue{}
}

type CreatePlanRequestPathSelectorPlanResourceLimitsResource struct{}

func (CreatePlanRequestPathSelectorPlanResourceLimitsResource) FieldPath() *CreatePlanRequest_FieldSubPath {
	return &CreatePlanRequest_FieldSubPath{
		selector: CreatePlanRequest_FieldPathSelectorPlan,
		subPath:  plan.NewPlanFieldPathBuilder().ResourceLimits().Resource().FieldPath(),
	}
}

func (s CreatePlanRequestPathSelectorPlanResourceLimitsResource) WithValue(value *meta_resource.Reference) *CreatePlanRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*CreatePlanRequest_FieldSubPathValue)
}

func (s CreatePlanRequestPathSelectorPlanResourceLimitsResource) WithArrayOfValues(values []*meta_resource.Reference) *CreatePlanRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CreatePlanRequest_FieldSubPathArrayOfValues)
}

type CreatePlanRequestPathSelectorPlanResourceLimitsValue struct{}

func (CreatePlanRequestPathSelectorPlanResourceLimitsValue) FieldPath() *CreatePlanRequest_FieldSubPath {
	return &CreatePlanRequest_FieldSubPath{
		selector: CreatePlanRequest_FieldPathSelectorPlan,
		subPath:  plan.NewPlanFieldPathBuilder().ResourceLimits().Value().FieldPath(),
	}
}

func (s CreatePlanRequestPathSelectorPlanResourceLimitsValue) WithValue(value int64) *CreatePlanRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*CreatePlanRequest_FieldSubPathValue)
}

func (s CreatePlanRequestPathSelectorPlanResourceLimitsValue) WithArrayOfValues(values []int64) *CreatePlanRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CreatePlanRequest_FieldSubPathArrayOfValues)
}

type CreatePlanRequestPathSelectorPlanMetadata struct{}

func (CreatePlanRequestPathSelectorPlanMetadata) FieldPath() *CreatePlanRequest_FieldSubPath {
	return &CreatePlanRequest_FieldSubPath{
		selector: CreatePlanRequest_FieldPathSelectorPlan,
		subPath:  plan.NewPlanFieldPathBuilder().Metadata().FieldPath(),
	}
}

func (s CreatePlanRequestPathSelectorPlanMetadata) WithValue(value *ntt_meta.Meta) *CreatePlanRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*CreatePlanRequest_FieldSubPathValue)
}

func (s CreatePlanRequestPathSelectorPlanMetadata) WithArrayOfValues(values []*ntt_meta.Meta) *CreatePlanRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CreatePlanRequest_FieldSubPathArrayOfValues)
}

func (CreatePlanRequestPathSelectorPlanMetadata) CreateTime() CreatePlanRequestPathSelectorPlanMetadataCreateTime {
	return CreatePlanRequestPathSelectorPlanMetadataCreateTime{}
}

func (CreatePlanRequestPathSelectorPlanMetadata) UpdateTime() CreatePlanRequestPathSelectorPlanMetadataUpdateTime {
	return CreatePlanRequestPathSelectorPlanMetadataUpdateTime{}
}

func (CreatePlanRequestPathSelectorPlanMetadata) Uuid() CreatePlanRequestPathSelectorPlanMetadataUuid {
	return CreatePlanRequestPathSelectorPlanMetadataUuid{}
}

func (CreatePlanRequestPathSelectorPlanMetadata) Tags() CreatePlanRequestPathSelectorPlanMetadataTags {
	return CreatePlanRequestPathSelectorPlanMetadataTags{}
}

func (CreatePlanRequestPathSelectorPlanMetadata) Labels() CreatePlanRequestPathSelectorPlanMetadataLabels {
	return CreatePlanRequestPathSelectorPlanMetadataLabels{}
}

func (CreatePlanRequestPathSelectorPlanMetadata) Annotations() CreatePlanRequestPathSelectorPlanMetadataAnnotations {
	return CreatePlanRequestPathSelectorPlanMetadataAnnotations{}
}

func (CreatePlanRequestPathSelectorPlanMetadata) Generation() CreatePlanRequestPathSelectorPlanMetadataGeneration {
	return CreatePlanRequestPathSelectorPlanMetadataGeneration{}
}

func (CreatePlanRequestPathSelectorPlanMetadata) ResourceVersion() CreatePlanRequestPathSelectorPlanMetadataResourceVersion {
	return CreatePlanRequestPathSelectorPlanMetadataResourceVersion{}
}

func (CreatePlanRequestPathSelectorPlanMetadata) OwnerReferences() CreatePlanRequestPathSelectorPlanMetadataOwnerReferences {
	return CreatePlanRequestPathSelectorPlanMetadataOwnerReferences{}
}

func (CreatePlanRequestPathSelectorPlanMetadata) Shards() CreatePlanRequestPathSelectorPlanMetadataShards {
	return CreatePlanRequestPathSelectorPlanMetadataShards{}
}

func (CreatePlanRequestPathSelectorPlanMetadata) Syncing() CreatePlanRequestPathSelectorPlanMetadataSyncing {
	return CreatePlanRequestPathSelectorPlanMetadataSyncing{}
}

type CreatePlanRequestPathSelectorPlanMetadataCreateTime struct{}

func (CreatePlanRequestPathSelectorPlanMetadataCreateTime) FieldPath() *CreatePlanRequest_FieldSubPath {
	return &CreatePlanRequest_FieldSubPath{
		selector: CreatePlanRequest_FieldPathSelectorPlan,
		subPath:  plan.NewPlanFieldPathBuilder().Metadata().CreateTime().FieldPath(),
	}
}

func (s CreatePlanRequestPathSelectorPlanMetadataCreateTime) WithValue(value *timestamp.Timestamp) *CreatePlanRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*CreatePlanRequest_FieldSubPathValue)
}

func (s CreatePlanRequestPathSelectorPlanMetadataCreateTime) WithArrayOfValues(values []*timestamp.Timestamp) *CreatePlanRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CreatePlanRequest_FieldSubPathArrayOfValues)
}

type CreatePlanRequestPathSelectorPlanMetadataUpdateTime struct{}

func (CreatePlanRequestPathSelectorPlanMetadataUpdateTime) FieldPath() *CreatePlanRequest_FieldSubPath {
	return &CreatePlanRequest_FieldSubPath{
		selector: CreatePlanRequest_FieldPathSelectorPlan,
		subPath:  plan.NewPlanFieldPathBuilder().Metadata().UpdateTime().FieldPath(),
	}
}

func (s CreatePlanRequestPathSelectorPlanMetadataUpdateTime) WithValue(value *timestamp.Timestamp) *CreatePlanRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*CreatePlanRequest_FieldSubPathValue)
}

func (s CreatePlanRequestPathSelectorPlanMetadataUpdateTime) WithArrayOfValues(values []*timestamp.Timestamp) *CreatePlanRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CreatePlanRequest_FieldSubPathArrayOfValues)
}

type CreatePlanRequestPathSelectorPlanMetadataUuid struct{}

func (CreatePlanRequestPathSelectorPlanMetadataUuid) FieldPath() *CreatePlanRequest_FieldSubPath {
	return &CreatePlanRequest_FieldSubPath{
		selector: CreatePlanRequest_FieldPathSelectorPlan,
		subPath:  plan.NewPlanFieldPathBuilder().Metadata().Uuid().FieldPath(),
	}
}

func (s CreatePlanRequestPathSelectorPlanMetadataUuid) WithValue(value string) *CreatePlanRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*CreatePlanRequest_FieldSubPathValue)
}

func (s CreatePlanRequestPathSelectorPlanMetadataUuid) WithArrayOfValues(values []string) *CreatePlanRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CreatePlanRequest_FieldSubPathArrayOfValues)
}

type CreatePlanRequestPathSelectorPlanMetadataTags struct{}

func (CreatePlanRequestPathSelectorPlanMetadataTags) FieldPath() *CreatePlanRequest_FieldSubPath {
	return &CreatePlanRequest_FieldSubPath{
		selector: CreatePlanRequest_FieldPathSelectorPlan,
		subPath:  plan.NewPlanFieldPathBuilder().Metadata().Tags().FieldPath(),
	}
}

func (s CreatePlanRequestPathSelectorPlanMetadataTags) WithValue(value []string) *CreatePlanRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*CreatePlanRequest_FieldSubPathValue)
}

func (s CreatePlanRequestPathSelectorPlanMetadataTags) WithArrayOfValues(values [][]string) *CreatePlanRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CreatePlanRequest_FieldSubPathArrayOfValues)
}

func (s CreatePlanRequestPathSelectorPlanMetadataTags) WithItemValue(value string) *CreatePlanRequest_FieldSubPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*CreatePlanRequest_FieldSubPathArrayItemValue)
}

type CreatePlanRequestPathSelectorPlanMetadataLabels struct{}

func (CreatePlanRequestPathSelectorPlanMetadataLabels) FieldPath() *CreatePlanRequest_FieldSubPath {
	return &CreatePlanRequest_FieldSubPath{
		selector: CreatePlanRequest_FieldPathSelectorPlan,
		subPath:  plan.NewPlanFieldPathBuilder().Metadata().Labels().FieldPath(),
	}
}

func (s CreatePlanRequestPathSelectorPlanMetadataLabels) WithValue(value map[string]string) *CreatePlanRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*CreatePlanRequest_FieldSubPathValue)
}

func (s CreatePlanRequestPathSelectorPlanMetadataLabels) WithArrayOfValues(values []map[string]string) *CreatePlanRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CreatePlanRequest_FieldSubPathArrayOfValues)
}

func (CreatePlanRequestPathSelectorPlanMetadataLabels) WithKey(key string) CreatePlanRequestMapPathSelectorPlanMetadataLabels {
	return CreatePlanRequestMapPathSelectorPlanMetadataLabels{key: key}
}

type CreatePlanRequestMapPathSelectorPlanMetadataLabels struct {
	key string
}

func (s CreatePlanRequestMapPathSelectorPlanMetadataLabels) FieldPath() *CreatePlanRequest_FieldSubPath {
	return &CreatePlanRequest_FieldSubPath{
		selector: CreatePlanRequest_FieldPathSelectorPlan,
		subPath:  plan.NewPlanFieldPathBuilder().Metadata().Labels().WithKey(s.key).FieldPath(),
	}
}

func (s CreatePlanRequestMapPathSelectorPlanMetadataLabels) WithValue(value string) *CreatePlanRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*CreatePlanRequest_FieldSubPathValue)
}

func (s CreatePlanRequestMapPathSelectorPlanMetadataLabels) WithArrayOfValues(values []string) *CreatePlanRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CreatePlanRequest_FieldSubPathArrayOfValues)
}

type CreatePlanRequestPathSelectorPlanMetadataAnnotations struct{}

func (CreatePlanRequestPathSelectorPlanMetadataAnnotations) FieldPath() *CreatePlanRequest_FieldSubPath {
	return &CreatePlanRequest_FieldSubPath{
		selector: CreatePlanRequest_FieldPathSelectorPlan,
		subPath:  plan.NewPlanFieldPathBuilder().Metadata().Annotations().FieldPath(),
	}
}

func (s CreatePlanRequestPathSelectorPlanMetadataAnnotations) WithValue(value map[string]string) *CreatePlanRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*CreatePlanRequest_FieldSubPathValue)
}

func (s CreatePlanRequestPathSelectorPlanMetadataAnnotations) WithArrayOfValues(values []map[string]string) *CreatePlanRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CreatePlanRequest_FieldSubPathArrayOfValues)
}

func (CreatePlanRequestPathSelectorPlanMetadataAnnotations) WithKey(key string) CreatePlanRequestMapPathSelectorPlanMetadataAnnotations {
	return CreatePlanRequestMapPathSelectorPlanMetadataAnnotations{key: key}
}

type CreatePlanRequestMapPathSelectorPlanMetadataAnnotations struct {
	key string
}

func (s CreatePlanRequestMapPathSelectorPlanMetadataAnnotations) FieldPath() *CreatePlanRequest_FieldSubPath {
	return &CreatePlanRequest_FieldSubPath{
		selector: CreatePlanRequest_FieldPathSelectorPlan,
		subPath:  plan.NewPlanFieldPathBuilder().Metadata().Annotations().WithKey(s.key).FieldPath(),
	}
}

func (s CreatePlanRequestMapPathSelectorPlanMetadataAnnotations) WithValue(value string) *CreatePlanRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*CreatePlanRequest_FieldSubPathValue)
}

func (s CreatePlanRequestMapPathSelectorPlanMetadataAnnotations) WithArrayOfValues(values []string) *CreatePlanRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CreatePlanRequest_FieldSubPathArrayOfValues)
}

type CreatePlanRequestPathSelectorPlanMetadataGeneration struct{}

func (CreatePlanRequestPathSelectorPlanMetadataGeneration) FieldPath() *CreatePlanRequest_FieldSubPath {
	return &CreatePlanRequest_FieldSubPath{
		selector: CreatePlanRequest_FieldPathSelectorPlan,
		subPath:  plan.NewPlanFieldPathBuilder().Metadata().Generation().FieldPath(),
	}
}

func (s CreatePlanRequestPathSelectorPlanMetadataGeneration) WithValue(value int64) *CreatePlanRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*CreatePlanRequest_FieldSubPathValue)
}

func (s CreatePlanRequestPathSelectorPlanMetadataGeneration) WithArrayOfValues(values []int64) *CreatePlanRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CreatePlanRequest_FieldSubPathArrayOfValues)
}

type CreatePlanRequestPathSelectorPlanMetadataResourceVersion struct{}

func (CreatePlanRequestPathSelectorPlanMetadataResourceVersion) FieldPath() *CreatePlanRequest_FieldSubPath {
	return &CreatePlanRequest_FieldSubPath{
		selector: CreatePlanRequest_FieldPathSelectorPlan,
		subPath:  plan.NewPlanFieldPathBuilder().Metadata().ResourceVersion().FieldPath(),
	}
}

func (s CreatePlanRequestPathSelectorPlanMetadataResourceVersion) WithValue(value string) *CreatePlanRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*CreatePlanRequest_FieldSubPathValue)
}

func (s CreatePlanRequestPathSelectorPlanMetadataResourceVersion) WithArrayOfValues(values []string) *CreatePlanRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CreatePlanRequest_FieldSubPathArrayOfValues)
}

type CreatePlanRequestPathSelectorPlanMetadataOwnerReferences struct{}

func (CreatePlanRequestPathSelectorPlanMetadataOwnerReferences) FieldPath() *CreatePlanRequest_FieldSubPath {
	return &CreatePlanRequest_FieldSubPath{
		selector: CreatePlanRequest_FieldPathSelectorPlan,
		subPath:  plan.NewPlanFieldPathBuilder().Metadata().OwnerReferences().FieldPath(),
	}
}

func (s CreatePlanRequestPathSelectorPlanMetadataOwnerReferences) WithValue(value []*ntt_meta.OwnerReference) *CreatePlanRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*CreatePlanRequest_FieldSubPathValue)
}

func (s CreatePlanRequestPathSelectorPlanMetadataOwnerReferences) WithArrayOfValues(values [][]*ntt_meta.OwnerReference) *CreatePlanRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CreatePlanRequest_FieldSubPathArrayOfValues)
}

func (s CreatePlanRequestPathSelectorPlanMetadataOwnerReferences) WithItemValue(value *ntt_meta.OwnerReference) *CreatePlanRequest_FieldSubPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*CreatePlanRequest_FieldSubPathArrayItemValue)
}

func (CreatePlanRequestPathSelectorPlanMetadataOwnerReferences) ApiVersion() CreatePlanRequestPathSelectorPlanMetadataOwnerReferencesApiVersion {
	return CreatePlanRequestPathSelectorPlanMetadataOwnerReferencesApiVersion{}
}

func (CreatePlanRequestPathSelectorPlanMetadataOwnerReferences) Kind() CreatePlanRequestPathSelectorPlanMetadataOwnerReferencesKind {
	return CreatePlanRequestPathSelectorPlanMetadataOwnerReferencesKind{}
}

func (CreatePlanRequestPathSelectorPlanMetadataOwnerReferences) Name() CreatePlanRequestPathSelectorPlanMetadataOwnerReferencesName {
	return CreatePlanRequestPathSelectorPlanMetadataOwnerReferencesName{}
}

func (CreatePlanRequestPathSelectorPlanMetadataOwnerReferences) Uid() CreatePlanRequestPathSelectorPlanMetadataOwnerReferencesUid {
	return CreatePlanRequestPathSelectorPlanMetadataOwnerReferencesUid{}
}

func (CreatePlanRequestPathSelectorPlanMetadataOwnerReferences) Controller() CreatePlanRequestPathSelectorPlanMetadataOwnerReferencesController {
	return CreatePlanRequestPathSelectorPlanMetadataOwnerReferencesController{}
}

func (CreatePlanRequestPathSelectorPlanMetadataOwnerReferences) BlockOwnerDeletion() CreatePlanRequestPathSelectorPlanMetadataOwnerReferencesBlockOwnerDeletion {
	return CreatePlanRequestPathSelectorPlanMetadataOwnerReferencesBlockOwnerDeletion{}
}

type CreatePlanRequestPathSelectorPlanMetadataOwnerReferencesApiVersion struct{}

func (CreatePlanRequestPathSelectorPlanMetadataOwnerReferencesApiVersion) FieldPath() *CreatePlanRequest_FieldSubPath {
	return &CreatePlanRequest_FieldSubPath{
		selector: CreatePlanRequest_FieldPathSelectorPlan,
		subPath:  plan.NewPlanFieldPathBuilder().Metadata().OwnerReferences().ApiVersion().FieldPath(),
	}
}

func (s CreatePlanRequestPathSelectorPlanMetadataOwnerReferencesApiVersion) WithValue(value string) *CreatePlanRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*CreatePlanRequest_FieldSubPathValue)
}

func (s CreatePlanRequestPathSelectorPlanMetadataOwnerReferencesApiVersion) WithArrayOfValues(values []string) *CreatePlanRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CreatePlanRequest_FieldSubPathArrayOfValues)
}

type CreatePlanRequestPathSelectorPlanMetadataOwnerReferencesKind struct{}

func (CreatePlanRequestPathSelectorPlanMetadataOwnerReferencesKind) FieldPath() *CreatePlanRequest_FieldSubPath {
	return &CreatePlanRequest_FieldSubPath{
		selector: CreatePlanRequest_FieldPathSelectorPlan,
		subPath:  plan.NewPlanFieldPathBuilder().Metadata().OwnerReferences().Kind().FieldPath(),
	}
}

func (s CreatePlanRequestPathSelectorPlanMetadataOwnerReferencesKind) WithValue(value string) *CreatePlanRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*CreatePlanRequest_FieldSubPathValue)
}

func (s CreatePlanRequestPathSelectorPlanMetadataOwnerReferencesKind) WithArrayOfValues(values []string) *CreatePlanRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CreatePlanRequest_FieldSubPathArrayOfValues)
}

type CreatePlanRequestPathSelectorPlanMetadataOwnerReferencesName struct{}

func (CreatePlanRequestPathSelectorPlanMetadataOwnerReferencesName) FieldPath() *CreatePlanRequest_FieldSubPath {
	return &CreatePlanRequest_FieldSubPath{
		selector: CreatePlanRequest_FieldPathSelectorPlan,
		subPath:  plan.NewPlanFieldPathBuilder().Metadata().OwnerReferences().Name().FieldPath(),
	}
}

func (s CreatePlanRequestPathSelectorPlanMetadataOwnerReferencesName) WithValue(value string) *CreatePlanRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*CreatePlanRequest_FieldSubPathValue)
}

func (s CreatePlanRequestPathSelectorPlanMetadataOwnerReferencesName) WithArrayOfValues(values []string) *CreatePlanRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CreatePlanRequest_FieldSubPathArrayOfValues)
}

type CreatePlanRequestPathSelectorPlanMetadataOwnerReferencesUid struct{}

func (CreatePlanRequestPathSelectorPlanMetadataOwnerReferencesUid) FieldPath() *CreatePlanRequest_FieldSubPath {
	return &CreatePlanRequest_FieldSubPath{
		selector: CreatePlanRequest_FieldPathSelectorPlan,
		subPath:  plan.NewPlanFieldPathBuilder().Metadata().OwnerReferences().Uid().FieldPath(),
	}
}

func (s CreatePlanRequestPathSelectorPlanMetadataOwnerReferencesUid) WithValue(value string) *CreatePlanRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*CreatePlanRequest_FieldSubPathValue)
}

func (s CreatePlanRequestPathSelectorPlanMetadataOwnerReferencesUid) WithArrayOfValues(values []string) *CreatePlanRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CreatePlanRequest_FieldSubPathArrayOfValues)
}

type CreatePlanRequestPathSelectorPlanMetadataOwnerReferencesController struct{}

func (CreatePlanRequestPathSelectorPlanMetadataOwnerReferencesController) FieldPath() *CreatePlanRequest_FieldSubPath {
	return &CreatePlanRequest_FieldSubPath{
		selector: CreatePlanRequest_FieldPathSelectorPlan,
		subPath:  plan.NewPlanFieldPathBuilder().Metadata().OwnerReferences().Controller().FieldPath(),
	}
}

func (s CreatePlanRequestPathSelectorPlanMetadataOwnerReferencesController) WithValue(value bool) *CreatePlanRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*CreatePlanRequest_FieldSubPathValue)
}

func (s CreatePlanRequestPathSelectorPlanMetadataOwnerReferencesController) WithArrayOfValues(values []bool) *CreatePlanRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CreatePlanRequest_FieldSubPathArrayOfValues)
}

type CreatePlanRequestPathSelectorPlanMetadataOwnerReferencesBlockOwnerDeletion struct{}

func (CreatePlanRequestPathSelectorPlanMetadataOwnerReferencesBlockOwnerDeletion) FieldPath() *CreatePlanRequest_FieldSubPath {
	return &CreatePlanRequest_FieldSubPath{
		selector: CreatePlanRequest_FieldPathSelectorPlan,
		subPath:  plan.NewPlanFieldPathBuilder().Metadata().OwnerReferences().BlockOwnerDeletion().FieldPath(),
	}
}

func (s CreatePlanRequestPathSelectorPlanMetadataOwnerReferencesBlockOwnerDeletion) WithValue(value bool) *CreatePlanRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*CreatePlanRequest_FieldSubPathValue)
}

func (s CreatePlanRequestPathSelectorPlanMetadataOwnerReferencesBlockOwnerDeletion) WithArrayOfValues(values []bool) *CreatePlanRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CreatePlanRequest_FieldSubPathArrayOfValues)
}

type CreatePlanRequestPathSelectorPlanMetadataShards struct{}

func (CreatePlanRequestPathSelectorPlanMetadataShards) FieldPath() *CreatePlanRequest_FieldSubPath {
	return &CreatePlanRequest_FieldSubPath{
		selector: CreatePlanRequest_FieldPathSelectorPlan,
		subPath:  plan.NewPlanFieldPathBuilder().Metadata().Shards().FieldPath(),
	}
}

func (s CreatePlanRequestPathSelectorPlanMetadataShards) WithValue(value map[string]int64) *CreatePlanRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*CreatePlanRequest_FieldSubPathValue)
}

func (s CreatePlanRequestPathSelectorPlanMetadataShards) WithArrayOfValues(values []map[string]int64) *CreatePlanRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CreatePlanRequest_FieldSubPathArrayOfValues)
}

func (CreatePlanRequestPathSelectorPlanMetadataShards) WithKey(key string) CreatePlanRequestMapPathSelectorPlanMetadataShards {
	return CreatePlanRequestMapPathSelectorPlanMetadataShards{key: key}
}

type CreatePlanRequestMapPathSelectorPlanMetadataShards struct {
	key string
}

func (s CreatePlanRequestMapPathSelectorPlanMetadataShards) FieldPath() *CreatePlanRequest_FieldSubPath {
	return &CreatePlanRequest_FieldSubPath{
		selector: CreatePlanRequest_FieldPathSelectorPlan,
		subPath:  plan.NewPlanFieldPathBuilder().Metadata().Shards().WithKey(s.key).FieldPath(),
	}
}

func (s CreatePlanRequestMapPathSelectorPlanMetadataShards) WithValue(value int64) *CreatePlanRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*CreatePlanRequest_FieldSubPathValue)
}

func (s CreatePlanRequestMapPathSelectorPlanMetadataShards) WithArrayOfValues(values []int64) *CreatePlanRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CreatePlanRequest_FieldSubPathArrayOfValues)
}

type CreatePlanRequestPathSelectorPlanMetadataSyncing struct{}

func (CreatePlanRequestPathSelectorPlanMetadataSyncing) FieldPath() *CreatePlanRequest_FieldSubPath {
	return &CreatePlanRequest_FieldSubPath{
		selector: CreatePlanRequest_FieldPathSelectorPlan,
		subPath:  plan.NewPlanFieldPathBuilder().Metadata().Syncing().FieldPath(),
	}
}

func (s CreatePlanRequestPathSelectorPlanMetadataSyncing) WithValue(value *ntt_meta.SyncingMeta) *CreatePlanRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*CreatePlanRequest_FieldSubPathValue)
}

func (s CreatePlanRequestPathSelectorPlanMetadataSyncing) WithArrayOfValues(values []*ntt_meta.SyncingMeta) *CreatePlanRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CreatePlanRequest_FieldSubPathArrayOfValues)
}

func (CreatePlanRequestPathSelectorPlanMetadataSyncing) OwningRegion() CreatePlanRequestPathSelectorPlanMetadataSyncingOwningRegion {
	return CreatePlanRequestPathSelectorPlanMetadataSyncingOwningRegion{}
}

func (CreatePlanRequestPathSelectorPlanMetadataSyncing) Regions() CreatePlanRequestPathSelectorPlanMetadataSyncingRegions {
	return CreatePlanRequestPathSelectorPlanMetadataSyncingRegions{}
}

type CreatePlanRequestPathSelectorPlanMetadataSyncingOwningRegion struct{}

func (CreatePlanRequestPathSelectorPlanMetadataSyncingOwningRegion) FieldPath() *CreatePlanRequest_FieldSubPath {
	return &CreatePlanRequest_FieldSubPath{
		selector: CreatePlanRequest_FieldPathSelectorPlan,
		subPath:  plan.NewPlanFieldPathBuilder().Metadata().Syncing().OwningRegion().FieldPath(),
	}
}

func (s CreatePlanRequestPathSelectorPlanMetadataSyncingOwningRegion) WithValue(value string) *CreatePlanRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*CreatePlanRequest_FieldSubPathValue)
}

func (s CreatePlanRequestPathSelectorPlanMetadataSyncingOwningRegion) WithArrayOfValues(values []string) *CreatePlanRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CreatePlanRequest_FieldSubPathArrayOfValues)
}

type CreatePlanRequestPathSelectorPlanMetadataSyncingRegions struct{}

func (CreatePlanRequestPathSelectorPlanMetadataSyncingRegions) FieldPath() *CreatePlanRequest_FieldSubPath {
	return &CreatePlanRequest_FieldSubPath{
		selector: CreatePlanRequest_FieldPathSelectorPlan,
		subPath:  plan.NewPlanFieldPathBuilder().Metadata().Syncing().Regions().FieldPath(),
	}
}

func (s CreatePlanRequestPathSelectorPlanMetadataSyncingRegions) WithValue(value []string) *CreatePlanRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*CreatePlanRequest_FieldSubPathValue)
}

func (s CreatePlanRequestPathSelectorPlanMetadataSyncingRegions) WithArrayOfValues(values [][]string) *CreatePlanRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CreatePlanRequest_FieldSubPathArrayOfValues)
}

func (s CreatePlanRequestPathSelectorPlanMetadataSyncingRegions) WithItemValue(value string) *CreatePlanRequest_FieldSubPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*CreatePlanRequest_FieldSubPathArrayItemValue)
}

type UpdatePlanRequestFieldPathBuilder struct{}

func NewUpdatePlanRequestFieldPathBuilder() UpdatePlanRequestFieldPathBuilder {
	return UpdatePlanRequestFieldPathBuilder{}
}
func (UpdatePlanRequestFieldPathBuilder) Plan() UpdatePlanRequestPathSelectorPlan {
	return UpdatePlanRequestPathSelectorPlan{}
}
func (UpdatePlanRequestFieldPathBuilder) UpdateMask() UpdatePlanRequestPathSelectorUpdateMask {
	return UpdatePlanRequestPathSelectorUpdateMask{}
}
func (UpdatePlanRequestFieldPathBuilder) Cas() UpdatePlanRequestPathSelectorCas {
	return UpdatePlanRequestPathSelectorCas{}
}

type UpdatePlanRequestPathSelectorPlan struct{}

func (UpdatePlanRequestPathSelectorPlan) FieldPath() *UpdatePlanRequest_FieldTerminalPath {
	return &UpdatePlanRequest_FieldTerminalPath{selector: UpdatePlanRequest_FieldPathSelectorPlan}
}

func (s UpdatePlanRequestPathSelectorPlan) WithValue(value *plan.Plan) *UpdatePlanRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*UpdatePlanRequest_FieldTerminalPathValue)
}

func (s UpdatePlanRequestPathSelectorPlan) WithArrayOfValues(values []*plan.Plan) *UpdatePlanRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdatePlanRequest_FieldTerminalPathArrayOfValues)
}

func (UpdatePlanRequestPathSelectorPlan) WithSubPath(subPath plan.Plan_FieldPath) *UpdatePlanRequest_FieldSubPath {
	return &UpdatePlanRequest_FieldSubPath{selector: UpdatePlanRequest_FieldPathSelectorPlan, subPath: subPath}
}

func (s UpdatePlanRequestPathSelectorPlan) WithSubValue(subPathValue plan.Plan_FieldPathValue) *UpdatePlanRequest_FieldSubPathValue {
	return &UpdatePlanRequest_FieldSubPathValue{UpdatePlanRequest_FieldPath: s.WithSubPath(subPathValue), subPathValue: subPathValue}
}

func (s UpdatePlanRequestPathSelectorPlan) WithSubArrayOfValues(subPathArrayOfValues plan.Plan_FieldPathArrayOfValues) *UpdatePlanRequest_FieldSubPathArrayOfValues {
	return &UpdatePlanRequest_FieldSubPathArrayOfValues{UpdatePlanRequest_FieldPath: s.WithSubPath(subPathArrayOfValues), subPathArrayOfValues: subPathArrayOfValues}
}

func (s UpdatePlanRequestPathSelectorPlan) WithSubArrayItemValue(subPathArrayItemValue plan.Plan_FieldPathArrayItemValue) *UpdatePlanRequest_FieldSubPathArrayItemValue {
	return &UpdatePlanRequest_FieldSubPathArrayItemValue{UpdatePlanRequest_FieldPath: s.WithSubPath(subPathArrayItemValue), subPathItemValue: subPathArrayItemValue}
}

func (UpdatePlanRequestPathSelectorPlan) Name() UpdatePlanRequestPathSelectorPlanName {
	return UpdatePlanRequestPathSelectorPlanName{}
}

func (UpdatePlanRequestPathSelectorPlan) DisplayName() UpdatePlanRequestPathSelectorPlanDisplayName {
	return UpdatePlanRequestPathSelectorPlanDisplayName{}
}

func (UpdatePlanRequestPathSelectorPlan) Service() UpdatePlanRequestPathSelectorPlanService {
	return UpdatePlanRequestPathSelectorPlanService{}
}

func (UpdatePlanRequestPathSelectorPlan) ResourceLimits() UpdatePlanRequestPathSelectorPlanResourceLimits {
	return UpdatePlanRequestPathSelectorPlanResourceLimits{}
}

func (UpdatePlanRequestPathSelectorPlan) Metadata() UpdatePlanRequestPathSelectorPlanMetadata {
	return UpdatePlanRequestPathSelectorPlanMetadata{}
}

type UpdatePlanRequestPathSelectorPlanName struct{}

func (UpdatePlanRequestPathSelectorPlanName) FieldPath() *UpdatePlanRequest_FieldSubPath {
	return &UpdatePlanRequest_FieldSubPath{
		selector: UpdatePlanRequest_FieldPathSelectorPlan,
		subPath:  plan.NewPlanFieldPathBuilder().Name().FieldPath(),
	}
}

func (s UpdatePlanRequestPathSelectorPlanName) WithValue(value *plan.Name) *UpdatePlanRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdatePlanRequest_FieldSubPathValue)
}

func (s UpdatePlanRequestPathSelectorPlanName) WithArrayOfValues(values []*plan.Name) *UpdatePlanRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdatePlanRequest_FieldSubPathArrayOfValues)
}

type UpdatePlanRequestPathSelectorPlanDisplayName struct{}

func (UpdatePlanRequestPathSelectorPlanDisplayName) FieldPath() *UpdatePlanRequest_FieldSubPath {
	return &UpdatePlanRequest_FieldSubPath{
		selector: UpdatePlanRequest_FieldPathSelectorPlan,
		subPath:  plan.NewPlanFieldPathBuilder().DisplayName().FieldPath(),
	}
}

func (s UpdatePlanRequestPathSelectorPlanDisplayName) WithValue(value string) *UpdatePlanRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdatePlanRequest_FieldSubPathValue)
}

func (s UpdatePlanRequestPathSelectorPlanDisplayName) WithArrayOfValues(values []string) *UpdatePlanRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdatePlanRequest_FieldSubPathArrayOfValues)
}

type UpdatePlanRequestPathSelectorPlanService struct{}

func (UpdatePlanRequestPathSelectorPlanService) FieldPath() *UpdatePlanRequest_FieldSubPath {
	return &UpdatePlanRequest_FieldSubPath{
		selector: UpdatePlanRequest_FieldPathSelectorPlan,
		subPath:  plan.NewPlanFieldPathBuilder().Service().FieldPath(),
	}
}

func (s UpdatePlanRequestPathSelectorPlanService) WithValue(value *meta_service.Reference) *UpdatePlanRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdatePlanRequest_FieldSubPathValue)
}

func (s UpdatePlanRequestPathSelectorPlanService) WithArrayOfValues(values []*meta_service.Reference) *UpdatePlanRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdatePlanRequest_FieldSubPathArrayOfValues)
}

type UpdatePlanRequestPathSelectorPlanResourceLimits struct{}

func (UpdatePlanRequestPathSelectorPlanResourceLimits) FieldPath() *UpdatePlanRequest_FieldSubPath {
	return &UpdatePlanRequest_FieldSubPath{
		selector: UpdatePlanRequest_FieldPathSelectorPlan,
		subPath:  plan.NewPlanFieldPathBuilder().ResourceLimits().FieldPath(),
	}
}

func (s UpdatePlanRequestPathSelectorPlanResourceLimits) WithValue(value []*common.Allowance) *UpdatePlanRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdatePlanRequest_FieldSubPathValue)
}

func (s UpdatePlanRequestPathSelectorPlanResourceLimits) WithArrayOfValues(values [][]*common.Allowance) *UpdatePlanRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdatePlanRequest_FieldSubPathArrayOfValues)
}

func (s UpdatePlanRequestPathSelectorPlanResourceLimits) WithItemValue(value *common.Allowance) *UpdatePlanRequest_FieldSubPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*UpdatePlanRequest_FieldSubPathArrayItemValue)
}

func (UpdatePlanRequestPathSelectorPlanResourceLimits) Resource() UpdatePlanRequestPathSelectorPlanResourceLimitsResource {
	return UpdatePlanRequestPathSelectorPlanResourceLimitsResource{}
}

func (UpdatePlanRequestPathSelectorPlanResourceLimits) Value() UpdatePlanRequestPathSelectorPlanResourceLimitsValue {
	return UpdatePlanRequestPathSelectorPlanResourceLimitsValue{}
}

type UpdatePlanRequestPathSelectorPlanResourceLimitsResource struct{}

func (UpdatePlanRequestPathSelectorPlanResourceLimitsResource) FieldPath() *UpdatePlanRequest_FieldSubPath {
	return &UpdatePlanRequest_FieldSubPath{
		selector: UpdatePlanRequest_FieldPathSelectorPlan,
		subPath:  plan.NewPlanFieldPathBuilder().ResourceLimits().Resource().FieldPath(),
	}
}

func (s UpdatePlanRequestPathSelectorPlanResourceLimitsResource) WithValue(value *meta_resource.Reference) *UpdatePlanRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdatePlanRequest_FieldSubPathValue)
}

func (s UpdatePlanRequestPathSelectorPlanResourceLimitsResource) WithArrayOfValues(values []*meta_resource.Reference) *UpdatePlanRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdatePlanRequest_FieldSubPathArrayOfValues)
}

type UpdatePlanRequestPathSelectorPlanResourceLimitsValue struct{}

func (UpdatePlanRequestPathSelectorPlanResourceLimitsValue) FieldPath() *UpdatePlanRequest_FieldSubPath {
	return &UpdatePlanRequest_FieldSubPath{
		selector: UpdatePlanRequest_FieldPathSelectorPlan,
		subPath:  plan.NewPlanFieldPathBuilder().ResourceLimits().Value().FieldPath(),
	}
}

func (s UpdatePlanRequestPathSelectorPlanResourceLimitsValue) WithValue(value int64) *UpdatePlanRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdatePlanRequest_FieldSubPathValue)
}

func (s UpdatePlanRequestPathSelectorPlanResourceLimitsValue) WithArrayOfValues(values []int64) *UpdatePlanRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdatePlanRequest_FieldSubPathArrayOfValues)
}

type UpdatePlanRequestPathSelectorPlanMetadata struct{}

func (UpdatePlanRequestPathSelectorPlanMetadata) FieldPath() *UpdatePlanRequest_FieldSubPath {
	return &UpdatePlanRequest_FieldSubPath{
		selector: UpdatePlanRequest_FieldPathSelectorPlan,
		subPath:  plan.NewPlanFieldPathBuilder().Metadata().FieldPath(),
	}
}

func (s UpdatePlanRequestPathSelectorPlanMetadata) WithValue(value *ntt_meta.Meta) *UpdatePlanRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdatePlanRequest_FieldSubPathValue)
}

func (s UpdatePlanRequestPathSelectorPlanMetadata) WithArrayOfValues(values []*ntt_meta.Meta) *UpdatePlanRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdatePlanRequest_FieldSubPathArrayOfValues)
}

func (UpdatePlanRequestPathSelectorPlanMetadata) CreateTime() UpdatePlanRequestPathSelectorPlanMetadataCreateTime {
	return UpdatePlanRequestPathSelectorPlanMetadataCreateTime{}
}

func (UpdatePlanRequestPathSelectorPlanMetadata) UpdateTime() UpdatePlanRequestPathSelectorPlanMetadataUpdateTime {
	return UpdatePlanRequestPathSelectorPlanMetadataUpdateTime{}
}

func (UpdatePlanRequestPathSelectorPlanMetadata) Uuid() UpdatePlanRequestPathSelectorPlanMetadataUuid {
	return UpdatePlanRequestPathSelectorPlanMetadataUuid{}
}

func (UpdatePlanRequestPathSelectorPlanMetadata) Tags() UpdatePlanRequestPathSelectorPlanMetadataTags {
	return UpdatePlanRequestPathSelectorPlanMetadataTags{}
}

func (UpdatePlanRequestPathSelectorPlanMetadata) Labels() UpdatePlanRequestPathSelectorPlanMetadataLabels {
	return UpdatePlanRequestPathSelectorPlanMetadataLabels{}
}

func (UpdatePlanRequestPathSelectorPlanMetadata) Annotations() UpdatePlanRequestPathSelectorPlanMetadataAnnotations {
	return UpdatePlanRequestPathSelectorPlanMetadataAnnotations{}
}

func (UpdatePlanRequestPathSelectorPlanMetadata) Generation() UpdatePlanRequestPathSelectorPlanMetadataGeneration {
	return UpdatePlanRequestPathSelectorPlanMetadataGeneration{}
}

func (UpdatePlanRequestPathSelectorPlanMetadata) ResourceVersion() UpdatePlanRequestPathSelectorPlanMetadataResourceVersion {
	return UpdatePlanRequestPathSelectorPlanMetadataResourceVersion{}
}

func (UpdatePlanRequestPathSelectorPlanMetadata) OwnerReferences() UpdatePlanRequestPathSelectorPlanMetadataOwnerReferences {
	return UpdatePlanRequestPathSelectorPlanMetadataOwnerReferences{}
}

func (UpdatePlanRequestPathSelectorPlanMetadata) Shards() UpdatePlanRequestPathSelectorPlanMetadataShards {
	return UpdatePlanRequestPathSelectorPlanMetadataShards{}
}

func (UpdatePlanRequestPathSelectorPlanMetadata) Syncing() UpdatePlanRequestPathSelectorPlanMetadataSyncing {
	return UpdatePlanRequestPathSelectorPlanMetadataSyncing{}
}

type UpdatePlanRequestPathSelectorPlanMetadataCreateTime struct{}

func (UpdatePlanRequestPathSelectorPlanMetadataCreateTime) FieldPath() *UpdatePlanRequest_FieldSubPath {
	return &UpdatePlanRequest_FieldSubPath{
		selector: UpdatePlanRequest_FieldPathSelectorPlan,
		subPath:  plan.NewPlanFieldPathBuilder().Metadata().CreateTime().FieldPath(),
	}
}

func (s UpdatePlanRequestPathSelectorPlanMetadataCreateTime) WithValue(value *timestamp.Timestamp) *UpdatePlanRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdatePlanRequest_FieldSubPathValue)
}

func (s UpdatePlanRequestPathSelectorPlanMetadataCreateTime) WithArrayOfValues(values []*timestamp.Timestamp) *UpdatePlanRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdatePlanRequest_FieldSubPathArrayOfValues)
}

type UpdatePlanRequestPathSelectorPlanMetadataUpdateTime struct{}

func (UpdatePlanRequestPathSelectorPlanMetadataUpdateTime) FieldPath() *UpdatePlanRequest_FieldSubPath {
	return &UpdatePlanRequest_FieldSubPath{
		selector: UpdatePlanRequest_FieldPathSelectorPlan,
		subPath:  plan.NewPlanFieldPathBuilder().Metadata().UpdateTime().FieldPath(),
	}
}

func (s UpdatePlanRequestPathSelectorPlanMetadataUpdateTime) WithValue(value *timestamp.Timestamp) *UpdatePlanRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdatePlanRequest_FieldSubPathValue)
}

func (s UpdatePlanRequestPathSelectorPlanMetadataUpdateTime) WithArrayOfValues(values []*timestamp.Timestamp) *UpdatePlanRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdatePlanRequest_FieldSubPathArrayOfValues)
}

type UpdatePlanRequestPathSelectorPlanMetadataUuid struct{}

func (UpdatePlanRequestPathSelectorPlanMetadataUuid) FieldPath() *UpdatePlanRequest_FieldSubPath {
	return &UpdatePlanRequest_FieldSubPath{
		selector: UpdatePlanRequest_FieldPathSelectorPlan,
		subPath:  plan.NewPlanFieldPathBuilder().Metadata().Uuid().FieldPath(),
	}
}

func (s UpdatePlanRequestPathSelectorPlanMetadataUuid) WithValue(value string) *UpdatePlanRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdatePlanRequest_FieldSubPathValue)
}

func (s UpdatePlanRequestPathSelectorPlanMetadataUuid) WithArrayOfValues(values []string) *UpdatePlanRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdatePlanRequest_FieldSubPathArrayOfValues)
}

type UpdatePlanRequestPathSelectorPlanMetadataTags struct{}

func (UpdatePlanRequestPathSelectorPlanMetadataTags) FieldPath() *UpdatePlanRequest_FieldSubPath {
	return &UpdatePlanRequest_FieldSubPath{
		selector: UpdatePlanRequest_FieldPathSelectorPlan,
		subPath:  plan.NewPlanFieldPathBuilder().Metadata().Tags().FieldPath(),
	}
}

func (s UpdatePlanRequestPathSelectorPlanMetadataTags) WithValue(value []string) *UpdatePlanRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdatePlanRequest_FieldSubPathValue)
}

func (s UpdatePlanRequestPathSelectorPlanMetadataTags) WithArrayOfValues(values [][]string) *UpdatePlanRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdatePlanRequest_FieldSubPathArrayOfValues)
}

func (s UpdatePlanRequestPathSelectorPlanMetadataTags) WithItemValue(value string) *UpdatePlanRequest_FieldSubPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*UpdatePlanRequest_FieldSubPathArrayItemValue)
}

type UpdatePlanRequestPathSelectorPlanMetadataLabels struct{}

func (UpdatePlanRequestPathSelectorPlanMetadataLabels) FieldPath() *UpdatePlanRequest_FieldSubPath {
	return &UpdatePlanRequest_FieldSubPath{
		selector: UpdatePlanRequest_FieldPathSelectorPlan,
		subPath:  plan.NewPlanFieldPathBuilder().Metadata().Labels().FieldPath(),
	}
}

func (s UpdatePlanRequestPathSelectorPlanMetadataLabels) WithValue(value map[string]string) *UpdatePlanRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdatePlanRequest_FieldSubPathValue)
}

func (s UpdatePlanRequestPathSelectorPlanMetadataLabels) WithArrayOfValues(values []map[string]string) *UpdatePlanRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdatePlanRequest_FieldSubPathArrayOfValues)
}

func (UpdatePlanRequestPathSelectorPlanMetadataLabels) WithKey(key string) UpdatePlanRequestMapPathSelectorPlanMetadataLabels {
	return UpdatePlanRequestMapPathSelectorPlanMetadataLabels{key: key}
}

type UpdatePlanRequestMapPathSelectorPlanMetadataLabels struct {
	key string
}

func (s UpdatePlanRequestMapPathSelectorPlanMetadataLabels) FieldPath() *UpdatePlanRequest_FieldSubPath {
	return &UpdatePlanRequest_FieldSubPath{
		selector: UpdatePlanRequest_FieldPathSelectorPlan,
		subPath:  plan.NewPlanFieldPathBuilder().Metadata().Labels().WithKey(s.key).FieldPath(),
	}
}

func (s UpdatePlanRequestMapPathSelectorPlanMetadataLabels) WithValue(value string) *UpdatePlanRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdatePlanRequest_FieldSubPathValue)
}

func (s UpdatePlanRequestMapPathSelectorPlanMetadataLabels) WithArrayOfValues(values []string) *UpdatePlanRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdatePlanRequest_FieldSubPathArrayOfValues)
}

type UpdatePlanRequestPathSelectorPlanMetadataAnnotations struct{}

func (UpdatePlanRequestPathSelectorPlanMetadataAnnotations) FieldPath() *UpdatePlanRequest_FieldSubPath {
	return &UpdatePlanRequest_FieldSubPath{
		selector: UpdatePlanRequest_FieldPathSelectorPlan,
		subPath:  plan.NewPlanFieldPathBuilder().Metadata().Annotations().FieldPath(),
	}
}

func (s UpdatePlanRequestPathSelectorPlanMetadataAnnotations) WithValue(value map[string]string) *UpdatePlanRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdatePlanRequest_FieldSubPathValue)
}

func (s UpdatePlanRequestPathSelectorPlanMetadataAnnotations) WithArrayOfValues(values []map[string]string) *UpdatePlanRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdatePlanRequest_FieldSubPathArrayOfValues)
}

func (UpdatePlanRequestPathSelectorPlanMetadataAnnotations) WithKey(key string) UpdatePlanRequestMapPathSelectorPlanMetadataAnnotations {
	return UpdatePlanRequestMapPathSelectorPlanMetadataAnnotations{key: key}
}

type UpdatePlanRequestMapPathSelectorPlanMetadataAnnotations struct {
	key string
}

func (s UpdatePlanRequestMapPathSelectorPlanMetadataAnnotations) FieldPath() *UpdatePlanRequest_FieldSubPath {
	return &UpdatePlanRequest_FieldSubPath{
		selector: UpdatePlanRequest_FieldPathSelectorPlan,
		subPath:  plan.NewPlanFieldPathBuilder().Metadata().Annotations().WithKey(s.key).FieldPath(),
	}
}

func (s UpdatePlanRequestMapPathSelectorPlanMetadataAnnotations) WithValue(value string) *UpdatePlanRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdatePlanRequest_FieldSubPathValue)
}

func (s UpdatePlanRequestMapPathSelectorPlanMetadataAnnotations) WithArrayOfValues(values []string) *UpdatePlanRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdatePlanRequest_FieldSubPathArrayOfValues)
}

type UpdatePlanRequestPathSelectorPlanMetadataGeneration struct{}

func (UpdatePlanRequestPathSelectorPlanMetadataGeneration) FieldPath() *UpdatePlanRequest_FieldSubPath {
	return &UpdatePlanRequest_FieldSubPath{
		selector: UpdatePlanRequest_FieldPathSelectorPlan,
		subPath:  plan.NewPlanFieldPathBuilder().Metadata().Generation().FieldPath(),
	}
}

func (s UpdatePlanRequestPathSelectorPlanMetadataGeneration) WithValue(value int64) *UpdatePlanRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdatePlanRequest_FieldSubPathValue)
}

func (s UpdatePlanRequestPathSelectorPlanMetadataGeneration) WithArrayOfValues(values []int64) *UpdatePlanRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdatePlanRequest_FieldSubPathArrayOfValues)
}

type UpdatePlanRequestPathSelectorPlanMetadataResourceVersion struct{}

func (UpdatePlanRequestPathSelectorPlanMetadataResourceVersion) FieldPath() *UpdatePlanRequest_FieldSubPath {
	return &UpdatePlanRequest_FieldSubPath{
		selector: UpdatePlanRequest_FieldPathSelectorPlan,
		subPath:  plan.NewPlanFieldPathBuilder().Metadata().ResourceVersion().FieldPath(),
	}
}

func (s UpdatePlanRequestPathSelectorPlanMetadataResourceVersion) WithValue(value string) *UpdatePlanRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdatePlanRequest_FieldSubPathValue)
}

func (s UpdatePlanRequestPathSelectorPlanMetadataResourceVersion) WithArrayOfValues(values []string) *UpdatePlanRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdatePlanRequest_FieldSubPathArrayOfValues)
}

type UpdatePlanRequestPathSelectorPlanMetadataOwnerReferences struct{}

func (UpdatePlanRequestPathSelectorPlanMetadataOwnerReferences) FieldPath() *UpdatePlanRequest_FieldSubPath {
	return &UpdatePlanRequest_FieldSubPath{
		selector: UpdatePlanRequest_FieldPathSelectorPlan,
		subPath:  plan.NewPlanFieldPathBuilder().Metadata().OwnerReferences().FieldPath(),
	}
}

func (s UpdatePlanRequestPathSelectorPlanMetadataOwnerReferences) WithValue(value []*ntt_meta.OwnerReference) *UpdatePlanRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdatePlanRequest_FieldSubPathValue)
}

func (s UpdatePlanRequestPathSelectorPlanMetadataOwnerReferences) WithArrayOfValues(values [][]*ntt_meta.OwnerReference) *UpdatePlanRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdatePlanRequest_FieldSubPathArrayOfValues)
}

func (s UpdatePlanRequestPathSelectorPlanMetadataOwnerReferences) WithItemValue(value *ntt_meta.OwnerReference) *UpdatePlanRequest_FieldSubPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*UpdatePlanRequest_FieldSubPathArrayItemValue)
}

func (UpdatePlanRequestPathSelectorPlanMetadataOwnerReferences) ApiVersion() UpdatePlanRequestPathSelectorPlanMetadataOwnerReferencesApiVersion {
	return UpdatePlanRequestPathSelectorPlanMetadataOwnerReferencesApiVersion{}
}

func (UpdatePlanRequestPathSelectorPlanMetadataOwnerReferences) Kind() UpdatePlanRequestPathSelectorPlanMetadataOwnerReferencesKind {
	return UpdatePlanRequestPathSelectorPlanMetadataOwnerReferencesKind{}
}

func (UpdatePlanRequestPathSelectorPlanMetadataOwnerReferences) Name() UpdatePlanRequestPathSelectorPlanMetadataOwnerReferencesName {
	return UpdatePlanRequestPathSelectorPlanMetadataOwnerReferencesName{}
}

func (UpdatePlanRequestPathSelectorPlanMetadataOwnerReferences) Uid() UpdatePlanRequestPathSelectorPlanMetadataOwnerReferencesUid {
	return UpdatePlanRequestPathSelectorPlanMetadataOwnerReferencesUid{}
}

func (UpdatePlanRequestPathSelectorPlanMetadataOwnerReferences) Controller() UpdatePlanRequestPathSelectorPlanMetadataOwnerReferencesController {
	return UpdatePlanRequestPathSelectorPlanMetadataOwnerReferencesController{}
}

func (UpdatePlanRequestPathSelectorPlanMetadataOwnerReferences) BlockOwnerDeletion() UpdatePlanRequestPathSelectorPlanMetadataOwnerReferencesBlockOwnerDeletion {
	return UpdatePlanRequestPathSelectorPlanMetadataOwnerReferencesBlockOwnerDeletion{}
}

type UpdatePlanRequestPathSelectorPlanMetadataOwnerReferencesApiVersion struct{}

func (UpdatePlanRequestPathSelectorPlanMetadataOwnerReferencesApiVersion) FieldPath() *UpdatePlanRequest_FieldSubPath {
	return &UpdatePlanRequest_FieldSubPath{
		selector: UpdatePlanRequest_FieldPathSelectorPlan,
		subPath:  plan.NewPlanFieldPathBuilder().Metadata().OwnerReferences().ApiVersion().FieldPath(),
	}
}

func (s UpdatePlanRequestPathSelectorPlanMetadataOwnerReferencesApiVersion) WithValue(value string) *UpdatePlanRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdatePlanRequest_FieldSubPathValue)
}

func (s UpdatePlanRequestPathSelectorPlanMetadataOwnerReferencesApiVersion) WithArrayOfValues(values []string) *UpdatePlanRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdatePlanRequest_FieldSubPathArrayOfValues)
}

type UpdatePlanRequestPathSelectorPlanMetadataOwnerReferencesKind struct{}

func (UpdatePlanRequestPathSelectorPlanMetadataOwnerReferencesKind) FieldPath() *UpdatePlanRequest_FieldSubPath {
	return &UpdatePlanRequest_FieldSubPath{
		selector: UpdatePlanRequest_FieldPathSelectorPlan,
		subPath:  plan.NewPlanFieldPathBuilder().Metadata().OwnerReferences().Kind().FieldPath(),
	}
}

func (s UpdatePlanRequestPathSelectorPlanMetadataOwnerReferencesKind) WithValue(value string) *UpdatePlanRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdatePlanRequest_FieldSubPathValue)
}

func (s UpdatePlanRequestPathSelectorPlanMetadataOwnerReferencesKind) WithArrayOfValues(values []string) *UpdatePlanRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdatePlanRequest_FieldSubPathArrayOfValues)
}

type UpdatePlanRequestPathSelectorPlanMetadataOwnerReferencesName struct{}

func (UpdatePlanRequestPathSelectorPlanMetadataOwnerReferencesName) FieldPath() *UpdatePlanRequest_FieldSubPath {
	return &UpdatePlanRequest_FieldSubPath{
		selector: UpdatePlanRequest_FieldPathSelectorPlan,
		subPath:  plan.NewPlanFieldPathBuilder().Metadata().OwnerReferences().Name().FieldPath(),
	}
}

func (s UpdatePlanRequestPathSelectorPlanMetadataOwnerReferencesName) WithValue(value string) *UpdatePlanRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdatePlanRequest_FieldSubPathValue)
}

func (s UpdatePlanRequestPathSelectorPlanMetadataOwnerReferencesName) WithArrayOfValues(values []string) *UpdatePlanRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdatePlanRequest_FieldSubPathArrayOfValues)
}

type UpdatePlanRequestPathSelectorPlanMetadataOwnerReferencesUid struct{}

func (UpdatePlanRequestPathSelectorPlanMetadataOwnerReferencesUid) FieldPath() *UpdatePlanRequest_FieldSubPath {
	return &UpdatePlanRequest_FieldSubPath{
		selector: UpdatePlanRequest_FieldPathSelectorPlan,
		subPath:  plan.NewPlanFieldPathBuilder().Metadata().OwnerReferences().Uid().FieldPath(),
	}
}

func (s UpdatePlanRequestPathSelectorPlanMetadataOwnerReferencesUid) WithValue(value string) *UpdatePlanRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdatePlanRequest_FieldSubPathValue)
}

func (s UpdatePlanRequestPathSelectorPlanMetadataOwnerReferencesUid) WithArrayOfValues(values []string) *UpdatePlanRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdatePlanRequest_FieldSubPathArrayOfValues)
}

type UpdatePlanRequestPathSelectorPlanMetadataOwnerReferencesController struct{}

func (UpdatePlanRequestPathSelectorPlanMetadataOwnerReferencesController) FieldPath() *UpdatePlanRequest_FieldSubPath {
	return &UpdatePlanRequest_FieldSubPath{
		selector: UpdatePlanRequest_FieldPathSelectorPlan,
		subPath:  plan.NewPlanFieldPathBuilder().Metadata().OwnerReferences().Controller().FieldPath(),
	}
}

func (s UpdatePlanRequestPathSelectorPlanMetadataOwnerReferencesController) WithValue(value bool) *UpdatePlanRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdatePlanRequest_FieldSubPathValue)
}

func (s UpdatePlanRequestPathSelectorPlanMetadataOwnerReferencesController) WithArrayOfValues(values []bool) *UpdatePlanRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdatePlanRequest_FieldSubPathArrayOfValues)
}

type UpdatePlanRequestPathSelectorPlanMetadataOwnerReferencesBlockOwnerDeletion struct{}

func (UpdatePlanRequestPathSelectorPlanMetadataOwnerReferencesBlockOwnerDeletion) FieldPath() *UpdatePlanRequest_FieldSubPath {
	return &UpdatePlanRequest_FieldSubPath{
		selector: UpdatePlanRequest_FieldPathSelectorPlan,
		subPath:  plan.NewPlanFieldPathBuilder().Metadata().OwnerReferences().BlockOwnerDeletion().FieldPath(),
	}
}

func (s UpdatePlanRequestPathSelectorPlanMetadataOwnerReferencesBlockOwnerDeletion) WithValue(value bool) *UpdatePlanRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdatePlanRequest_FieldSubPathValue)
}

func (s UpdatePlanRequestPathSelectorPlanMetadataOwnerReferencesBlockOwnerDeletion) WithArrayOfValues(values []bool) *UpdatePlanRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdatePlanRequest_FieldSubPathArrayOfValues)
}

type UpdatePlanRequestPathSelectorPlanMetadataShards struct{}

func (UpdatePlanRequestPathSelectorPlanMetadataShards) FieldPath() *UpdatePlanRequest_FieldSubPath {
	return &UpdatePlanRequest_FieldSubPath{
		selector: UpdatePlanRequest_FieldPathSelectorPlan,
		subPath:  plan.NewPlanFieldPathBuilder().Metadata().Shards().FieldPath(),
	}
}

func (s UpdatePlanRequestPathSelectorPlanMetadataShards) WithValue(value map[string]int64) *UpdatePlanRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdatePlanRequest_FieldSubPathValue)
}

func (s UpdatePlanRequestPathSelectorPlanMetadataShards) WithArrayOfValues(values []map[string]int64) *UpdatePlanRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdatePlanRequest_FieldSubPathArrayOfValues)
}

func (UpdatePlanRequestPathSelectorPlanMetadataShards) WithKey(key string) UpdatePlanRequestMapPathSelectorPlanMetadataShards {
	return UpdatePlanRequestMapPathSelectorPlanMetadataShards{key: key}
}

type UpdatePlanRequestMapPathSelectorPlanMetadataShards struct {
	key string
}

func (s UpdatePlanRequestMapPathSelectorPlanMetadataShards) FieldPath() *UpdatePlanRequest_FieldSubPath {
	return &UpdatePlanRequest_FieldSubPath{
		selector: UpdatePlanRequest_FieldPathSelectorPlan,
		subPath:  plan.NewPlanFieldPathBuilder().Metadata().Shards().WithKey(s.key).FieldPath(),
	}
}

func (s UpdatePlanRequestMapPathSelectorPlanMetadataShards) WithValue(value int64) *UpdatePlanRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdatePlanRequest_FieldSubPathValue)
}

func (s UpdatePlanRequestMapPathSelectorPlanMetadataShards) WithArrayOfValues(values []int64) *UpdatePlanRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdatePlanRequest_FieldSubPathArrayOfValues)
}

type UpdatePlanRequestPathSelectorPlanMetadataSyncing struct{}

func (UpdatePlanRequestPathSelectorPlanMetadataSyncing) FieldPath() *UpdatePlanRequest_FieldSubPath {
	return &UpdatePlanRequest_FieldSubPath{
		selector: UpdatePlanRequest_FieldPathSelectorPlan,
		subPath:  plan.NewPlanFieldPathBuilder().Metadata().Syncing().FieldPath(),
	}
}

func (s UpdatePlanRequestPathSelectorPlanMetadataSyncing) WithValue(value *ntt_meta.SyncingMeta) *UpdatePlanRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdatePlanRequest_FieldSubPathValue)
}

func (s UpdatePlanRequestPathSelectorPlanMetadataSyncing) WithArrayOfValues(values []*ntt_meta.SyncingMeta) *UpdatePlanRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdatePlanRequest_FieldSubPathArrayOfValues)
}

func (UpdatePlanRequestPathSelectorPlanMetadataSyncing) OwningRegion() UpdatePlanRequestPathSelectorPlanMetadataSyncingOwningRegion {
	return UpdatePlanRequestPathSelectorPlanMetadataSyncingOwningRegion{}
}

func (UpdatePlanRequestPathSelectorPlanMetadataSyncing) Regions() UpdatePlanRequestPathSelectorPlanMetadataSyncingRegions {
	return UpdatePlanRequestPathSelectorPlanMetadataSyncingRegions{}
}

type UpdatePlanRequestPathSelectorPlanMetadataSyncingOwningRegion struct{}

func (UpdatePlanRequestPathSelectorPlanMetadataSyncingOwningRegion) FieldPath() *UpdatePlanRequest_FieldSubPath {
	return &UpdatePlanRequest_FieldSubPath{
		selector: UpdatePlanRequest_FieldPathSelectorPlan,
		subPath:  plan.NewPlanFieldPathBuilder().Metadata().Syncing().OwningRegion().FieldPath(),
	}
}

func (s UpdatePlanRequestPathSelectorPlanMetadataSyncingOwningRegion) WithValue(value string) *UpdatePlanRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdatePlanRequest_FieldSubPathValue)
}

func (s UpdatePlanRequestPathSelectorPlanMetadataSyncingOwningRegion) WithArrayOfValues(values []string) *UpdatePlanRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdatePlanRequest_FieldSubPathArrayOfValues)
}

type UpdatePlanRequestPathSelectorPlanMetadataSyncingRegions struct{}

func (UpdatePlanRequestPathSelectorPlanMetadataSyncingRegions) FieldPath() *UpdatePlanRequest_FieldSubPath {
	return &UpdatePlanRequest_FieldSubPath{
		selector: UpdatePlanRequest_FieldPathSelectorPlan,
		subPath:  plan.NewPlanFieldPathBuilder().Metadata().Syncing().Regions().FieldPath(),
	}
}

func (s UpdatePlanRequestPathSelectorPlanMetadataSyncingRegions) WithValue(value []string) *UpdatePlanRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdatePlanRequest_FieldSubPathValue)
}

func (s UpdatePlanRequestPathSelectorPlanMetadataSyncingRegions) WithArrayOfValues(values [][]string) *UpdatePlanRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdatePlanRequest_FieldSubPathArrayOfValues)
}

func (s UpdatePlanRequestPathSelectorPlanMetadataSyncingRegions) WithItemValue(value string) *UpdatePlanRequest_FieldSubPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*UpdatePlanRequest_FieldSubPathArrayItemValue)
}

type UpdatePlanRequestPathSelectorUpdateMask struct{}

func (UpdatePlanRequestPathSelectorUpdateMask) FieldPath() *UpdatePlanRequest_FieldTerminalPath {
	return &UpdatePlanRequest_FieldTerminalPath{selector: UpdatePlanRequest_FieldPathSelectorUpdateMask}
}

func (s UpdatePlanRequestPathSelectorUpdateMask) WithValue(value *plan.Plan_FieldMask) *UpdatePlanRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*UpdatePlanRequest_FieldTerminalPathValue)
}

func (s UpdatePlanRequestPathSelectorUpdateMask) WithArrayOfValues(values []*plan.Plan_FieldMask) *UpdatePlanRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdatePlanRequest_FieldTerminalPathArrayOfValues)
}

type UpdatePlanRequestPathSelectorCas struct{}

func (UpdatePlanRequestPathSelectorCas) FieldPath() *UpdatePlanRequest_FieldTerminalPath {
	return &UpdatePlanRequest_FieldTerminalPath{selector: UpdatePlanRequest_FieldPathSelectorCas}
}

func (s UpdatePlanRequestPathSelectorCas) WithValue(value *UpdatePlanRequest_CAS) *UpdatePlanRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*UpdatePlanRequest_FieldTerminalPathValue)
}

func (s UpdatePlanRequestPathSelectorCas) WithArrayOfValues(values []*UpdatePlanRequest_CAS) *UpdatePlanRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdatePlanRequest_FieldTerminalPathArrayOfValues)
}

func (UpdatePlanRequestPathSelectorCas) WithSubPath(subPath UpdatePlanRequestCAS_FieldPath) *UpdatePlanRequest_FieldSubPath {
	return &UpdatePlanRequest_FieldSubPath{selector: UpdatePlanRequest_FieldPathSelectorCas, subPath: subPath}
}

func (s UpdatePlanRequestPathSelectorCas) WithSubValue(subPathValue UpdatePlanRequestCAS_FieldPathValue) *UpdatePlanRequest_FieldSubPathValue {
	return &UpdatePlanRequest_FieldSubPathValue{UpdatePlanRequest_FieldPath: s.WithSubPath(subPathValue), subPathValue: subPathValue}
}

func (s UpdatePlanRequestPathSelectorCas) WithSubArrayOfValues(subPathArrayOfValues UpdatePlanRequestCAS_FieldPathArrayOfValues) *UpdatePlanRequest_FieldSubPathArrayOfValues {
	return &UpdatePlanRequest_FieldSubPathArrayOfValues{UpdatePlanRequest_FieldPath: s.WithSubPath(subPathArrayOfValues), subPathArrayOfValues: subPathArrayOfValues}
}

func (s UpdatePlanRequestPathSelectorCas) WithSubArrayItemValue(subPathArrayItemValue UpdatePlanRequestCAS_FieldPathArrayItemValue) *UpdatePlanRequest_FieldSubPathArrayItemValue {
	return &UpdatePlanRequest_FieldSubPathArrayItemValue{UpdatePlanRequest_FieldPath: s.WithSubPath(subPathArrayItemValue), subPathItemValue: subPathArrayItemValue}
}

func (UpdatePlanRequestPathSelectorCas) ConditionalState() UpdatePlanRequestPathSelectorCasConditionalState {
	return UpdatePlanRequestPathSelectorCasConditionalState{}
}

func (UpdatePlanRequestPathSelectorCas) FieldMask() UpdatePlanRequestPathSelectorCasFieldMask {
	return UpdatePlanRequestPathSelectorCasFieldMask{}
}

type UpdatePlanRequestPathSelectorCasConditionalState struct{}

func (UpdatePlanRequestPathSelectorCasConditionalState) FieldPath() *UpdatePlanRequest_FieldSubPath {
	return &UpdatePlanRequest_FieldSubPath{
		selector: UpdatePlanRequest_FieldPathSelectorCas,
		subPath:  NewUpdatePlanRequestCASFieldPathBuilder().ConditionalState().FieldPath(),
	}
}

func (s UpdatePlanRequestPathSelectorCasConditionalState) WithValue(value *plan.Plan) *UpdatePlanRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdatePlanRequest_FieldSubPathValue)
}

func (s UpdatePlanRequestPathSelectorCasConditionalState) WithArrayOfValues(values []*plan.Plan) *UpdatePlanRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdatePlanRequest_FieldSubPathArrayOfValues)
}

func (UpdatePlanRequestPathSelectorCasConditionalState) Name() UpdatePlanRequestPathSelectorCasConditionalStateName {
	return UpdatePlanRequestPathSelectorCasConditionalStateName{}
}

func (UpdatePlanRequestPathSelectorCasConditionalState) DisplayName() UpdatePlanRequestPathSelectorCasConditionalStateDisplayName {
	return UpdatePlanRequestPathSelectorCasConditionalStateDisplayName{}
}

func (UpdatePlanRequestPathSelectorCasConditionalState) Service() UpdatePlanRequestPathSelectorCasConditionalStateService {
	return UpdatePlanRequestPathSelectorCasConditionalStateService{}
}

func (UpdatePlanRequestPathSelectorCasConditionalState) ResourceLimits() UpdatePlanRequestPathSelectorCasConditionalStateResourceLimits {
	return UpdatePlanRequestPathSelectorCasConditionalStateResourceLimits{}
}

func (UpdatePlanRequestPathSelectorCasConditionalState) Metadata() UpdatePlanRequestPathSelectorCasConditionalStateMetadata {
	return UpdatePlanRequestPathSelectorCasConditionalStateMetadata{}
}

type UpdatePlanRequestPathSelectorCasConditionalStateName struct{}

func (UpdatePlanRequestPathSelectorCasConditionalStateName) FieldPath() *UpdatePlanRequest_FieldSubPath {
	return &UpdatePlanRequest_FieldSubPath{
		selector: UpdatePlanRequest_FieldPathSelectorCas,
		subPath:  NewUpdatePlanRequestCASFieldPathBuilder().ConditionalState().Name().FieldPath(),
	}
}

func (s UpdatePlanRequestPathSelectorCasConditionalStateName) WithValue(value *plan.Name) *UpdatePlanRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdatePlanRequest_FieldSubPathValue)
}

func (s UpdatePlanRequestPathSelectorCasConditionalStateName) WithArrayOfValues(values []*plan.Name) *UpdatePlanRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdatePlanRequest_FieldSubPathArrayOfValues)
}

type UpdatePlanRequestPathSelectorCasConditionalStateDisplayName struct{}

func (UpdatePlanRequestPathSelectorCasConditionalStateDisplayName) FieldPath() *UpdatePlanRequest_FieldSubPath {
	return &UpdatePlanRequest_FieldSubPath{
		selector: UpdatePlanRequest_FieldPathSelectorCas,
		subPath:  NewUpdatePlanRequestCASFieldPathBuilder().ConditionalState().DisplayName().FieldPath(),
	}
}

func (s UpdatePlanRequestPathSelectorCasConditionalStateDisplayName) WithValue(value string) *UpdatePlanRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdatePlanRequest_FieldSubPathValue)
}

func (s UpdatePlanRequestPathSelectorCasConditionalStateDisplayName) WithArrayOfValues(values []string) *UpdatePlanRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdatePlanRequest_FieldSubPathArrayOfValues)
}

type UpdatePlanRequestPathSelectorCasConditionalStateService struct{}

func (UpdatePlanRequestPathSelectorCasConditionalStateService) FieldPath() *UpdatePlanRequest_FieldSubPath {
	return &UpdatePlanRequest_FieldSubPath{
		selector: UpdatePlanRequest_FieldPathSelectorCas,
		subPath:  NewUpdatePlanRequestCASFieldPathBuilder().ConditionalState().Service().FieldPath(),
	}
}

func (s UpdatePlanRequestPathSelectorCasConditionalStateService) WithValue(value *meta_service.Reference) *UpdatePlanRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdatePlanRequest_FieldSubPathValue)
}

func (s UpdatePlanRequestPathSelectorCasConditionalStateService) WithArrayOfValues(values []*meta_service.Reference) *UpdatePlanRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdatePlanRequest_FieldSubPathArrayOfValues)
}

type UpdatePlanRequestPathSelectorCasConditionalStateResourceLimits struct{}

func (UpdatePlanRequestPathSelectorCasConditionalStateResourceLimits) FieldPath() *UpdatePlanRequest_FieldSubPath {
	return &UpdatePlanRequest_FieldSubPath{
		selector: UpdatePlanRequest_FieldPathSelectorCas,
		subPath:  NewUpdatePlanRequestCASFieldPathBuilder().ConditionalState().ResourceLimits().FieldPath(),
	}
}

func (s UpdatePlanRequestPathSelectorCasConditionalStateResourceLimits) WithValue(value []*common.Allowance) *UpdatePlanRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdatePlanRequest_FieldSubPathValue)
}

func (s UpdatePlanRequestPathSelectorCasConditionalStateResourceLimits) WithArrayOfValues(values [][]*common.Allowance) *UpdatePlanRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdatePlanRequest_FieldSubPathArrayOfValues)
}

func (s UpdatePlanRequestPathSelectorCasConditionalStateResourceLimits) WithItemValue(value *common.Allowance) *UpdatePlanRequest_FieldSubPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*UpdatePlanRequest_FieldSubPathArrayItemValue)
}

func (UpdatePlanRequestPathSelectorCasConditionalStateResourceLimits) Resource() UpdatePlanRequestPathSelectorCasConditionalStateResourceLimitsResource {
	return UpdatePlanRequestPathSelectorCasConditionalStateResourceLimitsResource{}
}

func (UpdatePlanRequestPathSelectorCasConditionalStateResourceLimits) Value() UpdatePlanRequestPathSelectorCasConditionalStateResourceLimitsValue {
	return UpdatePlanRequestPathSelectorCasConditionalStateResourceLimitsValue{}
}

type UpdatePlanRequestPathSelectorCasConditionalStateResourceLimitsResource struct{}

func (UpdatePlanRequestPathSelectorCasConditionalStateResourceLimitsResource) FieldPath() *UpdatePlanRequest_FieldSubPath {
	return &UpdatePlanRequest_FieldSubPath{
		selector: UpdatePlanRequest_FieldPathSelectorCas,
		subPath:  NewUpdatePlanRequestCASFieldPathBuilder().ConditionalState().ResourceLimits().Resource().FieldPath(),
	}
}

func (s UpdatePlanRequestPathSelectorCasConditionalStateResourceLimitsResource) WithValue(value *meta_resource.Reference) *UpdatePlanRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdatePlanRequest_FieldSubPathValue)
}

func (s UpdatePlanRequestPathSelectorCasConditionalStateResourceLimitsResource) WithArrayOfValues(values []*meta_resource.Reference) *UpdatePlanRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdatePlanRequest_FieldSubPathArrayOfValues)
}

type UpdatePlanRequestPathSelectorCasConditionalStateResourceLimitsValue struct{}

func (UpdatePlanRequestPathSelectorCasConditionalStateResourceLimitsValue) FieldPath() *UpdatePlanRequest_FieldSubPath {
	return &UpdatePlanRequest_FieldSubPath{
		selector: UpdatePlanRequest_FieldPathSelectorCas,
		subPath:  NewUpdatePlanRequestCASFieldPathBuilder().ConditionalState().ResourceLimits().Value().FieldPath(),
	}
}

func (s UpdatePlanRequestPathSelectorCasConditionalStateResourceLimitsValue) WithValue(value int64) *UpdatePlanRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdatePlanRequest_FieldSubPathValue)
}

func (s UpdatePlanRequestPathSelectorCasConditionalStateResourceLimitsValue) WithArrayOfValues(values []int64) *UpdatePlanRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdatePlanRequest_FieldSubPathArrayOfValues)
}

type UpdatePlanRequestPathSelectorCasConditionalStateMetadata struct{}

func (UpdatePlanRequestPathSelectorCasConditionalStateMetadata) FieldPath() *UpdatePlanRequest_FieldSubPath {
	return &UpdatePlanRequest_FieldSubPath{
		selector: UpdatePlanRequest_FieldPathSelectorCas,
		subPath:  NewUpdatePlanRequestCASFieldPathBuilder().ConditionalState().Metadata().FieldPath(),
	}
}

func (s UpdatePlanRequestPathSelectorCasConditionalStateMetadata) WithValue(value *ntt_meta.Meta) *UpdatePlanRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdatePlanRequest_FieldSubPathValue)
}

func (s UpdatePlanRequestPathSelectorCasConditionalStateMetadata) WithArrayOfValues(values []*ntt_meta.Meta) *UpdatePlanRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdatePlanRequest_FieldSubPathArrayOfValues)
}

func (UpdatePlanRequestPathSelectorCasConditionalStateMetadata) CreateTime() UpdatePlanRequestPathSelectorCasConditionalStateMetadataCreateTime {
	return UpdatePlanRequestPathSelectorCasConditionalStateMetadataCreateTime{}
}

func (UpdatePlanRequestPathSelectorCasConditionalStateMetadata) UpdateTime() UpdatePlanRequestPathSelectorCasConditionalStateMetadataUpdateTime {
	return UpdatePlanRequestPathSelectorCasConditionalStateMetadataUpdateTime{}
}

func (UpdatePlanRequestPathSelectorCasConditionalStateMetadata) Uuid() UpdatePlanRequestPathSelectorCasConditionalStateMetadataUuid {
	return UpdatePlanRequestPathSelectorCasConditionalStateMetadataUuid{}
}

func (UpdatePlanRequestPathSelectorCasConditionalStateMetadata) Tags() UpdatePlanRequestPathSelectorCasConditionalStateMetadataTags {
	return UpdatePlanRequestPathSelectorCasConditionalStateMetadataTags{}
}

func (UpdatePlanRequestPathSelectorCasConditionalStateMetadata) Labels() UpdatePlanRequestPathSelectorCasConditionalStateMetadataLabels {
	return UpdatePlanRequestPathSelectorCasConditionalStateMetadataLabels{}
}

func (UpdatePlanRequestPathSelectorCasConditionalStateMetadata) Annotations() UpdatePlanRequestPathSelectorCasConditionalStateMetadataAnnotations {
	return UpdatePlanRequestPathSelectorCasConditionalStateMetadataAnnotations{}
}

func (UpdatePlanRequestPathSelectorCasConditionalStateMetadata) Generation() UpdatePlanRequestPathSelectorCasConditionalStateMetadataGeneration {
	return UpdatePlanRequestPathSelectorCasConditionalStateMetadataGeneration{}
}

func (UpdatePlanRequestPathSelectorCasConditionalStateMetadata) ResourceVersion() UpdatePlanRequestPathSelectorCasConditionalStateMetadataResourceVersion {
	return UpdatePlanRequestPathSelectorCasConditionalStateMetadataResourceVersion{}
}

func (UpdatePlanRequestPathSelectorCasConditionalStateMetadata) OwnerReferences() UpdatePlanRequestPathSelectorCasConditionalStateMetadataOwnerReferences {
	return UpdatePlanRequestPathSelectorCasConditionalStateMetadataOwnerReferences{}
}

func (UpdatePlanRequestPathSelectorCasConditionalStateMetadata) Shards() UpdatePlanRequestPathSelectorCasConditionalStateMetadataShards {
	return UpdatePlanRequestPathSelectorCasConditionalStateMetadataShards{}
}

func (UpdatePlanRequestPathSelectorCasConditionalStateMetadata) Syncing() UpdatePlanRequestPathSelectorCasConditionalStateMetadataSyncing {
	return UpdatePlanRequestPathSelectorCasConditionalStateMetadataSyncing{}
}

type UpdatePlanRequestPathSelectorCasConditionalStateMetadataCreateTime struct{}

func (UpdatePlanRequestPathSelectorCasConditionalStateMetadataCreateTime) FieldPath() *UpdatePlanRequest_FieldSubPath {
	return &UpdatePlanRequest_FieldSubPath{
		selector: UpdatePlanRequest_FieldPathSelectorCas,
		subPath:  NewUpdatePlanRequestCASFieldPathBuilder().ConditionalState().Metadata().CreateTime().FieldPath(),
	}
}

func (s UpdatePlanRequestPathSelectorCasConditionalStateMetadataCreateTime) WithValue(value *timestamp.Timestamp) *UpdatePlanRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdatePlanRequest_FieldSubPathValue)
}

func (s UpdatePlanRequestPathSelectorCasConditionalStateMetadataCreateTime) WithArrayOfValues(values []*timestamp.Timestamp) *UpdatePlanRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdatePlanRequest_FieldSubPathArrayOfValues)
}

type UpdatePlanRequestPathSelectorCasConditionalStateMetadataUpdateTime struct{}

func (UpdatePlanRequestPathSelectorCasConditionalStateMetadataUpdateTime) FieldPath() *UpdatePlanRequest_FieldSubPath {
	return &UpdatePlanRequest_FieldSubPath{
		selector: UpdatePlanRequest_FieldPathSelectorCas,
		subPath:  NewUpdatePlanRequestCASFieldPathBuilder().ConditionalState().Metadata().UpdateTime().FieldPath(),
	}
}

func (s UpdatePlanRequestPathSelectorCasConditionalStateMetadataUpdateTime) WithValue(value *timestamp.Timestamp) *UpdatePlanRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdatePlanRequest_FieldSubPathValue)
}

func (s UpdatePlanRequestPathSelectorCasConditionalStateMetadataUpdateTime) WithArrayOfValues(values []*timestamp.Timestamp) *UpdatePlanRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdatePlanRequest_FieldSubPathArrayOfValues)
}

type UpdatePlanRequestPathSelectorCasConditionalStateMetadataUuid struct{}

func (UpdatePlanRequestPathSelectorCasConditionalStateMetadataUuid) FieldPath() *UpdatePlanRequest_FieldSubPath {
	return &UpdatePlanRequest_FieldSubPath{
		selector: UpdatePlanRequest_FieldPathSelectorCas,
		subPath:  NewUpdatePlanRequestCASFieldPathBuilder().ConditionalState().Metadata().Uuid().FieldPath(),
	}
}

func (s UpdatePlanRequestPathSelectorCasConditionalStateMetadataUuid) WithValue(value string) *UpdatePlanRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdatePlanRequest_FieldSubPathValue)
}

func (s UpdatePlanRequestPathSelectorCasConditionalStateMetadataUuid) WithArrayOfValues(values []string) *UpdatePlanRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdatePlanRequest_FieldSubPathArrayOfValues)
}

type UpdatePlanRequestPathSelectorCasConditionalStateMetadataTags struct{}

func (UpdatePlanRequestPathSelectorCasConditionalStateMetadataTags) FieldPath() *UpdatePlanRequest_FieldSubPath {
	return &UpdatePlanRequest_FieldSubPath{
		selector: UpdatePlanRequest_FieldPathSelectorCas,
		subPath:  NewUpdatePlanRequestCASFieldPathBuilder().ConditionalState().Metadata().Tags().FieldPath(),
	}
}

func (s UpdatePlanRequestPathSelectorCasConditionalStateMetadataTags) WithValue(value []string) *UpdatePlanRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdatePlanRequest_FieldSubPathValue)
}

func (s UpdatePlanRequestPathSelectorCasConditionalStateMetadataTags) WithArrayOfValues(values [][]string) *UpdatePlanRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdatePlanRequest_FieldSubPathArrayOfValues)
}

func (s UpdatePlanRequestPathSelectorCasConditionalStateMetadataTags) WithItemValue(value string) *UpdatePlanRequest_FieldSubPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*UpdatePlanRequest_FieldSubPathArrayItemValue)
}

type UpdatePlanRequestPathSelectorCasConditionalStateMetadataLabels struct{}

func (UpdatePlanRequestPathSelectorCasConditionalStateMetadataLabels) FieldPath() *UpdatePlanRequest_FieldSubPath {
	return &UpdatePlanRequest_FieldSubPath{
		selector: UpdatePlanRequest_FieldPathSelectorCas,
		subPath:  NewUpdatePlanRequestCASFieldPathBuilder().ConditionalState().Metadata().Labels().FieldPath(),
	}
}

func (s UpdatePlanRequestPathSelectorCasConditionalStateMetadataLabels) WithValue(value map[string]string) *UpdatePlanRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdatePlanRequest_FieldSubPathValue)
}

func (s UpdatePlanRequestPathSelectorCasConditionalStateMetadataLabels) WithArrayOfValues(values []map[string]string) *UpdatePlanRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdatePlanRequest_FieldSubPathArrayOfValues)
}

func (UpdatePlanRequestPathSelectorCasConditionalStateMetadataLabels) WithKey(key string) UpdatePlanRequestMapPathSelectorCasConditionalStateMetadataLabels {
	return UpdatePlanRequestMapPathSelectorCasConditionalStateMetadataLabels{key: key}
}

type UpdatePlanRequestMapPathSelectorCasConditionalStateMetadataLabels struct {
	key string
}

func (s UpdatePlanRequestMapPathSelectorCasConditionalStateMetadataLabels) FieldPath() *UpdatePlanRequest_FieldSubPath {
	return &UpdatePlanRequest_FieldSubPath{
		selector: UpdatePlanRequest_FieldPathSelectorCas,
		subPath:  NewUpdatePlanRequestCASFieldPathBuilder().ConditionalState().Metadata().Labels().WithKey(s.key).FieldPath(),
	}
}

func (s UpdatePlanRequestMapPathSelectorCasConditionalStateMetadataLabels) WithValue(value string) *UpdatePlanRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdatePlanRequest_FieldSubPathValue)
}

func (s UpdatePlanRequestMapPathSelectorCasConditionalStateMetadataLabels) WithArrayOfValues(values []string) *UpdatePlanRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdatePlanRequest_FieldSubPathArrayOfValues)
}

type UpdatePlanRequestPathSelectorCasConditionalStateMetadataAnnotations struct{}

func (UpdatePlanRequestPathSelectorCasConditionalStateMetadataAnnotations) FieldPath() *UpdatePlanRequest_FieldSubPath {
	return &UpdatePlanRequest_FieldSubPath{
		selector: UpdatePlanRequest_FieldPathSelectorCas,
		subPath:  NewUpdatePlanRequestCASFieldPathBuilder().ConditionalState().Metadata().Annotations().FieldPath(),
	}
}

func (s UpdatePlanRequestPathSelectorCasConditionalStateMetadataAnnotations) WithValue(value map[string]string) *UpdatePlanRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdatePlanRequest_FieldSubPathValue)
}

func (s UpdatePlanRequestPathSelectorCasConditionalStateMetadataAnnotations) WithArrayOfValues(values []map[string]string) *UpdatePlanRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdatePlanRequest_FieldSubPathArrayOfValues)
}

func (UpdatePlanRequestPathSelectorCasConditionalStateMetadataAnnotations) WithKey(key string) UpdatePlanRequestMapPathSelectorCasConditionalStateMetadataAnnotations {
	return UpdatePlanRequestMapPathSelectorCasConditionalStateMetadataAnnotations{key: key}
}

type UpdatePlanRequestMapPathSelectorCasConditionalStateMetadataAnnotations struct {
	key string
}

func (s UpdatePlanRequestMapPathSelectorCasConditionalStateMetadataAnnotations) FieldPath() *UpdatePlanRequest_FieldSubPath {
	return &UpdatePlanRequest_FieldSubPath{
		selector: UpdatePlanRequest_FieldPathSelectorCas,
		subPath:  NewUpdatePlanRequestCASFieldPathBuilder().ConditionalState().Metadata().Annotations().WithKey(s.key).FieldPath(),
	}
}

func (s UpdatePlanRequestMapPathSelectorCasConditionalStateMetadataAnnotations) WithValue(value string) *UpdatePlanRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdatePlanRequest_FieldSubPathValue)
}

func (s UpdatePlanRequestMapPathSelectorCasConditionalStateMetadataAnnotations) WithArrayOfValues(values []string) *UpdatePlanRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdatePlanRequest_FieldSubPathArrayOfValues)
}

type UpdatePlanRequestPathSelectorCasConditionalStateMetadataGeneration struct{}

func (UpdatePlanRequestPathSelectorCasConditionalStateMetadataGeneration) FieldPath() *UpdatePlanRequest_FieldSubPath {
	return &UpdatePlanRequest_FieldSubPath{
		selector: UpdatePlanRequest_FieldPathSelectorCas,
		subPath:  NewUpdatePlanRequestCASFieldPathBuilder().ConditionalState().Metadata().Generation().FieldPath(),
	}
}

func (s UpdatePlanRequestPathSelectorCasConditionalStateMetadataGeneration) WithValue(value int64) *UpdatePlanRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdatePlanRequest_FieldSubPathValue)
}

func (s UpdatePlanRequestPathSelectorCasConditionalStateMetadataGeneration) WithArrayOfValues(values []int64) *UpdatePlanRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdatePlanRequest_FieldSubPathArrayOfValues)
}

type UpdatePlanRequestPathSelectorCasConditionalStateMetadataResourceVersion struct{}

func (UpdatePlanRequestPathSelectorCasConditionalStateMetadataResourceVersion) FieldPath() *UpdatePlanRequest_FieldSubPath {
	return &UpdatePlanRequest_FieldSubPath{
		selector: UpdatePlanRequest_FieldPathSelectorCas,
		subPath:  NewUpdatePlanRequestCASFieldPathBuilder().ConditionalState().Metadata().ResourceVersion().FieldPath(),
	}
}

func (s UpdatePlanRequestPathSelectorCasConditionalStateMetadataResourceVersion) WithValue(value string) *UpdatePlanRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdatePlanRequest_FieldSubPathValue)
}

func (s UpdatePlanRequestPathSelectorCasConditionalStateMetadataResourceVersion) WithArrayOfValues(values []string) *UpdatePlanRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdatePlanRequest_FieldSubPathArrayOfValues)
}

type UpdatePlanRequestPathSelectorCasConditionalStateMetadataOwnerReferences struct{}

func (UpdatePlanRequestPathSelectorCasConditionalStateMetadataOwnerReferences) FieldPath() *UpdatePlanRequest_FieldSubPath {
	return &UpdatePlanRequest_FieldSubPath{
		selector: UpdatePlanRequest_FieldPathSelectorCas,
		subPath:  NewUpdatePlanRequestCASFieldPathBuilder().ConditionalState().Metadata().OwnerReferences().FieldPath(),
	}
}

func (s UpdatePlanRequestPathSelectorCasConditionalStateMetadataOwnerReferences) WithValue(value []*ntt_meta.OwnerReference) *UpdatePlanRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdatePlanRequest_FieldSubPathValue)
}

func (s UpdatePlanRequestPathSelectorCasConditionalStateMetadataOwnerReferences) WithArrayOfValues(values [][]*ntt_meta.OwnerReference) *UpdatePlanRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdatePlanRequest_FieldSubPathArrayOfValues)
}

func (s UpdatePlanRequestPathSelectorCasConditionalStateMetadataOwnerReferences) WithItemValue(value *ntt_meta.OwnerReference) *UpdatePlanRequest_FieldSubPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*UpdatePlanRequest_FieldSubPathArrayItemValue)
}

func (UpdatePlanRequestPathSelectorCasConditionalStateMetadataOwnerReferences) ApiVersion() UpdatePlanRequestPathSelectorCasConditionalStateMetadataOwnerReferencesApiVersion {
	return UpdatePlanRequestPathSelectorCasConditionalStateMetadataOwnerReferencesApiVersion{}
}

func (UpdatePlanRequestPathSelectorCasConditionalStateMetadataOwnerReferences) Kind() UpdatePlanRequestPathSelectorCasConditionalStateMetadataOwnerReferencesKind {
	return UpdatePlanRequestPathSelectorCasConditionalStateMetadataOwnerReferencesKind{}
}

func (UpdatePlanRequestPathSelectorCasConditionalStateMetadataOwnerReferences) Name() UpdatePlanRequestPathSelectorCasConditionalStateMetadataOwnerReferencesName {
	return UpdatePlanRequestPathSelectorCasConditionalStateMetadataOwnerReferencesName{}
}

func (UpdatePlanRequestPathSelectorCasConditionalStateMetadataOwnerReferences) Uid() UpdatePlanRequestPathSelectorCasConditionalStateMetadataOwnerReferencesUid {
	return UpdatePlanRequestPathSelectorCasConditionalStateMetadataOwnerReferencesUid{}
}

func (UpdatePlanRequestPathSelectorCasConditionalStateMetadataOwnerReferences) Controller() UpdatePlanRequestPathSelectorCasConditionalStateMetadataOwnerReferencesController {
	return UpdatePlanRequestPathSelectorCasConditionalStateMetadataOwnerReferencesController{}
}

func (UpdatePlanRequestPathSelectorCasConditionalStateMetadataOwnerReferences) BlockOwnerDeletion() UpdatePlanRequestPathSelectorCasConditionalStateMetadataOwnerReferencesBlockOwnerDeletion {
	return UpdatePlanRequestPathSelectorCasConditionalStateMetadataOwnerReferencesBlockOwnerDeletion{}
}

type UpdatePlanRequestPathSelectorCasConditionalStateMetadataOwnerReferencesApiVersion struct{}

func (UpdatePlanRequestPathSelectorCasConditionalStateMetadataOwnerReferencesApiVersion) FieldPath() *UpdatePlanRequest_FieldSubPath {
	return &UpdatePlanRequest_FieldSubPath{
		selector: UpdatePlanRequest_FieldPathSelectorCas,
		subPath:  NewUpdatePlanRequestCASFieldPathBuilder().ConditionalState().Metadata().OwnerReferences().ApiVersion().FieldPath(),
	}
}

func (s UpdatePlanRequestPathSelectorCasConditionalStateMetadataOwnerReferencesApiVersion) WithValue(value string) *UpdatePlanRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdatePlanRequest_FieldSubPathValue)
}

func (s UpdatePlanRequestPathSelectorCasConditionalStateMetadataOwnerReferencesApiVersion) WithArrayOfValues(values []string) *UpdatePlanRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdatePlanRequest_FieldSubPathArrayOfValues)
}

type UpdatePlanRequestPathSelectorCasConditionalStateMetadataOwnerReferencesKind struct{}

func (UpdatePlanRequestPathSelectorCasConditionalStateMetadataOwnerReferencesKind) FieldPath() *UpdatePlanRequest_FieldSubPath {
	return &UpdatePlanRequest_FieldSubPath{
		selector: UpdatePlanRequest_FieldPathSelectorCas,
		subPath:  NewUpdatePlanRequestCASFieldPathBuilder().ConditionalState().Metadata().OwnerReferences().Kind().FieldPath(),
	}
}

func (s UpdatePlanRequestPathSelectorCasConditionalStateMetadataOwnerReferencesKind) WithValue(value string) *UpdatePlanRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdatePlanRequest_FieldSubPathValue)
}

func (s UpdatePlanRequestPathSelectorCasConditionalStateMetadataOwnerReferencesKind) WithArrayOfValues(values []string) *UpdatePlanRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdatePlanRequest_FieldSubPathArrayOfValues)
}

type UpdatePlanRequestPathSelectorCasConditionalStateMetadataOwnerReferencesName struct{}

func (UpdatePlanRequestPathSelectorCasConditionalStateMetadataOwnerReferencesName) FieldPath() *UpdatePlanRequest_FieldSubPath {
	return &UpdatePlanRequest_FieldSubPath{
		selector: UpdatePlanRequest_FieldPathSelectorCas,
		subPath:  NewUpdatePlanRequestCASFieldPathBuilder().ConditionalState().Metadata().OwnerReferences().Name().FieldPath(),
	}
}

func (s UpdatePlanRequestPathSelectorCasConditionalStateMetadataOwnerReferencesName) WithValue(value string) *UpdatePlanRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdatePlanRequest_FieldSubPathValue)
}

func (s UpdatePlanRequestPathSelectorCasConditionalStateMetadataOwnerReferencesName) WithArrayOfValues(values []string) *UpdatePlanRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdatePlanRequest_FieldSubPathArrayOfValues)
}

type UpdatePlanRequestPathSelectorCasConditionalStateMetadataOwnerReferencesUid struct{}

func (UpdatePlanRequestPathSelectorCasConditionalStateMetadataOwnerReferencesUid) FieldPath() *UpdatePlanRequest_FieldSubPath {
	return &UpdatePlanRequest_FieldSubPath{
		selector: UpdatePlanRequest_FieldPathSelectorCas,
		subPath:  NewUpdatePlanRequestCASFieldPathBuilder().ConditionalState().Metadata().OwnerReferences().Uid().FieldPath(),
	}
}

func (s UpdatePlanRequestPathSelectorCasConditionalStateMetadataOwnerReferencesUid) WithValue(value string) *UpdatePlanRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdatePlanRequest_FieldSubPathValue)
}

func (s UpdatePlanRequestPathSelectorCasConditionalStateMetadataOwnerReferencesUid) WithArrayOfValues(values []string) *UpdatePlanRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdatePlanRequest_FieldSubPathArrayOfValues)
}

type UpdatePlanRequestPathSelectorCasConditionalStateMetadataOwnerReferencesController struct{}

func (UpdatePlanRequestPathSelectorCasConditionalStateMetadataOwnerReferencesController) FieldPath() *UpdatePlanRequest_FieldSubPath {
	return &UpdatePlanRequest_FieldSubPath{
		selector: UpdatePlanRequest_FieldPathSelectorCas,
		subPath:  NewUpdatePlanRequestCASFieldPathBuilder().ConditionalState().Metadata().OwnerReferences().Controller().FieldPath(),
	}
}

func (s UpdatePlanRequestPathSelectorCasConditionalStateMetadataOwnerReferencesController) WithValue(value bool) *UpdatePlanRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdatePlanRequest_FieldSubPathValue)
}

func (s UpdatePlanRequestPathSelectorCasConditionalStateMetadataOwnerReferencesController) WithArrayOfValues(values []bool) *UpdatePlanRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdatePlanRequest_FieldSubPathArrayOfValues)
}

type UpdatePlanRequestPathSelectorCasConditionalStateMetadataOwnerReferencesBlockOwnerDeletion struct{}

func (UpdatePlanRequestPathSelectorCasConditionalStateMetadataOwnerReferencesBlockOwnerDeletion) FieldPath() *UpdatePlanRequest_FieldSubPath {
	return &UpdatePlanRequest_FieldSubPath{
		selector: UpdatePlanRequest_FieldPathSelectorCas,
		subPath:  NewUpdatePlanRequestCASFieldPathBuilder().ConditionalState().Metadata().OwnerReferences().BlockOwnerDeletion().FieldPath(),
	}
}

func (s UpdatePlanRequestPathSelectorCasConditionalStateMetadataOwnerReferencesBlockOwnerDeletion) WithValue(value bool) *UpdatePlanRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdatePlanRequest_FieldSubPathValue)
}

func (s UpdatePlanRequestPathSelectorCasConditionalStateMetadataOwnerReferencesBlockOwnerDeletion) WithArrayOfValues(values []bool) *UpdatePlanRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdatePlanRequest_FieldSubPathArrayOfValues)
}

type UpdatePlanRequestPathSelectorCasConditionalStateMetadataShards struct{}

func (UpdatePlanRequestPathSelectorCasConditionalStateMetadataShards) FieldPath() *UpdatePlanRequest_FieldSubPath {
	return &UpdatePlanRequest_FieldSubPath{
		selector: UpdatePlanRequest_FieldPathSelectorCas,
		subPath:  NewUpdatePlanRequestCASFieldPathBuilder().ConditionalState().Metadata().Shards().FieldPath(),
	}
}

func (s UpdatePlanRequestPathSelectorCasConditionalStateMetadataShards) WithValue(value map[string]int64) *UpdatePlanRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdatePlanRequest_FieldSubPathValue)
}

func (s UpdatePlanRequestPathSelectorCasConditionalStateMetadataShards) WithArrayOfValues(values []map[string]int64) *UpdatePlanRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdatePlanRequest_FieldSubPathArrayOfValues)
}

func (UpdatePlanRequestPathSelectorCasConditionalStateMetadataShards) WithKey(key string) UpdatePlanRequestMapPathSelectorCasConditionalStateMetadataShards {
	return UpdatePlanRequestMapPathSelectorCasConditionalStateMetadataShards{key: key}
}

type UpdatePlanRequestMapPathSelectorCasConditionalStateMetadataShards struct {
	key string
}

func (s UpdatePlanRequestMapPathSelectorCasConditionalStateMetadataShards) FieldPath() *UpdatePlanRequest_FieldSubPath {
	return &UpdatePlanRequest_FieldSubPath{
		selector: UpdatePlanRequest_FieldPathSelectorCas,
		subPath:  NewUpdatePlanRequestCASFieldPathBuilder().ConditionalState().Metadata().Shards().WithKey(s.key).FieldPath(),
	}
}

func (s UpdatePlanRequestMapPathSelectorCasConditionalStateMetadataShards) WithValue(value int64) *UpdatePlanRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdatePlanRequest_FieldSubPathValue)
}

func (s UpdatePlanRequestMapPathSelectorCasConditionalStateMetadataShards) WithArrayOfValues(values []int64) *UpdatePlanRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdatePlanRequest_FieldSubPathArrayOfValues)
}

type UpdatePlanRequestPathSelectorCasConditionalStateMetadataSyncing struct{}

func (UpdatePlanRequestPathSelectorCasConditionalStateMetadataSyncing) FieldPath() *UpdatePlanRequest_FieldSubPath {
	return &UpdatePlanRequest_FieldSubPath{
		selector: UpdatePlanRequest_FieldPathSelectorCas,
		subPath:  NewUpdatePlanRequestCASFieldPathBuilder().ConditionalState().Metadata().Syncing().FieldPath(),
	}
}

func (s UpdatePlanRequestPathSelectorCasConditionalStateMetadataSyncing) WithValue(value *ntt_meta.SyncingMeta) *UpdatePlanRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdatePlanRequest_FieldSubPathValue)
}

func (s UpdatePlanRequestPathSelectorCasConditionalStateMetadataSyncing) WithArrayOfValues(values []*ntt_meta.SyncingMeta) *UpdatePlanRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdatePlanRequest_FieldSubPathArrayOfValues)
}

func (UpdatePlanRequestPathSelectorCasConditionalStateMetadataSyncing) OwningRegion() UpdatePlanRequestPathSelectorCasConditionalStateMetadataSyncingOwningRegion {
	return UpdatePlanRequestPathSelectorCasConditionalStateMetadataSyncingOwningRegion{}
}

func (UpdatePlanRequestPathSelectorCasConditionalStateMetadataSyncing) Regions() UpdatePlanRequestPathSelectorCasConditionalStateMetadataSyncingRegions {
	return UpdatePlanRequestPathSelectorCasConditionalStateMetadataSyncingRegions{}
}

type UpdatePlanRequestPathSelectorCasConditionalStateMetadataSyncingOwningRegion struct{}

func (UpdatePlanRequestPathSelectorCasConditionalStateMetadataSyncingOwningRegion) FieldPath() *UpdatePlanRequest_FieldSubPath {
	return &UpdatePlanRequest_FieldSubPath{
		selector: UpdatePlanRequest_FieldPathSelectorCas,
		subPath:  NewUpdatePlanRequestCASFieldPathBuilder().ConditionalState().Metadata().Syncing().OwningRegion().FieldPath(),
	}
}

func (s UpdatePlanRequestPathSelectorCasConditionalStateMetadataSyncingOwningRegion) WithValue(value string) *UpdatePlanRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdatePlanRequest_FieldSubPathValue)
}

func (s UpdatePlanRequestPathSelectorCasConditionalStateMetadataSyncingOwningRegion) WithArrayOfValues(values []string) *UpdatePlanRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdatePlanRequest_FieldSubPathArrayOfValues)
}

type UpdatePlanRequestPathSelectorCasConditionalStateMetadataSyncingRegions struct{}

func (UpdatePlanRequestPathSelectorCasConditionalStateMetadataSyncingRegions) FieldPath() *UpdatePlanRequest_FieldSubPath {
	return &UpdatePlanRequest_FieldSubPath{
		selector: UpdatePlanRequest_FieldPathSelectorCas,
		subPath:  NewUpdatePlanRequestCASFieldPathBuilder().ConditionalState().Metadata().Syncing().Regions().FieldPath(),
	}
}

func (s UpdatePlanRequestPathSelectorCasConditionalStateMetadataSyncingRegions) WithValue(value []string) *UpdatePlanRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdatePlanRequest_FieldSubPathValue)
}

func (s UpdatePlanRequestPathSelectorCasConditionalStateMetadataSyncingRegions) WithArrayOfValues(values [][]string) *UpdatePlanRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdatePlanRequest_FieldSubPathArrayOfValues)
}

func (s UpdatePlanRequestPathSelectorCasConditionalStateMetadataSyncingRegions) WithItemValue(value string) *UpdatePlanRequest_FieldSubPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*UpdatePlanRequest_FieldSubPathArrayItemValue)
}

type UpdatePlanRequestPathSelectorCasFieldMask struct{}

func (UpdatePlanRequestPathSelectorCasFieldMask) FieldPath() *UpdatePlanRequest_FieldSubPath {
	return &UpdatePlanRequest_FieldSubPath{
		selector: UpdatePlanRequest_FieldPathSelectorCas,
		subPath:  NewUpdatePlanRequestCASFieldPathBuilder().FieldMask().FieldPath(),
	}
}

func (s UpdatePlanRequestPathSelectorCasFieldMask) WithValue(value *plan.Plan_FieldMask) *UpdatePlanRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdatePlanRequest_FieldSubPathValue)
}

func (s UpdatePlanRequestPathSelectorCasFieldMask) WithArrayOfValues(values []*plan.Plan_FieldMask) *UpdatePlanRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdatePlanRequest_FieldSubPathArrayOfValues)
}

type UpdatePlanRequestCASFieldPathBuilder struct{}

func NewUpdatePlanRequestCASFieldPathBuilder() UpdatePlanRequestCASFieldPathBuilder {
	return UpdatePlanRequestCASFieldPathBuilder{}
}
func (UpdatePlanRequestCASFieldPathBuilder) ConditionalState() UpdatePlanRequest_CASPathSelectorConditionalState {
	return UpdatePlanRequest_CASPathSelectorConditionalState{}
}
func (UpdatePlanRequestCASFieldPathBuilder) FieldMask() UpdatePlanRequest_CASPathSelectorFieldMask {
	return UpdatePlanRequest_CASPathSelectorFieldMask{}
}

type UpdatePlanRequest_CASPathSelectorConditionalState struct{}

func (UpdatePlanRequest_CASPathSelectorConditionalState) FieldPath() *UpdatePlanRequestCAS_FieldTerminalPath {
	return &UpdatePlanRequestCAS_FieldTerminalPath{selector: UpdatePlanRequestCAS_FieldPathSelectorConditionalState}
}

func (s UpdatePlanRequest_CASPathSelectorConditionalState) WithValue(value *plan.Plan) *UpdatePlanRequestCAS_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*UpdatePlanRequestCAS_FieldTerminalPathValue)
}

func (s UpdatePlanRequest_CASPathSelectorConditionalState) WithArrayOfValues(values []*plan.Plan) *UpdatePlanRequestCAS_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdatePlanRequestCAS_FieldTerminalPathArrayOfValues)
}

func (UpdatePlanRequest_CASPathSelectorConditionalState) WithSubPath(subPath plan.Plan_FieldPath) *UpdatePlanRequestCAS_FieldSubPath {
	return &UpdatePlanRequestCAS_FieldSubPath{selector: UpdatePlanRequestCAS_FieldPathSelectorConditionalState, subPath: subPath}
}

func (s UpdatePlanRequest_CASPathSelectorConditionalState) WithSubValue(subPathValue plan.Plan_FieldPathValue) *UpdatePlanRequestCAS_FieldSubPathValue {
	return &UpdatePlanRequestCAS_FieldSubPathValue{UpdatePlanRequestCAS_FieldPath: s.WithSubPath(subPathValue), subPathValue: subPathValue}
}

func (s UpdatePlanRequest_CASPathSelectorConditionalState) WithSubArrayOfValues(subPathArrayOfValues plan.Plan_FieldPathArrayOfValues) *UpdatePlanRequestCAS_FieldSubPathArrayOfValues {
	return &UpdatePlanRequestCAS_FieldSubPathArrayOfValues{UpdatePlanRequestCAS_FieldPath: s.WithSubPath(subPathArrayOfValues), subPathArrayOfValues: subPathArrayOfValues}
}

func (s UpdatePlanRequest_CASPathSelectorConditionalState) WithSubArrayItemValue(subPathArrayItemValue plan.Plan_FieldPathArrayItemValue) *UpdatePlanRequestCAS_FieldSubPathArrayItemValue {
	return &UpdatePlanRequestCAS_FieldSubPathArrayItemValue{UpdatePlanRequestCAS_FieldPath: s.WithSubPath(subPathArrayItemValue), subPathItemValue: subPathArrayItemValue}
}

func (UpdatePlanRequest_CASPathSelectorConditionalState) Name() UpdatePlanRequest_CASPathSelectorConditionalStateName {
	return UpdatePlanRequest_CASPathSelectorConditionalStateName{}
}

func (UpdatePlanRequest_CASPathSelectorConditionalState) DisplayName() UpdatePlanRequest_CASPathSelectorConditionalStateDisplayName {
	return UpdatePlanRequest_CASPathSelectorConditionalStateDisplayName{}
}

func (UpdatePlanRequest_CASPathSelectorConditionalState) Service() UpdatePlanRequest_CASPathSelectorConditionalStateService {
	return UpdatePlanRequest_CASPathSelectorConditionalStateService{}
}

func (UpdatePlanRequest_CASPathSelectorConditionalState) ResourceLimits() UpdatePlanRequest_CASPathSelectorConditionalStateResourceLimits {
	return UpdatePlanRequest_CASPathSelectorConditionalStateResourceLimits{}
}

func (UpdatePlanRequest_CASPathSelectorConditionalState) Metadata() UpdatePlanRequest_CASPathSelectorConditionalStateMetadata {
	return UpdatePlanRequest_CASPathSelectorConditionalStateMetadata{}
}

type UpdatePlanRequest_CASPathSelectorConditionalStateName struct{}

func (UpdatePlanRequest_CASPathSelectorConditionalStateName) FieldPath() *UpdatePlanRequestCAS_FieldSubPath {
	return &UpdatePlanRequestCAS_FieldSubPath{
		selector: UpdatePlanRequestCAS_FieldPathSelectorConditionalState,
		subPath:  plan.NewPlanFieldPathBuilder().Name().FieldPath(),
	}
}

func (s UpdatePlanRequest_CASPathSelectorConditionalStateName) WithValue(value *plan.Name) *UpdatePlanRequestCAS_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdatePlanRequestCAS_FieldSubPathValue)
}

func (s UpdatePlanRequest_CASPathSelectorConditionalStateName) WithArrayOfValues(values []*plan.Name) *UpdatePlanRequestCAS_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdatePlanRequestCAS_FieldSubPathArrayOfValues)
}

type UpdatePlanRequest_CASPathSelectorConditionalStateDisplayName struct{}

func (UpdatePlanRequest_CASPathSelectorConditionalStateDisplayName) FieldPath() *UpdatePlanRequestCAS_FieldSubPath {
	return &UpdatePlanRequestCAS_FieldSubPath{
		selector: UpdatePlanRequestCAS_FieldPathSelectorConditionalState,
		subPath:  plan.NewPlanFieldPathBuilder().DisplayName().FieldPath(),
	}
}

func (s UpdatePlanRequest_CASPathSelectorConditionalStateDisplayName) WithValue(value string) *UpdatePlanRequestCAS_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdatePlanRequestCAS_FieldSubPathValue)
}

func (s UpdatePlanRequest_CASPathSelectorConditionalStateDisplayName) WithArrayOfValues(values []string) *UpdatePlanRequestCAS_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdatePlanRequestCAS_FieldSubPathArrayOfValues)
}

type UpdatePlanRequest_CASPathSelectorConditionalStateService struct{}

func (UpdatePlanRequest_CASPathSelectorConditionalStateService) FieldPath() *UpdatePlanRequestCAS_FieldSubPath {
	return &UpdatePlanRequestCAS_FieldSubPath{
		selector: UpdatePlanRequestCAS_FieldPathSelectorConditionalState,
		subPath:  plan.NewPlanFieldPathBuilder().Service().FieldPath(),
	}
}

func (s UpdatePlanRequest_CASPathSelectorConditionalStateService) WithValue(value *meta_service.Reference) *UpdatePlanRequestCAS_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdatePlanRequestCAS_FieldSubPathValue)
}

func (s UpdatePlanRequest_CASPathSelectorConditionalStateService) WithArrayOfValues(values []*meta_service.Reference) *UpdatePlanRequestCAS_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdatePlanRequestCAS_FieldSubPathArrayOfValues)
}

type UpdatePlanRequest_CASPathSelectorConditionalStateResourceLimits struct{}

func (UpdatePlanRequest_CASPathSelectorConditionalStateResourceLimits) FieldPath() *UpdatePlanRequestCAS_FieldSubPath {
	return &UpdatePlanRequestCAS_FieldSubPath{
		selector: UpdatePlanRequestCAS_FieldPathSelectorConditionalState,
		subPath:  plan.NewPlanFieldPathBuilder().ResourceLimits().FieldPath(),
	}
}

func (s UpdatePlanRequest_CASPathSelectorConditionalStateResourceLimits) WithValue(value []*common.Allowance) *UpdatePlanRequestCAS_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdatePlanRequestCAS_FieldSubPathValue)
}

func (s UpdatePlanRequest_CASPathSelectorConditionalStateResourceLimits) WithArrayOfValues(values [][]*common.Allowance) *UpdatePlanRequestCAS_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdatePlanRequestCAS_FieldSubPathArrayOfValues)
}

func (s UpdatePlanRequest_CASPathSelectorConditionalStateResourceLimits) WithItemValue(value *common.Allowance) *UpdatePlanRequestCAS_FieldSubPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*UpdatePlanRequestCAS_FieldSubPathArrayItemValue)
}

func (UpdatePlanRequest_CASPathSelectorConditionalStateResourceLimits) Resource() UpdatePlanRequest_CASPathSelectorConditionalStateResourceLimitsResource {
	return UpdatePlanRequest_CASPathSelectorConditionalStateResourceLimitsResource{}
}

func (UpdatePlanRequest_CASPathSelectorConditionalStateResourceLimits) Value() UpdatePlanRequest_CASPathSelectorConditionalStateResourceLimitsValue {
	return UpdatePlanRequest_CASPathSelectorConditionalStateResourceLimitsValue{}
}

type UpdatePlanRequest_CASPathSelectorConditionalStateResourceLimitsResource struct{}

func (UpdatePlanRequest_CASPathSelectorConditionalStateResourceLimitsResource) FieldPath() *UpdatePlanRequestCAS_FieldSubPath {
	return &UpdatePlanRequestCAS_FieldSubPath{
		selector: UpdatePlanRequestCAS_FieldPathSelectorConditionalState,
		subPath:  plan.NewPlanFieldPathBuilder().ResourceLimits().Resource().FieldPath(),
	}
}

func (s UpdatePlanRequest_CASPathSelectorConditionalStateResourceLimitsResource) WithValue(value *meta_resource.Reference) *UpdatePlanRequestCAS_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdatePlanRequestCAS_FieldSubPathValue)
}

func (s UpdatePlanRequest_CASPathSelectorConditionalStateResourceLimitsResource) WithArrayOfValues(values []*meta_resource.Reference) *UpdatePlanRequestCAS_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdatePlanRequestCAS_FieldSubPathArrayOfValues)
}

type UpdatePlanRequest_CASPathSelectorConditionalStateResourceLimitsValue struct{}

func (UpdatePlanRequest_CASPathSelectorConditionalStateResourceLimitsValue) FieldPath() *UpdatePlanRequestCAS_FieldSubPath {
	return &UpdatePlanRequestCAS_FieldSubPath{
		selector: UpdatePlanRequestCAS_FieldPathSelectorConditionalState,
		subPath:  plan.NewPlanFieldPathBuilder().ResourceLimits().Value().FieldPath(),
	}
}

func (s UpdatePlanRequest_CASPathSelectorConditionalStateResourceLimitsValue) WithValue(value int64) *UpdatePlanRequestCAS_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdatePlanRequestCAS_FieldSubPathValue)
}

func (s UpdatePlanRequest_CASPathSelectorConditionalStateResourceLimitsValue) WithArrayOfValues(values []int64) *UpdatePlanRequestCAS_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdatePlanRequestCAS_FieldSubPathArrayOfValues)
}

type UpdatePlanRequest_CASPathSelectorConditionalStateMetadata struct{}

func (UpdatePlanRequest_CASPathSelectorConditionalStateMetadata) FieldPath() *UpdatePlanRequestCAS_FieldSubPath {
	return &UpdatePlanRequestCAS_FieldSubPath{
		selector: UpdatePlanRequestCAS_FieldPathSelectorConditionalState,
		subPath:  plan.NewPlanFieldPathBuilder().Metadata().FieldPath(),
	}
}

func (s UpdatePlanRequest_CASPathSelectorConditionalStateMetadata) WithValue(value *ntt_meta.Meta) *UpdatePlanRequestCAS_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdatePlanRequestCAS_FieldSubPathValue)
}

func (s UpdatePlanRequest_CASPathSelectorConditionalStateMetadata) WithArrayOfValues(values []*ntt_meta.Meta) *UpdatePlanRequestCAS_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdatePlanRequestCAS_FieldSubPathArrayOfValues)
}

func (UpdatePlanRequest_CASPathSelectorConditionalStateMetadata) CreateTime() UpdatePlanRequest_CASPathSelectorConditionalStateMetadataCreateTime {
	return UpdatePlanRequest_CASPathSelectorConditionalStateMetadataCreateTime{}
}

func (UpdatePlanRequest_CASPathSelectorConditionalStateMetadata) UpdateTime() UpdatePlanRequest_CASPathSelectorConditionalStateMetadataUpdateTime {
	return UpdatePlanRequest_CASPathSelectorConditionalStateMetadataUpdateTime{}
}

func (UpdatePlanRequest_CASPathSelectorConditionalStateMetadata) Uuid() UpdatePlanRequest_CASPathSelectorConditionalStateMetadataUuid {
	return UpdatePlanRequest_CASPathSelectorConditionalStateMetadataUuid{}
}

func (UpdatePlanRequest_CASPathSelectorConditionalStateMetadata) Tags() UpdatePlanRequest_CASPathSelectorConditionalStateMetadataTags {
	return UpdatePlanRequest_CASPathSelectorConditionalStateMetadataTags{}
}

func (UpdatePlanRequest_CASPathSelectorConditionalStateMetadata) Labels() UpdatePlanRequest_CASPathSelectorConditionalStateMetadataLabels {
	return UpdatePlanRequest_CASPathSelectorConditionalStateMetadataLabels{}
}

func (UpdatePlanRequest_CASPathSelectorConditionalStateMetadata) Annotations() UpdatePlanRequest_CASPathSelectorConditionalStateMetadataAnnotations {
	return UpdatePlanRequest_CASPathSelectorConditionalStateMetadataAnnotations{}
}

func (UpdatePlanRequest_CASPathSelectorConditionalStateMetadata) Generation() UpdatePlanRequest_CASPathSelectorConditionalStateMetadataGeneration {
	return UpdatePlanRequest_CASPathSelectorConditionalStateMetadataGeneration{}
}

func (UpdatePlanRequest_CASPathSelectorConditionalStateMetadata) ResourceVersion() UpdatePlanRequest_CASPathSelectorConditionalStateMetadataResourceVersion {
	return UpdatePlanRequest_CASPathSelectorConditionalStateMetadataResourceVersion{}
}

func (UpdatePlanRequest_CASPathSelectorConditionalStateMetadata) OwnerReferences() UpdatePlanRequest_CASPathSelectorConditionalStateMetadataOwnerReferences {
	return UpdatePlanRequest_CASPathSelectorConditionalStateMetadataOwnerReferences{}
}

func (UpdatePlanRequest_CASPathSelectorConditionalStateMetadata) Shards() UpdatePlanRequest_CASPathSelectorConditionalStateMetadataShards {
	return UpdatePlanRequest_CASPathSelectorConditionalStateMetadataShards{}
}

func (UpdatePlanRequest_CASPathSelectorConditionalStateMetadata) Syncing() UpdatePlanRequest_CASPathSelectorConditionalStateMetadataSyncing {
	return UpdatePlanRequest_CASPathSelectorConditionalStateMetadataSyncing{}
}

type UpdatePlanRequest_CASPathSelectorConditionalStateMetadataCreateTime struct{}

func (UpdatePlanRequest_CASPathSelectorConditionalStateMetadataCreateTime) FieldPath() *UpdatePlanRequestCAS_FieldSubPath {
	return &UpdatePlanRequestCAS_FieldSubPath{
		selector: UpdatePlanRequestCAS_FieldPathSelectorConditionalState,
		subPath:  plan.NewPlanFieldPathBuilder().Metadata().CreateTime().FieldPath(),
	}
}

func (s UpdatePlanRequest_CASPathSelectorConditionalStateMetadataCreateTime) WithValue(value *timestamp.Timestamp) *UpdatePlanRequestCAS_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdatePlanRequestCAS_FieldSubPathValue)
}

func (s UpdatePlanRequest_CASPathSelectorConditionalStateMetadataCreateTime) WithArrayOfValues(values []*timestamp.Timestamp) *UpdatePlanRequestCAS_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdatePlanRequestCAS_FieldSubPathArrayOfValues)
}

type UpdatePlanRequest_CASPathSelectorConditionalStateMetadataUpdateTime struct{}

func (UpdatePlanRequest_CASPathSelectorConditionalStateMetadataUpdateTime) FieldPath() *UpdatePlanRequestCAS_FieldSubPath {
	return &UpdatePlanRequestCAS_FieldSubPath{
		selector: UpdatePlanRequestCAS_FieldPathSelectorConditionalState,
		subPath:  plan.NewPlanFieldPathBuilder().Metadata().UpdateTime().FieldPath(),
	}
}

func (s UpdatePlanRequest_CASPathSelectorConditionalStateMetadataUpdateTime) WithValue(value *timestamp.Timestamp) *UpdatePlanRequestCAS_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdatePlanRequestCAS_FieldSubPathValue)
}

func (s UpdatePlanRequest_CASPathSelectorConditionalStateMetadataUpdateTime) WithArrayOfValues(values []*timestamp.Timestamp) *UpdatePlanRequestCAS_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdatePlanRequestCAS_FieldSubPathArrayOfValues)
}

type UpdatePlanRequest_CASPathSelectorConditionalStateMetadataUuid struct{}

func (UpdatePlanRequest_CASPathSelectorConditionalStateMetadataUuid) FieldPath() *UpdatePlanRequestCAS_FieldSubPath {
	return &UpdatePlanRequestCAS_FieldSubPath{
		selector: UpdatePlanRequestCAS_FieldPathSelectorConditionalState,
		subPath:  plan.NewPlanFieldPathBuilder().Metadata().Uuid().FieldPath(),
	}
}

func (s UpdatePlanRequest_CASPathSelectorConditionalStateMetadataUuid) WithValue(value string) *UpdatePlanRequestCAS_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdatePlanRequestCAS_FieldSubPathValue)
}

func (s UpdatePlanRequest_CASPathSelectorConditionalStateMetadataUuid) WithArrayOfValues(values []string) *UpdatePlanRequestCAS_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdatePlanRequestCAS_FieldSubPathArrayOfValues)
}

type UpdatePlanRequest_CASPathSelectorConditionalStateMetadataTags struct{}

func (UpdatePlanRequest_CASPathSelectorConditionalStateMetadataTags) FieldPath() *UpdatePlanRequestCAS_FieldSubPath {
	return &UpdatePlanRequestCAS_FieldSubPath{
		selector: UpdatePlanRequestCAS_FieldPathSelectorConditionalState,
		subPath:  plan.NewPlanFieldPathBuilder().Metadata().Tags().FieldPath(),
	}
}

func (s UpdatePlanRequest_CASPathSelectorConditionalStateMetadataTags) WithValue(value []string) *UpdatePlanRequestCAS_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdatePlanRequestCAS_FieldSubPathValue)
}

func (s UpdatePlanRequest_CASPathSelectorConditionalStateMetadataTags) WithArrayOfValues(values [][]string) *UpdatePlanRequestCAS_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdatePlanRequestCAS_FieldSubPathArrayOfValues)
}

func (s UpdatePlanRequest_CASPathSelectorConditionalStateMetadataTags) WithItemValue(value string) *UpdatePlanRequestCAS_FieldSubPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*UpdatePlanRequestCAS_FieldSubPathArrayItemValue)
}

type UpdatePlanRequest_CASPathSelectorConditionalStateMetadataLabels struct{}

func (UpdatePlanRequest_CASPathSelectorConditionalStateMetadataLabels) FieldPath() *UpdatePlanRequestCAS_FieldSubPath {
	return &UpdatePlanRequestCAS_FieldSubPath{
		selector: UpdatePlanRequestCAS_FieldPathSelectorConditionalState,
		subPath:  plan.NewPlanFieldPathBuilder().Metadata().Labels().FieldPath(),
	}
}

func (s UpdatePlanRequest_CASPathSelectorConditionalStateMetadataLabels) WithValue(value map[string]string) *UpdatePlanRequestCAS_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdatePlanRequestCAS_FieldSubPathValue)
}

func (s UpdatePlanRequest_CASPathSelectorConditionalStateMetadataLabels) WithArrayOfValues(values []map[string]string) *UpdatePlanRequestCAS_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdatePlanRequestCAS_FieldSubPathArrayOfValues)
}

func (UpdatePlanRequest_CASPathSelectorConditionalStateMetadataLabels) WithKey(key string) UpdatePlanRequest_CASMapPathSelectorConditionalStateMetadataLabels {
	return UpdatePlanRequest_CASMapPathSelectorConditionalStateMetadataLabels{key: key}
}

type UpdatePlanRequest_CASMapPathSelectorConditionalStateMetadataLabels struct {
	key string
}

func (s UpdatePlanRequest_CASMapPathSelectorConditionalStateMetadataLabels) FieldPath() *UpdatePlanRequestCAS_FieldSubPath {
	return &UpdatePlanRequestCAS_FieldSubPath{
		selector: UpdatePlanRequestCAS_FieldPathSelectorConditionalState,
		subPath:  plan.NewPlanFieldPathBuilder().Metadata().Labels().WithKey(s.key).FieldPath(),
	}
}

func (s UpdatePlanRequest_CASMapPathSelectorConditionalStateMetadataLabels) WithValue(value string) *UpdatePlanRequestCAS_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdatePlanRequestCAS_FieldSubPathValue)
}

func (s UpdatePlanRequest_CASMapPathSelectorConditionalStateMetadataLabels) WithArrayOfValues(values []string) *UpdatePlanRequestCAS_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdatePlanRequestCAS_FieldSubPathArrayOfValues)
}

type UpdatePlanRequest_CASPathSelectorConditionalStateMetadataAnnotations struct{}

func (UpdatePlanRequest_CASPathSelectorConditionalStateMetadataAnnotations) FieldPath() *UpdatePlanRequestCAS_FieldSubPath {
	return &UpdatePlanRequestCAS_FieldSubPath{
		selector: UpdatePlanRequestCAS_FieldPathSelectorConditionalState,
		subPath:  plan.NewPlanFieldPathBuilder().Metadata().Annotations().FieldPath(),
	}
}

func (s UpdatePlanRequest_CASPathSelectorConditionalStateMetadataAnnotations) WithValue(value map[string]string) *UpdatePlanRequestCAS_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdatePlanRequestCAS_FieldSubPathValue)
}

func (s UpdatePlanRequest_CASPathSelectorConditionalStateMetadataAnnotations) WithArrayOfValues(values []map[string]string) *UpdatePlanRequestCAS_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdatePlanRequestCAS_FieldSubPathArrayOfValues)
}

func (UpdatePlanRequest_CASPathSelectorConditionalStateMetadataAnnotations) WithKey(key string) UpdatePlanRequest_CASMapPathSelectorConditionalStateMetadataAnnotations {
	return UpdatePlanRequest_CASMapPathSelectorConditionalStateMetadataAnnotations{key: key}
}

type UpdatePlanRequest_CASMapPathSelectorConditionalStateMetadataAnnotations struct {
	key string
}

func (s UpdatePlanRequest_CASMapPathSelectorConditionalStateMetadataAnnotations) FieldPath() *UpdatePlanRequestCAS_FieldSubPath {
	return &UpdatePlanRequestCAS_FieldSubPath{
		selector: UpdatePlanRequestCAS_FieldPathSelectorConditionalState,
		subPath:  plan.NewPlanFieldPathBuilder().Metadata().Annotations().WithKey(s.key).FieldPath(),
	}
}

func (s UpdatePlanRequest_CASMapPathSelectorConditionalStateMetadataAnnotations) WithValue(value string) *UpdatePlanRequestCAS_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdatePlanRequestCAS_FieldSubPathValue)
}

func (s UpdatePlanRequest_CASMapPathSelectorConditionalStateMetadataAnnotations) WithArrayOfValues(values []string) *UpdatePlanRequestCAS_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdatePlanRequestCAS_FieldSubPathArrayOfValues)
}

type UpdatePlanRequest_CASPathSelectorConditionalStateMetadataGeneration struct{}

func (UpdatePlanRequest_CASPathSelectorConditionalStateMetadataGeneration) FieldPath() *UpdatePlanRequestCAS_FieldSubPath {
	return &UpdatePlanRequestCAS_FieldSubPath{
		selector: UpdatePlanRequestCAS_FieldPathSelectorConditionalState,
		subPath:  plan.NewPlanFieldPathBuilder().Metadata().Generation().FieldPath(),
	}
}

func (s UpdatePlanRequest_CASPathSelectorConditionalStateMetadataGeneration) WithValue(value int64) *UpdatePlanRequestCAS_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdatePlanRequestCAS_FieldSubPathValue)
}

func (s UpdatePlanRequest_CASPathSelectorConditionalStateMetadataGeneration) WithArrayOfValues(values []int64) *UpdatePlanRequestCAS_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdatePlanRequestCAS_FieldSubPathArrayOfValues)
}

type UpdatePlanRequest_CASPathSelectorConditionalStateMetadataResourceVersion struct{}

func (UpdatePlanRequest_CASPathSelectorConditionalStateMetadataResourceVersion) FieldPath() *UpdatePlanRequestCAS_FieldSubPath {
	return &UpdatePlanRequestCAS_FieldSubPath{
		selector: UpdatePlanRequestCAS_FieldPathSelectorConditionalState,
		subPath:  plan.NewPlanFieldPathBuilder().Metadata().ResourceVersion().FieldPath(),
	}
}

func (s UpdatePlanRequest_CASPathSelectorConditionalStateMetadataResourceVersion) WithValue(value string) *UpdatePlanRequestCAS_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdatePlanRequestCAS_FieldSubPathValue)
}

func (s UpdatePlanRequest_CASPathSelectorConditionalStateMetadataResourceVersion) WithArrayOfValues(values []string) *UpdatePlanRequestCAS_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdatePlanRequestCAS_FieldSubPathArrayOfValues)
}

type UpdatePlanRequest_CASPathSelectorConditionalStateMetadataOwnerReferences struct{}

func (UpdatePlanRequest_CASPathSelectorConditionalStateMetadataOwnerReferences) FieldPath() *UpdatePlanRequestCAS_FieldSubPath {
	return &UpdatePlanRequestCAS_FieldSubPath{
		selector: UpdatePlanRequestCAS_FieldPathSelectorConditionalState,
		subPath:  plan.NewPlanFieldPathBuilder().Metadata().OwnerReferences().FieldPath(),
	}
}

func (s UpdatePlanRequest_CASPathSelectorConditionalStateMetadataOwnerReferences) WithValue(value []*ntt_meta.OwnerReference) *UpdatePlanRequestCAS_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdatePlanRequestCAS_FieldSubPathValue)
}

func (s UpdatePlanRequest_CASPathSelectorConditionalStateMetadataOwnerReferences) WithArrayOfValues(values [][]*ntt_meta.OwnerReference) *UpdatePlanRequestCAS_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdatePlanRequestCAS_FieldSubPathArrayOfValues)
}

func (s UpdatePlanRequest_CASPathSelectorConditionalStateMetadataOwnerReferences) WithItemValue(value *ntt_meta.OwnerReference) *UpdatePlanRequestCAS_FieldSubPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*UpdatePlanRequestCAS_FieldSubPathArrayItemValue)
}

func (UpdatePlanRequest_CASPathSelectorConditionalStateMetadataOwnerReferences) ApiVersion() UpdatePlanRequest_CASPathSelectorConditionalStateMetadataOwnerReferencesApiVersion {
	return UpdatePlanRequest_CASPathSelectorConditionalStateMetadataOwnerReferencesApiVersion{}
}

func (UpdatePlanRequest_CASPathSelectorConditionalStateMetadataOwnerReferences) Kind() UpdatePlanRequest_CASPathSelectorConditionalStateMetadataOwnerReferencesKind {
	return UpdatePlanRequest_CASPathSelectorConditionalStateMetadataOwnerReferencesKind{}
}

func (UpdatePlanRequest_CASPathSelectorConditionalStateMetadataOwnerReferences) Name() UpdatePlanRequest_CASPathSelectorConditionalStateMetadataOwnerReferencesName {
	return UpdatePlanRequest_CASPathSelectorConditionalStateMetadataOwnerReferencesName{}
}

func (UpdatePlanRequest_CASPathSelectorConditionalStateMetadataOwnerReferences) Uid() UpdatePlanRequest_CASPathSelectorConditionalStateMetadataOwnerReferencesUid {
	return UpdatePlanRequest_CASPathSelectorConditionalStateMetadataOwnerReferencesUid{}
}

func (UpdatePlanRequest_CASPathSelectorConditionalStateMetadataOwnerReferences) Controller() UpdatePlanRequest_CASPathSelectorConditionalStateMetadataOwnerReferencesController {
	return UpdatePlanRequest_CASPathSelectorConditionalStateMetadataOwnerReferencesController{}
}

func (UpdatePlanRequest_CASPathSelectorConditionalStateMetadataOwnerReferences) BlockOwnerDeletion() UpdatePlanRequest_CASPathSelectorConditionalStateMetadataOwnerReferencesBlockOwnerDeletion {
	return UpdatePlanRequest_CASPathSelectorConditionalStateMetadataOwnerReferencesBlockOwnerDeletion{}
}

type UpdatePlanRequest_CASPathSelectorConditionalStateMetadataOwnerReferencesApiVersion struct{}

func (UpdatePlanRequest_CASPathSelectorConditionalStateMetadataOwnerReferencesApiVersion) FieldPath() *UpdatePlanRequestCAS_FieldSubPath {
	return &UpdatePlanRequestCAS_FieldSubPath{
		selector: UpdatePlanRequestCAS_FieldPathSelectorConditionalState,
		subPath:  plan.NewPlanFieldPathBuilder().Metadata().OwnerReferences().ApiVersion().FieldPath(),
	}
}

func (s UpdatePlanRequest_CASPathSelectorConditionalStateMetadataOwnerReferencesApiVersion) WithValue(value string) *UpdatePlanRequestCAS_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdatePlanRequestCAS_FieldSubPathValue)
}

func (s UpdatePlanRequest_CASPathSelectorConditionalStateMetadataOwnerReferencesApiVersion) WithArrayOfValues(values []string) *UpdatePlanRequestCAS_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdatePlanRequestCAS_FieldSubPathArrayOfValues)
}

type UpdatePlanRequest_CASPathSelectorConditionalStateMetadataOwnerReferencesKind struct{}

func (UpdatePlanRequest_CASPathSelectorConditionalStateMetadataOwnerReferencesKind) FieldPath() *UpdatePlanRequestCAS_FieldSubPath {
	return &UpdatePlanRequestCAS_FieldSubPath{
		selector: UpdatePlanRequestCAS_FieldPathSelectorConditionalState,
		subPath:  plan.NewPlanFieldPathBuilder().Metadata().OwnerReferences().Kind().FieldPath(),
	}
}

func (s UpdatePlanRequest_CASPathSelectorConditionalStateMetadataOwnerReferencesKind) WithValue(value string) *UpdatePlanRequestCAS_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdatePlanRequestCAS_FieldSubPathValue)
}

func (s UpdatePlanRequest_CASPathSelectorConditionalStateMetadataOwnerReferencesKind) WithArrayOfValues(values []string) *UpdatePlanRequestCAS_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdatePlanRequestCAS_FieldSubPathArrayOfValues)
}

type UpdatePlanRequest_CASPathSelectorConditionalStateMetadataOwnerReferencesName struct{}

func (UpdatePlanRequest_CASPathSelectorConditionalStateMetadataOwnerReferencesName) FieldPath() *UpdatePlanRequestCAS_FieldSubPath {
	return &UpdatePlanRequestCAS_FieldSubPath{
		selector: UpdatePlanRequestCAS_FieldPathSelectorConditionalState,
		subPath:  plan.NewPlanFieldPathBuilder().Metadata().OwnerReferences().Name().FieldPath(),
	}
}

func (s UpdatePlanRequest_CASPathSelectorConditionalStateMetadataOwnerReferencesName) WithValue(value string) *UpdatePlanRequestCAS_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdatePlanRequestCAS_FieldSubPathValue)
}

func (s UpdatePlanRequest_CASPathSelectorConditionalStateMetadataOwnerReferencesName) WithArrayOfValues(values []string) *UpdatePlanRequestCAS_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdatePlanRequestCAS_FieldSubPathArrayOfValues)
}

type UpdatePlanRequest_CASPathSelectorConditionalStateMetadataOwnerReferencesUid struct{}

func (UpdatePlanRequest_CASPathSelectorConditionalStateMetadataOwnerReferencesUid) FieldPath() *UpdatePlanRequestCAS_FieldSubPath {
	return &UpdatePlanRequestCAS_FieldSubPath{
		selector: UpdatePlanRequestCAS_FieldPathSelectorConditionalState,
		subPath:  plan.NewPlanFieldPathBuilder().Metadata().OwnerReferences().Uid().FieldPath(),
	}
}

func (s UpdatePlanRequest_CASPathSelectorConditionalStateMetadataOwnerReferencesUid) WithValue(value string) *UpdatePlanRequestCAS_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdatePlanRequestCAS_FieldSubPathValue)
}

func (s UpdatePlanRequest_CASPathSelectorConditionalStateMetadataOwnerReferencesUid) WithArrayOfValues(values []string) *UpdatePlanRequestCAS_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdatePlanRequestCAS_FieldSubPathArrayOfValues)
}

type UpdatePlanRequest_CASPathSelectorConditionalStateMetadataOwnerReferencesController struct{}

func (UpdatePlanRequest_CASPathSelectorConditionalStateMetadataOwnerReferencesController) FieldPath() *UpdatePlanRequestCAS_FieldSubPath {
	return &UpdatePlanRequestCAS_FieldSubPath{
		selector: UpdatePlanRequestCAS_FieldPathSelectorConditionalState,
		subPath:  plan.NewPlanFieldPathBuilder().Metadata().OwnerReferences().Controller().FieldPath(),
	}
}

func (s UpdatePlanRequest_CASPathSelectorConditionalStateMetadataOwnerReferencesController) WithValue(value bool) *UpdatePlanRequestCAS_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdatePlanRequestCAS_FieldSubPathValue)
}

func (s UpdatePlanRequest_CASPathSelectorConditionalStateMetadataOwnerReferencesController) WithArrayOfValues(values []bool) *UpdatePlanRequestCAS_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdatePlanRequestCAS_FieldSubPathArrayOfValues)
}

type UpdatePlanRequest_CASPathSelectorConditionalStateMetadataOwnerReferencesBlockOwnerDeletion struct{}

func (UpdatePlanRequest_CASPathSelectorConditionalStateMetadataOwnerReferencesBlockOwnerDeletion) FieldPath() *UpdatePlanRequestCAS_FieldSubPath {
	return &UpdatePlanRequestCAS_FieldSubPath{
		selector: UpdatePlanRequestCAS_FieldPathSelectorConditionalState,
		subPath:  plan.NewPlanFieldPathBuilder().Metadata().OwnerReferences().BlockOwnerDeletion().FieldPath(),
	}
}

func (s UpdatePlanRequest_CASPathSelectorConditionalStateMetadataOwnerReferencesBlockOwnerDeletion) WithValue(value bool) *UpdatePlanRequestCAS_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdatePlanRequestCAS_FieldSubPathValue)
}

func (s UpdatePlanRequest_CASPathSelectorConditionalStateMetadataOwnerReferencesBlockOwnerDeletion) WithArrayOfValues(values []bool) *UpdatePlanRequestCAS_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdatePlanRequestCAS_FieldSubPathArrayOfValues)
}

type UpdatePlanRequest_CASPathSelectorConditionalStateMetadataShards struct{}

func (UpdatePlanRequest_CASPathSelectorConditionalStateMetadataShards) FieldPath() *UpdatePlanRequestCAS_FieldSubPath {
	return &UpdatePlanRequestCAS_FieldSubPath{
		selector: UpdatePlanRequestCAS_FieldPathSelectorConditionalState,
		subPath:  plan.NewPlanFieldPathBuilder().Metadata().Shards().FieldPath(),
	}
}

func (s UpdatePlanRequest_CASPathSelectorConditionalStateMetadataShards) WithValue(value map[string]int64) *UpdatePlanRequestCAS_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdatePlanRequestCAS_FieldSubPathValue)
}

func (s UpdatePlanRequest_CASPathSelectorConditionalStateMetadataShards) WithArrayOfValues(values []map[string]int64) *UpdatePlanRequestCAS_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdatePlanRequestCAS_FieldSubPathArrayOfValues)
}

func (UpdatePlanRequest_CASPathSelectorConditionalStateMetadataShards) WithKey(key string) UpdatePlanRequest_CASMapPathSelectorConditionalStateMetadataShards {
	return UpdatePlanRequest_CASMapPathSelectorConditionalStateMetadataShards{key: key}
}

type UpdatePlanRequest_CASMapPathSelectorConditionalStateMetadataShards struct {
	key string
}

func (s UpdatePlanRequest_CASMapPathSelectorConditionalStateMetadataShards) FieldPath() *UpdatePlanRequestCAS_FieldSubPath {
	return &UpdatePlanRequestCAS_FieldSubPath{
		selector: UpdatePlanRequestCAS_FieldPathSelectorConditionalState,
		subPath:  plan.NewPlanFieldPathBuilder().Metadata().Shards().WithKey(s.key).FieldPath(),
	}
}

func (s UpdatePlanRequest_CASMapPathSelectorConditionalStateMetadataShards) WithValue(value int64) *UpdatePlanRequestCAS_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdatePlanRequestCAS_FieldSubPathValue)
}

func (s UpdatePlanRequest_CASMapPathSelectorConditionalStateMetadataShards) WithArrayOfValues(values []int64) *UpdatePlanRequestCAS_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdatePlanRequestCAS_FieldSubPathArrayOfValues)
}

type UpdatePlanRequest_CASPathSelectorConditionalStateMetadataSyncing struct{}

func (UpdatePlanRequest_CASPathSelectorConditionalStateMetadataSyncing) FieldPath() *UpdatePlanRequestCAS_FieldSubPath {
	return &UpdatePlanRequestCAS_FieldSubPath{
		selector: UpdatePlanRequestCAS_FieldPathSelectorConditionalState,
		subPath:  plan.NewPlanFieldPathBuilder().Metadata().Syncing().FieldPath(),
	}
}

func (s UpdatePlanRequest_CASPathSelectorConditionalStateMetadataSyncing) WithValue(value *ntt_meta.SyncingMeta) *UpdatePlanRequestCAS_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdatePlanRequestCAS_FieldSubPathValue)
}

func (s UpdatePlanRequest_CASPathSelectorConditionalStateMetadataSyncing) WithArrayOfValues(values []*ntt_meta.SyncingMeta) *UpdatePlanRequestCAS_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdatePlanRequestCAS_FieldSubPathArrayOfValues)
}

func (UpdatePlanRequest_CASPathSelectorConditionalStateMetadataSyncing) OwningRegion() UpdatePlanRequest_CASPathSelectorConditionalStateMetadataSyncingOwningRegion {
	return UpdatePlanRequest_CASPathSelectorConditionalStateMetadataSyncingOwningRegion{}
}

func (UpdatePlanRequest_CASPathSelectorConditionalStateMetadataSyncing) Regions() UpdatePlanRequest_CASPathSelectorConditionalStateMetadataSyncingRegions {
	return UpdatePlanRequest_CASPathSelectorConditionalStateMetadataSyncingRegions{}
}

type UpdatePlanRequest_CASPathSelectorConditionalStateMetadataSyncingOwningRegion struct{}

func (UpdatePlanRequest_CASPathSelectorConditionalStateMetadataSyncingOwningRegion) FieldPath() *UpdatePlanRequestCAS_FieldSubPath {
	return &UpdatePlanRequestCAS_FieldSubPath{
		selector: UpdatePlanRequestCAS_FieldPathSelectorConditionalState,
		subPath:  plan.NewPlanFieldPathBuilder().Metadata().Syncing().OwningRegion().FieldPath(),
	}
}

func (s UpdatePlanRequest_CASPathSelectorConditionalStateMetadataSyncingOwningRegion) WithValue(value string) *UpdatePlanRequestCAS_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdatePlanRequestCAS_FieldSubPathValue)
}

func (s UpdatePlanRequest_CASPathSelectorConditionalStateMetadataSyncingOwningRegion) WithArrayOfValues(values []string) *UpdatePlanRequestCAS_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdatePlanRequestCAS_FieldSubPathArrayOfValues)
}

type UpdatePlanRequest_CASPathSelectorConditionalStateMetadataSyncingRegions struct{}

func (UpdatePlanRequest_CASPathSelectorConditionalStateMetadataSyncingRegions) FieldPath() *UpdatePlanRequestCAS_FieldSubPath {
	return &UpdatePlanRequestCAS_FieldSubPath{
		selector: UpdatePlanRequestCAS_FieldPathSelectorConditionalState,
		subPath:  plan.NewPlanFieldPathBuilder().Metadata().Syncing().Regions().FieldPath(),
	}
}

func (s UpdatePlanRequest_CASPathSelectorConditionalStateMetadataSyncingRegions) WithValue(value []string) *UpdatePlanRequestCAS_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdatePlanRequestCAS_FieldSubPathValue)
}

func (s UpdatePlanRequest_CASPathSelectorConditionalStateMetadataSyncingRegions) WithArrayOfValues(values [][]string) *UpdatePlanRequestCAS_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdatePlanRequestCAS_FieldSubPathArrayOfValues)
}

func (s UpdatePlanRequest_CASPathSelectorConditionalStateMetadataSyncingRegions) WithItemValue(value string) *UpdatePlanRequestCAS_FieldSubPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*UpdatePlanRequestCAS_FieldSubPathArrayItemValue)
}

type UpdatePlanRequest_CASPathSelectorFieldMask struct{}

func (UpdatePlanRequest_CASPathSelectorFieldMask) FieldPath() *UpdatePlanRequestCAS_FieldTerminalPath {
	return &UpdatePlanRequestCAS_FieldTerminalPath{selector: UpdatePlanRequestCAS_FieldPathSelectorFieldMask}
}

func (s UpdatePlanRequest_CASPathSelectorFieldMask) WithValue(value *plan.Plan_FieldMask) *UpdatePlanRequestCAS_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*UpdatePlanRequestCAS_FieldTerminalPathValue)
}

func (s UpdatePlanRequest_CASPathSelectorFieldMask) WithArrayOfValues(values []*plan.Plan_FieldMask) *UpdatePlanRequestCAS_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdatePlanRequestCAS_FieldTerminalPathArrayOfValues)
}

type DeletePlanRequestFieldPathBuilder struct{}

func NewDeletePlanRequestFieldPathBuilder() DeletePlanRequestFieldPathBuilder {
	return DeletePlanRequestFieldPathBuilder{}
}
func (DeletePlanRequestFieldPathBuilder) Name() DeletePlanRequestPathSelectorName {
	return DeletePlanRequestPathSelectorName{}
}

type DeletePlanRequestPathSelectorName struct{}

func (DeletePlanRequestPathSelectorName) FieldPath() *DeletePlanRequest_FieldTerminalPath {
	return &DeletePlanRequest_FieldTerminalPath{selector: DeletePlanRequest_FieldPathSelectorName}
}

func (s DeletePlanRequestPathSelectorName) WithValue(value *plan.Reference) *DeletePlanRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*DeletePlanRequest_FieldTerminalPathValue)
}

func (s DeletePlanRequestPathSelectorName) WithArrayOfValues(values []*plan.Reference) *DeletePlanRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*DeletePlanRequest_FieldTerminalPathArrayOfValues)
}
