// Code generated by protoc-gen-goten-go
// File: edgelq/limits/proto/v1alpha2/limit_pool_custom.proto
// DO NOT EDIT!!!

package limit_pool_client

import (
	"fmt"
	"reflect"
	"sync"

	"google.golang.org/protobuf/encoding/protojson"
	"google.golang.org/protobuf/proto"
	preflect "google.golang.org/protobuf/reflect/protoreflect"
	"google.golang.org/protobuf/runtime/protoimpl"
)

// proto imports
import (
	iam_organization "github.com/cloudwan/edgelq-sdk/iam/resources/v1alpha2/organization"
	limit_pool "github.com/cloudwan/edgelq-sdk/limits/resources/v1alpha2/limit_pool"
)

// Reference imports to suppress errors if they are not otherwise used.
var (
	_ = fmt.Errorf
	_ = reflect.Method{}
	_ = sync.Once{}

	_ = protojson.MarshalOptions{}
	_ = proto.MarshalOptions{}
	_ = preflect.Value{}
	_ = protoimpl.DescBuilder{}
)

// make sure we're using proto imports
var (
	_ = &iam_organization.Organization{}
	_ = &limit_pool.LimitPool{}
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Request message for method
// [MigrateLimitPoolSource][ntt.limits.v1alpha2.MigrateLimitPoolSource]
type MigrateLimitPoolSourceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
	//  reference of ntt.limits.v1alpha2.LimitPool
	Name *limit_pool.Name `protobuf:"bytes,1,opt,customtype=Name,name=name,proto3" json:"name,omitempty" firestore:"name"`
}

func (m *MigrateLimitPoolSourceRequest) Reset() {
	*m = MigrateLimitPoolSourceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &edgelq_limits_proto_v1alpha2_limit_pool_custom_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(m))
		ms.StoreMessageInfo(mi)
	}
}

func (m *MigrateLimitPoolSourceRequest) String() string {
	return protoimpl.X.MessageStringOf(m)
}

func (*MigrateLimitPoolSourceRequest) ProtoMessage() {}

func (m *MigrateLimitPoolSourceRequest) ProtoReflect() preflect.Message {
	mi := &edgelq_limits_proto_v1alpha2_limit_pool_custom_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && m != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(m))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(m)
}

func (*MigrateLimitPoolSourceRequest) GotenMessage() {}

// Deprecated, Use MigrateLimitPoolSourceRequest.ProtoReflect.Descriptor instead.
func (*MigrateLimitPoolSourceRequest) Descriptor() ([]byte, []int) {
	return edgelq_limits_proto_v1alpha2_limit_pool_custom_proto_rawDescGZIP(), []int{0}
}

func (m *MigrateLimitPoolSourceRequest) Unmarshal(b []byte) error {
	return proto.Unmarshal(b, m)
}

func (m *MigrateLimitPoolSourceRequest) Marshal() ([]byte, error) {
	return proto.Marshal(m)
}

func (m *MigrateLimitPoolSourceRequest) MarshalJSON() ([]byte, error) {
	return protojson.MarshalOptions{}.Marshal(m)
}

func (m *MigrateLimitPoolSourceRequest) UnmarshalJSON(data []byte) error {
	return protojson.Unmarshal(data, m)
}

func (m *MigrateLimitPoolSourceRequest) GetName() *limit_pool.Name {
	if m != nil {
		return m.Name
	}
	return nil
}

func (m *MigrateLimitPoolSourceRequest) SetName(fv *limit_pool.Name) {
	if m == nil {
		panic(fmt.Errorf("can't set %s on nil %s", "Name", "MigrateLimitPoolSourceRequest"))
	}
	m.Name = fv
}

var edgelq_limits_proto_v1alpha2_limit_pool_custom_proto preflect.FileDescriptor

var edgelq_limits_proto_v1alpha2_limit_pool_custom_proto_rawDesc = []byte{
	0x0a, 0x34, 0x65, 0x64, 0x67, 0x65, 0x6c, 0x71, 0x2f, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x73, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x32, 0x2f, 0x6c,
	0x69, 0x6d, 0x69, 0x74, 0x5f, 0x70, 0x6f, 0x6f, 0x6c, 0x5f, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x13, 0x6e, 0x74, 0x74, 0x2e, 0x6c, 0x69, 0x6d, 0x69,
	0x74, 0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x32, 0x1a, 0x20, 0x67, 0x6f, 0x74,
	0x65, 0x6e, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x76,
	0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1d, 0x67,
	0x6f, 0x74, 0x65, 0x6e, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x2f, 0x67, 0x6f, 0x74, 0x65, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x20, 0x65, 0x64,
	0x67, 0x65, 0x6c, 0x71, 0x2f, 0x69, 0x61, 0x6d, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x69, 0x61, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x24,
	0x65, 0x64, 0x67, 0x65, 0x6c, 0x71, 0x2f, 0x61, 0x75, 0x64, 0x69, 0x74, 0x2f, 0x61, 0x6e, 0x6e,
	0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x61, 0x75, 0x64, 0x69, 0x74, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2d, 0x65, 0x64, 0x67, 0x65, 0x6c, 0x71, 0x2f, 0x6c, 0x69, 0x6d,
	0x69, 0x74, 0x73, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68,
	0x61, 0x32, 0x2f, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x5f, 0x70, 0x6f, 0x6f, 0x6c, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x34, 0x65, 0x64, 0x67, 0x65, 0x6c, 0x71, 0x2f, 0x6c, 0x69, 0x6d, 0x69,
	0x74, 0x73, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61,
	0x32, 0x2f, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x5f, 0x70, 0x6f, 0x6f, 0x6c, 0x5f, 0x63, 0x68, 0x61,
	0x6e, 0x67, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x46, 0x0a, 0x1d, 0x4d, 0x69, 0x67,
	0x72, 0x61, 0x74, 0x65, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x50, 0x6f, 0x6f, 0x6c, 0x53, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x25, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x11, 0xb2, 0xda, 0x21, 0x0d, 0x0a, 0x0b,
	0x0a, 0x09, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x50, 0x6f, 0x6f, 0x6c, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x42, 0x84, 0x01, 0x0a, 0x1a, 0x63, 0x6f, 0x6d, 0x2e, 0x6e, 0x74, 0x74, 0x2e, 0x6c, 0x69,
	0x6d, 0x69, 0x74, 0x73, 0x2e, 0x70, 0x62, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x32,
	0x42, 0x14, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x50, 0x6f, 0x6f, 0x6c, 0x43, 0x75, 0x73, 0x74, 0x6f,
	0x6d, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x00, 0x5a, 0x4e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x77, 0x61, 0x6e, 0x2f, 0x65, 0x64,
	0x67, 0x65, 0x6c, 0x71, 0x2f, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x73, 0x2f, 0x63, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x32, 0x2f, 0x6c, 0x69, 0x6d, 0x69,
	0x74, 0x5f, 0x70, 0x6f, 0x6f, 0x6c, 0x3b, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x5f, 0x70, 0x6f, 0x6f,
	0x6c, 0x5f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	edgelq_limits_proto_v1alpha2_limit_pool_custom_proto_rawDescOnce sync.Once
	edgelq_limits_proto_v1alpha2_limit_pool_custom_proto_rawDescData = edgelq_limits_proto_v1alpha2_limit_pool_custom_proto_rawDesc
)

func edgelq_limits_proto_v1alpha2_limit_pool_custom_proto_rawDescGZIP() []byte {
	edgelq_limits_proto_v1alpha2_limit_pool_custom_proto_rawDescOnce.Do(func() {
		edgelq_limits_proto_v1alpha2_limit_pool_custom_proto_rawDescData = protoimpl.X.CompressGZIP(edgelq_limits_proto_v1alpha2_limit_pool_custom_proto_rawDescData)
	})
	return edgelq_limits_proto_v1alpha2_limit_pool_custom_proto_rawDescData
}

var edgelq_limits_proto_v1alpha2_limit_pool_custom_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var edgelq_limits_proto_v1alpha2_limit_pool_custom_proto_goTypes = []interface{}{
	(*MigrateLimitPoolSourceRequest)(nil), // 0: ntt.limits.v1alpha2.MigrateLimitPoolSourceRequest
}
var edgelq_limits_proto_v1alpha2_limit_pool_custom_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { edgelq_limits_proto_v1alpha2_limit_pool_custom_proto_init() }
func edgelq_limits_proto_v1alpha2_limit_pool_custom_proto_init() {
	if edgelq_limits_proto_v1alpha2_limit_pool_custom_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {

		edgelq_limits_proto_v1alpha2_limit_pool_custom_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MigrateLimitPoolSourceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}

	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: edgelq_limits_proto_v1alpha2_limit_pool_custom_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           edgelq_limits_proto_v1alpha2_limit_pool_custom_proto_goTypes,
		DependencyIndexes: edgelq_limits_proto_v1alpha2_limit_pool_custom_proto_depIdxs,
		MessageInfos:      edgelq_limits_proto_v1alpha2_limit_pool_custom_proto_msgTypes,
	}.Build()
	edgelq_limits_proto_v1alpha2_limit_pool_custom_proto = out.File
	edgelq_limits_proto_v1alpha2_limit_pool_custom_proto_rawDesc = nil
	edgelq_limits_proto_v1alpha2_limit_pool_custom_proto_goTypes = nil
	edgelq_limits_proto_v1alpha2_limit_pool_custom_proto_depIdxs = nil
}
