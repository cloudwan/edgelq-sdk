// Code generated by protoc-gen-goten-object
// File: edgelq/limits/proto/v1alpha2/plan_assignment_custom.proto
// DO NOT EDIT!!!

package plan_assignment_client

// proto imports
import (
	ntt_meta "github.com/cloudwan/edgelq-sdk/common/types/meta"
	multi_region_policy "github.com/cloudwan/edgelq-sdk/common/types/multi_region_policy"
	iam_iam_common "github.com/cloudwan/edgelq-sdk/iam/resources/v1alpha2/common"
	iam_organization "github.com/cloudwan/edgelq-sdk/iam/resources/v1alpha2/organization"
	iam_project "github.com/cloudwan/edgelq-sdk/iam/resources/v1alpha2/project"
	accepted_plan "github.com/cloudwan/edgelq-sdk/limits/resources/v1alpha2/accepted_plan"
	common "github.com/cloudwan/edgelq-sdk/limits/resources/v1alpha2/common"
	plan "github.com/cloudwan/edgelq-sdk/limits/resources/v1alpha2/plan"
	plan_assignment "github.com/cloudwan/edgelq-sdk/limits/resources/v1alpha2/plan_assignment"
	meta_resource "github.com/cloudwan/edgelq-sdk/meta/resources/v1alpha2/resource"
	meta_service "github.com/cloudwan/edgelq-sdk/meta/resources/v1alpha2/service"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
)

// make sure we're using proto imports
var (
	_ = &ntt_meta.Meta{}
	_ = &multi_region_policy.MultiRegionPolicy{}
	_ = &iam_iam_common.PCR{}
	_ = &iam_organization.Organization{}
	_ = &iam_project.Project{}
	_ = &accepted_plan.AcceptedPlan{}
	_ = &common.Allowance{}
	_ = &plan.Plan{}
	_ = &plan_assignment.PlanAssignment{}
	_ = &meta_resource.Resource{}
	_ = &meta_service.Service{}
	_ = &timestamp.Timestamp{}
)

type MigratePlanAssignmentRequestFieldPathBuilder struct{}

func NewMigratePlanAssignmentRequestFieldPathBuilder() MigratePlanAssignmentRequestFieldPathBuilder {
	return MigratePlanAssignmentRequestFieldPathBuilder{}
}
func (MigratePlanAssignmentRequestFieldPathBuilder) PlanAssignment() MigratePlanAssignmentRequestPathSelectorPlanAssignment {
	return MigratePlanAssignmentRequestPathSelectorPlanAssignment{}
}

type MigratePlanAssignmentRequestPathSelectorPlanAssignment struct{}

func (MigratePlanAssignmentRequestPathSelectorPlanAssignment) FieldPath() *MigratePlanAssignmentRequest_FieldTerminalPath {
	return &MigratePlanAssignmentRequest_FieldTerminalPath{selector: MigratePlanAssignmentRequest_FieldPathSelectorPlanAssignment}
}

func (s MigratePlanAssignmentRequestPathSelectorPlanAssignment) WithValue(value *plan_assignment.PlanAssignment) *MigratePlanAssignmentRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*MigratePlanAssignmentRequest_FieldTerminalPathValue)
}

func (s MigratePlanAssignmentRequestPathSelectorPlanAssignment) WithArrayOfValues(values []*plan_assignment.PlanAssignment) *MigratePlanAssignmentRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*MigratePlanAssignmentRequest_FieldTerminalPathArrayOfValues)
}

func (MigratePlanAssignmentRequestPathSelectorPlanAssignment) WithSubPath(subPath plan_assignment.PlanAssignment_FieldPath) *MigratePlanAssignmentRequest_FieldSubPath {
	return &MigratePlanAssignmentRequest_FieldSubPath{selector: MigratePlanAssignmentRequest_FieldPathSelectorPlanAssignment, subPath: subPath}
}

func (s MigratePlanAssignmentRequestPathSelectorPlanAssignment) WithSubValue(subPathValue plan_assignment.PlanAssignment_FieldPathValue) *MigratePlanAssignmentRequest_FieldSubPathValue {
	return &MigratePlanAssignmentRequest_FieldSubPathValue{MigratePlanAssignmentRequest_FieldPath: s.WithSubPath(subPathValue), subPathValue: subPathValue}
}

func (s MigratePlanAssignmentRequestPathSelectorPlanAssignment) WithSubArrayOfValues(subPathArrayOfValues plan_assignment.PlanAssignment_FieldPathArrayOfValues) *MigratePlanAssignmentRequest_FieldSubPathArrayOfValues {
	return &MigratePlanAssignmentRequest_FieldSubPathArrayOfValues{MigratePlanAssignmentRequest_FieldPath: s.WithSubPath(subPathArrayOfValues), subPathArrayOfValues: subPathArrayOfValues}
}

func (s MigratePlanAssignmentRequestPathSelectorPlanAssignment) WithSubArrayItemValue(subPathArrayItemValue plan_assignment.PlanAssignment_FieldPathArrayItemValue) *MigratePlanAssignmentRequest_FieldSubPathArrayItemValue {
	return &MigratePlanAssignmentRequest_FieldSubPathArrayItemValue{MigratePlanAssignmentRequest_FieldPath: s.WithSubPath(subPathArrayItemValue), subPathItemValue: subPathArrayItemValue}
}

func (MigratePlanAssignmentRequestPathSelectorPlanAssignment) Name() MigratePlanAssignmentRequestPathSelectorPlanAssignmentName {
	return MigratePlanAssignmentRequestPathSelectorPlanAssignmentName{}
}

func (MigratePlanAssignmentRequestPathSelectorPlanAssignment) Plan() MigratePlanAssignmentRequestPathSelectorPlanAssignmentPlan {
	return MigratePlanAssignmentRequestPathSelectorPlanAssignmentPlan{}
}

func (MigratePlanAssignmentRequestPathSelectorPlanAssignment) Service() MigratePlanAssignmentRequestPathSelectorPlanAssignmentService {
	return MigratePlanAssignmentRequestPathSelectorPlanAssignmentService{}
}

func (MigratePlanAssignmentRequestPathSelectorPlanAssignment) Extensions() MigratePlanAssignmentRequestPathSelectorPlanAssignmentExtensions {
	return MigratePlanAssignmentRequestPathSelectorPlanAssignmentExtensions{}
}

func (MigratePlanAssignmentRequestPathSelectorPlanAssignment) RegionalDistributions() MigratePlanAssignmentRequestPathSelectorPlanAssignmentRegionalDistributions {
	return MigratePlanAssignmentRequestPathSelectorPlanAssignmentRegionalDistributions{}
}

func (MigratePlanAssignmentRequestPathSelectorPlanAssignment) Source() MigratePlanAssignmentRequestPathSelectorPlanAssignmentSource {
	return MigratePlanAssignmentRequestPathSelectorPlanAssignmentSource{}
}

func (MigratePlanAssignmentRequestPathSelectorPlanAssignment) Metadata() MigratePlanAssignmentRequestPathSelectorPlanAssignmentMetadata {
	return MigratePlanAssignmentRequestPathSelectorPlanAssignmentMetadata{}
}

type MigratePlanAssignmentRequestPathSelectorPlanAssignmentName struct{}

func (MigratePlanAssignmentRequestPathSelectorPlanAssignmentName) FieldPath() *MigratePlanAssignmentRequest_FieldSubPath {
	return &MigratePlanAssignmentRequest_FieldSubPath{
		selector: MigratePlanAssignmentRequest_FieldPathSelectorPlanAssignment,
		subPath:  plan_assignment.NewPlanAssignmentFieldPathBuilder().Name().FieldPath(),
	}
}

func (s MigratePlanAssignmentRequestPathSelectorPlanAssignmentName) WithValue(value *plan_assignment.Name) *MigratePlanAssignmentRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*MigratePlanAssignmentRequest_FieldSubPathValue)
}

func (s MigratePlanAssignmentRequestPathSelectorPlanAssignmentName) WithArrayOfValues(values []*plan_assignment.Name) *MigratePlanAssignmentRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*MigratePlanAssignmentRequest_FieldSubPathArrayOfValues)
}

type MigratePlanAssignmentRequestPathSelectorPlanAssignmentPlan struct{}

func (MigratePlanAssignmentRequestPathSelectorPlanAssignmentPlan) FieldPath() *MigratePlanAssignmentRequest_FieldSubPath {
	return &MigratePlanAssignmentRequest_FieldSubPath{
		selector: MigratePlanAssignmentRequest_FieldPathSelectorPlanAssignment,
		subPath:  plan_assignment.NewPlanAssignmentFieldPathBuilder().Plan().FieldPath(),
	}
}

func (s MigratePlanAssignmentRequestPathSelectorPlanAssignmentPlan) WithValue(value *plan.Reference) *MigratePlanAssignmentRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*MigratePlanAssignmentRequest_FieldSubPathValue)
}

func (s MigratePlanAssignmentRequestPathSelectorPlanAssignmentPlan) WithArrayOfValues(values []*plan.Reference) *MigratePlanAssignmentRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*MigratePlanAssignmentRequest_FieldSubPathArrayOfValues)
}

type MigratePlanAssignmentRequestPathSelectorPlanAssignmentService struct{}

func (MigratePlanAssignmentRequestPathSelectorPlanAssignmentService) FieldPath() *MigratePlanAssignmentRequest_FieldSubPath {
	return &MigratePlanAssignmentRequest_FieldSubPath{
		selector: MigratePlanAssignmentRequest_FieldPathSelectorPlanAssignment,
		subPath:  plan_assignment.NewPlanAssignmentFieldPathBuilder().Service().FieldPath(),
	}
}

func (s MigratePlanAssignmentRequestPathSelectorPlanAssignmentService) WithValue(value *meta_service.Reference) *MigratePlanAssignmentRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*MigratePlanAssignmentRequest_FieldSubPathValue)
}

func (s MigratePlanAssignmentRequestPathSelectorPlanAssignmentService) WithArrayOfValues(values []*meta_service.Reference) *MigratePlanAssignmentRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*MigratePlanAssignmentRequest_FieldSubPathArrayOfValues)
}

type MigratePlanAssignmentRequestPathSelectorPlanAssignmentExtensions struct{}

func (MigratePlanAssignmentRequestPathSelectorPlanAssignmentExtensions) FieldPath() *MigratePlanAssignmentRequest_FieldSubPath {
	return &MigratePlanAssignmentRequest_FieldSubPath{
		selector: MigratePlanAssignmentRequest_FieldPathSelectorPlanAssignment,
		subPath:  plan_assignment.NewPlanAssignmentFieldPathBuilder().Extensions().FieldPath(),
	}
}

func (s MigratePlanAssignmentRequestPathSelectorPlanAssignmentExtensions) WithValue(value []*common.Allowance) *MigratePlanAssignmentRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*MigratePlanAssignmentRequest_FieldSubPathValue)
}

func (s MigratePlanAssignmentRequestPathSelectorPlanAssignmentExtensions) WithArrayOfValues(values [][]*common.Allowance) *MigratePlanAssignmentRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*MigratePlanAssignmentRequest_FieldSubPathArrayOfValues)
}

func (s MigratePlanAssignmentRequestPathSelectorPlanAssignmentExtensions) WithItemValue(value *common.Allowance) *MigratePlanAssignmentRequest_FieldSubPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*MigratePlanAssignmentRequest_FieldSubPathArrayItemValue)
}

func (MigratePlanAssignmentRequestPathSelectorPlanAssignmentExtensions) Resource() MigratePlanAssignmentRequestPathSelectorPlanAssignmentExtensionsResource {
	return MigratePlanAssignmentRequestPathSelectorPlanAssignmentExtensionsResource{}
}

func (MigratePlanAssignmentRequestPathSelectorPlanAssignmentExtensions) Value() MigratePlanAssignmentRequestPathSelectorPlanAssignmentExtensionsValue {
	return MigratePlanAssignmentRequestPathSelectorPlanAssignmentExtensionsValue{}
}

type MigratePlanAssignmentRequestPathSelectorPlanAssignmentExtensionsResource struct{}

func (MigratePlanAssignmentRequestPathSelectorPlanAssignmentExtensionsResource) FieldPath() *MigratePlanAssignmentRequest_FieldSubPath {
	return &MigratePlanAssignmentRequest_FieldSubPath{
		selector: MigratePlanAssignmentRequest_FieldPathSelectorPlanAssignment,
		subPath:  plan_assignment.NewPlanAssignmentFieldPathBuilder().Extensions().Resource().FieldPath(),
	}
}

func (s MigratePlanAssignmentRequestPathSelectorPlanAssignmentExtensionsResource) WithValue(value *meta_resource.Reference) *MigratePlanAssignmentRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*MigratePlanAssignmentRequest_FieldSubPathValue)
}

func (s MigratePlanAssignmentRequestPathSelectorPlanAssignmentExtensionsResource) WithArrayOfValues(values []*meta_resource.Reference) *MigratePlanAssignmentRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*MigratePlanAssignmentRequest_FieldSubPathArrayOfValues)
}

type MigratePlanAssignmentRequestPathSelectorPlanAssignmentExtensionsValue struct{}

func (MigratePlanAssignmentRequestPathSelectorPlanAssignmentExtensionsValue) FieldPath() *MigratePlanAssignmentRequest_FieldSubPath {
	return &MigratePlanAssignmentRequest_FieldSubPath{
		selector: MigratePlanAssignmentRequest_FieldPathSelectorPlanAssignment,
		subPath:  plan_assignment.NewPlanAssignmentFieldPathBuilder().Extensions().Value().FieldPath(),
	}
}

func (s MigratePlanAssignmentRequestPathSelectorPlanAssignmentExtensionsValue) WithValue(value int64) *MigratePlanAssignmentRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*MigratePlanAssignmentRequest_FieldSubPathValue)
}

func (s MigratePlanAssignmentRequestPathSelectorPlanAssignmentExtensionsValue) WithArrayOfValues(values []int64) *MigratePlanAssignmentRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*MigratePlanAssignmentRequest_FieldSubPathArrayOfValues)
}

type MigratePlanAssignmentRequestPathSelectorPlanAssignmentRegionalDistributions struct{}

func (MigratePlanAssignmentRequestPathSelectorPlanAssignmentRegionalDistributions) FieldPath() *MigratePlanAssignmentRequest_FieldSubPath {
	return &MigratePlanAssignmentRequest_FieldSubPath{
		selector: MigratePlanAssignmentRequest_FieldPathSelectorPlanAssignment,
		subPath:  plan_assignment.NewPlanAssignmentFieldPathBuilder().RegionalDistributions().FieldPath(),
	}
}

func (s MigratePlanAssignmentRequestPathSelectorPlanAssignmentRegionalDistributions) WithValue(value []*common.RegionalDistribution) *MigratePlanAssignmentRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*MigratePlanAssignmentRequest_FieldSubPathValue)
}

func (s MigratePlanAssignmentRequestPathSelectorPlanAssignmentRegionalDistributions) WithArrayOfValues(values [][]*common.RegionalDistribution) *MigratePlanAssignmentRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*MigratePlanAssignmentRequest_FieldSubPathArrayOfValues)
}

func (s MigratePlanAssignmentRequestPathSelectorPlanAssignmentRegionalDistributions) WithItemValue(value *common.RegionalDistribution) *MigratePlanAssignmentRequest_FieldSubPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*MigratePlanAssignmentRequest_FieldSubPathArrayItemValue)
}

func (MigratePlanAssignmentRequestPathSelectorPlanAssignmentRegionalDistributions) Resource() MigratePlanAssignmentRequestPathSelectorPlanAssignmentRegionalDistributionsResource {
	return MigratePlanAssignmentRequestPathSelectorPlanAssignmentRegionalDistributionsResource{}
}

func (MigratePlanAssignmentRequestPathSelectorPlanAssignmentRegionalDistributions) LimitsByRegion() MigratePlanAssignmentRequestPathSelectorPlanAssignmentRegionalDistributionsLimitsByRegion {
	return MigratePlanAssignmentRequestPathSelectorPlanAssignmentRegionalDistributionsLimitsByRegion{}
}

type MigratePlanAssignmentRequestPathSelectorPlanAssignmentRegionalDistributionsResource struct{}

func (MigratePlanAssignmentRequestPathSelectorPlanAssignmentRegionalDistributionsResource) FieldPath() *MigratePlanAssignmentRequest_FieldSubPath {
	return &MigratePlanAssignmentRequest_FieldSubPath{
		selector: MigratePlanAssignmentRequest_FieldPathSelectorPlanAssignment,
		subPath:  plan_assignment.NewPlanAssignmentFieldPathBuilder().RegionalDistributions().Resource().FieldPath(),
	}
}

func (s MigratePlanAssignmentRequestPathSelectorPlanAssignmentRegionalDistributionsResource) WithValue(value *meta_resource.Reference) *MigratePlanAssignmentRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*MigratePlanAssignmentRequest_FieldSubPathValue)
}

func (s MigratePlanAssignmentRequestPathSelectorPlanAssignmentRegionalDistributionsResource) WithArrayOfValues(values []*meta_resource.Reference) *MigratePlanAssignmentRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*MigratePlanAssignmentRequest_FieldSubPathArrayOfValues)
}

type MigratePlanAssignmentRequestPathSelectorPlanAssignmentRegionalDistributionsLimitsByRegion struct{}

func (MigratePlanAssignmentRequestPathSelectorPlanAssignmentRegionalDistributionsLimitsByRegion) FieldPath() *MigratePlanAssignmentRequest_FieldSubPath {
	return &MigratePlanAssignmentRequest_FieldSubPath{
		selector: MigratePlanAssignmentRequest_FieldPathSelectorPlanAssignment,
		subPath:  plan_assignment.NewPlanAssignmentFieldPathBuilder().RegionalDistributions().LimitsByRegion().FieldPath(),
	}
}

func (s MigratePlanAssignmentRequestPathSelectorPlanAssignmentRegionalDistributionsLimitsByRegion) WithValue(value map[string]int64) *MigratePlanAssignmentRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*MigratePlanAssignmentRequest_FieldSubPathValue)
}

func (s MigratePlanAssignmentRequestPathSelectorPlanAssignmentRegionalDistributionsLimitsByRegion) WithArrayOfValues(values []map[string]int64) *MigratePlanAssignmentRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*MigratePlanAssignmentRequest_FieldSubPathArrayOfValues)
}

func (MigratePlanAssignmentRequestPathSelectorPlanAssignmentRegionalDistributionsLimitsByRegion) WithKey(key string) MigratePlanAssignmentRequestMapPathSelectorPlanAssignmentRegionalDistributionsLimitsByRegion {
	return MigratePlanAssignmentRequestMapPathSelectorPlanAssignmentRegionalDistributionsLimitsByRegion{key: key}
}

type MigratePlanAssignmentRequestMapPathSelectorPlanAssignmentRegionalDistributionsLimitsByRegion struct {
	key string
}

func (s MigratePlanAssignmentRequestMapPathSelectorPlanAssignmentRegionalDistributionsLimitsByRegion) FieldPath() *MigratePlanAssignmentRequest_FieldSubPath {
	return &MigratePlanAssignmentRequest_FieldSubPath{
		selector: MigratePlanAssignmentRequest_FieldPathSelectorPlanAssignment,
		subPath:  plan_assignment.NewPlanAssignmentFieldPathBuilder().RegionalDistributions().LimitsByRegion().WithKey(s.key).FieldPath(),
	}
}

func (s MigratePlanAssignmentRequestMapPathSelectorPlanAssignmentRegionalDistributionsLimitsByRegion) WithValue(value int64) *MigratePlanAssignmentRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*MigratePlanAssignmentRequest_FieldSubPathValue)
}

func (s MigratePlanAssignmentRequestMapPathSelectorPlanAssignmentRegionalDistributionsLimitsByRegion) WithArrayOfValues(values []int64) *MigratePlanAssignmentRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*MigratePlanAssignmentRequest_FieldSubPathArrayOfValues)
}

type MigratePlanAssignmentRequestPathSelectorPlanAssignmentSource struct{}

func (MigratePlanAssignmentRequestPathSelectorPlanAssignmentSource) FieldPath() *MigratePlanAssignmentRequest_FieldSubPath {
	return &MigratePlanAssignmentRequest_FieldSubPath{
		selector: MigratePlanAssignmentRequest_FieldPathSelectorPlanAssignment,
		subPath:  plan_assignment.NewPlanAssignmentFieldPathBuilder().Source().FieldPath(),
	}
}

func (s MigratePlanAssignmentRequestPathSelectorPlanAssignmentSource) WithValue(value *accepted_plan.Reference) *MigratePlanAssignmentRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*MigratePlanAssignmentRequest_FieldSubPathValue)
}

func (s MigratePlanAssignmentRequestPathSelectorPlanAssignmentSource) WithArrayOfValues(values []*accepted_plan.Reference) *MigratePlanAssignmentRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*MigratePlanAssignmentRequest_FieldSubPathArrayOfValues)
}

type MigratePlanAssignmentRequestPathSelectorPlanAssignmentMetadata struct{}

func (MigratePlanAssignmentRequestPathSelectorPlanAssignmentMetadata) FieldPath() *MigratePlanAssignmentRequest_FieldSubPath {
	return &MigratePlanAssignmentRequest_FieldSubPath{
		selector: MigratePlanAssignmentRequest_FieldPathSelectorPlanAssignment,
		subPath:  plan_assignment.NewPlanAssignmentFieldPathBuilder().Metadata().FieldPath(),
	}
}

func (s MigratePlanAssignmentRequestPathSelectorPlanAssignmentMetadata) WithValue(value *ntt_meta.Meta) *MigratePlanAssignmentRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*MigratePlanAssignmentRequest_FieldSubPathValue)
}

func (s MigratePlanAssignmentRequestPathSelectorPlanAssignmentMetadata) WithArrayOfValues(values []*ntt_meta.Meta) *MigratePlanAssignmentRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*MigratePlanAssignmentRequest_FieldSubPathArrayOfValues)
}

func (MigratePlanAssignmentRequestPathSelectorPlanAssignmentMetadata) CreateTime() MigratePlanAssignmentRequestPathSelectorPlanAssignmentMetadataCreateTime {
	return MigratePlanAssignmentRequestPathSelectorPlanAssignmentMetadataCreateTime{}
}

func (MigratePlanAssignmentRequestPathSelectorPlanAssignmentMetadata) UpdateTime() MigratePlanAssignmentRequestPathSelectorPlanAssignmentMetadataUpdateTime {
	return MigratePlanAssignmentRequestPathSelectorPlanAssignmentMetadataUpdateTime{}
}

func (MigratePlanAssignmentRequestPathSelectorPlanAssignmentMetadata) DeleteTime() MigratePlanAssignmentRequestPathSelectorPlanAssignmentMetadataDeleteTime {
	return MigratePlanAssignmentRequestPathSelectorPlanAssignmentMetadataDeleteTime{}
}

func (MigratePlanAssignmentRequestPathSelectorPlanAssignmentMetadata) Uuid() MigratePlanAssignmentRequestPathSelectorPlanAssignmentMetadataUuid {
	return MigratePlanAssignmentRequestPathSelectorPlanAssignmentMetadataUuid{}
}

func (MigratePlanAssignmentRequestPathSelectorPlanAssignmentMetadata) Tags() MigratePlanAssignmentRequestPathSelectorPlanAssignmentMetadataTags {
	return MigratePlanAssignmentRequestPathSelectorPlanAssignmentMetadataTags{}
}

func (MigratePlanAssignmentRequestPathSelectorPlanAssignmentMetadata) Labels() MigratePlanAssignmentRequestPathSelectorPlanAssignmentMetadataLabels {
	return MigratePlanAssignmentRequestPathSelectorPlanAssignmentMetadataLabels{}
}

func (MigratePlanAssignmentRequestPathSelectorPlanAssignmentMetadata) Annotations() MigratePlanAssignmentRequestPathSelectorPlanAssignmentMetadataAnnotations {
	return MigratePlanAssignmentRequestPathSelectorPlanAssignmentMetadataAnnotations{}
}

func (MigratePlanAssignmentRequestPathSelectorPlanAssignmentMetadata) Generation() MigratePlanAssignmentRequestPathSelectorPlanAssignmentMetadataGeneration {
	return MigratePlanAssignmentRequestPathSelectorPlanAssignmentMetadataGeneration{}
}

func (MigratePlanAssignmentRequestPathSelectorPlanAssignmentMetadata) ResourceVersion() MigratePlanAssignmentRequestPathSelectorPlanAssignmentMetadataResourceVersion {
	return MigratePlanAssignmentRequestPathSelectorPlanAssignmentMetadataResourceVersion{}
}

func (MigratePlanAssignmentRequestPathSelectorPlanAssignmentMetadata) OwnerReferences() MigratePlanAssignmentRequestPathSelectorPlanAssignmentMetadataOwnerReferences {
	return MigratePlanAssignmentRequestPathSelectorPlanAssignmentMetadataOwnerReferences{}
}

func (MigratePlanAssignmentRequestPathSelectorPlanAssignmentMetadata) Shards() MigratePlanAssignmentRequestPathSelectorPlanAssignmentMetadataShards {
	return MigratePlanAssignmentRequestPathSelectorPlanAssignmentMetadataShards{}
}

func (MigratePlanAssignmentRequestPathSelectorPlanAssignmentMetadata) Syncing() MigratePlanAssignmentRequestPathSelectorPlanAssignmentMetadataSyncing {
	return MigratePlanAssignmentRequestPathSelectorPlanAssignmentMetadataSyncing{}
}

func (MigratePlanAssignmentRequestPathSelectorPlanAssignmentMetadata) Lifecycle() MigratePlanAssignmentRequestPathSelectorPlanAssignmentMetadataLifecycle {
	return MigratePlanAssignmentRequestPathSelectorPlanAssignmentMetadataLifecycle{}
}

type MigratePlanAssignmentRequestPathSelectorPlanAssignmentMetadataCreateTime struct{}

func (MigratePlanAssignmentRequestPathSelectorPlanAssignmentMetadataCreateTime) FieldPath() *MigratePlanAssignmentRequest_FieldSubPath {
	return &MigratePlanAssignmentRequest_FieldSubPath{
		selector: MigratePlanAssignmentRequest_FieldPathSelectorPlanAssignment,
		subPath:  plan_assignment.NewPlanAssignmentFieldPathBuilder().Metadata().CreateTime().FieldPath(),
	}
}

func (s MigratePlanAssignmentRequestPathSelectorPlanAssignmentMetadataCreateTime) WithValue(value *timestamp.Timestamp) *MigratePlanAssignmentRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*MigratePlanAssignmentRequest_FieldSubPathValue)
}

func (s MigratePlanAssignmentRequestPathSelectorPlanAssignmentMetadataCreateTime) WithArrayOfValues(values []*timestamp.Timestamp) *MigratePlanAssignmentRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*MigratePlanAssignmentRequest_FieldSubPathArrayOfValues)
}

type MigratePlanAssignmentRequestPathSelectorPlanAssignmentMetadataUpdateTime struct{}

func (MigratePlanAssignmentRequestPathSelectorPlanAssignmentMetadataUpdateTime) FieldPath() *MigratePlanAssignmentRequest_FieldSubPath {
	return &MigratePlanAssignmentRequest_FieldSubPath{
		selector: MigratePlanAssignmentRequest_FieldPathSelectorPlanAssignment,
		subPath:  plan_assignment.NewPlanAssignmentFieldPathBuilder().Metadata().UpdateTime().FieldPath(),
	}
}

func (s MigratePlanAssignmentRequestPathSelectorPlanAssignmentMetadataUpdateTime) WithValue(value *timestamp.Timestamp) *MigratePlanAssignmentRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*MigratePlanAssignmentRequest_FieldSubPathValue)
}

func (s MigratePlanAssignmentRequestPathSelectorPlanAssignmentMetadataUpdateTime) WithArrayOfValues(values []*timestamp.Timestamp) *MigratePlanAssignmentRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*MigratePlanAssignmentRequest_FieldSubPathArrayOfValues)
}

type MigratePlanAssignmentRequestPathSelectorPlanAssignmentMetadataDeleteTime struct{}

func (MigratePlanAssignmentRequestPathSelectorPlanAssignmentMetadataDeleteTime) FieldPath() *MigratePlanAssignmentRequest_FieldSubPath {
	return &MigratePlanAssignmentRequest_FieldSubPath{
		selector: MigratePlanAssignmentRequest_FieldPathSelectorPlanAssignment,
		subPath:  plan_assignment.NewPlanAssignmentFieldPathBuilder().Metadata().DeleteTime().FieldPath(),
	}
}

func (s MigratePlanAssignmentRequestPathSelectorPlanAssignmentMetadataDeleteTime) WithValue(value *timestamp.Timestamp) *MigratePlanAssignmentRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*MigratePlanAssignmentRequest_FieldSubPathValue)
}

func (s MigratePlanAssignmentRequestPathSelectorPlanAssignmentMetadataDeleteTime) WithArrayOfValues(values []*timestamp.Timestamp) *MigratePlanAssignmentRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*MigratePlanAssignmentRequest_FieldSubPathArrayOfValues)
}

type MigratePlanAssignmentRequestPathSelectorPlanAssignmentMetadataUuid struct{}

func (MigratePlanAssignmentRequestPathSelectorPlanAssignmentMetadataUuid) FieldPath() *MigratePlanAssignmentRequest_FieldSubPath {
	return &MigratePlanAssignmentRequest_FieldSubPath{
		selector: MigratePlanAssignmentRequest_FieldPathSelectorPlanAssignment,
		subPath:  plan_assignment.NewPlanAssignmentFieldPathBuilder().Metadata().Uuid().FieldPath(),
	}
}

func (s MigratePlanAssignmentRequestPathSelectorPlanAssignmentMetadataUuid) WithValue(value string) *MigratePlanAssignmentRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*MigratePlanAssignmentRequest_FieldSubPathValue)
}

func (s MigratePlanAssignmentRequestPathSelectorPlanAssignmentMetadataUuid) WithArrayOfValues(values []string) *MigratePlanAssignmentRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*MigratePlanAssignmentRequest_FieldSubPathArrayOfValues)
}

type MigratePlanAssignmentRequestPathSelectorPlanAssignmentMetadataTags struct{}

func (MigratePlanAssignmentRequestPathSelectorPlanAssignmentMetadataTags) FieldPath() *MigratePlanAssignmentRequest_FieldSubPath {
	return &MigratePlanAssignmentRequest_FieldSubPath{
		selector: MigratePlanAssignmentRequest_FieldPathSelectorPlanAssignment,
		subPath:  plan_assignment.NewPlanAssignmentFieldPathBuilder().Metadata().Tags().FieldPath(),
	}
}

func (s MigratePlanAssignmentRequestPathSelectorPlanAssignmentMetadataTags) WithValue(value []string) *MigratePlanAssignmentRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*MigratePlanAssignmentRequest_FieldSubPathValue)
}

func (s MigratePlanAssignmentRequestPathSelectorPlanAssignmentMetadataTags) WithArrayOfValues(values [][]string) *MigratePlanAssignmentRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*MigratePlanAssignmentRequest_FieldSubPathArrayOfValues)
}

func (s MigratePlanAssignmentRequestPathSelectorPlanAssignmentMetadataTags) WithItemValue(value string) *MigratePlanAssignmentRequest_FieldSubPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*MigratePlanAssignmentRequest_FieldSubPathArrayItemValue)
}

type MigratePlanAssignmentRequestPathSelectorPlanAssignmentMetadataLabels struct{}

func (MigratePlanAssignmentRequestPathSelectorPlanAssignmentMetadataLabels) FieldPath() *MigratePlanAssignmentRequest_FieldSubPath {
	return &MigratePlanAssignmentRequest_FieldSubPath{
		selector: MigratePlanAssignmentRequest_FieldPathSelectorPlanAssignment,
		subPath:  plan_assignment.NewPlanAssignmentFieldPathBuilder().Metadata().Labels().FieldPath(),
	}
}

func (s MigratePlanAssignmentRequestPathSelectorPlanAssignmentMetadataLabels) WithValue(value map[string]string) *MigratePlanAssignmentRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*MigratePlanAssignmentRequest_FieldSubPathValue)
}

func (s MigratePlanAssignmentRequestPathSelectorPlanAssignmentMetadataLabels) WithArrayOfValues(values []map[string]string) *MigratePlanAssignmentRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*MigratePlanAssignmentRequest_FieldSubPathArrayOfValues)
}

func (MigratePlanAssignmentRequestPathSelectorPlanAssignmentMetadataLabels) WithKey(key string) MigratePlanAssignmentRequestMapPathSelectorPlanAssignmentMetadataLabels {
	return MigratePlanAssignmentRequestMapPathSelectorPlanAssignmentMetadataLabels{key: key}
}

type MigratePlanAssignmentRequestMapPathSelectorPlanAssignmentMetadataLabels struct {
	key string
}

func (s MigratePlanAssignmentRequestMapPathSelectorPlanAssignmentMetadataLabels) FieldPath() *MigratePlanAssignmentRequest_FieldSubPath {
	return &MigratePlanAssignmentRequest_FieldSubPath{
		selector: MigratePlanAssignmentRequest_FieldPathSelectorPlanAssignment,
		subPath:  plan_assignment.NewPlanAssignmentFieldPathBuilder().Metadata().Labels().WithKey(s.key).FieldPath(),
	}
}

func (s MigratePlanAssignmentRequestMapPathSelectorPlanAssignmentMetadataLabels) WithValue(value string) *MigratePlanAssignmentRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*MigratePlanAssignmentRequest_FieldSubPathValue)
}

func (s MigratePlanAssignmentRequestMapPathSelectorPlanAssignmentMetadataLabels) WithArrayOfValues(values []string) *MigratePlanAssignmentRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*MigratePlanAssignmentRequest_FieldSubPathArrayOfValues)
}

type MigratePlanAssignmentRequestPathSelectorPlanAssignmentMetadataAnnotations struct{}

func (MigratePlanAssignmentRequestPathSelectorPlanAssignmentMetadataAnnotations) FieldPath() *MigratePlanAssignmentRequest_FieldSubPath {
	return &MigratePlanAssignmentRequest_FieldSubPath{
		selector: MigratePlanAssignmentRequest_FieldPathSelectorPlanAssignment,
		subPath:  plan_assignment.NewPlanAssignmentFieldPathBuilder().Metadata().Annotations().FieldPath(),
	}
}

func (s MigratePlanAssignmentRequestPathSelectorPlanAssignmentMetadataAnnotations) WithValue(value map[string]string) *MigratePlanAssignmentRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*MigratePlanAssignmentRequest_FieldSubPathValue)
}

func (s MigratePlanAssignmentRequestPathSelectorPlanAssignmentMetadataAnnotations) WithArrayOfValues(values []map[string]string) *MigratePlanAssignmentRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*MigratePlanAssignmentRequest_FieldSubPathArrayOfValues)
}

func (MigratePlanAssignmentRequestPathSelectorPlanAssignmentMetadataAnnotations) WithKey(key string) MigratePlanAssignmentRequestMapPathSelectorPlanAssignmentMetadataAnnotations {
	return MigratePlanAssignmentRequestMapPathSelectorPlanAssignmentMetadataAnnotations{key: key}
}

type MigratePlanAssignmentRequestMapPathSelectorPlanAssignmentMetadataAnnotations struct {
	key string
}

func (s MigratePlanAssignmentRequestMapPathSelectorPlanAssignmentMetadataAnnotations) FieldPath() *MigratePlanAssignmentRequest_FieldSubPath {
	return &MigratePlanAssignmentRequest_FieldSubPath{
		selector: MigratePlanAssignmentRequest_FieldPathSelectorPlanAssignment,
		subPath:  plan_assignment.NewPlanAssignmentFieldPathBuilder().Metadata().Annotations().WithKey(s.key).FieldPath(),
	}
}

func (s MigratePlanAssignmentRequestMapPathSelectorPlanAssignmentMetadataAnnotations) WithValue(value string) *MigratePlanAssignmentRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*MigratePlanAssignmentRequest_FieldSubPathValue)
}

func (s MigratePlanAssignmentRequestMapPathSelectorPlanAssignmentMetadataAnnotations) WithArrayOfValues(values []string) *MigratePlanAssignmentRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*MigratePlanAssignmentRequest_FieldSubPathArrayOfValues)
}

type MigratePlanAssignmentRequestPathSelectorPlanAssignmentMetadataGeneration struct{}

func (MigratePlanAssignmentRequestPathSelectorPlanAssignmentMetadataGeneration) FieldPath() *MigratePlanAssignmentRequest_FieldSubPath {
	return &MigratePlanAssignmentRequest_FieldSubPath{
		selector: MigratePlanAssignmentRequest_FieldPathSelectorPlanAssignment,
		subPath:  plan_assignment.NewPlanAssignmentFieldPathBuilder().Metadata().Generation().FieldPath(),
	}
}

func (s MigratePlanAssignmentRequestPathSelectorPlanAssignmentMetadataGeneration) WithValue(value int64) *MigratePlanAssignmentRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*MigratePlanAssignmentRequest_FieldSubPathValue)
}

func (s MigratePlanAssignmentRequestPathSelectorPlanAssignmentMetadataGeneration) WithArrayOfValues(values []int64) *MigratePlanAssignmentRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*MigratePlanAssignmentRequest_FieldSubPathArrayOfValues)
}

type MigratePlanAssignmentRequestPathSelectorPlanAssignmentMetadataResourceVersion struct{}

func (MigratePlanAssignmentRequestPathSelectorPlanAssignmentMetadataResourceVersion) FieldPath() *MigratePlanAssignmentRequest_FieldSubPath {
	return &MigratePlanAssignmentRequest_FieldSubPath{
		selector: MigratePlanAssignmentRequest_FieldPathSelectorPlanAssignment,
		subPath:  plan_assignment.NewPlanAssignmentFieldPathBuilder().Metadata().ResourceVersion().FieldPath(),
	}
}

func (s MigratePlanAssignmentRequestPathSelectorPlanAssignmentMetadataResourceVersion) WithValue(value string) *MigratePlanAssignmentRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*MigratePlanAssignmentRequest_FieldSubPathValue)
}

func (s MigratePlanAssignmentRequestPathSelectorPlanAssignmentMetadataResourceVersion) WithArrayOfValues(values []string) *MigratePlanAssignmentRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*MigratePlanAssignmentRequest_FieldSubPathArrayOfValues)
}

type MigratePlanAssignmentRequestPathSelectorPlanAssignmentMetadataOwnerReferences struct{}

func (MigratePlanAssignmentRequestPathSelectorPlanAssignmentMetadataOwnerReferences) FieldPath() *MigratePlanAssignmentRequest_FieldSubPath {
	return &MigratePlanAssignmentRequest_FieldSubPath{
		selector: MigratePlanAssignmentRequest_FieldPathSelectorPlanAssignment,
		subPath:  plan_assignment.NewPlanAssignmentFieldPathBuilder().Metadata().OwnerReferences().FieldPath(),
	}
}

func (s MigratePlanAssignmentRequestPathSelectorPlanAssignmentMetadataOwnerReferences) WithValue(value []*ntt_meta.OwnerReference) *MigratePlanAssignmentRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*MigratePlanAssignmentRequest_FieldSubPathValue)
}

func (s MigratePlanAssignmentRequestPathSelectorPlanAssignmentMetadataOwnerReferences) WithArrayOfValues(values [][]*ntt_meta.OwnerReference) *MigratePlanAssignmentRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*MigratePlanAssignmentRequest_FieldSubPathArrayOfValues)
}

func (s MigratePlanAssignmentRequestPathSelectorPlanAssignmentMetadataOwnerReferences) WithItemValue(value *ntt_meta.OwnerReference) *MigratePlanAssignmentRequest_FieldSubPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*MigratePlanAssignmentRequest_FieldSubPathArrayItemValue)
}

func (MigratePlanAssignmentRequestPathSelectorPlanAssignmentMetadataOwnerReferences) Kind() MigratePlanAssignmentRequestPathSelectorPlanAssignmentMetadataOwnerReferencesKind {
	return MigratePlanAssignmentRequestPathSelectorPlanAssignmentMetadataOwnerReferencesKind{}
}

func (MigratePlanAssignmentRequestPathSelectorPlanAssignmentMetadataOwnerReferences) Version() MigratePlanAssignmentRequestPathSelectorPlanAssignmentMetadataOwnerReferencesVersion {
	return MigratePlanAssignmentRequestPathSelectorPlanAssignmentMetadataOwnerReferencesVersion{}
}

func (MigratePlanAssignmentRequestPathSelectorPlanAssignmentMetadataOwnerReferences) Name() MigratePlanAssignmentRequestPathSelectorPlanAssignmentMetadataOwnerReferencesName {
	return MigratePlanAssignmentRequestPathSelectorPlanAssignmentMetadataOwnerReferencesName{}
}

func (MigratePlanAssignmentRequestPathSelectorPlanAssignmentMetadataOwnerReferences) Region() MigratePlanAssignmentRequestPathSelectorPlanAssignmentMetadataOwnerReferencesRegion {
	return MigratePlanAssignmentRequestPathSelectorPlanAssignmentMetadataOwnerReferencesRegion{}
}

func (MigratePlanAssignmentRequestPathSelectorPlanAssignmentMetadataOwnerReferences) Controller() MigratePlanAssignmentRequestPathSelectorPlanAssignmentMetadataOwnerReferencesController {
	return MigratePlanAssignmentRequestPathSelectorPlanAssignmentMetadataOwnerReferencesController{}
}

func (MigratePlanAssignmentRequestPathSelectorPlanAssignmentMetadataOwnerReferences) BlockOwnerDeletion() MigratePlanAssignmentRequestPathSelectorPlanAssignmentMetadataOwnerReferencesBlockOwnerDeletion {
	return MigratePlanAssignmentRequestPathSelectorPlanAssignmentMetadataOwnerReferencesBlockOwnerDeletion{}
}

func (MigratePlanAssignmentRequestPathSelectorPlanAssignmentMetadataOwnerReferences) RequiresOwnerReference() MigratePlanAssignmentRequestPathSelectorPlanAssignmentMetadataOwnerReferencesRequiresOwnerReference {
	return MigratePlanAssignmentRequestPathSelectorPlanAssignmentMetadataOwnerReferencesRequiresOwnerReference{}
}

type MigratePlanAssignmentRequestPathSelectorPlanAssignmentMetadataOwnerReferencesKind struct{}

func (MigratePlanAssignmentRequestPathSelectorPlanAssignmentMetadataOwnerReferencesKind) FieldPath() *MigratePlanAssignmentRequest_FieldSubPath {
	return &MigratePlanAssignmentRequest_FieldSubPath{
		selector: MigratePlanAssignmentRequest_FieldPathSelectorPlanAssignment,
		subPath:  plan_assignment.NewPlanAssignmentFieldPathBuilder().Metadata().OwnerReferences().Kind().FieldPath(),
	}
}

func (s MigratePlanAssignmentRequestPathSelectorPlanAssignmentMetadataOwnerReferencesKind) WithValue(value string) *MigratePlanAssignmentRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*MigratePlanAssignmentRequest_FieldSubPathValue)
}

func (s MigratePlanAssignmentRequestPathSelectorPlanAssignmentMetadataOwnerReferencesKind) WithArrayOfValues(values []string) *MigratePlanAssignmentRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*MigratePlanAssignmentRequest_FieldSubPathArrayOfValues)
}

type MigratePlanAssignmentRequestPathSelectorPlanAssignmentMetadataOwnerReferencesVersion struct{}

func (MigratePlanAssignmentRequestPathSelectorPlanAssignmentMetadataOwnerReferencesVersion) FieldPath() *MigratePlanAssignmentRequest_FieldSubPath {
	return &MigratePlanAssignmentRequest_FieldSubPath{
		selector: MigratePlanAssignmentRequest_FieldPathSelectorPlanAssignment,
		subPath:  plan_assignment.NewPlanAssignmentFieldPathBuilder().Metadata().OwnerReferences().Version().FieldPath(),
	}
}

func (s MigratePlanAssignmentRequestPathSelectorPlanAssignmentMetadataOwnerReferencesVersion) WithValue(value string) *MigratePlanAssignmentRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*MigratePlanAssignmentRequest_FieldSubPathValue)
}

func (s MigratePlanAssignmentRequestPathSelectorPlanAssignmentMetadataOwnerReferencesVersion) WithArrayOfValues(values []string) *MigratePlanAssignmentRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*MigratePlanAssignmentRequest_FieldSubPathArrayOfValues)
}

type MigratePlanAssignmentRequestPathSelectorPlanAssignmentMetadataOwnerReferencesName struct{}

func (MigratePlanAssignmentRequestPathSelectorPlanAssignmentMetadataOwnerReferencesName) FieldPath() *MigratePlanAssignmentRequest_FieldSubPath {
	return &MigratePlanAssignmentRequest_FieldSubPath{
		selector: MigratePlanAssignmentRequest_FieldPathSelectorPlanAssignment,
		subPath:  plan_assignment.NewPlanAssignmentFieldPathBuilder().Metadata().OwnerReferences().Name().FieldPath(),
	}
}

func (s MigratePlanAssignmentRequestPathSelectorPlanAssignmentMetadataOwnerReferencesName) WithValue(value string) *MigratePlanAssignmentRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*MigratePlanAssignmentRequest_FieldSubPathValue)
}

func (s MigratePlanAssignmentRequestPathSelectorPlanAssignmentMetadataOwnerReferencesName) WithArrayOfValues(values []string) *MigratePlanAssignmentRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*MigratePlanAssignmentRequest_FieldSubPathArrayOfValues)
}

type MigratePlanAssignmentRequestPathSelectorPlanAssignmentMetadataOwnerReferencesRegion struct{}

func (MigratePlanAssignmentRequestPathSelectorPlanAssignmentMetadataOwnerReferencesRegion) FieldPath() *MigratePlanAssignmentRequest_FieldSubPath {
	return &MigratePlanAssignmentRequest_FieldSubPath{
		selector: MigratePlanAssignmentRequest_FieldPathSelectorPlanAssignment,
		subPath:  plan_assignment.NewPlanAssignmentFieldPathBuilder().Metadata().OwnerReferences().Region().FieldPath(),
	}
}

func (s MigratePlanAssignmentRequestPathSelectorPlanAssignmentMetadataOwnerReferencesRegion) WithValue(value string) *MigratePlanAssignmentRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*MigratePlanAssignmentRequest_FieldSubPathValue)
}

func (s MigratePlanAssignmentRequestPathSelectorPlanAssignmentMetadataOwnerReferencesRegion) WithArrayOfValues(values []string) *MigratePlanAssignmentRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*MigratePlanAssignmentRequest_FieldSubPathArrayOfValues)
}

type MigratePlanAssignmentRequestPathSelectorPlanAssignmentMetadataOwnerReferencesController struct{}

func (MigratePlanAssignmentRequestPathSelectorPlanAssignmentMetadataOwnerReferencesController) FieldPath() *MigratePlanAssignmentRequest_FieldSubPath {
	return &MigratePlanAssignmentRequest_FieldSubPath{
		selector: MigratePlanAssignmentRequest_FieldPathSelectorPlanAssignment,
		subPath:  plan_assignment.NewPlanAssignmentFieldPathBuilder().Metadata().OwnerReferences().Controller().FieldPath(),
	}
}

func (s MigratePlanAssignmentRequestPathSelectorPlanAssignmentMetadataOwnerReferencesController) WithValue(value bool) *MigratePlanAssignmentRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*MigratePlanAssignmentRequest_FieldSubPathValue)
}

func (s MigratePlanAssignmentRequestPathSelectorPlanAssignmentMetadataOwnerReferencesController) WithArrayOfValues(values []bool) *MigratePlanAssignmentRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*MigratePlanAssignmentRequest_FieldSubPathArrayOfValues)
}

type MigratePlanAssignmentRequestPathSelectorPlanAssignmentMetadataOwnerReferencesBlockOwnerDeletion struct{}

func (MigratePlanAssignmentRequestPathSelectorPlanAssignmentMetadataOwnerReferencesBlockOwnerDeletion) FieldPath() *MigratePlanAssignmentRequest_FieldSubPath {
	return &MigratePlanAssignmentRequest_FieldSubPath{
		selector: MigratePlanAssignmentRequest_FieldPathSelectorPlanAssignment,
		subPath:  plan_assignment.NewPlanAssignmentFieldPathBuilder().Metadata().OwnerReferences().BlockOwnerDeletion().FieldPath(),
	}
}

func (s MigratePlanAssignmentRequestPathSelectorPlanAssignmentMetadataOwnerReferencesBlockOwnerDeletion) WithValue(value bool) *MigratePlanAssignmentRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*MigratePlanAssignmentRequest_FieldSubPathValue)
}

func (s MigratePlanAssignmentRequestPathSelectorPlanAssignmentMetadataOwnerReferencesBlockOwnerDeletion) WithArrayOfValues(values []bool) *MigratePlanAssignmentRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*MigratePlanAssignmentRequest_FieldSubPathArrayOfValues)
}

type MigratePlanAssignmentRequestPathSelectorPlanAssignmentMetadataOwnerReferencesRequiresOwnerReference struct{}

func (MigratePlanAssignmentRequestPathSelectorPlanAssignmentMetadataOwnerReferencesRequiresOwnerReference) FieldPath() *MigratePlanAssignmentRequest_FieldSubPath {
	return &MigratePlanAssignmentRequest_FieldSubPath{
		selector: MigratePlanAssignmentRequest_FieldPathSelectorPlanAssignment,
		subPath:  plan_assignment.NewPlanAssignmentFieldPathBuilder().Metadata().OwnerReferences().RequiresOwnerReference().FieldPath(),
	}
}

func (s MigratePlanAssignmentRequestPathSelectorPlanAssignmentMetadataOwnerReferencesRequiresOwnerReference) WithValue(value bool) *MigratePlanAssignmentRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*MigratePlanAssignmentRequest_FieldSubPathValue)
}

func (s MigratePlanAssignmentRequestPathSelectorPlanAssignmentMetadataOwnerReferencesRequiresOwnerReference) WithArrayOfValues(values []bool) *MigratePlanAssignmentRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*MigratePlanAssignmentRequest_FieldSubPathArrayOfValues)
}

type MigratePlanAssignmentRequestPathSelectorPlanAssignmentMetadataShards struct{}

func (MigratePlanAssignmentRequestPathSelectorPlanAssignmentMetadataShards) FieldPath() *MigratePlanAssignmentRequest_FieldSubPath {
	return &MigratePlanAssignmentRequest_FieldSubPath{
		selector: MigratePlanAssignmentRequest_FieldPathSelectorPlanAssignment,
		subPath:  plan_assignment.NewPlanAssignmentFieldPathBuilder().Metadata().Shards().FieldPath(),
	}
}

func (s MigratePlanAssignmentRequestPathSelectorPlanAssignmentMetadataShards) WithValue(value map[string]int64) *MigratePlanAssignmentRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*MigratePlanAssignmentRequest_FieldSubPathValue)
}

func (s MigratePlanAssignmentRequestPathSelectorPlanAssignmentMetadataShards) WithArrayOfValues(values []map[string]int64) *MigratePlanAssignmentRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*MigratePlanAssignmentRequest_FieldSubPathArrayOfValues)
}

func (MigratePlanAssignmentRequestPathSelectorPlanAssignmentMetadataShards) WithKey(key string) MigratePlanAssignmentRequestMapPathSelectorPlanAssignmentMetadataShards {
	return MigratePlanAssignmentRequestMapPathSelectorPlanAssignmentMetadataShards{key: key}
}

type MigratePlanAssignmentRequestMapPathSelectorPlanAssignmentMetadataShards struct {
	key string
}

func (s MigratePlanAssignmentRequestMapPathSelectorPlanAssignmentMetadataShards) FieldPath() *MigratePlanAssignmentRequest_FieldSubPath {
	return &MigratePlanAssignmentRequest_FieldSubPath{
		selector: MigratePlanAssignmentRequest_FieldPathSelectorPlanAssignment,
		subPath:  plan_assignment.NewPlanAssignmentFieldPathBuilder().Metadata().Shards().WithKey(s.key).FieldPath(),
	}
}

func (s MigratePlanAssignmentRequestMapPathSelectorPlanAssignmentMetadataShards) WithValue(value int64) *MigratePlanAssignmentRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*MigratePlanAssignmentRequest_FieldSubPathValue)
}

func (s MigratePlanAssignmentRequestMapPathSelectorPlanAssignmentMetadataShards) WithArrayOfValues(values []int64) *MigratePlanAssignmentRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*MigratePlanAssignmentRequest_FieldSubPathArrayOfValues)
}

type MigratePlanAssignmentRequestPathSelectorPlanAssignmentMetadataSyncing struct{}

func (MigratePlanAssignmentRequestPathSelectorPlanAssignmentMetadataSyncing) FieldPath() *MigratePlanAssignmentRequest_FieldSubPath {
	return &MigratePlanAssignmentRequest_FieldSubPath{
		selector: MigratePlanAssignmentRequest_FieldPathSelectorPlanAssignment,
		subPath:  plan_assignment.NewPlanAssignmentFieldPathBuilder().Metadata().Syncing().FieldPath(),
	}
}

func (s MigratePlanAssignmentRequestPathSelectorPlanAssignmentMetadataSyncing) WithValue(value *ntt_meta.SyncingMeta) *MigratePlanAssignmentRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*MigratePlanAssignmentRequest_FieldSubPathValue)
}

func (s MigratePlanAssignmentRequestPathSelectorPlanAssignmentMetadataSyncing) WithArrayOfValues(values []*ntt_meta.SyncingMeta) *MigratePlanAssignmentRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*MigratePlanAssignmentRequest_FieldSubPathArrayOfValues)
}

func (MigratePlanAssignmentRequestPathSelectorPlanAssignmentMetadataSyncing) OwningRegion() MigratePlanAssignmentRequestPathSelectorPlanAssignmentMetadataSyncingOwningRegion {
	return MigratePlanAssignmentRequestPathSelectorPlanAssignmentMetadataSyncingOwningRegion{}
}

func (MigratePlanAssignmentRequestPathSelectorPlanAssignmentMetadataSyncing) Regions() MigratePlanAssignmentRequestPathSelectorPlanAssignmentMetadataSyncingRegions {
	return MigratePlanAssignmentRequestPathSelectorPlanAssignmentMetadataSyncingRegions{}
}

type MigratePlanAssignmentRequestPathSelectorPlanAssignmentMetadataSyncingOwningRegion struct{}

func (MigratePlanAssignmentRequestPathSelectorPlanAssignmentMetadataSyncingOwningRegion) FieldPath() *MigratePlanAssignmentRequest_FieldSubPath {
	return &MigratePlanAssignmentRequest_FieldSubPath{
		selector: MigratePlanAssignmentRequest_FieldPathSelectorPlanAssignment,
		subPath:  plan_assignment.NewPlanAssignmentFieldPathBuilder().Metadata().Syncing().OwningRegion().FieldPath(),
	}
}

func (s MigratePlanAssignmentRequestPathSelectorPlanAssignmentMetadataSyncingOwningRegion) WithValue(value string) *MigratePlanAssignmentRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*MigratePlanAssignmentRequest_FieldSubPathValue)
}

func (s MigratePlanAssignmentRequestPathSelectorPlanAssignmentMetadataSyncingOwningRegion) WithArrayOfValues(values []string) *MigratePlanAssignmentRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*MigratePlanAssignmentRequest_FieldSubPathArrayOfValues)
}

type MigratePlanAssignmentRequestPathSelectorPlanAssignmentMetadataSyncingRegions struct{}

func (MigratePlanAssignmentRequestPathSelectorPlanAssignmentMetadataSyncingRegions) FieldPath() *MigratePlanAssignmentRequest_FieldSubPath {
	return &MigratePlanAssignmentRequest_FieldSubPath{
		selector: MigratePlanAssignmentRequest_FieldPathSelectorPlanAssignment,
		subPath:  plan_assignment.NewPlanAssignmentFieldPathBuilder().Metadata().Syncing().Regions().FieldPath(),
	}
}

func (s MigratePlanAssignmentRequestPathSelectorPlanAssignmentMetadataSyncingRegions) WithValue(value []string) *MigratePlanAssignmentRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*MigratePlanAssignmentRequest_FieldSubPathValue)
}

func (s MigratePlanAssignmentRequestPathSelectorPlanAssignmentMetadataSyncingRegions) WithArrayOfValues(values [][]string) *MigratePlanAssignmentRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*MigratePlanAssignmentRequest_FieldSubPathArrayOfValues)
}

func (s MigratePlanAssignmentRequestPathSelectorPlanAssignmentMetadataSyncingRegions) WithItemValue(value string) *MigratePlanAssignmentRequest_FieldSubPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*MigratePlanAssignmentRequest_FieldSubPathArrayItemValue)
}

type MigratePlanAssignmentRequestPathSelectorPlanAssignmentMetadataLifecycle struct{}

func (MigratePlanAssignmentRequestPathSelectorPlanAssignmentMetadataLifecycle) FieldPath() *MigratePlanAssignmentRequest_FieldSubPath {
	return &MigratePlanAssignmentRequest_FieldSubPath{
		selector: MigratePlanAssignmentRequest_FieldPathSelectorPlanAssignment,
		subPath:  plan_assignment.NewPlanAssignmentFieldPathBuilder().Metadata().Lifecycle().FieldPath(),
	}
}

func (s MigratePlanAssignmentRequestPathSelectorPlanAssignmentMetadataLifecycle) WithValue(value *ntt_meta.Lifecycle) *MigratePlanAssignmentRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*MigratePlanAssignmentRequest_FieldSubPathValue)
}

func (s MigratePlanAssignmentRequestPathSelectorPlanAssignmentMetadataLifecycle) WithArrayOfValues(values []*ntt_meta.Lifecycle) *MigratePlanAssignmentRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*MigratePlanAssignmentRequest_FieldSubPathArrayOfValues)
}

func (MigratePlanAssignmentRequestPathSelectorPlanAssignmentMetadataLifecycle) State() MigratePlanAssignmentRequestPathSelectorPlanAssignmentMetadataLifecycleState {
	return MigratePlanAssignmentRequestPathSelectorPlanAssignmentMetadataLifecycleState{}
}

func (MigratePlanAssignmentRequestPathSelectorPlanAssignmentMetadataLifecycle) BlockDeletion() MigratePlanAssignmentRequestPathSelectorPlanAssignmentMetadataLifecycleBlockDeletion {
	return MigratePlanAssignmentRequestPathSelectorPlanAssignmentMetadataLifecycleBlockDeletion{}
}

type MigratePlanAssignmentRequestPathSelectorPlanAssignmentMetadataLifecycleState struct{}

func (MigratePlanAssignmentRequestPathSelectorPlanAssignmentMetadataLifecycleState) FieldPath() *MigratePlanAssignmentRequest_FieldSubPath {
	return &MigratePlanAssignmentRequest_FieldSubPath{
		selector: MigratePlanAssignmentRequest_FieldPathSelectorPlanAssignment,
		subPath:  plan_assignment.NewPlanAssignmentFieldPathBuilder().Metadata().Lifecycle().State().FieldPath(),
	}
}

func (s MigratePlanAssignmentRequestPathSelectorPlanAssignmentMetadataLifecycleState) WithValue(value ntt_meta.Lifecycle_State) *MigratePlanAssignmentRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*MigratePlanAssignmentRequest_FieldSubPathValue)
}

func (s MigratePlanAssignmentRequestPathSelectorPlanAssignmentMetadataLifecycleState) WithArrayOfValues(values []ntt_meta.Lifecycle_State) *MigratePlanAssignmentRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*MigratePlanAssignmentRequest_FieldSubPathArrayOfValues)
}

type MigratePlanAssignmentRequestPathSelectorPlanAssignmentMetadataLifecycleBlockDeletion struct{}

func (MigratePlanAssignmentRequestPathSelectorPlanAssignmentMetadataLifecycleBlockDeletion) FieldPath() *MigratePlanAssignmentRequest_FieldSubPath {
	return &MigratePlanAssignmentRequest_FieldSubPath{
		selector: MigratePlanAssignmentRequest_FieldPathSelectorPlanAssignment,
		subPath:  plan_assignment.NewPlanAssignmentFieldPathBuilder().Metadata().Lifecycle().BlockDeletion().FieldPath(),
	}
}

func (s MigratePlanAssignmentRequestPathSelectorPlanAssignmentMetadataLifecycleBlockDeletion) WithValue(value bool) *MigratePlanAssignmentRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*MigratePlanAssignmentRequest_FieldSubPathValue)
}

func (s MigratePlanAssignmentRequestPathSelectorPlanAssignmentMetadataLifecycleBlockDeletion) WithArrayOfValues(values []bool) *MigratePlanAssignmentRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*MigratePlanAssignmentRequest_FieldSubPathArrayOfValues)
}
