// Code generated by protoc-gen-goten-object
// File: edgelq/limits/proto/v1alpha2/plan_assignment_service.proto
// DO NOT EDIT!!!

package plan_assignment_client

// proto imports
import (
	ntt_meta "github.com/cloudwan/edgelq-sdk/common/types/meta"
	multi_region_policy "github.com/cloudwan/edgelq-sdk/common/types/multi_region_policy"
	iam_organization "github.com/cloudwan/edgelq-sdk/iam/resources/v1alpha2/organization"
	iam_project "github.com/cloudwan/edgelq-sdk/iam/resources/v1alpha2/project"
	accepted_plan "github.com/cloudwan/edgelq-sdk/limits/resources/v1alpha2/accepted_plan"
	common "github.com/cloudwan/edgelq-sdk/limits/resources/v1alpha2/common"
	plan "github.com/cloudwan/edgelq-sdk/limits/resources/v1alpha2/plan"
	plan_assignment "github.com/cloudwan/edgelq-sdk/limits/resources/v1alpha2/plan_assignment"
	meta_resource "github.com/cloudwan/edgelq-sdk/meta/resources/v1alpha2/resource"
	meta_service "github.com/cloudwan/edgelq-sdk/meta/resources/v1alpha2/service"
	view "github.com/cloudwan/goten-sdk/runtime/api/view"
	watch_type "github.com/cloudwan/goten-sdk/runtime/api/watch_type"
	empty "github.com/golang/protobuf/ptypes/empty"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	field_mask "google.golang.org/genproto/protobuf/field_mask"
)

// make sure we're using proto imports
var (
	_ = &ntt_meta.Meta{}
	_ = &multi_region_policy.MultiRegionPolicy{}
	_ = &iam_organization.Organization{}
	_ = &iam_project.Project{}
	_ = &accepted_plan.AcceptedPlan{}
	_ = &common.Allowance{}
	_ = &plan.Plan{}
	_ = &plan_assignment.PlanAssignment{}
	_ = &meta_resource.Resource{}
	_ = &meta_service.Service{}
	_ = &empty.Empty{}
	_ = &field_mask.FieldMask{}
	_ = &timestamp.Timestamp{}
	_ = view.View(0)
	_ = watch_type.WatchType(0)
)

type GetPlanAssignmentRequestFieldPathBuilder struct{}

func NewGetPlanAssignmentRequestFieldPathBuilder() GetPlanAssignmentRequestFieldPathBuilder {
	return GetPlanAssignmentRequestFieldPathBuilder{}
}
func (GetPlanAssignmentRequestFieldPathBuilder) Name() GetPlanAssignmentRequestPathSelectorName {
	return GetPlanAssignmentRequestPathSelectorName{}
}
func (GetPlanAssignmentRequestFieldPathBuilder) FieldMask() GetPlanAssignmentRequestPathSelectorFieldMask {
	return GetPlanAssignmentRequestPathSelectorFieldMask{}
}
func (GetPlanAssignmentRequestFieldPathBuilder) View() GetPlanAssignmentRequestPathSelectorView {
	return GetPlanAssignmentRequestPathSelectorView{}
}

type GetPlanAssignmentRequestPathSelectorName struct{}

func (GetPlanAssignmentRequestPathSelectorName) FieldPath() *GetPlanAssignmentRequest_FieldTerminalPath {
	return &GetPlanAssignmentRequest_FieldTerminalPath{selector: GetPlanAssignmentRequest_FieldPathSelectorName}
}

func (s GetPlanAssignmentRequestPathSelectorName) WithValue(value *plan_assignment.Reference) *GetPlanAssignmentRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*GetPlanAssignmentRequest_FieldTerminalPathValue)
}

func (s GetPlanAssignmentRequestPathSelectorName) WithArrayOfValues(values []*plan_assignment.Reference) *GetPlanAssignmentRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*GetPlanAssignmentRequest_FieldTerminalPathArrayOfValues)
}

type GetPlanAssignmentRequestPathSelectorFieldMask struct{}

func (GetPlanAssignmentRequestPathSelectorFieldMask) FieldPath() *GetPlanAssignmentRequest_FieldTerminalPath {
	return &GetPlanAssignmentRequest_FieldTerminalPath{selector: GetPlanAssignmentRequest_FieldPathSelectorFieldMask}
}

func (s GetPlanAssignmentRequestPathSelectorFieldMask) WithValue(value *plan_assignment.PlanAssignment_FieldMask) *GetPlanAssignmentRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*GetPlanAssignmentRequest_FieldTerminalPathValue)
}

func (s GetPlanAssignmentRequestPathSelectorFieldMask) WithArrayOfValues(values []*plan_assignment.PlanAssignment_FieldMask) *GetPlanAssignmentRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*GetPlanAssignmentRequest_FieldTerminalPathArrayOfValues)
}

type GetPlanAssignmentRequestPathSelectorView struct{}

func (GetPlanAssignmentRequestPathSelectorView) FieldPath() *GetPlanAssignmentRequest_FieldTerminalPath {
	return &GetPlanAssignmentRequest_FieldTerminalPath{selector: GetPlanAssignmentRequest_FieldPathSelectorView}
}

func (s GetPlanAssignmentRequestPathSelectorView) WithValue(value view.View) *GetPlanAssignmentRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*GetPlanAssignmentRequest_FieldTerminalPathValue)
}

func (s GetPlanAssignmentRequestPathSelectorView) WithArrayOfValues(values []view.View) *GetPlanAssignmentRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*GetPlanAssignmentRequest_FieldTerminalPathArrayOfValues)
}

type BatchGetPlanAssignmentsRequestFieldPathBuilder struct{}

func NewBatchGetPlanAssignmentsRequestFieldPathBuilder() BatchGetPlanAssignmentsRequestFieldPathBuilder {
	return BatchGetPlanAssignmentsRequestFieldPathBuilder{}
}
func (BatchGetPlanAssignmentsRequestFieldPathBuilder) Names() BatchGetPlanAssignmentsRequestPathSelectorNames {
	return BatchGetPlanAssignmentsRequestPathSelectorNames{}
}
func (BatchGetPlanAssignmentsRequestFieldPathBuilder) FieldMask() BatchGetPlanAssignmentsRequestPathSelectorFieldMask {
	return BatchGetPlanAssignmentsRequestPathSelectorFieldMask{}
}
func (BatchGetPlanAssignmentsRequestFieldPathBuilder) View() BatchGetPlanAssignmentsRequestPathSelectorView {
	return BatchGetPlanAssignmentsRequestPathSelectorView{}
}

type BatchGetPlanAssignmentsRequestPathSelectorNames struct{}

func (BatchGetPlanAssignmentsRequestPathSelectorNames) FieldPath() *BatchGetPlanAssignmentsRequest_FieldTerminalPath {
	return &BatchGetPlanAssignmentsRequest_FieldTerminalPath{selector: BatchGetPlanAssignmentsRequest_FieldPathSelectorNames}
}

func (s BatchGetPlanAssignmentsRequestPathSelectorNames) WithValue(value []*plan_assignment.Reference) *BatchGetPlanAssignmentsRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetPlanAssignmentsRequest_FieldTerminalPathValue)
}

func (s BatchGetPlanAssignmentsRequestPathSelectorNames) WithArrayOfValues(values [][]*plan_assignment.Reference) *BatchGetPlanAssignmentsRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetPlanAssignmentsRequest_FieldTerminalPathArrayOfValues)
}

func (s BatchGetPlanAssignmentsRequestPathSelectorNames) WithItemValue(value *plan_assignment.Reference) *BatchGetPlanAssignmentsRequest_FieldTerminalPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*BatchGetPlanAssignmentsRequest_FieldTerminalPathArrayItemValue)
}

type BatchGetPlanAssignmentsRequestPathSelectorFieldMask struct{}

func (BatchGetPlanAssignmentsRequestPathSelectorFieldMask) FieldPath() *BatchGetPlanAssignmentsRequest_FieldTerminalPath {
	return &BatchGetPlanAssignmentsRequest_FieldTerminalPath{selector: BatchGetPlanAssignmentsRequest_FieldPathSelectorFieldMask}
}

func (s BatchGetPlanAssignmentsRequestPathSelectorFieldMask) WithValue(value *plan_assignment.PlanAssignment_FieldMask) *BatchGetPlanAssignmentsRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetPlanAssignmentsRequest_FieldTerminalPathValue)
}

func (s BatchGetPlanAssignmentsRequestPathSelectorFieldMask) WithArrayOfValues(values []*plan_assignment.PlanAssignment_FieldMask) *BatchGetPlanAssignmentsRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetPlanAssignmentsRequest_FieldTerminalPathArrayOfValues)
}

type BatchGetPlanAssignmentsRequestPathSelectorView struct{}

func (BatchGetPlanAssignmentsRequestPathSelectorView) FieldPath() *BatchGetPlanAssignmentsRequest_FieldTerminalPath {
	return &BatchGetPlanAssignmentsRequest_FieldTerminalPath{selector: BatchGetPlanAssignmentsRequest_FieldPathSelectorView}
}

func (s BatchGetPlanAssignmentsRequestPathSelectorView) WithValue(value view.View) *BatchGetPlanAssignmentsRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetPlanAssignmentsRequest_FieldTerminalPathValue)
}

func (s BatchGetPlanAssignmentsRequestPathSelectorView) WithArrayOfValues(values []view.View) *BatchGetPlanAssignmentsRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetPlanAssignmentsRequest_FieldTerminalPathArrayOfValues)
}

type BatchGetPlanAssignmentsResponseFieldPathBuilder struct{}

func NewBatchGetPlanAssignmentsResponseFieldPathBuilder() BatchGetPlanAssignmentsResponseFieldPathBuilder {
	return BatchGetPlanAssignmentsResponseFieldPathBuilder{}
}
func (BatchGetPlanAssignmentsResponseFieldPathBuilder) PlanAssignments() BatchGetPlanAssignmentsResponsePathSelectorPlanAssignments {
	return BatchGetPlanAssignmentsResponsePathSelectorPlanAssignments{}
}
func (BatchGetPlanAssignmentsResponseFieldPathBuilder) Missing() BatchGetPlanAssignmentsResponsePathSelectorMissing {
	return BatchGetPlanAssignmentsResponsePathSelectorMissing{}
}

type BatchGetPlanAssignmentsResponsePathSelectorPlanAssignments struct{}

func (BatchGetPlanAssignmentsResponsePathSelectorPlanAssignments) FieldPath() *BatchGetPlanAssignmentsResponse_FieldTerminalPath {
	return &BatchGetPlanAssignmentsResponse_FieldTerminalPath{selector: BatchGetPlanAssignmentsResponse_FieldPathSelectorPlanAssignments}
}

func (s BatchGetPlanAssignmentsResponsePathSelectorPlanAssignments) WithValue(value []*plan_assignment.PlanAssignment) *BatchGetPlanAssignmentsResponse_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetPlanAssignmentsResponse_FieldTerminalPathValue)
}

func (s BatchGetPlanAssignmentsResponsePathSelectorPlanAssignments) WithArrayOfValues(values [][]*plan_assignment.PlanAssignment) *BatchGetPlanAssignmentsResponse_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetPlanAssignmentsResponse_FieldTerminalPathArrayOfValues)
}

func (s BatchGetPlanAssignmentsResponsePathSelectorPlanAssignments) WithItemValue(value *plan_assignment.PlanAssignment) *BatchGetPlanAssignmentsResponse_FieldTerminalPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*BatchGetPlanAssignmentsResponse_FieldTerminalPathArrayItemValue)
}
func (BatchGetPlanAssignmentsResponsePathSelectorPlanAssignments) WithSubPath(subPath plan_assignment.PlanAssignment_FieldPath) *BatchGetPlanAssignmentsResponse_FieldSubPath {
	return &BatchGetPlanAssignmentsResponse_FieldSubPath{selector: BatchGetPlanAssignmentsResponse_FieldPathSelectorPlanAssignments, subPath: subPath}
}

func (s BatchGetPlanAssignmentsResponsePathSelectorPlanAssignments) WithSubValue(subPathValue plan_assignment.PlanAssignment_FieldPathValue) *BatchGetPlanAssignmentsResponse_FieldSubPathValue {
	return &BatchGetPlanAssignmentsResponse_FieldSubPathValue{BatchGetPlanAssignmentsResponse_FieldPath: s.WithSubPath(subPathValue), subPathValue: subPathValue}
}

func (s BatchGetPlanAssignmentsResponsePathSelectorPlanAssignments) WithSubArrayOfValues(subPathArrayOfValues plan_assignment.PlanAssignment_FieldPathArrayOfValues) *BatchGetPlanAssignmentsResponse_FieldSubPathArrayOfValues {
	return &BatchGetPlanAssignmentsResponse_FieldSubPathArrayOfValues{BatchGetPlanAssignmentsResponse_FieldPath: s.WithSubPath(subPathArrayOfValues), subPathArrayOfValues: subPathArrayOfValues}
}

func (s BatchGetPlanAssignmentsResponsePathSelectorPlanAssignments) WithSubArrayItemValue(subPathArrayItemValue plan_assignment.PlanAssignment_FieldPathArrayItemValue) *BatchGetPlanAssignmentsResponse_FieldSubPathArrayItemValue {
	return &BatchGetPlanAssignmentsResponse_FieldSubPathArrayItemValue{BatchGetPlanAssignmentsResponse_FieldPath: s.WithSubPath(subPathArrayItemValue), subPathItemValue: subPathArrayItemValue}
}

func (BatchGetPlanAssignmentsResponsePathSelectorPlanAssignments) Name() BatchGetPlanAssignmentsResponsePathSelectorPlanAssignmentsName {
	return BatchGetPlanAssignmentsResponsePathSelectorPlanAssignmentsName{}
}

func (BatchGetPlanAssignmentsResponsePathSelectorPlanAssignments) Plan() BatchGetPlanAssignmentsResponsePathSelectorPlanAssignmentsPlan {
	return BatchGetPlanAssignmentsResponsePathSelectorPlanAssignmentsPlan{}
}

func (BatchGetPlanAssignmentsResponsePathSelectorPlanAssignments) Service() BatchGetPlanAssignmentsResponsePathSelectorPlanAssignmentsService {
	return BatchGetPlanAssignmentsResponsePathSelectorPlanAssignmentsService{}
}

func (BatchGetPlanAssignmentsResponsePathSelectorPlanAssignments) Extensions() BatchGetPlanAssignmentsResponsePathSelectorPlanAssignmentsExtensions {
	return BatchGetPlanAssignmentsResponsePathSelectorPlanAssignmentsExtensions{}
}

func (BatchGetPlanAssignmentsResponsePathSelectorPlanAssignments) RegionalDistributions() BatchGetPlanAssignmentsResponsePathSelectorPlanAssignmentsRegionalDistributions {
	return BatchGetPlanAssignmentsResponsePathSelectorPlanAssignmentsRegionalDistributions{}
}

func (BatchGetPlanAssignmentsResponsePathSelectorPlanAssignments) Source() BatchGetPlanAssignmentsResponsePathSelectorPlanAssignmentsSource {
	return BatchGetPlanAssignmentsResponsePathSelectorPlanAssignmentsSource{}
}

func (BatchGetPlanAssignmentsResponsePathSelectorPlanAssignments) Metadata() BatchGetPlanAssignmentsResponsePathSelectorPlanAssignmentsMetadata {
	return BatchGetPlanAssignmentsResponsePathSelectorPlanAssignmentsMetadata{}
}

type BatchGetPlanAssignmentsResponsePathSelectorPlanAssignmentsName struct{}

func (BatchGetPlanAssignmentsResponsePathSelectorPlanAssignmentsName) FieldPath() *BatchGetPlanAssignmentsResponse_FieldSubPath {
	return &BatchGetPlanAssignmentsResponse_FieldSubPath{
		selector: BatchGetPlanAssignmentsResponse_FieldPathSelectorPlanAssignments,
		subPath:  plan_assignment.NewPlanAssignmentFieldPathBuilder().Name().FieldPath(),
	}
}

func (s BatchGetPlanAssignmentsResponsePathSelectorPlanAssignmentsName) WithValue(value *plan_assignment.Name) *BatchGetPlanAssignmentsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetPlanAssignmentsResponse_FieldSubPathValue)
}

func (s BatchGetPlanAssignmentsResponsePathSelectorPlanAssignmentsName) WithArrayOfValues(values []*plan_assignment.Name) *BatchGetPlanAssignmentsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetPlanAssignmentsResponse_FieldSubPathArrayOfValues)
}

type BatchGetPlanAssignmentsResponsePathSelectorPlanAssignmentsPlan struct{}

func (BatchGetPlanAssignmentsResponsePathSelectorPlanAssignmentsPlan) FieldPath() *BatchGetPlanAssignmentsResponse_FieldSubPath {
	return &BatchGetPlanAssignmentsResponse_FieldSubPath{
		selector: BatchGetPlanAssignmentsResponse_FieldPathSelectorPlanAssignments,
		subPath:  plan_assignment.NewPlanAssignmentFieldPathBuilder().Plan().FieldPath(),
	}
}

func (s BatchGetPlanAssignmentsResponsePathSelectorPlanAssignmentsPlan) WithValue(value *plan.Reference) *BatchGetPlanAssignmentsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetPlanAssignmentsResponse_FieldSubPathValue)
}

func (s BatchGetPlanAssignmentsResponsePathSelectorPlanAssignmentsPlan) WithArrayOfValues(values []*plan.Reference) *BatchGetPlanAssignmentsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetPlanAssignmentsResponse_FieldSubPathArrayOfValues)
}

type BatchGetPlanAssignmentsResponsePathSelectorPlanAssignmentsService struct{}

func (BatchGetPlanAssignmentsResponsePathSelectorPlanAssignmentsService) FieldPath() *BatchGetPlanAssignmentsResponse_FieldSubPath {
	return &BatchGetPlanAssignmentsResponse_FieldSubPath{
		selector: BatchGetPlanAssignmentsResponse_FieldPathSelectorPlanAssignments,
		subPath:  plan_assignment.NewPlanAssignmentFieldPathBuilder().Service().FieldPath(),
	}
}

func (s BatchGetPlanAssignmentsResponsePathSelectorPlanAssignmentsService) WithValue(value *meta_service.Reference) *BatchGetPlanAssignmentsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetPlanAssignmentsResponse_FieldSubPathValue)
}

func (s BatchGetPlanAssignmentsResponsePathSelectorPlanAssignmentsService) WithArrayOfValues(values []*meta_service.Reference) *BatchGetPlanAssignmentsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetPlanAssignmentsResponse_FieldSubPathArrayOfValues)
}

type BatchGetPlanAssignmentsResponsePathSelectorPlanAssignmentsExtensions struct{}

func (BatchGetPlanAssignmentsResponsePathSelectorPlanAssignmentsExtensions) FieldPath() *BatchGetPlanAssignmentsResponse_FieldSubPath {
	return &BatchGetPlanAssignmentsResponse_FieldSubPath{
		selector: BatchGetPlanAssignmentsResponse_FieldPathSelectorPlanAssignments,
		subPath:  plan_assignment.NewPlanAssignmentFieldPathBuilder().Extensions().FieldPath(),
	}
}

func (s BatchGetPlanAssignmentsResponsePathSelectorPlanAssignmentsExtensions) WithValue(value []*common.Allowance) *BatchGetPlanAssignmentsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetPlanAssignmentsResponse_FieldSubPathValue)
}

func (s BatchGetPlanAssignmentsResponsePathSelectorPlanAssignmentsExtensions) WithArrayOfValues(values [][]*common.Allowance) *BatchGetPlanAssignmentsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetPlanAssignmentsResponse_FieldSubPathArrayOfValues)
}

func (s BatchGetPlanAssignmentsResponsePathSelectorPlanAssignmentsExtensions) WithItemValue(value *common.Allowance) *BatchGetPlanAssignmentsResponse_FieldSubPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*BatchGetPlanAssignmentsResponse_FieldSubPathArrayItemValue)
}

func (BatchGetPlanAssignmentsResponsePathSelectorPlanAssignmentsExtensions) Resource() BatchGetPlanAssignmentsResponsePathSelectorPlanAssignmentsExtensionsResource {
	return BatchGetPlanAssignmentsResponsePathSelectorPlanAssignmentsExtensionsResource{}
}

func (BatchGetPlanAssignmentsResponsePathSelectorPlanAssignmentsExtensions) Value() BatchGetPlanAssignmentsResponsePathSelectorPlanAssignmentsExtensionsValue {
	return BatchGetPlanAssignmentsResponsePathSelectorPlanAssignmentsExtensionsValue{}
}

type BatchGetPlanAssignmentsResponsePathSelectorPlanAssignmentsExtensionsResource struct{}

func (BatchGetPlanAssignmentsResponsePathSelectorPlanAssignmentsExtensionsResource) FieldPath() *BatchGetPlanAssignmentsResponse_FieldSubPath {
	return &BatchGetPlanAssignmentsResponse_FieldSubPath{
		selector: BatchGetPlanAssignmentsResponse_FieldPathSelectorPlanAssignments,
		subPath:  plan_assignment.NewPlanAssignmentFieldPathBuilder().Extensions().Resource().FieldPath(),
	}
}

func (s BatchGetPlanAssignmentsResponsePathSelectorPlanAssignmentsExtensionsResource) WithValue(value *meta_resource.Reference) *BatchGetPlanAssignmentsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetPlanAssignmentsResponse_FieldSubPathValue)
}

func (s BatchGetPlanAssignmentsResponsePathSelectorPlanAssignmentsExtensionsResource) WithArrayOfValues(values []*meta_resource.Reference) *BatchGetPlanAssignmentsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetPlanAssignmentsResponse_FieldSubPathArrayOfValues)
}

type BatchGetPlanAssignmentsResponsePathSelectorPlanAssignmentsExtensionsValue struct{}

func (BatchGetPlanAssignmentsResponsePathSelectorPlanAssignmentsExtensionsValue) FieldPath() *BatchGetPlanAssignmentsResponse_FieldSubPath {
	return &BatchGetPlanAssignmentsResponse_FieldSubPath{
		selector: BatchGetPlanAssignmentsResponse_FieldPathSelectorPlanAssignments,
		subPath:  plan_assignment.NewPlanAssignmentFieldPathBuilder().Extensions().Value().FieldPath(),
	}
}

func (s BatchGetPlanAssignmentsResponsePathSelectorPlanAssignmentsExtensionsValue) WithValue(value int64) *BatchGetPlanAssignmentsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetPlanAssignmentsResponse_FieldSubPathValue)
}

func (s BatchGetPlanAssignmentsResponsePathSelectorPlanAssignmentsExtensionsValue) WithArrayOfValues(values []int64) *BatchGetPlanAssignmentsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetPlanAssignmentsResponse_FieldSubPathArrayOfValues)
}

type BatchGetPlanAssignmentsResponsePathSelectorPlanAssignmentsRegionalDistributions struct{}

func (BatchGetPlanAssignmentsResponsePathSelectorPlanAssignmentsRegionalDistributions) FieldPath() *BatchGetPlanAssignmentsResponse_FieldSubPath {
	return &BatchGetPlanAssignmentsResponse_FieldSubPath{
		selector: BatchGetPlanAssignmentsResponse_FieldPathSelectorPlanAssignments,
		subPath:  plan_assignment.NewPlanAssignmentFieldPathBuilder().RegionalDistributions().FieldPath(),
	}
}

func (s BatchGetPlanAssignmentsResponsePathSelectorPlanAssignmentsRegionalDistributions) WithValue(value []*common.RegionalDistribution) *BatchGetPlanAssignmentsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetPlanAssignmentsResponse_FieldSubPathValue)
}

func (s BatchGetPlanAssignmentsResponsePathSelectorPlanAssignmentsRegionalDistributions) WithArrayOfValues(values [][]*common.RegionalDistribution) *BatchGetPlanAssignmentsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetPlanAssignmentsResponse_FieldSubPathArrayOfValues)
}

func (s BatchGetPlanAssignmentsResponsePathSelectorPlanAssignmentsRegionalDistributions) WithItemValue(value *common.RegionalDistribution) *BatchGetPlanAssignmentsResponse_FieldSubPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*BatchGetPlanAssignmentsResponse_FieldSubPathArrayItemValue)
}

func (BatchGetPlanAssignmentsResponsePathSelectorPlanAssignmentsRegionalDistributions) Resource() BatchGetPlanAssignmentsResponsePathSelectorPlanAssignmentsRegionalDistributionsResource {
	return BatchGetPlanAssignmentsResponsePathSelectorPlanAssignmentsRegionalDistributionsResource{}
}

func (BatchGetPlanAssignmentsResponsePathSelectorPlanAssignmentsRegionalDistributions) LimitsByRegion() BatchGetPlanAssignmentsResponsePathSelectorPlanAssignmentsRegionalDistributionsLimitsByRegion {
	return BatchGetPlanAssignmentsResponsePathSelectorPlanAssignmentsRegionalDistributionsLimitsByRegion{}
}

type BatchGetPlanAssignmentsResponsePathSelectorPlanAssignmentsRegionalDistributionsResource struct{}

func (BatchGetPlanAssignmentsResponsePathSelectorPlanAssignmentsRegionalDistributionsResource) FieldPath() *BatchGetPlanAssignmentsResponse_FieldSubPath {
	return &BatchGetPlanAssignmentsResponse_FieldSubPath{
		selector: BatchGetPlanAssignmentsResponse_FieldPathSelectorPlanAssignments,
		subPath:  plan_assignment.NewPlanAssignmentFieldPathBuilder().RegionalDistributions().Resource().FieldPath(),
	}
}

func (s BatchGetPlanAssignmentsResponsePathSelectorPlanAssignmentsRegionalDistributionsResource) WithValue(value *meta_resource.Reference) *BatchGetPlanAssignmentsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetPlanAssignmentsResponse_FieldSubPathValue)
}

func (s BatchGetPlanAssignmentsResponsePathSelectorPlanAssignmentsRegionalDistributionsResource) WithArrayOfValues(values []*meta_resource.Reference) *BatchGetPlanAssignmentsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetPlanAssignmentsResponse_FieldSubPathArrayOfValues)
}

type BatchGetPlanAssignmentsResponsePathSelectorPlanAssignmentsRegionalDistributionsLimitsByRegion struct{}

func (BatchGetPlanAssignmentsResponsePathSelectorPlanAssignmentsRegionalDistributionsLimitsByRegion) FieldPath() *BatchGetPlanAssignmentsResponse_FieldSubPath {
	return &BatchGetPlanAssignmentsResponse_FieldSubPath{
		selector: BatchGetPlanAssignmentsResponse_FieldPathSelectorPlanAssignments,
		subPath:  plan_assignment.NewPlanAssignmentFieldPathBuilder().RegionalDistributions().LimitsByRegion().FieldPath(),
	}
}

func (s BatchGetPlanAssignmentsResponsePathSelectorPlanAssignmentsRegionalDistributionsLimitsByRegion) WithValue(value map[string]int64) *BatchGetPlanAssignmentsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetPlanAssignmentsResponse_FieldSubPathValue)
}

func (s BatchGetPlanAssignmentsResponsePathSelectorPlanAssignmentsRegionalDistributionsLimitsByRegion) WithArrayOfValues(values []map[string]int64) *BatchGetPlanAssignmentsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetPlanAssignmentsResponse_FieldSubPathArrayOfValues)
}

func (BatchGetPlanAssignmentsResponsePathSelectorPlanAssignmentsRegionalDistributionsLimitsByRegion) WithKey(key string) BatchGetPlanAssignmentsResponseMapPathSelectorPlanAssignmentsRegionalDistributionsLimitsByRegion {
	return BatchGetPlanAssignmentsResponseMapPathSelectorPlanAssignmentsRegionalDistributionsLimitsByRegion{key: key}
}

type BatchGetPlanAssignmentsResponseMapPathSelectorPlanAssignmentsRegionalDistributionsLimitsByRegion struct {
	key string
}

func (s BatchGetPlanAssignmentsResponseMapPathSelectorPlanAssignmentsRegionalDistributionsLimitsByRegion) FieldPath() *BatchGetPlanAssignmentsResponse_FieldSubPath {
	return &BatchGetPlanAssignmentsResponse_FieldSubPath{
		selector: BatchGetPlanAssignmentsResponse_FieldPathSelectorPlanAssignments,
		subPath:  plan_assignment.NewPlanAssignmentFieldPathBuilder().RegionalDistributions().LimitsByRegion().WithKey(s.key).FieldPath(),
	}
}

func (s BatchGetPlanAssignmentsResponseMapPathSelectorPlanAssignmentsRegionalDistributionsLimitsByRegion) WithValue(value int64) *BatchGetPlanAssignmentsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetPlanAssignmentsResponse_FieldSubPathValue)
}

func (s BatchGetPlanAssignmentsResponseMapPathSelectorPlanAssignmentsRegionalDistributionsLimitsByRegion) WithArrayOfValues(values []int64) *BatchGetPlanAssignmentsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetPlanAssignmentsResponse_FieldSubPathArrayOfValues)
}

type BatchGetPlanAssignmentsResponsePathSelectorPlanAssignmentsSource struct{}

func (BatchGetPlanAssignmentsResponsePathSelectorPlanAssignmentsSource) FieldPath() *BatchGetPlanAssignmentsResponse_FieldSubPath {
	return &BatchGetPlanAssignmentsResponse_FieldSubPath{
		selector: BatchGetPlanAssignmentsResponse_FieldPathSelectorPlanAssignments,
		subPath:  plan_assignment.NewPlanAssignmentFieldPathBuilder().Source().FieldPath(),
	}
}

func (s BatchGetPlanAssignmentsResponsePathSelectorPlanAssignmentsSource) WithValue(value *accepted_plan.Reference) *BatchGetPlanAssignmentsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetPlanAssignmentsResponse_FieldSubPathValue)
}

func (s BatchGetPlanAssignmentsResponsePathSelectorPlanAssignmentsSource) WithArrayOfValues(values []*accepted_plan.Reference) *BatchGetPlanAssignmentsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetPlanAssignmentsResponse_FieldSubPathArrayOfValues)
}

type BatchGetPlanAssignmentsResponsePathSelectorPlanAssignmentsMetadata struct{}

func (BatchGetPlanAssignmentsResponsePathSelectorPlanAssignmentsMetadata) FieldPath() *BatchGetPlanAssignmentsResponse_FieldSubPath {
	return &BatchGetPlanAssignmentsResponse_FieldSubPath{
		selector: BatchGetPlanAssignmentsResponse_FieldPathSelectorPlanAssignments,
		subPath:  plan_assignment.NewPlanAssignmentFieldPathBuilder().Metadata().FieldPath(),
	}
}

func (s BatchGetPlanAssignmentsResponsePathSelectorPlanAssignmentsMetadata) WithValue(value *ntt_meta.Meta) *BatchGetPlanAssignmentsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetPlanAssignmentsResponse_FieldSubPathValue)
}

func (s BatchGetPlanAssignmentsResponsePathSelectorPlanAssignmentsMetadata) WithArrayOfValues(values []*ntt_meta.Meta) *BatchGetPlanAssignmentsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetPlanAssignmentsResponse_FieldSubPathArrayOfValues)
}

func (BatchGetPlanAssignmentsResponsePathSelectorPlanAssignmentsMetadata) CreateTime() BatchGetPlanAssignmentsResponsePathSelectorPlanAssignmentsMetadataCreateTime {
	return BatchGetPlanAssignmentsResponsePathSelectorPlanAssignmentsMetadataCreateTime{}
}

func (BatchGetPlanAssignmentsResponsePathSelectorPlanAssignmentsMetadata) UpdateTime() BatchGetPlanAssignmentsResponsePathSelectorPlanAssignmentsMetadataUpdateTime {
	return BatchGetPlanAssignmentsResponsePathSelectorPlanAssignmentsMetadataUpdateTime{}
}

func (BatchGetPlanAssignmentsResponsePathSelectorPlanAssignmentsMetadata) Uuid() BatchGetPlanAssignmentsResponsePathSelectorPlanAssignmentsMetadataUuid {
	return BatchGetPlanAssignmentsResponsePathSelectorPlanAssignmentsMetadataUuid{}
}

func (BatchGetPlanAssignmentsResponsePathSelectorPlanAssignmentsMetadata) Tags() BatchGetPlanAssignmentsResponsePathSelectorPlanAssignmentsMetadataTags {
	return BatchGetPlanAssignmentsResponsePathSelectorPlanAssignmentsMetadataTags{}
}

func (BatchGetPlanAssignmentsResponsePathSelectorPlanAssignmentsMetadata) Labels() BatchGetPlanAssignmentsResponsePathSelectorPlanAssignmentsMetadataLabels {
	return BatchGetPlanAssignmentsResponsePathSelectorPlanAssignmentsMetadataLabels{}
}

func (BatchGetPlanAssignmentsResponsePathSelectorPlanAssignmentsMetadata) Annotations() BatchGetPlanAssignmentsResponsePathSelectorPlanAssignmentsMetadataAnnotations {
	return BatchGetPlanAssignmentsResponsePathSelectorPlanAssignmentsMetadataAnnotations{}
}

func (BatchGetPlanAssignmentsResponsePathSelectorPlanAssignmentsMetadata) Generation() BatchGetPlanAssignmentsResponsePathSelectorPlanAssignmentsMetadataGeneration {
	return BatchGetPlanAssignmentsResponsePathSelectorPlanAssignmentsMetadataGeneration{}
}

func (BatchGetPlanAssignmentsResponsePathSelectorPlanAssignmentsMetadata) ResourceVersion() BatchGetPlanAssignmentsResponsePathSelectorPlanAssignmentsMetadataResourceVersion {
	return BatchGetPlanAssignmentsResponsePathSelectorPlanAssignmentsMetadataResourceVersion{}
}

func (BatchGetPlanAssignmentsResponsePathSelectorPlanAssignmentsMetadata) OwnerReferences() BatchGetPlanAssignmentsResponsePathSelectorPlanAssignmentsMetadataOwnerReferences {
	return BatchGetPlanAssignmentsResponsePathSelectorPlanAssignmentsMetadataOwnerReferences{}
}

func (BatchGetPlanAssignmentsResponsePathSelectorPlanAssignmentsMetadata) Shards() BatchGetPlanAssignmentsResponsePathSelectorPlanAssignmentsMetadataShards {
	return BatchGetPlanAssignmentsResponsePathSelectorPlanAssignmentsMetadataShards{}
}

func (BatchGetPlanAssignmentsResponsePathSelectorPlanAssignmentsMetadata) Syncing() BatchGetPlanAssignmentsResponsePathSelectorPlanAssignmentsMetadataSyncing {
	return BatchGetPlanAssignmentsResponsePathSelectorPlanAssignmentsMetadataSyncing{}
}

type BatchGetPlanAssignmentsResponsePathSelectorPlanAssignmentsMetadataCreateTime struct{}

func (BatchGetPlanAssignmentsResponsePathSelectorPlanAssignmentsMetadataCreateTime) FieldPath() *BatchGetPlanAssignmentsResponse_FieldSubPath {
	return &BatchGetPlanAssignmentsResponse_FieldSubPath{
		selector: BatchGetPlanAssignmentsResponse_FieldPathSelectorPlanAssignments,
		subPath:  plan_assignment.NewPlanAssignmentFieldPathBuilder().Metadata().CreateTime().FieldPath(),
	}
}

func (s BatchGetPlanAssignmentsResponsePathSelectorPlanAssignmentsMetadataCreateTime) WithValue(value *timestamp.Timestamp) *BatchGetPlanAssignmentsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetPlanAssignmentsResponse_FieldSubPathValue)
}

func (s BatchGetPlanAssignmentsResponsePathSelectorPlanAssignmentsMetadataCreateTime) WithArrayOfValues(values []*timestamp.Timestamp) *BatchGetPlanAssignmentsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetPlanAssignmentsResponse_FieldSubPathArrayOfValues)
}

type BatchGetPlanAssignmentsResponsePathSelectorPlanAssignmentsMetadataUpdateTime struct{}

func (BatchGetPlanAssignmentsResponsePathSelectorPlanAssignmentsMetadataUpdateTime) FieldPath() *BatchGetPlanAssignmentsResponse_FieldSubPath {
	return &BatchGetPlanAssignmentsResponse_FieldSubPath{
		selector: BatchGetPlanAssignmentsResponse_FieldPathSelectorPlanAssignments,
		subPath:  plan_assignment.NewPlanAssignmentFieldPathBuilder().Metadata().UpdateTime().FieldPath(),
	}
}

func (s BatchGetPlanAssignmentsResponsePathSelectorPlanAssignmentsMetadataUpdateTime) WithValue(value *timestamp.Timestamp) *BatchGetPlanAssignmentsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetPlanAssignmentsResponse_FieldSubPathValue)
}

func (s BatchGetPlanAssignmentsResponsePathSelectorPlanAssignmentsMetadataUpdateTime) WithArrayOfValues(values []*timestamp.Timestamp) *BatchGetPlanAssignmentsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetPlanAssignmentsResponse_FieldSubPathArrayOfValues)
}

type BatchGetPlanAssignmentsResponsePathSelectorPlanAssignmentsMetadataUuid struct{}

func (BatchGetPlanAssignmentsResponsePathSelectorPlanAssignmentsMetadataUuid) FieldPath() *BatchGetPlanAssignmentsResponse_FieldSubPath {
	return &BatchGetPlanAssignmentsResponse_FieldSubPath{
		selector: BatchGetPlanAssignmentsResponse_FieldPathSelectorPlanAssignments,
		subPath:  plan_assignment.NewPlanAssignmentFieldPathBuilder().Metadata().Uuid().FieldPath(),
	}
}

func (s BatchGetPlanAssignmentsResponsePathSelectorPlanAssignmentsMetadataUuid) WithValue(value string) *BatchGetPlanAssignmentsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetPlanAssignmentsResponse_FieldSubPathValue)
}

func (s BatchGetPlanAssignmentsResponsePathSelectorPlanAssignmentsMetadataUuid) WithArrayOfValues(values []string) *BatchGetPlanAssignmentsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetPlanAssignmentsResponse_FieldSubPathArrayOfValues)
}

type BatchGetPlanAssignmentsResponsePathSelectorPlanAssignmentsMetadataTags struct{}

func (BatchGetPlanAssignmentsResponsePathSelectorPlanAssignmentsMetadataTags) FieldPath() *BatchGetPlanAssignmentsResponse_FieldSubPath {
	return &BatchGetPlanAssignmentsResponse_FieldSubPath{
		selector: BatchGetPlanAssignmentsResponse_FieldPathSelectorPlanAssignments,
		subPath:  plan_assignment.NewPlanAssignmentFieldPathBuilder().Metadata().Tags().FieldPath(),
	}
}

func (s BatchGetPlanAssignmentsResponsePathSelectorPlanAssignmentsMetadataTags) WithValue(value []string) *BatchGetPlanAssignmentsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetPlanAssignmentsResponse_FieldSubPathValue)
}

func (s BatchGetPlanAssignmentsResponsePathSelectorPlanAssignmentsMetadataTags) WithArrayOfValues(values [][]string) *BatchGetPlanAssignmentsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetPlanAssignmentsResponse_FieldSubPathArrayOfValues)
}

func (s BatchGetPlanAssignmentsResponsePathSelectorPlanAssignmentsMetadataTags) WithItemValue(value string) *BatchGetPlanAssignmentsResponse_FieldSubPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*BatchGetPlanAssignmentsResponse_FieldSubPathArrayItemValue)
}

type BatchGetPlanAssignmentsResponsePathSelectorPlanAssignmentsMetadataLabels struct{}

func (BatchGetPlanAssignmentsResponsePathSelectorPlanAssignmentsMetadataLabels) FieldPath() *BatchGetPlanAssignmentsResponse_FieldSubPath {
	return &BatchGetPlanAssignmentsResponse_FieldSubPath{
		selector: BatchGetPlanAssignmentsResponse_FieldPathSelectorPlanAssignments,
		subPath:  plan_assignment.NewPlanAssignmentFieldPathBuilder().Metadata().Labels().FieldPath(),
	}
}

func (s BatchGetPlanAssignmentsResponsePathSelectorPlanAssignmentsMetadataLabels) WithValue(value map[string]string) *BatchGetPlanAssignmentsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetPlanAssignmentsResponse_FieldSubPathValue)
}

func (s BatchGetPlanAssignmentsResponsePathSelectorPlanAssignmentsMetadataLabels) WithArrayOfValues(values []map[string]string) *BatchGetPlanAssignmentsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetPlanAssignmentsResponse_FieldSubPathArrayOfValues)
}

func (BatchGetPlanAssignmentsResponsePathSelectorPlanAssignmentsMetadataLabels) WithKey(key string) BatchGetPlanAssignmentsResponseMapPathSelectorPlanAssignmentsMetadataLabels {
	return BatchGetPlanAssignmentsResponseMapPathSelectorPlanAssignmentsMetadataLabels{key: key}
}

type BatchGetPlanAssignmentsResponseMapPathSelectorPlanAssignmentsMetadataLabels struct {
	key string
}

func (s BatchGetPlanAssignmentsResponseMapPathSelectorPlanAssignmentsMetadataLabels) FieldPath() *BatchGetPlanAssignmentsResponse_FieldSubPath {
	return &BatchGetPlanAssignmentsResponse_FieldSubPath{
		selector: BatchGetPlanAssignmentsResponse_FieldPathSelectorPlanAssignments,
		subPath:  plan_assignment.NewPlanAssignmentFieldPathBuilder().Metadata().Labels().WithKey(s.key).FieldPath(),
	}
}

func (s BatchGetPlanAssignmentsResponseMapPathSelectorPlanAssignmentsMetadataLabels) WithValue(value string) *BatchGetPlanAssignmentsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetPlanAssignmentsResponse_FieldSubPathValue)
}

func (s BatchGetPlanAssignmentsResponseMapPathSelectorPlanAssignmentsMetadataLabels) WithArrayOfValues(values []string) *BatchGetPlanAssignmentsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetPlanAssignmentsResponse_FieldSubPathArrayOfValues)
}

type BatchGetPlanAssignmentsResponsePathSelectorPlanAssignmentsMetadataAnnotations struct{}

func (BatchGetPlanAssignmentsResponsePathSelectorPlanAssignmentsMetadataAnnotations) FieldPath() *BatchGetPlanAssignmentsResponse_FieldSubPath {
	return &BatchGetPlanAssignmentsResponse_FieldSubPath{
		selector: BatchGetPlanAssignmentsResponse_FieldPathSelectorPlanAssignments,
		subPath:  plan_assignment.NewPlanAssignmentFieldPathBuilder().Metadata().Annotations().FieldPath(),
	}
}

func (s BatchGetPlanAssignmentsResponsePathSelectorPlanAssignmentsMetadataAnnotations) WithValue(value map[string]string) *BatchGetPlanAssignmentsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetPlanAssignmentsResponse_FieldSubPathValue)
}

func (s BatchGetPlanAssignmentsResponsePathSelectorPlanAssignmentsMetadataAnnotations) WithArrayOfValues(values []map[string]string) *BatchGetPlanAssignmentsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetPlanAssignmentsResponse_FieldSubPathArrayOfValues)
}

func (BatchGetPlanAssignmentsResponsePathSelectorPlanAssignmentsMetadataAnnotations) WithKey(key string) BatchGetPlanAssignmentsResponseMapPathSelectorPlanAssignmentsMetadataAnnotations {
	return BatchGetPlanAssignmentsResponseMapPathSelectorPlanAssignmentsMetadataAnnotations{key: key}
}

type BatchGetPlanAssignmentsResponseMapPathSelectorPlanAssignmentsMetadataAnnotations struct {
	key string
}

func (s BatchGetPlanAssignmentsResponseMapPathSelectorPlanAssignmentsMetadataAnnotations) FieldPath() *BatchGetPlanAssignmentsResponse_FieldSubPath {
	return &BatchGetPlanAssignmentsResponse_FieldSubPath{
		selector: BatchGetPlanAssignmentsResponse_FieldPathSelectorPlanAssignments,
		subPath:  plan_assignment.NewPlanAssignmentFieldPathBuilder().Metadata().Annotations().WithKey(s.key).FieldPath(),
	}
}

func (s BatchGetPlanAssignmentsResponseMapPathSelectorPlanAssignmentsMetadataAnnotations) WithValue(value string) *BatchGetPlanAssignmentsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetPlanAssignmentsResponse_FieldSubPathValue)
}

func (s BatchGetPlanAssignmentsResponseMapPathSelectorPlanAssignmentsMetadataAnnotations) WithArrayOfValues(values []string) *BatchGetPlanAssignmentsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetPlanAssignmentsResponse_FieldSubPathArrayOfValues)
}

type BatchGetPlanAssignmentsResponsePathSelectorPlanAssignmentsMetadataGeneration struct{}

func (BatchGetPlanAssignmentsResponsePathSelectorPlanAssignmentsMetadataGeneration) FieldPath() *BatchGetPlanAssignmentsResponse_FieldSubPath {
	return &BatchGetPlanAssignmentsResponse_FieldSubPath{
		selector: BatchGetPlanAssignmentsResponse_FieldPathSelectorPlanAssignments,
		subPath:  plan_assignment.NewPlanAssignmentFieldPathBuilder().Metadata().Generation().FieldPath(),
	}
}

func (s BatchGetPlanAssignmentsResponsePathSelectorPlanAssignmentsMetadataGeneration) WithValue(value int64) *BatchGetPlanAssignmentsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetPlanAssignmentsResponse_FieldSubPathValue)
}

func (s BatchGetPlanAssignmentsResponsePathSelectorPlanAssignmentsMetadataGeneration) WithArrayOfValues(values []int64) *BatchGetPlanAssignmentsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetPlanAssignmentsResponse_FieldSubPathArrayOfValues)
}

type BatchGetPlanAssignmentsResponsePathSelectorPlanAssignmentsMetadataResourceVersion struct{}

func (BatchGetPlanAssignmentsResponsePathSelectorPlanAssignmentsMetadataResourceVersion) FieldPath() *BatchGetPlanAssignmentsResponse_FieldSubPath {
	return &BatchGetPlanAssignmentsResponse_FieldSubPath{
		selector: BatchGetPlanAssignmentsResponse_FieldPathSelectorPlanAssignments,
		subPath:  plan_assignment.NewPlanAssignmentFieldPathBuilder().Metadata().ResourceVersion().FieldPath(),
	}
}

func (s BatchGetPlanAssignmentsResponsePathSelectorPlanAssignmentsMetadataResourceVersion) WithValue(value string) *BatchGetPlanAssignmentsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetPlanAssignmentsResponse_FieldSubPathValue)
}

func (s BatchGetPlanAssignmentsResponsePathSelectorPlanAssignmentsMetadataResourceVersion) WithArrayOfValues(values []string) *BatchGetPlanAssignmentsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetPlanAssignmentsResponse_FieldSubPathArrayOfValues)
}

type BatchGetPlanAssignmentsResponsePathSelectorPlanAssignmentsMetadataOwnerReferences struct{}

func (BatchGetPlanAssignmentsResponsePathSelectorPlanAssignmentsMetadataOwnerReferences) FieldPath() *BatchGetPlanAssignmentsResponse_FieldSubPath {
	return &BatchGetPlanAssignmentsResponse_FieldSubPath{
		selector: BatchGetPlanAssignmentsResponse_FieldPathSelectorPlanAssignments,
		subPath:  plan_assignment.NewPlanAssignmentFieldPathBuilder().Metadata().OwnerReferences().FieldPath(),
	}
}

func (s BatchGetPlanAssignmentsResponsePathSelectorPlanAssignmentsMetadataOwnerReferences) WithValue(value []*ntt_meta.OwnerReference) *BatchGetPlanAssignmentsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetPlanAssignmentsResponse_FieldSubPathValue)
}

func (s BatchGetPlanAssignmentsResponsePathSelectorPlanAssignmentsMetadataOwnerReferences) WithArrayOfValues(values [][]*ntt_meta.OwnerReference) *BatchGetPlanAssignmentsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetPlanAssignmentsResponse_FieldSubPathArrayOfValues)
}

func (s BatchGetPlanAssignmentsResponsePathSelectorPlanAssignmentsMetadataOwnerReferences) WithItemValue(value *ntt_meta.OwnerReference) *BatchGetPlanAssignmentsResponse_FieldSubPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*BatchGetPlanAssignmentsResponse_FieldSubPathArrayItemValue)
}

func (BatchGetPlanAssignmentsResponsePathSelectorPlanAssignmentsMetadataOwnerReferences) ApiVersion() BatchGetPlanAssignmentsResponsePathSelectorPlanAssignmentsMetadataOwnerReferencesApiVersion {
	return BatchGetPlanAssignmentsResponsePathSelectorPlanAssignmentsMetadataOwnerReferencesApiVersion{}
}

func (BatchGetPlanAssignmentsResponsePathSelectorPlanAssignmentsMetadataOwnerReferences) Kind() BatchGetPlanAssignmentsResponsePathSelectorPlanAssignmentsMetadataOwnerReferencesKind {
	return BatchGetPlanAssignmentsResponsePathSelectorPlanAssignmentsMetadataOwnerReferencesKind{}
}

func (BatchGetPlanAssignmentsResponsePathSelectorPlanAssignmentsMetadataOwnerReferences) Name() BatchGetPlanAssignmentsResponsePathSelectorPlanAssignmentsMetadataOwnerReferencesName {
	return BatchGetPlanAssignmentsResponsePathSelectorPlanAssignmentsMetadataOwnerReferencesName{}
}

func (BatchGetPlanAssignmentsResponsePathSelectorPlanAssignmentsMetadataOwnerReferences) Uid() BatchGetPlanAssignmentsResponsePathSelectorPlanAssignmentsMetadataOwnerReferencesUid {
	return BatchGetPlanAssignmentsResponsePathSelectorPlanAssignmentsMetadataOwnerReferencesUid{}
}

func (BatchGetPlanAssignmentsResponsePathSelectorPlanAssignmentsMetadataOwnerReferences) Controller() BatchGetPlanAssignmentsResponsePathSelectorPlanAssignmentsMetadataOwnerReferencesController {
	return BatchGetPlanAssignmentsResponsePathSelectorPlanAssignmentsMetadataOwnerReferencesController{}
}

func (BatchGetPlanAssignmentsResponsePathSelectorPlanAssignmentsMetadataOwnerReferences) BlockOwnerDeletion() BatchGetPlanAssignmentsResponsePathSelectorPlanAssignmentsMetadataOwnerReferencesBlockOwnerDeletion {
	return BatchGetPlanAssignmentsResponsePathSelectorPlanAssignmentsMetadataOwnerReferencesBlockOwnerDeletion{}
}

type BatchGetPlanAssignmentsResponsePathSelectorPlanAssignmentsMetadataOwnerReferencesApiVersion struct{}

func (BatchGetPlanAssignmentsResponsePathSelectorPlanAssignmentsMetadataOwnerReferencesApiVersion) FieldPath() *BatchGetPlanAssignmentsResponse_FieldSubPath {
	return &BatchGetPlanAssignmentsResponse_FieldSubPath{
		selector: BatchGetPlanAssignmentsResponse_FieldPathSelectorPlanAssignments,
		subPath:  plan_assignment.NewPlanAssignmentFieldPathBuilder().Metadata().OwnerReferences().ApiVersion().FieldPath(),
	}
}

func (s BatchGetPlanAssignmentsResponsePathSelectorPlanAssignmentsMetadataOwnerReferencesApiVersion) WithValue(value string) *BatchGetPlanAssignmentsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetPlanAssignmentsResponse_FieldSubPathValue)
}

func (s BatchGetPlanAssignmentsResponsePathSelectorPlanAssignmentsMetadataOwnerReferencesApiVersion) WithArrayOfValues(values []string) *BatchGetPlanAssignmentsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetPlanAssignmentsResponse_FieldSubPathArrayOfValues)
}

type BatchGetPlanAssignmentsResponsePathSelectorPlanAssignmentsMetadataOwnerReferencesKind struct{}

func (BatchGetPlanAssignmentsResponsePathSelectorPlanAssignmentsMetadataOwnerReferencesKind) FieldPath() *BatchGetPlanAssignmentsResponse_FieldSubPath {
	return &BatchGetPlanAssignmentsResponse_FieldSubPath{
		selector: BatchGetPlanAssignmentsResponse_FieldPathSelectorPlanAssignments,
		subPath:  plan_assignment.NewPlanAssignmentFieldPathBuilder().Metadata().OwnerReferences().Kind().FieldPath(),
	}
}

func (s BatchGetPlanAssignmentsResponsePathSelectorPlanAssignmentsMetadataOwnerReferencesKind) WithValue(value string) *BatchGetPlanAssignmentsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetPlanAssignmentsResponse_FieldSubPathValue)
}

func (s BatchGetPlanAssignmentsResponsePathSelectorPlanAssignmentsMetadataOwnerReferencesKind) WithArrayOfValues(values []string) *BatchGetPlanAssignmentsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetPlanAssignmentsResponse_FieldSubPathArrayOfValues)
}

type BatchGetPlanAssignmentsResponsePathSelectorPlanAssignmentsMetadataOwnerReferencesName struct{}

func (BatchGetPlanAssignmentsResponsePathSelectorPlanAssignmentsMetadataOwnerReferencesName) FieldPath() *BatchGetPlanAssignmentsResponse_FieldSubPath {
	return &BatchGetPlanAssignmentsResponse_FieldSubPath{
		selector: BatchGetPlanAssignmentsResponse_FieldPathSelectorPlanAssignments,
		subPath:  plan_assignment.NewPlanAssignmentFieldPathBuilder().Metadata().OwnerReferences().Name().FieldPath(),
	}
}

func (s BatchGetPlanAssignmentsResponsePathSelectorPlanAssignmentsMetadataOwnerReferencesName) WithValue(value string) *BatchGetPlanAssignmentsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetPlanAssignmentsResponse_FieldSubPathValue)
}

func (s BatchGetPlanAssignmentsResponsePathSelectorPlanAssignmentsMetadataOwnerReferencesName) WithArrayOfValues(values []string) *BatchGetPlanAssignmentsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetPlanAssignmentsResponse_FieldSubPathArrayOfValues)
}

type BatchGetPlanAssignmentsResponsePathSelectorPlanAssignmentsMetadataOwnerReferencesUid struct{}

func (BatchGetPlanAssignmentsResponsePathSelectorPlanAssignmentsMetadataOwnerReferencesUid) FieldPath() *BatchGetPlanAssignmentsResponse_FieldSubPath {
	return &BatchGetPlanAssignmentsResponse_FieldSubPath{
		selector: BatchGetPlanAssignmentsResponse_FieldPathSelectorPlanAssignments,
		subPath:  plan_assignment.NewPlanAssignmentFieldPathBuilder().Metadata().OwnerReferences().Uid().FieldPath(),
	}
}

func (s BatchGetPlanAssignmentsResponsePathSelectorPlanAssignmentsMetadataOwnerReferencesUid) WithValue(value string) *BatchGetPlanAssignmentsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetPlanAssignmentsResponse_FieldSubPathValue)
}

func (s BatchGetPlanAssignmentsResponsePathSelectorPlanAssignmentsMetadataOwnerReferencesUid) WithArrayOfValues(values []string) *BatchGetPlanAssignmentsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetPlanAssignmentsResponse_FieldSubPathArrayOfValues)
}

type BatchGetPlanAssignmentsResponsePathSelectorPlanAssignmentsMetadataOwnerReferencesController struct{}

func (BatchGetPlanAssignmentsResponsePathSelectorPlanAssignmentsMetadataOwnerReferencesController) FieldPath() *BatchGetPlanAssignmentsResponse_FieldSubPath {
	return &BatchGetPlanAssignmentsResponse_FieldSubPath{
		selector: BatchGetPlanAssignmentsResponse_FieldPathSelectorPlanAssignments,
		subPath:  plan_assignment.NewPlanAssignmentFieldPathBuilder().Metadata().OwnerReferences().Controller().FieldPath(),
	}
}

func (s BatchGetPlanAssignmentsResponsePathSelectorPlanAssignmentsMetadataOwnerReferencesController) WithValue(value bool) *BatchGetPlanAssignmentsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetPlanAssignmentsResponse_FieldSubPathValue)
}

func (s BatchGetPlanAssignmentsResponsePathSelectorPlanAssignmentsMetadataOwnerReferencesController) WithArrayOfValues(values []bool) *BatchGetPlanAssignmentsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetPlanAssignmentsResponse_FieldSubPathArrayOfValues)
}

type BatchGetPlanAssignmentsResponsePathSelectorPlanAssignmentsMetadataOwnerReferencesBlockOwnerDeletion struct{}

func (BatchGetPlanAssignmentsResponsePathSelectorPlanAssignmentsMetadataOwnerReferencesBlockOwnerDeletion) FieldPath() *BatchGetPlanAssignmentsResponse_FieldSubPath {
	return &BatchGetPlanAssignmentsResponse_FieldSubPath{
		selector: BatchGetPlanAssignmentsResponse_FieldPathSelectorPlanAssignments,
		subPath:  plan_assignment.NewPlanAssignmentFieldPathBuilder().Metadata().OwnerReferences().BlockOwnerDeletion().FieldPath(),
	}
}

func (s BatchGetPlanAssignmentsResponsePathSelectorPlanAssignmentsMetadataOwnerReferencesBlockOwnerDeletion) WithValue(value bool) *BatchGetPlanAssignmentsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetPlanAssignmentsResponse_FieldSubPathValue)
}

func (s BatchGetPlanAssignmentsResponsePathSelectorPlanAssignmentsMetadataOwnerReferencesBlockOwnerDeletion) WithArrayOfValues(values []bool) *BatchGetPlanAssignmentsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetPlanAssignmentsResponse_FieldSubPathArrayOfValues)
}

type BatchGetPlanAssignmentsResponsePathSelectorPlanAssignmentsMetadataShards struct{}

func (BatchGetPlanAssignmentsResponsePathSelectorPlanAssignmentsMetadataShards) FieldPath() *BatchGetPlanAssignmentsResponse_FieldSubPath {
	return &BatchGetPlanAssignmentsResponse_FieldSubPath{
		selector: BatchGetPlanAssignmentsResponse_FieldPathSelectorPlanAssignments,
		subPath:  plan_assignment.NewPlanAssignmentFieldPathBuilder().Metadata().Shards().FieldPath(),
	}
}

func (s BatchGetPlanAssignmentsResponsePathSelectorPlanAssignmentsMetadataShards) WithValue(value map[string]int64) *BatchGetPlanAssignmentsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetPlanAssignmentsResponse_FieldSubPathValue)
}

func (s BatchGetPlanAssignmentsResponsePathSelectorPlanAssignmentsMetadataShards) WithArrayOfValues(values []map[string]int64) *BatchGetPlanAssignmentsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetPlanAssignmentsResponse_FieldSubPathArrayOfValues)
}

func (BatchGetPlanAssignmentsResponsePathSelectorPlanAssignmentsMetadataShards) WithKey(key string) BatchGetPlanAssignmentsResponseMapPathSelectorPlanAssignmentsMetadataShards {
	return BatchGetPlanAssignmentsResponseMapPathSelectorPlanAssignmentsMetadataShards{key: key}
}

type BatchGetPlanAssignmentsResponseMapPathSelectorPlanAssignmentsMetadataShards struct {
	key string
}

func (s BatchGetPlanAssignmentsResponseMapPathSelectorPlanAssignmentsMetadataShards) FieldPath() *BatchGetPlanAssignmentsResponse_FieldSubPath {
	return &BatchGetPlanAssignmentsResponse_FieldSubPath{
		selector: BatchGetPlanAssignmentsResponse_FieldPathSelectorPlanAssignments,
		subPath:  plan_assignment.NewPlanAssignmentFieldPathBuilder().Metadata().Shards().WithKey(s.key).FieldPath(),
	}
}

func (s BatchGetPlanAssignmentsResponseMapPathSelectorPlanAssignmentsMetadataShards) WithValue(value int64) *BatchGetPlanAssignmentsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetPlanAssignmentsResponse_FieldSubPathValue)
}

func (s BatchGetPlanAssignmentsResponseMapPathSelectorPlanAssignmentsMetadataShards) WithArrayOfValues(values []int64) *BatchGetPlanAssignmentsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetPlanAssignmentsResponse_FieldSubPathArrayOfValues)
}

type BatchGetPlanAssignmentsResponsePathSelectorPlanAssignmentsMetadataSyncing struct{}

func (BatchGetPlanAssignmentsResponsePathSelectorPlanAssignmentsMetadataSyncing) FieldPath() *BatchGetPlanAssignmentsResponse_FieldSubPath {
	return &BatchGetPlanAssignmentsResponse_FieldSubPath{
		selector: BatchGetPlanAssignmentsResponse_FieldPathSelectorPlanAssignments,
		subPath:  plan_assignment.NewPlanAssignmentFieldPathBuilder().Metadata().Syncing().FieldPath(),
	}
}

func (s BatchGetPlanAssignmentsResponsePathSelectorPlanAssignmentsMetadataSyncing) WithValue(value *ntt_meta.SyncingMeta) *BatchGetPlanAssignmentsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetPlanAssignmentsResponse_FieldSubPathValue)
}

func (s BatchGetPlanAssignmentsResponsePathSelectorPlanAssignmentsMetadataSyncing) WithArrayOfValues(values []*ntt_meta.SyncingMeta) *BatchGetPlanAssignmentsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetPlanAssignmentsResponse_FieldSubPathArrayOfValues)
}

func (BatchGetPlanAssignmentsResponsePathSelectorPlanAssignmentsMetadataSyncing) OwningRegion() BatchGetPlanAssignmentsResponsePathSelectorPlanAssignmentsMetadataSyncingOwningRegion {
	return BatchGetPlanAssignmentsResponsePathSelectorPlanAssignmentsMetadataSyncingOwningRegion{}
}

func (BatchGetPlanAssignmentsResponsePathSelectorPlanAssignmentsMetadataSyncing) Regions() BatchGetPlanAssignmentsResponsePathSelectorPlanAssignmentsMetadataSyncingRegions {
	return BatchGetPlanAssignmentsResponsePathSelectorPlanAssignmentsMetadataSyncingRegions{}
}

type BatchGetPlanAssignmentsResponsePathSelectorPlanAssignmentsMetadataSyncingOwningRegion struct{}

func (BatchGetPlanAssignmentsResponsePathSelectorPlanAssignmentsMetadataSyncingOwningRegion) FieldPath() *BatchGetPlanAssignmentsResponse_FieldSubPath {
	return &BatchGetPlanAssignmentsResponse_FieldSubPath{
		selector: BatchGetPlanAssignmentsResponse_FieldPathSelectorPlanAssignments,
		subPath:  plan_assignment.NewPlanAssignmentFieldPathBuilder().Metadata().Syncing().OwningRegion().FieldPath(),
	}
}

func (s BatchGetPlanAssignmentsResponsePathSelectorPlanAssignmentsMetadataSyncingOwningRegion) WithValue(value string) *BatchGetPlanAssignmentsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetPlanAssignmentsResponse_FieldSubPathValue)
}

func (s BatchGetPlanAssignmentsResponsePathSelectorPlanAssignmentsMetadataSyncingOwningRegion) WithArrayOfValues(values []string) *BatchGetPlanAssignmentsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetPlanAssignmentsResponse_FieldSubPathArrayOfValues)
}

type BatchGetPlanAssignmentsResponsePathSelectorPlanAssignmentsMetadataSyncingRegions struct{}

func (BatchGetPlanAssignmentsResponsePathSelectorPlanAssignmentsMetadataSyncingRegions) FieldPath() *BatchGetPlanAssignmentsResponse_FieldSubPath {
	return &BatchGetPlanAssignmentsResponse_FieldSubPath{
		selector: BatchGetPlanAssignmentsResponse_FieldPathSelectorPlanAssignments,
		subPath:  plan_assignment.NewPlanAssignmentFieldPathBuilder().Metadata().Syncing().Regions().FieldPath(),
	}
}

func (s BatchGetPlanAssignmentsResponsePathSelectorPlanAssignmentsMetadataSyncingRegions) WithValue(value []string) *BatchGetPlanAssignmentsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetPlanAssignmentsResponse_FieldSubPathValue)
}

func (s BatchGetPlanAssignmentsResponsePathSelectorPlanAssignmentsMetadataSyncingRegions) WithArrayOfValues(values [][]string) *BatchGetPlanAssignmentsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetPlanAssignmentsResponse_FieldSubPathArrayOfValues)
}

func (s BatchGetPlanAssignmentsResponsePathSelectorPlanAssignmentsMetadataSyncingRegions) WithItemValue(value string) *BatchGetPlanAssignmentsResponse_FieldSubPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*BatchGetPlanAssignmentsResponse_FieldSubPathArrayItemValue)
}

type BatchGetPlanAssignmentsResponsePathSelectorMissing struct{}

func (BatchGetPlanAssignmentsResponsePathSelectorMissing) FieldPath() *BatchGetPlanAssignmentsResponse_FieldTerminalPath {
	return &BatchGetPlanAssignmentsResponse_FieldTerminalPath{selector: BatchGetPlanAssignmentsResponse_FieldPathSelectorMissing}
}

func (s BatchGetPlanAssignmentsResponsePathSelectorMissing) WithValue(value []*plan_assignment.Reference) *BatchGetPlanAssignmentsResponse_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetPlanAssignmentsResponse_FieldTerminalPathValue)
}

func (s BatchGetPlanAssignmentsResponsePathSelectorMissing) WithArrayOfValues(values [][]*plan_assignment.Reference) *BatchGetPlanAssignmentsResponse_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetPlanAssignmentsResponse_FieldTerminalPathArrayOfValues)
}

func (s BatchGetPlanAssignmentsResponsePathSelectorMissing) WithItemValue(value *plan_assignment.Reference) *BatchGetPlanAssignmentsResponse_FieldTerminalPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*BatchGetPlanAssignmentsResponse_FieldTerminalPathArrayItemValue)
}

type ListPlanAssignmentsRequestFieldPathBuilder struct{}

func NewListPlanAssignmentsRequestFieldPathBuilder() ListPlanAssignmentsRequestFieldPathBuilder {
	return ListPlanAssignmentsRequestFieldPathBuilder{}
}
func (ListPlanAssignmentsRequestFieldPathBuilder) Parent() ListPlanAssignmentsRequestPathSelectorParent {
	return ListPlanAssignmentsRequestPathSelectorParent{}
}
func (ListPlanAssignmentsRequestFieldPathBuilder) PageSize() ListPlanAssignmentsRequestPathSelectorPageSize {
	return ListPlanAssignmentsRequestPathSelectorPageSize{}
}
func (ListPlanAssignmentsRequestFieldPathBuilder) PageToken() ListPlanAssignmentsRequestPathSelectorPageToken {
	return ListPlanAssignmentsRequestPathSelectorPageToken{}
}
func (ListPlanAssignmentsRequestFieldPathBuilder) OrderBy() ListPlanAssignmentsRequestPathSelectorOrderBy {
	return ListPlanAssignmentsRequestPathSelectorOrderBy{}
}
func (ListPlanAssignmentsRequestFieldPathBuilder) Filter() ListPlanAssignmentsRequestPathSelectorFilter {
	return ListPlanAssignmentsRequestPathSelectorFilter{}
}
func (ListPlanAssignmentsRequestFieldPathBuilder) FieldMask() ListPlanAssignmentsRequestPathSelectorFieldMask {
	return ListPlanAssignmentsRequestPathSelectorFieldMask{}
}
func (ListPlanAssignmentsRequestFieldPathBuilder) View() ListPlanAssignmentsRequestPathSelectorView {
	return ListPlanAssignmentsRequestPathSelectorView{}
}

type ListPlanAssignmentsRequestPathSelectorParent struct{}

func (ListPlanAssignmentsRequestPathSelectorParent) FieldPath() *ListPlanAssignmentsRequest_FieldTerminalPath {
	return &ListPlanAssignmentsRequest_FieldTerminalPath{selector: ListPlanAssignmentsRequest_FieldPathSelectorParent}
}

func (s ListPlanAssignmentsRequestPathSelectorParent) WithValue(value *plan_assignment.ParentName) *ListPlanAssignmentsRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*ListPlanAssignmentsRequest_FieldTerminalPathValue)
}

func (s ListPlanAssignmentsRequestPathSelectorParent) WithArrayOfValues(values []*plan_assignment.ParentName) *ListPlanAssignmentsRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListPlanAssignmentsRequest_FieldTerminalPathArrayOfValues)
}

type ListPlanAssignmentsRequestPathSelectorPageSize struct{}

func (ListPlanAssignmentsRequestPathSelectorPageSize) FieldPath() *ListPlanAssignmentsRequest_FieldTerminalPath {
	return &ListPlanAssignmentsRequest_FieldTerminalPath{selector: ListPlanAssignmentsRequest_FieldPathSelectorPageSize}
}

func (s ListPlanAssignmentsRequestPathSelectorPageSize) WithValue(value int32) *ListPlanAssignmentsRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*ListPlanAssignmentsRequest_FieldTerminalPathValue)
}

func (s ListPlanAssignmentsRequestPathSelectorPageSize) WithArrayOfValues(values []int32) *ListPlanAssignmentsRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListPlanAssignmentsRequest_FieldTerminalPathArrayOfValues)
}

type ListPlanAssignmentsRequestPathSelectorPageToken struct{}

func (ListPlanAssignmentsRequestPathSelectorPageToken) FieldPath() *ListPlanAssignmentsRequest_FieldTerminalPath {
	return &ListPlanAssignmentsRequest_FieldTerminalPath{selector: ListPlanAssignmentsRequest_FieldPathSelectorPageToken}
}

func (s ListPlanAssignmentsRequestPathSelectorPageToken) WithValue(value *plan_assignment.PagerCursor) *ListPlanAssignmentsRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*ListPlanAssignmentsRequest_FieldTerminalPathValue)
}

func (s ListPlanAssignmentsRequestPathSelectorPageToken) WithArrayOfValues(values []*plan_assignment.PagerCursor) *ListPlanAssignmentsRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListPlanAssignmentsRequest_FieldTerminalPathArrayOfValues)
}

type ListPlanAssignmentsRequestPathSelectorOrderBy struct{}

func (ListPlanAssignmentsRequestPathSelectorOrderBy) FieldPath() *ListPlanAssignmentsRequest_FieldTerminalPath {
	return &ListPlanAssignmentsRequest_FieldTerminalPath{selector: ListPlanAssignmentsRequest_FieldPathSelectorOrderBy}
}

func (s ListPlanAssignmentsRequestPathSelectorOrderBy) WithValue(value *plan_assignment.OrderBy) *ListPlanAssignmentsRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*ListPlanAssignmentsRequest_FieldTerminalPathValue)
}

func (s ListPlanAssignmentsRequestPathSelectorOrderBy) WithArrayOfValues(values []*plan_assignment.OrderBy) *ListPlanAssignmentsRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListPlanAssignmentsRequest_FieldTerminalPathArrayOfValues)
}

type ListPlanAssignmentsRequestPathSelectorFilter struct{}

func (ListPlanAssignmentsRequestPathSelectorFilter) FieldPath() *ListPlanAssignmentsRequest_FieldTerminalPath {
	return &ListPlanAssignmentsRequest_FieldTerminalPath{selector: ListPlanAssignmentsRequest_FieldPathSelectorFilter}
}

func (s ListPlanAssignmentsRequestPathSelectorFilter) WithValue(value *plan_assignment.Filter) *ListPlanAssignmentsRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*ListPlanAssignmentsRequest_FieldTerminalPathValue)
}

func (s ListPlanAssignmentsRequestPathSelectorFilter) WithArrayOfValues(values []*plan_assignment.Filter) *ListPlanAssignmentsRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListPlanAssignmentsRequest_FieldTerminalPathArrayOfValues)
}

type ListPlanAssignmentsRequestPathSelectorFieldMask struct{}

func (ListPlanAssignmentsRequestPathSelectorFieldMask) FieldPath() *ListPlanAssignmentsRequest_FieldTerminalPath {
	return &ListPlanAssignmentsRequest_FieldTerminalPath{selector: ListPlanAssignmentsRequest_FieldPathSelectorFieldMask}
}

func (s ListPlanAssignmentsRequestPathSelectorFieldMask) WithValue(value *plan_assignment.PlanAssignment_FieldMask) *ListPlanAssignmentsRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*ListPlanAssignmentsRequest_FieldTerminalPathValue)
}

func (s ListPlanAssignmentsRequestPathSelectorFieldMask) WithArrayOfValues(values []*plan_assignment.PlanAssignment_FieldMask) *ListPlanAssignmentsRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListPlanAssignmentsRequest_FieldTerminalPathArrayOfValues)
}

type ListPlanAssignmentsRequestPathSelectorView struct{}

func (ListPlanAssignmentsRequestPathSelectorView) FieldPath() *ListPlanAssignmentsRequest_FieldTerminalPath {
	return &ListPlanAssignmentsRequest_FieldTerminalPath{selector: ListPlanAssignmentsRequest_FieldPathSelectorView}
}

func (s ListPlanAssignmentsRequestPathSelectorView) WithValue(value view.View) *ListPlanAssignmentsRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*ListPlanAssignmentsRequest_FieldTerminalPathValue)
}

func (s ListPlanAssignmentsRequestPathSelectorView) WithArrayOfValues(values []view.View) *ListPlanAssignmentsRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListPlanAssignmentsRequest_FieldTerminalPathArrayOfValues)
}

type ListPlanAssignmentsResponseFieldPathBuilder struct{}

func NewListPlanAssignmentsResponseFieldPathBuilder() ListPlanAssignmentsResponseFieldPathBuilder {
	return ListPlanAssignmentsResponseFieldPathBuilder{}
}
func (ListPlanAssignmentsResponseFieldPathBuilder) PlanAssignments() ListPlanAssignmentsResponsePathSelectorPlanAssignments {
	return ListPlanAssignmentsResponsePathSelectorPlanAssignments{}
}
func (ListPlanAssignmentsResponseFieldPathBuilder) PrevPageToken() ListPlanAssignmentsResponsePathSelectorPrevPageToken {
	return ListPlanAssignmentsResponsePathSelectorPrevPageToken{}
}
func (ListPlanAssignmentsResponseFieldPathBuilder) NextPageToken() ListPlanAssignmentsResponsePathSelectorNextPageToken {
	return ListPlanAssignmentsResponsePathSelectorNextPageToken{}
}

type ListPlanAssignmentsResponsePathSelectorPlanAssignments struct{}

func (ListPlanAssignmentsResponsePathSelectorPlanAssignments) FieldPath() *ListPlanAssignmentsResponse_FieldTerminalPath {
	return &ListPlanAssignmentsResponse_FieldTerminalPath{selector: ListPlanAssignmentsResponse_FieldPathSelectorPlanAssignments}
}

func (s ListPlanAssignmentsResponsePathSelectorPlanAssignments) WithValue(value []*plan_assignment.PlanAssignment) *ListPlanAssignmentsResponse_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*ListPlanAssignmentsResponse_FieldTerminalPathValue)
}

func (s ListPlanAssignmentsResponsePathSelectorPlanAssignments) WithArrayOfValues(values [][]*plan_assignment.PlanAssignment) *ListPlanAssignmentsResponse_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListPlanAssignmentsResponse_FieldTerminalPathArrayOfValues)
}

func (s ListPlanAssignmentsResponsePathSelectorPlanAssignments) WithItemValue(value *plan_assignment.PlanAssignment) *ListPlanAssignmentsResponse_FieldTerminalPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*ListPlanAssignmentsResponse_FieldTerminalPathArrayItemValue)
}
func (ListPlanAssignmentsResponsePathSelectorPlanAssignments) WithSubPath(subPath plan_assignment.PlanAssignment_FieldPath) *ListPlanAssignmentsResponse_FieldSubPath {
	return &ListPlanAssignmentsResponse_FieldSubPath{selector: ListPlanAssignmentsResponse_FieldPathSelectorPlanAssignments, subPath: subPath}
}

func (s ListPlanAssignmentsResponsePathSelectorPlanAssignments) WithSubValue(subPathValue plan_assignment.PlanAssignment_FieldPathValue) *ListPlanAssignmentsResponse_FieldSubPathValue {
	return &ListPlanAssignmentsResponse_FieldSubPathValue{ListPlanAssignmentsResponse_FieldPath: s.WithSubPath(subPathValue), subPathValue: subPathValue}
}

func (s ListPlanAssignmentsResponsePathSelectorPlanAssignments) WithSubArrayOfValues(subPathArrayOfValues plan_assignment.PlanAssignment_FieldPathArrayOfValues) *ListPlanAssignmentsResponse_FieldSubPathArrayOfValues {
	return &ListPlanAssignmentsResponse_FieldSubPathArrayOfValues{ListPlanAssignmentsResponse_FieldPath: s.WithSubPath(subPathArrayOfValues), subPathArrayOfValues: subPathArrayOfValues}
}

func (s ListPlanAssignmentsResponsePathSelectorPlanAssignments) WithSubArrayItemValue(subPathArrayItemValue plan_assignment.PlanAssignment_FieldPathArrayItemValue) *ListPlanAssignmentsResponse_FieldSubPathArrayItemValue {
	return &ListPlanAssignmentsResponse_FieldSubPathArrayItemValue{ListPlanAssignmentsResponse_FieldPath: s.WithSubPath(subPathArrayItemValue), subPathItemValue: subPathArrayItemValue}
}

func (ListPlanAssignmentsResponsePathSelectorPlanAssignments) Name() ListPlanAssignmentsResponsePathSelectorPlanAssignmentsName {
	return ListPlanAssignmentsResponsePathSelectorPlanAssignmentsName{}
}

func (ListPlanAssignmentsResponsePathSelectorPlanAssignments) Plan() ListPlanAssignmentsResponsePathSelectorPlanAssignmentsPlan {
	return ListPlanAssignmentsResponsePathSelectorPlanAssignmentsPlan{}
}

func (ListPlanAssignmentsResponsePathSelectorPlanAssignments) Service() ListPlanAssignmentsResponsePathSelectorPlanAssignmentsService {
	return ListPlanAssignmentsResponsePathSelectorPlanAssignmentsService{}
}

func (ListPlanAssignmentsResponsePathSelectorPlanAssignments) Extensions() ListPlanAssignmentsResponsePathSelectorPlanAssignmentsExtensions {
	return ListPlanAssignmentsResponsePathSelectorPlanAssignmentsExtensions{}
}

func (ListPlanAssignmentsResponsePathSelectorPlanAssignments) RegionalDistributions() ListPlanAssignmentsResponsePathSelectorPlanAssignmentsRegionalDistributions {
	return ListPlanAssignmentsResponsePathSelectorPlanAssignmentsRegionalDistributions{}
}

func (ListPlanAssignmentsResponsePathSelectorPlanAssignments) Source() ListPlanAssignmentsResponsePathSelectorPlanAssignmentsSource {
	return ListPlanAssignmentsResponsePathSelectorPlanAssignmentsSource{}
}

func (ListPlanAssignmentsResponsePathSelectorPlanAssignments) Metadata() ListPlanAssignmentsResponsePathSelectorPlanAssignmentsMetadata {
	return ListPlanAssignmentsResponsePathSelectorPlanAssignmentsMetadata{}
}

type ListPlanAssignmentsResponsePathSelectorPlanAssignmentsName struct{}

func (ListPlanAssignmentsResponsePathSelectorPlanAssignmentsName) FieldPath() *ListPlanAssignmentsResponse_FieldSubPath {
	return &ListPlanAssignmentsResponse_FieldSubPath{
		selector: ListPlanAssignmentsResponse_FieldPathSelectorPlanAssignments,
		subPath:  plan_assignment.NewPlanAssignmentFieldPathBuilder().Name().FieldPath(),
	}
}

func (s ListPlanAssignmentsResponsePathSelectorPlanAssignmentsName) WithValue(value *plan_assignment.Name) *ListPlanAssignmentsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListPlanAssignmentsResponse_FieldSubPathValue)
}

func (s ListPlanAssignmentsResponsePathSelectorPlanAssignmentsName) WithArrayOfValues(values []*plan_assignment.Name) *ListPlanAssignmentsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListPlanAssignmentsResponse_FieldSubPathArrayOfValues)
}

type ListPlanAssignmentsResponsePathSelectorPlanAssignmentsPlan struct{}

func (ListPlanAssignmentsResponsePathSelectorPlanAssignmentsPlan) FieldPath() *ListPlanAssignmentsResponse_FieldSubPath {
	return &ListPlanAssignmentsResponse_FieldSubPath{
		selector: ListPlanAssignmentsResponse_FieldPathSelectorPlanAssignments,
		subPath:  plan_assignment.NewPlanAssignmentFieldPathBuilder().Plan().FieldPath(),
	}
}

func (s ListPlanAssignmentsResponsePathSelectorPlanAssignmentsPlan) WithValue(value *plan.Reference) *ListPlanAssignmentsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListPlanAssignmentsResponse_FieldSubPathValue)
}

func (s ListPlanAssignmentsResponsePathSelectorPlanAssignmentsPlan) WithArrayOfValues(values []*plan.Reference) *ListPlanAssignmentsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListPlanAssignmentsResponse_FieldSubPathArrayOfValues)
}

type ListPlanAssignmentsResponsePathSelectorPlanAssignmentsService struct{}

func (ListPlanAssignmentsResponsePathSelectorPlanAssignmentsService) FieldPath() *ListPlanAssignmentsResponse_FieldSubPath {
	return &ListPlanAssignmentsResponse_FieldSubPath{
		selector: ListPlanAssignmentsResponse_FieldPathSelectorPlanAssignments,
		subPath:  plan_assignment.NewPlanAssignmentFieldPathBuilder().Service().FieldPath(),
	}
}

func (s ListPlanAssignmentsResponsePathSelectorPlanAssignmentsService) WithValue(value *meta_service.Reference) *ListPlanAssignmentsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListPlanAssignmentsResponse_FieldSubPathValue)
}

func (s ListPlanAssignmentsResponsePathSelectorPlanAssignmentsService) WithArrayOfValues(values []*meta_service.Reference) *ListPlanAssignmentsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListPlanAssignmentsResponse_FieldSubPathArrayOfValues)
}

type ListPlanAssignmentsResponsePathSelectorPlanAssignmentsExtensions struct{}

func (ListPlanAssignmentsResponsePathSelectorPlanAssignmentsExtensions) FieldPath() *ListPlanAssignmentsResponse_FieldSubPath {
	return &ListPlanAssignmentsResponse_FieldSubPath{
		selector: ListPlanAssignmentsResponse_FieldPathSelectorPlanAssignments,
		subPath:  plan_assignment.NewPlanAssignmentFieldPathBuilder().Extensions().FieldPath(),
	}
}

func (s ListPlanAssignmentsResponsePathSelectorPlanAssignmentsExtensions) WithValue(value []*common.Allowance) *ListPlanAssignmentsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListPlanAssignmentsResponse_FieldSubPathValue)
}

func (s ListPlanAssignmentsResponsePathSelectorPlanAssignmentsExtensions) WithArrayOfValues(values [][]*common.Allowance) *ListPlanAssignmentsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListPlanAssignmentsResponse_FieldSubPathArrayOfValues)
}

func (s ListPlanAssignmentsResponsePathSelectorPlanAssignmentsExtensions) WithItemValue(value *common.Allowance) *ListPlanAssignmentsResponse_FieldSubPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*ListPlanAssignmentsResponse_FieldSubPathArrayItemValue)
}

func (ListPlanAssignmentsResponsePathSelectorPlanAssignmentsExtensions) Resource() ListPlanAssignmentsResponsePathSelectorPlanAssignmentsExtensionsResource {
	return ListPlanAssignmentsResponsePathSelectorPlanAssignmentsExtensionsResource{}
}

func (ListPlanAssignmentsResponsePathSelectorPlanAssignmentsExtensions) Value() ListPlanAssignmentsResponsePathSelectorPlanAssignmentsExtensionsValue {
	return ListPlanAssignmentsResponsePathSelectorPlanAssignmentsExtensionsValue{}
}

type ListPlanAssignmentsResponsePathSelectorPlanAssignmentsExtensionsResource struct{}

func (ListPlanAssignmentsResponsePathSelectorPlanAssignmentsExtensionsResource) FieldPath() *ListPlanAssignmentsResponse_FieldSubPath {
	return &ListPlanAssignmentsResponse_FieldSubPath{
		selector: ListPlanAssignmentsResponse_FieldPathSelectorPlanAssignments,
		subPath:  plan_assignment.NewPlanAssignmentFieldPathBuilder().Extensions().Resource().FieldPath(),
	}
}

func (s ListPlanAssignmentsResponsePathSelectorPlanAssignmentsExtensionsResource) WithValue(value *meta_resource.Reference) *ListPlanAssignmentsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListPlanAssignmentsResponse_FieldSubPathValue)
}

func (s ListPlanAssignmentsResponsePathSelectorPlanAssignmentsExtensionsResource) WithArrayOfValues(values []*meta_resource.Reference) *ListPlanAssignmentsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListPlanAssignmentsResponse_FieldSubPathArrayOfValues)
}

type ListPlanAssignmentsResponsePathSelectorPlanAssignmentsExtensionsValue struct{}

func (ListPlanAssignmentsResponsePathSelectorPlanAssignmentsExtensionsValue) FieldPath() *ListPlanAssignmentsResponse_FieldSubPath {
	return &ListPlanAssignmentsResponse_FieldSubPath{
		selector: ListPlanAssignmentsResponse_FieldPathSelectorPlanAssignments,
		subPath:  plan_assignment.NewPlanAssignmentFieldPathBuilder().Extensions().Value().FieldPath(),
	}
}

func (s ListPlanAssignmentsResponsePathSelectorPlanAssignmentsExtensionsValue) WithValue(value int64) *ListPlanAssignmentsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListPlanAssignmentsResponse_FieldSubPathValue)
}

func (s ListPlanAssignmentsResponsePathSelectorPlanAssignmentsExtensionsValue) WithArrayOfValues(values []int64) *ListPlanAssignmentsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListPlanAssignmentsResponse_FieldSubPathArrayOfValues)
}

type ListPlanAssignmentsResponsePathSelectorPlanAssignmentsRegionalDistributions struct{}

func (ListPlanAssignmentsResponsePathSelectorPlanAssignmentsRegionalDistributions) FieldPath() *ListPlanAssignmentsResponse_FieldSubPath {
	return &ListPlanAssignmentsResponse_FieldSubPath{
		selector: ListPlanAssignmentsResponse_FieldPathSelectorPlanAssignments,
		subPath:  plan_assignment.NewPlanAssignmentFieldPathBuilder().RegionalDistributions().FieldPath(),
	}
}

func (s ListPlanAssignmentsResponsePathSelectorPlanAssignmentsRegionalDistributions) WithValue(value []*common.RegionalDistribution) *ListPlanAssignmentsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListPlanAssignmentsResponse_FieldSubPathValue)
}

func (s ListPlanAssignmentsResponsePathSelectorPlanAssignmentsRegionalDistributions) WithArrayOfValues(values [][]*common.RegionalDistribution) *ListPlanAssignmentsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListPlanAssignmentsResponse_FieldSubPathArrayOfValues)
}

func (s ListPlanAssignmentsResponsePathSelectorPlanAssignmentsRegionalDistributions) WithItemValue(value *common.RegionalDistribution) *ListPlanAssignmentsResponse_FieldSubPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*ListPlanAssignmentsResponse_FieldSubPathArrayItemValue)
}

func (ListPlanAssignmentsResponsePathSelectorPlanAssignmentsRegionalDistributions) Resource() ListPlanAssignmentsResponsePathSelectorPlanAssignmentsRegionalDistributionsResource {
	return ListPlanAssignmentsResponsePathSelectorPlanAssignmentsRegionalDistributionsResource{}
}

func (ListPlanAssignmentsResponsePathSelectorPlanAssignmentsRegionalDistributions) LimitsByRegion() ListPlanAssignmentsResponsePathSelectorPlanAssignmentsRegionalDistributionsLimitsByRegion {
	return ListPlanAssignmentsResponsePathSelectorPlanAssignmentsRegionalDistributionsLimitsByRegion{}
}

type ListPlanAssignmentsResponsePathSelectorPlanAssignmentsRegionalDistributionsResource struct{}

func (ListPlanAssignmentsResponsePathSelectorPlanAssignmentsRegionalDistributionsResource) FieldPath() *ListPlanAssignmentsResponse_FieldSubPath {
	return &ListPlanAssignmentsResponse_FieldSubPath{
		selector: ListPlanAssignmentsResponse_FieldPathSelectorPlanAssignments,
		subPath:  plan_assignment.NewPlanAssignmentFieldPathBuilder().RegionalDistributions().Resource().FieldPath(),
	}
}

func (s ListPlanAssignmentsResponsePathSelectorPlanAssignmentsRegionalDistributionsResource) WithValue(value *meta_resource.Reference) *ListPlanAssignmentsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListPlanAssignmentsResponse_FieldSubPathValue)
}

func (s ListPlanAssignmentsResponsePathSelectorPlanAssignmentsRegionalDistributionsResource) WithArrayOfValues(values []*meta_resource.Reference) *ListPlanAssignmentsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListPlanAssignmentsResponse_FieldSubPathArrayOfValues)
}

type ListPlanAssignmentsResponsePathSelectorPlanAssignmentsRegionalDistributionsLimitsByRegion struct{}

func (ListPlanAssignmentsResponsePathSelectorPlanAssignmentsRegionalDistributionsLimitsByRegion) FieldPath() *ListPlanAssignmentsResponse_FieldSubPath {
	return &ListPlanAssignmentsResponse_FieldSubPath{
		selector: ListPlanAssignmentsResponse_FieldPathSelectorPlanAssignments,
		subPath:  plan_assignment.NewPlanAssignmentFieldPathBuilder().RegionalDistributions().LimitsByRegion().FieldPath(),
	}
}

func (s ListPlanAssignmentsResponsePathSelectorPlanAssignmentsRegionalDistributionsLimitsByRegion) WithValue(value map[string]int64) *ListPlanAssignmentsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListPlanAssignmentsResponse_FieldSubPathValue)
}

func (s ListPlanAssignmentsResponsePathSelectorPlanAssignmentsRegionalDistributionsLimitsByRegion) WithArrayOfValues(values []map[string]int64) *ListPlanAssignmentsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListPlanAssignmentsResponse_FieldSubPathArrayOfValues)
}

func (ListPlanAssignmentsResponsePathSelectorPlanAssignmentsRegionalDistributionsLimitsByRegion) WithKey(key string) ListPlanAssignmentsResponseMapPathSelectorPlanAssignmentsRegionalDistributionsLimitsByRegion {
	return ListPlanAssignmentsResponseMapPathSelectorPlanAssignmentsRegionalDistributionsLimitsByRegion{key: key}
}

type ListPlanAssignmentsResponseMapPathSelectorPlanAssignmentsRegionalDistributionsLimitsByRegion struct {
	key string
}

func (s ListPlanAssignmentsResponseMapPathSelectorPlanAssignmentsRegionalDistributionsLimitsByRegion) FieldPath() *ListPlanAssignmentsResponse_FieldSubPath {
	return &ListPlanAssignmentsResponse_FieldSubPath{
		selector: ListPlanAssignmentsResponse_FieldPathSelectorPlanAssignments,
		subPath:  plan_assignment.NewPlanAssignmentFieldPathBuilder().RegionalDistributions().LimitsByRegion().WithKey(s.key).FieldPath(),
	}
}

func (s ListPlanAssignmentsResponseMapPathSelectorPlanAssignmentsRegionalDistributionsLimitsByRegion) WithValue(value int64) *ListPlanAssignmentsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListPlanAssignmentsResponse_FieldSubPathValue)
}

func (s ListPlanAssignmentsResponseMapPathSelectorPlanAssignmentsRegionalDistributionsLimitsByRegion) WithArrayOfValues(values []int64) *ListPlanAssignmentsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListPlanAssignmentsResponse_FieldSubPathArrayOfValues)
}

type ListPlanAssignmentsResponsePathSelectorPlanAssignmentsSource struct{}

func (ListPlanAssignmentsResponsePathSelectorPlanAssignmentsSource) FieldPath() *ListPlanAssignmentsResponse_FieldSubPath {
	return &ListPlanAssignmentsResponse_FieldSubPath{
		selector: ListPlanAssignmentsResponse_FieldPathSelectorPlanAssignments,
		subPath:  plan_assignment.NewPlanAssignmentFieldPathBuilder().Source().FieldPath(),
	}
}

func (s ListPlanAssignmentsResponsePathSelectorPlanAssignmentsSource) WithValue(value *accepted_plan.Reference) *ListPlanAssignmentsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListPlanAssignmentsResponse_FieldSubPathValue)
}

func (s ListPlanAssignmentsResponsePathSelectorPlanAssignmentsSource) WithArrayOfValues(values []*accepted_plan.Reference) *ListPlanAssignmentsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListPlanAssignmentsResponse_FieldSubPathArrayOfValues)
}

type ListPlanAssignmentsResponsePathSelectorPlanAssignmentsMetadata struct{}

func (ListPlanAssignmentsResponsePathSelectorPlanAssignmentsMetadata) FieldPath() *ListPlanAssignmentsResponse_FieldSubPath {
	return &ListPlanAssignmentsResponse_FieldSubPath{
		selector: ListPlanAssignmentsResponse_FieldPathSelectorPlanAssignments,
		subPath:  plan_assignment.NewPlanAssignmentFieldPathBuilder().Metadata().FieldPath(),
	}
}

func (s ListPlanAssignmentsResponsePathSelectorPlanAssignmentsMetadata) WithValue(value *ntt_meta.Meta) *ListPlanAssignmentsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListPlanAssignmentsResponse_FieldSubPathValue)
}

func (s ListPlanAssignmentsResponsePathSelectorPlanAssignmentsMetadata) WithArrayOfValues(values []*ntt_meta.Meta) *ListPlanAssignmentsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListPlanAssignmentsResponse_FieldSubPathArrayOfValues)
}

func (ListPlanAssignmentsResponsePathSelectorPlanAssignmentsMetadata) CreateTime() ListPlanAssignmentsResponsePathSelectorPlanAssignmentsMetadataCreateTime {
	return ListPlanAssignmentsResponsePathSelectorPlanAssignmentsMetadataCreateTime{}
}

func (ListPlanAssignmentsResponsePathSelectorPlanAssignmentsMetadata) UpdateTime() ListPlanAssignmentsResponsePathSelectorPlanAssignmentsMetadataUpdateTime {
	return ListPlanAssignmentsResponsePathSelectorPlanAssignmentsMetadataUpdateTime{}
}

func (ListPlanAssignmentsResponsePathSelectorPlanAssignmentsMetadata) Uuid() ListPlanAssignmentsResponsePathSelectorPlanAssignmentsMetadataUuid {
	return ListPlanAssignmentsResponsePathSelectorPlanAssignmentsMetadataUuid{}
}

func (ListPlanAssignmentsResponsePathSelectorPlanAssignmentsMetadata) Tags() ListPlanAssignmentsResponsePathSelectorPlanAssignmentsMetadataTags {
	return ListPlanAssignmentsResponsePathSelectorPlanAssignmentsMetadataTags{}
}

func (ListPlanAssignmentsResponsePathSelectorPlanAssignmentsMetadata) Labels() ListPlanAssignmentsResponsePathSelectorPlanAssignmentsMetadataLabels {
	return ListPlanAssignmentsResponsePathSelectorPlanAssignmentsMetadataLabels{}
}

func (ListPlanAssignmentsResponsePathSelectorPlanAssignmentsMetadata) Annotations() ListPlanAssignmentsResponsePathSelectorPlanAssignmentsMetadataAnnotations {
	return ListPlanAssignmentsResponsePathSelectorPlanAssignmentsMetadataAnnotations{}
}

func (ListPlanAssignmentsResponsePathSelectorPlanAssignmentsMetadata) Generation() ListPlanAssignmentsResponsePathSelectorPlanAssignmentsMetadataGeneration {
	return ListPlanAssignmentsResponsePathSelectorPlanAssignmentsMetadataGeneration{}
}

func (ListPlanAssignmentsResponsePathSelectorPlanAssignmentsMetadata) ResourceVersion() ListPlanAssignmentsResponsePathSelectorPlanAssignmentsMetadataResourceVersion {
	return ListPlanAssignmentsResponsePathSelectorPlanAssignmentsMetadataResourceVersion{}
}

func (ListPlanAssignmentsResponsePathSelectorPlanAssignmentsMetadata) OwnerReferences() ListPlanAssignmentsResponsePathSelectorPlanAssignmentsMetadataOwnerReferences {
	return ListPlanAssignmentsResponsePathSelectorPlanAssignmentsMetadataOwnerReferences{}
}

func (ListPlanAssignmentsResponsePathSelectorPlanAssignmentsMetadata) Shards() ListPlanAssignmentsResponsePathSelectorPlanAssignmentsMetadataShards {
	return ListPlanAssignmentsResponsePathSelectorPlanAssignmentsMetadataShards{}
}

func (ListPlanAssignmentsResponsePathSelectorPlanAssignmentsMetadata) Syncing() ListPlanAssignmentsResponsePathSelectorPlanAssignmentsMetadataSyncing {
	return ListPlanAssignmentsResponsePathSelectorPlanAssignmentsMetadataSyncing{}
}

type ListPlanAssignmentsResponsePathSelectorPlanAssignmentsMetadataCreateTime struct{}

func (ListPlanAssignmentsResponsePathSelectorPlanAssignmentsMetadataCreateTime) FieldPath() *ListPlanAssignmentsResponse_FieldSubPath {
	return &ListPlanAssignmentsResponse_FieldSubPath{
		selector: ListPlanAssignmentsResponse_FieldPathSelectorPlanAssignments,
		subPath:  plan_assignment.NewPlanAssignmentFieldPathBuilder().Metadata().CreateTime().FieldPath(),
	}
}

func (s ListPlanAssignmentsResponsePathSelectorPlanAssignmentsMetadataCreateTime) WithValue(value *timestamp.Timestamp) *ListPlanAssignmentsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListPlanAssignmentsResponse_FieldSubPathValue)
}

func (s ListPlanAssignmentsResponsePathSelectorPlanAssignmentsMetadataCreateTime) WithArrayOfValues(values []*timestamp.Timestamp) *ListPlanAssignmentsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListPlanAssignmentsResponse_FieldSubPathArrayOfValues)
}

type ListPlanAssignmentsResponsePathSelectorPlanAssignmentsMetadataUpdateTime struct{}

func (ListPlanAssignmentsResponsePathSelectorPlanAssignmentsMetadataUpdateTime) FieldPath() *ListPlanAssignmentsResponse_FieldSubPath {
	return &ListPlanAssignmentsResponse_FieldSubPath{
		selector: ListPlanAssignmentsResponse_FieldPathSelectorPlanAssignments,
		subPath:  plan_assignment.NewPlanAssignmentFieldPathBuilder().Metadata().UpdateTime().FieldPath(),
	}
}

func (s ListPlanAssignmentsResponsePathSelectorPlanAssignmentsMetadataUpdateTime) WithValue(value *timestamp.Timestamp) *ListPlanAssignmentsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListPlanAssignmentsResponse_FieldSubPathValue)
}

func (s ListPlanAssignmentsResponsePathSelectorPlanAssignmentsMetadataUpdateTime) WithArrayOfValues(values []*timestamp.Timestamp) *ListPlanAssignmentsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListPlanAssignmentsResponse_FieldSubPathArrayOfValues)
}

type ListPlanAssignmentsResponsePathSelectorPlanAssignmentsMetadataUuid struct{}

func (ListPlanAssignmentsResponsePathSelectorPlanAssignmentsMetadataUuid) FieldPath() *ListPlanAssignmentsResponse_FieldSubPath {
	return &ListPlanAssignmentsResponse_FieldSubPath{
		selector: ListPlanAssignmentsResponse_FieldPathSelectorPlanAssignments,
		subPath:  plan_assignment.NewPlanAssignmentFieldPathBuilder().Metadata().Uuid().FieldPath(),
	}
}

func (s ListPlanAssignmentsResponsePathSelectorPlanAssignmentsMetadataUuid) WithValue(value string) *ListPlanAssignmentsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListPlanAssignmentsResponse_FieldSubPathValue)
}

func (s ListPlanAssignmentsResponsePathSelectorPlanAssignmentsMetadataUuid) WithArrayOfValues(values []string) *ListPlanAssignmentsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListPlanAssignmentsResponse_FieldSubPathArrayOfValues)
}

type ListPlanAssignmentsResponsePathSelectorPlanAssignmentsMetadataTags struct{}

func (ListPlanAssignmentsResponsePathSelectorPlanAssignmentsMetadataTags) FieldPath() *ListPlanAssignmentsResponse_FieldSubPath {
	return &ListPlanAssignmentsResponse_FieldSubPath{
		selector: ListPlanAssignmentsResponse_FieldPathSelectorPlanAssignments,
		subPath:  plan_assignment.NewPlanAssignmentFieldPathBuilder().Metadata().Tags().FieldPath(),
	}
}

func (s ListPlanAssignmentsResponsePathSelectorPlanAssignmentsMetadataTags) WithValue(value []string) *ListPlanAssignmentsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListPlanAssignmentsResponse_FieldSubPathValue)
}

func (s ListPlanAssignmentsResponsePathSelectorPlanAssignmentsMetadataTags) WithArrayOfValues(values [][]string) *ListPlanAssignmentsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListPlanAssignmentsResponse_FieldSubPathArrayOfValues)
}

func (s ListPlanAssignmentsResponsePathSelectorPlanAssignmentsMetadataTags) WithItemValue(value string) *ListPlanAssignmentsResponse_FieldSubPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*ListPlanAssignmentsResponse_FieldSubPathArrayItemValue)
}

type ListPlanAssignmentsResponsePathSelectorPlanAssignmentsMetadataLabels struct{}

func (ListPlanAssignmentsResponsePathSelectorPlanAssignmentsMetadataLabels) FieldPath() *ListPlanAssignmentsResponse_FieldSubPath {
	return &ListPlanAssignmentsResponse_FieldSubPath{
		selector: ListPlanAssignmentsResponse_FieldPathSelectorPlanAssignments,
		subPath:  plan_assignment.NewPlanAssignmentFieldPathBuilder().Metadata().Labels().FieldPath(),
	}
}

func (s ListPlanAssignmentsResponsePathSelectorPlanAssignmentsMetadataLabels) WithValue(value map[string]string) *ListPlanAssignmentsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListPlanAssignmentsResponse_FieldSubPathValue)
}

func (s ListPlanAssignmentsResponsePathSelectorPlanAssignmentsMetadataLabels) WithArrayOfValues(values []map[string]string) *ListPlanAssignmentsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListPlanAssignmentsResponse_FieldSubPathArrayOfValues)
}

func (ListPlanAssignmentsResponsePathSelectorPlanAssignmentsMetadataLabels) WithKey(key string) ListPlanAssignmentsResponseMapPathSelectorPlanAssignmentsMetadataLabels {
	return ListPlanAssignmentsResponseMapPathSelectorPlanAssignmentsMetadataLabels{key: key}
}

type ListPlanAssignmentsResponseMapPathSelectorPlanAssignmentsMetadataLabels struct {
	key string
}

func (s ListPlanAssignmentsResponseMapPathSelectorPlanAssignmentsMetadataLabels) FieldPath() *ListPlanAssignmentsResponse_FieldSubPath {
	return &ListPlanAssignmentsResponse_FieldSubPath{
		selector: ListPlanAssignmentsResponse_FieldPathSelectorPlanAssignments,
		subPath:  plan_assignment.NewPlanAssignmentFieldPathBuilder().Metadata().Labels().WithKey(s.key).FieldPath(),
	}
}

func (s ListPlanAssignmentsResponseMapPathSelectorPlanAssignmentsMetadataLabels) WithValue(value string) *ListPlanAssignmentsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListPlanAssignmentsResponse_FieldSubPathValue)
}

func (s ListPlanAssignmentsResponseMapPathSelectorPlanAssignmentsMetadataLabels) WithArrayOfValues(values []string) *ListPlanAssignmentsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListPlanAssignmentsResponse_FieldSubPathArrayOfValues)
}

type ListPlanAssignmentsResponsePathSelectorPlanAssignmentsMetadataAnnotations struct{}

func (ListPlanAssignmentsResponsePathSelectorPlanAssignmentsMetadataAnnotations) FieldPath() *ListPlanAssignmentsResponse_FieldSubPath {
	return &ListPlanAssignmentsResponse_FieldSubPath{
		selector: ListPlanAssignmentsResponse_FieldPathSelectorPlanAssignments,
		subPath:  plan_assignment.NewPlanAssignmentFieldPathBuilder().Metadata().Annotations().FieldPath(),
	}
}

func (s ListPlanAssignmentsResponsePathSelectorPlanAssignmentsMetadataAnnotations) WithValue(value map[string]string) *ListPlanAssignmentsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListPlanAssignmentsResponse_FieldSubPathValue)
}

func (s ListPlanAssignmentsResponsePathSelectorPlanAssignmentsMetadataAnnotations) WithArrayOfValues(values []map[string]string) *ListPlanAssignmentsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListPlanAssignmentsResponse_FieldSubPathArrayOfValues)
}

func (ListPlanAssignmentsResponsePathSelectorPlanAssignmentsMetadataAnnotations) WithKey(key string) ListPlanAssignmentsResponseMapPathSelectorPlanAssignmentsMetadataAnnotations {
	return ListPlanAssignmentsResponseMapPathSelectorPlanAssignmentsMetadataAnnotations{key: key}
}

type ListPlanAssignmentsResponseMapPathSelectorPlanAssignmentsMetadataAnnotations struct {
	key string
}

func (s ListPlanAssignmentsResponseMapPathSelectorPlanAssignmentsMetadataAnnotations) FieldPath() *ListPlanAssignmentsResponse_FieldSubPath {
	return &ListPlanAssignmentsResponse_FieldSubPath{
		selector: ListPlanAssignmentsResponse_FieldPathSelectorPlanAssignments,
		subPath:  plan_assignment.NewPlanAssignmentFieldPathBuilder().Metadata().Annotations().WithKey(s.key).FieldPath(),
	}
}

func (s ListPlanAssignmentsResponseMapPathSelectorPlanAssignmentsMetadataAnnotations) WithValue(value string) *ListPlanAssignmentsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListPlanAssignmentsResponse_FieldSubPathValue)
}

func (s ListPlanAssignmentsResponseMapPathSelectorPlanAssignmentsMetadataAnnotations) WithArrayOfValues(values []string) *ListPlanAssignmentsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListPlanAssignmentsResponse_FieldSubPathArrayOfValues)
}

type ListPlanAssignmentsResponsePathSelectorPlanAssignmentsMetadataGeneration struct{}

func (ListPlanAssignmentsResponsePathSelectorPlanAssignmentsMetadataGeneration) FieldPath() *ListPlanAssignmentsResponse_FieldSubPath {
	return &ListPlanAssignmentsResponse_FieldSubPath{
		selector: ListPlanAssignmentsResponse_FieldPathSelectorPlanAssignments,
		subPath:  plan_assignment.NewPlanAssignmentFieldPathBuilder().Metadata().Generation().FieldPath(),
	}
}

func (s ListPlanAssignmentsResponsePathSelectorPlanAssignmentsMetadataGeneration) WithValue(value int64) *ListPlanAssignmentsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListPlanAssignmentsResponse_FieldSubPathValue)
}

func (s ListPlanAssignmentsResponsePathSelectorPlanAssignmentsMetadataGeneration) WithArrayOfValues(values []int64) *ListPlanAssignmentsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListPlanAssignmentsResponse_FieldSubPathArrayOfValues)
}

type ListPlanAssignmentsResponsePathSelectorPlanAssignmentsMetadataResourceVersion struct{}

func (ListPlanAssignmentsResponsePathSelectorPlanAssignmentsMetadataResourceVersion) FieldPath() *ListPlanAssignmentsResponse_FieldSubPath {
	return &ListPlanAssignmentsResponse_FieldSubPath{
		selector: ListPlanAssignmentsResponse_FieldPathSelectorPlanAssignments,
		subPath:  plan_assignment.NewPlanAssignmentFieldPathBuilder().Metadata().ResourceVersion().FieldPath(),
	}
}

func (s ListPlanAssignmentsResponsePathSelectorPlanAssignmentsMetadataResourceVersion) WithValue(value string) *ListPlanAssignmentsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListPlanAssignmentsResponse_FieldSubPathValue)
}

func (s ListPlanAssignmentsResponsePathSelectorPlanAssignmentsMetadataResourceVersion) WithArrayOfValues(values []string) *ListPlanAssignmentsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListPlanAssignmentsResponse_FieldSubPathArrayOfValues)
}

type ListPlanAssignmentsResponsePathSelectorPlanAssignmentsMetadataOwnerReferences struct{}

func (ListPlanAssignmentsResponsePathSelectorPlanAssignmentsMetadataOwnerReferences) FieldPath() *ListPlanAssignmentsResponse_FieldSubPath {
	return &ListPlanAssignmentsResponse_FieldSubPath{
		selector: ListPlanAssignmentsResponse_FieldPathSelectorPlanAssignments,
		subPath:  plan_assignment.NewPlanAssignmentFieldPathBuilder().Metadata().OwnerReferences().FieldPath(),
	}
}

func (s ListPlanAssignmentsResponsePathSelectorPlanAssignmentsMetadataOwnerReferences) WithValue(value []*ntt_meta.OwnerReference) *ListPlanAssignmentsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListPlanAssignmentsResponse_FieldSubPathValue)
}

func (s ListPlanAssignmentsResponsePathSelectorPlanAssignmentsMetadataOwnerReferences) WithArrayOfValues(values [][]*ntt_meta.OwnerReference) *ListPlanAssignmentsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListPlanAssignmentsResponse_FieldSubPathArrayOfValues)
}

func (s ListPlanAssignmentsResponsePathSelectorPlanAssignmentsMetadataOwnerReferences) WithItemValue(value *ntt_meta.OwnerReference) *ListPlanAssignmentsResponse_FieldSubPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*ListPlanAssignmentsResponse_FieldSubPathArrayItemValue)
}

func (ListPlanAssignmentsResponsePathSelectorPlanAssignmentsMetadataOwnerReferences) ApiVersion() ListPlanAssignmentsResponsePathSelectorPlanAssignmentsMetadataOwnerReferencesApiVersion {
	return ListPlanAssignmentsResponsePathSelectorPlanAssignmentsMetadataOwnerReferencesApiVersion{}
}

func (ListPlanAssignmentsResponsePathSelectorPlanAssignmentsMetadataOwnerReferences) Kind() ListPlanAssignmentsResponsePathSelectorPlanAssignmentsMetadataOwnerReferencesKind {
	return ListPlanAssignmentsResponsePathSelectorPlanAssignmentsMetadataOwnerReferencesKind{}
}

func (ListPlanAssignmentsResponsePathSelectorPlanAssignmentsMetadataOwnerReferences) Name() ListPlanAssignmentsResponsePathSelectorPlanAssignmentsMetadataOwnerReferencesName {
	return ListPlanAssignmentsResponsePathSelectorPlanAssignmentsMetadataOwnerReferencesName{}
}

func (ListPlanAssignmentsResponsePathSelectorPlanAssignmentsMetadataOwnerReferences) Uid() ListPlanAssignmentsResponsePathSelectorPlanAssignmentsMetadataOwnerReferencesUid {
	return ListPlanAssignmentsResponsePathSelectorPlanAssignmentsMetadataOwnerReferencesUid{}
}

func (ListPlanAssignmentsResponsePathSelectorPlanAssignmentsMetadataOwnerReferences) Controller() ListPlanAssignmentsResponsePathSelectorPlanAssignmentsMetadataOwnerReferencesController {
	return ListPlanAssignmentsResponsePathSelectorPlanAssignmentsMetadataOwnerReferencesController{}
}

func (ListPlanAssignmentsResponsePathSelectorPlanAssignmentsMetadataOwnerReferences) BlockOwnerDeletion() ListPlanAssignmentsResponsePathSelectorPlanAssignmentsMetadataOwnerReferencesBlockOwnerDeletion {
	return ListPlanAssignmentsResponsePathSelectorPlanAssignmentsMetadataOwnerReferencesBlockOwnerDeletion{}
}

type ListPlanAssignmentsResponsePathSelectorPlanAssignmentsMetadataOwnerReferencesApiVersion struct{}

func (ListPlanAssignmentsResponsePathSelectorPlanAssignmentsMetadataOwnerReferencesApiVersion) FieldPath() *ListPlanAssignmentsResponse_FieldSubPath {
	return &ListPlanAssignmentsResponse_FieldSubPath{
		selector: ListPlanAssignmentsResponse_FieldPathSelectorPlanAssignments,
		subPath:  plan_assignment.NewPlanAssignmentFieldPathBuilder().Metadata().OwnerReferences().ApiVersion().FieldPath(),
	}
}

func (s ListPlanAssignmentsResponsePathSelectorPlanAssignmentsMetadataOwnerReferencesApiVersion) WithValue(value string) *ListPlanAssignmentsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListPlanAssignmentsResponse_FieldSubPathValue)
}

func (s ListPlanAssignmentsResponsePathSelectorPlanAssignmentsMetadataOwnerReferencesApiVersion) WithArrayOfValues(values []string) *ListPlanAssignmentsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListPlanAssignmentsResponse_FieldSubPathArrayOfValues)
}

type ListPlanAssignmentsResponsePathSelectorPlanAssignmentsMetadataOwnerReferencesKind struct{}

func (ListPlanAssignmentsResponsePathSelectorPlanAssignmentsMetadataOwnerReferencesKind) FieldPath() *ListPlanAssignmentsResponse_FieldSubPath {
	return &ListPlanAssignmentsResponse_FieldSubPath{
		selector: ListPlanAssignmentsResponse_FieldPathSelectorPlanAssignments,
		subPath:  plan_assignment.NewPlanAssignmentFieldPathBuilder().Metadata().OwnerReferences().Kind().FieldPath(),
	}
}

func (s ListPlanAssignmentsResponsePathSelectorPlanAssignmentsMetadataOwnerReferencesKind) WithValue(value string) *ListPlanAssignmentsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListPlanAssignmentsResponse_FieldSubPathValue)
}

func (s ListPlanAssignmentsResponsePathSelectorPlanAssignmentsMetadataOwnerReferencesKind) WithArrayOfValues(values []string) *ListPlanAssignmentsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListPlanAssignmentsResponse_FieldSubPathArrayOfValues)
}

type ListPlanAssignmentsResponsePathSelectorPlanAssignmentsMetadataOwnerReferencesName struct{}

func (ListPlanAssignmentsResponsePathSelectorPlanAssignmentsMetadataOwnerReferencesName) FieldPath() *ListPlanAssignmentsResponse_FieldSubPath {
	return &ListPlanAssignmentsResponse_FieldSubPath{
		selector: ListPlanAssignmentsResponse_FieldPathSelectorPlanAssignments,
		subPath:  plan_assignment.NewPlanAssignmentFieldPathBuilder().Metadata().OwnerReferences().Name().FieldPath(),
	}
}

func (s ListPlanAssignmentsResponsePathSelectorPlanAssignmentsMetadataOwnerReferencesName) WithValue(value string) *ListPlanAssignmentsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListPlanAssignmentsResponse_FieldSubPathValue)
}

func (s ListPlanAssignmentsResponsePathSelectorPlanAssignmentsMetadataOwnerReferencesName) WithArrayOfValues(values []string) *ListPlanAssignmentsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListPlanAssignmentsResponse_FieldSubPathArrayOfValues)
}

type ListPlanAssignmentsResponsePathSelectorPlanAssignmentsMetadataOwnerReferencesUid struct{}

func (ListPlanAssignmentsResponsePathSelectorPlanAssignmentsMetadataOwnerReferencesUid) FieldPath() *ListPlanAssignmentsResponse_FieldSubPath {
	return &ListPlanAssignmentsResponse_FieldSubPath{
		selector: ListPlanAssignmentsResponse_FieldPathSelectorPlanAssignments,
		subPath:  plan_assignment.NewPlanAssignmentFieldPathBuilder().Metadata().OwnerReferences().Uid().FieldPath(),
	}
}

func (s ListPlanAssignmentsResponsePathSelectorPlanAssignmentsMetadataOwnerReferencesUid) WithValue(value string) *ListPlanAssignmentsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListPlanAssignmentsResponse_FieldSubPathValue)
}

func (s ListPlanAssignmentsResponsePathSelectorPlanAssignmentsMetadataOwnerReferencesUid) WithArrayOfValues(values []string) *ListPlanAssignmentsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListPlanAssignmentsResponse_FieldSubPathArrayOfValues)
}

type ListPlanAssignmentsResponsePathSelectorPlanAssignmentsMetadataOwnerReferencesController struct{}

func (ListPlanAssignmentsResponsePathSelectorPlanAssignmentsMetadataOwnerReferencesController) FieldPath() *ListPlanAssignmentsResponse_FieldSubPath {
	return &ListPlanAssignmentsResponse_FieldSubPath{
		selector: ListPlanAssignmentsResponse_FieldPathSelectorPlanAssignments,
		subPath:  plan_assignment.NewPlanAssignmentFieldPathBuilder().Metadata().OwnerReferences().Controller().FieldPath(),
	}
}

func (s ListPlanAssignmentsResponsePathSelectorPlanAssignmentsMetadataOwnerReferencesController) WithValue(value bool) *ListPlanAssignmentsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListPlanAssignmentsResponse_FieldSubPathValue)
}

func (s ListPlanAssignmentsResponsePathSelectorPlanAssignmentsMetadataOwnerReferencesController) WithArrayOfValues(values []bool) *ListPlanAssignmentsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListPlanAssignmentsResponse_FieldSubPathArrayOfValues)
}

type ListPlanAssignmentsResponsePathSelectorPlanAssignmentsMetadataOwnerReferencesBlockOwnerDeletion struct{}

func (ListPlanAssignmentsResponsePathSelectorPlanAssignmentsMetadataOwnerReferencesBlockOwnerDeletion) FieldPath() *ListPlanAssignmentsResponse_FieldSubPath {
	return &ListPlanAssignmentsResponse_FieldSubPath{
		selector: ListPlanAssignmentsResponse_FieldPathSelectorPlanAssignments,
		subPath:  plan_assignment.NewPlanAssignmentFieldPathBuilder().Metadata().OwnerReferences().BlockOwnerDeletion().FieldPath(),
	}
}

func (s ListPlanAssignmentsResponsePathSelectorPlanAssignmentsMetadataOwnerReferencesBlockOwnerDeletion) WithValue(value bool) *ListPlanAssignmentsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListPlanAssignmentsResponse_FieldSubPathValue)
}

func (s ListPlanAssignmentsResponsePathSelectorPlanAssignmentsMetadataOwnerReferencesBlockOwnerDeletion) WithArrayOfValues(values []bool) *ListPlanAssignmentsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListPlanAssignmentsResponse_FieldSubPathArrayOfValues)
}

type ListPlanAssignmentsResponsePathSelectorPlanAssignmentsMetadataShards struct{}

func (ListPlanAssignmentsResponsePathSelectorPlanAssignmentsMetadataShards) FieldPath() *ListPlanAssignmentsResponse_FieldSubPath {
	return &ListPlanAssignmentsResponse_FieldSubPath{
		selector: ListPlanAssignmentsResponse_FieldPathSelectorPlanAssignments,
		subPath:  plan_assignment.NewPlanAssignmentFieldPathBuilder().Metadata().Shards().FieldPath(),
	}
}

func (s ListPlanAssignmentsResponsePathSelectorPlanAssignmentsMetadataShards) WithValue(value map[string]int64) *ListPlanAssignmentsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListPlanAssignmentsResponse_FieldSubPathValue)
}

func (s ListPlanAssignmentsResponsePathSelectorPlanAssignmentsMetadataShards) WithArrayOfValues(values []map[string]int64) *ListPlanAssignmentsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListPlanAssignmentsResponse_FieldSubPathArrayOfValues)
}

func (ListPlanAssignmentsResponsePathSelectorPlanAssignmentsMetadataShards) WithKey(key string) ListPlanAssignmentsResponseMapPathSelectorPlanAssignmentsMetadataShards {
	return ListPlanAssignmentsResponseMapPathSelectorPlanAssignmentsMetadataShards{key: key}
}

type ListPlanAssignmentsResponseMapPathSelectorPlanAssignmentsMetadataShards struct {
	key string
}

func (s ListPlanAssignmentsResponseMapPathSelectorPlanAssignmentsMetadataShards) FieldPath() *ListPlanAssignmentsResponse_FieldSubPath {
	return &ListPlanAssignmentsResponse_FieldSubPath{
		selector: ListPlanAssignmentsResponse_FieldPathSelectorPlanAssignments,
		subPath:  plan_assignment.NewPlanAssignmentFieldPathBuilder().Metadata().Shards().WithKey(s.key).FieldPath(),
	}
}

func (s ListPlanAssignmentsResponseMapPathSelectorPlanAssignmentsMetadataShards) WithValue(value int64) *ListPlanAssignmentsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListPlanAssignmentsResponse_FieldSubPathValue)
}

func (s ListPlanAssignmentsResponseMapPathSelectorPlanAssignmentsMetadataShards) WithArrayOfValues(values []int64) *ListPlanAssignmentsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListPlanAssignmentsResponse_FieldSubPathArrayOfValues)
}

type ListPlanAssignmentsResponsePathSelectorPlanAssignmentsMetadataSyncing struct{}

func (ListPlanAssignmentsResponsePathSelectorPlanAssignmentsMetadataSyncing) FieldPath() *ListPlanAssignmentsResponse_FieldSubPath {
	return &ListPlanAssignmentsResponse_FieldSubPath{
		selector: ListPlanAssignmentsResponse_FieldPathSelectorPlanAssignments,
		subPath:  plan_assignment.NewPlanAssignmentFieldPathBuilder().Metadata().Syncing().FieldPath(),
	}
}

func (s ListPlanAssignmentsResponsePathSelectorPlanAssignmentsMetadataSyncing) WithValue(value *ntt_meta.SyncingMeta) *ListPlanAssignmentsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListPlanAssignmentsResponse_FieldSubPathValue)
}

func (s ListPlanAssignmentsResponsePathSelectorPlanAssignmentsMetadataSyncing) WithArrayOfValues(values []*ntt_meta.SyncingMeta) *ListPlanAssignmentsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListPlanAssignmentsResponse_FieldSubPathArrayOfValues)
}

func (ListPlanAssignmentsResponsePathSelectorPlanAssignmentsMetadataSyncing) OwningRegion() ListPlanAssignmentsResponsePathSelectorPlanAssignmentsMetadataSyncingOwningRegion {
	return ListPlanAssignmentsResponsePathSelectorPlanAssignmentsMetadataSyncingOwningRegion{}
}

func (ListPlanAssignmentsResponsePathSelectorPlanAssignmentsMetadataSyncing) Regions() ListPlanAssignmentsResponsePathSelectorPlanAssignmentsMetadataSyncingRegions {
	return ListPlanAssignmentsResponsePathSelectorPlanAssignmentsMetadataSyncingRegions{}
}

type ListPlanAssignmentsResponsePathSelectorPlanAssignmentsMetadataSyncingOwningRegion struct{}

func (ListPlanAssignmentsResponsePathSelectorPlanAssignmentsMetadataSyncingOwningRegion) FieldPath() *ListPlanAssignmentsResponse_FieldSubPath {
	return &ListPlanAssignmentsResponse_FieldSubPath{
		selector: ListPlanAssignmentsResponse_FieldPathSelectorPlanAssignments,
		subPath:  plan_assignment.NewPlanAssignmentFieldPathBuilder().Metadata().Syncing().OwningRegion().FieldPath(),
	}
}

func (s ListPlanAssignmentsResponsePathSelectorPlanAssignmentsMetadataSyncingOwningRegion) WithValue(value string) *ListPlanAssignmentsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListPlanAssignmentsResponse_FieldSubPathValue)
}

func (s ListPlanAssignmentsResponsePathSelectorPlanAssignmentsMetadataSyncingOwningRegion) WithArrayOfValues(values []string) *ListPlanAssignmentsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListPlanAssignmentsResponse_FieldSubPathArrayOfValues)
}

type ListPlanAssignmentsResponsePathSelectorPlanAssignmentsMetadataSyncingRegions struct{}

func (ListPlanAssignmentsResponsePathSelectorPlanAssignmentsMetadataSyncingRegions) FieldPath() *ListPlanAssignmentsResponse_FieldSubPath {
	return &ListPlanAssignmentsResponse_FieldSubPath{
		selector: ListPlanAssignmentsResponse_FieldPathSelectorPlanAssignments,
		subPath:  plan_assignment.NewPlanAssignmentFieldPathBuilder().Metadata().Syncing().Regions().FieldPath(),
	}
}

func (s ListPlanAssignmentsResponsePathSelectorPlanAssignmentsMetadataSyncingRegions) WithValue(value []string) *ListPlanAssignmentsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListPlanAssignmentsResponse_FieldSubPathValue)
}

func (s ListPlanAssignmentsResponsePathSelectorPlanAssignmentsMetadataSyncingRegions) WithArrayOfValues(values [][]string) *ListPlanAssignmentsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListPlanAssignmentsResponse_FieldSubPathArrayOfValues)
}

func (s ListPlanAssignmentsResponsePathSelectorPlanAssignmentsMetadataSyncingRegions) WithItemValue(value string) *ListPlanAssignmentsResponse_FieldSubPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*ListPlanAssignmentsResponse_FieldSubPathArrayItemValue)
}

type ListPlanAssignmentsResponsePathSelectorPrevPageToken struct{}

func (ListPlanAssignmentsResponsePathSelectorPrevPageToken) FieldPath() *ListPlanAssignmentsResponse_FieldTerminalPath {
	return &ListPlanAssignmentsResponse_FieldTerminalPath{selector: ListPlanAssignmentsResponse_FieldPathSelectorPrevPageToken}
}

func (s ListPlanAssignmentsResponsePathSelectorPrevPageToken) WithValue(value *plan_assignment.PagerCursor) *ListPlanAssignmentsResponse_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*ListPlanAssignmentsResponse_FieldTerminalPathValue)
}

func (s ListPlanAssignmentsResponsePathSelectorPrevPageToken) WithArrayOfValues(values []*plan_assignment.PagerCursor) *ListPlanAssignmentsResponse_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListPlanAssignmentsResponse_FieldTerminalPathArrayOfValues)
}

type ListPlanAssignmentsResponsePathSelectorNextPageToken struct{}

func (ListPlanAssignmentsResponsePathSelectorNextPageToken) FieldPath() *ListPlanAssignmentsResponse_FieldTerminalPath {
	return &ListPlanAssignmentsResponse_FieldTerminalPath{selector: ListPlanAssignmentsResponse_FieldPathSelectorNextPageToken}
}

func (s ListPlanAssignmentsResponsePathSelectorNextPageToken) WithValue(value *plan_assignment.PagerCursor) *ListPlanAssignmentsResponse_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*ListPlanAssignmentsResponse_FieldTerminalPathValue)
}

func (s ListPlanAssignmentsResponsePathSelectorNextPageToken) WithArrayOfValues(values []*plan_assignment.PagerCursor) *ListPlanAssignmentsResponse_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListPlanAssignmentsResponse_FieldTerminalPathArrayOfValues)
}

type WatchPlanAssignmentRequestFieldPathBuilder struct{}

func NewWatchPlanAssignmentRequestFieldPathBuilder() WatchPlanAssignmentRequestFieldPathBuilder {
	return WatchPlanAssignmentRequestFieldPathBuilder{}
}
func (WatchPlanAssignmentRequestFieldPathBuilder) Name() WatchPlanAssignmentRequestPathSelectorName {
	return WatchPlanAssignmentRequestPathSelectorName{}
}
func (WatchPlanAssignmentRequestFieldPathBuilder) FieldMask() WatchPlanAssignmentRequestPathSelectorFieldMask {
	return WatchPlanAssignmentRequestPathSelectorFieldMask{}
}
func (WatchPlanAssignmentRequestFieldPathBuilder) View() WatchPlanAssignmentRequestPathSelectorView {
	return WatchPlanAssignmentRequestPathSelectorView{}
}

type WatchPlanAssignmentRequestPathSelectorName struct{}

func (WatchPlanAssignmentRequestPathSelectorName) FieldPath() *WatchPlanAssignmentRequest_FieldTerminalPath {
	return &WatchPlanAssignmentRequest_FieldTerminalPath{selector: WatchPlanAssignmentRequest_FieldPathSelectorName}
}

func (s WatchPlanAssignmentRequestPathSelectorName) WithValue(value *plan_assignment.Reference) *WatchPlanAssignmentRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*WatchPlanAssignmentRequest_FieldTerminalPathValue)
}

func (s WatchPlanAssignmentRequestPathSelectorName) WithArrayOfValues(values []*plan_assignment.Reference) *WatchPlanAssignmentRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*WatchPlanAssignmentRequest_FieldTerminalPathArrayOfValues)
}

type WatchPlanAssignmentRequestPathSelectorFieldMask struct{}

func (WatchPlanAssignmentRequestPathSelectorFieldMask) FieldPath() *WatchPlanAssignmentRequest_FieldTerminalPath {
	return &WatchPlanAssignmentRequest_FieldTerminalPath{selector: WatchPlanAssignmentRequest_FieldPathSelectorFieldMask}
}

func (s WatchPlanAssignmentRequestPathSelectorFieldMask) WithValue(value *plan_assignment.PlanAssignment_FieldMask) *WatchPlanAssignmentRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*WatchPlanAssignmentRequest_FieldTerminalPathValue)
}

func (s WatchPlanAssignmentRequestPathSelectorFieldMask) WithArrayOfValues(values []*plan_assignment.PlanAssignment_FieldMask) *WatchPlanAssignmentRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*WatchPlanAssignmentRequest_FieldTerminalPathArrayOfValues)
}

type WatchPlanAssignmentRequestPathSelectorView struct{}

func (WatchPlanAssignmentRequestPathSelectorView) FieldPath() *WatchPlanAssignmentRequest_FieldTerminalPath {
	return &WatchPlanAssignmentRequest_FieldTerminalPath{selector: WatchPlanAssignmentRequest_FieldPathSelectorView}
}

func (s WatchPlanAssignmentRequestPathSelectorView) WithValue(value view.View) *WatchPlanAssignmentRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*WatchPlanAssignmentRequest_FieldTerminalPathValue)
}

func (s WatchPlanAssignmentRequestPathSelectorView) WithArrayOfValues(values []view.View) *WatchPlanAssignmentRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*WatchPlanAssignmentRequest_FieldTerminalPathArrayOfValues)
}

type WatchPlanAssignmentResponseFieldPathBuilder struct{}

func NewWatchPlanAssignmentResponseFieldPathBuilder() WatchPlanAssignmentResponseFieldPathBuilder {
	return WatchPlanAssignmentResponseFieldPathBuilder{}
}
func (WatchPlanAssignmentResponseFieldPathBuilder) Change() WatchPlanAssignmentResponsePathSelectorChange {
	return WatchPlanAssignmentResponsePathSelectorChange{}
}

type WatchPlanAssignmentResponsePathSelectorChange struct{}

func (WatchPlanAssignmentResponsePathSelectorChange) FieldPath() *WatchPlanAssignmentResponse_FieldTerminalPath {
	return &WatchPlanAssignmentResponse_FieldTerminalPath{selector: WatchPlanAssignmentResponse_FieldPathSelectorChange}
}

func (s WatchPlanAssignmentResponsePathSelectorChange) WithValue(value *plan_assignment.PlanAssignmentChange) *WatchPlanAssignmentResponse_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*WatchPlanAssignmentResponse_FieldTerminalPathValue)
}

func (s WatchPlanAssignmentResponsePathSelectorChange) WithArrayOfValues(values []*plan_assignment.PlanAssignmentChange) *WatchPlanAssignmentResponse_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*WatchPlanAssignmentResponse_FieldTerminalPathArrayOfValues)
}

type WatchPlanAssignmentsRequestFieldPathBuilder struct{}

func NewWatchPlanAssignmentsRequestFieldPathBuilder() WatchPlanAssignmentsRequestFieldPathBuilder {
	return WatchPlanAssignmentsRequestFieldPathBuilder{}
}
func (WatchPlanAssignmentsRequestFieldPathBuilder) Type() WatchPlanAssignmentsRequestPathSelectorType {
	return WatchPlanAssignmentsRequestPathSelectorType{}
}
func (WatchPlanAssignmentsRequestFieldPathBuilder) Parent() WatchPlanAssignmentsRequestPathSelectorParent {
	return WatchPlanAssignmentsRequestPathSelectorParent{}
}
func (WatchPlanAssignmentsRequestFieldPathBuilder) PageSize() WatchPlanAssignmentsRequestPathSelectorPageSize {
	return WatchPlanAssignmentsRequestPathSelectorPageSize{}
}
func (WatchPlanAssignmentsRequestFieldPathBuilder) PageToken() WatchPlanAssignmentsRequestPathSelectorPageToken {
	return WatchPlanAssignmentsRequestPathSelectorPageToken{}
}
func (WatchPlanAssignmentsRequestFieldPathBuilder) OrderBy() WatchPlanAssignmentsRequestPathSelectorOrderBy {
	return WatchPlanAssignmentsRequestPathSelectorOrderBy{}
}
func (WatchPlanAssignmentsRequestFieldPathBuilder) ResumeToken() WatchPlanAssignmentsRequestPathSelectorResumeToken {
	return WatchPlanAssignmentsRequestPathSelectorResumeToken{}
}
func (WatchPlanAssignmentsRequestFieldPathBuilder) Filter() WatchPlanAssignmentsRequestPathSelectorFilter {
	return WatchPlanAssignmentsRequestPathSelectorFilter{}
}
func (WatchPlanAssignmentsRequestFieldPathBuilder) FieldMask() WatchPlanAssignmentsRequestPathSelectorFieldMask {
	return WatchPlanAssignmentsRequestPathSelectorFieldMask{}
}
func (WatchPlanAssignmentsRequestFieldPathBuilder) View() WatchPlanAssignmentsRequestPathSelectorView {
	return WatchPlanAssignmentsRequestPathSelectorView{}
}
func (WatchPlanAssignmentsRequestFieldPathBuilder) MaxChunkSize() WatchPlanAssignmentsRequestPathSelectorMaxChunkSize {
	return WatchPlanAssignmentsRequestPathSelectorMaxChunkSize{}
}

type WatchPlanAssignmentsRequestPathSelectorType struct{}

func (WatchPlanAssignmentsRequestPathSelectorType) FieldPath() *WatchPlanAssignmentsRequest_FieldTerminalPath {
	return &WatchPlanAssignmentsRequest_FieldTerminalPath{selector: WatchPlanAssignmentsRequest_FieldPathSelectorType}
}

func (s WatchPlanAssignmentsRequestPathSelectorType) WithValue(value watch_type.WatchType) *WatchPlanAssignmentsRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*WatchPlanAssignmentsRequest_FieldTerminalPathValue)
}

func (s WatchPlanAssignmentsRequestPathSelectorType) WithArrayOfValues(values []watch_type.WatchType) *WatchPlanAssignmentsRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*WatchPlanAssignmentsRequest_FieldTerminalPathArrayOfValues)
}

type WatchPlanAssignmentsRequestPathSelectorParent struct{}

func (WatchPlanAssignmentsRequestPathSelectorParent) FieldPath() *WatchPlanAssignmentsRequest_FieldTerminalPath {
	return &WatchPlanAssignmentsRequest_FieldTerminalPath{selector: WatchPlanAssignmentsRequest_FieldPathSelectorParent}
}

func (s WatchPlanAssignmentsRequestPathSelectorParent) WithValue(value *plan_assignment.ParentReference) *WatchPlanAssignmentsRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*WatchPlanAssignmentsRequest_FieldTerminalPathValue)
}

func (s WatchPlanAssignmentsRequestPathSelectorParent) WithArrayOfValues(values []*plan_assignment.ParentReference) *WatchPlanAssignmentsRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*WatchPlanAssignmentsRequest_FieldTerminalPathArrayOfValues)
}

type WatchPlanAssignmentsRequestPathSelectorPageSize struct{}

func (WatchPlanAssignmentsRequestPathSelectorPageSize) FieldPath() *WatchPlanAssignmentsRequest_FieldTerminalPath {
	return &WatchPlanAssignmentsRequest_FieldTerminalPath{selector: WatchPlanAssignmentsRequest_FieldPathSelectorPageSize}
}

func (s WatchPlanAssignmentsRequestPathSelectorPageSize) WithValue(value int32) *WatchPlanAssignmentsRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*WatchPlanAssignmentsRequest_FieldTerminalPathValue)
}

func (s WatchPlanAssignmentsRequestPathSelectorPageSize) WithArrayOfValues(values []int32) *WatchPlanAssignmentsRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*WatchPlanAssignmentsRequest_FieldTerminalPathArrayOfValues)
}

type WatchPlanAssignmentsRequestPathSelectorPageToken struct{}

func (WatchPlanAssignmentsRequestPathSelectorPageToken) FieldPath() *WatchPlanAssignmentsRequest_FieldTerminalPath {
	return &WatchPlanAssignmentsRequest_FieldTerminalPath{selector: WatchPlanAssignmentsRequest_FieldPathSelectorPageToken}
}

func (s WatchPlanAssignmentsRequestPathSelectorPageToken) WithValue(value *plan_assignment.PagerCursor) *WatchPlanAssignmentsRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*WatchPlanAssignmentsRequest_FieldTerminalPathValue)
}

func (s WatchPlanAssignmentsRequestPathSelectorPageToken) WithArrayOfValues(values []*plan_assignment.PagerCursor) *WatchPlanAssignmentsRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*WatchPlanAssignmentsRequest_FieldTerminalPathArrayOfValues)
}

type WatchPlanAssignmentsRequestPathSelectorOrderBy struct{}

func (WatchPlanAssignmentsRequestPathSelectorOrderBy) FieldPath() *WatchPlanAssignmentsRequest_FieldTerminalPath {
	return &WatchPlanAssignmentsRequest_FieldTerminalPath{selector: WatchPlanAssignmentsRequest_FieldPathSelectorOrderBy}
}

func (s WatchPlanAssignmentsRequestPathSelectorOrderBy) WithValue(value *plan_assignment.OrderBy) *WatchPlanAssignmentsRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*WatchPlanAssignmentsRequest_FieldTerminalPathValue)
}

func (s WatchPlanAssignmentsRequestPathSelectorOrderBy) WithArrayOfValues(values []*plan_assignment.OrderBy) *WatchPlanAssignmentsRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*WatchPlanAssignmentsRequest_FieldTerminalPathArrayOfValues)
}

type WatchPlanAssignmentsRequestPathSelectorResumeToken struct{}

func (WatchPlanAssignmentsRequestPathSelectorResumeToken) FieldPath() *WatchPlanAssignmentsRequest_FieldTerminalPath {
	return &WatchPlanAssignmentsRequest_FieldTerminalPath{selector: WatchPlanAssignmentsRequest_FieldPathSelectorResumeToken}
}

func (s WatchPlanAssignmentsRequestPathSelectorResumeToken) WithValue(value string) *WatchPlanAssignmentsRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*WatchPlanAssignmentsRequest_FieldTerminalPathValue)
}

func (s WatchPlanAssignmentsRequestPathSelectorResumeToken) WithArrayOfValues(values []string) *WatchPlanAssignmentsRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*WatchPlanAssignmentsRequest_FieldTerminalPathArrayOfValues)
}

type WatchPlanAssignmentsRequestPathSelectorFilter struct{}

func (WatchPlanAssignmentsRequestPathSelectorFilter) FieldPath() *WatchPlanAssignmentsRequest_FieldTerminalPath {
	return &WatchPlanAssignmentsRequest_FieldTerminalPath{selector: WatchPlanAssignmentsRequest_FieldPathSelectorFilter}
}

func (s WatchPlanAssignmentsRequestPathSelectorFilter) WithValue(value *plan_assignment.Filter) *WatchPlanAssignmentsRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*WatchPlanAssignmentsRequest_FieldTerminalPathValue)
}

func (s WatchPlanAssignmentsRequestPathSelectorFilter) WithArrayOfValues(values []*plan_assignment.Filter) *WatchPlanAssignmentsRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*WatchPlanAssignmentsRequest_FieldTerminalPathArrayOfValues)
}

type WatchPlanAssignmentsRequestPathSelectorFieldMask struct{}

func (WatchPlanAssignmentsRequestPathSelectorFieldMask) FieldPath() *WatchPlanAssignmentsRequest_FieldTerminalPath {
	return &WatchPlanAssignmentsRequest_FieldTerminalPath{selector: WatchPlanAssignmentsRequest_FieldPathSelectorFieldMask}
}

func (s WatchPlanAssignmentsRequestPathSelectorFieldMask) WithValue(value *plan_assignment.PlanAssignment_FieldMask) *WatchPlanAssignmentsRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*WatchPlanAssignmentsRequest_FieldTerminalPathValue)
}

func (s WatchPlanAssignmentsRequestPathSelectorFieldMask) WithArrayOfValues(values []*plan_assignment.PlanAssignment_FieldMask) *WatchPlanAssignmentsRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*WatchPlanAssignmentsRequest_FieldTerminalPathArrayOfValues)
}

type WatchPlanAssignmentsRequestPathSelectorView struct{}

func (WatchPlanAssignmentsRequestPathSelectorView) FieldPath() *WatchPlanAssignmentsRequest_FieldTerminalPath {
	return &WatchPlanAssignmentsRequest_FieldTerminalPath{selector: WatchPlanAssignmentsRequest_FieldPathSelectorView}
}

func (s WatchPlanAssignmentsRequestPathSelectorView) WithValue(value view.View) *WatchPlanAssignmentsRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*WatchPlanAssignmentsRequest_FieldTerminalPathValue)
}

func (s WatchPlanAssignmentsRequestPathSelectorView) WithArrayOfValues(values []view.View) *WatchPlanAssignmentsRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*WatchPlanAssignmentsRequest_FieldTerminalPathArrayOfValues)
}

type WatchPlanAssignmentsRequestPathSelectorMaxChunkSize struct{}

func (WatchPlanAssignmentsRequestPathSelectorMaxChunkSize) FieldPath() *WatchPlanAssignmentsRequest_FieldTerminalPath {
	return &WatchPlanAssignmentsRequest_FieldTerminalPath{selector: WatchPlanAssignmentsRequest_FieldPathSelectorMaxChunkSize}
}

func (s WatchPlanAssignmentsRequestPathSelectorMaxChunkSize) WithValue(value int32) *WatchPlanAssignmentsRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*WatchPlanAssignmentsRequest_FieldTerminalPathValue)
}

func (s WatchPlanAssignmentsRequestPathSelectorMaxChunkSize) WithArrayOfValues(values []int32) *WatchPlanAssignmentsRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*WatchPlanAssignmentsRequest_FieldTerminalPathArrayOfValues)
}

type WatchPlanAssignmentsResponseFieldPathBuilder struct{}

func NewWatchPlanAssignmentsResponseFieldPathBuilder() WatchPlanAssignmentsResponseFieldPathBuilder {
	return WatchPlanAssignmentsResponseFieldPathBuilder{}
}
func (WatchPlanAssignmentsResponseFieldPathBuilder) PlanAssignmentChanges() WatchPlanAssignmentsResponsePathSelectorPlanAssignmentChanges {
	return WatchPlanAssignmentsResponsePathSelectorPlanAssignmentChanges{}
}
func (WatchPlanAssignmentsResponseFieldPathBuilder) IsCurrent() WatchPlanAssignmentsResponsePathSelectorIsCurrent {
	return WatchPlanAssignmentsResponsePathSelectorIsCurrent{}
}
func (WatchPlanAssignmentsResponseFieldPathBuilder) PageTokenChange() WatchPlanAssignmentsResponsePathSelectorPageTokenChange {
	return WatchPlanAssignmentsResponsePathSelectorPageTokenChange{}
}
func (WatchPlanAssignmentsResponseFieldPathBuilder) ResumeToken() WatchPlanAssignmentsResponsePathSelectorResumeToken {
	return WatchPlanAssignmentsResponsePathSelectorResumeToken{}
}
func (WatchPlanAssignmentsResponseFieldPathBuilder) SnapshotSize() WatchPlanAssignmentsResponsePathSelectorSnapshotSize {
	return WatchPlanAssignmentsResponsePathSelectorSnapshotSize{}
}
func (WatchPlanAssignmentsResponseFieldPathBuilder) IsSoftReset() WatchPlanAssignmentsResponsePathSelectorIsSoftReset {
	return WatchPlanAssignmentsResponsePathSelectorIsSoftReset{}
}
func (WatchPlanAssignmentsResponseFieldPathBuilder) IsHardReset() WatchPlanAssignmentsResponsePathSelectorIsHardReset {
	return WatchPlanAssignmentsResponsePathSelectorIsHardReset{}
}

type WatchPlanAssignmentsResponsePathSelectorPlanAssignmentChanges struct{}

func (WatchPlanAssignmentsResponsePathSelectorPlanAssignmentChanges) FieldPath() *WatchPlanAssignmentsResponse_FieldTerminalPath {
	return &WatchPlanAssignmentsResponse_FieldTerminalPath{selector: WatchPlanAssignmentsResponse_FieldPathSelectorPlanAssignmentChanges}
}

func (s WatchPlanAssignmentsResponsePathSelectorPlanAssignmentChanges) WithValue(value []*plan_assignment.PlanAssignmentChange) *WatchPlanAssignmentsResponse_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*WatchPlanAssignmentsResponse_FieldTerminalPathValue)
}

func (s WatchPlanAssignmentsResponsePathSelectorPlanAssignmentChanges) WithArrayOfValues(values [][]*plan_assignment.PlanAssignmentChange) *WatchPlanAssignmentsResponse_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*WatchPlanAssignmentsResponse_FieldTerminalPathArrayOfValues)
}

func (s WatchPlanAssignmentsResponsePathSelectorPlanAssignmentChanges) WithItemValue(value *plan_assignment.PlanAssignmentChange) *WatchPlanAssignmentsResponse_FieldTerminalPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*WatchPlanAssignmentsResponse_FieldTerminalPathArrayItemValue)
}

type WatchPlanAssignmentsResponsePathSelectorIsCurrent struct{}

func (WatchPlanAssignmentsResponsePathSelectorIsCurrent) FieldPath() *WatchPlanAssignmentsResponse_FieldTerminalPath {
	return &WatchPlanAssignmentsResponse_FieldTerminalPath{selector: WatchPlanAssignmentsResponse_FieldPathSelectorIsCurrent}
}

func (s WatchPlanAssignmentsResponsePathSelectorIsCurrent) WithValue(value bool) *WatchPlanAssignmentsResponse_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*WatchPlanAssignmentsResponse_FieldTerminalPathValue)
}

func (s WatchPlanAssignmentsResponsePathSelectorIsCurrent) WithArrayOfValues(values []bool) *WatchPlanAssignmentsResponse_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*WatchPlanAssignmentsResponse_FieldTerminalPathArrayOfValues)
}

type WatchPlanAssignmentsResponsePathSelectorPageTokenChange struct{}

func (WatchPlanAssignmentsResponsePathSelectorPageTokenChange) FieldPath() *WatchPlanAssignmentsResponse_FieldTerminalPath {
	return &WatchPlanAssignmentsResponse_FieldTerminalPath{selector: WatchPlanAssignmentsResponse_FieldPathSelectorPageTokenChange}
}

func (s WatchPlanAssignmentsResponsePathSelectorPageTokenChange) WithValue(value *WatchPlanAssignmentsResponse_PageTokenChange) *WatchPlanAssignmentsResponse_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*WatchPlanAssignmentsResponse_FieldTerminalPathValue)
}

func (s WatchPlanAssignmentsResponsePathSelectorPageTokenChange) WithArrayOfValues(values []*WatchPlanAssignmentsResponse_PageTokenChange) *WatchPlanAssignmentsResponse_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*WatchPlanAssignmentsResponse_FieldTerminalPathArrayOfValues)
}

func (WatchPlanAssignmentsResponsePathSelectorPageTokenChange) WithSubPath(subPath WatchPlanAssignmentsResponsePageTokenChange_FieldPath) *WatchPlanAssignmentsResponse_FieldSubPath {
	return &WatchPlanAssignmentsResponse_FieldSubPath{selector: WatchPlanAssignmentsResponse_FieldPathSelectorPageTokenChange, subPath: subPath}
}

func (s WatchPlanAssignmentsResponsePathSelectorPageTokenChange) WithSubValue(subPathValue WatchPlanAssignmentsResponsePageTokenChange_FieldPathValue) *WatchPlanAssignmentsResponse_FieldSubPathValue {
	return &WatchPlanAssignmentsResponse_FieldSubPathValue{WatchPlanAssignmentsResponse_FieldPath: s.WithSubPath(subPathValue), subPathValue: subPathValue}
}

func (s WatchPlanAssignmentsResponsePathSelectorPageTokenChange) WithSubArrayOfValues(subPathArrayOfValues WatchPlanAssignmentsResponsePageTokenChange_FieldPathArrayOfValues) *WatchPlanAssignmentsResponse_FieldSubPathArrayOfValues {
	return &WatchPlanAssignmentsResponse_FieldSubPathArrayOfValues{WatchPlanAssignmentsResponse_FieldPath: s.WithSubPath(subPathArrayOfValues), subPathArrayOfValues: subPathArrayOfValues}
}

func (s WatchPlanAssignmentsResponsePathSelectorPageTokenChange) WithSubArrayItemValue(subPathArrayItemValue WatchPlanAssignmentsResponsePageTokenChange_FieldPathArrayItemValue) *WatchPlanAssignmentsResponse_FieldSubPathArrayItemValue {
	return &WatchPlanAssignmentsResponse_FieldSubPathArrayItemValue{WatchPlanAssignmentsResponse_FieldPath: s.WithSubPath(subPathArrayItemValue), subPathItemValue: subPathArrayItemValue}
}

func (WatchPlanAssignmentsResponsePathSelectorPageTokenChange) PrevPageToken() WatchPlanAssignmentsResponsePathSelectorPageTokenChangePrevPageToken {
	return WatchPlanAssignmentsResponsePathSelectorPageTokenChangePrevPageToken{}
}

func (WatchPlanAssignmentsResponsePathSelectorPageTokenChange) NextPageToken() WatchPlanAssignmentsResponsePathSelectorPageTokenChangeNextPageToken {
	return WatchPlanAssignmentsResponsePathSelectorPageTokenChangeNextPageToken{}
}

type WatchPlanAssignmentsResponsePathSelectorPageTokenChangePrevPageToken struct{}

func (WatchPlanAssignmentsResponsePathSelectorPageTokenChangePrevPageToken) FieldPath() *WatchPlanAssignmentsResponse_FieldSubPath {
	return &WatchPlanAssignmentsResponse_FieldSubPath{
		selector: WatchPlanAssignmentsResponse_FieldPathSelectorPageTokenChange,
		subPath:  NewWatchPlanAssignmentsResponsePageTokenChangeFieldPathBuilder().PrevPageToken().FieldPath(),
	}
}

func (s WatchPlanAssignmentsResponsePathSelectorPageTokenChangePrevPageToken) WithValue(value *plan_assignment.PagerCursor) *WatchPlanAssignmentsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*WatchPlanAssignmentsResponse_FieldSubPathValue)
}

func (s WatchPlanAssignmentsResponsePathSelectorPageTokenChangePrevPageToken) WithArrayOfValues(values []*plan_assignment.PagerCursor) *WatchPlanAssignmentsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*WatchPlanAssignmentsResponse_FieldSubPathArrayOfValues)
}

type WatchPlanAssignmentsResponsePathSelectorPageTokenChangeNextPageToken struct{}

func (WatchPlanAssignmentsResponsePathSelectorPageTokenChangeNextPageToken) FieldPath() *WatchPlanAssignmentsResponse_FieldSubPath {
	return &WatchPlanAssignmentsResponse_FieldSubPath{
		selector: WatchPlanAssignmentsResponse_FieldPathSelectorPageTokenChange,
		subPath:  NewWatchPlanAssignmentsResponsePageTokenChangeFieldPathBuilder().NextPageToken().FieldPath(),
	}
}

func (s WatchPlanAssignmentsResponsePathSelectorPageTokenChangeNextPageToken) WithValue(value *plan_assignment.PagerCursor) *WatchPlanAssignmentsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*WatchPlanAssignmentsResponse_FieldSubPathValue)
}

func (s WatchPlanAssignmentsResponsePathSelectorPageTokenChangeNextPageToken) WithArrayOfValues(values []*plan_assignment.PagerCursor) *WatchPlanAssignmentsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*WatchPlanAssignmentsResponse_FieldSubPathArrayOfValues)
}

type WatchPlanAssignmentsResponsePathSelectorResumeToken struct{}

func (WatchPlanAssignmentsResponsePathSelectorResumeToken) FieldPath() *WatchPlanAssignmentsResponse_FieldTerminalPath {
	return &WatchPlanAssignmentsResponse_FieldTerminalPath{selector: WatchPlanAssignmentsResponse_FieldPathSelectorResumeToken}
}

func (s WatchPlanAssignmentsResponsePathSelectorResumeToken) WithValue(value string) *WatchPlanAssignmentsResponse_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*WatchPlanAssignmentsResponse_FieldTerminalPathValue)
}

func (s WatchPlanAssignmentsResponsePathSelectorResumeToken) WithArrayOfValues(values []string) *WatchPlanAssignmentsResponse_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*WatchPlanAssignmentsResponse_FieldTerminalPathArrayOfValues)
}

type WatchPlanAssignmentsResponsePathSelectorSnapshotSize struct{}

func (WatchPlanAssignmentsResponsePathSelectorSnapshotSize) FieldPath() *WatchPlanAssignmentsResponse_FieldTerminalPath {
	return &WatchPlanAssignmentsResponse_FieldTerminalPath{selector: WatchPlanAssignmentsResponse_FieldPathSelectorSnapshotSize}
}

func (s WatchPlanAssignmentsResponsePathSelectorSnapshotSize) WithValue(value int64) *WatchPlanAssignmentsResponse_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*WatchPlanAssignmentsResponse_FieldTerminalPathValue)
}

func (s WatchPlanAssignmentsResponsePathSelectorSnapshotSize) WithArrayOfValues(values []int64) *WatchPlanAssignmentsResponse_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*WatchPlanAssignmentsResponse_FieldTerminalPathArrayOfValues)
}

type WatchPlanAssignmentsResponsePathSelectorIsSoftReset struct{}

func (WatchPlanAssignmentsResponsePathSelectorIsSoftReset) FieldPath() *WatchPlanAssignmentsResponse_FieldTerminalPath {
	return &WatchPlanAssignmentsResponse_FieldTerminalPath{selector: WatchPlanAssignmentsResponse_FieldPathSelectorIsSoftReset}
}

func (s WatchPlanAssignmentsResponsePathSelectorIsSoftReset) WithValue(value bool) *WatchPlanAssignmentsResponse_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*WatchPlanAssignmentsResponse_FieldTerminalPathValue)
}

func (s WatchPlanAssignmentsResponsePathSelectorIsSoftReset) WithArrayOfValues(values []bool) *WatchPlanAssignmentsResponse_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*WatchPlanAssignmentsResponse_FieldTerminalPathArrayOfValues)
}

type WatchPlanAssignmentsResponsePathSelectorIsHardReset struct{}

func (WatchPlanAssignmentsResponsePathSelectorIsHardReset) FieldPath() *WatchPlanAssignmentsResponse_FieldTerminalPath {
	return &WatchPlanAssignmentsResponse_FieldTerminalPath{selector: WatchPlanAssignmentsResponse_FieldPathSelectorIsHardReset}
}

func (s WatchPlanAssignmentsResponsePathSelectorIsHardReset) WithValue(value bool) *WatchPlanAssignmentsResponse_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*WatchPlanAssignmentsResponse_FieldTerminalPathValue)
}

func (s WatchPlanAssignmentsResponsePathSelectorIsHardReset) WithArrayOfValues(values []bool) *WatchPlanAssignmentsResponse_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*WatchPlanAssignmentsResponse_FieldTerminalPathArrayOfValues)
}

type WatchPlanAssignmentsResponsePageTokenChangeFieldPathBuilder struct{}

func NewWatchPlanAssignmentsResponsePageTokenChangeFieldPathBuilder() WatchPlanAssignmentsResponsePageTokenChangeFieldPathBuilder {
	return WatchPlanAssignmentsResponsePageTokenChangeFieldPathBuilder{}
}
func (WatchPlanAssignmentsResponsePageTokenChangeFieldPathBuilder) PrevPageToken() WatchPlanAssignmentsResponse_PageTokenChangePathSelectorPrevPageToken {
	return WatchPlanAssignmentsResponse_PageTokenChangePathSelectorPrevPageToken{}
}
func (WatchPlanAssignmentsResponsePageTokenChangeFieldPathBuilder) NextPageToken() WatchPlanAssignmentsResponse_PageTokenChangePathSelectorNextPageToken {
	return WatchPlanAssignmentsResponse_PageTokenChangePathSelectorNextPageToken{}
}

type WatchPlanAssignmentsResponse_PageTokenChangePathSelectorPrevPageToken struct{}

func (WatchPlanAssignmentsResponse_PageTokenChangePathSelectorPrevPageToken) FieldPath() *WatchPlanAssignmentsResponsePageTokenChange_FieldTerminalPath {
	return &WatchPlanAssignmentsResponsePageTokenChange_FieldTerminalPath{selector: WatchPlanAssignmentsResponsePageTokenChange_FieldPathSelectorPrevPageToken}
}

func (s WatchPlanAssignmentsResponse_PageTokenChangePathSelectorPrevPageToken) WithValue(value *plan_assignment.PagerCursor) *WatchPlanAssignmentsResponsePageTokenChange_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*WatchPlanAssignmentsResponsePageTokenChange_FieldTerminalPathValue)
}

func (s WatchPlanAssignmentsResponse_PageTokenChangePathSelectorPrevPageToken) WithArrayOfValues(values []*plan_assignment.PagerCursor) *WatchPlanAssignmentsResponsePageTokenChange_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*WatchPlanAssignmentsResponsePageTokenChange_FieldTerminalPathArrayOfValues)
}

type WatchPlanAssignmentsResponse_PageTokenChangePathSelectorNextPageToken struct{}

func (WatchPlanAssignmentsResponse_PageTokenChangePathSelectorNextPageToken) FieldPath() *WatchPlanAssignmentsResponsePageTokenChange_FieldTerminalPath {
	return &WatchPlanAssignmentsResponsePageTokenChange_FieldTerminalPath{selector: WatchPlanAssignmentsResponsePageTokenChange_FieldPathSelectorNextPageToken}
}

func (s WatchPlanAssignmentsResponse_PageTokenChangePathSelectorNextPageToken) WithValue(value *plan_assignment.PagerCursor) *WatchPlanAssignmentsResponsePageTokenChange_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*WatchPlanAssignmentsResponsePageTokenChange_FieldTerminalPathValue)
}

func (s WatchPlanAssignmentsResponse_PageTokenChangePathSelectorNextPageToken) WithArrayOfValues(values []*plan_assignment.PagerCursor) *WatchPlanAssignmentsResponsePageTokenChange_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*WatchPlanAssignmentsResponsePageTokenChange_FieldTerminalPathArrayOfValues)
}

type CreatePlanAssignmentRequestFieldPathBuilder struct{}

func NewCreatePlanAssignmentRequestFieldPathBuilder() CreatePlanAssignmentRequestFieldPathBuilder {
	return CreatePlanAssignmentRequestFieldPathBuilder{}
}
func (CreatePlanAssignmentRequestFieldPathBuilder) Parent() CreatePlanAssignmentRequestPathSelectorParent {
	return CreatePlanAssignmentRequestPathSelectorParent{}
}
func (CreatePlanAssignmentRequestFieldPathBuilder) PlanAssignment() CreatePlanAssignmentRequestPathSelectorPlanAssignment {
	return CreatePlanAssignmentRequestPathSelectorPlanAssignment{}
}

type CreatePlanAssignmentRequestPathSelectorParent struct{}

func (CreatePlanAssignmentRequestPathSelectorParent) FieldPath() *CreatePlanAssignmentRequest_FieldTerminalPath {
	return &CreatePlanAssignmentRequest_FieldTerminalPath{selector: CreatePlanAssignmentRequest_FieldPathSelectorParent}
}

func (s CreatePlanAssignmentRequestPathSelectorParent) WithValue(value *plan_assignment.ParentReference) *CreatePlanAssignmentRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*CreatePlanAssignmentRequest_FieldTerminalPathValue)
}

func (s CreatePlanAssignmentRequestPathSelectorParent) WithArrayOfValues(values []*plan_assignment.ParentReference) *CreatePlanAssignmentRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CreatePlanAssignmentRequest_FieldTerminalPathArrayOfValues)
}

type CreatePlanAssignmentRequestPathSelectorPlanAssignment struct{}

func (CreatePlanAssignmentRequestPathSelectorPlanAssignment) FieldPath() *CreatePlanAssignmentRequest_FieldTerminalPath {
	return &CreatePlanAssignmentRequest_FieldTerminalPath{selector: CreatePlanAssignmentRequest_FieldPathSelectorPlanAssignment}
}

func (s CreatePlanAssignmentRequestPathSelectorPlanAssignment) WithValue(value *plan_assignment.PlanAssignment) *CreatePlanAssignmentRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*CreatePlanAssignmentRequest_FieldTerminalPathValue)
}

func (s CreatePlanAssignmentRequestPathSelectorPlanAssignment) WithArrayOfValues(values []*plan_assignment.PlanAssignment) *CreatePlanAssignmentRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CreatePlanAssignmentRequest_FieldTerminalPathArrayOfValues)
}

func (CreatePlanAssignmentRequestPathSelectorPlanAssignment) WithSubPath(subPath plan_assignment.PlanAssignment_FieldPath) *CreatePlanAssignmentRequest_FieldSubPath {
	return &CreatePlanAssignmentRequest_FieldSubPath{selector: CreatePlanAssignmentRequest_FieldPathSelectorPlanAssignment, subPath: subPath}
}

func (s CreatePlanAssignmentRequestPathSelectorPlanAssignment) WithSubValue(subPathValue plan_assignment.PlanAssignment_FieldPathValue) *CreatePlanAssignmentRequest_FieldSubPathValue {
	return &CreatePlanAssignmentRequest_FieldSubPathValue{CreatePlanAssignmentRequest_FieldPath: s.WithSubPath(subPathValue), subPathValue: subPathValue}
}

func (s CreatePlanAssignmentRequestPathSelectorPlanAssignment) WithSubArrayOfValues(subPathArrayOfValues plan_assignment.PlanAssignment_FieldPathArrayOfValues) *CreatePlanAssignmentRequest_FieldSubPathArrayOfValues {
	return &CreatePlanAssignmentRequest_FieldSubPathArrayOfValues{CreatePlanAssignmentRequest_FieldPath: s.WithSubPath(subPathArrayOfValues), subPathArrayOfValues: subPathArrayOfValues}
}

func (s CreatePlanAssignmentRequestPathSelectorPlanAssignment) WithSubArrayItemValue(subPathArrayItemValue plan_assignment.PlanAssignment_FieldPathArrayItemValue) *CreatePlanAssignmentRequest_FieldSubPathArrayItemValue {
	return &CreatePlanAssignmentRequest_FieldSubPathArrayItemValue{CreatePlanAssignmentRequest_FieldPath: s.WithSubPath(subPathArrayItemValue), subPathItemValue: subPathArrayItemValue}
}

func (CreatePlanAssignmentRequestPathSelectorPlanAssignment) Name() CreatePlanAssignmentRequestPathSelectorPlanAssignmentName {
	return CreatePlanAssignmentRequestPathSelectorPlanAssignmentName{}
}

func (CreatePlanAssignmentRequestPathSelectorPlanAssignment) Plan() CreatePlanAssignmentRequestPathSelectorPlanAssignmentPlan {
	return CreatePlanAssignmentRequestPathSelectorPlanAssignmentPlan{}
}

func (CreatePlanAssignmentRequestPathSelectorPlanAssignment) Service() CreatePlanAssignmentRequestPathSelectorPlanAssignmentService {
	return CreatePlanAssignmentRequestPathSelectorPlanAssignmentService{}
}

func (CreatePlanAssignmentRequestPathSelectorPlanAssignment) Extensions() CreatePlanAssignmentRequestPathSelectorPlanAssignmentExtensions {
	return CreatePlanAssignmentRequestPathSelectorPlanAssignmentExtensions{}
}

func (CreatePlanAssignmentRequestPathSelectorPlanAssignment) RegionalDistributions() CreatePlanAssignmentRequestPathSelectorPlanAssignmentRegionalDistributions {
	return CreatePlanAssignmentRequestPathSelectorPlanAssignmentRegionalDistributions{}
}

func (CreatePlanAssignmentRequestPathSelectorPlanAssignment) Source() CreatePlanAssignmentRequestPathSelectorPlanAssignmentSource {
	return CreatePlanAssignmentRequestPathSelectorPlanAssignmentSource{}
}

func (CreatePlanAssignmentRequestPathSelectorPlanAssignment) Metadata() CreatePlanAssignmentRequestPathSelectorPlanAssignmentMetadata {
	return CreatePlanAssignmentRequestPathSelectorPlanAssignmentMetadata{}
}

type CreatePlanAssignmentRequestPathSelectorPlanAssignmentName struct{}

func (CreatePlanAssignmentRequestPathSelectorPlanAssignmentName) FieldPath() *CreatePlanAssignmentRequest_FieldSubPath {
	return &CreatePlanAssignmentRequest_FieldSubPath{
		selector: CreatePlanAssignmentRequest_FieldPathSelectorPlanAssignment,
		subPath:  plan_assignment.NewPlanAssignmentFieldPathBuilder().Name().FieldPath(),
	}
}

func (s CreatePlanAssignmentRequestPathSelectorPlanAssignmentName) WithValue(value *plan_assignment.Name) *CreatePlanAssignmentRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*CreatePlanAssignmentRequest_FieldSubPathValue)
}

func (s CreatePlanAssignmentRequestPathSelectorPlanAssignmentName) WithArrayOfValues(values []*plan_assignment.Name) *CreatePlanAssignmentRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CreatePlanAssignmentRequest_FieldSubPathArrayOfValues)
}

type CreatePlanAssignmentRequestPathSelectorPlanAssignmentPlan struct{}

func (CreatePlanAssignmentRequestPathSelectorPlanAssignmentPlan) FieldPath() *CreatePlanAssignmentRequest_FieldSubPath {
	return &CreatePlanAssignmentRequest_FieldSubPath{
		selector: CreatePlanAssignmentRequest_FieldPathSelectorPlanAssignment,
		subPath:  plan_assignment.NewPlanAssignmentFieldPathBuilder().Plan().FieldPath(),
	}
}

func (s CreatePlanAssignmentRequestPathSelectorPlanAssignmentPlan) WithValue(value *plan.Reference) *CreatePlanAssignmentRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*CreatePlanAssignmentRequest_FieldSubPathValue)
}

func (s CreatePlanAssignmentRequestPathSelectorPlanAssignmentPlan) WithArrayOfValues(values []*plan.Reference) *CreatePlanAssignmentRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CreatePlanAssignmentRequest_FieldSubPathArrayOfValues)
}

type CreatePlanAssignmentRequestPathSelectorPlanAssignmentService struct{}

func (CreatePlanAssignmentRequestPathSelectorPlanAssignmentService) FieldPath() *CreatePlanAssignmentRequest_FieldSubPath {
	return &CreatePlanAssignmentRequest_FieldSubPath{
		selector: CreatePlanAssignmentRequest_FieldPathSelectorPlanAssignment,
		subPath:  plan_assignment.NewPlanAssignmentFieldPathBuilder().Service().FieldPath(),
	}
}

func (s CreatePlanAssignmentRequestPathSelectorPlanAssignmentService) WithValue(value *meta_service.Reference) *CreatePlanAssignmentRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*CreatePlanAssignmentRequest_FieldSubPathValue)
}

func (s CreatePlanAssignmentRequestPathSelectorPlanAssignmentService) WithArrayOfValues(values []*meta_service.Reference) *CreatePlanAssignmentRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CreatePlanAssignmentRequest_FieldSubPathArrayOfValues)
}

type CreatePlanAssignmentRequestPathSelectorPlanAssignmentExtensions struct{}

func (CreatePlanAssignmentRequestPathSelectorPlanAssignmentExtensions) FieldPath() *CreatePlanAssignmentRequest_FieldSubPath {
	return &CreatePlanAssignmentRequest_FieldSubPath{
		selector: CreatePlanAssignmentRequest_FieldPathSelectorPlanAssignment,
		subPath:  plan_assignment.NewPlanAssignmentFieldPathBuilder().Extensions().FieldPath(),
	}
}

func (s CreatePlanAssignmentRequestPathSelectorPlanAssignmentExtensions) WithValue(value []*common.Allowance) *CreatePlanAssignmentRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*CreatePlanAssignmentRequest_FieldSubPathValue)
}

func (s CreatePlanAssignmentRequestPathSelectorPlanAssignmentExtensions) WithArrayOfValues(values [][]*common.Allowance) *CreatePlanAssignmentRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CreatePlanAssignmentRequest_FieldSubPathArrayOfValues)
}

func (s CreatePlanAssignmentRequestPathSelectorPlanAssignmentExtensions) WithItemValue(value *common.Allowance) *CreatePlanAssignmentRequest_FieldSubPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*CreatePlanAssignmentRequest_FieldSubPathArrayItemValue)
}

func (CreatePlanAssignmentRequestPathSelectorPlanAssignmentExtensions) Resource() CreatePlanAssignmentRequestPathSelectorPlanAssignmentExtensionsResource {
	return CreatePlanAssignmentRequestPathSelectorPlanAssignmentExtensionsResource{}
}

func (CreatePlanAssignmentRequestPathSelectorPlanAssignmentExtensions) Value() CreatePlanAssignmentRequestPathSelectorPlanAssignmentExtensionsValue {
	return CreatePlanAssignmentRequestPathSelectorPlanAssignmentExtensionsValue{}
}

type CreatePlanAssignmentRequestPathSelectorPlanAssignmentExtensionsResource struct{}

func (CreatePlanAssignmentRequestPathSelectorPlanAssignmentExtensionsResource) FieldPath() *CreatePlanAssignmentRequest_FieldSubPath {
	return &CreatePlanAssignmentRequest_FieldSubPath{
		selector: CreatePlanAssignmentRequest_FieldPathSelectorPlanAssignment,
		subPath:  plan_assignment.NewPlanAssignmentFieldPathBuilder().Extensions().Resource().FieldPath(),
	}
}

func (s CreatePlanAssignmentRequestPathSelectorPlanAssignmentExtensionsResource) WithValue(value *meta_resource.Reference) *CreatePlanAssignmentRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*CreatePlanAssignmentRequest_FieldSubPathValue)
}

func (s CreatePlanAssignmentRequestPathSelectorPlanAssignmentExtensionsResource) WithArrayOfValues(values []*meta_resource.Reference) *CreatePlanAssignmentRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CreatePlanAssignmentRequest_FieldSubPathArrayOfValues)
}

type CreatePlanAssignmentRequestPathSelectorPlanAssignmentExtensionsValue struct{}

func (CreatePlanAssignmentRequestPathSelectorPlanAssignmentExtensionsValue) FieldPath() *CreatePlanAssignmentRequest_FieldSubPath {
	return &CreatePlanAssignmentRequest_FieldSubPath{
		selector: CreatePlanAssignmentRequest_FieldPathSelectorPlanAssignment,
		subPath:  plan_assignment.NewPlanAssignmentFieldPathBuilder().Extensions().Value().FieldPath(),
	}
}

func (s CreatePlanAssignmentRequestPathSelectorPlanAssignmentExtensionsValue) WithValue(value int64) *CreatePlanAssignmentRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*CreatePlanAssignmentRequest_FieldSubPathValue)
}

func (s CreatePlanAssignmentRequestPathSelectorPlanAssignmentExtensionsValue) WithArrayOfValues(values []int64) *CreatePlanAssignmentRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CreatePlanAssignmentRequest_FieldSubPathArrayOfValues)
}

type CreatePlanAssignmentRequestPathSelectorPlanAssignmentRegionalDistributions struct{}

func (CreatePlanAssignmentRequestPathSelectorPlanAssignmentRegionalDistributions) FieldPath() *CreatePlanAssignmentRequest_FieldSubPath {
	return &CreatePlanAssignmentRequest_FieldSubPath{
		selector: CreatePlanAssignmentRequest_FieldPathSelectorPlanAssignment,
		subPath:  plan_assignment.NewPlanAssignmentFieldPathBuilder().RegionalDistributions().FieldPath(),
	}
}

func (s CreatePlanAssignmentRequestPathSelectorPlanAssignmentRegionalDistributions) WithValue(value []*common.RegionalDistribution) *CreatePlanAssignmentRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*CreatePlanAssignmentRequest_FieldSubPathValue)
}

func (s CreatePlanAssignmentRequestPathSelectorPlanAssignmentRegionalDistributions) WithArrayOfValues(values [][]*common.RegionalDistribution) *CreatePlanAssignmentRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CreatePlanAssignmentRequest_FieldSubPathArrayOfValues)
}

func (s CreatePlanAssignmentRequestPathSelectorPlanAssignmentRegionalDistributions) WithItemValue(value *common.RegionalDistribution) *CreatePlanAssignmentRequest_FieldSubPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*CreatePlanAssignmentRequest_FieldSubPathArrayItemValue)
}

func (CreatePlanAssignmentRequestPathSelectorPlanAssignmentRegionalDistributions) Resource() CreatePlanAssignmentRequestPathSelectorPlanAssignmentRegionalDistributionsResource {
	return CreatePlanAssignmentRequestPathSelectorPlanAssignmentRegionalDistributionsResource{}
}

func (CreatePlanAssignmentRequestPathSelectorPlanAssignmentRegionalDistributions) LimitsByRegion() CreatePlanAssignmentRequestPathSelectorPlanAssignmentRegionalDistributionsLimitsByRegion {
	return CreatePlanAssignmentRequestPathSelectorPlanAssignmentRegionalDistributionsLimitsByRegion{}
}

type CreatePlanAssignmentRequestPathSelectorPlanAssignmentRegionalDistributionsResource struct{}

func (CreatePlanAssignmentRequestPathSelectorPlanAssignmentRegionalDistributionsResource) FieldPath() *CreatePlanAssignmentRequest_FieldSubPath {
	return &CreatePlanAssignmentRequest_FieldSubPath{
		selector: CreatePlanAssignmentRequest_FieldPathSelectorPlanAssignment,
		subPath:  plan_assignment.NewPlanAssignmentFieldPathBuilder().RegionalDistributions().Resource().FieldPath(),
	}
}

func (s CreatePlanAssignmentRequestPathSelectorPlanAssignmentRegionalDistributionsResource) WithValue(value *meta_resource.Reference) *CreatePlanAssignmentRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*CreatePlanAssignmentRequest_FieldSubPathValue)
}

func (s CreatePlanAssignmentRequestPathSelectorPlanAssignmentRegionalDistributionsResource) WithArrayOfValues(values []*meta_resource.Reference) *CreatePlanAssignmentRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CreatePlanAssignmentRequest_FieldSubPathArrayOfValues)
}

type CreatePlanAssignmentRequestPathSelectorPlanAssignmentRegionalDistributionsLimitsByRegion struct{}

func (CreatePlanAssignmentRequestPathSelectorPlanAssignmentRegionalDistributionsLimitsByRegion) FieldPath() *CreatePlanAssignmentRequest_FieldSubPath {
	return &CreatePlanAssignmentRequest_FieldSubPath{
		selector: CreatePlanAssignmentRequest_FieldPathSelectorPlanAssignment,
		subPath:  plan_assignment.NewPlanAssignmentFieldPathBuilder().RegionalDistributions().LimitsByRegion().FieldPath(),
	}
}

func (s CreatePlanAssignmentRequestPathSelectorPlanAssignmentRegionalDistributionsLimitsByRegion) WithValue(value map[string]int64) *CreatePlanAssignmentRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*CreatePlanAssignmentRequest_FieldSubPathValue)
}

func (s CreatePlanAssignmentRequestPathSelectorPlanAssignmentRegionalDistributionsLimitsByRegion) WithArrayOfValues(values []map[string]int64) *CreatePlanAssignmentRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CreatePlanAssignmentRequest_FieldSubPathArrayOfValues)
}

func (CreatePlanAssignmentRequestPathSelectorPlanAssignmentRegionalDistributionsLimitsByRegion) WithKey(key string) CreatePlanAssignmentRequestMapPathSelectorPlanAssignmentRegionalDistributionsLimitsByRegion {
	return CreatePlanAssignmentRequestMapPathSelectorPlanAssignmentRegionalDistributionsLimitsByRegion{key: key}
}

type CreatePlanAssignmentRequestMapPathSelectorPlanAssignmentRegionalDistributionsLimitsByRegion struct {
	key string
}

func (s CreatePlanAssignmentRequestMapPathSelectorPlanAssignmentRegionalDistributionsLimitsByRegion) FieldPath() *CreatePlanAssignmentRequest_FieldSubPath {
	return &CreatePlanAssignmentRequest_FieldSubPath{
		selector: CreatePlanAssignmentRequest_FieldPathSelectorPlanAssignment,
		subPath:  plan_assignment.NewPlanAssignmentFieldPathBuilder().RegionalDistributions().LimitsByRegion().WithKey(s.key).FieldPath(),
	}
}

func (s CreatePlanAssignmentRequestMapPathSelectorPlanAssignmentRegionalDistributionsLimitsByRegion) WithValue(value int64) *CreatePlanAssignmentRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*CreatePlanAssignmentRequest_FieldSubPathValue)
}

func (s CreatePlanAssignmentRequestMapPathSelectorPlanAssignmentRegionalDistributionsLimitsByRegion) WithArrayOfValues(values []int64) *CreatePlanAssignmentRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CreatePlanAssignmentRequest_FieldSubPathArrayOfValues)
}

type CreatePlanAssignmentRequestPathSelectorPlanAssignmentSource struct{}

func (CreatePlanAssignmentRequestPathSelectorPlanAssignmentSource) FieldPath() *CreatePlanAssignmentRequest_FieldSubPath {
	return &CreatePlanAssignmentRequest_FieldSubPath{
		selector: CreatePlanAssignmentRequest_FieldPathSelectorPlanAssignment,
		subPath:  plan_assignment.NewPlanAssignmentFieldPathBuilder().Source().FieldPath(),
	}
}

func (s CreatePlanAssignmentRequestPathSelectorPlanAssignmentSource) WithValue(value *accepted_plan.Reference) *CreatePlanAssignmentRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*CreatePlanAssignmentRequest_FieldSubPathValue)
}

func (s CreatePlanAssignmentRequestPathSelectorPlanAssignmentSource) WithArrayOfValues(values []*accepted_plan.Reference) *CreatePlanAssignmentRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CreatePlanAssignmentRequest_FieldSubPathArrayOfValues)
}

type CreatePlanAssignmentRequestPathSelectorPlanAssignmentMetadata struct{}

func (CreatePlanAssignmentRequestPathSelectorPlanAssignmentMetadata) FieldPath() *CreatePlanAssignmentRequest_FieldSubPath {
	return &CreatePlanAssignmentRequest_FieldSubPath{
		selector: CreatePlanAssignmentRequest_FieldPathSelectorPlanAssignment,
		subPath:  plan_assignment.NewPlanAssignmentFieldPathBuilder().Metadata().FieldPath(),
	}
}

func (s CreatePlanAssignmentRequestPathSelectorPlanAssignmentMetadata) WithValue(value *ntt_meta.Meta) *CreatePlanAssignmentRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*CreatePlanAssignmentRequest_FieldSubPathValue)
}

func (s CreatePlanAssignmentRequestPathSelectorPlanAssignmentMetadata) WithArrayOfValues(values []*ntt_meta.Meta) *CreatePlanAssignmentRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CreatePlanAssignmentRequest_FieldSubPathArrayOfValues)
}

func (CreatePlanAssignmentRequestPathSelectorPlanAssignmentMetadata) CreateTime() CreatePlanAssignmentRequestPathSelectorPlanAssignmentMetadataCreateTime {
	return CreatePlanAssignmentRequestPathSelectorPlanAssignmentMetadataCreateTime{}
}

func (CreatePlanAssignmentRequestPathSelectorPlanAssignmentMetadata) UpdateTime() CreatePlanAssignmentRequestPathSelectorPlanAssignmentMetadataUpdateTime {
	return CreatePlanAssignmentRequestPathSelectorPlanAssignmentMetadataUpdateTime{}
}

func (CreatePlanAssignmentRequestPathSelectorPlanAssignmentMetadata) Uuid() CreatePlanAssignmentRequestPathSelectorPlanAssignmentMetadataUuid {
	return CreatePlanAssignmentRequestPathSelectorPlanAssignmentMetadataUuid{}
}

func (CreatePlanAssignmentRequestPathSelectorPlanAssignmentMetadata) Tags() CreatePlanAssignmentRequestPathSelectorPlanAssignmentMetadataTags {
	return CreatePlanAssignmentRequestPathSelectorPlanAssignmentMetadataTags{}
}

func (CreatePlanAssignmentRequestPathSelectorPlanAssignmentMetadata) Labels() CreatePlanAssignmentRequestPathSelectorPlanAssignmentMetadataLabels {
	return CreatePlanAssignmentRequestPathSelectorPlanAssignmentMetadataLabels{}
}

func (CreatePlanAssignmentRequestPathSelectorPlanAssignmentMetadata) Annotations() CreatePlanAssignmentRequestPathSelectorPlanAssignmentMetadataAnnotations {
	return CreatePlanAssignmentRequestPathSelectorPlanAssignmentMetadataAnnotations{}
}

func (CreatePlanAssignmentRequestPathSelectorPlanAssignmentMetadata) Generation() CreatePlanAssignmentRequestPathSelectorPlanAssignmentMetadataGeneration {
	return CreatePlanAssignmentRequestPathSelectorPlanAssignmentMetadataGeneration{}
}

func (CreatePlanAssignmentRequestPathSelectorPlanAssignmentMetadata) ResourceVersion() CreatePlanAssignmentRequestPathSelectorPlanAssignmentMetadataResourceVersion {
	return CreatePlanAssignmentRequestPathSelectorPlanAssignmentMetadataResourceVersion{}
}

func (CreatePlanAssignmentRequestPathSelectorPlanAssignmentMetadata) OwnerReferences() CreatePlanAssignmentRequestPathSelectorPlanAssignmentMetadataOwnerReferences {
	return CreatePlanAssignmentRequestPathSelectorPlanAssignmentMetadataOwnerReferences{}
}

func (CreatePlanAssignmentRequestPathSelectorPlanAssignmentMetadata) Shards() CreatePlanAssignmentRequestPathSelectorPlanAssignmentMetadataShards {
	return CreatePlanAssignmentRequestPathSelectorPlanAssignmentMetadataShards{}
}

func (CreatePlanAssignmentRequestPathSelectorPlanAssignmentMetadata) Syncing() CreatePlanAssignmentRequestPathSelectorPlanAssignmentMetadataSyncing {
	return CreatePlanAssignmentRequestPathSelectorPlanAssignmentMetadataSyncing{}
}

type CreatePlanAssignmentRequestPathSelectorPlanAssignmentMetadataCreateTime struct{}

func (CreatePlanAssignmentRequestPathSelectorPlanAssignmentMetadataCreateTime) FieldPath() *CreatePlanAssignmentRequest_FieldSubPath {
	return &CreatePlanAssignmentRequest_FieldSubPath{
		selector: CreatePlanAssignmentRequest_FieldPathSelectorPlanAssignment,
		subPath:  plan_assignment.NewPlanAssignmentFieldPathBuilder().Metadata().CreateTime().FieldPath(),
	}
}

func (s CreatePlanAssignmentRequestPathSelectorPlanAssignmentMetadataCreateTime) WithValue(value *timestamp.Timestamp) *CreatePlanAssignmentRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*CreatePlanAssignmentRequest_FieldSubPathValue)
}

func (s CreatePlanAssignmentRequestPathSelectorPlanAssignmentMetadataCreateTime) WithArrayOfValues(values []*timestamp.Timestamp) *CreatePlanAssignmentRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CreatePlanAssignmentRequest_FieldSubPathArrayOfValues)
}

type CreatePlanAssignmentRequestPathSelectorPlanAssignmentMetadataUpdateTime struct{}

func (CreatePlanAssignmentRequestPathSelectorPlanAssignmentMetadataUpdateTime) FieldPath() *CreatePlanAssignmentRequest_FieldSubPath {
	return &CreatePlanAssignmentRequest_FieldSubPath{
		selector: CreatePlanAssignmentRequest_FieldPathSelectorPlanAssignment,
		subPath:  plan_assignment.NewPlanAssignmentFieldPathBuilder().Metadata().UpdateTime().FieldPath(),
	}
}

func (s CreatePlanAssignmentRequestPathSelectorPlanAssignmentMetadataUpdateTime) WithValue(value *timestamp.Timestamp) *CreatePlanAssignmentRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*CreatePlanAssignmentRequest_FieldSubPathValue)
}

func (s CreatePlanAssignmentRequestPathSelectorPlanAssignmentMetadataUpdateTime) WithArrayOfValues(values []*timestamp.Timestamp) *CreatePlanAssignmentRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CreatePlanAssignmentRequest_FieldSubPathArrayOfValues)
}

type CreatePlanAssignmentRequestPathSelectorPlanAssignmentMetadataUuid struct{}

func (CreatePlanAssignmentRequestPathSelectorPlanAssignmentMetadataUuid) FieldPath() *CreatePlanAssignmentRequest_FieldSubPath {
	return &CreatePlanAssignmentRequest_FieldSubPath{
		selector: CreatePlanAssignmentRequest_FieldPathSelectorPlanAssignment,
		subPath:  plan_assignment.NewPlanAssignmentFieldPathBuilder().Metadata().Uuid().FieldPath(),
	}
}

func (s CreatePlanAssignmentRequestPathSelectorPlanAssignmentMetadataUuid) WithValue(value string) *CreatePlanAssignmentRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*CreatePlanAssignmentRequest_FieldSubPathValue)
}

func (s CreatePlanAssignmentRequestPathSelectorPlanAssignmentMetadataUuid) WithArrayOfValues(values []string) *CreatePlanAssignmentRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CreatePlanAssignmentRequest_FieldSubPathArrayOfValues)
}

type CreatePlanAssignmentRequestPathSelectorPlanAssignmentMetadataTags struct{}

func (CreatePlanAssignmentRequestPathSelectorPlanAssignmentMetadataTags) FieldPath() *CreatePlanAssignmentRequest_FieldSubPath {
	return &CreatePlanAssignmentRequest_FieldSubPath{
		selector: CreatePlanAssignmentRequest_FieldPathSelectorPlanAssignment,
		subPath:  plan_assignment.NewPlanAssignmentFieldPathBuilder().Metadata().Tags().FieldPath(),
	}
}

func (s CreatePlanAssignmentRequestPathSelectorPlanAssignmentMetadataTags) WithValue(value []string) *CreatePlanAssignmentRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*CreatePlanAssignmentRequest_FieldSubPathValue)
}

func (s CreatePlanAssignmentRequestPathSelectorPlanAssignmentMetadataTags) WithArrayOfValues(values [][]string) *CreatePlanAssignmentRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CreatePlanAssignmentRequest_FieldSubPathArrayOfValues)
}

func (s CreatePlanAssignmentRequestPathSelectorPlanAssignmentMetadataTags) WithItemValue(value string) *CreatePlanAssignmentRequest_FieldSubPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*CreatePlanAssignmentRequest_FieldSubPathArrayItemValue)
}

type CreatePlanAssignmentRequestPathSelectorPlanAssignmentMetadataLabels struct{}

func (CreatePlanAssignmentRequestPathSelectorPlanAssignmentMetadataLabels) FieldPath() *CreatePlanAssignmentRequest_FieldSubPath {
	return &CreatePlanAssignmentRequest_FieldSubPath{
		selector: CreatePlanAssignmentRequest_FieldPathSelectorPlanAssignment,
		subPath:  plan_assignment.NewPlanAssignmentFieldPathBuilder().Metadata().Labels().FieldPath(),
	}
}

func (s CreatePlanAssignmentRequestPathSelectorPlanAssignmentMetadataLabels) WithValue(value map[string]string) *CreatePlanAssignmentRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*CreatePlanAssignmentRequest_FieldSubPathValue)
}

func (s CreatePlanAssignmentRequestPathSelectorPlanAssignmentMetadataLabels) WithArrayOfValues(values []map[string]string) *CreatePlanAssignmentRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CreatePlanAssignmentRequest_FieldSubPathArrayOfValues)
}

func (CreatePlanAssignmentRequestPathSelectorPlanAssignmentMetadataLabels) WithKey(key string) CreatePlanAssignmentRequestMapPathSelectorPlanAssignmentMetadataLabels {
	return CreatePlanAssignmentRequestMapPathSelectorPlanAssignmentMetadataLabels{key: key}
}

type CreatePlanAssignmentRequestMapPathSelectorPlanAssignmentMetadataLabels struct {
	key string
}

func (s CreatePlanAssignmentRequestMapPathSelectorPlanAssignmentMetadataLabels) FieldPath() *CreatePlanAssignmentRequest_FieldSubPath {
	return &CreatePlanAssignmentRequest_FieldSubPath{
		selector: CreatePlanAssignmentRequest_FieldPathSelectorPlanAssignment,
		subPath:  plan_assignment.NewPlanAssignmentFieldPathBuilder().Metadata().Labels().WithKey(s.key).FieldPath(),
	}
}

func (s CreatePlanAssignmentRequestMapPathSelectorPlanAssignmentMetadataLabels) WithValue(value string) *CreatePlanAssignmentRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*CreatePlanAssignmentRequest_FieldSubPathValue)
}

func (s CreatePlanAssignmentRequestMapPathSelectorPlanAssignmentMetadataLabels) WithArrayOfValues(values []string) *CreatePlanAssignmentRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CreatePlanAssignmentRequest_FieldSubPathArrayOfValues)
}

type CreatePlanAssignmentRequestPathSelectorPlanAssignmentMetadataAnnotations struct{}

func (CreatePlanAssignmentRequestPathSelectorPlanAssignmentMetadataAnnotations) FieldPath() *CreatePlanAssignmentRequest_FieldSubPath {
	return &CreatePlanAssignmentRequest_FieldSubPath{
		selector: CreatePlanAssignmentRequest_FieldPathSelectorPlanAssignment,
		subPath:  plan_assignment.NewPlanAssignmentFieldPathBuilder().Metadata().Annotations().FieldPath(),
	}
}

func (s CreatePlanAssignmentRequestPathSelectorPlanAssignmentMetadataAnnotations) WithValue(value map[string]string) *CreatePlanAssignmentRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*CreatePlanAssignmentRequest_FieldSubPathValue)
}

func (s CreatePlanAssignmentRequestPathSelectorPlanAssignmentMetadataAnnotations) WithArrayOfValues(values []map[string]string) *CreatePlanAssignmentRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CreatePlanAssignmentRequest_FieldSubPathArrayOfValues)
}

func (CreatePlanAssignmentRequestPathSelectorPlanAssignmentMetadataAnnotations) WithKey(key string) CreatePlanAssignmentRequestMapPathSelectorPlanAssignmentMetadataAnnotations {
	return CreatePlanAssignmentRequestMapPathSelectorPlanAssignmentMetadataAnnotations{key: key}
}

type CreatePlanAssignmentRequestMapPathSelectorPlanAssignmentMetadataAnnotations struct {
	key string
}

func (s CreatePlanAssignmentRequestMapPathSelectorPlanAssignmentMetadataAnnotations) FieldPath() *CreatePlanAssignmentRequest_FieldSubPath {
	return &CreatePlanAssignmentRequest_FieldSubPath{
		selector: CreatePlanAssignmentRequest_FieldPathSelectorPlanAssignment,
		subPath:  plan_assignment.NewPlanAssignmentFieldPathBuilder().Metadata().Annotations().WithKey(s.key).FieldPath(),
	}
}

func (s CreatePlanAssignmentRequestMapPathSelectorPlanAssignmentMetadataAnnotations) WithValue(value string) *CreatePlanAssignmentRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*CreatePlanAssignmentRequest_FieldSubPathValue)
}

func (s CreatePlanAssignmentRequestMapPathSelectorPlanAssignmentMetadataAnnotations) WithArrayOfValues(values []string) *CreatePlanAssignmentRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CreatePlanAssignmentRequest_FieldSubPathArrayOfValues)
}

type CreatePlanAssignmentRequestPathSelectorPlanAssignmentMetadataGeneration struct{}

func (CreatePlanAssignmentRequestPathSelectorPlanAssignmentMetadataGeneration) FieldPath() *CreatePlanAssignmentRequest_FieldSubPath {
	return &CreatePlanAssignmentRequest_FieldSubPath{
		selector: CreatePlanAssignmentRequest_FieldPathSelectorPlanAssignment,
		subPath:  plan_assignment.NewPlanAssignmentFieldPathBuilder().Metadata().Generation().FieldPath(),
	}
}

func (s CreatePlanAssignmentRequestPathSelectorPlanAssignmentMetadataGeneration) WithValue(value int64) *CreatePlanAssignmentRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*CreatePlanAssignmentRequest_FieldSubPathValue)
}

func (s CreatePlanAssignmentRequestPathSelectorPlanAssignmentMetadataGeneration) WithArrayOfValues(values []int64) *CreatePlanAssignmentRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CreatePlanAssignmentRequest_FieldSubPathArrayOfValues)
}

type CreatePlanAssignmentRequestPathSelectorPlanAssignmentMetadataResourceVersion struct{}

func (CreatePlanAssignmentRequestPathSelectorPlanAssignmentMetadataResourceVersion) FieldPath() *CreatePlanAssignmentRequest_FieldSubPath {
	return &CreatePlanAssignmentRequest_FieldSubPath{
		selector: CreatePlanAssignmentRequest_FieldPathSelectorPlanAssignment,
		subPath:  plan_assignment.NewPlanAssignmentFieldPathBuilder().Metadata().ResourceVersion().FieldPath(),
	}
}

func (s CreatePlanAssignmentRequestPathSelectorPlanAssignmentMetadataResourceVersion) WithValue(value string) *CreatePlanAssignmentRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*CreatePlanAssignmentRequest_FieldSubPathValue)
}

func (s CreatePlanAssignmentRequestPathSelectorPlanAssignmentMetadataResourceVersion) WithArrayOfValues(values []string) *CreatePlanAssignmentRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CreatePlanAssignmentRequest_FieldSubPathArrayOfValues)
}

type CreatePlanAssignmentRequestPathSelectorPlanAssignmentMetadataOwnerReferences struct{}

func (CreatePlanAssignmentRequestPathSelectorPlanAssignmentMetadataOwnerReferences) FieldPath() *CreatePlanAssignmentRequest_FieldSubPath {
	return &CreatePlanAssignmentRequest_FieldSubPath{
		selector: CreatePlanAssignmentRequest_FieldPathSelectorPlanAssignment,
		subPath:  plan_assignment.NewPlanAssignmentFieldPathBuilder().Metadata().OwnerReferences().FieldPath(),
	}
}

func (s CreatePlanAssignmentRequestPathSelectorPlanAssignmentMetadataOwnerReferences) WithValue(value []*ntt_meta.OwnerReference) *CreatePlanAssignmentRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*CreatePlanAssignmentRequest_FieldSubPathValue)
}

func (s CreatePlanAssignmentRequestPathSelectorPlanAssignmentMetadataOwnerReferences) WithArrayOfValues(values [][]*ntt_meta.OwnerReference) *CreatePlanAssignmentRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CreatePlanAssignmentRequest_FieldSubPathArrayOfValues)
}

func (s CreatePlanAssignmentRequestPathSelectorPlanAssignmentMetadataOwnerReferences) WithItemValue(value *ntt_meta.OwnerReference) *CreatePlanAssignmentRequest_FieldSubPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*CreatePlanAssignmentRequest_FieldSubPathArrayItemValue)
}

func (CreatePlanAssignmentRequestPathSelectorPlanAssignmentMetadataOwnerReferences) ApiVersion() CreatePlanAssignmentRequestPathSelectorPlanAssignmentMetadataOwnerReferencesApiVersion {
	return CreatePlanAssignmentRequestPathSelectorPlanAssignmentMetadataOwnerReferencesApiVersion{}
}

func (CreatePlanAssignmentRequestPathSelectorPlanAssignmentMetadataOwnerReferences) Kind() CreatePlanAssignmentRequestPathSelectorPlanAssignmentMetadataOwnerReferencesKind {
	return CreatePlanAssignmentRequestPathSelectorPlanAssignmentMetadataOwnerReferencesKind{}
}

func (CreatePlanAssignmentRequestPathSelectorPlanAssignmentMetadataOwnerReferences) Name() CreatePlanAssignmentRequestPathSelectorPlanAssignmentMetadataOwnerReferencesName {
	return CreatePlanAssignmentRequestPathSelectorPlanAssignmentMetadataOwnerReferencesName{}
}

func (CreatePlanAssignmentRequestPathSelectorPlanAssignmentMetadataOwnerReferences) Uid() CreatePlanAssignmentRequestPathSelectorPlanAssignmentMetadataOwnerReferencesUid {
	return CreatePlanAssignmentRequestPathSelectorPlanAssignmentMetadataOwnerReferencesUid{}
}

func (CreatePlanAssignmentRequestPathSelectorPlanAssignmentMetadataOwnerReferences) Controller() CreatePlanAssignmentRequestPathSelectorPlanAssignmentMetadataOwnerReferencesController {
	return CreatePlanAssignmentRequestPathSelectorPlanAssignmentMetadataOwnerReferencesController{}
}

func (CreatePlanAssignmentRequestPathSelectorPlanAssignmentMetadataOwnerReferences) BlockOwnerDeletion() CreatePlanAssignmentRequestPathSelectorPlanAssignmentMetadataOwnerReferencesBlockOwnerDeletion {
	return CreatePlanAssignmentRequestPathSelectorPlanAssignmentMetadataOwnerReferencesBlockOwnerDeletion{}
}

type CreatePlanAssignmentRequestPathSelectorPlanAssignmentMetadataOwnerReferencesApiVersion struct{}

func (CreatePlanAssignmentRequestPathSelectorPlanAssignmentMetadataOwnerReferencesApiVersion) FieldPath() *CreatePlanAssignmentRequest_FieldSubPath {
	return &CreatePlanAssignmentRequest_FieldSubPath{
		selector: CreatePlanAssignmentRequest_FieldPathSelectorPlanAssignment,
		subPath:  plan_assignment.NewPlanAssignmentFieldPathBuilder().Metadata().OwnerReferences().ApiVersion().FieldPath(),
	}
}

func (s CreatePlanAssignmentRequestPathSelectorPlanAssignmentMetadataOwnerReferencesApiVersion) WithValue(value string) *CreatePlanAssignmentRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*CreatePlanAssignmentRequest_FieldSubPathValue)
}

func (s CreatePlanAssignmentRequestPathSelectorPlanAssignmentMetadataOwnerReferencesApiVersion) WithArrayOfValues(values []string) *CreatePlanAssignmentRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CreatePlanAssignmentRequest_FieldSubPathArrayOfValues)
}

type CreatePlanAssignmentRequestPathSelectorPlanAssignmentMetadataOwnerReferencesKind struct{}

func (CreatePlanAssignmentRequestPathSelectorPlanAssignmentMetadataOwnerReferencesKind) FieldPath() *CreatePlanAssignmentRequest_FieldSubPath {
	return &CreatePlanAssignmentRequest_FieldSubPath{
		selector: CreatePlanAssignmentRequest_FieldPathSelectorPlanAssignment,
		subPath:  plan_assignment.NewPlanAssignmentFieldPathBuilder().Metadata().OwnerReferences().Kind().FieldPath(),
	}
}

func (s CreatePlanAssignmentRequestPathSelectorPlanAssignmentMetadataOwnerReferencesKind) WithValue(value string) *CreatePlanAssignmentRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*CreatePlanAssignmentRequest_FieldSubPathValue)
}

func (s CreatePlanAssignmentRequestPathSelectorPlanAssignmentMetadataOwnerReferencesKind) WithArrayOfValues(values []string) *CreatePlanAssignmentRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CreatePlanAssignmentRequest_FieldSubPathArrayOfValues)
}

type CreatePlanAssignmentRequestPathSelectorPlanAssignmentMetadataOwnerReferencesName struct{}

func (CreatePlanAssignmentRequestPathSelectorPlanAssignmentMetadataOwnerReferencesName) FieldPath() *CreatePlanAssignmentRequest_FieldSubPath {
	return &CreatePlanAssignmentRequest_FieldSubPath{
		selector: CreatePlanAssignmentRequest_FieldPathSelectorPlanAssignment,
		subPath:  plan_assignment.NewPlanAssignmentFieldPathBuilder().Metadata().OwnerReferences().Name().FieldPath(),
	}
}

func (s CreatePlanAssignmentRequestPathSelectorPlanAssignmentMetadataOwnerReferencesName) WithValue(value string) *CreatePlanAssignmentRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*CreatePlanAssignmentRequest_FieldSubPathValue)
}

func (s CreatePlanAssignmentRequestPathSelectorPlanAssignmentMetadataOwnerReferencesName) WithArrayOfValues(values []string) *CreatePlanAssignmentRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CreatePlanAssignmentRequest_FieldSubPathArrayOfValues)
}

type CreatePlanAssignmentRequestPathSelectorPlanAssignmentMetadataOwnerReferencesUid struct{}

func (CreatePlanAssignmentRequestPathSelectorPlanAssignmentMetadataOwnerReferencesUid) FieldPath() *CreatePlanAssignmentRequest_FieldSubPath {
	return &CreatePlanAssignmentRequest_FieldSubPath{
		selector: CreatePlanAssignmentRequest_FieldPathSelectorPlanAssignment,
		subPath:  plan_assignment.NewPlanAssignmentFieldPathBuilder().Metadata().OwnerReferences().Uid().FieldPath(),
	}
}

func (s CreatePlanAssignmentRequestPathSelectorPlanAssignmentMetadataOwnerReferencesUid) WithValue(value string) *CreatePlanAssignmentRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*CreatePlanAssignmentRequest_FieldSubPathValue)
}

func (s CreatePlanAssignmentRequestPathSelectorPlanAssignmentMetadataOwnerReferencesUid) WithArrayOfValues(values []string) *CreatePlanAssignmentRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CreatePlanAssignmentRequest_FieldSubPathArrayOfValues)
}

type CreatePlanAssignmentRequestPathSelectorPlanAssignmentMetadataOwnerReferencesController struct{}

func (CreatePlanAssignmentRequestPathSelectorPlanAssignmentMetadataOwnerReferencesController) FieldPath() *CreatePlanAssignmentRequest_FieldSubPath {
	return &CreatePlanAssignmentRequest_FieldSubPath{
		selector: CreatePlanAssignmentRequest_FieldPathSelectorPlanAssignment,
		subPath:  plan_assignment.NewPlanAssignmentFieldPathBuilder().Metadata().OwnerReferences().Controller().FieldPath(),
	}
}

func (s CreatePlanAssignmentRequestPathSelectorPlanAssignmentMetadataOwnerReferencesController) WithValue(value bool) *CreatePlanAssignmentRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*CreatePlanAssignmentRequest_FieldSubPathValue)
}

func (s CreatePlanAssignmentRequestPathSelectorPlanAssignmentMetadataOwnerReferencesController) WithArrayOfValues(values []bool) *CreatePlanAssignmentRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CreatePlanAssignmentRequest_FieldSubPathArrayOfValues)
}

type CreatePlanAssignmentRequestPathSelectorPlanAssignmentMetadataOwnerReferencesBlockOwnerDeletion struct{}

func (CreatePlanAssignmentRequestPathSelectorPlanAssignmentMetadataOwnerReferencesBlockOwnerDeletion) FieldPath() *CreatePlanAssignmentRequest_FieldSubPath {
	return &CreatePlanAssignmentRequest_FieldSubPath{
		selector: CreatePlanAssignmentRequest_FieldPathSelectorPlanAssignment,
		subPath:  plan_assignment.NewPlanAssignmentFieldPathBuilder().Metadata().OwnerReferences().BlockOwnerDeletion().FieldPath(),
	}
}

func (s CreatePlanAssignmentRequestPathSelectorPlanAssignmentMetadataOwnerReferencesBlockOwnerDeletion) WithValue(value bool) *CreatePlanAssignmentRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*CreatePlanAssignmentRequest_FieldSubPathValue)
}

func (s CreatePlanAssignmentRequestPathSelectorPlanAssignmentMetadataOwnerReferencesBlockOwnerDeletion) WithArrayOfValues(values []bool) *CreatePlanAssignmentRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CreatePlanAssignmentRequest_FieldSubPathArrayOfValues)
}

type CreatePlanAssignmentRequestPathSelectorPlanAssignmentMetadataShards struct{}

func (CreatePlanAssignmentRequestPathSelectorPlanAssignmentMetadataShards) FieldPath() *CreatePlanAssignmentRequest_FieldSubPath {
	return &CreatePlanAssignmentRequest_FieldSubPath{
		selector: CreatePlanAssignmentRequest_FieldPathSelectorPlanAssignment,
		subPath:  plan_assignment.NewPlanAssignmentFieldPathBuilder().Metadata().Shards().FieldPath(),
	}
}

func (s CreatePlanAssignmentRequestPathSelectorPlanAssignmentMetadataShards) WithValue(value map[string]int64) *CreatePlanAssignmentRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*CreatePlanAssignmentRequest_FieldSubPathValue)
}

func (s CreatePlanAssignmentRequestPathSelectorPlanAssignmentMetadataShards) WithArrayOfValues(values []map[string]int64) *CreatePlanAssignmentRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CreatePlanAssignmentRequest_FieldSubPathArrayOfValues)
}

func (CreatePlanAssignmentRequestPathSelectorPlanAssignmentMetadataShards) WithKey(key string) CreatePlanAssignmentRequestMapPathSelectorPlanAssignmentMetadataShards {
	return CreatePlanAssignmentRequestMapPathSelectorPlanAssignmentMetadataShards{key: key}
}

type CreatePlanAssignmentRequestMapPathSelectorPlanAssignmentMetadataShards struct {
	key string
}

func (s CreatePlanAssignmentRequestMapPathSelectorPlanAssignmentMetadataShards) FieldPath() *CreatePlanAssignmentRequest_FieldSubPath {
	return &CreatePlanAssignmentRequest_FieldSubPath{
		selector: CreatePlanAssignmentRequest_FieldPathSelectorPlanAssignment,
		subPath:  plan_assignment.NewPlanAssignmentFieldPathBuilder().Metadata().Shards().WithKey(s.key).FieldPath(),
	}
}

func (s CreatePlanAssignmentRequestMapPathSelectorPlanAssignmentMetadataShards) WithValue(value int64) *CreatePlanAssignmentRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*CreatePlanAssignmentRequest_FieldSubPathValue)
}

func (s CreatePlanAssignmentRequestMapPathSelectorPlanAssignmentMetadataShards) WithArrayOfValues(values []int64) *CreatePlanAssignmentRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CreatePlanAssignmentRequest_FieldSubPathArrayOfValues)
}

type CreatePlanAssignmentRequestPathSelectorPlanAssignmentMetadataSyncing struct{}

func (CreatePlanAssignmentRequestPathSelectorPlanAssignmentMetadataSyncing) FieldPath() *CreatePlanAssignmentRequest_FieldSubPath {
	return &CreatePlanAssignmentRequest_FieldSubPath{
		selector: CreatePlanAssignmentRequest_FieldPathSelectorPlanAssignment,
		subPath:  plan_assignment.NewPlanAssignmentFieldPathBuilder().Metadata().Syncing().FieldPath(),
	}
}

func (s CreatePlanAssignmentRequestPathSelectorPlanAssignmentMetadataSyncing) WithValue(value *ntt_meta.SyncingMeta) *CreatePlanAssignmentRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*CreatePlanAssignmentRequest_FieldSubPathValue)
}

func (s CreatePlanAssignmentRequestPathSelectorPlanAssignmentMetadataSyncing) WithArrayOfValues(values []*ntt_meta.SyncingMeta) *CreatePlanAssignmentRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CreatePlanAssignmentRequest_FieldSubPathArrayOfValues)
}

func (CreatePlanAssignmentRequestPathSelectorPlanAssignmentMetadataSyncing) OwningRegion() CreatePlanAssignmentRequestPathSelectorPlanAssignmentMetadataSyncingOwningRegion {
	return CreatePlanAssignmentRequestPathSelectorPlanAssignmentMetadataSyncingOwningRegion{}
}

func (CreatePlanAssignmentRequestPathSelectorPlanAssignmentMetadataSyncing) Regions() CreatePlanAssignmentRequestPathSelectorPlanAssignmentMetadataSyncingRegions {
	return CreatePlanAssignmentRequestPathSelectorPlanAssignmentMetadataSyncingRegions{}
}

type CreatePlanAssignmentRequestPathSelectorPlanAssignmentMetadataSyncingOwningRegion struct{}

func (CreatePlanAssignmentRequestPathSelectorPlanAssignmentMetadataSyncingOwningRegion) FieldPath() *CreatePlanAssignmentRequest_FieldSubPath {
	return &CreatePlanAssignmentRequest_FieldSubPath{
		selector: CreatePlanAssignmentRequest_FieldPathSelectorPlanAssignment,
		subPath:  plan_assignment.NewPlanAssignmentFieldPathBuilder().Metadata().Syncing().OwningRegion().FieldPath(),
	}
}

func (s CreatePlanAssignmentRequestPathSelectorPlanAssignmentMetadataSyncingOwningRegion) WithValue(value string) *CreatePlanAssignmentRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*CreatePlanAssignmentRequest_FieldSubPathValue)
}

func (s CreatePlanAssignmentRequestPathSelectorPlanAssignmentMetadataSyncingOwningRegion) WithArrayOfValues(values []string) *CreatePlanAssignmentRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CreatePlanAssignmentRequest_FieldSubPathArrayOfValues)
}

type CreatePlanAssignmentRequestPathSelectorPlanAssignmentMetadataSyncingRegions struct{}

func (CreatePlanAssignmentRequestPathSelectorPlanAssignmentMetadataSyncingRegions) FieldPath() *CreatePlanAssignmentRequest_FieldSubPath {
	return &CreatePlanAssignmentRequest_FieldSubPath{
		selector: CreatePlanAssignmentRequest_FieldPathSelectorPlanAssignment,
		subPath:  plan_assignment.NewPlanAssignmentFieldPathBuilder().Metadata().Syncing().Regions().FieldPath(),
	}
}

func (s CreatePlanAssignmentRequestPathSelectorPlanAssignmentMetadataSyncingRegions) WithValue(value []string) *CreatePlanAssignmentRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*CreatePlanAssignmentRequest_FieldSubPathValue)
}

func (s CreatePlanAssignmentRequestPathSelectorPlanAssignmentMetadataSyncingRegions) WithArrayOfValues(values [][]string) *CreatePlanAssignmentRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CreatePlanAssignmentRequest_FieldSubPathArrayOfValues)
}

func (s CreatePlanAssignmentRequestPathSelectorPlanAssignmentMetadataSyncingRegions) WithItemValue(value string) *CreatePlanAssignmentRequest_FieldSubPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*CreatePlanAssignmentRequest_FieldSubPathArrayItemValue)
}

type UpdatePlanAssignmentRequestFieldPathBuilder struct{}

func NewUpdatePlanAssignmentRequestFieldPathBuilder() UpdatePlanAssignmentRequestFieldPathBuilder {
	return UpdatePlanAssignmentRequestFieldPathBuilder{}
}
func (UpdatePlanAssignmentRequestFieldPathBuilder) PlanAssignment() UpdatePlanAssignmentRequestPathSelectorPlanAssignment {
	return UpdatePlanAssignmentRequestPathSelectorPlanAssignment{}
}
func (UpdatePlanAssignmentRequestFieldPathBuilder) UpdateMask() UpdatePlanAssignmentRequestPathSelectorUpdateMask {
	return UpdatePlanAssignmentRequestPathSelectorUpdateMask{}
}
func (UpdatePlanAssignmentRequestFieldPathBuilder) Cas() UpdatePlanAssignmentRequestPathSelectorCas {
	return UpdatePlanAssignmentRequestPathSelectorCas{}
}

type UpdatePlanAssignmentRequestPathSelectorPlanAssignment struct{}

func (UpdatePlanAssignmentRequestPathSelectorPlanAssignment) FieldPath() *UpdatePlanAssignmentRequest_FieldTerminalPath {
	return &UpdatePlanAssignmentRequest_FieldTerminalPath{selector: UpdatePlanAssignmentRequest_FieldPathSelectorPlanAssignment}
}

func (s UpdatePlanAssignmentRequestPathSelectorPlanAssignment) WithValue(value *plan_assignment.PlanAssignment) *UpdatePlanAssignmentRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*UpdatePlanAssignmentRequest_FieldTerminalPathValue)
}

func (s UpdatePlanAssignmentRequestPathSelectorPlanAssignment) WithArrayOfValues(values []*plan_assignment.PlanAssignment) *UpdatePlanAssignmentRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdatePlanAssignmentRequest_FieldTerminalPathArrayOfValues)
}

func (UpdatePlanAssignmentRequestPathSelectorPlanAssignment) WithSubPath(subPath plan_assignment.PlanAssignment_FieldPath) *UpdatePlanAssignmentRequest_FieldSubPath {
	return &UpdatePlanAssignmentRequest_FieldSubPath{selector: UpdatePlanAssignmentRequest_FieldPathSelectorPlanAssignment, subPath: subPath}
}

func (s UpdatePlanAssignmentRequestPathSelectorPlanAssignment) WithSubValue(subPathValue plan_assignment.PlanAssignment_FieldPathValue) *UpdatePlanAssignmentRequest_FieldSubPathValue {
	return &UpdatePlanAssignmentRequest_FieldSubPathValue{UpdatePlanAssignmentRequest_FieldPath: s.WithSubPath(subPathValue), subPathValue: subPathValue}
}

func (s UpdatePlanAssignmentRequestPathSelectorPlanAssignment) WithSubArrayOfValues(subPathArrayOfValues plan_assignment.PlanAssignment_FieldPathArrayOfValues) *UpdatePlanAssignmentRequest_FieldSubPathArrayOfValues {
	return &UpdatePlanAssignmentRequest_FieldSubPathArrayOfValues{UpdatePlanAssignmentRequest_FieldPath: s.WithSubPath(subPathArrayOfValues), subPathArrayOfValues: subPathArrayOfValues}
}

func (s UpdatePlanAssignmentRequestPathSelectorPlanAssignment) WithSubArrayItemValue(subPathArrayItemValue plan_assignment.PlanAssignment_FieldPathArrayItemValue) *UpdatePlanAssignmentRequest_FieldSubPathArrayItemValue {
	return &UpdatePlanAssignmentRequest_FieldSubPathArrayItemValue{UpdatePlanAssignmentRequest_FieldPath: s.WithSubPath(subPathArrayItemValue), subPathItemValue: subPathArrayItemValue}
}

func (UpdatePlanAssignmentRequestPathSelectorPlanAssignment) Name() UpdatePlanAssignmentRequestPathSelectorPlanAssignmentName {
	return UpdatePlanAssignmentRequestPathSelectorPlanAssignmentName{}
}

func (UpdatePlanAssignmentRequestPathSelectorPlanAssignment) Plan() UpdatePlanAssignmentRequestPathSelectorPlanAssignmentPlan {
	return UpdatePlanAssignmentRequestPathSelectorPlanAssignmentPlan{}
}

func (UpdatePlanAssignmentRequestPathSelectorPlanAssignment) Service() UpdatePlanAssignmentRequestPathSelectorPlanAssignmentService {
	return UpdatePlanAssignmentRequestPathSelectorPlanAssignmentService{}
}

func (UpdatePlanAssignmentRequestPathSelectorPlanAssignment) Extensions() UpdatePlanAssignmentRequestPathSelectorPlanAssignmentExtensions {
	return UpdatePlanAssignmentRequestPathSelectorPlanAssignmentExtensions{}
}

func (UpdatePlanAssignmentRequestPathSelectorPlanAssignment) RegionalDistributions() UpdatePlanAssignmentRequestPathSelectorPlanAssignmentRegionalDistributions {
	return UpdatePlanAssignmentRequestPathSelectorPlanAssignmentRegionalDistributions{}
}

func (UpdatePlanAssignmentRequestPathSelectorPlanAssignment) Source() UpdatePlanAssignmentRequestPathSelectorPlanAssignmentSource {
	return UpdatePlanAssignmentRequestPathSelectorPlanAssignmentSource{}
}

func (UpdatePlanAssignmentRequestPathSelectorPlanAssignment) Metadata() UpdatePlanAssignmentRequestPathSelectorPlanAssignmentMetadata {
	return UpdatePlanAssignmentRequestPathSelectorPlanAssignmentMetadata{}
}

type UpdatePlanAssignmentRequestPathSelectorPlanAssignmentName struct{}

func (UpdatePlanAssignmentRequestPathSelectorPlanAssignmentName) FieldPath() *UpdatePlanAssignmentRequest_FieldSubPath {
	return &UpdatePlanAssignmentRequest_FieldSubPath{
		selector: UpdatePlanAssignmentRequest_FieldPathSelectorPlanAssignment,
		subPath:  plan_assignment.NewPlanAssignmentFieldPathBuilder().Name().FieldPath(),
	}
}

func (s UpdatePlanAssignmentRequestPathSelectorPlanAssignmentName) WithValue(value *plan_assignment.Name) *UpdatePlanAssignmentRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdatePlanAssignmentRequest_FieldSubPathValue)
}

func (s UpdatePlanAssignmentRequestPathSelectorPlanAssignmentName) WithArrayOfValues(values []*plan_assignment.Name) *UpdatePlanAssignmentRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdatePlanAssignmentRequest_FieldSubPathArrayOfValues)
}

type UpdatePlanAssignmentRequestPathSelectorPlanAssignmentPlan struct{}

func (UpdatePlanAssignmentRequestPathSelectorPlanAssignmentPlan) FieldPath() *UpdatePlanAssignmentRequest_FieldSubPath {
	return &UpdatePlanAssignmentRequest_FieldSubPath{
		selector: UpdatePlanAssignmentRequest_FieldPathSelectorPlanAssignment,
		subPath:  plan_assignment.NewPlanAssignmentFieldPathBuilder().Plan().FieldPath(),
	}
}

func (s UpdatePlanAssignmentRequestPathSelectorPlanAssignmentPlan) WithValue(value *plan.Reference) *UpdatePlanAssignmentRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdatePlanAssignmentRequest_FieldSubPathValue)
}

func (s UpdatePlanAssignmentRequestPathSelectorPlanAssignmentPlan) WithArrayOfValues(values []*plan.Reference) *UpdatePlanAssignmentRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdatePlanAssignmentRequest_FieldSubPathArrayOfValues)
}

type UpdatePlanAssignmentRequestPathSelectorPlanAssignmentService struct{}

func (UpdatePlanAssignmentRequestPathSelectorPlanAssignmentService) FieldPath() *UpdatePlanAssignmentRequest_FieldSubPath {
	return &UpdatePlanAssignmentRequest_FieldSubPath{
		selector: UpdatePlanAssignmentRequest_FieldPathSelectorPlanAssignment,
		subPath:  plan_assignment.NewPlanAssignmentFieldPathBuilder().Service().FieldPath(),
	}
}

func (s UpdatePlanAssignmentRequestPathSelectorPlanAssignmentService) WithValue(value *meta_service.Reference) *UpdatePlanAssignmentRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdatePlanAssignmentRequest_FieldSubPathValue)
}

func (s UpdatePlanAssignmentRequestPathSelectorPlanAssignmentService) WithArrayOfValues(values []*meta_service.Reference) *UpdatePlanAssignmentRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdatePlanAssignmentRequest_FieldSubPathArrayOfValues)
}

type UpdatePlanAssignmentRequestPathSelectorPlanAssignmentExtensions struct{}

func (UpdatePlanAssignmentRequestPathSelectorPlanAssignmentExtensions) FieldPath() *UpdatePlanAssignmentRequest_FieldSubPath {
	return &UpdatePlanAssignmentRequest_FieldSubPath{
		selector: UpdatePlanAssignmentRequest_FieldPathSelectorPlanAssignment,
		subPath:  plan_assignment.NewPlanAssignmentFieldPathBuilder().Extensions().FieldPath(),
	}
}

func (s UpdatePlanAssignmentRequestPathSelectorPlanAssignmentExtensions) WithValue(value []*common.Allowance) *UpdatePlanAssignmentRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdatePlanAssignmentRequest_FieldSubPathValue)
}

func (s UpdatePlanAssignmentRequestPathSelectorPlanAssignmentExtensions) WithArrayOfValues(values [][]*common.Allowance) *UpdatePlanAssignmentRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdatePlanAssignmentRequest_FieldSubPathArrayOfValues)
}

func (s UpdatePlanAssignmentRequestPathSelectorPlanAssignmentExtensions) WithItemValue(value *common.Allowance) *UpdatePlanAssignmentRequest_FieldSubPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*UpdatePlanAssignmentRequest_FieldSubPathArrayItemValue)
}

func (UpdatePlanAssignmentRequestPathSelectorPlanAssignmentExtensions) Resource() UpdatePlanAssignmentRequestPathSelectorPlanAssignmentExtensionsResource {
	return UpdatePlanAssignmentRequestPathSelectorPlanAssignmentExtensionsResource{}
}

func (UpdatePlanAssignmentRequestPathSelectorPlanAssignmentExtensions) Value() UpdatePlanAssignmentRequestPathSelectorPlanAssignmentExtensionsValue {
	return UpdatePlanAssignmentRequestPathSelectorPlanAssignmentExtensionsValue{}
}

type UpdatePlanAssignmentRequestPathSelectorPlanAssignmentExtensionsResource struct{}

func (UpdatePlanAssignmentRequestPathSelectorPlanAssignmentExtensionsResource) FieldPath() *UpdatePlanAssignmentRequest_FieldSubPath {
	return &UpdatePlanAssignmentRequest_FieldSubPath{
		selector: UpdatePlanAssignmentRequest_FieldPathSelectorPlanAssignment,
		subPath:  plan_assignment.NewPlanAssignmentFieldPathBuilder().Extensions().Resource().FieldPath(),
	}
}

func (s UpdatePlanAssignmentRequestPathSelectorPlanAssignmentExtensionsResource) WithValue(value *meta_resource.Reference) *UpdatePlanAssignmentRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdatePlanAssignmentRequest_FieldSubPathValue)
}

func (s UpdatePlanAssignmentRequestPathSelectorPlanAssignmentExtensionsResource) WithArrayOfValues(values []*meta_resource.Reference) *UpdatePlanAssignmentRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdatePlanAssignmentRequest_FieldSubPathArrayOfValues)
}

type UpdatePlanAssignmentRequestPathSelectorPlanAssignmentExtensionsValue struct{}

func (UpdatePlanAssignmentRequestPathSelectorPlanAssignmentExtensionsValue) FieldPath() *UpdatePlanAssignmentRequest_FieldSubPath {
	return &UpdatePlanAssignmentRequest_FieldSubPath{
		selector: UpdatePlanAssignmentRequest_FieldPathSelectorPlanAssignment,
		subPath:  plan_assignment.NewPlanAssignmentFieldPathBuilder().Extensions().Value().FieldPath(),
	}
}

func (s UpdatePlanAssignmentRequestPathSelectorPlanAssignmentExtensionsValue) WithValue(value int64) *UpdatePlanAssignmentRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdatePlanAssignmentRequest_FieldSubPathValue)
}

func (s UpdatePlanAssignmentRequestPathSelectorPlanAssignmentExtensionsValue) WithArrayOfValues(values []int64) *UpdatePlanAssignmentRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdatePlanAssignmentRequest_FieldSubPathArrayOfValues)
}

type UpdatePlanAssignmentRequestPathSelectorPlanAssignmentRegionalDistributions struct{}

func (UpdatePlanAssignmentRequestPathSelectorPlanAssignmentRegionalDistributions) FieldPath() *UpdatePlanAssignmentRequest_FieldSubPath {
	return &UpdatePlanAssignmentRequest_FieldSubPath{
		selector: UpdatePlanAssignmentRequest_FieldPathSelectorPlanAssignment,
		subPath:  plan_assignment.NewPlanAssignmentFieldPathBuilder().RegionalDistributions().FieldPath(),
	}
}

func (s UpdatePlanAssignmentRequestPathSelectorPlanAssignmentRegionalDistributions) WithValue(value []*common.RegionalDistribution) *UpdatePlanAssignmentRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdatePlanAssignmentRequest_FieldSubPathValue)
}

func (s UpdatePlanAssignmentRequestPathSelectorPlanAssignmentRegionalDistributions) WithArrayOfValues(values [][]*common.RegionalDistribution) *UpdatePlanAssignmentRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdatePlanAssignmentRequest_FieldSubPathArrayOfValues)
}

func (s UpdatePlanAssignmentRequestPathSelectorPlanAssignmentRegionalDistributions) WithItemValue(value *common.RegionalDistribution) *UpdatePlanAssignmentRequest_FieldSubPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*UpdatePlanAssignmentRequest_FieldSubPathArrayItemValue)
}

func (UpdatePlanAssignmentRequestPathSelectorPlanAssignmentRegionalDistributions) Resource() UpdatePlanAssignmentRequestPathSelectorPlanAssignmentRegionalDistributionsResource {
	return UpdatePlanAssignmentRequestPathSelectorPlanAssignmentRegionalDistributionsResource{}
}

func (UpdatePlanAssignmentRequestPathSelectorPlanAssignmentRegionalDistributions) LimitsByRegion() UpdatePlanAssignmentRequestPathSelectorPlanAssignmentRegionalDistributionsLimitsByRegion {
	return UpdatePlanAssignmentRequestPathSelectorPlanAssignmentRegionalDistributionsLimitsByRegion{}
}

type UpdatePlanAssignmentRequestPathSelectorPlanAssignmentRegionalDistributionsResource struct{}

func (UpdatePlanAssignmentRequestPathSelectorPlanAssignmentRegionalDistributionsResource) FieldPath() *UpdatePlanAssignmentRequest_FieldSubPath {
	return &UpdatePlanAssignmentRequest_FieldSubPath{
		selector: UpdatePlanAssignmentRequest_FieldPathSelectorPlanAssignment,
		subPath:  plan_assignment.NewPlanAssignmentFieldPathBuilder().RegionalDistributions().Resource().FieldPath(),
	}
}

func (s UpdatePlanAssignmentRequestPathSelectorPlanAssignmentRegionalDistributionsResource) WithValue(value *meta_resource.Reference) *UpdatePlanAssignmentRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdatePlanAssignmentRequest_FieldSubPathValue)
}

func (s UpdatePlanAssignmentRequestPathSelectorPlanAssignmentRegionalDistributionsResource) WithArrayOfValues(values []*meta_resource.Reference) *UpdatePlanAssignmentRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdatePlanAssignmentRequest_FieldSubPathArrayOfValues)
}

type UpdatePlanAssignmentRequestPathSelectorPlanAssignmentRegionalDistributionsLimitsByRegion struct{}

func (UpdatePlanAssignmentRequestPathSelectorPlanAssignmentRegionalDistributionsLimitsByRegion) FieldPath() *UpdatePlanAssignmentRequest_FieldSubPath {
	return &UpdatePlanAssignmentRequest_FieldSubPath{
		selector: UpdatePlanAssignmentRequest_FieldPathSelectorPlanAssignment,
		subPath:  plan_assignment.NewPlanAssignmentFieldPathBuilder().RegionalDistributions().LimitsByRegion().FieldPath(),
	}
}

func (s UpdatePlanAssignmentRequestPathSelectorPlanAssignmentRegionalDistributionsLimitsByRegion) WithValue(value map[string]int64) *UpdatePlanAssignmentRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdatePlanAssignmentRequest_FieldSubPathValue)
}

func (s UpdatePlanAssignmentRequestPathSelectorPlanAssignmentRegionalDistributionsLimitsByRegion) WithArrayOfValues(values []map[string]int64) *UpdatePlanAssignmentRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdatePlanAssignmentRequest_FieldSubPathArrayOfValues)
}

func (UpdatePlanAssignmentRequestPathSelectorPlanAssignmentRegionalDistributionsLimitsByRegion) WithKey(key string) UpdatePlanAssignmentRequestMapPathSelectorPlanAssignmentRegionalDistributionsLimitsByRegion {
	return UpdatePlanAssignmentRequestMapPathSelectorPlanAssignmentRegionalDistributionsLimitsByRegion{key: key}
}

type UpdatePlanAssignmentRequestMapPathSelectorPlanAssignmentRegionalDistributionsLimitsByRegion struct {
	key string
}

func (s UpdatePlanAssignmentRequestMapPathSelectorPlanAssignmentRegionalDistributionsLimitsByRegion) FieldPath() *UpdatePlanAssignmentRequest_FieldSubPath {
	return &UpdatePlanAssignmentRequest_FieldSubPath{
		selector: UpdatePlanAssignmentRequest_FieldPathSelectorPlanAssignment,
		subPath:  plan_assignment.NewPlanAssignmentFieldPathBuilder().RegionalDistributions().LimitsByRegion().WithKey(s.key).FieldPath(),
	}
}

func (s UpdatePlanAssignmentRequestMapPathSelectorPlanAssignmentRegionalDistributionsLimitsByRegion) WithValue(value int64) *UpdatePlanAssignmentRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdatePlanAssignmentRequest_FieldSubPathValue)
}

func (s UpdatePlanAssignmentRequestMapPathSelectorPlanAssignmentRegionalDistributionsLimitsByRegion) WithArrayOfValues(values []int64) *UpdatePlanAssignmentRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdatePlanAssignmentRequest_FieldSubPathArrayOfValues)
}

type UpdatePlanAssignmentRequestPathSelectorPlanAssignmentSource struct{}

func (UpdatePlanAssignmentRequestPathSelectorPlanAssignmentSource) FieldPath() *UpdatePlanAssignmentRequest_FieldSubPath {
	return &UpdatePlanAssignmentRequest_FieldSubPath{
		selector: UpdatePlanAssignmentRequest_FieldPathSelectorPlanAssignment,
		subPath:  plan_assignment.NewPlanAssignmentFieldPathBuilder().Source().FieldPath(),
	}
}

func (s UpdatePlanAssignmentRequestPathSelectorPlanAssignmentSource) WithValue(value *accepted_plan.Reference) *UpdatePlanAssignmentRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdatePlanAssignmentRequest_FieldSubPathValue)
}

func (s UpdatePlanAssignmentRequestPathSelectorPlanAssignmentSource) WithArrayOfValues(values []*accepted_plan.Reference) *UpdatePlanAssignmentRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdatePlanAssignmentRequest_FieldSubPathArrayOfValues)
}

type UpdatePlanAssignmentRequestPathSelectorPlanAssignmentMetadata struct{}

func (UpdatePlanAssignmentRequestPathSelectorPlanAssignmentMetadata) FieldPath() *UpdatePlanAssignmentRequest_FieldSubPath {
	return &UpdatePlanAssignmentRequest_FieldSubPath{
		selector: UpdatePlanAssignmentRequest_FieldPathSelectorPlanAssignment,
		subPath:  plan_assignment.NewPlanAssignmentFieldPathBuilder().Metadata().FieldPath(),
	}
}

func (s UpdatePlanAssignmentRequestPathSelectorPlanAssignmentMetadata) WithValue(value *ntt_meta.Meta) *UpdatePlanAssignmentRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdatePlanAssignmentRequest_FieldSubPathValue)
}

func (s UpdatePlanAssignmentRequestPathSelectorPlanAssignmentMetadata) WithArrayOfValues(values []*ntt_meta.Meta) *UpdatePlanAssignmentRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdatePlanAssignmentRequest_FieldSubPathArrayOfValues)
}

func (UpdatePlanAssignmentRequestPathSelectorPlanAssignmentMetadata) CreateTime() UpdatePlanAssignmentRequestPathSelectorPlanAssignmentMetadataCreateTime {
	return UpdatePlanAssignmentRequestPathSelectorPlanAssignmentMetadataCreateTime{}
}

func (UpdatePlanAssignmentRequestPathSelectorPlanAssignmentMetadata) UpdateTime() UpdatePlanAssignmentRequestPathSelectorPlanAssignmentMetadataUpdateTime {
	return UpdatePlanAssignmentRequestPathSelectorPlanAssignmentMetadataUpdateTime{}
}

func (UpdatePlanAssignmentRequestPathSelectorPlanAssignmentMetadata) Uuid() UpdatePlanAssignmentRequestPathSelectorPlanAssignmentMetadataUuid {
	return UpdatePlanAssignmentRequestPathSelectorPlanAssignmentMetadataUuid{}
}

func (UpdatePlanAssignmentRequestPathSelectorPlanAssignmentMetadata) Tags() UpdatePlanAssignmentRequestPathSelectorPlanAssignmentMetadataTags {
	return UpdatePlanAssignmentRequestPathSelectorPlanAssignmentMetadataTags{}
}

func (UpdatePlanAssignmentRequestPathSelectorPlanAssignmentMetadata) Labels() UpdatePlanAssignmentRequestPathSelectorPlanAssignmentMetadataLabels {
	return UpdatePlanAssignmentRequestPathSelectorPlanAssignmentMetadataLabels{}
}

func (UpdatePlanAssignmentRequestPathSelectorPlanAssignmentMetadata) Annotations() UpdatePlanAssignmentRequestPathSelectorPlanAssignmentMetadataAnnotations {
	return UpdatePlanAssignmentRequestPathSelectorPlanAssignmentMetadataAnnotations{}
}

func (UpdatePlanAssignmentRequestPathSelectorPlanAssignmentMetadata) Generation() UpdatePlanAssignmentRequestPathSelectorPlanAssignmentMetadataGeneration {
	return UpdatePlanAssignmentRequestPathSelectorPlanAssignmentMetadataGeneration{}
}

func (UpdatePlanAssignmentRequestPathSelectorPlanAssignmentMetadata) ResourceVersion() UpdatePlanAssignmentRequestPathSelectorPlanAssignmentMetadataResourceVersion {
	return UpdatePlanAssignmentRequestPathSelectorPlanAssignmentMetadataResourceVersion{}
}

func (UpdatePlanAssignmentRequestPathSelectorPlanAssignmentMetadata) OwnerReferences() UpdatePlanAssignmentRequestPathSelectorPlanAssignmentMetadataOwnerReferences {
	return UpdatePlanAssignmentRequestPathSelectorPlanAssignmentMetadataOwnerReferences{}
}

func (UpdatePlanAssignmentRequestPathSelectorPlanAssignmentMetadata) Shards() UpdatePlanAssignmentRequestPathSelectorPlanAssignmentMetadataShards {
	return UpdatePlanAssignmentRequestPathSelectorPlanAssignmentMetadataShards{}
}

func (UpdatePlanAssignmentRequestPathSelectorPlanAssignmentMetadata) Syncing() UpdatePlanAssignmentRequestPathSelectorPlanAssignmentMetadataSyncing {
	return UpdatePlanAssignmentRequestPathSelectorPlanAssignmentMetadataSyncing{}
}

type UpdatePlanAssignmentRequestPathSelectorPlanAssignmentMetadataCreateTime struct{}

func (UpdatePlanAssignmentRequestPathSelectorPlanAssignmentMetadataCreateTime) FieldPath() *UpdatePlanAssignmentRequest_FieldSubPath {
	return &UpdatePlanAssignmentRequest_FieldSubPath{
		selector: UpdatePlanAssignmentRequest_FieldPathSelectorPlanAssignment,
		subPath:  plan_assignment.NewPlanAssignmentFieldPathBuilder().Metadata().CreateTime().FieldPath(),
	}
}

func (s UpdatePlanAssignmentRequestPathSelectorPlanAssignmentMetadataCreateTime) WithValue(value *timestamp.Timestamp) *UpdatePlanAssignmentRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdatePlanAssignmentRequest_FieldSubPathValue)
}

func (s UpdatePlanAssignmentRequestPathSelectorPlanAssignmentMetadataCreateTime) WithArrayOfValues(values []*timestamp.Timestamp) *UpdatePlanAssignmentRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdatePlanAssignmentRequest_FieldSubPathArrayOfValues)
}

type UpdatePlanAssignmentRequestPathSelectorPlanAssignmentMetadataUpdateTime struct{}

func (UpdatePlanAssignmentRequestPathSelectorPlanAssignmentMetadataUpdateTime) FieldPath() *UpdatePlanAssignmentRequest_FieldSubPath {
	return &UpdatePlanAssignmentRequest_FieldSubPath{
		selector: UpdatePlanAssignmentRequest_FieldPathSelectorPlanAssignment,
		subPath:  plan_assignment.NewPlanAssignmentFieldPathBuilder().Metadata().UpdateTime().FieldPath(),
	}
}

func (s UpdatePlanAssignmentRequestPathSelectorPlanAssignmentMetadataUpdateTime) WithValue(value *timestamp.Timestamp) *UpdatePlanAssignmentRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdatePlanAssignmentRequest_FieldSubPathValue)
}

func (s UpdatePlanAssignmentRequestPathSelectorPlanAssignmentMetadataUpdateTime) WithArrayOfValues(values []*timestamp.Timestamp) *UpdatePlanAssignmentRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdatePlanAssignmentRequest_FieldSubPathArrayOfValues)
}

type UpdatePlanAssignmentRequestPathSelectorPlanAssignmentMetadataUuid struct{}

func (UpdatePlanAssignmentRequestPathSelectorPlanAssignmentMetadataUuid) FieldPath() *UpdatePlanAssignmentRequest_FieldSubPath {
	return &UpdatePlanAssignmentRequest_FieldSubPath{
		selector: UpdatePlanAssignmentRequest_FieldPathSelectorPlanAssignment,
		subPath:  plan_assignment.NewPlanAssignmentFieldPathBuilder().Metadata().Uuid().FieldPath(),
	}
}

func (s UpdatePlanAssignmentRequestPathSelectorPlanAssignmentMetadataUuid) WithValue(value string) *UpdatePlanAssignmentRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdatePlanAssignmentRequest_FieldSubPathValue)
}

func (s UpdatePlanAssignmentRequestPathSelectorPlanAssignmentMetadataUuid) WithArrayOfValues(values []string) *UpdatePlanAssignmentRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdatePlanAssignmentRequest_FieldSubPathArrayOfValues)
}

type UpdatePlanAssignmentRequestPathSelectorPlanAssignmentMetadataTags struct{}

func (UpdatePlanAssignmentRequestPathSelectorPlanAssignmentMetadataTags) FieldPath() *UpdatePlanAssignmentRequest_FieldSubPath {
	return &UpdatePlanAssignmentRequest_FieldSubPath{
		selector: UpdatePlanAssignmentRequest_FieldPathSelectorPlanAssignment,
		subPath:  plan_assignment.NewPlanAssignmentFieldPathBuilder().Metadata().Tags().FieldPath(),
	}
}

func (s UpdatePlanAssignmentRequestPathSelectorPlanAssignmentMetadataTags) WithValue(value []string) *UpdatePlanAssignmentRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdatePlanAssignmentRequest_FieldSubPathValue)
}

func (s UpdatePlanAssignmentRequestPathSelectorPlanAssignmentMetadataTags) WithArrayOfValues(values [][]string) *UpdatePlanAssignmentRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdatePlanAssignmentRequest_FieldSubPathArrayOfValues)
}

func (s UpdatePlanAssignmentRequestPathSelectorPlanAssignmentMetadataTags) WithItemValue(value string) *UpdatePlanAssignmentRequest_FieldSubPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*UpdatePlanAssignmentRequest_FieldSubPathArrayItemValue)
}

type UpdatePlanAssignmentRequestPathSelectorPlanAssignmentMetadataLabels struct{}

func (UpdatePlanAssignmentRequestPathSelectorPlanAssignmentMetadataLabels) FieldPath() *UpdatePlanAssignmentRequest_FieldSubPath {
	return &UpdatePlanAssignmentRequest_FieldSubPath{
		selector: UpdatePlanAssignmentRequest_FieldPathSelectorPlanAssignment,
		subPath:  plan_assignment.NewPlanAssignmentFieldPathBuilder().Metadata().Labels().FieldPath(),
	}
}

func (s UpdatePlanAssignmentRequestPathSelectorPlanAssignmentMetadataLabels) WithValue(value map[string]string) *UpdatePlanAssignmentRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdatePlanAssignmentRequest_FieldSubPathValue)
}

func (s UpdatePlanAssignmentRequestPathSelectorPlanAssignmentMetadataLabels) WithArrayOfValues(values []map[string]string) *UpdatePlanAssignmentRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdatePlanAssignmentRequest_FieldSubPathArrayOfValues)
}

func (UpdatePlanAssignmentRequestPathSelectorPlanAssignmentMetadataLabels) WithKey(key string) UpdatePlanAssignmentRequestMapPathSelectorPlanAssignmentMetadataLabels {
	return UpdatePlanAssignmentRequestMapPathSelectorPlanAssignmentMetadataLabels{key: key}
}

type UpdatePlanAssignmentRequestMapPathSelectorPlanAssignmentMetadataLabels struct {
	key string
}

func (s UpdatePlanAssignmentRequestMapPathSelectorPlanAssignmentMetadataLabels) FieldPath() *UpdatePlanAssignmentRequest_FieldSubPath {
	return &UpdatePlanAssignmentRequest_FieldSubPath{
		selector: UpdatePlanAssignmentRequest_FieldPathSelectorPlanAssignment,
		subPath:  plan_assignment.NewPlanAssignmentFieldPathBuilder().Metadata().Labels().WithKey(s.key).FieldPath(),
	}
}

func (s UpdatePlanAssignmentRequestMapPathSelectorPlanAssignmentMetadataLabels) WithValue(value string) *UpdatePlanAssignmentRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdatePlanAssignmentRequest_FieldSubPathValue)
}

func (s UpdatePlanAssignmentRequestMapPathSelectorPlanAssignmentMetadataLabels) WithArrayOfValues(values []string) *UpdatePlanAssignmentRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdatePlanAssignmentRequest_FieldSubPathArrayOfValues)
}

type UpdatePlanAssignmentRequestPathSelectorPlanAssignmentMetadataAnnotations struct{}

func (UpdatePlanAssignmentRequestPathSelectorPlanAssignmentMetadataAnnotations) FieldPath() *UpdatePlanAssignmentRequest_FieldSubPath {
	return &UpdatePlanAssignmentRequest_FieldSubPath{
		selector: UpdatePlanAssignmentRequest_FieldPathSelectorPlanAssignment,
		subPath:  plan_assignment.NewPlanAssignmentFieldPathBuilder().Metadata().Annotations().FieldPath(),
	}
}

func (s UpdatePlanAssignmentRequestPathSelectorPlanAssignmentMetadataAnnotations) WithValue(value map[string]string) *UpdatePlanAssignmentRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdatePlanAssignmentRequest_FieldSubPathValue)
}

func (s UpdatePlanAssignmentRequestPathSelectorPlanAssignmentMetadataAnnotations) WithArrayOfValues(values []map[string]string) *UpdatePlanAssignmentRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdatePlanAssignmentRequest_FieldSubPathArrayOfValues)
}

func (UpdatePlanAssignmentRequestPathSelectorPlanAssignmentMetadataAnnotations) WithKey(key string) UpdatePlanAssignmentRequestMapPathSelectorPlanAssignmentMetadataAnnotations {
	return UpdatePlanAssignmentRequestMapPathSelectorPlanAssignmentMetadataAnnotations{key: key}
}

type UpdatePlanAssignmentRequestMapPathSelectorPlanAssignmentMetadataAnnotations struct {
	key string
}

func (s UpdatePlanAssignmentRequestMapPathSelectorPlanAssignmentMetadataAnnotations) FieldPath() *UpdatePlanAssignmentRequest_FieldSubPath {
	return &UpdatePlanAssignmentRequest_FieldSubPath{
		selector: UpdatePlanAssignmentRequest_FieldPathSelectorPlanAssignment,
		subPath:  plan_assignment.NewPlanAssignmentFieldPathBuilder().Metadata().Annotations().WithKey(s.key).FieldPath(),
	}
}

func (s UpdatePlanAssignmentRequestMapPathSelectorPlanAssignmentMetadataAnnotations) WithValue(value string) *UpdatePlanAssignmentRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdatePlanAssignmentRequest_FieldSubPathValue)
}

func (s UpdatePlanAssignmentRequestMapPathSelectorPlanAssignmentMetadataAnnotations) WithArrayOfValues(values []string) *UpdatePlanAssignmentRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdatePlanAssignmentRequest_FieldSubPathArrayOfValues)
}

type UpdatePlanAssignmentRequestPathSelectorPlanAssignmentMetadataGeneration struct{}

func (UpdatePlanAssignmentRequestPathSelectorPlanAssignmentMetadataGeneration) FieldPath() *UpdatePlanAssignmentRequest_FieldSubPath {
	return &UpdatePlanAssignmentRequest_FieldSubPath{
		selector: UpdatePlanAssignmentRequest_FieldPathSelectorPlanAssignment,
		subPath:  plan_assignment.NewPlanAssignmentFieldPathBuilder().Metadata().Generation().FieldPath(),
	}
}

func (s UpdatePlanAssignmentRequestPathSelectorPlanAssignmentMetadataGeneration) WithValue(value int64) *UpdatePlanAssignmentRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdatePlanAssignmentRequest_FieldSubPathValue)
}

func (s UpdatePlanAssignmentRequestPathSelectorPlanAssignmentMetadataGeneration) WithArrayOfValues(values []int64) *UpdatePlanAssignmentRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdatePlanAssignmentRequest_FieldSubPathArrayOfValues)
}

type UpdatePlanAssignmentRequestPathSelectorPlanAssignmentMetadataResourceVersion struct{}

func (UpdatePlanAssignmentRequestPathSelectorPlanAssignmentMetadataResourceVersion) FieldPath() *UpdatePlanAssignmentRequest_FieldSubPath {
	return &UpdatePlanAssignmentRequest_FieldSubPath{
		selector: UpdatePlanAssignmentRequest_FieldPathSelectorPlanAssignment,
		subPath:  plan_assignment.NewPlanAssignmentFieldPathBuilder().Metadata().ResourceVersion().FieldPath(),
	}
}

func (s UpdatePlanAssignmentRequestPathSelectorPlanAssignmentMetadataResourceVersion) WithValue(value string) *UpdatePlanAssignmentRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdatePlanAssignmentRequest_FieldSubPathValue)
}

func (s UpdatePlanAssignmentRequestPathSelectorPlanAssignmentMetadataResourceVersion) WithArrayOfValues(values []string) *UpdatePlanAssignmentRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdatePlanAssignmentRequest_FieldSubPathArrayOfValues)
}

type UpdatePlanAssignmentRequestPathSelectorPlanAssignmentMetadataOwnerReferences struct{}

func (UpdatePlanAssignmentRequestPathSelectorPlanAssignmentMetadataOwnerReferences) FieldPath() *UpdatePlanAssignmentRequest_FieldSubPath {
	return &UpdatePlanAssignmentRequest_FieldSubPath{
		selector: UpdatePlanAssignmentRequest_FieldPathSelectorPlanAssignment,
		subPath:  plan_assignment.NewPlanAssignmentFieldPathBuilder().Metadata().OwnerReferences().FieldPath(),
	}
}

func (s UpdatePlanAssignmentRequestPathSelectorPlanAssignmentMetadataOwnerReferences) WithValue(value []*ntt_meta.OwnerReference) *UpdatePlanAssignmentRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdatePlanAssignmentRequest_FieldSubPathValue)
}

func (s UpdatePlanAssignmentRequestPathSelectorPlanAssignmentMetadataOwnerReferences) WithArrayOfValues(values [][]*ntt_meta.OwnerReference) *UpdatePlanAssignmentRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdatePlanAssignmentRequest_FieldSubPathArrayOfValues)
}

func (s UpdatePlanAssignmentRequestPathSelectorPlanAssignmentMetadataOwnerReferences) WithItemValue(value *ntt_meta.OwnerReference) *UpdatePlanAssignmentRequest_FieldSubPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*UpdatePlanAssignmentRequest_FieldSubPathArrayItemValue)
}

func (UpdatePlanAssignmentRequestPathSelectorPlanAssignmentMetadataOwnerReferences) ApiVersion() UpdatePlanAssignmentRequestPathSelectorPlanAssignmentMetadataOwnerReferencesApiVersion {
	return UpdatePlanAssignmentRequestPathSelectorPlanAssignmentMetadataOwnerReferencesApiVersion{}
}

func (UpdatePlanAssignmentRequestPathSelectorPlanAssignmentMetadataOwnerReferences) Kind() UpdatePlanAssignmentRequestPathSelectorPlanAssignmentMetadataOwnerReferencesKind {
	return UpdatePlanAssignmentRequestPathSelectorPlanAssignmentMetadataOwnerReferencesKind{}
}

func (UpdatePlanAssignmentRequestPathSelectorPlanAssignmentMetadataOwnerReferences) Name() UpdatePlanAssignmentRequestPathSelectorPlanAssignmentMetadataOwnerReferencesName {
	return UpdatePlanAssignmentRequestPathSelectorPlanAssignmentMetadataOwnerReferencesName{}
}

func (UpdatePlanAssignmentRequestPathSelectorPlanAssignmentMetadataOwnerReferences) Uid() UpdatePlanAssignmentRequestPathSelectorPlanAssignmentMetadataOwnerReferencesUid {
	return UpdatePlanAssignmentRequestPathSelectorPlanAssignmentMetadataOwnerReferencesUid{}
}

func (UpdatePlanAssignmentRequestPathSelectorPlanAssignmentMetadataOwnerReferences) Controller() UpdatePlanAssignmentRequestPathSelectorPlanAssignmentMetadataOwnerReferencesController {
	return UpdatePlanAssignmentRequestPathSelectorPlanAssignmentMetadataOwnerReferencesController{}
}

func (UpdatePlanAssignmentRequestPathSelectorPlanAssignmentMetadataOwnerReferences) BlockOwnerDeletion() UpdatePlanAssignmentRequestPathSelectorPlanAssignmentMetadataOwnerReferencesBlockOwnerDeletion {
	return UpdatePlanAssignmentRequestPathSelectorPlanAssignmentMetadataOwnerReferencesBlockOwnerDeletion{}
}

type UpdatePlanAssignmentRequestPathSelectorPlanAssignmentMetadataOwnerReferencesApiVersion struct{}

func (UpdatePlanAssignmentRequestPathSelectorPlanAssignmentMetadataOwnerReferencesApiVersion) FieldPath() *UpdatePlanAssignmentRequest_FieldSubPath {
	return &UpdatePlanAssignmentRequest_FieldSubPath{
		selector: UpdatePlanAssignmentRequest_FieldPathSelectorPlanAssignment,
		subPath:  plan_assignment.NewPlanAssignmentFieldPathBuilder().Metadata().OwnerReferences().ApiVersion().FieldPath(),
	}
}

func (s UpdatePlanAssignmentRequestPathSelectorPlanAssignmentMetadataOwnerReferencesApiVersion) WithValue(value string) *UpdatePlanAssignmentRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdatePlanAssignmentRequest_FieldSubPathValue)
}

func (s UpdatePlanAssignmentRequestPathSelectorPlanAssignmentMetadataOwnerReferencesApiVersion) WithArrayOfValues(values []string) *UpdatePlanAssignmentRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdatePlanAssignmentRequest_FieldSubPathArrayOfValues)
}

type UpdatePlanAssignmentRequestPathSelectorPlanAssignmentMetadataOwnerReferencesKind struct{}

func (UpdatePlanAssignmentRequestPathSelectorPlanAssignmentMetadataOwnerReferencesKind) FieldPath() *UpdatePlanAssignmentRequest_FieldSubPath {
	return &UpdatePlanAssignmentRequest_FieldSubPath{
		selector: UpdatePlanAssignmentRequest_FieldPathSelectorPlanAssignment,
		subPath:  plan_assignment.NewPlanAssignmentFieldPathBuilder().Metadata().OwnerReferences().Kind().FieldPath(),
	}
}

func (s UpdatePlanAssignmentRequestPathSelectorPlanAssignmentMetadataOwnerReferencesKind) WithValue(value string) *UpdatePlanAssignmentRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdatePlanAssignmentRequest_FieldSubPathValue)
}

func (s UpdatePlanAssignmentRequestPathSelectorPlanAssignmentMetadataOwnerReferencesKind) WithArrayOfValues(values []string) *UpdatePlanAssignmentRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdatePlanAssignmentRequest_FieldSubPathArrayOfValues)
}

type UpdatePlanAssignmentRequestPathSelectorPlanAssignmentMetadataOwnerReferencesName struct{}

func (UpdatePlanAssignmentRequestPathSelectorPlanAssignmentMetadataOwnerReferencesName) FieldPath() *UpdatePlanAssignmentRequest_FieldSubPath {
	return &UpdatePlanAssignmentRequest_FieldSubPath{
		selector: UpdatePlanAssignmentRequest_FieldPathSelectorPlanAssignment,
		subPath:  plan_assignment.NewPlanAssignmentFieldPathBuilder().Metadata().OwnerReferences().Name().FieldPath(),
	}
}

func (s UpdatePlanAssignmentRequestPathSelectorPlanAssignmentMetadataOwnerReferencesName) WithValue(value string) *UpdatePlanAssignmentRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdatePlanAssignmentRequest_FieldSubPathValue)
}

func (s UpdatePlanAssignmentRequestPathSelectorPlanAssignmentMetadataOwnerReferencesName) WithArrayOfValues(values []string) *UpdatePlanAssignmentRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdatePlanAssignmentRequest_FieldSubPathArrayOfValues)
}

type UpdatePlanAssignmentRequestPathSelectorPlanAssignmentMetadataOwnerReferencesUid struct{}

func (UpdatePlanAssignmentRequestPathSelectorPlanAssignmentMetadataOwnerReferencesUid) FieldPath() *UpdatePlanAssignmentRequest_FieldSubPath {
	return &UpdatePlanAssignmentRequest_FieldSubPath{
		selector: UpdatePlanAssignmentRequest_FieldPathSelectorPlanAssignment,
		subPath:  plan_assignment.NewPlanAssignmentFieldPathBuilder().Metadata().OwnerReferences().Uid().FieldPath(),
	}
}

func (s UpdatePlanAssignmentRequestPathSelectorPlanAssignmentMetadataOwnerReferencesUid) WithValue(value string) *UpdatePlanAssignmentRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdatePlanAssignmentRequest_FieldSubPathValue)
}

func (s UpdatePlanAssignmentRequestPathSelectorPlanAssignmentMetadataOwnerReferencesUid) WithArrayOfValues(values []string) *UpdatePlanAssignmentRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdatePlanAssignmentRequest_FieldSubPathArrayOfValues)
}

type UpdatePlanAssignmentRequestPathSelectorPlanAssignmentMetadataOwnerReferencesController struct{}

func (UpdatePlanAssignmentRequestPathSelectorPlanAssignmentMetadataOwnerReferencesController) FieldPath() *UpdatePlanAssignmentRequest_FieldSubPath {
	return &UpdatePlanAssignmentRequest_FieldSubPath{
		selector: UpdatePlanAssignmentRequest_FieldPathSelectorPlanAssignment,
		subPath:  plan_assignment.NewPlanAssignmentFieldPathBuilder().Metadata().OwnerReferences().Controller().FieldPath(),
	}
}

func (s UpdatePlanAssignmentRequestPathSelectorPlanAssignmentMetadataOwnerReferencesController) WithValue(value bool) *UpdatePlanAssignmentRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdatePlanAssignmentRequest_FieldSubPathValue)
}

func (s UpdatePlanAssignmentRequestPathSelectorPlanAssignmentMetadataOwnerReferencesController) WithArrayOfValues(values []bool) *UpdatePlanAssignmentRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdatePlanAssignmentRequest_FieldSubPathArrayOfValues)
}

type UpdatePlanAssignmentRequestPathSelectorPlanAssignmentMetadataOwnerReferencesBlockOwnerDeletion struct{}

func (UpdatePlanAssignmentRequestPathSelectorPlanAssignmentMetadataOwnerReferencesBlockOwnerDeletion) FieldPath() *UpdatePlanAssignmentRequest_FieldSubPath {
	return &UpdatePlanAssignmentRequest_FieldSubPath{
		selector: UpdatePlanAssignmentRequest_FieldPathSelectorPlanAssignment,
		subPath:  plan_assignment.NewPlanAssignmentFieldPathBuilder().Metadata().OwnerReferences().BlockOwnerDeletion().FieldPath(),
	}
}

func (s UpdatePlanAssignmentRequestPathSelectorPlanAssignmentMetadataOwnerReferencesBlockOwnerDeletion) WithValue(value bool) *UpdatePlanAssignmentRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdatePlanAssignmentRequest_FieldSubPathValue)
}

func (s UpdatePlanAssignmentRequestPathSelectorPlanAssignmentMetadataOwnerReferencesBlockOwnerDeletion) WithArrayOfValues(values []bool) *UpdatePlanAssignmentRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdatePlanAssignmentRequest_FieldSubPathArrayOfValues)
}

type UpdatePlanAssignmentRequestPathSelectorPlanAssignmentMetadataShards struct{}

func (UpdatePlanAssignmentRequestPathSelectorPlanAssignmentMetadataShards) FieldPath() *UpdatePlanAssignmentRequest_FieldSubPath {
	return &UpdatePlanAssignmentRequest_FieldSubPath{
		selector: UpdatePlanAssignmentRequest_FieldPathSelectorPlanAssignment,
		subPath:  plan_assignment.NewPlanAssignmentFieldPathBuilder().Metadata().Shards().FieldPath(),
	}
}

func (s UpdatePlanAssignmentRequestPathSelectorPlanAssignmentMetadataShards) WithValue(value map[string]int64) *UpdatePlanAssignmentRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdatePlanAssignmentRequest_FieldSubPathValue)
}

func (s UpdatePlanAssignmentRequestPathSelectorPlanAssignmentMetadataShards) WithArrayOfValues(values []map[string]int64) *UpdatePlanAssignmentRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdatePlanAssignmentRequest_FieldSubPathArrayOfValues)
}

func (UpdatePlanAssignmentRequestPathSelectorPlanAssignmentMetadataShards) WithKey(key string) UpdatePlanAssignmentRequestMapPathSelectorPlanAssignmentMetadataShards {
	return UpdatePlanAssignmentRequestMapPathSelectorPlanAssignmentMetadataShards{key: key}
}

type UpdatePlanAssignmentRequestMapPathSelectorPlanAssignmentMetadataShards struct {
	key string
}

func (s UpdatePlanAssignmentRequestMapPathSelectorPlanAssignmentMetadataShards) FieldPath() *UpdatePlanAssignmentRequest_FieldSubPath {
	return &UpdatePlanAssignmentRequest_FieldSubPath{
		selector: UpdatePlanAssignmentRequest_FieldPathSelectorPlanAssignment,
		subPath:  plan_assignment.NewPlanAssignmentFieldPathBuilder().Metadata().Shards().WithKey(s.key).FieldPath(),
	}
}

func (s UpdatePlanAssignmentRequestMapPathSelectorPlanAssignmentMetadataShards) WithValue(value int64) *UpdatePlanAssignmentRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdatePlanAssignmentRequest_FieldSubPathValue)
}

func (s UpdatePlanAssignmentRequestMapPathSelectorPlanAssignmentMetadataShards) WithArrayOfValues(values []int64) *UpdatePlanAssignmentRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdatePlanAssignmentRequest_FieldSubPathArrayOfValues)
}

type UpdatePlanAssignmentRequestPathSelectorPlanAssignmentMetadataSyncing struct{}

func (UpdatePlanAssignmentRequestPathSelectorPlanAssignmentMetadataSyncing) FieldPath() *UpdatePlanAssignmentRequest_FieldSubPath {
	return &UpdatePlanAssignmentRequest_FieldSubPath{
		selector: UpdatePlanAssignmentRequest_FieldPathSelectorPlanAssignment,
		subPath:  plan_assignment.NewPlanAssignmentFieldPathBuilder().Metadata().Syncing().FieldPath(),
	}
}

func (s UpdatePlanAssignmentRequestPathSelectorPlanAssignmentMetadataSyncing) WithValue(value *ntt_meta.SyncingMeta) *UpdatePlanAssignmentRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdatePlanAssignmentRequest_FieldSubPathValue)
}

func (s UpdatePlanAssignmentRequestPathSelectorPlanAssignmentMetadataSyncing) WithArrayOfValues(values []*ntt_meta.SyncingMeta) *UpdatePlanAssignmentRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdatePlanAssignmentRequest_FieldSubPathArrayOfValues)
}

func (UpdatePlanAssignmentRequestPathSelectorPlanAssignmentMetadataSyncing) OwningRegion() UpdatePlanAssignmentRequestPathSelectorPlanAssignmentMetadataSyncingOwningRegion {
	return UpdatePlanAssignmentRequestPathSelectorPlanAssignmentMetadataSyncingOwningRegion{}
}

func (UpdatePlanAssignmentRequestPathSelectorPlanAssignmentMetadataSyncing) Regions() UpdatePlanAssignmentRequestPathSelectorPlanAssignmentMetadataSyncingRegions {
	return UpdatePlanAssignmentRequestPathSelectorPlanAssignmentMetadataSyncingRegions{}
}

type UpdatePlanAssignmentRequestPathSelectorPlanAssignmentMetadataSyncingOwningRegion struct{}

func (UpdatePlanAssignmentRequestPathSelectorPlanAssignmentMetadataSyncingOwningRegion) FieldPath() *UpdatePlanAssignmentRequest_FieldSubPath {
	return &UpdatePlanAssignmentRequest_FieldSubPath{
		selector: UpdatePlanAssignmentRequest_FieldPathSelectorPlanAssignment,
		subPath:  plan_assignment.NewPlanAssignmentFieldPathBuilder().Metadata().Syncing().OwningRegion().FieldPath(),
	}
}

func (s UpdatePlanAssignmentRequestPathSelectorPlanAssignmentMetadataSyncingOwningRegion) WithValue(value string) *UpdatePlanAssignmentRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdatePlanAssignmentRequest_FieldSubPathValue)
}

func (s UpdatePlanAssignmentRequestPathSelectorPlanAssignmentMetadataSyncingOwningRegion) WithArrayOfValues(values []string) *UpdatePlanAssignmentRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdatePlanAssignmentRequest_FieldSubPathArrayOfValues)
}

type UpdatePlanAssignmentRequestPathSelectorPlanAssignmentMetadataSyncingRegions struct{}

func (UpdatePlanAssignmentRequestPathSelectorPlanAssignmentMetadataSyncingRegions) FieldPath() *UpdatePlanAssignmentRequest_FieldSubPath {
	return &UpdatePlanAssignmentRequest_FieldSubPath{
		selector: UpdatePlanAssignmentRequest_FieldPathSelectorPlanAssignment,
		subPath:  plan_assignment.NewPlanAssignmentFieldPathBuilder().Metadata().Syncing().Regions().FieldPath(),
	}
}

func (s UpdatePlanAssignmentRequestPathSelectorPlanAssignmentMetadataSyncingRegions) WithValue(value []string) *UpdatePlanAssignmentRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdatePlanAssignmentRequest_FieldSubPathValue)
}

func (s UpdatePlanAssignmentRequestPathSelectorPlanAssignmentMetadataSyncingRegions) WithArrayOfValues(values [][]string) *UpdatePlanAssignmentRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdatePlanAssignmentRequest_FieldSubPathArrayOfValues)
}

func (s UpdatePlanAssignmentRequestPathSelectorPlanAssignmentMetadataSyncingRegions) WithItemValue(value string) *UpdatePlanAssignmentRequest_FieldSubPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*UpdatePlanAssignmentRequest_FieldSubPathArrayItemValue)
}

type UpdatePlanAssignmentRequestPathSelectorUpdateMask struct{}

func (UpdatePlanAssignmentRequestPathSelectorUpdateMask) FieldPath() *UpdatePlanAssignmentRequest_FieldTerminalPath {
	return &UpdatePlanAssignmentRequest_FieldTerminalPath{selector: UpdatePlanAssignmentRequest_FieldPathSelectorUpdateMask}
}

func (s UpdatePlanAssignmentRequestPathSelectorUpdateMask) WithValue(value *plan_assignment.PlanAssignment_FieldMask) *UpdatePlanAssignmentRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*UpdatePlanAssignmentRequest_FieldTerminalPathValue)
}

func (s UpdatePlanAssignmentRequestPathSelectorUpdateMask) WithArrayOfValues(values []*plan_assignment.PlanAssignment_FieldMask) *UpdatePlanAssignmentRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdatePlanAssignmentRequest_FieldTerminalPathArrayOfValues)
}

type UpdatePlanAssignmentRequestPathSelectorCas struct{}

func (UpdatePlanAssignmentRequestPathSelectorCas) FieldPath() *UpdatePlanAssignmentRequest_FieldTerminalPath {
	return &UpdatePlanAssignmentRequest_FieldTerminalPath{selector: UpdatePlanAssignmentRequest_FieldPathSelectorCas}
}

func (s UpdatePlanAssignmentRequestPathSelectorCas) WithValue(value *UpdatePlanAssignmentRequest_CAS) *UpdatePlanAssignmentRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*UpdatePlanAssignmentRequest_FieldTerminalPathValue)
}

func (s UpdatePlanAssignmentRequestPathSelectorCas) WithArrayOfValues(values []*UpdatePlanAssignmentRequest_CAS) *UpdatePlanAssignmentRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdatePlanAssignmentRequest_FieldTerminalPathArrayOfValues)
}

func (UpdatePlanAssignmentRequestPathSelectorCas) WithSubPath(subPath UpdatePlanAssignmentRequestCAS_FieldPath) *UpdatePlanAssignmentRequest_FieldSubPath {
	return &UpdatePlanAssignmentRequest_FieldSubPath{selector: UpdatePlanAssignmentRequest_FieldPathSelectorCas, subPath: subPath}
}

func (s UpdatePlanAssignmentRequestPathSelectorCas) WithSubValue(subPathValue UpdatePlanAssignmentRequestCAS_FieldPathValue) *UpdatePlanAssignmentRequest_FieldSubPathValue {
	return &UpdatePlanAssignmentRequest_FieldSubPathValue{UpdatePlanAssignmentRequest_FieldPath: s.WithSubPath(subPathValue), subPathValue: subPathValue}
}

func (s UpdatePlanAssignmentRequestPathSelectorCas) WithSubArrayOfValues(subPathArrayOfValues UpdatePlanAssignmentRequestCAS_FieldPathArrayOfValues) *UpdatePlanAssignmentRequest_FieldSubPathArrayOfValues {
	return &UpdatePlanAssignmentRequest_FieldSubPathArrayOfValues{UpdatePlanAssignmentRequest_FieldPath: s.WithSubPath(subPathArrayOfValues), subPathArrayOfValues: subPathArrayOfValues}
}

func (s UpdatePlanAssignmentRequestPathSelectorCas) WithSubArrayItemValue(subPathArrayItemValue UpdatePlanAssignmentRequestCAS_FieldPathArrayItemValue) *UpdatePlanAssignmentRequest_FieldSubPathArrayItemValue {
	return &UpdatePlanAssignmentRequest_FieldSubPathArrayItemValue{UpdatePlanAssignmentRequest_FieldPath: s.WithSubPath(subPathArrayItemValue), subPathItemValue: subPathArrayItemValue}
}

func (UpdatePlanAssignmentRequestPathSelectorCas) ConditionalState() UpdatePlanAssignmentRequestPathSelectorCasConditionalState {
	return UpdatePlanAssignmentRequestPathSelectorCasConditionalState{}
}

func (UpdatePlanAssignmentRequestPathSelectorCas) FieldMask() UpdatePlanAssignmentRequestPathSelectorCasFieldMask {
	return UpdatePlanAssignmentRequestPathSelectorCasFieldMask{}
}

type UpdatePlanAssignmentRequestPathSelectorCasConditionalState struct{}

func (UpdatePlanAssignmentRequestPathSelectorCasConditionalState) FieldPath() *UpdatePlanAssignmentRequest_FieldSubPath {
	return &UpdatePlanAssignmentRequest_FieldSubPath{
		selector: UpdatePlanAssignmentRequest_FieldPathSelectorCas,
		subPath:  NewUpdatePlanAssignmentRequestCASFieldPathBuilder().ConditionalState().FieldPath(),
	}
}

func (s UpdatePlanAssignmentRequestPathSelectorCasConditionalState) WithValue(value *plan_assignment.PlanAssignment) *UpdatePlanAssignmentRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdatePlanAssignmentRequest_FieldSubPathValue)
}

func (s UpdatePlanAssignmentRequestPathSelectorCasConditionalState) WithArrayOfValues(values []*plan_assignment.PlanAssignment) *UpdatePlanAssignmentRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdatePlanAssignmentRequest_FieldSubPathArrayOfValues)
}

func (UpdatePlanAssignmentRequestPathSelectorCasConditionalState) Name() UpdatePlanAssignmentRequestPathSelectorCasConditionalStateName {
	return UpdatePlanAssignmentRequestPathSelectorCasConditionalStateName{}
}

func (UpdatePlanAssignmentRequestPathSelectorCasConditionalState) Plan() UpdatePlanAssignmentRequestPathSelectorCasConditionalStatePlan {
	return UpdatePlanAssignmentRequestPathSelectorCasConditionalStatePlan{}
}

func (UpdatePlanAssignmentRequestPathSelectorCasConditionalState) Service() UpdatePlanAssignmentRequestPathSelectorCasConditionalStateService {
	return UpdatePlanAssignmentRequestPathSelectorCasConditionalStateService{}
}

func (UpdatePlanAssignmentRequestPathSelectorCasConditionalState) Extensions() UpdatePlanAssignmentRequestPathSelectorCasConditionalStateExtensions {
	return UpdatePlanAssignmentRequestPathSelectorCasConditionalStateExtensions{}
}

func (UpdatePlanAssignmentRequestPathSelectorCasConditionalState) RegionalDistributions() UpdatePlanAssignmentRequestPathSelectorCasConditionalStateRegionalDistributions {
	return UpdatePlanAssignmentRequestPathSelectorCasConditionalStateRegionalDistributions{}
}

func (UpdatePlanAssignmentRequestPathSelectorCasConditionalState) Source() UpdatePlanAssignmentRequestPathSelectorCasConditionalStateSource {
	return UpdatePlanAssignmentRequestPathSelectorCasConditionalStateSource{}
}

func (UpdatePlanAssignmentRequestPathSelectorCasConditionalState) Metadata() UpdatePlanAssignmentRequestPathSelectorCasConditionalStateMetadata {
	return UpdatePlanAssignmentRequestPathSelectorCasConditionalStateMetadata{}
}

type UpdatePlanAssignmentRequestPathSelectorCasConditionalStateName struct{}

func (UpdatePlanAssignmentRequestPathSelectorCasConditionalStateName) FieldPath() *UpdatePlanAssignmentRequest_FieldSubPath {
	return &UpdatePlanAssignmentRequest_FieldSubPath{
		selector: UpdatePlanAssignmentRequest_FieldPathSelectorCas,
		subPath:  NewUpdatePlanAssignmentRequestCASFieldPathBuilder().ConditionalState().Name().FieldPath(),
	}
}

func (s UpdatePlanAssignmentRequestPathSelectorCasConditionalStateName) WithValue(value *plan_assignment.Name) *UpdatePlanAssignmentRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdatePlanAssignmentRequest_FieldSubPathValue)
}

func (s UpdatePlanAssignmentRequestPathSelectorCasConditionalStateName) WithArrayOfValues(values []*plan_assignment.Name) *UpdatePlanAssignmentRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdatePlanAssignmentRequest_FieldSubPathArrayOfValues)
}

type UpdatePlanAssignmentRequestPathSelectorCasConditionalStatePlan struct{}

func (UpdatePlanAssignmentRequestPathSelectorCasConditionalStatePlan) FieldPath() *UpdatePlanAssignmentRequest_FieldSubPath {
	return &UpdatePlanAssignmentRequest_FieldSubPath{
		selector: UpdatePlanAssignmentRequest_FieldPathSelectorCas,
		subPath:  NewUpdatePlanAssignmentRequestCASFieldPathBuilder().ConditionalState().Plan().FieldPath(),
	}
}

func (s UpdatePlanAssignmentRequestPathSelectorCasConditionalStatePlan) WithValue(value *plan.Reference) *UpdatePlanAssignmentRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdatePlanAssignmentRequest_FieldSubPathValue)
}

func (s UpdatePlanAssignmentRequestPathSelectorCasConditionalStatePlan) WithArrayOfValues(values []*plan.Reference) *UpdatePlanAssignmentRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdatePlanAssignmentRequest_FieldSubPathArrayOfValues)
}

type UpdatePlanAssignmentRequestPathSelectorCasConditionalStateService struct{}

func (UpdatePlanAssignmentRequestPathSelectorCasConditionalStateService) FieldPath() *UpdatePlanAssignmentRequest_FieldSubPath {
	return &UpdatePlanAssignmentRequest_FieldSubPath{
		selector: UpdatePlanAssignmentRequest_FieldPathSelectorCas,
		subPath:  NewUpdatePlanAssignmentRequestCASFieldPathBuilder().ConditionalState().Service().FieldPath(),
	}
}

func (s UpdatePlanAssignmentRequestPathSelectorCasConditionalStateService) WithValue(value *meta_service.Reference) *UpdatePlanAssignmentRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdatePlanAssignmentRequest_FieldSubPathValue)
}

func (s UpdatePlanAssignmentRequestPathSelectorCasConditionalStateService) WithArrayOfValues(values []*meta_service.Reference) *UpdatePlanAssignmentRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdatePlanAssignmentRequest_FieldSubPathArrayOfValues)
}

type UpdatePlanAssignmentRequestPathSelectorCasConditionalStateExtensions struct{}

func (UpdatePlanAssignmentRequestPathSelectorCasConditionalStateExtensions) FieldPath() *UpdatePlanAssignmentRequest_FieldSubPath {
	return &UpdatePlanAssignmentRequest_FieldSubPath{
		selector: UpdatePlanAssignmentRequest_FieldPathSelectorCas,
		subPath:  NewUpdatePlanAssignmentRequestCASFieldPathBuilder().ConditionalState().Extensions().FieldPath(),
	}
}

func (s UpdatePlanAssignmentRequestPathSelectorCasConditionalStateExtensions) WithValue(value []*common.Allowance) *UpdatePlanAssignmentRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdatePlanAssignmentRequest_FieldSubPathValue)
}

func (s UpdatePlanAssignmentRequestPathSelectorCasConditionalStateExtensions) WithArrayOfValues(values [][]*common.Allowance) *UpdatePlanAssignmentRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdatePlanAssignmentRequest_FieldSubPathArrayOfValues)
}

func (s UpdatePlanAssignmentRequestPathSelectorCasConditionalStateExtensions) WithItemValue(value *common.Allowance) *UpdatePlanAssignmentRequest_FieldSubPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*UpdatePlanAssignmentRequest_FieldSubPathArrayItemValue)
}

func (UpdatePlanAssignmentRequestPathSelectorCasConditionalStateExtensions) Resource() UpdatePlanAssignmentRequestPathSelectorCasConditionalStateExtensionsResource {
	return UpdatePlanAssignmentRequestPathSelectorCasConditionalStateExtensionsResource{}
}

func (UpdatePlanAssignmentRequestPathSelectorCasConditionalStateExtensions) Value() UpdatePlanAssignmentRequestPathSelectorCasConditionalStateExtensionsValue {
	return UpdatePlanAssignmentRequestPathSelectorCasConditionalStateExtensionsValue{}
}

type UpdatePlanAssignmentRequestPathSelectorCasConditionalStateExtensionsResource struct{}

func (UpdatePlanAssignmentRequestPathSelectorCasConditionalStateExtensionsResource) FieldPath() *UpdatePlanAssignmentRequest_FieldSubPath {
	return &UpdatePlanAssignmentRequest_FieldSubPath{
		selector: UpdatePlanAssignmentRequest_FieldPathSelectorCas,
		subPath:  NewUpdatePlanAssignmentRequestCASFieldPathBuilder().ConditionalState().Extensions().Resource().FieldPath(),
	}
}

func (s UpdatePlanAssignmentRequestPathSelectorCasConditionalStateExtensionsResource) WithValue(value *meta_resource.Reference) *UpdatePlanAssignmentRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdatePlanAssignmentRequest_FieldSubPathValue)
}

func (s UpdatePlanAssignmentRequestPathSelectorCasConditionalStateExtensionsResource) WithArrayOfValues(values []*meta_resource.Reference) *UpdatePlanAssignmentRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdatePlanAssignmentRequest_FieldSubPathArrayOfValues)
}

type UpdatePlanAssignmentRequestPathSelectorCasConditionalStateExtensionsValue struct{}

func (UpdatePlanAssignmentRequestPathSelectorCasConditionalStateExtensionsValue) FieldPath() *UpdatePlanAssignmentRequest_FieldSubPath {
	return &UpdatePlanAssignmentRequest_FieldSubPath{
		selector: UpdatePlanAssignmentRequest_FieldPathSelectorCas,
		subPath:  NewUpdatePlanAssignmentRequestCASFieldPathBuilder().ConditionalState().Extensions().Value().FieldPath(),
	}
}

func (s UpdatePlanAssignmentRequestPathSelectorCasConditionalStateExtensionsValue) WithValue(value int64) *UpdatePlanAssignmentRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdatePlanAssignmentRequest_FieldSubPathValue)
}

func (s UpdatePlanAssignmentRequestPathSelectorCasConditionalStateExtensionsValue) WithArrayOfValues(values []int64) *UpdatePlanAssignmentRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdatePlanAssignmentRequest_FieldSubPathArrayOfValues)
}

type UpdatePlanAssignmentRequestPathSelectorCasConditionalStateRegionalDistributions struct{}

func (UpdatePlanAssignmentRequestPathSelectorCasConditionalStateRegionalDistributions) FieldPath() *UpdatePlanAssignmentRequest_FieldSubPath {
	return &UpdatePlanAssignmentRequest_FieldSubPath{
		selector: UpdatePlanAssignmentRequest_FieldPathSelectorCas,
		subPath:  NewUpdatePlanAssignmentRequestCASFieldPathBuilder().ConditionalState().RegionalDistributions().FieldPath(),
	}
}

func (s UpdatePlanAssignmentRequestPathSelectorCasConditionalStateRegionalDistributions) WithValue(value []*common.RegionalDistribution) *UpdatePlanAssignmentRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdatePlanAssignmentRequest_FieldSubPathValue)
}

func (s UpdatePlanAssignmentRequestPathSelectorCasConditionalStateRegionalDistributions) WithArrayOfValues(values [][]*common.RegionalDistribution) *UpdatePlanAssignmentRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdatePlanAssignmentRequest_FieldSubPathArrayOfValues)
}

func (s UpdatePlanAssignmentRequestPathSelectorCasConditionalStateRegionalDistributions) WithItemValue(value *common.RegionalDistribution) *UpdatePlanAssignmentRequest_FieldSubPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*UpdatePlanAssignmentRequest_FieldSubPathArrayItemValue)
}

func (UpdatePlanAssignmentRequestPathSelectorCasConditionalStateRegionalDistributions) Resource() UpdatePlanAssignmentRequestPathSelectorCasConditionalStateRegionalDistributionsResource {
	return UpdatePlanAssignmentRequestPathSelectorCasConditionalStateRegionalDistributionsResource{}
}

func (UpdatePlanAssignmentRequestPathSelectorCasConditionalStateRegionalDistributions) LimitsByRegion() UpdatePlanAssignmentRequestPathSelectorCasConditionalStateRegionalDistributionsLimitsByRegion {
	return UpdatePlanAssignmentRequestPathSelectorCasConditionalStateRegionalDistributionsLimitsByRegion{}
}

type UpdatePlanAssignmentRequestPathSelectorCasConditionalStateRegionalDistributionsResource struct{}

func (UpdatePlanAssignmentRequestPathSelectorCasConditionalStateRegionalDistributionsResource) FieldPath() *UpdatePlanAssignmentRequest_FieldSubPath {
	return &UpdatePlanAssignmentRequest_FieldSubPath{
		selector: UpdatePlanAssignmentRequest_FieldPathSelectorCas,
		subPath:  NewUpdatePlanAssignmentRequestCASFieldPathBuilder().ConditionalState().RegionalDistributions().Resource().FieldPath(),
	}
}

func (s UpdatePlanAssignmentRequestPathSelectorCasConditionalStateRegionalDistributionsResource) WithValue(value *meta_resource.Reference) *UpdatePlanAssignmentRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdatePlanAssignmentRequest_FieldSubPathValue)
}

func (s UpdatePlanAssignmentRequestPathSelectorCasConditionalStateRegionalDistributionsResource) WithArrayOfValues(values []*meta_resource.Reference) *UpdatePlanAssignmentRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdatePlanAssignmentRequest_FieldSubPathArrayOfValues)
}

type UpdatePlanAssignmentRequestPathSelectorCasConditionalStateRegionalDistributionsLimitsByRegion struct{}

func (UpdatePlanAssignmentRequestPathSelectorCasConditionalStateRegionalDistributionsLimitsByRegion) FieldPath() *UpdatePlanAssignmentRequest_FieldSubPath {
	return &UpdatePlanAssignmentRequest_FieldSubPath{
		selector: UpdatePlanAssignmentRequest_FieldPathSelectorCas,
		subPath:  NewUpdatePlanAssignmentRequestCASFieldPathBuilder().ConditionalState().RegionalDistributions().LimitsByRegion().FieldPath(),
	}
}

func (s UpdatePlanAssignmentRequestPathSelectorCasConditionalStateRegionalDistributionsLimitsByRegion) WithValue(value map[string]int64) *UpdatePlanAssignmentRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdatePlanAssignmentRequest_FieldSubPathValue)
}

func (s UpdatePlanAssignmentRequestPathSelectorCasConditionalStateRegionalDistributionsLimitsByRegion) WithArrayOfValues(values []map[string]int64) *UpdatePlanAssignmentRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdatePlanAssignmentRequest_FieldSubPathArrayOfValues)
}

func (UpdatePlanAssignmentRequestPathSelectorCasConditionalStateRegionalDistributionsLimitsByRegion) WithKey(key string) UpdatePlanAssignmentRequestMapPathSelectorCasConditionalStateRegionalDistributionsLimitsByRegion {
	return UpdatePlanAssignmentRequestMapPathSelectorCasConditionalStateRegionalDistributionsLimitsByRegion{key: key}
}

type UpdatePlanAssignmentRequestMapPathSelectorCasConditionalStateRegionalDistributionsLimitsByRegion struct {
	key string
}

func (s UpdatePlanAssignmentRequestMapPathSelectorCasConditionalStateRegionalDistributionsLimitsByRegion) FieldPath() *UpdatePlanAssignmentRequest_FieldSubPath {
	return &UpdatePlanAssignmentRequest_FieldSubPath{
		selector: UpdatePlanAssignmentRequest_FieldPathSelectorCas,
		subPath:  NewUpdatePlanAssignmentRequestCASFieldPathBuilder().ConditionalState().RegionalDistributions().LimitsByRegion().WithKey(s.key).FieldPath(),
	}
}

func (s UpdatePlanAssignmentRequestMapPathSelectorCasConditionalStateRegionalDistributionsLimitsByRegion) WithValue(value int64) *UpdatePlanAssignmentRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdatePlanAssignmentRequest_FieldSubPathValue)
}

func (s UpdatePlanAssignmentRequestMapPathSelectorCasConditionalStateRegionalDistributionsLimitsByRegion) WithArrayOfValues(values []int64) *UpdatePlanAssignmentRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdatePlanAssignmentRequest_FieldSubPathArrayOfValues)
}

type UpdatePlanAssignmentRequestPathSelectorCasConditionalStateSource struct{}

func (UpdatePlanAssignmentRequestPathSelectorCasConditionalStateSource) FieldPath() *UpdatePlanAssignmentRequest_FieldSubPath {
	return &UpdatePlanAssignmentRequest_FieldSubPath{
		selector: UpdatePlanAssignmentRequest_FieldPathSelectorCas,
		subPath:  NewUpdatePlanAssignmentRequestCASFieldPathBuilder().ConditionalState().Source().FieldPath(),
	}
}

func (s UpdatePlanAssignmentRequestPathSelectorCasConditionalStateSource) WithValue(value *accepted_plan.Reference) *UpdatePlanAssignmentRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdatePlanAssignmentRequest_FieldSubPathValue)
}

func (s UpdatePlanAssignmentRequestPathSelectorCasConditionalStateSource) WithArrayOfValues(values []*accepted_plan.Reference) *UpdatePlanAssignmentRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdatePlanAssignmentRequest_FieldSubPathArrayOfValues)
}

type UpdatePlanAssignmentRequestPathSelectorCasConditionalStateMetadata struct{}

func (UpdatePlanAssignmentRequestPathSelectorCasConditionalStateMetadata) FieldPath() *UpdatePlanAssignmentRequest_FieldSubPath {
	return &UpdatePlanAssignmentRequest_FieldSubPath{
		selector: UpdatePlanAssignmentRequest_FieldPathSelectorCas,
		subPath:  NewUpdatePlanAssignmentRequestCASFieldPathBuilder().ConditionalState().Metadata().FieldPath(),
	}
}

func (s UpdatePlanAssignmentRequestPathSelectorCasConditionalStateMetadata) WithValue(value *ntt_meta.Meta) *UpdatePlanAssignmentRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdatePlanAssignmentRequest_FieldSubPathValue)
}

func (s UpdatePlanAssignmentRequestPathSelectorCasConditionalStateMetadata) WithArrayOfValues(values []*ntt_meta.Meta) *UpdatePlanAssignmentRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdatePlanAssignmentRequest_FieldSubPathArrayOfValues)
}

func (UpdatePlanAssignmentRequestPathSelectorCasConditionalStateMetadata) CreateTime() UpdatePlanAssignmentRequestPathSelectorCasConditionalStateMetadataCreateTime {
	return UpdatePlanAssignmentRequestPathSelectorCasConditionalStateMetadataCreateTime{}
}

func (UpdatePlanAssignmentRequestPathSelectorCasConditionalStateMetadata) UpdateTime() UpdatePlanAssignmentRequestPathSelectorCasConditionalStateMetadataUpdateTime {
	return UpdatePlanAssignmentRequestPathSelectorCasConditionalStateMetadataUpdateTime{}
}

func (UpdatePlanAssignmentRequestPathSelectorCasConditionalStateMetadata) Uuid() UpdatePlanAssignmentRequestPathSelectorCasConditionalStateMetadataUuid {
	return UpdatePlanAssignmentRequestPathSelectorCasConditionalStateMetadataUuid{}
}

func (UpdatePlanAssignmentRequestPathSelectorCasConditionalStateMetadata) Tags() UpdatePlanAssignmentRequestPathSelectorCasConditionalStateMetadataTags {
	return UpdatePlanAssignmentRequestPathSelectorCasConditionalStateMetadataTags{}
}

func (UpdatePlanAssignmentRequestPathSelectorCasConditionalStateMetadata) Labels() UpdatePlanAssignmentRequestPathSelectorCasConditionalStateMetadataLabels {
	return UpdatePlanAssignmentRequestPathSelectorCasConditionalStateMetadataLabels{}
}

func (UpdatePlanAssignmentRequestPathSelectorCasConditionalStateMetadata) Annotations() UpdatePlanAssignmentRequestPathSelectorCasConditionalStateMetadataAnnotations {
	return UpdatePlanAssignmentRequestPathSelectorCasConditionalStateMetadataAnnotations{}
}

func (UpdatePlanAssignmentRequestPathSelectorCasConditionalStateMetadata) Generation() UpdatePlanAssignmentRequestPathSelectorCasConditionalStateMetadataGeneration {
	return UpdatePlanAssignmentRequestPathSelectorCasConditionalStateMetadataGeneration{}
}

func (UpdatePlanAssignmentRequestPathSelectorCasConditionalStateMetadata) ResourceVersion() UpdatePlanAssignmentRequestPathSelectorCasConditionalStateMetadataResourceVersion {
	return UpdatePlanAssignmentRequestPathSelectorCasConditionalStateMetadataResourceVersion{}
}

func (UpdatePlanAssignmentRequestPathSelectorCasConditionalStateMetadata) OwnerReferences() UpdatePlanAssignmentRequestPathSelectorCasConditionalStateMetadataOwnerReferences {
	return UpdatePlanAssignmentRequestPathSelectorCasConditionalStateMetadataOwnerReferences{}
}

func (UpdatePlanAssignmentRequestPathSelectorCasConditionalStateMetadata) Shards() UpdatePlanAssignmentRequestPathSelectorCasConditionalStateMetadataShards {
	return UpdatePlanAssignmentRequestPathSelectorCasConditionalStateMetadataShards{}
}

func (UpdatePlanAssignmentRequestPathSelectorCasConditionalStateMetadata) Syncing() UpdatePlanAssignmentRequestPathSelectorCasConditionalStateMetadataSyncing {
	return UpdatePlanAssignmentRequestPathSelectorCasConditionalStateMetadataSyncing{}
}

type UpdatePlanAssignmentRequestPathSelectorCasConditionalStateMetadataCreateTime struct{}

func (UpdatePlanAssignmentRequestPathSelectorCasConditionalStateMetadataCreateTime) FieldPath() *UpdatePlanAssignmentRequest_FieldSubPath {
	return &UpdatePlanAssignmentRequest_FieldSubPath{
		selector: UpdatePlanAssignmentRequest_FieldPathSelectorCas,
		subPath:  NewUpdatePlanAssignmentRequestCASFieldPathBuilder().ConditionalState().Metadata().CreateTime().FieldPath(),
	}
}

func (s UpdatePlanAssignmentRequestPathSelectorCasConditionalStateMetadataCreateTime) WithValue(value *timestamp.Timestamp) *UpdatePlanAssignmentRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdatePlanAssignmentRequest_FieldSubPathValue)
}

func (s UpdatePlanAssignmentRequestPathSelectorCasConditionalStateMetadataCreateTime) WithArrayOfValues(values []*timestamp.Timestamp) *UpdatePlanAssignmentRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdatePlanAssignmentRequest_FieldSubPathArrayOfValues)
}

type UpdatePlanAssignmentRequestPathSelectorCasConditionalStateMetadataUpdateTime struct{}

func (UpdatePlanAssignmentRequestPathSelectorCasConditionalStateMetadataUpdateTime) FieldPath() *UpdatePlanAssignmentRequest_FieldSubPath {
	return &UpdatePlanAssignmentRequest_FieldSubPath{
		selector: UpdatePlanAssignmentRequest_FieldPathSelectorCas,
		subPath:  NewUpdatePlanAssignmentRequestCASFieldPathBuilder().ConditionalState().Metadata().UpdateTime().FieldPath(),
	}
}

func (s UpdatePlanAssignmentRequestPathSelectorCasConditionalStateMetadataUpdateTime) WithValue(value *timestamp.Timestamp) *UpdatePlanAssignmentRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdatePlanAssignmentRequest_FieldSubPathValue)
}

func (s UpdatePlanAssignmentRequestPathSelectorCasConditionalStateMetadataUpdateTime) WithArrayOfValues(values []*timestamp.Timestamp) *UpdatePlanAssignmentRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdatePlanAssignmentRequest_FieldSubPathArrayOfValues)
}

type UpdatePlanAssignmentRequestPathSelectorCasConditionalStateMetadataUuid struct{}

func (UpdatePlanAssignmentRequestPathSelectorCasConditionalStateMetadataUuid) FieldPath() *UpdatePlanAssignmentRequest_FieldSubPath {
	return &UpdatePlanAssignmentRequest_FieldSubPath{
		selector: UpdatePlanAssignmentRequest_FieldPathSelectorCas,
		subPath:  NewUpdatePlanAssignmentRequestCASFieldPathBuilder().ConditionalState().Metadata().Uuid().FieldPath(),
	}
}

func (s UpdatePlanAssignmentRequestPathSelectorCasConditionalStateMetadataUuid) WithValue(value string) *UpdatePlanAssignmentRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdatePlanAssignmentRequest_FieldSubPathValue)
}

func (s UpdatePlanAssignmentRequestPathSelectorCasConditionalStateMetadataUuid) WithArrayOfValues(values []string) *UpdatePlanAssignmentRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdatePlanAssignmentRequest_FieldSubPathArrayOfValues)
}

type UpdatePlanAssignmentRequestPathSelectorCasConditionalStateMetadataTags struct{}

func (UpdatePlanAssignmentRequestPathSelectorCasConditionalStateMetadataTags) FieldPath() *UpdatePlanAssignmentRequest_FieldSubPath {
	return &UpdatePlanAssignmentRequest_FieldSubPath{
		selector: UpdatePlanAssignmentRequest_FieldPathSelectorCas,
		subPath:  NewUpdatePlanAssignmentRequestCASFieldPathBuilder().ConditionalState().Metadata().Tags().FieldPath(),
	}
}

func (s UpdatePlanAssignmentRequestPathSelectorCasConditionalStateMetadataTags) WithValue(value []string) *UpdatePlanAssignmentRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdatePlanAssignmentRequest_FieldSubPathValue)
}

func (s UpdatePlanAssignmentRequestPathSelectorCasConditionalStateMetadataTags) WithArrayOfValues(values [][]string) *UpdatePlanAssignmentRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdatePlanAssignmentRequest_FieldSubPathArrayOfValues)
}

func (s UpdatePlanAssignmentRequestPathSelectorCasConditionalStateMetadataTags) WithItemValue(value string) *UpdatePlanAssignmentRequest_FieldSubPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*UpdatePlanAssignmentRequest_FieldSubPathArrayItemValue)
}

type UpdatePlanAssignmentRequestPathSelectorCasConditionalStateMetadataLabels struct{}

func (UpdatePlanAssignmentRequestPathSelectorCasConditionalStateMetadataLabels) FieldPath() *UpdatePlanAssignmentRequest_FieldSubPath {
	return &UpdatePlanAssignmentRequest_FieldSubPath{
		selector: UpdatePlanAssignmentRequest_FieldPathSelectorCas,
		subPath:  NewUpdatePlanAssignmentRequestCASFieldPathBuilder().ConditionalState().Metadata().Labels().FieldPath(),
	}
}

func (s UpdatePlanAssignmentRequestPathSelectorCasConditionalStateMetadataLabels) WithValue(value map[string]string) *UpdatePlanAssignmentRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdatePlanAssignmentRequest_FieldSubPathValue)
}

func (s UpdatePlanAssignmentRequestPathSelectorCasConditionalStateMetadataLabels) WithArrayOfValues(values []map[string]string) *UpdatePlanAssignmentRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdatePlanAssignmentRequest_FieldSubPathArrayOfValues)
}

func (UpdatePlanAssignmentRequestPathSelectorCasConditionalStateMetadataLabels) WithKey(key string) UpdatePlanAssignmentRequestMapPathSelectorCasConditionalStateMetadataLabels {
	return UpdatePlanAssignmentRequestMapPathSelectorCasConditionalStateMetadataLabels{key: key}
}

type UpdatePlanAssignmentRequestMapPathSelectorCasConditionalStateMetadataLabels struct {
	key string
}

func (s UpdatePlanAssignmentRequestMapPathSelectorCasConditionalStateMetadataLabels) FieldPath() *UpdatePlanAssignmentRequest_FieldSubPath {
	return &UpdatePlanAssignmentRequest_FieldSubPath{
		selector: UpdatePlanAssignmentRequest_FieldPathSelectorCas,
		subPath:  NewUpdatePlanAssignmentRequestCASFieldPathBuilder().ConditionalState().Metadata().Labels().WithKey(s.key).FieldPath(),
	}
}

func (s UpdatePlanAssignmentRequestMapPathSelectorCasConditionalStateMetadataLabels) WithValue(value string) *UpdatePlanAssignmentRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdatePlanAssignmentRequest_FieldSubPathValue)
}

func (s UpdatePlanAssignmentRequestMapPathSelectorCasConditionalStateMetadataLabels) WithArrayOfValues(values []string) *UpdatePlanAssignmentRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdatePlanAssignmentRequest_FieldSubPathArrayOfValues)
}

type UpdatePlanAssignmentRequestPathSelectorCasConditionalStateMetadataAnnotations struct{}

func (UpdatePlanAssignmentRequestPathSelectorCasConditionalStateMetadataAnnotations) FieldPath() *UpdatePlanAssignmentRequest_FieldSubPath {
	return &UpdatePlanAssignmentRequest_FieldSubPath{
		selector: UpdatePlanAssignmentRequest_FieldPathSelectorCas,
		subPath:  NewUpdatePlanAssignmentRequestCASFieldPathBuilder().ConditionalState().Metadata().Annotations().FieldPath(),
	}
}

func (s UpdatePlanAssignmentRequestPathSelectorCasConditionalStateMetadataAnnotations) WithValue(value map[string]string) *UpdatePlanAssignmentRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdatePlanAssignmentRequest_FieldSubPathValue)
}

func (s UpdatePlanAssignmentRequestPathSelectorCasConditionalStateMetadataAnnotations) WithArrayOfValues(values []map[string]string) *UpdatePlanAssignmentRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdatePlanAssignmentRequest_FieldSubPathArrayOfValues)
}

func (UpdatePlanAssignmentRequestPathSelectorCasConditionalStateMetadataAnnotations) WithKey(key string) UpdatePlanAssignmentRequestMapPathSelectorCasConditionalStateMetadataAnnotations {
	return UpdatePlanAssignmentRequestMapPathSelectorCasConditionalStateMetadataAnnotations{key: key}
}

type UpdatePlanAssignmentRequestMapPathSelectorCasConditionalStateMetadataAnnotations struct {
	key string
}

func (s UpdatePlanAssignmentRequestMapPathSelectorCasConditionalStateMetadataAnnotations) FieldPath() *UpdatePlanAssignmentRequest_FieldSubPath {
	return &UpdatePlanAssignmentRequest_FieldSubPath{
		selector: UpdatePlanAssignmentRequest_FieldPathSelectorCas,
		subPath:  NewUpdatePlanAssignmentRequestCASFieldPathBuilder().ConditionalState().Metadata().Annotations().WithKey(s.key).FieldPath(),
	}
}

func (s UpdatePlanAssignmentRequestMapPathSelectorCasConditionalStateMetadataAnnotations) WithValue(value string) *UpdatePlanAssignmentRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdatePlanAssignmentRequest_FieldSubPathValue)
}

func (s UpdatePlanAssignmentRequestMapPathSelectorCasConditionalStateMetadataAnnotations) WithArrayOfValues(values []string) *UpdatePlanAssignmentRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdatePlanAssignmentRequest_FieldSubPathArrayOfValues)
}

type UpdatePlanAssignmentRequestPathSelectorCasConditionalStateMetadataGeneration struct{}

func (UpdatePlanAssignmentRequestPathSelectorCasConditionalStateMetadataGeneration) FieldPath() *UpdatePlanAssignmentRequest_FieldSubPath {
	return &UpdatePlanAssignmentRequest_FieldSubPath{
		selector: UpdatePlanAssignmentRequest_FieldPathSelectorCas,
		subPath:  NewUpdatePlanAssignmentRequestCASFieldPathBuilder().ConditionalState().Metadata().Generation().FieldPath(),
	}
}

func (s UpdatePlanAssignmentRequestPathSelectorCasConditionalStateMetadataGeneration) WithValue(value int64) *UpdatePlanAssignmentRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdatePlanAssignmentRequest_FieldSubPathValue)
}

func (s UpdatePlanAssignmentRequestPathSelectorCasConditionalStateMetadataGeneration) WithArrayOfValues(values []int64) *UpdatePlanAssignmentRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdatePlanAssignmentRequest_FieldSubPathArrayOfValues)
}

type UpdatePlanAssignmentRequestPathSelectorCasConditionalStateMetadataResourceVersion struct{}

func (UpdatePlanAssignmentRequestPathSelectorCasConditionalStateMetadataResourceVersion) FieldPath() *UpdatePlanAssignmentRequest_FieldSubPath {
	return &UpdatePlanAssignmentRequest_FieldSubPath{
		selector: UpdatePlanAssignmentRequest_FieldPathSelectorCas,
		subPath:  NewUpdatePlanAssignmentRequestCASFieldPathBuilder().ConditionalState().Metadata().ResourceVersion().FieldPath(),
	}
}

func (s UpdatePlanAssignmentRequestPathSelectorCasConditionalStateMetadataResourceVersion) WithValue(value string) *UpdatePlanAssignmentRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdatePlanAssignmentRequest_FieldSubPathValue)
}

func (s UpdatePlanAssignmentRequestPathSelectorCasConditionalStateMetadataResourceVersion) WithArrayOfValues(values []string) *UpdatePlanAssignmentRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdatePlanAssignmentRequest_FieldSubPathArrayOfValues)
}

type UpdatePlanAssignmentRequestPathSelectorCasConditionalStateMetadataOwnerReferences struct{}

func (UpdatePlanAssignmentRequestPathSelectorCasConditionalStateMetadataOwnerReferences) FieldPath() *UpdatePlanAssignmentRequest_FieldSubPath {
	return &UpdatePlanAssignmentRequest_FieldSubPath{
		selector: UpdatePlanAssignmentRequest_FieldPathSelectorCas,
		subPath:  NewUpdatePlanAssignmentRequestCASFieldPathBuilder().ConditionalState().Metadata().OwnerReferences().FieldPath(),
	}
}

func (s UpdatePlanAssignmentRequestPathSelectorCasConditionalStateMetadataOwnerReferences) WithValue(value []*ntt_meta.OwnerReference) *UpdatePlanAssignmentRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdatePlanAssignmentRequest_FieldSubPathValue)
}

func (s UpdatePlanAssignmentRequestPathSelectorCasConditionalStateMetadataOwnerReferences) WithArrayOfValues(values [][]*ntt_meta.OwnerReference) *UpdatePlanAssignmentRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdatePlanAssignmentRequest_FieldSubPathArrayOfValues)
}

func (s UpdatePlanAssignmentRequestPathSelectorCasConditionalStateMetadataOwnerReferences) WithItemValue(value *ntt_meta.OwnerReference) *UpdatePlanAssignmentRequest_FieldSubPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*UpdatePlanAssignmentRequest_FieldSubPathArrayItemValue)
}

func (UpdatePlanAssignmentRequestPathSelectorCasConditionalStateMetadataOwnerReferences) ApiVersion() UpdatePlanAssignmentRequestPathSelectorCasConditionalStateMetadataOwnerReferencesApiVersion {
	return UpdatePlanAssignmentRequestPathSelectorCasConditionalStateMetadataOwnerReferencesApiVersion{}
}

func (UpdatePlanAssignmentRequestPathSelectorCasConditionalStateMetadataOwnerReferences) Kind() UpdatePlanAssignmentRequestPathSelectorCasConditionalStateMetadataOwnerReferencesKind {
	return UpdatePlanAssignmentRequestPathSelectorCasConditionalStateMetadataOwnerReferencesKind{}
}

func (UpdatePlanAssignmentRequestPathSelectorCasConditionalStateMetadataOwnerReferences) Name() UpdatePlanAssignmentRequestPathSelectorCasConditionalStateMetadataOwnerReferencesName {
	return UpdatePlanAssignmentRequestPathSelectorCasConditionalStateMetadataOwnerReferencesName{}
}

func (UpdatePlanAssignmentRequestPathSelectorCasConditionalStateMetadataOwnerReferences) Uid() UpdatePlanAssignmentRequestPathSelectorCasConditionalStateMetadataOwnerReferencesUid {
	return UpdatePlanAssignmentRequestPathSelectorCasConditionalStateMetadataOwnerReferencesUid{}
}

func (UpdatePlanAssignmentRequestPathSelectorCasConditionalStateMetadataOwnerReferences) Controller() UpdatePlanAssignmentRequestPathSelectorCasConditionalStateMetadataOwnerReferencesController {
	return UpdatePlanAssignmentRequestPathSelectorCasConditionalStateMetadataOwnerReferencesController{}
}

func (UpdatePlanAssignmentRequestPathSelectorCasConditionalStateMetadataOwnerReferences) BlockOwnerDeletion() UpdatePlanAssignmentRequestPathSelectorCasConditionalStateMetadataOwnerReferencesBlockOwnerDeletion {
	return UpdatePlanAssignmentRequestPathSelectorCasConditionalStateMetadataOwnerReferencesBlockOwnerDeletion{}
}

type UpdatePlanAssignmentRequestPathSelectorCasConditionalStateMetadataOwnerReferencesApiVersion struct{}

func (UpdatePlanAssignmentRequestPathSelectorCasConditionalStateMetadataOwnerReferencesApiVersion) FieldPath() *UpdatePlanAssignmentRequest_FieldSubPath {
	return &UpdatePlanAssignmentRequest_FieldSubPath{
		selector: UpdatePlanAssignmentRequest_FieldPathSelectorCas,
		subPath:  NewUpdatePlanAssignmentRequestCASFieldPathBuilder().ConditionalState().Metadata().OwnerReferences().ApiVersion().FieldPath(),
	}
}

func (s UpdatePlanAssignmentRequestPathSelectorCasConditionalStateMetadataOwnerReferencesApiVersion) WithValue(value string) *UpdatePlanAssignmentRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdatePlanAssignmentRequest_FieldSubPathValue)
}

func (s UpdatePlanAssignmentRequestPathSelectorCasConditionalStateMetadataOwnerReferencesApiVersion) WithArrayOfValues(values []string) *UpdatePlanAssignmentRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdatePlanAssignmentRequest_FieldSubPathArrayOfValues)
}

type UpdatePlanAssignmentRequestPathSelectorCasConditionalStateMetadataOwnerReferencesKind struct{}

func (UpdatePlanAssignmentRequestPathSelectorCasConditionalStateMetadataOwnerReferencesKind) FieldPath() *UpdatePlanAssignmentRequest_FieldSubPath {
	return &UpdatePlanAssignmentRequest_FieldSubPath{
		selector: UpdatePlanAssignmentRequest_FieldPathSelectorCas,
		subPath:  NewUpdatePlanAssignmentRequestCASFieldPathBuilder().ConditionalState().Metadata().OwnerReferences().Kind().FieldPath(),
	}
}

func (s UpdatePlanAssignmentRequestPathSelectorCasConditionalStateMetadataOwnerReferencesKind) WithValue(value string) *UpdatePlanAssignmentRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdatePlanAssignmentRequest_FieldSubPathValue)
}

func (s UpdatePlanAssignmentRequestPathSelectorCasConditionalStateMetadataOwnerReferencesKind) WithArrayOfValues(values []string) *UpdatePlanAssignmentRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdatePlanAssignmentRequest_FieldSubPathArrayOfValues)
}

type UpdatePlanAssignmentRequestPathSelectorCasConditionalStateMetadataOwnerReferencesName struct{}

func (UpdatePlanAssignmentRequestPathSelectorCasConditionalStateMetadataOwnerReferencesName) FieldPath() *UpdatePlanAssignmentRequest_FieldSubPath {
	return &UpdatePlanAssignmentRequest_FieldSubPath{
		selector: UpdatePlanAssignmentRequest_FieldPathSelectorCas,
		subPath:  NewUpdatePlanAssignmentRequestCASFieldPathBuilder().ConditionalState().Metadata().OwnerReferences().Name().FieldPath(),
	}
}

func (s UpdatePlanAssignmentRequestPathSelectorCasConditionalStateMetadataOwnerReferencesName) WithValue(value string) *UpdatePlanAssignmentRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdatePlanAssignmentRequest_FieldSubPathValue)
}

func (s UpdatePlanAssignmentRequestPathSelectorCasConditionalStateMetadataOwnerReferencesName) WithArrayOfValues(values []string) *UpdatePlanAssignmentRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdatePlanAssignmentRequest_FieldSubPathArrayOfValues)
}

type UpdatePlanAssignmentRequestPathSelectorCasConditionalStateMetadataOwnerReferencesUid struct{}

func (UpdatePlanAssignmentRequestPathSelectorCasConditionalStateMetadataOwnerReferencesUid) FieldPath() *UpdatePlanAssignmentRequest_FieldSubPath {
	return &UpdatePlanAssignmentRequest_FieldSubPath{
		selector: UpdatePlanAssignmentRequest_FieldPathSelectorCas,
		subPath:  NewUpdatePlanAssignmentRequestCASFieldPathBuilder().ConditionalState().Metadata().OwnerReferences().Uid().FieldPath(),
	}
}

func (s UpdatePlanAssignmentRequestPathSelectorCasConditionalStateMetadataOwnerReferencesUid) WithValue(value string) *UpdatePlanAssignmentRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdatePlanAssignmentRequest_FieldSubPathValue)
}

func (s UpdatePlanAssignmentRequestPathSelectorCasConditionalStateMetadataOwnerReferencesUid) WithArrayOfValues(values []string) *UpdatePlanAssignmentRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdatePlanAssignmentRequest_FieldSubPathArrayOfValues)
}

type UpdatePlanAssignmentRequestPathSelectorCasConditionalStateMetadataOwnerReferencesController struct{}

func (UpdatePlanAssignmentRequestPathSelectorCasConditionalStateMetadataOwnerReferencesController) FieldPath() *UpdatePlanAssignmentRequest_FieldSubPath {
	return &UpdatePlanAssignmentRequest_FieldSubPath{
		selector: UpdatePlanAssignmentRequest_FieldPathSelectorCas,
		subPath:  NewUpdatePlanAssignmentRequestCASFieldPathBuilder().ConditionalState().Metadata().OwnerReferences().Controller().FieldPath(),
	}
}

func (s UpdatePlanAssignmentRequestPathSelectorCasConditionalStateMetadataOwnerReferencesController) WithValue(value bool) *UpdatePlanAssignmentRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdatePlanAssignmentRequest_FieldSubPathValue)
}

func (s UpdatePlanAssignmentRequestPathSelectorCasConditionalStateMetadataOwnerReferencesController) WithArrayOfValues(values []bool) *UpdatePlanAssignmentRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdatePlanAssignmentRequest_FieldSubPathArrayOfValues)
}

type UpdatePlanAssignmentRequestPathSelectorCasConditionalStateMetadataOwnerReferencesBlockOwnerDeletion struct{}

func (UpdatePlanAssignmentRequestPathSelectorCasConditionalStateMetadataOwnerReferencesBlockOwnerDeletion) FieldPath() *UpdatePlanAssignmentRequest_FieldSubPath {
	return &UpdatePlanAssignmentRequest_FieldSubPath{
		selector: UpdatePlanAssignmentRequest_FieldPathSelectorCas,
		subPath:  NewUpdatePlanAssignmentRequestCASFieldPathBuilder().ConditionalState().Metadata().OwnerReferences().BlockOwnerDeletion().FieldPath(),
	}
}

func (s UpdatePlanAssignmentRequestPathSelectorCasConditionalStateMetadataOwnerReferencesBlockOwnerDeletion) WithValue(value bool) *UpdatePlanAssignmentRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdatePlanAssignmentRequest_FieldSubPathValue)
}

func (s UpdatePlanAssignmentRequestPathSelectorCasConditionalStateMetadataOwnerReferencesBlockOwnerDeletion) WithArrayOfValues(values []bool) *UpdatePlanAssignmentRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdatePlanAssignmentRequest_FieldSubPathArrayOfValues)
}

type UpdatePlanAssignmentRequestPathSelectorCasConditionalStateMetadataShards struct{}

func (UpdatePlanAssignmentRequestPathSelectorCasConditionalStateMetadataShards) FieldPath() *UpdatePlanAssignmentRequest_FieldSubPath {
	return &UpdatePlanAssignmentRequest_FieldSubPath{
		selector: UpdatePlanAssignmentRequest_FieldPathSelectorCas,
		subPath:  NewUpdatePlanAssignmentRequestCASFieldPathBuilder().ConditionalState().Metadata().Shards().FieldPath(),
	}
}

func (s UpdatePlanAssignmentRequestPathSelectorCasConditionalStateMetadataShards) WithValue(value map[string]int64) *UpdatePlanAssignmentRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdatePlanAssignmentRequest_FieldSubPathValue)
}

func (s UpdatePlanAssignmentRequestPathSelectorCasConditionalStateMetadataShards) WithArrayOfValues(values []map[string]int64) *UpdatePlanAssignmentRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdatePlanAssignmentRequest_FieldSubPathArrayOfValues)
}

func (UpdatePlanAssignmentRequestPathSelectorCasConditionalStateMetadataShards) WithKey(key string) UpdatePlanAssignmentRequestMapPathSelectorCasConditionalStateMetadataShards {
	return UpdatePlanAssignmentRequestMapPathSelectorCasConditionalStateMetadataShards{key: key}
}

type UpdatePlanAssignmentRequestMapPathSelectorCasConditionalStateMetadataShards struct {
	key string
}

func (s UpdatePlanAssignmentRequestMapPathSelectorCasConditionalStateMetadataShards) FieldPath() *UpdatePlanAssignmentRequest_FieldSubPath {
	return &UpdatePlanAssignmentRequest_FieldSubPath{
		selector: UpdatePlanAssignmentRequest_FieldPathSelectorCas,
		subPath:  NewUpdatePlanAssignmentRequestCASFieldPathBuilder().ConditionalState().Metadata().Shards().WithKey(s.key).FieldPath(),
	}
}

func (s UpdatePlanAssignmentRequestMapPathSelectorCasConditionalStateMetadataShards) WithValue(value int64) *UpdatePlanAssignmentRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdatePlanAssignmentRequest_FieldSubPathValue)
}

func (s UpdatePlanAssignmentRequestMapPathSelectorCasConditionalStateMetadataShards) WithArrayOfValues(values []int64) *UpdatePlanAssignmentRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdatePlanAssignmentRequest_FieldSubPathArrayOfValues)
}

type UpdatePlanAssignmentRequestPathSelectorCasConditionalStateMetadataSyncing struct{}

func (UpdatePlanAssignmentRequestPathSelectorCasConditionalStateMetadataSyncing) FieldPath() *UpdatePlanAssignmentRequest_FieldSubPath {
	return &UpdatePlanAssignmentRequest_FieldSubPath{
		selector: UpdatePlanAssignmentRequest_FieldPathSelectorCas,
		subPath:  NewUpdatePlanAssignmentRequestCASFieldPathBuilder().ConditionalState().Metadata().Syncing().FieldPath(),
	}
}

func (s UpdatePlanAssignmentRequestPathSelectorCasConditionalStateMetadataSyncing) WithValue(value *ntt_meta.SyncingMeta) *UpdatePlanAssignmentRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdatePlanAssignmentRequest_FieldSubPathValue)
}

func (s UpdatePlanAssignmentRequestPathSelectorCasConditionalStateMetadataSyncing) WithArrayOfValues(values []*ntt_meta.SyncingMeta) *UpdatePlanAssignmentRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdatePlanAssignmentRequest_FieldSubPathArrayOfValues)
}

func (UpdatePlanAssignmentRequestPathSelectorCasConditionalStateMetadataSyncing) OwningRegion() UpdatePlanAssignmentRequestPathSelectorCasConditionalStateMetadataSyncingOwningRegion {
	return UpdatePlanAssignmentRequestPathSelectorCasConditionalStateMetadataSyncingOwningRegion{}
}

func (UpdatePlanAssignmentRequestPathSelectorCasConditionalStateMetadataSyncing) Regions() UpdatePlanAssignmentRequestPathSelectorCasConditionalStateMetadataSyncingRegions {
	return UpdatePlanAssignmentRequestPathSelectorCasConditionalStateMetadataSyncingRegions{}
}

type UpdatePlanAssignmentRequestPathSelectorCasConditionalStateMetadataSyncingOwningRegion struct{}

func (UpdatePlanAssignmentRequestPathSelectorCasConditionalStateMetadataSyncingOwningRegion) FieldPath() *UpdatePlanAssignmentRequest_FieldSubPath {
	return &UpdatePlanAssignmentRequest_FieldSubPath{
		selector: UpdatePlanAssignmentRequest_FieldPathSelectorCas,
		subPath:  NewUpdatePlanAssignmentRequestCASFieldPathBuilder().ConditionalState().Metadata().Syncing().OwningRegion().FieldPath(),
	}
}

func (s UpdatePlanAssignmentRequestPathSelectorCasConditionalStateMetadataSyncingOwningRegion) WithValue(value string) *UpdatePlanAssignmentRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdatePlanAssignmentRequest_FieldSubPathValue)
}

func (s UpdatePlanAssignmentRequestPathSelectorCasConditionalStateMetadataSyncingOwningRegion) WithArrayOfValues(values []string) *UpdatePlanAssignmentRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdatePlanAssignmentRequest_FieldSubPathArrayOfValues)
}

type UpdatePlanAssignmentRequestPathSelectorCasConditionalStateMetadataSyncingRegions struct{}

func (UpdatePlanAssignmentRequestPathSelectorCasConditionalStateMetadataSyncingRegions) FieldPath() *UpdatePlanAssignmentRequest_FieldSubPath {
	return &UpdatePlanAssignmentRequest_FieldSubPath{
		selector: UpdatePlanAssignmentRequest_FieldPathSelectorCas,
		subPath:  NewUpdatePlanAssignmentRequestCASFieldPathBuilder().ConditionalState().Metadata().Syncing().Regions().FieldPath(),
	}
}

func (s UpdatePlanAssignmentRequestPathSelectorCasConditionalStateMetadataSyncingRegions) WithValue(value []string) *UpdatePlanAssignmentRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdatePlanAssignmentRequest_FieldSubPathValue)
}

func (s UpdatePlanAssignmentRequestPathSelectorCasConditionalStateMetadataSyncingRegions) WithArrayOfValues(values [][]string) *UpdatePlanAssignmentRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdatePlanAssignmentRequest_FieldSubPathArrayOfValues)
}

func (s UpdatePlanAssignmentRequestPathSelectorCasConditionalStateMetadataSyncingRegions) WithItemValue(value string) *UpdatePlanAssignmentRequest_FieldSubPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*UpdatePlanAssignmentRequest_FieldSubPathArrayItemValue)
}

type UpdatePlanAssignmentRequestPathSelectorCasFieldMask struct{}

func (UpdatePlanAssignmentRequestPathSelectorCasFieldMask) FieldPath() *UpdatePlanAssignmentRequest_FieldSubPath {
	return &UpdatePlanAssignmentRequest_FieldSubPath{
		selector: UpdatePlanAssignmentRequest_FieldPathSelectorCas,
		subPath:  NewUpdatePlanAssignmentRequestCASFieldPathBuilder().FieldMask().FieldPath(),
	}
}

func (s UpdatePlanAssignmentRequestPathSelectorCasFieldMask) WithValue(value *plan_assignment.PlanAssignment_FieldMask) *UpdatePlanAssignmentRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdatePlanAssignmentRequest_FieldSubPathValue)
}

func (s UpdatePlanAssignmentRequestPathSelectorCasFieldMask) WithArrayOfValues(values []*plan_assignment.PlanAssignment_FieldMask) *UpdatePlanAssignmentRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdatePlanAssignmentRequest_FieldSubPathArrayOfValues)
}

type UpdatePlanAssignmentRequestCASFieldPathBuilder struct{}

func NewUpdatePlanAssignmentRequestCASFieldPathBuilder() UpdatePlanAssignmentRequestCASFieldPathBuilder {
	return UpdatePlanAssignmentRequestCASFieldPathBuilder{}
}
func (UpdatePlanAssignmentRequestCASFieldPathBuilder) ConditionalState() UpdatePlanAssignmentRequest_CASPathSelectorConditionalState {
	return UpdatePlanAssignmentRequest_CASPathSelectorConditionalState{}
}
func (UpdatePlanAssignmentRequestCASFieldPathBuilder) FieldMask() UpdatePlanAssignmentRequest_CASPathSelectorFieldMask {
	return UpdatePlanAssignmentRequest_CASPathSelectorFieldMask{}
}

type UpdatePlanAssignmentRequest_CASPathSelectorConditionalState struct{}

func (UpdatePlanAssignmentRequest_CASPathSelectorConditionalState) FieldPath() *UpdatePlanAssignmentRequestCAS_FieldTerminalPath {
	return &UpdatePlanAssignmentRequestCAS_FieldTerminalPath{selector: UpdatePlanAssignmentRequestCAS_FieldPathSelectorConditionalState}
}

func (s UpdatePlanAssignmentRequest_CASPathSelectorConditionalState) WithValue(value *plan_assignment.PlanAssignment) *UpdatePlanAssignmentRequestCAS_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*UpdatePlanAssignmentRequestCAS_FieldTerminalPathValue)
}

func (s UpdatePlanAssignmentRequest_CASPathSelectorConditionalState) WithArrayOfValues(values []*plan_assignment.PlanAssignment) *UpdatePlanAssignmentRequestCAS_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdatePlanAssignmentRequestCAS_FieldTerminalPathArrayOfValues)
}

func (UpdatePlanAssignmentRequest_CASPathSelectorConditionalState) WithSubPath(subPath plan_assignment.PlanAssignment_FieldPath) *UpdatePlanAssignmentRequestCAS_FieldSubPath {
	return &UpdatePlanAssignmentRequestCAS_FieldSubPath{selector: UpdatePlanAssignmentRequestCAS_FieldPathSelectorConditionalState, subPath: subPath}
}

func (s UpdatePlanAssignmentRequest_CASPathSelectorConditionalState) WithSubValue(subPathValue plan_assignment.PlanAssignment_FieldPathValue) *UpdatePlanAssignmentRequestCAS_FieldSubPathValue {
	return &UpdatePlanAssignmentRequestCAS_FieldSubPathValue{UpdatePlanAssignmentRequestCAS_FieldPath: s.WithSubPath(subPathValue), subPathValue: subPathValue}
}

func (s UpdatePlanAssignmentRequest_CASPathSelectorConditionalState) WithSubArrayOfValues(subPathArrayOfValues plan_assignment.PlanAssignment_FieldPathArrayOfValues) *UpdatePlanAssignmentRequestCAS_FieldSubPathArrayOfValues {
	return &UpdatePlanAssignmentRequestCAS_FieldSubPathArrayOfValues{UpdatePlanAssignmentRequestCAS_FieldPath: s.WithSubPath(subPathArrayOfValues), subPathArrayOfValues: subPathArrayOfValues}
}

func (s UpdatePlanAssignmentRequest_CASPathSelectorConditionalState) WithSubArrayItemValue(subPathArrayItemValue plan_assignment.PlanAssignment_FieldPathArrayItemValue) *UpdatePlanAssignmentRequestCAS_FieldSubPathArrayItemValue {
	return &UpdatePlanAssignmentRequestCAS_FieldSubPathArrayItemValue{UpdatePlanAssignmentRequestCAS_FieldPath: s.WithSubPath(subPathArrayItemValue), subPathItemValue: subPathArrayItemValue}
}

func (UpdatePlanAssignmentRequest_CASPathSelectorConditionalState) Name() UpdatePlanAssignmentRequest_CASPathSelectorConditionalStateName {
	return UpdatePlanAssignmentRequest_CASPathSelectorConditionalStateName{}
}

func (UpdatePlanAssignmentRequest_CASPathSelectorConditionalState) Plan() UpdatePlanAssignmentRequest_CASPathSelectorConditionalStatePlan {
	return UpdatePlanAssignmentRequest_CASPathSelectorConditionalStatePlan{}
}

func (UpdatePlanAssignmentRequest_CASPathSelectorConditionalState) Service() UpdatePlanAssignmentRequest_CASPathSelectorConditionalStateService {
	return UpdatePlanAssignmentRequest_CASPathSelectorConditionalStateService{}
}

func (UpdatePlanAssignmentRequest_CASPathSelectorConditionalState) Extensions() UpdatePlanAssignmentRequest_CASPathSelectorConditionalStateExtensions {
	return UpdatePlanAssignmentRequest_CASPathSelectorConditionalStateExtensions{}
}

func (UpdatePlanAssignmentRequest_CASPathSelectorConditionalState) RegionalDistributions() UpdatePlanAssignmentRequest_CASPathSelectorConditionalStateRegionalDistributions {
	return UpdatePlanAssignmentRequest_CASPathSelectorConditionalStateRegionalDistributions{}
}

func (UpdatePlanAssignmentRequest_CASPathSelectorConditionalState) Source() UpdatePlanAssignmentRequest_CASPathSelectorConditionalStateSource {
	return UpdatePlanAssignmentRequest_CASPathSelectorConditionalStateSource{}
}

func (UpdatePlanAssignmentRequest_CASPathSelectorConditionalState) Metadata() UpdatePlanAssignmentRequest_CASPathSelectorConditionalStateMetadata {
	return UpdatePlanAssignmentRequest_CASPathSelectorConditionalStateMetadata{}
}

type UpdatePlanAssignmentRequest_CASPathSelectorConditionalStateName struct{}

func (UpdatePlanAssignmentRequest_CASPathSelectorConditionalStateName) FieldPath() *UpdatePlanAssignmentRequestCAS_FieldSubPath {
	return &UpdatePlanAssignmentRequestCAS_FieldSubPath{
		selector: UpdatePlanAssignmentRequestCAS_FieldPathSelectorConditionalState,
		subPath:  plan_assignment.NewPlanAssignmentFieldPathBuilder().Name().FieldPath(),
	}
}

func (s UpdatePlanAssignmentRequest_CASPathSelectorConditionalStateName) WithValue(value *plan_assignment.Name) *UpdatePlanAssignmentRequestCAS_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdatePlanAssignmentRequestCAS_FieldSubPathValue)
}

func (s UpdatePlanAssignmentRequest_CASPathSelectorConditionalStateName) WithArrayOfValues(values []*plan_assignment.Name) *UpdatePlanAssignmentRequestCAS_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdatePlanAssignmentRequestCAS_FieldSubPathArrayOfValues)
}

type UpdatePlanAssignmentRequest_CASPathSelectorConditionalStatePlan struct{}

func (UpdatePlanAssignmentRequest_CASPathSelectorConditionalStatePlan) FieldPath() *UpdatePlanAssignmentRequestCAS_FieldSubPath {
	return &UpdatePlanAssignmentRequestCAS_FieldSubPath{
		selector: UpdatePlanAssignmentRequestCAS_FieldPathSelectorConditionalState,
		subPath:  plan_assignment.NewPlanAssignmentFieldPathBuilder().Plan().FieldPath(),
	}
}

func (s UpdatePlanAssignmentRequest_CASPathSelectorConditionalStatePlan) WithValue(value *plan.Reference) *UpdatePlanAssignmentRequestCAS_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdatePlanAssignmentRequestCAS_FieldSubPathValue)
}

func (s UpdatePlanAssignmentRequest_CASPathSelectorConditionalStatePlan) WithArrayOfValues(values []*plan.Reference) *UpdatePlanAssignmentRequestCAS_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdatePlanAssignmentRequestCAS_FieldSubPathArrayOfValues)
}

type UpdatePlanAssignmentRequest_CASPathSelectorConditionalStateService struct{}

func (UpdatePlanAssignmentRequest_CASPathSelectorConditionalStateService) FieldPath() *UpdatePlanAssignmentRequestCAS_FieldSubPath {
	return &UpdatePlanAssignmentRequestCAS_FieldSubPath{
		selector: UpdatePlanAssignmentRequestCAS_FieldPathSelectorConditionalState,
		subPath:  plan_assignment.NewPlanAssignmentFieldPathBuilder().Service().FieldPath(),
	}
}

func (s UpdatePlanAssignmentRequest_CASPathSelectorConditionalStateService) WithValue(value *meta_service.Reference) *UpdatePlanAssignmentRequestCAS_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdatePlanAssignmentRequestCAS_FieldSubPathValue)
}

func (s UpdatePlanAssignmentRequest_CASPathSelectorConditionalStateService) WithArrayOfValues(values []*meta_service.Reference) *UpdatePlanAssignmentRequestCAS_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdatePlanAssignmentRequestCAS_FieldSubPathArrayOfValues)
}

type UpdatePlanAssignmentRequest_CASPathSelectorConditionalStateExtensions struct{}

func (UpdatePlanAssignmentRequest_CASPathSelectorConditionalStateExtensions) FieldPath() *UpdatePlanAssignmentRequestCAS_FieldSubPath {
	return &UpdatePlanAssignmentRequestCAS_FieldSubPath{
		selector: UpdatePlanAssignmentRequestCAS_FieldPathSelectorConditionalState,
		subPath:  plan_assignment.NewPlanAssignmentFieldPathBuilder().Extensions().FieldPath(),
	}
}

func (s UpdatePlanAssignmentRequest_CASPathSelectorConditionalStateExtensions) WithValue(value []*common.Allowance) *UpdatePlanAssignmentRequestCAS_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdatePlanAssignmentRequestCAS_FieldSubPathValue)
}

func (s UpdatePlanAssignmentRequest_CASPathSelectorConditionalStateExtensions) WithArrayOfValues(values [][]*common.Allowance) *UpdatePlanAssignmentRequestCAS_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdatePlanAssignmentRequestCAS_FieldSubPathArrayOfValues)
}

func (s UpdatePlanAssignmentRequest_CASPathSelectorConditionalStateExtensions) WithItemValue(value *common.Allowance) *UpdatePlanAssignmentRequestCAS_FieldSubPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*UpdatePlanAssignmentRequestCAS_FieldSubPathArrayItemValue)
}

func (UpdatePlanAssignmentRequest_CASPathSelectorConditionalStateExtensions) Resource() UpdatePlanAssignmentRequest_CASPathSelectorConditionalStateExtensionsResource {
	return UpdatePlanAssignmentRequest_CASPathSelectorConditionalStateExtensionsResource{}
}

func (UpdatePlanAssignmentRequest_CASPathSelectorConditionalStateExtensions) Value() UpdatePlanAssignmentRequest_CASPathSelectorConditionalStateExtensionsValue {
	return UpdatePlanAssignmentRequest_CASPathSelectorConditionalStateExtensionsValue{}
}

type UpdatePlanAssignmentRequest_CASPathSelectorConditionalStateExtensionsResource struct{}

func (UpdatePlanAssignmentRequest_CASPathSelectorConditionalStateExtensionsResource) FieldPath() *UpdatePlanAssignmentRequestCAS_FieldSubPath {
	return &UpdatePlanAssignmentRequestCAS_FieldSubPath{
		selector: UpdatePlanAssignmentRequestCAS_FieldPathSelectorConditionalState,
		subPath:  plan_assignment.NewPlanAssignmentFieldPathBuilder().Extensions().Resource().FieldPath(),
	}
}

func (s UpdatePlanAssignmentRequest_CASPathSelectorConditionalStateExtensionsResource) WithValue(value *meta_resource.Reference) *UpdatePlanAssignmentRequestCAS_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdatePlanAssignmentRequestCAS_FieldSubPathValue)
}

func (s UpdatePlanAssignmentRequest_CASPathSelectorConditionalStateExtensionsResource) WithArrayOfValues(values []*meta_resource.Reference) *UpdatePlanAssignmentRequestCAS_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdatePlanAssignmentRequestCAS_FieldSubPathArrayOfValues)
}

type UpdatePlanAssignmentRequest_CASPathSelectorConditionalStateExtensionsValue struct{}

func (UpdatePlanAssignmentRequest_CASPathSelectorConditionalStateExtensionsValue) FieldPath() *UpdatePlanAssignmentRequestCAS_FieldSubPath {
	return &UpdatePlanAssignmentRequestCAS_FieldSubPath{
		selector: UpdatePlanAssignmentRequestCAS_FieldPathSelectorConditionalState,
		subPath:  plan_assignment.NewPlanAssignmentFieldPathBuilder().Extensions().Value().FieldPath(),
	}
}

func (s UpdatePlanAssignmentRequest_CASPathSelectorConditionalStateExtensionsValue) WithValue(value int64) *UpdatePlanAssignmentRequestCAS_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdatePlanAssignmentRequestCAS_FieldSubPathValue)
}

func (s UpdatePlanAssignmentRequest_CASPathSelectorConditionalStateExtensionsValue) WithArrayOfValues(values []int64) *UpdatePlanAssignmentRequestCAS_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdatePlanAssignmentRequestCAS_FieldSubPathArrayOfValues)
}

type UpdatePlanAssignmentRequest_CASPathSelectorConditionalStateRegionalDistributions struct{}

func (UpdatePlanAssignmentRequest_CASPathSelectorConditionalStateRegionalDistributions) FieldPath() *UpdatePlanAssignmentRequestCAS_FieldSubPath {
	return &UpdatePlanAssignmentRequestCAS_FieldSubPath{
		selector: UpdatePlanAssignmentRequestCAS_FieldPathSelectorConditionalState,
		subPath:  plan_assignment.NewPlanAssignmentFieldPathBuilder().RegionalDistributions().FieldPath(),
	}
}

func (s UpdatePlanAssignmentRequest_CASPathSelectorConditionalStateRegionalDistributions) WithValue(value []*common.RegionalDistribution) *UpdatePlanAssignmentRequestCAS_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdatePlanAssignmentRequestCAS_FieldSubPathValue)
}

func (s UpdatePlanAssignmentRequest_CASPathSelectorConditionalStateRegionalDistributions) WithArrayOfValues(values [][]*common.RegionalDistribution) *UpdatePlanAssignmentRequestCAS_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdatePlanAssignmentRequestCAS_FieldSubPathArrayOfValues)
}

func (s UpdatePlanAssignmentRequest_CASPathSelectorConditionalStateRegionalDistributions) WithItemValue(value *common.RegionalDistribution) *UpdatePlanAssignmentRequestCAS_FieldSubPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*UpdatePlanAssignmentRequestCAS_FieldSubPathArrayItemValue)
}

func (UpdatePlanAssignmentRequest_CASPathSelectorConditionalStateRegionalDistributions) Resource() UpdatePlanAssignmentRequest_CASPathSelectorConditionalStateRegionalDistributionsResource {
	return UpdatePlanAssignmentRequest_CASPathSelectorConditionalStateRegionalDistributionsResource{}
}

func (UpdatePlanAssignmentRequest_CASPathSelectorConditionalStateRegionalDistributions) LimitsByRegion() UpdatePlanAssignmentRequest_CASPathSelectorConditionalStateRegionalDistributionsLimitsByRegion {
	return UpdatePlanAssignmentRequest_CASPathSelectorConditionalStateRegionalDistributionsLimitsByRegion{}
}

type UpdatePlanAssignmentRequest_CASPathSelectorConditionalStateRegionalDistributionsResource struct{}

func (UpdatePlanAssignmentRequest_CASPathSelectorConditionalStateRegionalDistributionsResource) FieldPath() *UpdatePlanAssignmentRequestCAS_FieldSubPath {
	return &UpdatePlanAssignmentRequestCAS_FieldSubPath{
		selector: UpdatePlanAssignmentRequestCAS_FieldPathSelectorConditionalState,
		subPath:  plan_assignment.NewPlanAssignmentFieldPathBuilder().RegionalDistributions().Resource().FieldPath(),
	}
}

func (s UpdatePlanAssignmentRequest_CASPathSelectorConditionalStateRegionalDistributionsResource) WithValue(value *meta_resource.Reference) *UpdatePlanAssignmentRequestCAS_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdatePlanAssignmentRequestCAS_FieldSubPathValue)
}

func (s UpdatePlanAssignmentRequest_CASPathSelectorConditionalStateRegionalDistributionsResource) WithArrayOfValues(values []*meta_resource.Reference) *UpdatePlanAssignmentRequestCAS_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdatePlanAssignmentRequestCAS_FieldSubPathArrayOfValues)
}

type UpdatePlanAssignmentRequest_CASPathSelectorConditionalStateRegionalDistributionsLimitsByRegion struct{}

func (UpdatePlanAssignmentRequest_CASPathSelectorConditionalStateRegionalDistributionsLimitsByRegion) FieldPath() *UpdatePlanAssignmentRequestCAS_FieldSubPath {
	return &UpdatePlanAssignmentRequestCAS_FieldSubPath{
		selector: UpdatePlanAssignmentRequestCAS_FieldPathSelectorConditionalState,
		subPath:  plan_assignment.NewPlanAssignmentFieldPathBuilder().RegionalDistributions().LimitsByRegion().FieldPath(),
	}
}

func (s UpdatePlanAssignmentRequest_CASPathSelectorConditionalStateRegionalDistributionsLimitsByRegion) WithValue(value map[string]int64) *UpdatePlanAssignmentRequestCAS_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdatePlanAssignmentRequestCAS_FieldSubPathValue)
}

func (s UpdatePlanAssignmentRequest_CASPathSelectorConditionalStateRegionalDistributionsLimitsByRegion) WithArrayOfValues(values []map[string]int64) *UpdatePlanAssignmentRequestCAS_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdatePlanAssignmentRequestCAS_FieldSubPathArrayOfValues)
}

func (UpdatePlanAssignmentRequest_CASPathSelectorConditionalStateRegionalDistributionsLimitsByRegion) WithKey(key string) UpdatePlanAssignmentRequest_CASMapPathSelectorConditionalStateRegionalDistributionsLimitsByRegion {
	return UpdatePlanAssignmentRequest_CASMapPathSelectorConditionalStateRegionalDistributionsLimitsByRegion{key: key}
}

type UpdatePlanAssignmentRequest_CASMapPathSelectorConditionalStateRegionalDistributionsLimitsByRegion struct {
	key string
}

func (s UpdatePlanAssignmentRequest_CASMapPathSelectorConditionalStateRegionalDistributionsLimitsByRegion) FieldPath() *UpdatePlanAssignmentRequestCAS_FieldSubPath {
	return &UpdatePlanAssignmentRequestCAS_FieldSubPath{
		selector: UpdatePlanAssignmentRequestCAS_FieldPathSelectorConditionalState,
		subPath:  plan_assignment.NewPlanAssignmentFieldPathBuilder().RegionalDistributions().LimitsByRegion().WithKey(s.key).FieldPath(),
	}
}

func (s UpdatePlanAssignmentRequest_CASMapPathSelectorConditionalStateRegionalDistributionsLimitsByRegion) WithValue(value int64) *UpdatePlanAssignmentRequestCAS_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdatePlanAssignmentRequestCAS_FieldSubPathValue)
}

func (s UpdatePlanAssignmentRequest_CASMapPathSelectorConditionalStateRegionalDistributionsLimitsByRegion) WithArrayOfValues(values []int64) *UpdatePlanAssignmentRequestCAS_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdatePlanAssignmentRequestCAS_FieldSubPathArrayOfValues)
}

type UpdatePlanAssignmentRequest_CASPathSelectorConditionalStateSource struct{}

func (UpdatePlanAssignmentRequest_CASPathSelectorConditionalStateSource) FieldPath() *UpdatePlanAssignmentRequestCAS_FieldSubPath {
	return &UpdatePlanAssignmentRequestCAS_FieldSubPath{
		selector: UpdatePlanAssignmentRequestCAS_FieldPathSelectorConditionalState,
		subPath:  plan_assignment.NewPlanAssignmentFieldPathBuilder().Source().FieldPath(),
	}
}

func (s UpdatePlanAssignmentRequest_CASPathSelectorConditionalStateSource) WithValue(value *accepted_plan.Reference) *UpdatePlanAssignmentRequestCAS_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdatePlanAssignmentRequestCAS_FieldSubPathValue)
}

func (s UpdatePlanAssignmentRequest_CASPathSelectorConditionalStateSource) WithArrayOfValues(values []*accepted_plan.Reference) *UpdatePlanAssignmentRequestCAS_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdatePlanAssignmentRequestCAS_FieldSubPathArrayOfValues)
}

type UpdatePlanAssignmentRequest_CASPathSelectorConditionalStateMetadata struct{}

func (UpdatePlanAssignmentRequest_CASPathSelectorConditionalStateMetadata) FieldPath() *UpdatePlanAssignmentRequestCAS_FieldSubPath {
	return &UpdatePlanAssignmentRequestCAS_FieldSubPath{
		selector: UpdatePlanAssignmentRequestCAS_FieldPathSelectorConditionalState,
		subPath:  plan_assignment.NewPlanAssignmentFieldPathBuilder().Metadata().FieldPath(),
	}
}

func (s UpdatePlanAssignmentRequest_CASPathSelectorConditionalStateMetadata) WithValue(value *ntt_meta.Meta) *UpdatePlanAssignmentRequestCAS_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdatePlanAssignmentRequestCAS_FieldSubPathValue)
}

func (s UpdatePlanAssignmentRequest_CASPathSelectorConditionalStateMetadata) WithArrayOfValues(values []*ntt_meta.Meta) *UpdatePlanAssignmentRequestCAS_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdatePlanAssignmentRequestCAS_FieldSubPathArrayOfValues)
}

func (UpdatePlanAssignmentRequest_CASPathSelectorConditionalStateMetadata) CreateTime() UpdatePlanAssignmentRequest_CASPathSelectorConditionalStateMetadataCreateTime {
	return UpdatePlanAssignmentRequest_CASPathSelectorConditionalStateMetadataCreateTime{}
}

func (UpdatePlanAssignmentRequest_CASPathSelectorConditionalStateMetadata) UpdateTime() UpdatePlanAssignmentRequest_CASPathSelectorConditionalStateMetadataUpdateTime {
	return UpdatePlanAssignmentRequest_CASPathSelectorConditionalStateMetadataUpdateTime{}
}

func (UpdatePlanAssignmentRequest_CASPathSelectorConditionalStateMetadata) Uuid() UpdatePlanAssignmentRequest_CASPathSelectorConditionalStateMetadataUuid {
	return UpdatePlanAssignmentRequest_CASPathSelectorConditionalStateMetadataUuid{}
}

func (UpdatePlanAssignmentRequest_CASPathSelectorConditionalStateMetadata) Tags() UpdatePlanAssignmentRequest_CASPathSelectorConditionalStateMetadataTags {
	return UpdatePlanAssignmentRequest_CASPathSelectorConditionalStateMetadataTags{}
}

func (UpdatePlanAssignmentRequest_CASPathSelectorConditionalStateMetadata) Labels() UpdatePlanAssignmentRequest_CASPathSelectorConditionalStateMetadataLabels {
	return UpdatePlanAssignmentRequest_CASPathSelectorConditionalStateMetadataLabels{}
}

func (UpdatePlanAssignmentRequest_CASPathSelectorConditionalStateMetadata) Annotations() UpdatePlanAssignmentRequest_CASPathSelectorConditionalStateMetadataAnnotations {
	return UpdatePlanAssignmentRequest_CASPathSelectorConditionalStateMetadataAnnotations{}
}

func (UpdatePlanAssignmentRequest_CASPathSelectorConditionalStateMetadata) Generation() UpdatePlanAssignmentRequest_CASPathSelectorConditionalStateMetadataGeneration {
	return UpdatePlanAssignmentRequest_CASPathSelectorConditionalStateMetadataGeneration{}
}

func (UpdatePlanAssignmentRequest_CASPathSelectorConditionalStateMetadata) ResourceVersion() UpdatePlanAssignmentRequest_CASPathSelectorConditionalStateMetadataResourceVersion {
	return UpdatePlanAssignmentRequest_CASPathSelectorConditionalStateMetadataResourceVersion{}
}

func (UpdatePlanAssignmentRequest_CASPathSelectorConditionalStateMetadata) OwnerReferences() UpdatePlanAssignmentRequest_CASPathSelectorConditionalStateMetadataOwnerReferences {
	return UpdatePlanAssignmentRequest_CASPathSelectorConditionalStateMetadataOwnerReferences{}
}

func (UpdatePlanAssignmentRequest_CASPathSelectorConditionalStateMetadata) Shards() UpdatePlanAssignmentRequest_CASPathSelectorConditionalStateMetadataShards {
	return UpdatePlanAssignmentRequest_CASPathSelectorConditionalStateMetadataShards{}
}

func (UpdatePlanAssignmentRequest_CASPathSelectorConditionalStateMetadata) Syncing() UpdatePlanAssignmentRequest_CASPathSelectorConditionalStateMetadataSyncing {
	return UpdatePlanAssignmentRequest_CASPathSelectorConditionalStateMetadataSyncing{}
}

type UpdatePlanAssignmentRequest_CASPathSelectorConditionalStateMetadataCreateTime struct{}

func (UpdatePlanAssignmentRequest_CASPathSelectorConditionalStateMetadataCreateTime) FieldPath() *UpdatePlanAssignmentRequestCAS_FieldSubPath {
	return &UpdatePlanAssignmentRequestCAS_FieldSubPath{
		selector: UpdatePlanAssignmentRequestCAS_FieldPathSelectorConditionalState,
		subPath:  plan_assignment.NewPlanAssignmentFieldPathBuilder().Metadata().CreateTime().FieldPath(),
	}
}

func (s UpdatePlanAssignmentRequest_CASPathSelectorConditionalStateMetadataCreateTime) WithValue(value *timestamp.Timestamp) *UpdatePlanAssignmentRequestCAS_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdatePlanAssignmentRequestCAS_FieldSubPathValue)
}

func (s UpdatePlanAssignmentRequest_CASPathSelectorConditionalStateMetadataCreateTime) WithArrayOfValues(values []*timestamp.Timestamp) *UpdatePlanAssignmentRequestCAS_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdatePlanAssignmentRequestCAS_FieldSubPathArrayOfValues)
}

type UpdatePlanAssignmentRequest_CASPathSelectorConditionalStateMetadataUpdateTime struct{}

func (UpdatePlanAssignmentRequest_CASPathSelectorConditionalStateMetadataUpdateTime) FieldPath() *UpdatePlanAssignmentRequestCAS_FieldSubPath {
	return &UpdatePlanAssignmentRequestCAS_FieldSubPath{
		selector: UpdatePlanAssignmentRequestCAS_FieldPathSelectorConditionalState,
		subPath:  plan_assignment.NewPlanAssignmentFieldPathBuilder().Metadata().UpdateTime().FieldPath(),
	}
}

func (s UpdatePlanAssignmentRequest_CASPathSelectorConditionalStateMetadataUpdateTime) WithValue(value *timestamp.Timestamp) *UpdatePlanAssignmentRequestCAS_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdatePlanAssignmentRequestCAS_FieldSubPathValue)
}

func (s UpdatePlanAssignmentRequest_CASPathSelectorConditionalStateMetadataUpdateTime) WithArrayOfValues(values []*timestamp.Timestamp) *UpdatePlanAssignmentRequestCAS_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdatePlanAssignmentRequestCAS_FieldSubPathArrayOfValues)
}

type UpdatePlanAssignmentRequest_CASPathSelectorConditionalStateMetadataUuid struct{}

func (UpdatePlanAssignmentRequest_CASPathSelectorConditionalStateMetadataUuid) FieldPath() *UpdatePlanAssignmentRequestCAS_FieldSubPath {
	return &UpdatePlanAssignmentRequestCAS_FieldSubPath{
		selector: UpdatePlanAssignmentRequestCAS_FieldPathSelectorConditionalState,
		subPath:  plan_assignment.NewPlanAssignmentFieldPathBuilder().Metadata().Uuid().FieldPath(),
	}
}

func (s UpdatePlanAssignmentRequest_CASPathSelectorConditionalStateMetadataUuid) WithValue(value string) *UpdatePlanAssignmentRequestCAS_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdatePlanAssignmentRequestCAS_FieldSubPathValue)
}

func (s UpdatePlanAssignmentRequest_CASPathSelectorConditionalStateMetadataUuid) WithArrayOfValues(values []string) *UpdatePlanAssignmentRequestCAS_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdatePlanAssignmentRequestCAS_FieldSubPathArrayOfValues)
}

type UpdatePlanAssignmentRequest_CASPathSelectorConditionalStateMetadataTags struct{}

func (UpdatePlanAssignmentRequest_CASPathSelectorConditionalStateMetadataTags) FieldPath() *UpdatePlanAssignmentRequestCAS_FieldSubPath {
	return &UpdatePlanAssignmentRequestCAS_FieldSubPath{
		selector: UpdatePlanAssignmentRequestCAS_FieldPathSelectorConditionalState,
		subPath:  plan_assignment.NewPlanAssignmentFieldPathBuilder().Metadata().Tags().FieldPath(),
	}
}

func (s UpdatePlanAssignmentRequest_CASPathSelectorConditionalStateMetadataTags) WithValue(value []string) *UpdatePlanAssignmentRequestCAS_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdatePlanAssignmentRequestCAS_FieldSubPathValue)
}

func (s UpdatePlanAssignmentRequest_CASPathSelectorConditionalStateMetadataTags) WithArrayOfValues(values [][]string) *UpdatePlanAssignmentRequestCAS_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdatePlanAssignmentRequestCAS_FieldSubPathArrayOfValues)
}

func (s UpdatePlanAssignmentRequest_CASPathSelectorConditionalStateMetadataTags) WithItemValue(value string) *UpdatePlanAssignmentRequestCAS_FieldSubPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*UpdatePlanAssignmentRequestCAS_FieldSubPathArrayItemValue)
}

type UpdatePlanAssignmentRequest_CASPathSelectorConditionalStateMetadataLabels struct{}

func (UpdatePlanAssignmentRequest_CASPathSelectorConditionalStateMetadataLabels) FieldPath() *UpdatePlanAssignmentRequestCAS_FieldSubPath {
	return &UpdatePlanAssignmentRequestCAS_FieldSubPath{
		selector: UpdatePlanAssignmentRequestCAS_FieldPathSelectorConditionalState,
		subPath:  plan_assignment.NewPlanAssignmentFieldPathBuilder().Metadata().Labels().FieldPath(),
	}
}

func (s UpdatePlanAssignmentRequest_CASPathSelectorConditionalStateMetadataLabels) WithValue(value map[string]string) *UpdatePlanAssignmentRequestCAS_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdatePlanAssignmentRequestCAS_FieldSubPathValue)
}

func (s UpdatePlanAssignmentRequest_CASPathSelectorConditionalStateMetadataLabels) WithArrayOfValues(values []map[string]string) *UpdatePlanAssignmentRequestCAS_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdatePlanAssignmentRequestCAS_FieldSubPathArrayOfValues)
}

func (UpdatePlanAssignmentRequest_CASPathSelectorConditionalStateMetadataLabels) WithKey(key string) UpdatePlanAssignmentRequest_CASMapPathSelectorConditionalStateMetadataLabels {
	return UpdatePlanAssignmentRequest_CASMapPathSelectorConditionalStateMetadataLabels{key: key}
}

type UpdatePlanAssignmentRequest_CASMapPathSelectorConditionalStateMetadataLabels struct {
	key string
}

func (s UpdatePlanAssignmentRequest_CASMapPathSelectorConditionalStateMetadataLabels) FieldPath() *UpdatePlanAssignmentRequestCAS_FieldSubPath {
	return &UpdatePlanAssignmentRequestCAS_FieldSubPath{
		selector: UpdatePlanAssignmentRequestCAS_FieldPathSelectorConditionalState,
		subPath:  plan_assignment.NewPlanAssignmentFieldPathBuilder().Metadata().Labels().WithKey(s.key).FieldPath(),
	}
}

func (s UpdatePlanAssignmentRequest_CASMapPathSelectorConditionalStateMetadataLabels) WithValue(value string) *UpdatePlanAssignmentRequestCAS_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdatePlanAssignmentRequestCAS_FieldSubPathValue)
}

func (s UpdatePlanAssignmentRequest_CASMapPathSelectorConditionalStateMetadataLabels) WithArrayOfValues(values []string) *UpdatePlanAssignmentRequestCAS_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdatePlanAssignmentRequestCAS_FieldSubPathArrayOfValues)
}

type UpdatePlanAssignmentRequest_CASPathSelectorConditionalStateMetadataAnnotations struct{}

func (UpdatePlanAssignmentRequest_CASPathSelectorConditionalStateMetadataAnnotations) FieldPath() *UpdatePlanAssignmentRequestCAS_FieldSubPath {
	return &UpdatePlanAssignmentRequestCAS_FieldSubPath{
		selector: UpdatePlanAssignmentRequestCAS_FieldPathSelectorConditionalState,
		subPath:  plan_assignment.NewPlanAssignmentFieldPathBuilder().Metadata().Annotations().FieldPath(),
	}
}

func (s UpdatePlanAssignmentRequest_CASPathSelectorConditionalStateMetadataAnnotations) WithValue(value map[string]string) *UpdatePlanAssignmentRequestCAS_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdatePlanAssignmentRequestCAS_FieldSubPathValue)
}

func (s UpdatePlanAssignmentRequest_CASPathSelectorConditionalStateMetadataAnnotations) WithArrayOfValues(values []map[string]string) *UpdatePlanAssignmentRequestCAS_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdatePlanAssignmentRequestCAS_FieldSubPathArrayOfValues)
}

func (UpdatePlanAssignmentRequest_CASPathSelectorConditionalStateMetadataAnnotations) WithKey(key string) UpdatePlanAssignmentRequest_CASMapPathSelectorConditionalStateMetadataAnnotations {
	return UpdatePlanAssignmentRequest_CASMapPathSelectorConditionalStateMetadataAnnotations{key: key}
}

type UpdatePlanAssignmentRequest_CASMapPathSelectorConditionalStateMetadataAnnotations struct {
	key string
}

func (s UpdatePlanAssignmentRequest_CASMapPathSelectorConditionalStateMetadataAnnotations) FieldPath() *UpdatePlanAssignmentRequestCAS_FieldSubPath {
	return &UpdatePlanAssignmentRequestCAS_FieldSubPath{
		selector: UpdatePlanAssignmentRequestCAS_FieldPathSelectorConditionalState,
		subPath:  plan_assignment.NewPlanAssignmentFieldPathBuilder().Metadata().Annotations().WithKey(s.key).FieldPath(),
	}
}

func (s UpdatePlanAssignmentRequest_CASMapPathSelectorConditionalStateMetadataAnnotations) WithValue(value string) *UpdatePlanAssignmentRequestCAS_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdatePlanAssignmentRequestCAS_FieldSubPathValue)
}

func (s UpdatePlanAssignmentRequest_CASMapPathSelectorConditionalStateMetadataAnnotations) WithArrayOfValues(values []string) *UpdatePlanAssignmentRequestCAS_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdatePlanAssignmentRequestCAS_FieldSubPathArrayOfValues)
}

type UpdatePlanAssignmentRequest_CASPathSelectorConditionalStateMetadataGeneration struct{}

func (UpdatePlanAssignmentRequest_CASPathSelectorConditionalStateMetadataGeneration) FieldPath() *UpdatePlanAssignmentRequestCAS_FieldSubPath {
	return &UpdatePlanAssignmentRequestCAS_FieldSubPath{
		selector: UpdatePlanAssignmentRequestCAS_FieldPathSelectorConditionalState,
		subPath:  plan_assignment.NewPlanAssignmentFieldPathBuilder().Metadata().Generation().FieldPath(),
	}
}

func (s UpdatePlanAssignmentRequest_CASPathSelectorConditionalStateMetadataGeneration) WithValue(value int64) *UpdatePlanAssignmentRequestCAS_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdatePlanAssignmentRequestCAS_FieldSubPathValue)
}

func (s UpdatePlanAssignmentRequest_CASPathSelectorConditionalStateMetadataGeneration) WithArrayOfValues(values []int64) *UpdatePlanAssignmentRequestCAS_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdatePlanAssignmentRequestCAS_FieldSubPathArrayOfValues)
}

type UpdatePlanAssignmentRequest_CASPathSelectorConditionalStateMetadataResourceVersion struct{}

func (UpdatePlanAssignmentRequest_CASPathSelectorConditionalStateMetadataResourceVersion) FieldPath() *UpdatePlanAssignmentRequestCAS_FieldSubPath {
	return &UpdatePlanAssignmentRequestCAS_FieldSubPath{
		selector: UpdatePlanAssignmentRequestCAS_FieldPathSelectorConditionalState,
		subPath:  plan_assignment.NewPlanAssignmentFieldPathBuilder().Metadata().ResourceVersion().FieldPath(),
	}
}

func (s UpdatePlanAssignmentRequest_CASPathSelectorConditionalStateMetadataResourceVersion) WithValue(value string) *UpdatePlanAssignmentRequestCAS_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdatePlanAssignmentRequestCAS_FieldSubPathValue)
}

func (s UpdatePlanAssignmentRequest_CASPathSelectorConditionalStateMetadataResourceVersion) WithArrayOfValues(values []string) *UpdatePlanAssignmentRequestCAS_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdatePlanAssignmentRequestCAS_FieldSubPathArrayOfValues)
}

type UpdatePlanAssignmentRequest_CASPathSelectorConditionalStateMetadataOwnerReferences struct{}

func (UpdatePlanAssignmentRequest_CASPathSelectorConditionalStateMetadataOwnerReferences) FieldPath() *UpdatePlanAssignmentRequestCAS_FieldSubPath {
	return &UpdatePlanAssignmentRequestCAS_FieldSubPath{
		selector: UpdatePlanAssignmentRequestCAS_FieldPathSelectorConditionalState,
		subPath:  plan_assignment.NewPlanAssignmentFieldPathBuilder().Metadata().OwnerReferences().FieldPath(),
	}
}

func (s UpdatePlanAssignmentRequest_CASPathSelectorConditionalStateMetadataOwnerReferences) WithValue(value []*ntt_meta.OwnerReference) *UpdatePlanAssignmentRequestCAS_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdatePlanAssignmentRequestCAS_FieldSubPathValue)
}

func (s UpdatePlanAssignmentRequest_CASPathSelectorConditionalStateMetadataOwnerReferences) WithArrayOfValues(values [][]*ntt_meta.OwnerReference) *UpdatePlanAssignmentRequestCAS_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdatePlanAssignmentRequestCAS_FieldSubPathArrayOfValues)
}

func (s UpdatePlanAssignmentRequest_CASPathSelectorConditionalStateMetadataOwnerReferences) WithItemValue(value *ntt_meta.OwnerReference) *UpdatePlanAssignmentRequestCAS_FieldSubPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*UpdatePlanAssignmentRequestCAS_FieldSubPathArrayItemValue)
}

func (UpdatePlanAssignmentRequest_CASPathSelectorConditionalStateMetadataOwnerReferences) ApiVersion() UpdatePlanAssignmentRequest_CASPathSelectorConditionalStateMetadataOwnerReferencesApiVersion {
	return UpdatePlanAssignmentRequest_CASPathSelectorConditionalStateMetadataOwnerReferencesApiVersion{}
}

func (UpdatePlanAssignmentRequest_CASPathSelectorConditionalStateMetadataOwnerReferences) Kind() UpdatePlanAssignmentRequest_CASPathSelectorConditionalStateMetadataOwnerReferencesKind {
	return UpdatePlanAssignmentRequest_CASPathSelectorConditionalStateMetadataOwnerReferencesKind{}
}

func (UpdatePlanAssignmentRequest_CASPathSelectorConditionalStateMetadataOwnerReferences) Name() UpdatePlanAssignmentRequest_CASPathSelectorConditionalStateMetadataOwnerReferencesName {
	return UpdatePlanAssignmentRequest_CASPathSelectorConditionalStateMetadataOwnerReferencesName{}
}

func (UpdatePlanAssignmentRequest_CASPathSelectorConditionalStateMetadataOwnerReferences) Uid() UpdatePlanAssignmentRequest_CASPathSelectorConditionalStateMetadataOwnerReferencesUid {
	return UpdatePlanAssignmentRequest_CASPathSelectorConditionalStateMetadataOwnerReferencesUid{}
}

func (UpdatePlanAssignmentRequest_CASPathSelectorConditionalStateMetadataOwnerReferences) Controller() UpdatePlanAssignmentRequest_CASPathSelectorConditionalStateMetadataOwnerReferencesController {
	return UpdatePlanAssignmentRequest_CASPathSelectorConditionalStateMetadataOwnerReferencesController{}
}

func (UpdatePlanAssignmentRequest_CASPathSelectorConditionalStateMetadataOwnerReferences) BlockOwnerDeletion() UpdatePlanAssignmentRequest_CASPathSelectorConditionalStateMetadataOwnerReferencesBlockOwnerDeletion {
	return UpdatePlanAssignmentRequest_CASPathSelectorConditionalStateMetadataOwnerReferencesBlockOwnerDeletion{}
}

type UpdatePlanAssignmentRequest_CASPathSelectorConditionalStateMetadataOwnerReferencesApiVersion struct{}

func (UpdatePlanAssignmentRequest_CASPathSelectorConditionalStateMetadataOwnerReferencesApiVersion) FieldPath() *UpdatePlanAssignmentRequestCAS_FieldSubPath {
	return &UpdatePlanAssignmentRequestCAS_FieldSubPath{
		selector: UpdatePlanAssignmentRequestCAS_FieldPathSelectorConditionalState,
		subPath:  plan_assignment.NewPlanAssignmentFieldPathBuilder().Metadata().OwnerReferences().ApiVersion().FieldPath(),
	}
}

func (s UpdatePlanAssignmentRequest_CASPathSelectorConditionalStateMetadataOwnerReferencesApiVersion) WithValue(value string) *UpdatePlanAssignmentRequestCAS_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdatePlanAssignmentRequestCAS_FieldSubPathValue)
}

func (s UpdatePlanAssignmentRequest_CASPathSelectorConditionalStateMetadataOwnerReferencesApiVersion) WithArrayOfValues(values []string) *UpdatePlanAssignmentRequestCAS_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdatePlanAssignmentRequestCAS_FieldSubPathArrayOfValues)
}

type UpdatePlanAssignmentRequest_CASPathSelectorConditionalStateMetadataOwnerReferencesKind struct{}

func (UpdatePlanAssignmentRequest_CASPathSelectorConditionalStateMetadataOwnerReferencesKind) FieldPath() *UpdatePlanAssignmentRequestCAS_FieldSubPath {
	return &UpdatePlanAssignmentRequestCAS_FieldSubPath{
		selector: UpdatePlanAssignmentRequestCAS_FieldPathSelectorConditionalState,
		subPath:  plan_assignment.NewPlanAssignmentFieldPathBuilder().Metadata().OwnerReferences().Kind().FieldPath(),
	}
}

func (s UpdatePlanAssignmentRequest_CASPathSelectorConditionalStateMetadataOwnerReferencesKind) WithValue(value string) *UpdatePlanAssignmentRequestCAS_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdatePlanAssignmentRequestCAS_FieldSubPathValue)
}

func (s UpdatePlanAssignmentRequest_CASPathSelectorConditionalStateMetadataOwnerReferencesKind) WithArrayOfValues(values []string) *UpdatePlanAssignmentRequestCAS_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdatePlanAssignmentRequestCAS_FieldSubPathArrayOfValues)
}

type UpdatePlanAssignmentRequest_CASPathSelectorConditionalStateMetadataOwnerReferencesName struct{}

func (UpdatePlanAssignmentRequest_CASPathSelectorConditionalStateMetadataOwnerReferencesName) FieldPath() *UpdatePlanAssignmentRequestCAS_FieldSubPath {
	return &UpdatePlanAssignmentRequestCAS_FieldSubPath{
		selector: UpdatePlanAssignmentRequestCAS_FieldPathSelectorConditionalState,
		subPath:  plan_assignment.NewPlanAssignmentFieldPathBuilder().Metadata().OwnerReferences().Name().FieldPath(),
	}
}

func (s UpdatePlanAssignmentRequest_CASPathSelectorConditionalStateMetadataOwnerReferencesName) WithValue(value string) *UpdatePlanAssignmentRequestCAS_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdatePlanAssignmentRequestCAS_FieldSubPathValue)
}

func (s UpdatePlanAssignmentRequest_CASPathSelectorConditionalStateMetadataOwnerReferencesName) WithArrayOfValues(values []string) *UpdatePlanAssignmentRequestCAS_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdatePlanAssignmentRequestCAS_FieldSubPathArrayOfValues)
}

type UpdatePlanAssignmentRequest_CASPathSelectorConditionalStateMetadataOwnerReferencesUid struct{}

func (UpdatePlanAssignmentRequest_CASPathSelectorConditionalStateMetadataOwnerReferencesUid) FieldPath() *UpdatePlanAssignmentRequestCAS_FieldSubPath {
	return &UpdatePlanAssignmentRequestCAS_FieldSubPath{
		selector: UpdatePlanAssignmentRequestCAS_FieldPathSelectorConditionalState,
		subPath:  plan_assignment.NewPlanAssignmentFieldPathBuilder().Metadata().OwnerReferences().Uid().FieldPath(),
	}
}

func (s UpdatePlanAssignmentRequest_CASPathSelectorConditionalStateMetadataOwnerReferencesUid) WithValue(value string) *UpdatePlanAssignmentRequestCAS_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdatePlanAssignmentRequestCAS_FieldSubPathValue)
}

func (s UpdatePlanAssignmentRequest_CASPathSelectorConditionalStateMetadataOwnerReferencesUid) WithArrayOfValues(values []string) *UpdatePlanAssignmentRequestCAS_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdatePlanAssignmentRequestCAS_FieldSubPathArrayOfValues)
}

type UpdatePlanAssignmentRequest_CASPathSelectorConditionalStateMetadataOwnerReferencesController struct{}

func (UpdatePlanAssignmentRequest_CASPathSelectorConditionalStateMetadataOwnerReferencesController) FieldPath() *UpdatePlanAssignmentRequestCAS_FieldSubPath {
	return &UpdatePlanAssignmentRequestCAS_FieldSubPath{
		selector: UpdatePlanAssignmentRequestCAS_FieldPathSelectorConditionalState,
		subPath:  plan_assignment.NewPlanAssignmentFieldPathBuilder().Metadata().OwnerReferences().Controller().FieldPath(),
	}
}

func (s UpdatePlanAssignmentRequest_CASPathSelectorConditionalStateMetadataOwnerReferencesController) WithValue(value bool) *UpdatePlanAssignmentRequestCAS_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdatePlanAssignmentRequestCAS_FieldSubPathValue)
}

func (s UpdatePlanAssignmentRequest_CASPathSelectorConditionalStateMetadataOwnerReferencesController) WithArrayOfValues(values []bool) *UpdatePlanAssignmentRequestCAS_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdatePlanAssignmentRequestCAS_FieldSubPathArrayOfValues)
}

type UpdatePlanAssignmentRequest_CASPathSelectorConditionalStateMetadataOwnerReferencesBlockOwnerDeletion struct{}

func (UpdatePlanAssignmentRequest_CASPathSelectorConditionalStateMetadataOwnerReferencesBlockOwnerDeletion) FieldPath() *UpdatePlanAssignmentRequestCAS_FieldSubPath {
	return &UpdatePlanAssignmentRequestCAS_FieldSubPath{
		selector: UpdatePlanAssignmentRequestCAS_FieldPathSelectorConditionalState,
		subPath:  plan_assignment.NewPlanAssignmentFieldPathBuilder().Metadata().OwnerReferences().BlockOwnerDeletion().FieldPath(),
	}
}

func (s UpdatePlanAssignmentRequest_CASPathSelectorConditionalStateMetadataOwnerReferencesBlockOwnerDeletion) WithValue(value bool) *UpdatePlanAssignmentRequestCAS_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdatePlanAssignmentRequestCAS_FieldSubPathValue)
}

func (s UpdatePlanAssignmentRequest_CASPathSelectorConditionalStateMetadataOwnerReferencesBlockOwnerDeletion) WithArrayOfValues(values []bool) *UpdatePlanAssignmentRequestCAS_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdatePlanAssignmentRequestCAS_FieldSubPathArrayOfValues)
}

type UpdatePlanAssignmentRequest_CASPathSelectorConditionalStateMetadataShards struct{}

func (UpdatePlanAssignmentRequest_CASPathSelectorConditionalStateMetadataShards) FieldPath() *UpdatePlanAssignmentRequestCAS_FieldSubPath {
	return &UpdatePlanAssignmentRequestCAS_FieldSubPath{
		selector: UpdatePlanAssignmentRequestCAS_FieldPathSelectorConditionalState,
		subPath:  plan_assignment.NewPlanAssignmentFieldPathBuilder().Metadata().Shards().FieldPath(),
	}
}

func (s UpdatePlanAssignmentRequest_CASPathSelectorConditionalStateMetadataShards) WithValue(value map[string]int64) *UpdatePlanAssignmentRequestCAS_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdatePlanAssignmentRequestCAS_FieldSubPathValue)
}

func (s UpdatePlanAssignmentRequest_CASPathSelectorConditionalStateMetadataShards) WithArrayOfValues(values []map[string]int64) *UpdatePlanAssignmentRequestCAS_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdatePlanAssignmentRequestCAS_FieldSubPathArrayOfValues)
}

func (UpdatePlanAssignmentRequest_CASPathSelectorConditionalStateMetadataShards) WithKey(key string) UpdatePlanAssignmentRequest_CASMapPathSelectorConditionalStateMetadataShards {
	return UpdatePlanAssignmentRequest_CASMapPathSelectorConditionalStateMetadataShards{key: key}
}

type UpdatePlanAssignmentRequest_CASMapPathSelectorConditionalStateMetadataShards struct {
	key string
}

func (s UpdatePlanAssignmentRequest_CASMapPathSelectorConditionalStateMetadataShards) FieldPath() *UpdatePlanAssignmentRequestCAS_FieldSubPath {
	return &UpdatePlanAssignmentRequestCAS_FieldSubPath{
		selector: UpdatePlanAssignmentRequestCAS_FieldPathSelectorConditionalState,
		subPath:  plan_assignment.NewPlanAssignmentFieldPathBuilder().Metadata().Shards().WithKey(s.key).FieldPath(),
	}
}

func (s UpdatePlanAssignmentRequest_CASMapPathSelectorConditionalStateMetadataShards) WithValue(value int64) *UpdatePlanAssignmentRequestCAS_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdatePlanAssignmentRequestCAS_FieldSubPathValue)
}

func (s UpdatePlanAssignmentRequest_CASMapPathSelectorConditionalStateMetadataShards) WithArrayOfValues(values []int64) *UpdatePlanAssignmentRequestCAS_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdatePlanAssignmentRequestCAS_FieldSubPathArrayOfValues)
}

type UpdatePlanAssignmentRequest_CASPathSelectorConditionalStateMetadataSyncing struct{}

func (UpdatePlanAssignmentRequest_CASPathSelectorConditionalStateMetadataSyncing) FieldPath() *UpdatePlanAssignmentRequestCAS_FieldSubPath {
	return &UpdatePlanAssignmentRequestCAS_FieldSubPath{
		selector: UpdatePlanAssignmentRequestCAS_FieldPathSelectorConditionalState,
		subPath:  plan_assignment.NewPlanAssignmentFieldPathBuilder().Metadata().Syncing().FieldPath(),
	}
}

func (s UpdatePlanAssignmentRequest_CASPathSelectorConditionalStateMetadataSyncing) WithValue(value *ntt_meta.SyncingMeta) *UpdatePlanAssignmentRequestCAS_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdatePlanAssignmentRequestCAS_FieldSubPathValue)
}

func (s UpdatePlanAssignmentRequest_CASPathSelectorConditionalStateMetadataSyncing) WithArrayOfValues(values []*ntt_meta.SyncingMeta) *UpdatePlanAssignmentRequestCAS_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdatePlanAssignmentRequestCAS_FieldSubPathArrayOfValues)
}

func (UpdatePlanAssignmentRequest_CASPathSelectorConditionalStateMetadataSyncing) OwningRegion() UpdatePlanAssignmentRequest_CASPathSelectorConditionalStateMetadataSyncingOwningRegion {
	return UpdatePlanAssignmentRequest_CASPathSelectorConditionalStateMetadataSyncingOwningRegion{}
}

func (UpdatePlanAssignmentRequest_CASPathSelectorConditionalStateMetadataSyncing) Regions() UpdatePlanAssignmentRequest_CASPathSelectorConditionalStateMetadataSyncingRegions {
	return UpdatePlanAssignmentRequest_CASPathSelectorConditionalStateMetadataSyncingRegions{}
}

type UpdatePlanAssignmentRequest_CASPathSelectorConditionalStateMetadataSyncingOwningRegion struct{}

func (UpdatePlanAssignmentRequest_CASPathSelectorConditionalStateMetadataSyncingOwningRegion) FieldPath() *UpdatePlanAssignmentRequestCAS_FieldSubPath {
	return &UpdatePlanAssignmentRequestCAS_FieldSubPath{
		selector: UpdatePlanAssignmentRequestCAS_FieldPathSelectorConditionalState,
		subPath:  plan_assignment.NewPlanAssignmentFieldPathBuilder().Metadata().Syncing().OwningRegion().FieldPath(),
	}
}

func (s UpdatePlanAssignmentRequest_CASPathSelectorConditionalStateMetadataSyncingOwningRegion) WithValue(value string) *UpdatePlanAssignmentRequestCAS_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdatePlanAssignmentRequestCAS_FieldSubPathValue)
}

func (s UpdatePlanAssignmentRequest_CASPathSelectorConditionalStateMetadataSyncingOwningRegion) WithArrayOfValues(values []string) *UpdatePlanAssignmentRequestCAS_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdatePlanAssignmentRequestCAS_FieldSubPathArrayOfValues)
}

type UpdatePlanAssignmentRequest_CASPathSelectorConditionalStateMetadataSyncingRegions struct{}

func (UpdatePlanAssignmentRequest_CASPathSelectorConditionalStateMetadataSyncingRegions) FieldPath() *UpdatePlanAssignmentRequestCAS_FieldSubPath {
	return &UpdatePlanAssignmentRequestCAS_FieldSubPath{
		selector: UpdatePlanAssignmentRequestCAS_FieldPathSelectorConditionalState,
		subPath:  plan_assignment.NewPlanAssignmentFieldPathBuilder().Metadata().Syncing().Regions().FieldPath(),
	}
}

func (s UpdatePlanAssignmentRequest_CASPathSelectorConditionalStateMetadataSyncingRegions) WithValue(value []string) *UpdatePlanAssignmentRequestCAS_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdatePlanAssignmentRequestCAS_FieldSubPathValue)
}

func (s UpdatePlanAssignmentRequest_CASPathSelectorConditionalStateMetadataSyncingRegions) WithArrayOfValues(values [][]string) *UpdatePlanAssignmentRequestCAS_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdatePlanAssignmentRequestCAS_FieldSubPathArrayOfValues)
}

func (s UpdatePlanAssignmentRequest_CASPathSelectorConditionalStateMetadataSyncingRegions) WithItemValue(value string) *UpdatePlanAssignmentRequestCAS_FieldSubPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*UpdatePlanAssignmentRequestCAS_FieldSubPathArrayItemValue)
}

type UpdatePlanAssignmentRequest_CASPathSelectorFieldMask struct{}

func (UpdatePlanAssignmentRequest_CASPathSelectorFieldMask) FieldPath() *UpdatePlanAssignmentRequestCAS_FieldTerminalPath {
	return &UpdatePlanAssignmentRequestCAS_FieldTerminalPath{selector: UpdatePlanAssignmentRequestCAS_FieldPathSelectorFieldMask}
}

func (s UpdatePlanAssignmentRequest_CASPathSelectorFieldMask) WithValue(value *plan_assignment.PlanAssignment_FieldMask) *UpdatePlanAssignmentRequestCAS_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*UpdatePlanAssignmentRequestCAS_FieldTerminalPathValue)
}

func (s UpdatePlanAssignmentRequest_CASPathSelectorFieldMask) WithArrayOfValues(values []*plan_assignment.PlanAssignment_FieldMask) *UpdatePlanAssignmentRequestCAS_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdatePlanAssignmentRequestCAS_FieldTerminalPathArrayOfValues)
}

type DeletePlanAssignmentRequestFieldPathBuilder struct{}

func NewDeletePlanAssignmentRequestFieldPathBuilder() DeletePlanAssignmentRequestFieldPathBuilder {
	return DeletePlanAssignmentRequestFieldPathBuilder{}
}
func (DeletePlanAssignmentRequestFieldPathBuilder) Name() DeletePlanAssignmentRequestPathSelectorName {
	return DeletePlanAssignmentRequestPathSelectorName{}
}

type DeletePlanAssignmentRequestPathSelectorName struct{}

func (DeletePlanAssignmentRequestPathSelectorName) FieldPath() *DeletePlanAssignmentRequest_FieldTerminalPath {
	return &DeletePlanAssignmentRequest_FieldTerminalPath{selector: DeletePlanAssignmentRequest_FieldPathSelectorName}
}

func (s DeletePlanAssignmentRequestPathSelectorName) WithValue(value *plan_assignment.Reference) *DeletePlanAssignmentRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*DeletePlanAssignmentRequest_FieldTerminalPathValue)
}

func (s DeletePlanAssignmentRequestPathSelectorName) WithArrayOfValues(values []*plan_assignment.Reference) *DeletePlanAssignmentRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*DeletePlanAssignmentRequest_FieldTerminalPathArrayOfValues)
}
