// Code generated by protoc-gen-goten-go
// File: edgelq/limits/proto/v1alpha2/plan_assignment_custom.proto
// DO NOT EDIT!!!

package plan_assignment_client

import (
	"fmt"
	"reflect"
	"sync"

	"google.golang.org/protobuf/encoding/protojson"
	"google.golang.org/protobuf/proto"
	preflect "google.golang.org/protobuf/reflect/protoreflect"
	"google.golang.org/protobuf/runtime/protoimpl"
)

// proto imports
import (
	plan_assignment "github.com/cloudwan/edgelq-sdk/limits/resources/v1alpha2/plan_assignment"
)

// Reference imports to suppress errors if they are not otherwise used.
var (
	_ = fmt.Errorf
	_ = reflect.Method{}
	_ = sync.Once{}

	_ = protojson.MarshalOptions{}
	_ = proto.MarshalOptions{}
	_ = preflect.Value{}
	_ = protoimpl.DescBuilder{}
)

// make sure we're using proto imports
var (
	_ = &plan_assignment.PlanAssignment{}
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Request message for method
// [MigratePlanAssignment][ntt.limits.v1alpha2.MigratePlanAssignment]
type MigratePlanAssignmentRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
	// PlanAssignment resource body
	PlanAssignment *plan_assignment.PlanAssignment `protobuf:"bytes,2,opt,name=plan_assignment,json=planAssignment,proto3" json:"plan_assignment,omitempty" firestore:"planAssignment"`
}

func (m *MigratePlanAssignmentRequest) Reset() {
	*m = MigratePlanAssignmentRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &edgelq_limits_proto_v1alpha2_plan_assignment_custom_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(m))
		ms.StoreMessageInfo(mi)
	}
}

func (m *MigratePlanAssignmentRequest) String() string {
	return protoimpl.X.MessageStringOf(m)
}

func (*MigratePlanAssignmentRequest) ProtoMessage() {}

func (m *MigratePlanAssignmentRequest) ProtoReflect() preflect.Message {
	mi := &edgelq_limits_proto_v1alpha2_plan_assignment_custom_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && m != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(m))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(m)
}

func (*MigratePlanAssignmentRequest) GotenMessage() {}

// Deprecated, Use MigratePlanAssignmentRequest.ProtoReflect.Descriptor instead.
func (*MigratePlanAssignmentRequest) Descriptor() ([]byte, []int) {
	return edgelq_limits_proto_v1alpha2_plan_assignment_custom_proto_rawDescGZIP(), []int{0}
}

func (m *MigratePlanAssignmentRequest) Unmarshal(b []byte) error {
	return proto.Unmarshal(b, m)
}

func (m *MigratePlanAssignmentRequest) Marshal() ([]byte, error) {
	return proto.Marshal(m)
}

func (m *MigratePlanAssignmentRequest) MarshalJSON() ([]byte, error) {
	return protojson.MarshalOptions{}.Marshal(m)
}

func (m *MigratePlanAssignmentRequest) UnmarshalJSON(data []byte) error {
	return protojson.Unmarshal(data, m)
}

func (m *MigratePlanAssignmentRequest) GetPlanAssignment() *plan_assignment.PlanAssignment {
	if m != nil {
		return m.PlanAssignment
	}
	return nil
}

func (m *MigratePlanAssignmentRequest) SetPlanAssignment(fv *plan_assignment.PlanAssignment) {
	if m == nil {
		panic(fmt.Errorf("can't set %s on nil %s", "PlanAssignment", "MigratePlanAssignmentRequest"))
	}
	m.PlanAssignment = fv
}

var edgelq_limits_proto_v1alpha2_plan_assignment_custom_proto preflect.FileDescriptor

var edgelq_limits_proto_v1alpha2_plan_assignment_custom_proto_rawDesc = []byte{
	0x0a, 0x39, 0x65, 0x64, 0x67, 0x65, 0x6c, 0x71, 0x2f, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x73, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x32, 0x2f, 0x70,
	0x6c, 0x61, 0x6e, 0x5f, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x63,
	0x75, 0x73, 0x74, 0x6f, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x13, 0x6e, 0x74, 0x74,
	0x2e, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x32,
	0x1a, 0x20, 0x67, 0x6f, 0x74, 0x65, 0x6e, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x1d, 0x67, 0x6f, 0x74, 0x65, 0x6e, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x67, 0x6f, 0x74, 0x65, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x1b, 0x67, 0x6f, 0x74, 0x65, 0x6e, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x63, 0x6c, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x20,
	0x65, 0x64, 0x67, 0x65, 0x6c, 0x71, 0x2f, 0x69, 0x61, 0x6d, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x69, 0x61, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x24, 0x65, 0x64, 0x67, 0x65, 0x6c, 0x71, 0x2f, 0x61, 0x75, 0x64, 0x69, 0x74, 0x2f, 0x61,
	0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x61, 0x75, 0x64, 0x69, 0x74,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x32, 0x65, 0x64, 0x67, 0x65, 0x6c, 0x71, 0x2f, 0x6c,
	0x69, 0x6d, 0x69, 0x74, 0x73, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x76, 0x31, 0x61, 0x6c,
	0x70, 0x68, 0x61, 0x32, 0x2f, 0x70, 0x6c, 0x61, 0x6e, 0x5f, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e,
	0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x39, 0x65, 0x64, 0x67, 0x65,
	0x6c, 0x71, 0x2f, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x73, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f,
	0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x32, 0x2f, 0x70, 0x6c, 0x61, 0x6e, 0x5f, 0x61, 0x73,
	0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x7a, 0x0a, 0x1c, 0x4d, 0x69, 0x67, 0x72, 0x61, 0x74, 0x65,
	0x50, 0x6c, 0x61, 0x6e, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x5a, 0x0a, 0x0f, 0x70, 0x6c, 0x61, 0x6e, 0x5f, 0x61, 0x73,
	0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23,
	0x2e, 0x6e, 0x74, 0x74, 0x2e, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c,
	0x70, 0x68, 0x61, 0x32, 0x2e, 0x50, 0x6c, 0x61, 0x6e, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d,
	0x65, 0x6e, 0x74, 0x42, 0x0c, 0xc8, 0xd5, 0x22, 0x01, 0xca, 0xc6, 0x27, 0x04, 0x62, 0x02, 0x08,
	0x01, 0x52, 0x0e, 0x70, 0x6c, 0x61, 0x6e, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e,
	0x74, 0x42, 0x93, 0x01, 0x0a, 0x1a, 0x63, 0x6f, 0x6d, 0x2e, 0x6e, 0x74, 0x74, 0x2e, 0x6c, 0x69,
	0x6d, 0x69, 0x74, 0x73, 0x2e, 0x70, 0x62, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x32,
	0x42, 0x19, 0x50, 0x6c, 0x61, 0x6e, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74,
	0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x00, 0x5a, 0x58, 0x67,
	0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x77,
	0x61, 0x6e, 0x2f, 0x65, 0x64, 0x67, 0x65, 0x6c, 0x71, 0x2f, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x73,
	0x2f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x32,
	0x2f, 0x70, 0x6c, 0x61, 0x6e, 0x5f, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74,
	0x3b, 0x70, 0x6c, 0x61, 0x6e, 0x5f, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74,
	0x5f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	edgelq_limits_proto_v1alpha2_plan_assignment_custom_proto_rawDescOnce sync.Once
	edgelq_limits_proto_v1alpha2_plan_assignment_custom_proto_rawDescData = edgelq_limits_proto_v1alpha2_plan_assignment_custom_proto_rawDesc
)

func edgelq_limits_proto_v1alpha2_plan_assignment_custom_proto_rawDescGZIP() []byte {
	edgelq_limits_proto_v1alpha2_plan_assignment_custom_proto_rawDescOnce.Do(func() {
		edgelq_limits_proto_v1alpha2_plan_assignment_custom_proto_rawDescData = protoimpl.X.CompressGZIP(edgelq_limits_proto_v1alpha2_plan_assignment_custom_proto_rawDescData)
	})
	return edgelq_limits_proto_v1alpha2_plan_assignment_custom_proto_rawDescData
}

var edgelq_limits_proto_v1alpha2_plan_assignment_custom_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var edgelq_limits_proto_v1alpha2_plan_assignment_custom_proto_goTypes = []interface{}{
	(*MigratePlanAssignmentRequest)(nil),   // 0: ntt.limits.v1alpha2.MigratePlanAssignmentRequest
	(*plan_assignment.PlanAssignment)(nil), // 1: ntt.limits.v1alpha2.PlanAssignment
}
var edgelq_limits_proto_v1alpha2_plan_assignment_custom_proto_depIdxs = []int32{
	1, // 0: ntt.limits.v1alpha2.MigratePlanAssignmentRequest.plan_assignment:type_name -> ntt.limits.v1alpha2.PlanAssignment
	1, // [1:1] is the sub-list for method output_type
	1, // [1:1] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { edgelq_limits_proto_v1alpha2_plan_assignment_custom_proto_init() }
func edgelq_limits_proto_v1alpha2_plan_assignment_custom_proto_init() {
	if edgelq_limits_proto_v1alpha2_plan_assignment_custom_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {

		edgelq_limits_proto_v1alpha2_plan_assignment_custom_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MigratePlanAssignmentRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}

	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: edgelq_limits_proto_v1alpha2_plan_assignment_custom_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           edgelq_limits_proto_v1alpha2_plan_assignment_custom_proto_goTypes,
		DependencyIndexes: edgelq_limits_proto_v1alpha2_plan_assignment_custom_proto_depIdxs,
		MessageInfos:      edgelq_limits_proto_v1alpha2_plan_assignment_custom_proto_msgTypes,
	}.Build()
	edgelq_limits_proto_v1alpha2_plan_assignment_custom_proto = out.File
	edgelq_limits_proto_v1alpha2_plan_assignment_custom_proto_rawDesc = nil
	edgelq_limits_proto_v1alpha2_plan_assignment_custom_proto_goTypes = nil
	edgelq_limits_proto_v1alpha2_plan_assignment_custom_proto_depIdxs = nil
}
