// Code generated by protoc-gen-goten-object
// File: edgelq/limits/proto/v1alpha2/limit_service.proto
// DO NOT EDIT!!!

package limit_client

// proto imports
import (
	ntt_meta "github.com/cloudwan/edgelq-sdk/common/types/meta"
	multi_region_policy "github.com/cloudwan/edgelq-sdk/common/types/multi_region_policy"
	iam_organization "github.com/cloudwan/edgelq-sdk/iam/resources/v1alpha2/organization"
	iam_project "github.com/cloudwan/edgelq-sdk/iam/resources/v1alpha2/project"
	limit "github.com/cloudwan/edgelq-sdk/limits/resources/v1alpha2/limit"
	limit_pool "github.com/cloudwan/edgelq-sdk/limits/resources/v1alpha2/limit_pool"
	meta_resource "github.com/cloudwan/edgelq-sdk/meta/resources/v1alpha2/resource"
	meta_service "github.com/cloudwan/edgelq-sdk/meta/resources/v1alpha2/service"
	view "github.com/cloudwan/goten-sdk/runtime/api/view"
	watch_type "github.com/cloudwan/goten-sdk/runtime/api/watch_type"
	empty "github.com/golang/protobuf/ptypes/empty"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	field_mask "google.golang.org/genproto/protobuf/field_mask"
)

// make sure we're using proto imports
var (
	_ = &ntt_meta.Meta{}
	_ = &multi_region_policy.MultiRegionPolicy{}
	_ = &iam_organization.Organization{}
	_ = &iam_project.Project{}
	_ = &limit.Limit{}
	_ = &limit_pool.LimitPool{}
	_ = &meta_resource.Resource{}
	_ = &meta_service.Service{}
	_ = &empty.Empty{}
	_ = &field_mask.FieldMask{}
	_ = &timestamp.Timestamp{}
	_ = view.View(0)
	_ = watch_type.WatchType(0)
)

type GetLimitRequestFieldPathBuilder struct{}

func NewGetLimitRequestFieldPathBuilder() GetLimitRequestFieldPathBuilder {
	return GetLimitRequestFieldPathBuilder{}
}
func (GetLimitRequestFieldPathBuilder) Name() GetLimitRequestPathSelectorName {
	return GetLimitRequestPathSelectorName{}
}
func (GetLimitRequestFieldPathBuilder) FieldMask() GetLimitRequestPathSelectorFieldMask {
	return GetLimitRequestPathSelectorFieldMask{}
}
func (GetLimitRequestFieldPathBuilder) View() GetLimitRequestPathSelectorView {
	return GetLimitRequestPathSelectorView{}
}

type GetLimitRequestPathSelectorName struct{}

func (GetLimitRequestPathSelectorName) FieldPath() *GetLimitRequest_FieldTerminalPath {
	return &GetLimitRequest_FieldTerminalPath{selector: GetLimitRequest_FieldPathSelectorName}
}

func (s GetLimitRequestPathSelectorName) WithValue(value *limit.Reference) *GetLimitRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*GetLimitRequest_FieldTerminalPathValue)
}

func (s GetLimitRequestPathSelectorName) WithArrayOfValues(values []*limit.Reference) *GetLimitRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*GetLimitRequest_FieldTerminalPathArrayOfValues)
}

type GetLimitRequestPathSelectorFieldMask struct{}

func (GetLimitRequestPathSelectorFieldMask) FieldPath() *GetLimitRequest_FieldTerminalPath {
	return &GetLimitRequest_FieldTerminalPath{selector: GetLimitRequest_FieldPathSelectorFieldMask}
}

func (s GetLimitRequestPathSelectorFieldMask) WithValue(value *limit.Limit_FieldMask) *GetLimitRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*GetLimitRequest_FieldTerminalPathValue)
}

func (s GetLimitRequestPathSelectorFieldMask) WithArrayOfValues(values []*limit.Limit_FieldMask) *GetLimitRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*GetLimitRequest_FieldTerminalPathArrayOfValues)
}

type GetLimitRequestPathSelectorView struct{}

func (GetLimitRequestPathSelectorView) FieldPath() *GetLimitRequest_FieldTerminalPath {
	return &GetLimitRequest_FieldTerminalPath{selector: GetLimitRequest_FieldPathSelectorView}
}

func (s GetLimitRequestPathSelectorView) WithValue(value view.View) *GetLimitRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*GetLimitRequest_FieldTerminalPathValue)
}

func (s GetLimitRequestPathSelectorView) WithArrayOfValues(values []view.View) *GetLimitRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*GetLimitRequest_FieldTerminalPathArrayOfValues)
}

type BatchGetLimitsRequestFieldPathBuilder struct{}

func NewBatchGetLimitsRequestFieldPathBuilder() BatchGetLimitsRequestFieldPathBuilder {
	return BatchGetLimitsRequestFieldPathBuilder{}
}
func (BatchGetLimitsRequestFieldPathBuilder) Names() BatchGetLimitsRequestPathSelectorNames {
	return BatchGetLimitsRequestPathSelectorNames{}
}
func (BatchGetLimitsRequestFieldPathBuilder) FieldMask() BatchGetLimitsRequestPathSelectorFieldMask {
	return BatchGetLimitsRequestPathSelectorFieldMask{}
}
func (BatchGetLimitsRequestFieldPathBuilder) View() BatchGetLimitsRequestPathSelectorView {
	return BatchGetLimitsRequestPathSelectorView{}
}

type BatchGetLimitsRequestPathSelectorNames struct{}

func (BatchGetLimitsRequestPathSelectorNames) FieldPath() *BatchGetLimitsRequest_FieldTerminalPath {
	return &BatchGetLimitsRequest_FieldTerminalPath{selector: BatchGetLimitsRequest_FieldPathSelectorNames}
}

func (s BatchGetLimitsRequestPathSelectorNames) WithValue(value []*limit.Reference) *BatchGetLimitsRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetLimitsRequest_FieldTerminalPathValue)
}

func (s BatchGetLimitsRequestPathSelectorNames) WithArrayOfValues(values [][]*limit.Reference) *BatchGetLimitsRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetLimitsRequest_FieldTerminalPathArrayOfValues)
}

func (s BatchGetLimitsRequestPathSelectorNames) WithItemValue(value *limit.Reference) *BatchGetLimitsRequest_FieldTerminalPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*BatchGetLimitsRequest_FieldTerminalPathArrayItemValue)
}

type BatchGetLimitsRequestPathSelectorFieldMask struct{}

func (BatchGetLimitsRequestPathSelectorFieldMask) FieldPath() *BatchGetLimitsRequest_FieldTerminalPath {
	return &BatchGetLimitsRequest_FieldTerminalPath{selector: BatchGetLimitsRequest_FieldPathSelectorFieldMask}
}

func (s BatchGetLimitsRequestPathSelectorFieldMask) WithValue(value *limit.Limit_FieldMask) *BatchGetLimitsRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetLimitsRequest_FieldTerminalPathValue)
}

func (s BatchGetLimitsRequestPathSelectorFieldMask) WithArrayOfValues(values []*limit.Limit_FieldMask) *BatchGetLimitsRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetLimitsRequest_FieldTerminalPathArrayOfValues)
}

type BatchGetLimitsRequestPathSelectorView struct{}

func (BatchGetLimitsRequestPathSelectorView) FieldPath() *BatchGetLimitsRequest_FieldTerminalPath {
	return &BatchGetLimitsRequest_FieldTerminalPath{selector: BatchGetLimitsRequest_FieldPathSelectorView}
}

func (s BatchGetLimitsRequestPathSelectorView) WithValue(value view.View) *BatchGetLimitsRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetLimitsRequest_FieldTerminalPathValue)
}

func (s BatchGetLimitsRequestPathSelectorView) WithArrayOfValues(values []view.View) *BatchGetLimitsRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetLimitsRequest_FieldTerminalPathArrayOfValues)
}

type BatchGetLimitsResponseFieldPathBuilder struct{}

func NewBatchGetLimitsResponseFieldPathBuilder() BatchGetLimitsResponseFieldPathBuilder {
	return BatchGetLimitsResponseFieldPathBuilder{}
}
func (BatchGetLimitsResponseFieldPathBuilder) Limits() BatchGetLimitsResponsePathSelectorLimits {
	return BatchGetLimitsResponsePathSelectorLimits{}
}
func (BatchGetLimitsResponseFieldPathBuilder) Missing() BatchGetLimitsResponsePathSelectorMissing {
	return BatchGetLimitsResponsePathSelectorMissing{}
}

type BatchGetLimitsResponsePathSelectorLimits struct{}

func (BatchGetLimitsResponsePathSelectorLimits) FieldPath() *BatchGetLimitsResponse_FieldTerminalPath {
	return &BatchGetLimitsResponse_FieldTerminalPath{selector: BatchGetLimitsResponse_FieldPathSelectorLimits}
}

func (s BatchGetLimitsResponsePathSelectorLimits) WithValue(value []*limit.Limit) *BatchGetLimitsResponse_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetLimitsResponse_FieldTerminalPathValue)
}

func (s BatchGetLimitsResponsePathSelectorLimits) WithArrayOfValues(values [][]*limit.Limit) *BatchGetLimitsResponse_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetLimitsResponse_FieldTerminalPathArrayOfValues)
}

func (s BatchGetLimitsResponsePathSelectorLimits) WithItemValue(value *limit.Limit) *BatchGetLimitsResponse_FieldTerminalPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*BatchGetLimitsResponse_FieldTerminalPathArrayItemValue)
}
func (BatchGetLimitsResponsePathSelectorLimits) WithSubPath(subPath limit.Limit_FieldPath) *BatchGetLimitsResponse_FieldSubPath {
	return &BatchGetLimitsResponse_FieldSubPath{selector: BatchGetLimitsResponse_FieldPathSelectorLimits, subPath: subPath}
}

func (s BatchGetLimitsResponsePathSelectorLimits) WithSubValue(subPathValue limit.Limit_FieldPathValue) *BatchGetLimitsResponse_FieldSubPathValue {
	return &BatchGetLimitsResponse_FieldSubPathValue{BatchGetLimitsResponse_FieldPath: s.WithSubPath(subPathValue), subPathValue: subPathValue}
}

func (s BatchGetLimitsResponsePathSelectorLimits) WithSubArrayOfValues(subPathArrayOfValues limit.Limit_FieldPathArrayOfValues) *BatchGetLimitsResponse_FieldSubPathArrayOfValues {
	return &BatchGetLimitsResponse_FieldSubPathArrayOfValues{BatchGetLimitsResponse_FieldPath: s.WithSubPath(subPathArrayOfValues), subPathArrayOfValues: subPathArrayOfValues}
}

func (s BatchGetLimitsResponsePathSelectorLimits) WithSubArrayItemValue(subPathArrayItemValue limit.Limit_FieldPathArrayItemValue) *BatchGetLimitsResponse_FieldSubPathArrayItemValue {
	return &BatchGetLimitsResponse_FieldSubPathArrayItemValue{BatchGetLimitsResponse_FieldPath: s.WithSubPath(subPathArrayItemValue), subPathItemValue: subPathArrayItemValue}
}

func (BatchGetLimitsResponsePathSelectorLimits) Name() BatchGetLimitsResponsePathSelectorLimitsName {
	return BatchGetLimitsResponsePathSelectorLimitsName{}
}

func (BatchGetLimitsResponsePathSelectorLimits) Service() BatchGetLimitsResponsePathSelectorLimitsService {
	return BatchGetLimitsResponsePathSelectorLimitsService{}
}

func (BatchGetLimitsResponsePathSelectorLimits) Resource() BatchGetLimitsResponsePathSelectorLimitsResource {
	return BatchGetLimitsResponsePathSelectorLimitsResource{}
}

func (BatchGetLimitsResponsePathSelectorLimits) Region() BatchGetLimitsResponsePathSelectorLimitsRegion {
	return BatchGetLimitsResponsePathSelectorLimitsRegion{}
}

func (BatchGetLimitsResponsePathSelectorLimits) ConfiguredLimit() BatchGetLimitsResponsePathSelectorLimitsConfiguredLimit {
	return BatchGetLimitsResponsePathSelectorLimitsConfiguredLimit{}
}

func (BatchGetLimitsResponsePathSelectorLimits) ActiveLimit() BatchGetLimitsResponsePathSelectorLimitsActiveLimit {
	return BatchGetLimitsResponsePathSelectorLimitsActiveLimit{}
}

func (BatchGetLimitsResponsePathSelectorLimits) Usage() BatchGetLimitsResponsePathSelectorLimitsUsage {
	return BatchGetLimitsResponsePathSelectorLimitsUsage{}
}

func (BatchGetLimitsResponsePathSelectorLimits) Source() BatchGetLimitsResponsePathSelectorLimitsSource {
	return BatchGetLimitsResponsePathSelectorLimitsSource{}
}

func (BatchGetLimitsResponsePathSelectorLimits) Metadata() BatchGetLimitsResponsePathSelectorLimitsMetadata {
	return BatchGetLimitsResponsePathSelectorLimitsMetadata{}
}

type BatchGetLimitsResponsePathSelectorLimitsName struct{}

func (BatchGetLimitsResponsePathSelectorLimitsName) FieldPath() *BatchGetLimitsResponse_FieldSubPath {
	return &BatchGetLimitsResponse_FieldSubPath{
		selector: BatchGetLimitsResponse_FieldPathSelectorLimits,
		subPath:  limit.NewLimitFieldPathBuilder().Name().FieldPath(),
	}
}

func (s BatchGetLimitsResponsePathSelectorLimitsName) WithValue(value *limit.Name) *BatchGetLimitsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetLimitsResponse_FieldSubPathValue)
}

func (s BatchGetLimitsResponsePathSelectorLimitsName) WithArrayOfValues(values []*limit.Name) *BatchGetLimitsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetLimitsResponse_FieldSubPathArrayOfValues)
}

type BatchGetLimitsResponsePathSelectorLimitsService struct{}

func (BatchGetLimitsResponsePathSelectorLimitsService) FieldPath() *BatchGetLimitsResponse_FieldSubPath {
	return &BatchGetLimitsResponse_FieldSubPath{
		selector: BatchGetLimitsResponse_FieldPathSelectorLimits,
		subPath:  limit.NewLimitFieldPathBuilder().Service().FieldPath(),
	}
}

func (s BatchGetLimitsResponsePathSelectorLimitsService) WithValue(value *meta_service.Reference) *BatchGetLimitsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetLimitsResponse_FieldSubPathValue)
}

func (s BatchGetLimitsResponsePathSelectorLimitsService) WithArrayOfValues(values []*meta_service.Reference) *BatchGetLimitsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetLimitsResponse_FieldSubPathArrayOfValues)
}

type BatchGetLimitsResponsePathSelectorLimitsResource struct{}

func (BatchGetLimitsResponsePathSelectorLimitsResource) FieldPath() *BatchGetLimitsResponse_FieldSubPath {
	return &BatchGetLimitsResponse_FieldSubPath{
		selector: BatchGetLimitsResponse_FieldPathSelectorLimits,
		subPath:  limit.NewLimitFieldPathBuilder().Resource().FieldPath(),
	}
}

func (s BatchGetLimitsResponsePathSelectorLimitsResource) WithValue(value *meta_resource.Reference) *BatchGetLimitsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetLimitsResponse_FieldSubPathValue)
}

func (s BatchGetLimitsResponsePathSelectorLimitsResource) WithArrayOfValues(values []*meta_resource.Reference) *BatchGetLimitsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetLimitsResponse_FieldSubPathArrayOfValues)
}

type BatchGetLimitsResponsePathSelectorLimitsRegion struct{}

func (BatchGetLimitsResponsePathSelectorLimitsRegion) FieldPath() *BatchGetLimitsResponse_FieldSubPath {
	return &BatchGetLimitsResponse_FieldSubPath{
		selector: BatchGetLimitsResponse_FieldPathSelectorLimits,
		subPath:  limit.NewLimitFieldPathBuilder().Region().FieldPath(),
	}
}

func (s BatchGetLimitsResponsePathSelectorLimitsRegion) WithValue(value string) *BatchGetLimitsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetLimitsResponse_FieldSubPathValue)
}

func (s BatchGetLimitsResponsePathSelectorLimitsRegion) WithArrayOfValues(values []string) *BatchGetLimitsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetLimitsResponse_FieldSubPathArrayOfValues)
}

type BatchGetLimitsResponsePathSelectorLimitsConfiguredLimit struct{}

func (BatchGetLimitsResponsePathSelectorLimitsConfiguredLimit) FieldPath() *BatchGetLimitsResponse_FieldSubPath {
	return &BatchGetLimitsResponse_FieldSubPath{
		selector: BatchGetLimitsResponse_FieldPathSelectorLimits,
		subPath:  limit.NewLimitFieldPathBuilder().ConfiguredLimit().FieldPath(),
	}
}

func (s BatchGetLimitsResponsePathSelectorLimitsConfiguredLimit) WithValue(value int64) *BatchGetLimitsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetLimitsResponse_FieldSubPathValue)
}

func (s BatchGetLimitsResponsePathSelectorLimitsConfiguredLimit) WithArrayOfValues(values []int64) *BatchGetLimitsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetLimitsResponse_FieldSubPathArrayOfValues)
}

type BatchGetLimitsResponsePathSelectorLimitsActiveLimit struct{}

func (BatchGetLimitsResponsePathSelectorLimitsActiveLimit) FieldPath() *BatchGetLimitsResponse_FieldSubPath {
	return &BatchGetLimitsResponse_FieldSubPath{
		selector: BatchGetLimitsResponse_FieldPathSelectorLimits,
		subPath:  limit.NewLimitFieldPathBuilder().ActiveLimit().FieldPath(),
	}
}

func (s BatchGetLimitsResponsePathSelectorLimitsActiveLimit) WithValue(value int64) *BatchGetLimitsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetLimitsResponse_FieldSubPathValue)
}

func (s BatchGetLimitsResponsePathSelectorLimitsActiveLimit) WithArrayOfValues(values []int64) *BatchGetLimitsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetLimitsResponse_FieldSubPathArrayOfValues)
}

type BatchGetLimitsResponsePathSelectorLimitsUsage struct{}

func (BatchGetLimitsResponsePathSelectorLimitsUsage) FieldPath() *BatchGetLimitsResponse_FieldSubPath {
	return &BatchGetLimitsResponse_FieldSubPath{
		selector: BatchGetLimitsResponse_FieldPathSelectorLimits,
		subPath:  limit.NewLimitFieldPathBuilder().Usage().FieldPath(),
	}
}

func (s BatchGetLimitsResponsePathSelectorLimitsUsage) WithValue(value int64) *BatchGetLimitsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetLimitsResponse_FieldSubPathValue)
}

func (s BatchGetLimitsResponsePathSelectorLimitsUsage) WithArrayOfValues(values []int64) *BatchGetLimitsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetLimitsResponse_FieldSubPathArrayOfValues)
}

type BatchGetLimitsResponsePathSelectorLimitsSource struct{}

func (BatchGetLimitsResponsePathSelectorLimitsSource) FieldPath() *BatchGetLimitsResponse_FieldSubPath {
	return &BatchGetLimitsResponse_FieldSubPath{
		selector: BatchGetLimitsResponse_FieldPathSelectorLimits,
		subPath:  limit.NewLimitFieldPathBuilder().Source().FieldPath(),
	}
}

func (s BatchGetLimitsResponsePathSelectorLimitsSource) WithValue(value *limit_pool.Reference) *BatchGetLimitsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetLimitsResponse_FieldSubPathValue)
}

func (s BatchGetLimitsResponsePathSelectorLimitsSource) WithArrayOfValues(values []*limit_pool.Reference) *BatchGetLimitsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetLimitsResponse_FieldSubPathArrayOfValues)
}

type BatchGetLimitsResponsePathSelectorLimitsMetadata struct{}

func (BatchGetLimitsResponsePathSelectorLimitsMetadata) FieldPath() *BatchGetLimitsResponse_FieldSubPath {
	return &BatchGetLimitsResponse_FieldSubPath{
		selector: BatchGetLimitsResponse_FieldPathSelectorLimits,
		subPath:  limit.NewLimitFieldPathBuilder().Metadata().FieldPath(),
	}
}

func (s BatchGetLimitsResponsePathSelectorLimitsMetadata) WithValue(value *ntt_meta.Meta) *BatchGetLimitsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetLimitsResponse_FieldSubPathValue)
}

func (s BatchGetLimitsResponsePathSelectorLimitsMetadata) WithArrayOfValues(values []*ntt_meta.Meta) *BatchGetLimitsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetLimitsResponse_FieldSubPathArrayOfValues)
}

func (BatchGetLimitsResponsePathSelectorLimitsMetadata) CreateTime() BatchGetLimitsResponsePathSelectorLimitsMetadataCreateTime {
	return BatchGetLimitsResponsePathSelectorLimitsMetadataCreateTime{}
}

func (BatchGetLimitsResponsePathSelectorLimitsMetadata) UpdateTime() BatchGetLimitsResponsePathSelectorLimitsMetadataUpdateTime {
	return BatchGetLimitsResponsePathSelectorLimitsMetadataUpdateTime{}
}

func (BatchGetLimitsResponsePathSelectorLimitsMetadata) DeleteTime() BatchGetLimitsResponsePathSelectorLimitsMetadataDeleteTime {
	return BatchGetLimitsResponsePathSelectorLimitsMetadataDeleteTime{}
}

func (BatchGetLimitsResponsePathSelectorLimitsMetadata) Uuid() BatchGetLimitsResponsePathSelectorLimitsMetadataUuid {
	return BatchGetLimitsResponsePathSelectorLimitsMetadataUuid{}
}

func (BatchGetLimitsResponsePathSelectorLimitsMetadata) Tags() BatchGetLimitsResponsePathSelectorLimitsMetadataTags {
	return BatchGetLimitsResponsePathSelectorLimitsMetadataTags{}
}

func (BatchGetLimitsResponsePathSelectorLimitsMetadata) Labels() BatchGetLimitsResponsePathSelectorLimitsMetadataLabels {
	return BatchGetLimitsResponsePathSelectorLimitsMetadataLabels{}
}

func (BatchGetLimitsResponsePathSelectorLimitsMetadata) Annotations() BatchGetLimitsResponsePathSelectorLimitsMetadataAnnotations {
	return BatchGetLimitsResponsePathSelectorLimitsMetadataAnnotations{}
}

func (BatchGetLimitsResponsePathSelectorLimitsMetadata) Generation() BatchGetLimitsResponsePathSelectorLimitsMetadataGeneration {
	return BatchGetLimitsResponsePathSelectorLimitsMetadataGeneration{}
}

func (BatchGetLimitsResponsePathSelectorLimitsMetadata) ResourceVersion() BatchGetLimitsResponsePathSelectorLimitsMetadataResourceVersion {
	return BatchGetLimitsResponsePathSelectorLimitsMetadataResourceVersion{}
}

func (BatchGetLimitsResponsePathSelectorLimitsMetadata) OwnerReferences() BatchGetLimitsResponsePathSelectorLimitsMetadataOwnerReferences {
	return BatchGetLimitsResponsePathSelectorLimitsMetadataOwnerReferences{}
}

func (BatchGetLimitsResponsePathSelectorLimitsMetadata) Shards() BatchGetLimitsResponsePathSelectorLimitsMetadataShards {
	return BatchGetLimitsResponsePathSelectorLimitsMetadataShards{}
}

func (BatchGetLimitsResponsePathSelectorLimitsMetadata) Syncing() BatchGetLimitsResponsePathSelectorLimitsMetadataSyncing {
	return BatchGetLimitsResponsePathSelectorLimitsMetadataSyncing{}
}

func (BatchGetLimitsResponsePathSelectorLimitsMetadata) Lifecycle() BatchGetLimitsResponsePathSelectorLimitsMetadataLifecycle {
	return BatchGetLimitsResponsePathSelectorLimitsMetadataLifecycle{}
}

type BatchGetLimitsResponsePathSelectorLimitsMetadataCreateTime struct{}

func (BatchGetLimitsResponsePathSelectorLimitsMetadataCreateTime) FieldPath() *BatchGetLimitsResponse_FieldSubPath {
	return &BatchGetLimitsResponse_FieldSubPath{
		selector: BatchGetLimitsResponse_FieldPathSelectorLimits,
		subPath:  limit.NewLimitFieldPathBuilder().Metadata().CreateTime().FieldPath(),
	}
}

func (s BatchGetLimitsResponsePathSelectorLimitsMetadataCreateTime) WithValue(value *timestamp.Timestamp) *BatchGetLimitsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetLimitsResponse_FieldSubPathValue)
}

func (s BatchGetLimitsResponsePathSelectorLimitsMetadataCreateTime) WithArrayOfValues(values []*timestamp.Timestamp) *BatchGetLimitsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetLimitsResponse_FieldSubPathArrayOfValues)
}

type BatchGetLimitsResponsePathSelectorLimitsMetadataUpdateTime struct{}

func (BatchGetLimitsResponsePathSelectorLimitsMetadataUpdateTime) FieldPath() *BatchGetLimitsResponse_FieldSubPath {
	return &BatchGetLimitsResponse_FieldSubPath{
		selector: BatchGetLimitsResponse_FieldPathSelectorLimits,
		subPath:  limit.NewLimitFieldPathBuilder().Metadata().UpdateTime().FieldPath(),
	}
}

func (s BatchGetLimitsResponsePathSelectorLimitsMetadataUpdateTime) WithValue(value *timestamp.Timestamp) *BatchGetLimitsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetLimitsResponse_FieldSubPathValue)
}

func (s BatchGetLimitsResponsePathSelectorLimitsMetadataUpdateTime) WithArrayOfValues(values []*timestamp.Timestamp) *BatchGetLimitsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetLimitsResponse_FieldSubPathArrayOfValues)
}

type BatchGetLimitsResponsePathSelectorLimitsMetadataDeleteTime struct{}

func (BatchGetLimitsResponsePathSelectorLimitsMetadataDeleteTime) FieldPath() *BatchGetLimitsResponse_FieldSubPath {
	return &BatchGetLimitsResponse_FieldSubPath{
		selector: BatchGetLimitsResponse_FieldPathSelectorLimits,
		subPath:  limit.NewLimitFieldPathBuilder().Metadata().DeleteTime().FieldPath(),
	}
}

func (s BatchGetLimitsResponsePathSelectorLimitsMetadataDeleteTime) WithValue(value *timestamp.Timestamp) *BatchGetLimitsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetLimitsResponse_FieldSubPathValue)
}

func (s BatchGetLimitsResponsePathSelectorLimitsMetadataDeleteTime) WithArrayOfValues(values []*timestamp.Timestamp) *BatchGetLimitsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetLimitsResponse_FieldSubPathArrayOfValues)
}

type BatchGetLimitsResponsePathSelectorLimitsMetadataUuid struct{}

func (BatchGetLimitsResponsePathSelectorLimitsMetadataUuid) FieldPath() *BatchGetLimitsResponse_FieldSubPath {
	return &BatchGetLimitsResponse_FieldSubPath{
		selector: BatchGetLimitsResponse_FieldPathSelectorLimits,
		subPath:  limit.NewLimitFieldPathBuilder().Metadata().Uuid().FieldPath(),
	}
}

func (s BatchGetLimitsResponsePathSelectorLimitsMetadataUuid) WithValue(value string) *BatchGetLimitsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetLimitsResponse_FieldSubPathValue)
}

func (s BatchGetLimitsResponsePathSelectorLimitsMetadataUuid) WithArrayOfValues(values []string) *BatchGetLimitsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetLimitsResponse_FieldSubPathArrayOfValues)
}

type BatchGetLimitsResponsePathSelectorLimitsMetadataTags struct{}

func (BatchGetLimitsResponsePathSelectorLimitsMetadataTags) FieldPath() *BatchGetLimitsResponse_FieldSubPath {
	return &BatchGetLimitsResponse_FieldSubPath{
		selector: BatchGetLimitsResponse_FieldPathSelectorLimits,
		subPath:  limit.NewLimitFieldPathBuilder().Metadata().Tags().FieldPath(),
	}
}

func (s BatchGetLimitsResponsePathSelectorLimitsMetadataTags) WithValue(value []string) *BatchGetLimitsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetLimitsResponse_FieldSubPathValue)
}

func (s BatchGetLimitsResponsePathSelectorLimitsMetadataTags) WithArrayOfValues(values [][]string) *BatchGetLimitsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetLimitsResponse_FieldSubPathArrayOfValues)
}

func (s BatchGetLimitsResponsePathSelectorLimitsMetadataTags) WithItemValue(value string) *BatchGetLimitsResponse_FieldSubPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*BatchGetLimitsResponse_FieldSubPathArrayItemValue)
}

type BatchGetLimitsResponsePathSelectorLimitsMetadataLabels struct{}

func (BatchGetLimitsResponsePathSelectorLimitsMetadataLabels) FieldPath() *BatchGetLimitsResponse_FieldSubPath {
	return &BatchGetLimitsResponse_FieldSubPath{
		selector: BatchGetLimitsResponse_FieldPathSelectorLimits,
		subPath:  limit.NewLimitFieldPathBuilder().Metadata().Labels().FieldPath(),
	}
}

func (s BatchGetLimitsResponsePathSelectorLimitsMetadataLabels) WithValue(value map[string]string) *BatchGetLimitsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetLimitsResponse_FieldSubPathValue)
}

func (s BatchGetLimitsResponsePathSelectorLimitsMetadataLabels) WithArrayOfValues(values []map[string]string) *BatchGetLimitsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetLimitsResponse_FieldSubPathArrayOfValues)
}

func (BatchGetLimitsResponsePathSelectorLimitsMetadataLabels) WithKey(key string) BatchGetLimitsResponseMapPathSelectorLimitsMetadataLabels {
	return BatchGetLimitsResponseMapPathSelectorLimitsMetadataLabels{key: key}
}

type BatchGetLimitsResponseMapPathSelectorLimitsMetadataLabels struct {
	key string
}

func (s BatchGetLimitsResponseMapPathSelectorLimitsMetadataLabels) FieldPath() *BatchGetLimitsResponse_FieldSubPath {
	return &BatchGetLimitsResponse_FieldSubPath{
		selector: BatchGetLimitsResponse_FieldPathSelectorLimits,
		subPath:  limit.NewLimitFieldPathBuilder().Metadata().Labels().WithKey(s.key).FieldPath(),
	}
}

func (s BatchGetLimitsResponseMapPathSelectorLimitsMetadataLabels) WithValue(value string) *BatchGetLimitsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetLimitsResponse_FieldSubPathValue)
}

func (s BatchGetLimitsResponseMapPathSelectorLimitsMetadataLabels) WithArrayOfValues(values []string) *BatchGetLimitsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetLimitsResponse_FieldSubPathArrayOfValues)
}

type BatchGetLimitsResponsePathSelectorLimitsMetadataAnnotations struct{}

func (BatchGetLimitsResponsePathSelectorLimitsMetadataAnnotations) FieldPath() *BatchGetLimitsResponse_FieldSubPath {
	return &BatchGetLimitsResponse_FieldSubPath{
		selector: BatchGetLimitsResponse_FieldPathSelectorLimits,
		subPath:  limit.NewLimitFieldPathBuilder().Metadata().Annotations().FieldPath(),
	}
}

func (s BatchGetLimitsResponsePathSelectorLimitsMetadataAnnotations) WithValue(value map[string]string) *BatchGetLimitsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetLimitsResponse_FieldSubPathValue)
}

func (s BatchGetLimitsResponsePathSelectorLimitsMetadataAnnotations) WithArrayOfValues(values []map[string]string) *BatchGetLimitsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetLimitsResponse_FieldSubPathArrayOfValues)
}

func (BatchGetLimitsResponsePathSelectorLimitsMetadataAnnotations) WithKey(key string) BatchGetLimitsResponseMapPathSelectorLimitsMetadataAnnotations {
	return BatchGetLimitsResponseMapPathSelectorLimitsMetadataAnnotations{key: key}
}

type BatchGetLimitsResponseMapPathSelectorLimitsMetadataAnnotations struct {
	key string
}

func (s BatchGetLimitsResponseMapPathSelectorLimitsMetadataAnnotations) FieldPath() *BatchGetLimitsResponse_FieldSubPath {
	return &BatchGetLimitsResponse_FieldSubPath{
		selector: BatchGetLimitsResponse_FieldPathSelectorLimits,
		subPath:  limit.NewLimitFieldPathBuilder().Metadata().Annotations().WithKey(s.key).FieldPath(),
	}
}

func (s BatchGetLimitsResponseMapPathSelectorLimitsMetadataAnnotations) WithValue(value string) *BatchGetLimitsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetLimitsResponse_FieldSubPathValue)
}

func (s BatchGetLimitsResponseMapPathSelectorLimitsMetadataAnnotations) WithArrayOfValues(values []string) *BatchGetLimitsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetLimitsResponse_FieldSubPathArrayOfValues)
}

type BatchGetLimitsResponsePathSelectorLimitsMetadataGeneration struct{}

func (BatchGetLimitsResponsePathSelectorLimitsMetadataGeneration) FieldPath() *BatchGetLimitsResponse_FieldSubPath {
	return &BatchGetLimitsResponse_FieldSubPath{
		selector: BatchGetLimitsResponse_FieldPathSelectorLimits,
		subPath:  limit.NewLimitFieldPathBuilder().Metadata().Generation().FieldPath(),
	}
}

func (s BatchGetLimitsResponsePathSelectorLimitsMetadataGeneration) WithValue(value int64) *BatchGetLimitsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetLimitsResponse_FieldSubPathValue)
}

func (s BatchGetLimitsResponsePathSelectorLimitsMetadataGeneration) WithArrayOfValues(values []int64) *BatchGetLimitsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetLimitsResponse_FieldSubPathArrayOfValues)
}

type BatchGetLimitsResponsePathSelectorLimitsMetadataResourceVersion struct{}

func (BatchGetLimitsResponsePathSelectorLimitsMetadataResourceVersion) FieldPath() *BatchGetLimitsResponse_FieldSubPath {
	return &BatchGetLimitsResponse_FieldSubPath{
		selector: BatchGetLimitsResponse_FieldPathSelectorLimits,
		subPath:  limit.NewLimitFieldPathBuilder().Metadata().ResourceVersion().FieldPath(),
	}
}

func (s BatchGetLimitsResponsePathSelectorLimitsMetadataResourceVersion) WithValue(value string) *BatchGetLimitsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetLimitsResponse_FieldSubPathValue)
}

func (s BatchGetLimitsResponsePathSelectorLimitsMetadataResourceVersion) WithArrayOfValues(values []string) *BatchGetLimitsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetLimitsResponse_FieldSubPathArrayOfValues)
}

type BatchGetLimitsResponsePathSelectorLimitsMetadataOwnerReferences struct{}

func (BatchGetLimitsResponsePathSelectorLimitsMetadataOwnerReferences) FieldPath() *BatchGetLimitsResponse_FieldSubPath {
	return &BatchGetLimitsResponse_FieldSubPath{
		selector: BatchGetLimitsResponse_FieldPathSelectorLimits,
		subPath:  limit.NewLimitFieldPathBuilder().Metadata().OwnerReferences().FieldPath(),
	}
}

func (s BatchGetLimitsResponsePathSelectorLimitsMetadataOwnerReferences) WithValue(value []*ntt_meta.OwnerReference) *BatchGetLimitsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetLimitsResponse_FieldSubPathValue)
}

func (s BatchGetLimitsResponsePathSelectorLimitsMetadataOwnerReferences) WithArrayOfValues(values [][]*ntt_meta.OwnerReference) *BatchGetLimitsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetLimitsResponse_FieldSubPathArrayOfValues)
}

func (s BatchGetLimitsResponsePathSelectorLimitsMetadataOwnerReferences) WithItemValue(value *ntt_meta.OwnerReference) *BatchGetLimitsResponse_FieldSubPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*BatchGetLimitsResponse_FieldSubPathArrayItemValue)
}

func (BatchGetLimitsResponsePathSelectorLimitsMetadataOwnerReferences) Kind() BatchGetLimitsResponsePathSelectorLimitsMetadataOwnerReferencesKind {
	return BatchGetLimitsResponsePathSelectorLimitsMetadataOwnerReferencesKind{}
}

func (BatchGetLimitsResponsePathSelectorLimitsMetadataOwnerReferences) Version() BatchGetLimitsResponsePathSelectorLimitsMetadataOwnerReferencesVersion {
	return BatchGetLimitsResponsePathSelectorLimitsMetadataOwnerReferencesVersion{}
}

func (BatchGetLimitsResponsePathSelectorLimitsMetadataOwnerReferences) Name() BatchGetLimitsResponsePathSelectorLimitsMetadataOwnerReferencesName {
	return BatchGetLimitsResponsePathSelectorLimitsMetadataOwnerReferencesName{}
}

func (BatchGetLimitsResponsePathSelectorLimitsMetadataOwnerReferences) Region() BatchGetLimitsResponsePathSelectorLimitsMetadataOwnerReferencesRegion {
	return BatchGetLimitsResponsePathSelectorLimitsMetadataOwnerReferencesRegion{}
}

func (BatchGetLimitsResponsePathSelectorLimitsMetadataOwnerReferences) Controller() BatchGetLimitsResponsePathSelectorLimitsMetadataOwnerReferencesController {
	return BatchGetLimitsResponsePathSelectorLimitsMetadataOwnerReferencesController{}
}

func (BatchGetLimitsResponsePathSelectorLimitsMetadataOwnerReferences) BlockOwnerDeletion() BatchGetLimitsResponsePathSelectorLimitsMetadataOwnerReferencesBlockOwnerDeletion {
	return BatchGetLimitsResponsePathSelectorLimitsMetadataOwnerReferencesBlockOwnerDeletion{}
}

func (BatchGetLimitsResponsePathSelectorLimitsMetadataOwnerReferences) RequiresOwnerReference() BatchGetLimitsResponsePathSelectorLimitsMetadataOwnerReferencesRequiresOwnerReference {
	return BatchGetLimitsResponsePathSelectorLimitsMetadataOwnerReferencesRequiresOwnerReference{}
}

type BatchGetLimitsResponsePathSelectorLimitsMetadataOwnerReferencesKind struct{}

func (BatchGetLimitsResponsePathSelectorLimitsMetadataOwnerReferencesKind) FieldPath() *BatchGetLimitsResponse_FieldSubPath {
	return &BatchGetLimitsResponse_FieldSubPath{
		selector: BatchGetLimitsResponse_FieldPathSelectorLimits,
		subPath:  limit.NewLimitFieldPathBuilder().Metadata().OwnerReferences().Kind().FieldPath(),
	}
}

func (s BatchGetLimitsResponsePathSelectorLimitsMetadataOwnerReferencesKind) WithValue(value string) *BatchGetLimitsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetLimitsResponse_FieldSubPathValue)
}

func (s BatchGetLimitsResponsePathSelectorLimitsMetadataOwnerReferencesKind) WithArrayOfValues(values []string) *BatchGetLimitsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetLimitsResponse_FieldSubPathArrayOfValues)
}

type BatchGetLimitsResponsePathSelectorLimitsMetadataOwnerReferencesVersion struct{}

func (BatchGetLimitsResponsePathSelectorLimitsMetadataOwnerReferencesVersion) FieldPath() *BatchGetLimitsResponse_FieldSubPath {
	return &BatchGetLimitsResponse_FieldSubPath{
		selector: BatchGetLimitsResponse_FieldPathSelectorLimits,
		subPath:  limit.NewLimitFieldPathBuilder().Metadata().OwnerReferences().Version().FieldPath(),
	}
}

func (s BatchGetLimitsResponsePathSelectorLimitsMetadataOwnerReferencesVersion) WithValue(value string) *BatchGetLimitsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetLimitsResponse_FieldSubPathValue)
}

func (s BatchGetLimitsResponsePathSelectorLimitsMetadataOwnerReferencesVersion) WithArrayOfValues(values []string) *BatchGetLimitsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetLimitsResponse_FieldSubPathArrayOfValues)
}

type BatchGetLimitsResponsePathSelectorLimitsMetadataOwnerReferencesName struct{}

func (BatchGetLimitsResponsePathSelectorLimitsMetadataOwnerReferencesName) FieldPath() *BatchGetLimitsResponse_FieldSubPath {
	return &BatchGetLimitsResponse_FieldSubPath{
		selector: BatchGetLimitsResponse_FieldPathSelectorLimits,
		subPath:  limit.NewLimitFieldPathBuilder().Metadata().OwnerReferences().Name().FieldPath(),
	}
}

func (s BatchGetLimitsResponsePathSelectorLimitsMetadataOwnerReferencesName) WithValue(value string) *BatchGetLimitsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetLimitsResponse_FieldSubPathValue)
}

func (s BatchGetLimitsResponsePathSelectorLimitsMetadataOwnerReferencesName) WithArrayOfValues(values []string) *BatchGetLimitsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetLimitsResponse_FieldSubPathArrayOfValues)
}

type BatchGetLimitsResponsePathSelectorLimitsMetadataOwnerReferencesRegion struct{}

func (BatchGetLimitsResponsePathSelectorLimitsMetadataOwnerReferencesRegion) FieldPath() *BatchGetLimitsResponse_FieldSubPath {
	return &BatchGetLimitsResponse_FieldSubPath{
		selector: BatchGetLimitsResponse_FieldPathSelectorLimits,
		subPath:  limit.NewLimitFieldPathBuilder().Metadata().OwnerReferences().Region().FieldPath(),
	}
}

func (s BatchGetLimitsResponsePathSelectorLimitsMetadataOwnerReferencesRegion) WithValue(value string) *BatchGetLimitsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetLimitsResponse_FieldSubPathValue)
}

func (s BatchGetLimitsResponsePathSelectorLimitsMetadataOwnerReferencesRegion) WithArrayOfValues(values []string) *BatchGetLimitsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetLimitsResponse_FieldSubPathArrayOfValues)
}

type BatchGetLimitsResponsePathSelectorLimitsMetadataOwnerReferencesController struct{}

func (BatchGetLimitsResponsePathSelectorLimitsMetadataOwnerReferencesController) FieldPath() *BatchGetLimitsResponse_FieldSubPath {
	return &BatchGetLimitsResponse_FieldSubPath{
		selector: BatchGetLimitsResponse_FieldPathSelectorLimits,
		subPath:  limit.NewLimitFieldPathBuilder().Metadata().OwnerReferences().Controller().FieldPath(),
	}
}

func (s BatchGetLimitsResponsePathSelectorLimitsMetadataOwnerReferencesController) WithValue(value bool) *BatchGetLimitsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetLimitsResponse_FieldSubPathValue)
}

func (s BatchGetLimitsResponsePathSelectorLimitsMetadataOwnerReferencesController) WithArrayOfValues(values []bool) *BatchGetLimitsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetLimitsResponse_FieldSubPathArrayOfValues)
}

type BatchGetLimitsResponsePathSelectorLimitsMetadataOwnerReferencesBlockOwnerDeletion struct{}

func (BatchGetLimitsResponsePathSelectorLimitsMetadataOwnerReferencesBlockOwnerDeletion) FieldPath() *BatchGetLimitsResponse_FieldSubPath {
	return &BatchGetLimitsResponse_FieldSubPath{
		selector: BatchGetLimitsResponse_FieldPathSelectorLimits,
		subPath:  limit.NewLimitFieldPathBuilder().Metadata().OwnerReferences().BlockOwnerDeletion().FieldPath(),
	}
}

func (s BatchGetLimitsResponsePathSelectorLimitsMetadataOwnerReferencesBlockOwnerDeletion) WithValue(value bool) *BatchGetLimitsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetLimitsResponse_FieldSubPathValue)
}

func (s BatchGetLimitsResponsePathSelectorLimitsMetadataOwnerReferencesBlockOwnerDeletion) WithArrayOfValues(values []bool) *BatchGetLimitsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetLimitsResponse_FieldSubPathArrayOfValues)
}

type BatchGetLimitsResponsePathSelectorLimitsMetadataOwnerReferencesRequiresOwnerReference struct{}

func (BatchGetLimitsResponsePathSelectorLimitsMetadataOwnerReferencesRequiresOwnerReference) FieldPath() *BatchGetLimitsResponse_FieldSubPath {
	return &BatchGetLimitsResponse_FieldSubPath{
		selector: BatchGetLimitsResponse_FieldPathSelectorLimits,
		subPath:  limit.NewLimitFieldPathBuilder().Metadata().OwnerReferences().RequiresOwnerReference().FieldPath(),
	}
}

func (s BatchGetLimitsResponsePathSelectorLimitsMetadataOwnerReferencesRequiresOwnerReference) WithValue(value bool) *BatchGetLimitsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetLimitsResponse_FieldSubPathValue)
}

func (s BatchGetLimitsResponsePathSelectorLimitsMetadataOwnerReferencesRequiresOwnerReference) WithArrayOfValues(values []bool) *BatchGetLimitsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetLimitsResponse_FieldSubPathArrayOfValues)
}

type BatchGetLimitsResponsePathSelectorLimitsMetadataShards struct{}

func (BatchGetLimitsResponsePathSelectorLimitsMetadataShards) FieldPath() *BatchGetLimitsResponse_FieldSubPath {
	return &BatchGetLimitsResponse_FieldSubPath{
		selector: BatchGetLimitsResponse_FieldPathSelectorLimits,
		subPath:  limit.NewLimitFieldPathBuilder().Metadata().Shards().FieldPath(),
	}
}

func (s BatchGetLimitsResponsePathSelectorLimitsMetadataShards) WithValue(value map[string]int64) *BatchGetLimitsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetLimitsResponse_FieldSubPathValue)
}

func (s BatchGetLimitsResponsePathSelectorLimitsMetadataShards) WithArrayOfValues(values []map[string]int64) *BatchGetLimitsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetLimitsResponse_FieldSubPathArrayOfValues)
}

func (BatchGetLimitsResponsePathSelectorLimitsMetadataShards) WithKey(key string) BatchGetLimitsResponseMapPathSelectorLimitsMetadataShards {
	return BatchGetLimitsResponseMapPathSelectorLimitsMetadataShards{key: key}
}

type BatchGetLimitsResponseMapPathSelectorLimitsMetadataShards struct {
	key string
}

func (s BatchGetLimitsResponseMapPathSelectorLimitsMetadataShards) FieldPath() *BatchGetLimitsResponse_FieldSubPath {
	return &BatchGetLimitsResponse_FieldSubPath{
		selector: BatchGetLimitsResponse_FieldPathSelectorLimits,
		subPath:  limit.NewLimitFieldPathBuilder().Metadata().Shards().WithKey(s.key).FieldPath(),
	}
}

func (s BatchGetLimitsResponseMapPathSelectorLimitsMetadataShards) WithValue(value int64) *BatchGetLimitsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetLimitsResponse_FieldSubPathValue)
}

func (s BatchGetLimitsResponseMapPathSelectorLimitsMetadataShards) WithArrayOfValues(values []int64) *BatchGetLimitsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetLimitsResponse_FieldSubPathArrayOfValues)
}

type BatchGetLimitsResponsePathSelectorLimitsMetadataSyncing struct{}

func (BatchGetLimitsResponsePathSelectorLimitsMetadataSyncing) FieldPath() *BatchGetLimitsResponse_FieldSubPath {
	return &BatchGetLimitsResponse_FieldSubPath{
		selector: BatchGetLimitsResponse_FieldPathSelectorLimits,
		subPath:  limit.NewLimitFieldPathBuilder().Metadata().Syncing().FieldPath(),
	}
}

func (s BatchGetLimitsResponsePathSelectorLimitsMetadataSyncing) WithValue(value *ntt_meta.SyncingMeta) *BatchGetLimitsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetLimitsResponse_FieldSubPathValue)
}

func (s BatchGetLimitsResponsePathSelectorLimitsMetadataSyncing) WithArrayOfValues(values []*ntt_meta.SyncingMeta) *BatchGetLimitsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetLimitsResponse_FieldSubPathArrayOfValues)
}

func (BatchGetLimitsResponsePathSelectorLimitsMetadataSyncing) OwningRegion() BatchGetLimitsResponsePathSelectorLimitsMetadataSyncingOwningRegion {
	return BatchGetLimitsResponsePathSelectorLimitsMetadataSyncingOwningRegion{}
}

func (BatchGetLimitsResponsePathSelectorLimitsMetadataSyncing) Regions() BatchGetLimitsResponsePathSelectorLimitsMetadataSyncingRegions {
	return BatchGetLimitsResponsePathSelectorLimitsMetadataSyncingRegions{}
}

type BatchGetLimitsResponsePathSelectorLimitsMetadataSyncingOwningRegion struct{}

func (BatchGetLimitsResponsePathSelectorLimitsMetadataSyncingOwningRegion) FieldPath() *BatchGetLimitsResponse_FieldSubPath {
	return &BatchGetLimitsResponse_FieldSubPath{
		selector: BatchGetLimitsResponse_FieldPathSelectorLimits,
		subPath:  limit.NewLimitFieldPathBuilder().Metadata().Syncing().OwningRegion().FieldPath(),
	}
}

func (s BatchGetLimitsResponsePathSelectorLimitsMetadataSyncingOwningRegion) WithValue(value string) *BatchGetLimitsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetLimitsResponse_FieldSubPathValue)
}

func (s BatchGetLimitsResponsePathSelectorLimitsMetadataSyncingOwningRegion) WithArrayOfValues(values []string) *BatchGetLimitsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetLimitsResponse_FieldSubPathArrayOfValues)
}

type BatchGetLimitsResponsePathSelectorLimitsMetadataSyncingRegions struct{}

func (BatchGetLimitsResponsePathSelectorLimitsMetadataSyncingRegions) FieldPath() *BatchGetLimitsResponse_FieldSubPath {
	return &BatchGetLimitsResponse_FieldSubPath{
		selector: BatchGetLimitsResponse_FieldPathSelectorLimits,
		subPath:  limit.NewLimitFieldPathBuilder().Metadata().Syncing().Regions().FieldPath(),
	}
}

func (s BatchGetLimitsResponsePathSelectorLimitsMetadataSyncingRegions) WithValue(value []string) *BatchGetLimitsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetLimitsResponse_FieldSubPathValue)
}

func (s BatchGetLimitsResponsePathSelectorLimitsMetadataSyncingRegions) WithArrayOfValues(values [][]string) *BatchGetLimitsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetLimitsResponse_FieldSubPathArrayOfValues)
}

func (s BatchGetLimitsResponsePathSelectorLimitsMetadataSyncingRegions) WithItemValue(value string) *BatchGetLimitsResponse_FieldSubPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*BatchGetLimitsResponse_FieldSubPathArrayItemValue)
}

type BatchGetLimitsResponsePathSelectorLimitsMetadataLifecycle struct{}

func (BatchGetLimitsResponsePathSelectorLimitsMetadataLifecycle) FieldPath() *BatchGetLimitsResponse_FieldSubPath {
	return &BatchGetLimitsResponse_FieldSubPath{
		selector: BatchGetLimitsResponse_FieldPathSelectorLimits,
		subPath:  limit.NewLimitFieldPathBuilder().Metadata().Lifecycle().FieldPath(),
	}
}

func (s BatchGetLimitsResponsePathSelectorLimitsMetadataLifecycle) WithValue(value *ntt_meta.Lifecycle) *BatchGetLimitsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetLimitsResponse_FieldSubPathValue)
}

func (s BatchGetLimitsResponsePathSelectorLimitsMetadataLifecycle) WithArrayOfValues(values []*ntt_meta.Lifecycle) *BatchGetLimitsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetLimitsResponse_FieldSubPathArrayOfValues)
}

func (BatchGetLimitsResponsePathSelectorLimitsMetadataLifecycle) State() BatchGetLimitsResponsePathSelectorLimitsMetadataLifecycleState {
	return BatchGetLimitsResponsePathSelectorLimitsMetadataLifecycleState{}
}

func (BatchGetLimitsResponsePathSelectorLimitsMetadataLifecycle) BlockDeletion() BatchGetLimitsResponsePathSelectorLimitsMetadataLifecycleBlockDeletion {
	return BatchGetLimitsResponsePathSelectorLimitsMetadataLifecycleBlockDeletion{}
}

type BatchGetLimitsResponsePathSelectorLimitsMetadataLifecycleState struct{}

func (BatchGetLimitsResponsePathSelectorLimitsMetadataLifecycleState) FieldPath() *BatchGetLimitsResponse_FieldSubPath {
	return &BatchGetLimitsResponse_FieldSubPath{
		selector: BatchGetLimitsResponse_FieldPathSelectorLimits,
		subPath:  limit.NewLimitFieldPathBuilder().Metadata().Lifecycle().State().FieldPath(),
	}
}

func (s BatchGetLimitsResponsePathSelectorLimitsMetadataLifecycleState) WithValue(value ntt_meta.Lifecycle_State) *BatchGetLimitsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetLimitsResponse_FieldSubPathValue)
}

func (s BatchGetLimitsResponsePathSelectorLimitsMetadataLifecycleState) WithArrayOfValues(values []ntt_meta.Lifecycle_State) *BatchGetLimitsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetLimitsResponse_FieldSubPathArrayOfValues)
}

type BatchGetLimitsResponsePathSelectorLimitsMetadataLifecycleBlockDeletion struct{}

func (BatchGetLimitsResponsePathSelectorLimitsMetadataLifecycleBlockDeletion) FieldPath() *BatchGetLimitsResponse_FieldSubPath {
	return &BatchGetLimitsResponse_FieldSubPath{
		selector: BatchGetLimitsResponse_FieldPathSelectorLimits,
		subPath:  limit.NewLimitFieldPathBuilder().Metadata().Lifecycle().BlockDeletion().FieldPath(),
	}
}

func (s BatchGetLimitsResponsePathSelectorLimitsMetadataLifecycleBlockDeletion) WithValue(value bool) *BatchGetLimitsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetLimitsResponse_FieldSubPathValue)
}

func (s BatchGetLimitsResponsePathSelectorLimitsMetadataLifecycleBlockDeletion) WithArrayOfValues(values []bool) *BatchGetLimitsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetLimitsResponse_FieldSubPathArrayOfValues)
}

type BatchGetLimitsResponsePathSelectorMissing struct{}

func (BatchGetLimitsResponsePathSelectorMissing) FieldPath() *BatchGetLimitsResponse_FieldTerminalPath {
	return &BatchGetLimitsResponse_FieldTerminalPath{selector: BatchGetLimitsResponse_FieldPathSelectorMissing}
}

func (s BatchGetLimitsResponsePathSelectorMissing) WithValue(value []*limit.Reference) *BatchGetLimitsResponse_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetLimitsResponse_FieldTerminalPathValue)
}

func (s BatchGetLimitsResponsePathSelectorMissing) WithArrayOfValues(values [][]*limit.Reference) *BatchGetLimitsResponse_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetLimitsResponse_FieldTerminalPathArrayOfValues)
}

func (s BatchGetLimitsResponsePathSelectorMissing) WithItemValue(value *limit.Reference) *BatchGetLimitsResponse_FieldTerminalPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*BatchGetLimitsResponse_FieldTerminalPathArrayItemValue)
}

type ListLimitsRequestFieldPathBuilder struct{}

func NewListLimitsRequestFieldPathBuilder() ListLimitsRequestFieldPathBuilder {
	return ListLimitsRequestFieldPathBuilder{}
}
func (ListLimitsRequestFieldPathBuilder) Parent() ListLimitsRequestPathSelectorParent {
	return ListLimitsRequestPathSelectorParent{}
}
func (ListLimitsRequestFieldPathBuilder) PageSize() ListLimitsRequestPathSelectorPageSize {
	return ListLimitsRequestPathSelectorPageSize{}
}
func (ListLimitsRequestFieldPathBuilder) PageToken() ListLimitsRequestPathSelectorPageToken {
	return ListLimitsRequestPathSelectorPageToken{}
}
func (ListLimitsRequestFieldPathBuilder) OrderBy() ListLimitsRequestPathSelectorOrderBy {
	return ListLimitsRequestPathSelectorOrderBy{}
}
func (ListLimitsRequestFieldPathBuilder) Filter() ListLimitsRequestPathSelectorFilter {
	return ListLimitsRequestPathSelectorFilter{}
}
func (ListLimitsRequestFieldPathBuilder) FieldMask() ListLimitsRequestPathSelectorFieldMask {
	return ListLimitsRequestPathSelectorFieldMask{}
}
func (ListLimitsRequestFieldPathBuilder) View() ListLimitsRequestPathSelectorView {
	return ListLimitsRequestPathSelectorView{}
}

type ListLimitsRequestPathSelectorParent struct{}

func (ListLimitsRequestPathSelectorParent) FieldPath() *ListLimitsRequest_FieldTerminalPath {
	return &ListLimitsRequest_FieldTerminalPath{selector: ListLimitsRequest_FieldPathSelectorParent}
}

func (s ListLimitsRequestPathSelectorParent) WithValue(value *limit.ParentName) *ListLimitsRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*ListLimitsRequest_FieldTerminalPathValue)
}

func (s ListLimitsRequestPathSelectorParent) WithArrayOfValues(values []*limit.ParentName) *ListLimitsRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListLimitsRequest_FieldTerminalPathArrayOfValues)
}

type ListLimitsRequestPathSelectorPageSize struct{}

func (ListLimitsRequestPathSelectorPageSize) FieldPath() *ListLimitsRequest_FieldTerminalPath {
	return &ListLimitsRequest_FieldTerminalPath{selector: ListLimitsRequest_FieldPathSelectorPageSize}
}

func (s ListLimitsRequestPathSelectorPageSize) WithValue(value int32) *ListLimitsRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*ListLimitsRequest_FieldTerminalPathValue)
}

func (s ListLimitsRequestPathSelectorPageSize) WithArrayOfValues(values []int32) *ListLimitsRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListLimitsRequest_FieldTerminalPathArrayOfValues)
}

type ListLimitsRequestPathSelectorPageToken struct{}

func (ListLimitsRequestPathSelectorPageToken) FieldPath() *ListLimitsRequest_FieldTerminalPath {
	return &ListLimitsRequest_FieldTerminalPath{selector: ListLimitsRequest_FieldPathSelectorPageToken}
}

func (s ListLimitsRequestPathSelectorPageToken) WithValue(value *limit.PagerCursor) *ListLimitsRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*ListLimitsRequest_FieldTerminalPathValue)
}

func (s ListLimitsRequestPathSelectorPageToken) WithArrayOfValues(values []*limit.PagerCursor) *ListLimitsRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListLimitsRequest_FieldTerminalPathArrayOfValues)
}

type ListLimitsRequestPathSelectorOrderBy struct{}

func (ListLimitsRequestPathSelectorOrderBy) FieldPath() *ListLimitsRequest_FieldTerminalPath {
	return &ListLimitsRequest_FieldTerminalPath{selector: ListLimitsRequest_FieldPathSelectorOrderBy}
}

func (s ListLimitsRequestPathSelectorOrderBy) WithValue(value *limit.OrderBy) *ListLimitsRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*ListLimitsRequest_FieldTerminalPathValue)
}

func (s ListLimitsRequestPathSelectorOrderBy) WithArrayOfValues(values []*limit.OrderBy) *ListLimitsRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListLimitsRequest_FieldTerminalPathArrayOfValues)
}

type ListLimitsRequestPathSelectorFilter struct{}

func (ListLimitsRequestPathSelectorFilter) FieldPath() *ListLimitsRequest_FieldTerminalPath {
	return &ListLimitsRequest_FieldTerminalPath{selector: ListLimitsRequest_FieldPathSelectorFilter}
}

func (s ListLimitsRequestPathSelectorFilter) WithValue(value *limit.Filter) *ListLimitsRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*ListLimitsRequest_FieldTerminalPathValue)
}

func (s ListLimitsRequestPathSelectorFilter) WithArrayOfValues(values []*limit.Filter) *ListLimitsRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListLimitsRequest_FieldTerminalPathArrayOfValues)
}

type ListLimitsRequestPathSelectorFieldMask struct{}

func (ListLimitsRequestPathSelectorFieldMask) FieldPath() *ListLimitsRequest_FieldTerminalPath {
	return &ListLimitsRequest_FieldTerminalPath{selector: ListLimitsRequest_FieldPathSelectorFieldMask}
}

func (s ListLimitsRequestPathSelectorFieldMask) WithValue(value *limit.Limit_FieldMask) *ListLimitsRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*ListLimitsRequest_FieldTerminalPathValue)
}

func (s ListLimitsRequestPathSelectorFieldMask) WithArrayOfValues(values []*limit.Limit_FieldMask) *ListLimitsRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListLimitsRequest_FieldTerminalPathArrayOfValues)
}

type ListLimitsRequestPathSelectorView struct{}

func (ListLimitsRequestPathSelectorView) FieldPath() *ListLimitsRequest_FieldTerminalPath {
	return &ListLimitsRequest_FieldTerminalPath{selector: ListLimitsRequest_FieldPathSelectorView}
}

func (s ListLimitsRequestPathSelectorView) WithValue(value view.View) *ListLimitsRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*ListLimitsRequest_FieldTerminalPathValue)
}

func (s ListLimitsRequestPathSelectorView) WithArrayOfValues(values []view.View) *ListLimitsRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListLimitsRequest_FieldTerminalPathArrayOfValues)
}

type ListLimitsResponseFieldPathBuilder struct{}

func NewListLimitsResponseFieldPathBuilder() ListLimitsResponseFieldPathBuilder {
	return ListLimitsResponseFieldPathBuilder{}
}
func (ListLimitsResponseFieldPathBuilder) Limits() ListLimitsResponsePathSelectorLimits {
	return ListLimitsResponsePathSelectorLimits{}
}
func (ListLimitsResponseFieldPathBuilder) PrevPageToken() ListLimitsResponsePathSelectorPrevPageToken {
	return ListLimitsResponsePathSelectorPrevPageToken{}
}
func (ListLimitsResponseFieldPathBuilder) NextPageToken() ListLimitsResponsePathSelectorNextPageToken {
	return ListLimitsResponsePathSelectorNextPageToken{}
}

type ListLimitsResponsePathSelectorLimits struct{}

func (ListLimitsResponsePathSelectorLimits) FieldPath() *ListLimitsResponse_FieldTerminalPath {
	return &ListLimitsResponse_FieldTerminalPath{selector: ListLimitsResponse_FieldPathSelectorLimits}
}

func (s ListLimitsResponsePathSelectorLimits) WithValue(value []*limit.Limit) *ListLimitsResponse_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*ListLimitsResponse_FieldTerminalPathValue)
}

func (s ListLimitsResponsePathSelectorLimits) WithArrayOfValues(values [][]*limit.Limit) *ListLimitsResponse_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListLimitsResponse_FieldTerminalPathArrayOfValues)
}

func (s ListLimitsResponsePathSelectorLimits) WithItemValue(value *limit.Limit) *ListLimitsResponse_FieldTerminalPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*ListLimitsResponse_FieldTerminalPathArrayItemValue)
}
func (ListLimitsResponsePathSelectorLimits) WithSubPath(subPath limit.Limit_FieldPath) *ListLimitsResponse_FieldSubPath {
	return &ListLimitsResponse_FieldSubPath{selector: ListLimitsResponse_FieldPathSelectorLimits, subPath: subPath}
}

func (s ListLimitsResponsePathSelectorLimits) WithSubValue(subPathValue limit.Limit_FieldPathValue) *ListLimitsResponse_FieldSubPathValue {
	return &ListLimitsResponse_FieldSubPathValue{ListLimitsResponse_FieldPath: s.WithSubPath(subPathValue), subPathValue: subPathValue}
}

func (s ListLimitsResponsePathSelectorLimits) WithSubArrayOfValues(subPathArrayOfValues limit.Limit_FieldPathArrayOfValues) *ListLimitsResponse_FieldSubPathArrayOfValues {
	return &ListLimitsResponse_FieldSubPathArrayOfValues{ListLimitsResponse_FieldPath: s.WithSubPath(subPathArrayOfValues), subPathArrayOfValues: subPathArrayOfValues}
}

func (s ListLimitsResponsePathSelectorLimits) WithSubArrayItemValue(subPathArrayItemValue limit.Limit_FieldPathArrayItemValue) *ListLimitsResponse_FieldSubPathArrayItemValue {
	return &ListLimitsResponse_FieldSubPathArrayItemValue{ListLimitsResponse_FieldPath: s.WithSubPath(subPathArrayItemValue), subPathItemValue: subPathArrayItemValue}
}

func (ListLimitsResponsePathSelectorLimits) Name() ListLimitsResponsePathSelectorLimitsName {
	return ListLimitsResponsePathSelectorLimitsName{}
}

func (ListLimitsResponsePathSelectorLimits) Service() ListLimitsResponsePathSelectorLimitsService {
	return ListLimitsResponsePathSelectorLimitsService{}
}

func (ListLimitsResponsePathSelectorLimits) Resource() ListLimitsResponsePathSelectorLimitsResource {
	return ListLimitsResponsePathSelectorLimitsResource{}
}

func (ListLimitsResponsePathSelectorLimits) Region() ListLimitsResponsePathSelectorLimitsRegion {
	return ListLimitsResponsePathSelectorLimitsRegion{}
}

func (ListLimitsResponsePathSelectorLimits) ConfiguredLimit() ListLimitsResponsePathSelectorLimitsConfiguredLimit {
	return ListLimitsResponsePathSelectorLimitsConfiguredLimit{}
}

func (ListLimitsResponsePathSelectorLimits) ActiveLimit() ListLimitsResponsePathSelectorLimitsActiveLimit {
	return ListLimitsResponsePathSelectorLimitsActiveLimit{}
}

func (ListLimitsResponsePathSelectorLimits) Usage() ListLimitsResponsePathSelectorLimitsUsage {
	return ListLimitsResponsePathSelectorLimitsUsage{}
}

func (ListLimitsResponsePathSelectorLimits) Source() ListLimitsResponsePathSelectorLimitsSource {
	return ListLimitsResponsePathSelectorLimitsSource{}
}

func (ListLimitsResponsePathSelectorLimits) Metadata() ListLimitsResponsePathSelectorLimitsMetadata {
	return ListLimitsResponsePathSelectorLimitsMetadata{}
}

type ListLimitsResponsePathSelectorLimitsName struct{}

func (ListLimitsResponsePathSelectorLimitsName) FieldPath() *ListLimitsResponse_FieldSubPath {
	return &ListLimitsResponse_FieldSubPath{
		selector: ListLimitsResponse_FieldPathSelectorLimits,
		subPath:  limit.NewLimitFieldPathBuilder().Name().FieldPath(),
	}
}

func (s ListLimitsResponsePathSelectorLimitsName) WithValue(value *limit.Name) *ListLimitsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListLimitsResponse_FieldSubPathValue)
}

func (s ListLimitsResponsePathSelectorLimitsName) WithArrayOfValues(values []*limit.Name) *ListLimitsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListLimitsResponse_FieldSubPathArrayOfValues)
}

type ListLimitsResponsePathSelectorLimitsService struct{}

func (ListLimitsResponsePathSelectorLimitsService) FieldPath() *ListLimitsResponse_FieldSubPath {
	return &ListLimitsResponse_FieldSubPath{
		selector: ListLimitsResponse_FieldPathSelectorLimits,
		subPath:  limit.NewLimitFieldPathBuilder().Service().FieldPath(),
	}
}

func (s ListLimitsResponsePathSelectorLimitsService) WithValue(value *meta_service.Reference) *ListLimitsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListLimitsResponse_FieldSubPathValue)
}

func (s ListLimitsResponsePathSelectorLimitsService) WithArrayOfValues(values []*meta_service.Reference) *ListLimitsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListLimitsResponse_FieldSubPathArrayOfValues)
}

type ListLimitsResponsePathSelectorLimitsResource struct{}

func (ListLimitsResponsePathSelectorLimitsResource) FieldPath() *ListLimitsResponse_FieldSubPath {
	return &ListLimitsResponse_FieldSubPath{
		selector: ListLimitsResponse_FieldPathSelectorLimits,
		subPath:  limit.NewLimitFieldPathBuilder().Resource().FieldPath(),
	}
}

func (s ListLimitsResponsePathSelectorLimitsResource) WithValue(value *meta_resource.Reference) *ListLimitsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListLimitsResponse_FieldSubPathValue)
}

func (s ListLimitsResponsePathSelectorLimitsResource) WithArrayOfValues(values []*meta_resource.Reference) *ListLimitsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListLimitsResponse_FieldSubPathArrayOfValues)
}

type ListLimitsResponsePathSelectorLimitsRegion struct{}

func (ListLimitsResponsePathSelectorLimitsRegion) FieldPath() *ListLimitsResponse_FieldSubPath {
	return &ListLimitsResponse_FieldSubPath{
		selector: ListLimitsResponse_FieldPathSelectorLimits,
		subPath:  limit.NewLimitFieldPathBuilder().Region().FieldPath(),
	}
}

func (s ListLimitsResponsePathSelectorLimitsRegion) WithValue(value string) *ListLimitsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListLimitsResponse_FieldSubPathValue)
}

func (s ListLimitsResponsePathSelectorLimitsRegion) WithArrayOfValues(values []string) *ListLimitsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListLimitsResponse_FieldSubPathArrayOfValues)
}

type ListLimitsResponsePathSelectorLimitsConfiguredLimit struct{}

func (ListLimitsResponsePathSelectorLimitsConfiguredLimit) FieldPath() *ListLimitsResponse_FieldSubPath {
	return &ListLimitsResponse_FieldSubPath{
		selector: ListLimitsResponse_FieldPathSelectorLimits,
		subPath:  limit.NewLimitFieldPathBuilder().ConfiguredLimit().FieldPath(),
	}
}

func (s ListLimitsResponsePathSelectorLimitsConfiguredLimit) WithValue(value int64) *ListLimitsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListLimitsResponse_FieldSubPathValue)
}

func (s ListLimitsResponsePathSelectorLimitsConfiguredLimit) WithArrayOfValues(values []int64) *ListLimitsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListLimitsResponse_FieldSubPathArrayOfValues)
}

type ListLimitsResponsePathSelectorLimitsActiveLimit struct{}

func (ListLimitsResponsePathSelectorLimitsActiveLimit) FieldPath() *ListLimitsResponse_FieldSubPath {
	return &ListLimitsResponse_FieldSubPath{
		selector: ListLimitsResponse_FieldPathSelectorLimits,
		subPath:  limit.NewLimitFieldPathBuilder().ActiveLimit().FieldPath(),
	}
}

func (s ListLimitsResponsePathSelectorLimitsActiveLimit) WithValue(value int64) *ListLimitsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListLimitsResponse_FieldSubPathValue)
}

func (s ListLimitsResponsePathSelectorLimitsActiveLimit) WithArrayOfValues(values []int64) *ListLimitsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListLimitsResponse_FieldSubPathArrayOfValues)
}

type ListLimitsResponsePathSelectorLimitsUsage struct{}

func (ListLimitsResponsePathSelectorLimitsUsage) FieldPath() *ListLimitsResponse_FieldSubPath {
	return &ListLimitsResponse_FieldSubPath{
		selector: ListLimitsResponse_FieldPathSelectorLimits,
		subPath:  limit.NewLimitFieldPathBuilder().Usage().FieldPath(),
	}
}

func (s ListLimitsResponsePathSelectorLimitsUsage) WithValue(value int64) *ListLimitsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListLimitsResponse_FieldSubPathValue)
}

func (s ListLimitsResponsePathSelectorLimitsUsage) WithArrayOfValues(values []int64) *ListLimitsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListLimitsResponse_FieldSubPathArrayOfValues)
}

type ListLimitsResponsePathSelectorLimitsSource struct{}

func (ListLimitsResponsePathSelectorLimitsSource) FieldPath() *ListLimitsResponse_FieldSubPath {
	return &ListLimitsResponse_FieldSubPath{
		selector: ListLimitsResponse_FieldPathSelectorLimits,
		subPath:  limit.NewLimitFieldPathBuilder().Source().FieldPath(),
	}
}

func (s ListLimitsResponsePathSelectorLimitsSource) WithValue(value *limit_pool.Reference) *ListLimitsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListLimitsResponse_FieldSubPathValue)
}

func (s ListLimitsResponsePathSelectorLimitsSource) WithArrayOfValues(values []*limit_pool.Reference) *ListLimitsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListLimitsResponse_FieldSubPathArrayOfValues)
}

type ListLimitsResponsePathSelectorLimitsMetadata struct{}

func (ListLimitsResponsePathSelectorLimitsMetadata) FieldPath() *ListLimitsResponse_FieldSubPath {
	return &ListLimitsResponse_FieldSubPath{
		selector: ListLimitsResponse_FieldPathSelectorLimits,
		subPath:  limit.NewLimitFieldPathBuilder().Metadata().FieldPath(),
	}
}

func (s ListLimitsResponsePathSelectorLimitsMetadata) WithValue(value *ntt_meta.Meta) *ListLimitsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListLimitsResponse_FieldSubPathValue)
}

func (s ListLimitsResponsePathSelectorLimitsMetadata) WithArrayOfValues(values []*ntt_meta.Meta) *ListLimitsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListLimitsResponse_FieldSubPathArrayOfValues)
}

func (ListLimitsResponsePathSelectorLimitsMetadata) CreateTime() ListLimitsResponsePathSelectorLimitsMetadataCreateTime {
	return ListLimitsResponsePathSelectorLimitsMetadataCreateTime{}
}

func (ListLimitsResponsePathSelectorLimitsMetadata) UpdateTime() ListLimitsResponsePathSelectorLimitsMetadataUpdateTime {
	return ListLimitsResponsePathSelectorLimitsMetadataUpdateTime{}
}

func (ListLimitsResponsePathSelectorLimitsMetadata) DeleteTime() ListLimitsResponsePathSelectorLimitsMetadataDeleteTime {
	return ListLimitsResponsePathSelectorLimitsMetadataDeleteTime{}
}

func (ListLimitsResponsePathSelectorLimitsMetadata) Uuid() ListLimitsResponsePathSelectorLimitsMetadataUuid {
	return ListLimitsResponsePathSelectorLimitsMetadataUuid{}
}

func (ListLimitsResponsePathSelectorLimitsMetadata) Tags() ListLimitsResponsePathSelectorLimitsMetadataTags {
	return ListLimitsResponsePathSelectorLimitsMetadataTags{}
}

func (ListLimitsResponsePathSelectorLimitsMetadata) Labels() ListLimitsResponsePathSelectorLimitsMetadataLabels {
	return ListLimitsResponsePathSelectorLimitsMetadataLabels{}
}

func (ListLimitsResponsePathSelectorLimitsMetadata) Annotations() ListLimitsResponsePathSelectorLimitsMetadataAnnotations {
	return ListLimitsResponsePathSelectorLimitsMetadataAnnotations{}
}

func (ListLimitsResponsePathSelectorLimitsMetadata) Generation() ListLimitsResponsePathSelectorLimitsMetadataGeneration {
	return ListLimitsResponsePathSelectorLimitsMetadataGeneration{}
}

func (ListLimitsResponsePathSelectorLimitsMetadata) ResourceVersion() ListLimitsResponsePathSelectorLimitsMetadataResourceVersion {
	return ListLimitsResponsePathSelectorLimitsMetadataResourceVersion{}
}

func (ListLimitsResponsePathSelectorLimitsMetadata) OwnerReferences() ListLimitsResponsePathSelectorLimitsMetadataOwnerReferences {
	return ListLimitsResponsePathSelectorLimitsMetadataOwnerReferences{}
}

func (ListLimitsResponsePathSelectorLimitsMetadata) Shards() ListLimitsResponsePathSelectorLimitsMetadataShards {
	return ListLimitsResponsePathSelectorLimitsMetadataShards{}
}

func (ListLimitsResponsePathSelectorLimitsMetadata) Syncing() ListLimitsResponsePathSelectorLimitsMetadataSyncing {
	return ListLimitsResponsePathSelectorLimitsMetadataSyncing{}
}

func (ListLimitsResponsePathSelectorLimitsMetadata) Lifecycle() ListLimitsResponsePathSelectorLimitsMetadataLifecycle {
	return ListLimitsResponsePathSelectorLimitsMetadataLifecycle{}
}

type ListLimitsResponsePathSelectorLimitsMetadataCreateTime struct{}

func (ListLimitsResponsePathSelectorLimitsMetadataCreateTime) FieldPath() *ListLimitsResponse_FieldSubPath {
	return &ListLimitsResponse_FieldSubPath{
		selector: ListLimitsResponse_FieldPathSelectorLimits,
		subPath:  limit.NewLimitFieldPathBuilder().Metadata().CreateTime().FieldPath(),
	}
}

func (s ListLimitsResponsePathSelectorLimitsMetadataCreateTime) WithValue(value *timestamp.Timestamp) *ListLimitsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListLimitsResponse_FieldSubPathValue)
}

func (s ListLimitsResponsePathSelectorLimitsMetadataCreateTime) WithArrayOfValues(values []*timestamp.Timestamp) *ListLimitsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListLimitsResponse_FieldSubPathArrayOfValues)
}

type ListLimitsResponsePathSelectorLimitsMetadataUpdateTime struct{}

func (ListLimitsResponsePathSelectorLimitsMetadataUpdateTime) FieldPath() *ListLimitsResponse_FieldSubPath {
	return &ListLimitsResponse_FieldSubPath{
		selector: ListLimitsResponse_FieldPathSelectorLimits,
		subPath:  limit.NewLimitFieldPathBuilder().Metadata().UpdateTime().FieldPath(),
	}
}

func (s ListLimitsResponsePathSelectorLimitsMetadataUpdateTime) WithValue(value *timestamp.Timestamp) *ListLimitsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListLimitsResponse_FieldSubPathValue)
}

func (s ListLimitsResponsePathSelectorLimitsMetadataUpdateTime) WithArrayOfValues(values []*timestamp.Timestamp) *ListLimitsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListLimitsResponse_FieldSubPathArrayOfValues)
}

type ListLimitsResponsePathSelectorLimitsMetadataDeleteTime struct{}

func (ListLimitsResponsePathSelectorLimitsMetadataDeleteTime) FieldPath() *ListLimitsResponse_FieldSubPath {
	return &ListLimitsResponse_FieldSubPath{
		selector: ListLimitsResponse_FieldPathSelectorLimits,
		subPath:  limit.NewLimitFieldPathBuilder().Metadata().DeleteTime().FieldPath(),
	}
}

func (s ListLimitsResponsePathSelectorLimitsMetadataDeleteTime) WithValue(value *timestamp.Timestamp) *ListLimitsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListLimitsResponse_FieldSubPathValue)
}

func (s ListLimitsResponsePathSelectorLimitsMetadataDeleteTime) WithArrayOfValues(values []*timestamp.Timestamp) *ListLimitsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListLimitsResponse_FieldSubPathArrayOfValues)
}

type ListLimitsResponsePathSelectorLimitsMetadataUuid struct{}

func (ListLimitsResponsePathSelectorLimitsMetadataUuid) FieldPath() *ListLimitsResponse_FieldSubPath {
	return &ListLimitsResponse_FieldSubPath{
		selector: ListLimitsResponse_FieldPathSelectorLimits,
		subPath:  limit.NewLimitFieldPathBuilder().Metadata().Uuid().FieldPath(),
	}
}

func (s ListLimitsResponsePathSelectorLimitsMetadataUuid) WithValue(value string) *ListLimitsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListLimitsResponse_FieldSubPathValue)
}

func (s ListLimitsResponsePathSelectorLimitsMetadataUuid) WithArrayOfValues(values []string) *ListLimitsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListLimitsResponse_FieldSubPathArrayOfValues)
}

type ListLimitsResponsePathSelectorLimitsMetadataTags struct{}

func (ListLimitsResponsePathSelectorLimitsMetadataTags) FieldPath() *ListLimitsResponse_FieldSubPath {
	return &ListLimitsResponse_FieldSubPath{
		selector: ListLimitsResponse_FieldPathSelectorLimits,
		subPath:  limit.NewLimitFieldPathBuilder().Metadata().Tags().FieldPath(),
	}
}

func (s ListLimitsResponsePathSelectorLimitsMetadataTags) WithValue(value []string) *ListLimitsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListLimitsResponse_FieldSubPathValue)
}

func (s ListLimitsResponsePathSelectorLimitsMetadataTags) WithArrayOfValues(values [][]string) *ListLimitsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListLimitsResponse_FieldSubPathArrayOfValues)
}

func (s ListLimitsResponsePathSelectorLimitsMetadataTags) WithItemValue(value string) *ListLimitsResponse_FieldSubPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*ListLimitsResponse_FieldSubPathArrayItemValue)
}

type ListLimitsResponsePathSelectorLimitsMetadataLabels struct{}

func (ListLimitsResponsePathSelectorLimitsMetadataLabels) FieldPath() *ListLimitsResponse_FieldSubPath {
	return &ListLimitsResponse_FieldSubPath{
		selector: ListLimitsResponse_FieldPathSelectorLimits,
		subPath:  limit.NewLimitFieldPathBuilder().Metadata().Labels().FieldPath(),
	}
}

func (s ListLimitsResponsePathSelectorLimitsMetadataLabels) WithValue(value map[string]string) *ListLimitsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListLimitsResponse_FieldSubPathValue)
}

func (s ListLimitsResponsePathSelectorLimitsMetadataLabels) WithArrayOfValues(values []map[string]string) *ListLimitsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListLimitsResponse_FieldSubPathArrayOfValues)
}

func (ListLimitsResponsePathSelectorLimitsMetadataLabels) WithKey(key string) ListLimitsResponseMapPathSelectorLimitsMetadataLabels {
	return ListLimitsResponseMapPathSelectorLimitsMetadataLabels{key: key}
}

type ListLimitsResponseMapPathSelectorLimitsMetadataLabels struct {
	key string
}

func (s ListLimitsResponseMapPathSelectorLimitsMetadataLabels) FieldPath() *ListLimitsResponse_FieldSubPath {
	return &ListLimitsResponse_FieldSubPath{
		selector: ListLimitsResponse_FieldPathSelectorLimits,
		subPath:  limit.NewLimitFieldPathBuilder().Metadata().Labels().WithKey(s.key).FieldPath(),
	}
}

func (s ListLimitsResponseMapPathSelectorLimitsMetadataLabels) WithValue(value string) *ListLimitsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListLimitsResponse_FieldSubPathValue)
}

func (s ListLimitsResponseMapPathSelectorLimitsMetadataLabels) WithArrayOfValues(values []string) *ListLimitsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListLimitsResponse_FieldSubPathArrayOfValues)
}

type ListLimitsResponsePathSelectorLimitsMetadataAnnotations struct{}

func (ListLimitsResponsePathSelectorLimitsMetadataAnnotations) FieldPath() *ListLimitsResponse_FieldSubPath {
	return &ListLimitsResponse_FieldSubPath{
		selector: ListLimitsResponse_FieldPathSelectorLimits,
		subPath:  limit.NewLimitFieldPathBuilder().Metadata().Annotations().FieldPath(),
	}
}

func (s ListLimitsResponsePathSelectorLimitsMetadataAnnotations) WithValue(value map[string]string) *ListLimitsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListLimitsResponse_FieldSubPathValue)
}

func (s ListLimitsResponsePathSelectorLimitsMetadataAnnotations) WithArrayOfValues(values []map[string]string) *ListLimitsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListLimitsResponse_FieldSubPathArrayOfValues)
}

func (ListLimitsResponsePathSelectorLimitsMetadataAnnotations) WithKey(key string) ListLimitsResponseMapPathSelectorLimitsMetadataAnnotations {
	return ListLimitsResponseMapPathSelectorLimitsMetadataAnnotations{key: key}
}

type ListLimitsResponseMapPathSelectorLimitsMetadataAnnotations struct {
	key string
}

func (s ListLimitsResponseMapPathSelectorLimitsMetadataAnnotations) FieldPath() *ListLimitsResponse_FieldSubPath {
	return &ListLimitsResponse_FieldSubPath{
		selector: ListLimitsResponse_FieldPathSelectorLimits,
		subPath:  limit.NewLimitFieldPathBuilder().Metadata().Annotations().WithKey(s.key).FieldPath(),
	}
}

func (s ListLimitsResponseMapPathSelectorLimitsMetadataAnnotations) WithValue(value string) *ListLimitsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListLimitsResponse_FieldSubPathValue)
}

func (s ListLimitsResponseMapPathSelectorLimitsMetadataAnnotations) WithArrayOfValues(values []string) *ListLimitsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListLimitsResponse_FieldSubPathArrayOfValues)
}

type ListLimitsResponsePathSelectorLimitsMetadataGeneration struct{}

func (ListLimitsResponsePathSelectorLimitsMetadataGeneration) FieldPath() *ListLimitsResponse_FieldSubPath {
	return &ListLimitsResponse_FieldSubPath{
		selector: ListLimitsResponse_FieldPathSelectorLimits,
		subPath:  limit.NewLimitFieldPathBuilder().Metadata().Generation().FieldPath(),
	}
}

func (s ListLimitsResponsePathSelectorLimitsMetadataGeneration) WithValue(value int64) *ListLimitsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListLimitsResponse_FieldSubPathValue)
}

func (s ListLimitsResponsePathSelectorLimitsMetadataGeneration) WithArrayOfValues(values []int64) *ListLimitsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListLimitsResponse_FieldSubPathArrayOfValues)
}

type ListLimitsResponsePathSelectorLimitsMetadataResourceVersion struct{}

func (ListLimitsResponsePathSelectorLimitsMetadataResourceVersion) FieldPath() *ListLimitsResponse_FieldSubPath {
	return &ListLimitsResponse_FieldSubPath{
		selector: ListLimitsResponse_FieldPathSelectorLimits,
		subPath:  limit.NewLimitFieldPathBuilder().Metadata().ResourceVersion().FieldPath(),
	}
}

func (s ListLimitsResponsePathSelectorLimitsMetadataResourceVersion) WithValue(value string) *ListLimitsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListLimitsResponse_FieldSubPathValue)
}

func (s ListLimitsResponsePathSelectorLimitsMetadataResourceVersion) WithArrayOfValues(values []string) *ListLimitsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListLimitsResponse_FieldSubPathArrayOfValues)
}

type ListLimitsResponsePathSelectorLimitsMetadataOwnerReferences struct{}

func (ListLimitsResponsePathSelectorLimitsMetadataOwnerReferences) FieldPath() *ListLimitsResponse_FieldSubPath {
	return &ListLimitsResponse_FieldSubPath{
		selector: ListLimitsResponse_FieldPathSelectorLimits,
		subPath:  limit.NewLimitFieldPathBuilder().Metadata().OwnerReferences().FieldPath(),
	}
}

func (s ListLimitsResponsePathSelectorLimitsMetadataOwnerReferences) WithValue(value []*ntt_meta.OwnerReference) *ListLimitsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListLimitsResponse_FieldSubPathValue)
}

func (s ListLimitsResponsePathSelectorLimitsMetadataOwnerReferences) WithArrayOfValues(values [][]*ntt_meta.OwnerReference) *ListLimitsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListLimitsResponse_FieldSubPathArrayOfValues)
}

func (s ListLimitsResponsePathSelectorLimitsMetadataOwnerReferences) WithItemValue(value *ntt_meta.OwnerReference) *ListLimitsResponse_FieldSubPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*ListLimitsResponse_FieldSubPathArrayItemValue)
}

func (ListLimitsResponsePathSelectorLimitsMetadataOwnerReferences) Kind() ListLimitsResponsePathSelectorLimitsMetadataOwnerReferencesKind {
	return ListLimitsResponsePathSelectorLimitsMetadataOwnerReferencesKind{}
}

func (ListLimitsResponsePathSelectorLimitsMetadataOwnerReferences) Version() ListLimitsResponsePathSelectorLimitsMetadataOwnerReferencesVersion {
	return ListLimitsResponsePathSelectorLimitsMetadataOwnerReferencesVersion{}
}

func (ListLimitsResponsePathSelectorLimitsMetadataOwnerReferences) Name() ListLimitsResponsePathSelectorLimitsMetadataOwnerReferencesName {
	return ListLimitsResponsePathSelectorLimitsMetadataOwnerReferencesName{}
}

func (ListLimitsResponsePathSelectorLimitsMetadataOwnerReferences) Region() ListLimitsResponsePathSelectorLimitsMetadataOwnerReferencesRegion {
	return ListLimitsResponsePathSelectorLimitsMetadataOwnerReferencesRegion{}
}

func (ListLimitsResponsePathSelectorLimitsMetadataOwnerReferences) Controller() ListLimitsResponsePathSelectorLimitsMetadataOwnerReferencesController {
	return ListLimitsResponsePathSelectorLimitsMetadataOwnerReferencesController{}
}

func (ListLimitsResponsePathSelectorLimitsMetadataOwnerReferences) BlockOwnerDeletion() ListLimitsResponsePathSelectorLimitsMetadataOwnerReferencesBlockOwnerDeletion {
	return ListLimitsResponsePathSelectorLimitsMetadataOwnerReferencesBlockOwnerDeletion{}
}

func (ListLimitsResponsePathSelectorLimitsMetadataOwnerReferences) RequiresOwnerReference() ListLimitsResponsePathSelectorLimitsMetadataOwnerReferencesRequiresOwnerReference {
	return ListLimitsResponsePathSelectorLimitsMetadataOwnerReferencesRequiresOwnerReference{}
}

type ListLimitsResponsePathSelectorLimitsMetadataOwnerReferencesKind struct{}

func (ListLimitsResponsePathSelectorLimitsMetadataOwnerReferencesKind) FieldPath() *ListLimitsResponse_FieldSubPath {
	return &ListLimitsResponse_FieldSubPath{
		selector: ListLimitsResponse_FieldPathSelectorLimits,
		subPath:  limit.NewLimitFieldPathBuilder().Metadata().OwnerReferences().Kind().FieldPath(),
	}
}

func (s ListLimitsResponsePathSelectorLimitsMetadataOwnerReferencesKind) WithValue(value string) *ListLimitsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListLimitsResponse_FieldSubPathValue)
}

func (s ListLimitsResponsePathSelectorLimitsMetadataOwnerReferencesKind) WithArrayOfValues(values []string) *ListLimitsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListLimitsResponse_FieldSubPathArrayOfValues)
}

type ListLimitsResponsePathSelectorLimitsMetadataOwnerReferencesVersion struct{}

func (ListLimitsResponsePathSelectorLimitsMetadataOwnerReferencesVersion) FieldPath() *ListLimitsResponse_FieldSubPath {
	return &ListLimitsResponse_FieldSubPath{
		selector: ListLimitsResponse_FieldPathSelectorLimits,
		subPath:  limit.NewLimitFieldPathBuilder().Metadata().OwnerReferences().Version().FieldPath(),
	}
}

func (s ListLimitsResponsePathSelectorLimitsMetadataOwnerReferencesVersion) WithValue(value string) *ListLimitsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListLimitsResponse_FieldSubPathValue)
}

func (s ListLimitsResponsePathSelectorLimitsMetadataOwnerReferencesVersion) WithArrayOfValues(values []string) *ListLimitsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListLimitsResponse_FieldSubPathArrayOfValues)
}

type ListLimitsResponsePathSelectorLimitsMetadataOwnerReferencesName struct{}

func (ListLimitsResponsePathSelectorLimitsMetadataOwnerReferencesName) FieldPath() *ListLimitsResponse_FieldSubPath {
	return &ListLimitsResponse_FieldSubPath{
		selector: ListLimitsResponse_FieldPathSelectorLimits,
		subPath:  limit.NewLimitFieldPathBuilder().Metadata().OwnerReferences().Name().FieldPath(),
	}
}

func (s ListLimitsResponsePathSelectorLimitsMetadataOwnerReferencesName) WithValue(value string) *ListLimitsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListLimitsResponse_FieldSubPathValue)
}

func (s ListLimitsResponsePathSelectorLimitsMetadataOwnerReferencesName) WithArrayOfValues(values []string) *ListLimitsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListLimitsResponse_FieldSubPathArrayOfValues)
}

type ListLimitsResponsePathSelectorLimitsMetadataOwnerReferencesRegion struct{}

func (ListLimitsResponsePathSelectorLimitsMetadataOwnerReferencesRegion) FieldPath() *ListLimitsResponse_FieldSubPath {
	return &ListLimitsResponse_FieldSubPath{
		selector: ListLimitsResponse_FieldPathSelectorLimits,
		subPath:  limit.NewLimitFieldPathBuilder().Metadata().OwnerReferences().Region().FieldPath(),
	}
}

func (s ListLimitsResponsePathSelectorLimitsMetadataOwnerReferencesRegion) WithValue(value string) *ListLimitsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListLimitsResponse_FieldSubPathValue)
}

func (s ListLimitsResponsePathSelectorLimitsMetadataOwnerReferencesRegion) WithArrayOfValues(values []string) *ListLimitsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListLimitsResponse_FieldSubPathArrayOfValues)
}

type ListLimitsResponsePathSelectorLimitsMetadataOwnerReferencesController struct{}

func (ListLimitsResponsePathSelectorLimitsMetadataOwnerReferencesController) FieldPath() *ListLimitsResponse_FieldSubPath {
	return &ListLimitsResponse_FieldSubPath{
		selector: ListLimitsResponse_FieldPathSelectorLimits,
		subPath:  limit.NewLimitFieldPathBuilder().Metadata().OwnerReferences().Controller().FieldPath(),
	}
}

func (s ListLimitsResponsePathSelectorLimitsMetadataOwnerReferencesController) WithValue(value bool) *ListLimitsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListLimitsResponse_FieldSubPathValue)
}

func (s ListLimitsResponsePathSelectorLimitsMetadataOwnerReferencesController) WithArrayOfValues(values []bool) *ListLimitsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListLimitsResponse_FieldSubPathArrayOfValues)
}

type ListLimitsResponsePathSelectorLimitsMetadataOwnerReferencesBlockOwnerDeletion struct{}

func (ListLimitsResponsePathSelectorLimitsMetadataOwnerReferencesBlockOwnerDeletion) FieldPath() *ListLimitsResponse_FieldSubPath {
	return &ListLimitsResponse_FieldSubPath{
		selector: ListLimitsResponse_FieldPathSelectorLimits,
		subPath:  limit.NewLimitFieldPathBuilder().Metadata().OwnerReferences().BlockOwnerDeletion().FieldPath(),
	}
}

func (s ListLimitsResponsePathSelectorLimitsMetadataOwnerReferencesBlockOwnerDeletion) WithValue(value bool) *ListLimitsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListLimitsResponse_FieldSubPathValue)
}

func (s ListLimitsResponsePathSelectorLimitsMetadataOwnerReferencesBlockOwnerDeletion) WithArrayOfValues(values []bool) *ListLimitsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListLimitsResponse_FieldSubPathArrayOfValues)
}

type ListLimitsResponsePathSelectorLimitsMetadataOwnerReferencesRequiresOwnerReference struct{}

func (ListLimitsResponsePathSelectorLimitsMetadataOwnerReferencesRequiresOwnerReference) FieldPath() *ListLimitsResponse_FieldSubPath {
	return &ListLimitsResponse_FieldSubPath{
		selector: ListLimitsResponse_FieldPathSelectorLimits,
		subPath:  limit.NewLimitFieldPathBuilder().Metadata().OwnerReferences().RequiresOwnerReference().FieldPath(),
	}
}

func (s ListLimitsResponsePathSelectorLimitsMetadataOwnerReferencesRequiresOwnerReference) WithValue(value bool) *ListLimitsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListLimitsResponse_FieldSubPathValue)
}

func (s ListLimitsResponsePathSelectorLimitsMetadataOwnerReferencesRequiresOwnerReference) WithArrayOfValues(values []bool) *ListLimitsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListLimitsResponse_FieldSubPathArrayOfValues)
}

type ListLimitsResponsePathSelectorLimitsMetadataShards struct{}

func (ListLimitsResponsePathSelectorLimitsMetadataShards) FieldPath() *ListLimitsResponse_FieldSubPath {
	return &ListLimitsResponse_FieldSubPath{
		selector: ListLimitsResponse_FieldPathSelectorLimits,
		subPath:  limit.NewLimitFieldPathBuilder().Metadata().Shards().FieldPath(),
	}
}

func (s ListLimitsResponsePathSelectorLimitsMetadataShards) WithValue(value map[string]int64) *ListLimitsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListLimitsResponse_FieldSubPathValue)
}

func (s ListLimitsResponsePathSelectorLimitsMetadataShards) WithArrayOfValues(values []map[string]int64) *ListLimitsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListLimitsResponse_FieldSubPathArrayOfValues)
}

func (ListLimitsResponsePathSelectorLimitsMetadataShards) WithKey(key string) ListLimitsResponseMapPathSelectorLimitsMetadataShards {
	return ListLimitsResponseMapPathSelectorLimitsMetadataShards{key: key}
}

type ListLimitsResponseMapPathSelectorLimitsMetadataShards struct {
	key string
}

func (s ListLimitsResponseMapPathSelectorLimitsMetadataShards) FieldPath() *ListLimitsResponse_FieldSubPath {
	return &ListLimitsResponse_FieldSubPath{
		selector: ListLimitsResponse_FieldPathSelectorLimits,
		subPath:  limit.NewLimitFieldPathBuilder().Metadata().Shards().WithKey(s.key).FieldPath(),
	}
}

func (s ListLimitsResponseMapPathSelectorLimitsMetadataShards) WithValue(value int64) *ListLimitsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListLimitsResponse_FieldSubPathValue)
}

func (s ListLimitsResponseMapPathSelectorLimitsMetadataShards) WithArrayOfValues(values []int64) *ListLimitsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListLimitsResponse_FieldSubPathArrayOfValues)
}

type ListLimitsResponsePathSelectorLimitsMetadataSyncing struct{}

func (ListLimitsResponsePathSelectorLimitsMetadataSyncing) FieldPath() *ListLimitsResponse_FieldSubPath {
	return &ListLimitsResponse_FieldSubPath{
		selector: ListLimitsResponse_FieldPathSelectorLimits,
		subPath:  limit.NewLimitFieldPathBuilder().Metadata().Syncing().FieldPath(),
	}
}

func (s ListLimitsResponsePathSelectorLimitsMetadataSyncing) WithValue(value *ntt_meta.SyncingMeta) *ListLimitsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListLimitsResponse_FieldSubPathValue)
}

func (s ListLimitsResponsePathSelectorLimitsMetadataSyncing) WithArrayOfValues(values []*ntt_meta.SyncingMeta) *ListLimitsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListLimitsResponse_FieldSubPathArrayOfValues)
}

func (ListLimitsResponsePathSelectorLimitsMetadataSyncing) OwningRegion() ListLimitsResponsePathSelectorLimitsMetadataSyncingOwningRegion {
	return ListLimitsResponsePathSelectorLimitsMetadataSyncingOwningRegion{}
}

func (ListLimitsResponsePathSelectorLimitsMetadataSyncing) Regions() ListLimitsResponsePathSelectorLimitsMetadataSyncingRegions {
	return ListLimitsResponsePathSelectorLimitsMetadataSyncingRegions{}
}

type ListLimitsResponsePathSelectorLimitsMetadataSyncingOwningRegion struct{}

func (ListLimitsResponsePathSelectorLimitsMetadataSyncingOwningRegion) FieldPath() *ListLimitsResponse_FieldSubPath {
	return &ListLimitsResponse_FieldSubPath{
		selector: ListLimitsResponse_FieldPathSelectorLimits,
		subPath:  limit.NewLimitFieldPathBuilder().Metadata().Syncing().OwningRegion().FieldPath(),
	}
}

func (s ListLimitsResponsePathSelectorLimitsMetadataSyncingOwningRegion) WithValue(value string) *ListLimitsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListLimitsResponse_FieldSubPathValue)
}

func (s ListLimitsResponsePathSelectorLimitsMetadataSyncingOwningRegion) WithArrayOfValues(values []string) *ListLimitsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListLimitsResponse_FieldSubPathArrayOfValues)
}

type ListLimitsResponsePathSelectorLimitsMetadataSyncingRegions struct{}

func (ListLimitsResponsePathSelectorLimitsMetadataSyncingRegions) FieldPath() *ListLimitsResponse_FieldSubPath {
	return &ListLimitsResponse_FieldSubPath{
		selector: ListLimitsResponse_FieldPathSelectorLimits,
		subPath:  limit.NewLimitFieldPathBuilder().Metadata().Syncing().Regions().FieldPath(),
	}
}

func (s ListLimitsResponsePathSelectorLimitsMetadataSyncingRegions) WithValue(value []string) *ListLimitsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListLimitsResponse_FieldSubPathValue)
}

func (s ListLimitsResponsePathSelectorLimitsMetadataSyncingRegions) WithArrayOfValues(values [][]string) *ListLimitsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListLimitsResponse_FieldSubPathArrayOfValues)
}

func (s ListLimitsResponsePathSelectorLimitsMetadataSyncingRegions) WithItemValue(value string) *ListLimitsResponse_FieldSubPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*ListLimitsResponse_FieldSubPathArrayItemValue)
}

type ListLimitsResponsePathSelectorLimitsMetadataLifecycle struct{}

func (ListLimitsResponsePathSelectorLimitsMetadataLifecycle) FieldPath() *ListLimitsResponse_FieldSubPath {
	return &ListLimitsResponse_FieldSubPath{
		selector: ListLimitsResponse_FieldPathSelectorLimits,
		subPath:  limit.NewLimitFieldPathBuilder().Metadata().Lifecycle().FieldPath(),
	}
}

func (s ListLimitsResponsePathSelectorLimitsMetadataLifecycle) WithValue(value *ntt_meta.Lifecycle) *ListLimitsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListLimitsResponse_FieldSubPathValue)
}

func (s ListLimitsResponsePathSelectorLimitsMetadataLifecycle) WithArrayOfValues(values []*ntt_meta.Lifecycle) *ListLimitsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListLimitsResponse_FieldSubPathArrayOfValues)
}

func (ListLimitsResponsePathSelectorLimitsMetadataLifecycle) State() ListLimitsResponsePathSelectorLimitsMetadataLifecycleState {
	return ListLimitsResponsePathSelectorLimitsMetadataLifecycleState{}
}

func (ListLimitsResponsePathSelectorLimitsMetadataLifecycle) BlockDeletion() ListLimitsResponsePathSelectorLimitsMetadataLifecycleBlockDeletion {
	return ListLimitsResponsePathSelectorLimitsMetadataLifecycleBlockDeletion{}
}

type ListLimitsResponsePathSelectorLimitsMetadataLifecycleState struct{}

func (ListLimitsResponsePathSelectorLimitsMetadataLifecycleState) FieldPath() *ListLimitsResponse_FieldSubPath {
	return &ListLimitsResponse_FieldSubPath{
		selector: ListLimitsResponse_FieldPathSelectorLimits,
		subPath:  limit.NewLimitFieldPathBuilder().Metadata().Lifecycle().State().FieldPath(),
	}
}

func (s ListLimitsResponsePathSelectorLimitsMetadataLifecycleState) WithValue(value ntt_meta.Lifecycle_State) *ListLimitsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListLimitsResponse_FieldSubPathValue)
}

func (s ListLimitsResponsePathSelectorLimitsMetadataLifecycleState) WithArrayOfValues(values []ntt_meta.Lifecycle_State) *ListLimitsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListLimitsResponse_FieldSubPathArrayOfValues)
}

type ListLimitsResponsePathSelectorLimitsMetadataLifecycleBlockDeletion struct{}

func (ListLimitsResponsePathSelectorLimitsMetadataLifecycleBlockDeletion) FieldPath() *ListLimitsResponse_FieldSubPath {
	return &ListLimitsResponse_FieldSubPath{
		selector: ListLimitsResponse_FieldPathSelectorLimits,
		subPath:  limit.NewLimitFieldPathBuilder().Metadata().Lifecycle().BlockDeletion().FieldPath(),
	}
}

func (s ListLimitsResponsePathSelectorLimitsMetadataLifecycleBlockDeletion) WithValue(value bool) *ListLimitsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListLimitsResponse_FieldSubPathValue)
}

func (s ListLimitsResponsePathSelectorLimitsMetadataLifecycleBlockDeletion) WithArrayOfValues(values []bool) *ListLimitsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListLimitsResponse_FieldSubPathArrayOfValues)
}

type ListLimitsResponsePathSelectorPrevPageToken struct{}

func (ListLimitsResponsePathSelectorPrevPageToken) FieldPath() *ListLimitsResponse_FieldTerminalPath {
	return &ListLimitsResponse_FieldTerminalPath{selector: ListLimitsResponse_FieldPathSelectorPrevPageToken}
}

func (s ListLimitsResponsePathSelectorPrevPageToken) WithValue(value *limit.PagerCursor) *ListLimitsResponse_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*ListLimitsResponse_FieldTerminalPathValue)
}

func (s ListLimitsResponsePathSelectorPrevPageToken) WithArrayOfValues(values []*limit.PagerCursor) *ListLimitsResponse_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListLimitsResponse_FieldTerminalPathArrayOfValues)
}

type ListLimitsResponsePathSelectorNextPageToken struct{}

func (ListLimitsResponsePathSelectorNextPageToken) FieldPath() *ListLimitsResponse_FieldTerminalPath {
	return &ListLimitsResponse_FieldTerminalPath{selector: ListLimitsResponse_FieldPathSelectorNextPageToken}
}

func (s ListLimitsResponsePathSelectorNextPageToken) WithValue(value *limit.PagerCursor) *ListLimitsResponse_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*ListLimitsResponse_FieldTerminalPathValue)
}

func (s ListLimitsResponsePathSelectorNextPageToken) WithArrayOfValues(values []*limit.PagerCursor) *ListLimitsResponse_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListLimitsResponse_FieldTerminalPathArrayOfValues)
}

type WatchLimitRequestFieldPathBuilder struct{}

func NewWatchLimitRequestFieldPathBuilder() WatchLimitRequestFieldPathBuilder {
	return WatchLimitRequestFieldPathBuilder{}
}
func (WatchLimitRequestFieldPathBuilder) Name() WatchLimitRequestPathSelectorName {
	return WatchLimitRequestPathSelectorName{}
}
func (WatchLimitRequestFieldPathBuilder) FieldMask() WatchLimitRequestPathSelectorFieldMask {
	return WatchLimitRequestPathSelectorFieldMask{}
}
func (WatchLimitRequestFieldPathBuilder) View() WatchLimitRequestPathSelectorView {
	return WatchLimitRequestPathSelectorView{}
}

type WatchLimitRequestPathSelectorName struct{}

func (WatchLimitRequestPathSelectorName) FieldPath() *WatchLimitRequest_FieldTerminalPath {
	return &WatchLimitRequest_FieldTerminalPath{selector: WatchLimitRequest_FieldPathSelectorName}
}

func (s WatchLimitRequestPathSelectorName) WithValue(value *limit.Reference) *WatchLimitRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*WatchLimitRequest_FieldTerminalPathValue)
}

func (s WatchLimitRequestPathSelectorName) WithArrayOfValues(values []*limit.Reference) *WatchLimitRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*WatchLimitRequest_FieldTerminalPathArrayOfValues)
}

type WatchLimitRequestPathSelectorFieldMask struct{}

func (WatchLimitRequestPathSelectorFieldMask) FieldPath() *WatchLimitRequest_FieldTerminalPath {
	return &WatchLimitRequest_FieldTerminalPath{selector: WatchLimitRequest_FieldPathSelectorFieldMask}
}

func (s WatchLimitRequestPathSelectorFieldMask) WithValue(value *limit.Limit_FieldMask) *WatchLimitRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*WatchLimitRequest_FieldTerminalPathValue)
}

func (s WatchLimitRequestPathSelectorFieldMask) WithArrayOfValues(values []*limit.Limit_FieldMask) *WatchLimitRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*WatchLimitRequest_FieldTerminalPathArrayOfValues)
}

type WatchLimitRequestPathSelectorView struct{}

func (WatchLimitRequestPathSelectorView) FieldPath() *WatchLimitRequest_FieldTerminalPath {
	return &WatchLimitRequest_FieldTerminalPath{selector: WatchLimitRequest_FieldPathSelectorView}
}

func (s WatchLimitRequestPathSelectorView) WithValue(value view.View) *WatchLimitRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*WatchLimitRequest_FieldTerminalPathValue)
}

func (s WatchLimitRequestPathSelectorView) WithArrayOfValues(values []view.View) *WatchLimitRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*WatchLimitRequest_FieldTerminalPathArrayOfValues)
}

type WatchLimitResponseFieldPathBuilder struct{}

func NewWatchLimitResponseFieldPathBuilder() WatchLimitResponseFieldPathBuilder {
	return WatchLimitResponseFieldPathBuilder{}
}
func (WatchLimitResponseFieldPathBuilder) Change() WatchLimitResponsePathSelectorChange {
	return WatchLimitResponsePathSelectorChange{}
}

type WatchLimitResponsePathSelectorChange struct{}

func (WatchLimitResponsePathSelectorChange) FieldPath() *WatchLimitResponse_FieldTerminalPath {
	return &WatchLimitResponse_FieldTerminalPath{selector: WatchLimitResponse_FieldPathSelectorChange}
}

func (s WatchLimitResponsePathSelectorChange) WithValue(value *limit.LimitChange) *WatchLimitResponse_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*WatchLimitResponse_FieldTerminalPathValue)
}

func (s WatchLimitResponsePathSelectorChange) WithArrayOfValues(values []*limit.LimitChange) *WatchLimitResponse_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*WatchLimitResponse_FieldTerminalPathArrayOfValues)
}

type WatchLimitsRequestFieldPathBuilder struct{}

func NewWatchLimitsRequestFieldPathBuilder() WatchLimitsRequestFieldPathBuilder {
	return WatchLimitsRequestFieldPathBuilder{}
}
func (WatchLimitsRequestFieldPathBuilder) Type() WatchLimitsRequestPathSelectorType {
	return WatchLimitsRequestPathSelectorType{}
}
func (WatchLimitsRequestFieldPathBuilder) Parent() WatchLimitsRequestPathSelectorParent {
	return WatchLimitsRequestPathSelectorParent{}
}
func (WatchLimitsRequestFieldPathBuilder) PageSize() WatchLimitsRequestPathSelectorPageSize {
	return WatchLimitsRequestPathSelectorPageSize{}
}
func (WatchLimitsRequestFieldPathBuilder) PageToken() WatchLimitsRequestPathSelectorPageToken {
	return WatchLimitsRequestPathSelectorPageToken{}
}
func (WatchLimitsRequestFieldPathBuilder) OrderBy() WatchLimitsRequestPathSelectorOrderBy {
	return WatchLimitsRequestPathSelectorOrderBy{}
}
func (WatchLimitsRequestFieldPathBuilder) ResumeToken() WatchLimitsRequestPathSelectorResumeToken {
	return WatchLimitsRequestPathSelectorResumeToken{}
}
func (WatchLimitsRequestFieldPathBuilder) Filter() WatchLimitsRequestPathSelectorFilter {
	return WatchLimitsRequestPathSelectorFilter{}
}
func (WatchLimitsRequestFieldPathBuilder) FieldMask() WatchLimitsRequestPathSelectorFieldMask {
	return WatchLimitsRequestPathSelectorFieldMask{}
}
func (WatchLimitsRequestFieldPathBuilder) View() WatchLimitsRequestPathSelectorView {
	return WatchLimitsRequestPathSelectorView{}
}
func (WatchLimitsRequestFieldPathBuilder) MaxChunkSize() WatchLimitsRequestPathSelectorMaxChunkSize {
	return WatchLimitsRequestPathSelectorMaxChunkSize{}
}

type WatchLimitsRequestPathSelectorType struct{}

func (WatchLimitsRequestPathSelectorType) FieldPath() *WatchLimitsRequest_FieldTerminalPath {
	return &WatchLimitsRequest_FieldTerminalPath{selector: WatchLimitsRequest_FieldPathSelectorType}
}

func (s WatchLimitsRequestPathSelectorType) WithValue(value watch_type.WatchType) *WatchLimitsRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*WatchLimitsRequest_FieldTerminalPathValue)
}

func (s WatchLimitsRequestPathSelectorType) WithArrayOfValues(values []watch_type.WatchType) *WatchLimitsRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*WatchLimitsRequest_FieldTerminalPathArrayOfValues)
}

type WatchLimitsRequestPathSelectorParent struct{}

func (WatchLimitsRequestPathSelectorParent) FieldPath() *WatchLimitsRequest_FieldTerminalPath {
	return &WatchLimitsRequest_FieldTerminalPath{selector: WatchLimitsRequest_FieldPathSelectorParent}
}

func (s WatchLimitsRequestPathSelectorParent) WithValue(value *limit.ParentReference) *WatchLimitsRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*WatchLimitsRequest_FieldTerminalPathValue)
}

func (s WatchLimitsRequestPathSelectorParent) WithArrayOfValues(values []*limit.ParentReference) *WatchLimitsRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*WatchLimitsRequest_FieldTerminalPathArrayOfValues)
}

type WatchLimitsRequestPathSelectorPageSize struct{}

func (WatchLimitsRequestPathSelectorPageSize) FieldPath() *WatchLimitsRequest_FieldTerminalPath {
	return &WatchLimitsRequest_FieldTerminalPath{selector: WatchLimitsRequest_FieldPathSelectorPageSize}
}

func (s WatchLimitsRequestPathSelectorPageSize) WithValue(value int32) *WatchLimitsRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*WatchLimitsRequest_FieldTerminalPathValue)
}

func (s WatchLimitsRequestPathSelectorPageSize) WithArrayOfValues(values []int32) *WatchLimitsRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*WatchLimitsRequest_FieldTerminalPathArrayOfValues)
}

type WatchLimitsRequestPathSelectorPageToken struct{}

func (WatchLimitsRequestPathSelectorPageToken) FieldPath() *WatchLimitsRequest_FieldTerminalPath {
	return &WatchLimitsRequest_FieldTerminalPath{selector: WatchLimitsRequest_FieldPathSelectorPageToken}
}

func (s WatchLimitsRequestPathSelectorPageToken) WithValue(value *limit.PagerCursor) *WatchLimitsRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*WatchLimitsRequest_FieldTerminalPathValue)
}

func (s WatchLimitsRequestPathSelectorPageToken) WithArrayOfValues(values []*limit.PagerCursor) *WatchLimitsRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*WatchLimitsRequest_FieldTerminalPathArrayOfValues)
}

type WatchLimitsRequestPathSelectorOrderBy struct{}

func (WatchLimitsRequestPathSelectorOrderBy) FieldPath() *WatchLimitsRequest_FieldTerminalPath {
	return &WatchLimitsRequest_FieldTerminalPath{selector: WatchLimitsRequest_FieldPathSelectorOrderBy}
}

func (s WatchLimitsRequestPathSelectorOrderBy) WithValue(value *limit.OrderBy) *WatchLimitsRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*WatchLimitsRequest_FieldTerminalPathValue)
}

func (s WatchLimitsRequestPathSelectorOrderBy) WithArrayOfValues(values []*limit.OrderBy) *WatchLimitsRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*WatchLimitsRequest_FieldTerminalPathArrayOfValues)
}

type WatchLimitsRequestPathSelectorResumeToken struct{}

func (WatchLimitsRequestPathSelectorResumeToken) FieldPath() *WatchLimitsRequest_FieldTerminalPath {
	return &WatchLimitsRequest_FieldTerminalPath{selector: WatchLimitsRequest_FieldPathSelectorResumeToken}
}

func (s WatchLimitsRequestPathSelectorResumeToken) WithValue(value string) *WatchLimitsRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*WatchLimitsRequest_FieldTerminalPathValue)
}

func (s WatchLimitsRequestPathSelectorResumeToken) WithArrayOfValues(values []string) *WatchLimitsRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*WatchLimitsRequest_FieldTerminalPathArrayOfValues)
}

type WatchLimitsRequestPathSelectorFilter struct{}

func (WatchLimitsRequestPathSelectorFilter) FieldPath() *WatchLimitsRequest_FieldTerminalPath {
	return &WatchLimitsRequest_FieldTerminalPath{selector: WatchLimitsRequest_FieldPathSelectorFilter}
}

func (s WatchLimitsRequestPathSelectorFilter) WithValue(value *limit.Filter) *WatchLimitsRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*WatchLimitsRequest_FieldTerminalPathValue)
}

func (s WatchLimitsRequestPathSelectorFilter) WithArrayOfValues(values []*limit.Filter) *WatchLimitsRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*WatchLimitsRequest_FieldTerminalPathArrayOfValues)
}

type WatchLimitsRequestPathSelectorFieldMask struct{}

func (WatchLimitsRequestPathSelectorFieldMask) FieldPath() *WatchLimitsRequest_FieldTerminalPath {
	return &WatchLimitsRequest_FieldTerminalPath{selector: WatchLimitsRequest_FieldPathSelectorFieldMask}
}

func (s WatchLimitsRequestPathSelectorFieldMask) WithValue(value *limit.Limit_FieldMask) *WatchLimitsRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*WatchLimitsRequest_FieldTerminalPathValue)
}

func (s WatchLimitsRequestPathSelectorFieldMask) WithArrayOfValues(values []*limit.Limit_FieldMask) *WatchLimitsRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*WatchLimitsRequest_FieldTerminalPathArrayOfValues)
}

type WatchLimitsRequestPathSelectorView struct{}

func (WatchLimitsRequestPathSelectorView) FieldPath() *WatchLimitsRequest_FieldTerminalPath {
	return &WatchLimitsRequest_FieldTerminalPath{selector: WatchLimitsRequest_FieldPathSelectorView}
}

func (s WatchLimitsRequestPathSelectorView) WithValue(value view.View) *WatchLimitsRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*WatchLimitsRequest_FieldTerminalPathValue)
}

func (s WatchLimitsRequestPathSelectorView) WithArrayOfValues(values []view.View) *WatchLimitsRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*WatchLimitsRequest_FieldTerminalPathArrayOfValues)
}

type WatchLimitsRequestPathSelectorMaxChunkSize struct{}

func (WatchLimitsRequestPathSelectorMaxChunkSize) FieldPath() *WatchLimitsRequest_FieldTerminalPath {
	return &WatchLimitsRequest_FieldTerminalPath{selector: WatchLimitsRequest_FieldPathSelectorMaxChunkSize}
}

func (s WatchLimitsRequestPathSelectorMaxChunkSize) WithValue(value int32) *WatchLimitsRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*WatchLimitsRequest_FieldTerminalPathValue)
}

func (s WatchLimitsRequestPathSelectorMaxChunkSize) WithArrayOfValues(values []int32) *WatchLimitsRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*WatchLimitsRequest_FieldTerminalPathArrayOfValues)
}

type WatchLimitsResponseFieldPathBuilder struct{}

func NewWatchLimitsResponseFieldPathBuilder() WatchLimitsResponseFieldPathBuilder {
	return WatchLimitsResponseFieldPathBuilder{}
}
func (WatchLimitsResponseFieldPathBuilder) LimitChanges() WatchLimitsResponsePathSelectorLimitChanges {
	return WatchLimitsResponsePathSelectorLimitChanges{}
}
func (WatchLimitsResponseFieldPathBuilder) IsCurrent() WatchLimitsResponsePathSelectorIsCurrent {
	return WatchLimitsResponsePathSelectorIsCurrent{}
}
func (WatchLimitsResponseFieldPathBuilder) PageTokenChange() WatchLimitsResponsePathSelectorPageTokenChange {
	return WatchLimitsResponsePathSelectorPageTokenChange{}
}
func (WatchLimitsResponseFieldPathBuilder) ResumeToken() WatchLimitsResponsePathSelectorResumeToken {
	return WatchLimitsResponsePathSelectorResumeToken{}
}
func (WatchLimitsResponseFieldPathBuilder) SnapshotSize() WatchLimitsResponsePathSelectorSnapshotSize {
	return WatchLimitsResponsePathSelectorSnapshotSize{}
}
func (WatchLimitsResponseFieldPathBuilder) IsSoftReset() WatchLimitsResponsePathSelectorIsSoftReset {
	return WatchLimitsResponsePathSelectorIsSoftReset{}
}
func (WatchLimitsResponseFieldPathBuilder) IsHardReset() WatchLimitsResponsePathSelectorIsHardReset {
	return WatchLimitsResponsePathSelectorIsHardReset{}
}

type WatchLimitsResponsePathSelectorLimitChanges struct{}

func (WatchLimitsResponsePathSelectorLimitChanges) FieldPath() *WatchLimitsResponse_FieldTerminalPath {
	return &WatchLimitsResponse_FieldTerminalPath{selector: WatchLimitsResponse_FieldPathSelectorLimitChanges}
}

func (s WatchLimitsResponsePathSelectorLimitChanges) WithValue(value []*limit.LimitChange) *WatchLimitsResponse_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*WatchLimitsResponse_FieldTerminalPathValue)
}

func (s WatchLimitsResponsePathSelectorLimitChanges) WithArrayOfValues(values [][]*limit.LimitChange) *WatchLimitsResponse_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*WatchLimitsResponse_FieldTerminalPathArrayOfValues)
}

func (s WatchLimitsResponsePathSelectorLimitChanges) WithItemValue(value *limit.LimitChange) *WatchLimitsResponse_FieldTerminalPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*WatchLimitsResponse_FieldTerminalPathArrayItemValue)
}

type WatchLimitsResponsePathSelectorIsCurrent struct{}

func (WatchLimitsResponsePathSelectorIsCurrent) FieldPath() *WatchLimitsResponse_FieldTerminalPath {
	return &WatchLimitsResponse_FieldTerminalPath{selector: WatchLimitsResponse_FieldPathSelectorIsCurrent}
}

func (s WatchLimitsResponsePathSelectorIsCurrent) WithValue(value bool) *WatchLimitsResponse_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*WatchLimitsResponse_FieldTerminalPathValue)
}

func (s WatchLimitsResponsePathSelectorIsCurrent) WithArrayOfValues(values []bool) *WatchLimitsResponse_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*WatchLimitsResponse_FieldTerminalPathArrayOfValues)
}

type WatchLimitsResponsePathSelectorPageTokenChange struct{}

func (WatchLimitsResponsePathSelectorPageTokenChange) FieldPath() *WatchLimitsResponse_FieldTerminalPath {
	return &WatchLimitsResponse_FieldTerminalPath{selector: WatchLimitsResponse_FieldPathSelectorPageTokenChange}
}

func (s WatchLimitsResponsePathSelectorPageTokenChange) WithValue(value *WatchLimitsResponse_PageTokenChange) *WatchLimitsResponse_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*WatchLimitsResponse_FieldTerminalPathValue)
}

func (s WatchLimitsResponsePathSelectorPageTokenChange) WithArrayOfValues(values []*WatchLimitsResponse_PageTokenChange) *WatchLimitsResponse_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*WatchLimitsResponse_FieldTerminalPathArrayOfValues)
}

func (WatchLimitsResponsePathSelectorPageTokenChange) WithSubPath(subPath WatchLimitsResponsePageTokenChange_FieldPath) *WatchLimitsResponse_FieldSubPath {
	return &WatchLimitsResponse_FieldSubPath{selector: WatchLimitsResponse_FieldPathSelectorPageTokenChange, subPath: subPath}
}

func (s WatchLimitsResponsePathSelectorPageTokenChange) WithSubValue(subPathValue WatchLimitsResponsePageTokenChange_FieldPathValue) *WatchLimitsResponse_FieldSubPathValue {
	return &WatchLimitsResponse_FieldSubPathValue{WatchLimitsResponse_FieldPath: s.WithSubPath(subPathValue), subPathValue: subPathValue}
}

func (s WatchLimitsResponsePathSelectorPageTokenChange) WithSubArrayOfValues(subPathArrayOfValues WatchLimitsResponsePageTokenChange_FieldPathArrayOfValues) *WatchLimitsResponse_FieldSubPathArrayOfValues {
	return &WatchLimitsResponse_FieldSubPathArrayOfValues{WatchLimitsResponse_FieldPath: s.WithSubPath(subPathArrayOfValues), subPathArrayOfValues: subPathArrayOfValues}
}

func (s WatchLimitsResponsePathSelectorPageTokenChange) WithSubArrayItemValue(subPathArrayItemValue WatchLimitsResponsePageTokenChange_FieldPathArrayItemValue) *WatchLimitsResponse_FieldSubPathArrayItemValue {
	return &WatchLimitsResponse_FieldSubPathArrayItemValue{WatchLimitsResponse_FieldPath: s.WithSubPath(subPathArrayItemValue), subPathItemValue: subPathArrayItemValue}
}

func (WatchLimitsResponsePathSelectorPageTokenChange) PrevPageToken() WatchLimitsResponsePathSelectorPageTokenChangePrevPageToken {
	return WatchLimitsResponsePathSelectorPageTokenChangePrevPageToken{}
}

func (WatchLimitsResponsePathSelectorPageTokenChange) NextPageToken() WatchLimitsResponsePathSelectorPageTokenChangeNextPageToken {
	return WatchLimitsResponsePathSelectorPageTokenChangeNextPageToken{}
}

type WatchLimitsResponsePathSelectorPageTokenChangePrevPageToken struct{}

func (WatchLimitsResponsePathSelectorPageTokenChangePrevPageToken) FieldPath() *WatchLimitsResponse_FieldSubPath {
	return &WatchLimitsResponse_FieldSubPath{
		selector: WatchLimitsResponse_FieldPathSelectorPageTokenChange,
		subPath:  NewWatchLimitsResponsePageTokenChangeFieldPathBuilder().PrevPageToken().FieldPath(),
	}
}

func (s WatchLimitsResponsePathSelectorPageTokenChangePrevPageToken) WithValue(value *limit.PagerCursor) *WatchLimitsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*WatchLimitsResponse_FieldSubPathValue)
}

func (s WatchLimitsResponsePathSelectorPageTokenChangePrevPageToken) WithArrayOfValues(values []*limit.PagerCursor) *WatchLimitsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*WatchLimitsResponse_FieldSubPathArrayOfValues)
}

type WatchLimitsResponsePathSelectorPageTokenChangeNextPageToken struct{}

func (WatchLimitsResponsePathSelectorPageTokenChangeNextPageToken) FieldPath() *WatchLimitsResponse_FieldSubPath {
	return &WatchLimitsResponse_FieldSubPath{
		selector: WatchLimitsResponse_FieldPathSelectorPageTokenChange,
		subPath:  NewWatchLimitsResponsePageTokenChangeFieldPathBuilder().NextPageToken().FieldPath(),
	}
}

func (s WatchLimitsResponsePathSelectorPageTokenChangeNextPageToken) WithValue(value *limit.PagerCursor) *WatchLimitsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*WatchLimitsResponse_FieldSubPathValue)
}

func (s WatchLimitsResponsePathSelectorPageTokenChangeNextPageToken) WithArrayOfValues(values []*limit.PagerCursor) *WatchLimitsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*WatchLimitsResponse_FieldSubPathArrayOfValues)
}

type WatchLimitsResponsePathSelectorResumeToken struct{}

func (WatchLimitsResponsePathSelectorResumeToken) FieldPath() *WatchLimitsResponse_FieldTerminalPath {
	return &WatchLimitsResponse_FieldTerminalPath{selector: WatchLimitsResponse_FieldPathSelectorResumeToken}
}

func (s WatchLimitsResponsePathSelectorResumeToken) WithValue(value string) *WatchLimitsResponse_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*WatchLimitsResponse_FieldTerminalPathValue)
}

func (s WatchLimitsResponsePathSelectorResumeToken) WithArrayOfValues(values []string) *WatchLimitsResponse_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*WatchLimitsResponse_FieldTerminalPathArrayOfValues)
}

type WatchLimitsResponsePathSelectorSnapshotSize struct{}

func (WatchLimitsResponsePathSelectorSnapshotSize) FieldPath() *WatchLimitsResponse_FieldTerminalPath {
	return &WatchLimitsResponse_FieldTerminalPath{selector: WatchLimitsResponse_FieldPathSelectorSnapshotSize}
}

func (s WatchLimitsResponsePathSelectorSnapshotSize) WithValue(value int64) *WatchLimitsResponse_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*WatchLimitsResponse_FieldTerminalPathValue)
}

func (s WatchLimitsResponsePathSelectorSnapshotSize) WithArrayOfValues(values []int64) *WatchLimitsResponse_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*WatchLimitsResponse_FieldTerminalPathArrayOfValues)
}

type WatchLimitsResponsePathSelectorIsSoftReset struct{}

func (WatchLimitsResponsePathSelectorIsSoftReset) FieldPath() *WatchLimitsResponse_FieldTerminalPath {
	return &WatchLimitsResponse_FieldTerminalPath{selector: WatchLimitsResponse_FieldPathSelectorIsSoftReset}
}

func (s WatchLimitsResponsePathSelectorIsSoftReset) WithValue(value bool) *WatchLimitsResponse_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*WatchLimitsResponse_FieldTerminalPathValue)
}

func (s WatchLimitsResponsePathSelectorIsSoftReset) WithArrayOfValues(values []bool) *WatchLimitsResponse_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*WatchLimitsResponse_FieldTerminalPathArrayOfValues)
}

type WatchLimitsResponsePathSelectorIsHardReset struct{}

func (WatchLimitsResponsePathSelectorIsHardReset) FieldPath() *WatchLimitsResponse_FieldTerminalPath {
	return &WatchLimitsResponse_FieldTerminalPath{selector: WatchLimitsResponse_FieldPathSelectorIsHardReset}
}

func (s WatchLimitsResponsePathSelectorIsHardReset) WithValue(value bool) *WatchLimitsResponse_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*WatchLimitsResponse_FieldTerminalPathValue)
}

func (s WatchLimitsResponsePathSelectorIsHardReset) WithArrayOfValues(values []bool) *WatchLimitsResponse_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*WatchLimitsResponse_FieldTerminalPathArrayOfValues)
}

type WatchLimitsResponsePageTokenChangeFieldPathBuilder struct{}

func NewWatchLimitsResponsePageTokenChangeFieldPathBuilder() WatchLimitsResponsePageTokenChangeFieldPathBuilder {
	return WatchLimitsResponsePageTokenChangeFieldPathBuilder{}
}
func (WatchLimitsResponsePageTokenChangeFieldPathBuilder) PrevPageToken() WatchLimitsResponse_PageTokenChangePathSelectorPrevPageToken {
	return WatchLimitsResponse_PageTokenChangePathSelectorPrevPageToken{}
}
func (WatchLimitsResponsePageTokenChangeFieldPathBuilder) NextPageToken() WatchLimitsResponse_PageTokenChangePathSelectorNextPageToken {
	return WatchLimitsResponse_PageTokenChangePathSelectorNextPageToken{}
}

type WatchLimitsResponse_PageTokenChangePathSelectorPrevPageToken struct{}

func (WatchLimitsResponse_PageTokenChangePathSelectorPrevPageToken) FieldPath() *WatchLimitsResponsePageTokenChange_FieldTerminalPath {
	return &WatchLimitsResponsePageTokenChange_FieldTerminalPath{selector: WatchLimitsResponsePageTokenChange_FieldPathSelectorPrevPageToken}
}

func (s WatchLimitsResponse_PageTokenChangePathSelectorPrevPageToken) WithValue(value *limit.PagerCursor) *WatchLimitsResponsePageTokenChange_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*WatchLimitsResponsePageTokenChange_FieldTerminalPathValue)
}

func (s WatchLimitsResponse_PageTokenChangePathSelectorPrevPageToken) WithArrayOfValues(values []*limit.PagerCursor) *WatchLimitsResponsePageTokenChange_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*WatchLimitsResponsePageTokenChange_FieldTerminalPathArrayOfValues)
}

type WatchLimitsResponse_PageTokenChangePathSelectorNextPageToken struct{}

func (WatchLimitsResponse_PageTokenChangePathSelectorNextPageToken) FieldPath() *WatchLimitsResponsePageTokenChange_FieldTerminalPath {
	return &WatchLimitsResponsePageTokenChange_FieldTerminalPath{selector: WatchLimitsResponsePageTokenChange_FieldPathSelectorNextPageToken}
}

func (s WatchLimitsResponse_PageTokenChangePathSelectorNextPageToken) WithValue(value *limit.PagerCursor) *WatchLimitsResponsePageTokenChange_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*WatchLimitsResponsePageTokenChange_FieldTerminalPathValue)
}

func (s WatchLimitsResponse_PageTokenChangePathSelectorNextPageToken) WithArrayOfValues(values []*limit.PagerCursor) *WatchLimitsResponsePageTokenChange_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*WatchLimitsResponsePageTokenChange_FieldTerminalPathArrayOfValues)
}

type UpdateLimitRequestFieldPathBuilder struct{}

func NewUpdateLimitRequestFieldPathBuilder() UpdateLimitRequestFieldPathBuilder {
	return UpdateLimitRequestFieldPathBuilder{}
}
func (UpdateLimitRequestFieldPathBuilder) Limit() UpdateLimitRequestPathSelectorLimit {
	return UpdateLimitRequestPathSelectorLimit{}
}
func (UpdateLimitRequestFieldPathBuilder) UpdateMask() UpdateLimitRequestPathSelectorUpdateMask {
	return UpdateLimitRequestPathSelectorUpdateMask{}
}
func (UpdateLimitRequestFieldPathBuilder) Cas() UpdateLimitRequestPathSelectorCas {
	return UpdateLimitRequestPathSelectorCas{}
}

type UpdateLimitRequestPathSelectorLimit struct{}

func (UpdateLimitRequestPathSelectorLimit) FieldPath() *UpdateLimitRequest_FieldTerminalPath {
	return &UpdateLimitRequest_FieldTerminalPath{selector: UpdateLimitRequest_FieldPathSelectorLimit}
}

func (s UpdateLimitRequestPathSelectorLimit) WithValue(value *limit.Limit) *UpdateLimitRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateLimitRequest_FieldTerminalPathValue)
}

func (s UpdateLimitRequestPathSelectorLimit) WithArrayOfValues(values []*limit.Limit) *UpdateLimitRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateLimitRequest_FieldTerminalPathArrayOfValues)
}

func (UpdateLimitRequestPathSelectorLimit) WithSubPath(subPath limit.Limit_FieldPath) *UpdateLimitRequest_FieldSubPath {
	return &UpdateLimitRequest_FieldSubPath{selector: UpdateLimitRequest_FieldPathSelectorLimit, subPath: subPath}
}

func (s UpdateLimitRequestPathSelectorLimit) WithSubValue(subPathValue limit.Limit_FieldPathValue) *UpdateLimitRequest_FieldSubPathValue {
	return &UpdateLimitRequest_FieldSubPathValue{UpdateLimitRequest_FieldPath: s.WithSubPath(subPathValue), subPathValue: subPathValue}
}

func (s UpdateLimitRequestPathSelectorLimit) WithSubArrayOfValues(subPathArrayOfValues limit.Limit_FieldPathArrayOfValues) *UpdateLimitRequest_FieldSubPathArrayOfValues {
	return &UpdateLimitRequest_FieldSubPathArrayOfValues{UpdateLimitRequest_FieldPath: s.WithSubPath(subPathArrayOfValues), subPathArrayOfValues: subPathArrayOfValues}
}

func (s UpdateLimitRequestPathSelectorLimit) WithSubArrayItemValue(subPathArrayItemValue limit.Limit_FieldPathArrayItemValue) *UpdateLimitRequest_FieldSubPathArrayItemValue {
	return &UpdateLimitRequest_FieldSubPathArrayItemValue{UpdateLimitRequest_FieldPath: s.WithSubPath(subPathArrayItemValue), subPathItemValue: subPathArrayItemValue}
}

func (UpdateLimitRequestPathSelectorLimit) Name() UpdateLimitRequestPathSelectorLimitName {
	return UpdateLimitRequestPathSelectorLimitName{}
}

func (UpdateLimitRequestPathSelectorLimit) Service() UpdateLimitRequestPathSelectorLimitService {
	return UpdateLimitRequestPathSelectorLimitService{}
}

func (UpdateLimitRequestPathSelectorLimit) Resource() UpdateLimitRequestPathSelectorLimitResource {
	return UpdateLimitRequestPathSelectorLimitResource{}
}

func (UpdateLimitRequestPathSelectorLimit) Region() UpdateLimitRequestPathSelectorLimitRegion {
	return UpdateLimitRequestPathSelectorLimitRegion{}
}

func (UpdateLimitRequestPathSelectorLimit) ConfiguredLimit() UpdateLimitRequestPathSelectorLimitConfiguredLimit {
	return UpdateLimitRequestPathSelectorLimitConfiguredLimit{}
}

func (UpdateLimitRequestPathSelectorLimit) ActiveLimit() UpdateLimitRequestPathSelectorLimitActiveLimit {
	return UpdateLimitRequestPathSelectorLimitActiveLimit{}
}

func (UpdateLimitRequestPathSelectorLimit) Usage() UpdateLimitRequestPathSelectorLimitUsage {
	return UpdateLimitRequestPathSelectorLimitUsage{}
}

func (UpdateLimitRequestPathSelectorLimit) Source() UpdateLimitRequestPathSelectorLimitSource {
	return UpdateLimitRequestPathSelectorLimitSource{}
}

func (UpdateLimitRequestPathSelectorLimit) Metadata() UpdateLimitRequestPathSelectorLimitMetadata {
	return UpdateLimitRequestPathSelectorLimitMetadata{}
}

type UpdateLimitRequestPathSelectorLimitName struct{}

func (UpdateLimitRequestPathSelectorLimitName) FieldPath() *UpdateLimitRequest_FieldSubPath {
	return &UpdateLimitRequest_FieldSubPath{
		selector: UpdateLimitRequest_FieldPathSelectorLimit,
		subPath:  limit.NewLimitFieldPathBuilder().Name().FieldPath(),
	}
}

func (s UpdateLimitRequestPathSelectorLimitName) WithValue(value *limit.Name) *UpdateLimitRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateLimitRequest_FieldSubPathValue)
}

func (s UpdateLimitRequestPathSelectorLimitName) WithArrayOfValues(values []*limit.Name) *UpdateLimitRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateLimitRequest_FieldSubPathArrayOfValues)
}

type UpdateLimitRequestPathSelectorLimitService struct{}

func (UpdateLimitRequestPathSelectorLimitService) FieldPath() *UpdateLimitRequest_FieldSubPath {
	return &UpdateLimitRequest_FieldSubPath{
		selector: UpdateLimitRequest_FieldPathSelectorLimit,
		subPath:  limit.NewLimitFieldPathBuilder().Service().FieldPath(),
	}
}

func (s UpdateLimitRequestPathSelectorLimitService) WithValue(value *meta_service.Reference) *UpdateLimitRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateLimitRequest_FieldSubPathValue)
}

func (s UpdateLimitRequestPathSelectorLimitService) WithArrayOfValues(values []*meta_service.Reference) *UpdateLimitRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateLimitRequest_FieldSubPathArrayOfValues)
}

type UpdateLimitRequestPathSelectorLimitResource struct{}

func (UpdateLimitRequestPathSelectorLimitResource) FieldPath() *UpdateLimitRequest_FieldSubPath {
	return &UpdateLimitRequest_FieldSubPath{
		selector: UpdateLimitRequest_FieldPathSelectorLimit,
		subPath:  limit.NewLimitFieldPathBuilder().Resource().FieldPath(),
	}
}

func (s UpdateLimitRequestPathSelectorLimitResource) WithValue(value *meta_resource.Reference) *UpdateLimitRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateLimitRequest_FieldSubPathValue)
}

func (s UpdateLimitRequestPathSelectorLimitResource) WithArrayOfValues(values []*meta_resource.Reference) *UpdateLimitRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateLimitRequest_FieldSubPathArrayOfValues)
}

type UpdateLimitRequestPathSelectorLimitRegion struct{}

func (UpdateLimitRequestPathSelectorLimitRegion) FieldPath() *UpdateLimitRequest_FieldSubPath {
	return &UpdateLimitRequest_FieldSubPath{
		selector: UpdateLimitRequest_FieldPathSelectorLimit,
		subPath:  limit.NewLimitFieldPathBuilder().Region().FieldPath(),
	}
}

func (s UpdateLimitRequestPathSelectorLimitRegion) WithValue(value string) *UpdateLimitRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateLimitRequest_FieldSubPathValue)
}

func (s UpdateLimitRequestPathSelectorLimitRegion) WithArrayOfValues(values []string) *UpdateLimitRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateLimitRequest_FieldSubPathArrayOfValues)
}

type UpdateLimitRequestPathSelectorLimitConfiguredLimit struct{}

func (UpdateLimitRequestPathSelectorLimitConfiguredLimit) FieldPath() *UpdateLimitRequest_FieldSubPath {
	return &UpdateLimitRequest_FieldSubPath{
		selector: UpdateLimitRequest_FieldPathSelectorLimit,
		subPath:  limit.NewLimitFieldPathBuilder().ConfiguredLimit().FieldPath(),
	}
}

func (s UpdateLimitRequestPathSelectorLimitConfiguredLimit) WithValue(value int64) *UpdateLimitRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateLimitRequest_FieldSubPathValue)
}

func (s UpdateLimitRequestPathSelectorLimitConfiguredLimit) WithArrayOfValues(values []int64) *UpdateLimitRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateLimitRequest_FieldSubPathArrayOfValues)
}

type UpdateLimitRequestPathSelectorLimitActiveLimit struct{}

func (UpdateLimitRequestPathSelectorLimitActiveLimit) FieldPath() *UpdateLimitRequest_FieldSubPath {
	return &UpdateLimitRequest_FieldSubPath{
		selector: UpdateLimitRequest_FieldPathSelectorLimit,
		subPath:  limit.NewLimitFieldPathBuilder().ActiveLimit().FieldPath(),
	}
}

func (s UpdateLimitRequestPathSelectorLimitActiveLimit) WithValue(value int64) *UpdateLimitRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateLimitRequest_FieldSubPathValue)
}

func (s UpdateLimitRequestPathSelectorLimitActiveLimit) WithArrayOfValues(values []int64) *UpdateLimitRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateLimitRequest_FieldSubPathArrayOfValues)
}

type UpdateLimitRequestPathSelectorLimitUsage struct{}

func (UpdateLimitRequestPathSelectorLimitUsage) FieldPath() *UpdateLimitRequest_FieldSubPath {
	return &UpdateLimitRequest_FieldSubPath{
		selector: UpdateLimitRequest_FieldPathSelectorLimit,
		subPath:  limit.NewLimitFieldPathBuilder().Usage().FieldPath(),
	}
}

func (s UpdateLimitRequestPathSelectorLimitUsage) WithValue(value int64) *UpdateLimitRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateLimitRequest_FieldSubPathValue)
}

func (s UpdateLimitRequestPathSelectorLimitUsage) WithArrayOfValues(values []int64) *UpdateLimitRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateLimitRequest_FieldSubPathArrayOfValues)
}

type UpdateLimitRequestPathSelectorLimitSource struct{}

func (UpdateLimitRequestPathSelectorLimitSource) FieldPath() *UpdateLimitRequest_FieldSubPath {
	return &UpdateLimitRequest_FieldSubPath{
		selector: UpdateLimitRequest_FieldPathSelectorLimit,
		subPath:  limit.NewLimitFieldPathBuilder().Source().FieldPath(),
	}
}

func (s UpdateLimitRequestPathSelectorLimitSource) WithValue(value *limit_pool.Reference) *UpdateLimitRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateLimitRequest_FieldSubPathValue)
}

func (s UpdateLimitRequestPathSelectorLimitSource) WithArrayOfValues(values []*limit_pool.Reference) *UpdateLimitRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateLimitRequest_FieldSubPathArrayOfValues)
}

type UpdateLimitRequestPathSelectorLimitMetadata struct{}

func (UpdateLimitRequestPathSelectorLimitMetadata) FieldPath() *UpdateLimitRequest_FieldSubPath {
	return &UpdateLimitRequest_FieldSubPath{
		selector: UpdateLimitRequest_FieldPathSelectorLimit,
		subPath:  limit.NewLimitFieldPathBuilder().Metadata().FieldPath(),
	}
}

func (s UpdateLimitRequestPathSelectorLimitMetadata) WithValue(value *ntt_meta.Meta) *UpdateLimitRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateLimitRequest_FieldSubPathValue)
}

func (s UpdateLimitRequestPathSelectorLimitMetadata) WithArrayOfValues(values []*ntt_meta.Meta) *UpdateLimitRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateLimitRequest_FieldSubPathArrayOfValues)
}

func (UpdateLimitRequestPathSelectorLimitMetadata) CreateTime() UpdateLimitRequestPathSelectorLimitMetadataCreateTime {
	return UpdateLimitRequestPathSelectorLimitMetadataCreateTime{}
}

func (UpdateLimitRequestPathSelectorLimitMetadata) UpdateTime() UpdateLimitRequestPathSelectorLimitMetadataUpdateTime {
	return UpdateLimitRequestPathSelectorLimitMetadataUpdateTime{}
}

func (UpdateLimitRequestPathSelectorLimitMetadata) DeleteTime() UpdateLimitRequestPathSelectorLimitMetadataDeleteTime {
	return UpdateLimitRequestPathSelectorLimitMetadataDeleteTime{}
}

func (UpdateLimitRequestPathSelectorLimitMetadata) Uuid() UpdateLimitRequestPathSelectorLimitMetadataUuid {
	return UpdateLimitRequestPathSelectorLimitMetadataUuid{}
}

func (UpdateLimitRequestPathSelectorLimitMetadata) Tags() UpdateLimitRequestPathSelectorLimitMetadataTags {
	return UpdateLimitRequestPathSelectorLimitMetadataTags{}
}

func (UpdateLimitRequestPathSelectorLimitMetadata) Labels() UpdateLimitRequestPathSelectorLimitMetadataLabels {
	return UpdateLimitRequestPathSelectorLimitMetadataLabels{}
}

func (UpdateLimitRequestPathSelectorLimitMetadata) Annotations() UpdateLimitRequestPathSelectorLimitMetadataAnnotations {
	return UpdateLimitRequestPathSelectorLimitMetadataAnnotations{}
}

func (UpdateLimitRequestPathSelectorLimitMetadata) Generation() UpdateLimitRequestPathSelectorLimitMetadataGeneration {
	return UpdateLimitRequestPathSelectorLimitMetadataGeneration{}
}

func (UpdateLimitRequestPathSelectorLimitMetadata) ResourceVersion() UpdateLimitRequestPathSelectorLimitMetadataResourceVersion {
	return UpdateLimitRequestPathSelectorLimitMetadataResourceVersion{}
}

func (UpdateLimitRequestPathSelectorLimitMetadata) OwnerReferences() UpdateLimitRequestPathSelectorLimitMetadataOwnerReferences {
	return UpdateLimitRequestPathSelectorLimitMetadataOwnerReferences{}
}

func (UpdateLimitRequestPathSelectorLimitMetadata) Shards() UpdateLimitRequestPathSelectorLimitMetadataShards {
	return UpdateLimitRequestPathSelectorLimitMetadataShards{}
}

func (UpdateLimitRequestPathSelectorLimitMetadata) Syncing() UpdateLimitRequestPathSelectorLimitMetadataSyncing {
	return UpdateLimitRequestPathSelectorLimitMetadataSyncing{}
}

func (UpdateLimitRequestPathSelectorLimitMetadata) Lifecycle() UpdateLimitRequestPathSelectorLimitMetadataLifecycle {
	return UpdateLimitRequestPathSelectorLimitMetadataLifecycle{}
}

type UpdateLimitRequestPathSelectorLimitMetadataCreateTime struct{}

func (UpdateLimitRequestPathSelectorLimitMetadataCreateTime) FieldPath() *UpdateLimitRequest_FieldSubPath {
	return &UpdateLimitRequest_FieldSubPath{
		selector: UpdateLimitRequest_FieldPathSelectorLimit,
		subPath:  limit.NewLimitFieldPathBuilder().Metadata().CreateTime().FieldPath(),
	}
}

func (s UpdateLimitRequestPathSelectorLimitMetadataCreateTime) WithValue(value *timestamp.Timestamp) *UpdateLimitRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateLimitRequest_FieldSubPathValue)
}

func (s UpdateLimitRequestPathSelectorLimitMetadataCreateTime) WithArrayOfValues(values []*timestamp.Timestamp) *UpdateLimitRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateLimitRequest_FieldSubPathArrayOfValues)
}

type UpdateLimitRequestPathSelectorLimitMetadataUpdateTime struct{}

func (UpdateLimitRequestPathSelectorLimitMetadataUpdateTime) FieldPath() *UpdateLimitRequest_FieldSubPath {
	return &UpdateLimitRequest_FieldSubPath{
		selector: UpdateLimitRequest_FieldPathSelectorLimit,
		subPath:  limit.NewLimitFieldPathBuilder().Metadata().UpdateTime().FieldPath(),
	}
}

func (s UpdateLimitRequestPathSelectorLimitMetadataUpdateTime) WithValue(value *timestamp.Timestamp) *UpdateLimitRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateLimitRequest_FieldSubPathValue)
}

func (s UpdateLimitRequestPathSelectorLimitMetadataUpdateTime) WithArrayOfValues(values []*timestamp.Timestamp) *UpdateLimitRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateLimitRequest_FieldSubPathArrayOfValues)
}

type UpdateLimitRequestPathSelectorLimitMetadataDeleteTime struct{}

func (UpdateLimitRequestPathSelectorLimitMetadataDeleteTime) FieldPath() *UpdateLimitRequest_FieldSubPath {
	return &UpdateLimitRequest_FieldSubPath{
		selector: UpdateLimitRequest_FieldPathSelectorLimit,
		subPath:  limit.NewLimitFieldPathBuilder().Metadata().DeleteTime().FieldPath(),
	}
}

func (s UpdateLimitRequestPathSelectorLimitMetadataDeleteTime) WithValue(value *timestamp.Timestamp) *UpdateLimitRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateLimitRequest_FieldSubPathValue)
}

func (s UpdateLimitRequestPathSelectorLimitMetadataDeleteTime) WithArrayOfValues(values []*timestamp.Timestamp) *UpdateLimitRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateLimitRequest_FieldSubPathArrayOfValues)
}

type UpdateLimitRequestPathSelectorLimitMetadataUuid struct{}

func (UpdateLimitRequestPathSelectorLimitMetadataUuid) FieldPath() *UpdateLimitRequest_FieldSubPath {
	return &UpdateLimitRequest_FieldSubPath{
		selector: UpdateLimitRequest_FieldPathSelectorLimit,
		subPath:  limit.NewLimitFieldPathBuilder().Metadata().Uuid().FieldPath(),
	}
}

func (s UpdateLimitRequestPathSelectorLimitMetadataUuid) WithValue(value string) *UpdateLimitRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateLimitRequest_FieldSubPathValue)
}

func (s UpdateLimitRequestPathSelectorLimitMetadataUuid) WithArrayOfValues(values []string) *UpdateLimitRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateLimitRequest_FieldSubPathArrayOfValues)
}

type UpdateLimitRequestPathSelectorLimitMetadataTags struct{}

func (UpdateLimitRequestPathSelectorLimitMetadataTags) FieldPath() *UpdateLimitRequest_FieldSubPath {
	return &UpdateLimitRequest_FieldSubPath{
		selector: UpdateLimitRequest_FieldPathSelectorLimit,
		subPath:  limit.NewLimitFieldPathBuilder().Metadata().Tags().FieldPath(),
	}
}

func (s UpdateLimitRequestPathSelectorLimitMetadataTags) WithValue(value []string) *UpdateLimitRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateLimitRequest_FieldSubPathValue)
}

func (s UpdateLimitRequestPathSelectorLimitMetadataTags) WithArrayOfValues(values [][]string) *UpdateLimitRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateLimitRequest_FieldSubPathArrayOfValues)
}

func (s UpdateLimitRequestPathSelectorLimitMetadataTags) WithItemValue(value string) *UpdateLimitRequest_FieldSubPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*UpdateLimitRequest_FieldSubPathArrayItemValue)
}

type UpdateLimitRequestPathSelectorLimitMetadataLabels struct{}

func (UpdateLimitRequestPathSelectorLimitMetadataLabels) FieldPath() *UpdateLimitRequest_FieldSubPath {
	return &UpdateLimitRequest_FieldSubPath{
		selector: UpdateLimitRequest_FieldPathSelectorLimit,
		subPath:  limit.NewLimitFieldPathBuilder().Metadata().Labels().FieldPath(),
	}
}

func (s UpdateLimitRequestPathSelectorLimitMetadataLabels) WithValue(value map[string]string) *UpdateLimitRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateLimitRequest_FieldSubPathValue)
}

func (s UpdateLimitRequestPathSelectorLimitMetadataLabels) WithArrayOfValues(values []map[string]string) *UpdateLimitRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateLimitRequest_FieldSubPathArrayOfValues)
}

func (UpdateLimitRequestPathSelectorLimitMetadataLabels) WithKey(key string) UpdateLimitRequestMapPathSelectorLimitMetadataLabels {
	return UpdateLimitRequestMapPathSelectorLimitMetadataLabels{key: key}
}

type UpdateLimitRequestMapPathSelectorLimitMetadataLabels struct {
	key string
}

func (s UpdateLimitRequestMapPathSelectorLimitMetadataLabels) FieldPath() *UpdateLimitRequest_FieldSubPath {
	return &UpdateLimitRequest_FieldSubPath{
		selector: UpdateLimitRequest_FieldPathSelectorLimit,
		subPath:  limit.NewLimitFieldPathBuilder().Metadata().Labels().WithKey(s.key).FieldPath(),
	}
}

func (s UpdateLimitRequestMapPathSelectorLimitMetadataLabels) WithValue(value string) *UpdateLimitRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateLimitRequest_FieldSubPathValue)
}

func (s UpdateLimitRequestMapPathSelectorLimitMetadataLabels) WithArrayOfValues(values []string) *UpdateLimitRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateLimitRequest_FieldSubPathArrayOfValues)
}

type UpdateLimitRequestPathSelectorLimitMetadataAnnotations struct{}

func (UpdateLimitRequestPathSelectorLimitMetadataAnnotations) FieldPath() *UpdateLimitRequest_FieldSubPath {
	return &UpdateLimitRequest_FieldSubPath{
		selector: UpdateLimitRequest_FieldPathSelectorLimit,
		subPath:  limit.NewLimitFieldPathBuilder().Metadata().Annotations().FieldPath(),
	}
}

func (s UpdateLimitRequestPathSelectorLimitMetadataAnnotations) WithValue(value map[string]string) *UpdateLimitRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateLimitRequest_FieldSubPathValue)
}

func (s UpdateLimitRequestPathSelectorLimitMetadataAnnotations) WithArrayOfValues(values []map[string]string) *UpdateLimitRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateLimitRequest_FieldSubPathArrayOfValues)
}

func (UpdateLimitRequestPathSelectorLimitMetadataAnnotations) WithKey(key string) UpdateLimitRequestMapPathSelectorLimitMetadataAnnotations {
	return UpdateLimitRequestMapPathSelectorLimitMetadataAnnotations{key: key}
}

type UpdateLimitRequestMapPathSelectorLimitMetadataAnnotations struct {
	key string
}

func (s UpdateLimitRequestMapPathSelectorLimitMetadataAnnotations) FieldPath() *UpdateLimitRequest_FieldSubPath {
	return &UpdateLimitRequest_FieldSubPath{
		selector: UpdateLimitRequest_FieldPathSelectorLimit,
		subPath:  limit.NewLimitFieldPathBuilder().Metadata().Annotations().WithKey(s.key).FieldPath(),
	}
}

func (s UpdateLimitRequestMapPathSelectorLimitMetadataAnnotations) WithValue(value string) *UpdateLimitRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateLimitRequest_FieldSubPathValue)
}

func (s UpdateLimitRequestMapPathSelectorLimitMetadataAnnotations) WithArrayOfValues(values []string) *UpdateLimitRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateLimitRequest_FieldSubPathArrayOfValues)
}

type UpdateLimitRequestPathSelectorLimitMetadataGeneration struct{}

func (UpdateLimitRequestPathSelectorLimitMetadataGeneration) FieldPath() *UpdateLimitRequest_FieldSubPath {
	return &UpdateLimitRequest_FieldSubPath{
		selector: UpdateLimitRequest_FieldPathSelectorLimit,
		subPath:  limit.NewLimitFieldPathBuilder().Metadata().Generation().FieldPath(),
	}
}

func (s UpdateLimitRequestPathSelectorLimitMetadataGeneration) WithValue(value int64) *UpdateLimitRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateLimitRequest_FieldSubPathValue)
}

func (s UpdateLimitRequestPathSelectorLimitMetadataGeneration) WithArrayOfValues(values []int64) *UpdateLimitRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateLimitRequest_FieldSubPathArrayOfValues)
}

type UpdateLimitRequestPathSelectorLimitMetadataResourceVersion struct{}

func (UpdateLimitRequestPathSelectorLimitMetadataResourceVersion) FieldPath() *UpdateLimitRequest_FieldSubPath {
	return &UpdateLimitRequest_FieldSubPath{
		selector: UpdateLimitRequest_FieldPathSelectorLimit,
		subPath:  limit.NewLimitFieldPathBuilder().Metadata().ResourceVersion().FieldPath(),
	}
}

func (s UpdateLimitRequestPathSelectorLimitMetadataResourceVersion) WithValue(value string) *UpdateLimitRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateLimitRequest_FieldSubPathValue)
}

func (s UpdateLimitRequestPathSelectorLimitMetadataResourceVersion) WithArrayOfValues(values []string) *UpdateLimitRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateLimitRequest_FieldSubPathArrayOfValues)
}

type UpdateLimitRequestPathSelectorLimitMetadataOwnerReferences struct{}

func (UpdateLimitRequestPathSelectorLimitMetadataOwnerReferences) FieldPath() *UpdateLimitRequest_FieldSubPath {
	return &UpdateLimitRequest_FieldSubPath{
		selector: UpdateLimitRequest_FieldPathSelectorLimit,
		subPath:  limit.NewLimitFieldPathBuilder().Metadata().OwnerReferences().FieldPath(),
	}
}

func (s UpdateLimitRequestPathSelectorLimitMetadataOwnerReferences) WithValue(value []*ntt_meta.OwnerReference) *UpdateLimitRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateLimitRequest_FieldSubPathValue)
}

func (s UpdateLimitRequestPathSelectorLimitMetadataOwnerReferences) WithArrayOfValues(values [][]*ntt_meta.OwnerReference) *UpdateLimitRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateLimitRequest_FieldSubPathArrayOfValues)
}

func (s UpdateLimitRequestPathSelectorLimitMetadataOwnerReferences) WithItemValue(value *ntt_meta.OwnerReference) *UpdateLimitRequest_FieldSubPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*UpdateLimitRequest_FieldSubPathArrayItemValue)
}

func (UpdateLimitRequestPathSelectorLimitMetadataOwnerReferences) Kind() UpdateLimitRequestPathSelectorLimitMetadataOwnerReferencesKind {
	return UpdateLimitRequestPathSelectorLimitMetadataOwnerReferencesKind{}
}

func (UpdateLimitRequestPathSelectorLimitMetadataOwnerReferences) Version() UpdateLimitRequestPathSelectorLimitMetadataOwnerReferencesVersion {
	return UpdateLimitRequestPathSelectorLimitMetadataOwnerReferencesVersion{}
}

func (UpdateLimitRequestPathSelectorLimitMetadataOwnerReferences) Name() UpdateLimitRequestPathSelectorLimitMetadataOwnerReferencesName {
	return UpdateLimitRequestPathSelectorLimitMetadataOwnerReferencesName{}
}

func (UpdateLimitRequestPathSelectorLimitMetadataOwnerReferences) Region() UpdateLimitRequestPathSelectorLimitMetadataOwnerReferencesRegion {
	return UpdateLimitRequestPathSelectorLimitMetadataOwnerReferencesRegion{}
}

func (UpdateLimitRequestPathSelectorLimitMetadataOwnerReferences) Controller() UpdateLimitRequestPathSelectorLimitMetadataOwnerReferencesController {
	return UpdateLimitRequestPathSelectorLimitMetadataOwnerReferencesController{}
}

func (UpdateLimitRequestPathSelectorLimitMetadataOwnerReferences) BlockOwnerDeletion() UpdateLimitRequestPathSelectorLimitMetadataOwnerReferencesBlockOwnerDeletion {
	return UpdateLimitRequestPathSelectorLimitMetadataOwnerReferencesBlockOwnerDeletion{}
}

func (UpdateLimitRequestPathSelectorLimitMetadataOwnerReferences) RequiresOwnerReference() UpdateLimitRequestPathSelectorLimitMetadataOwnerReferencesRequiresOwnerReference {
	return UpdateLimitRequestPathSelectorLimitMetadataOwnerReferencesRequiresOwnerReference{}
}

type UpdateLimitRequestPathSelectorLimitMetadataOwnerReferencesKind struct{}

func (UpdateLimitRequestPathSelectorLimitMetadataOwnerReferencesKind) FieldPath() *UpdateLimitRequest_FieldSubPath {
	return &UpdateLimitRequest_FieldSubPath{
		selector: UpdateLimitRequest_FieldPathSelectorLimit,
		subPath:  limit.NewLimitFieldPathBuilder().Metadata().OwnerReferences().Kind().FieldPath(),
	}
}

func (s UpdateLimitRequestPathSelectorLimitMetadataOwnerReferencesKind) WithValue(value string) *UpdateLimitRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateLimitRequest_FieldSubPathValue)
}

func (s UpdateLimitRequestPathSelectorLimitMetadataOwnerReferencesKind) WithArrayOfValues(values []string) *UpdateLimitRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateLimitRequest_FieldSubPathArrayOfValues)
}

type UpdateLimitRequestPathSelectorLimitMetadataOwnerReferencesVersion struct{}

func (UpdateLimitRequestPathSelectorLimitMetadataOwnerReferencesVersion) FieldPath() *UpdateLimitRequest_FieldSubPath {
	return &UpdateLimitRequest_FieldSubPath{
		selector: UpdateLimitRequest_FieldPathSelectorLimit,
		subPath:  limit.NewLimitFieldPathBuilder().Metadata().OwnerReferences().Version().FieldPath(),
	}
}

func (s UpdateLimitRequestPathSelectorLimitMetadataOwnerReferencesVersion) WithValue(value string) *UpdateLimitRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateLimitRequest_FieldSubPathValue)
}

func (s UpdateLimitRequestPathSelectorLimitMetadataOwnerReferencesVersion) WithArrayOfValues(values []string) *UpdateLimitRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateLimitRequest_FieldSubPathArrayOfValues)
}

type UpdateLimitRequestPathSelectorLimitMetadataOwnerReferencesName struct{}

func (UpdateLimitRequestPathSelectorLimitMetadataOwnerReferencesName) FieldPath() *UpdateLimitRequest_FieldSubPath {
	return &UpdateLimitRequest_FieldSubPath{
		selector: UpdateLimitRequest_FieldPathSelectorLimit,
		subPath:  limit.NewLimitFieldPathBuilder().Metadata().OwnerReferences().Name().FieldPath(),
	}
}

func (s UpdateLimitRequestPathSelectorLimitMetadataOwnerReferencesName) WithValue(value string) *UpdateLimitRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateLimitRequest_FieldSubPathValue)
}

func (s UpdateLimitRequestPathSelectorLimitMetadataOwnerReferencesName) WithArrayOfValues(values []string) *UpdateLimitRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateLimitRequest_FieldSubPathArrayOfValues)
}

type UpdateLimitRequestPathSelectorLimitMetadataOwnerReferencesRegion struct{}

func (UpdateLimitRequestPathSelectorLimitMetadataOwnerReferencesRegion) FieldPath() *UpdateLimitRequest_FieldSubPath {
	return &UpdateLimitRequest_FieldSubPath{
		selector: UpdateLimitRequest_FieldPathSelectorLimit,
		subPath:  limit.NewLimitFieldPathBuilder().Metadata().OwnerReferences().Region().FieldPath(),
	}
}

func (s UpdateLimitRequestPathSelectorLimitMetadataOwnerReferencesRegion) WithValue(value string) *UpdateLimitRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateLimitRequest_FieldSubPathValue)
}

func (s UpdateLimitRequestPathSelectorLimitMetadataOwnerReferencesRegion) WithArrayOfValues(values []string) *UpdateLimitRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateLimitRequest_FieldSubPathArrayOfValues)
}

type UpdateLimitRequestPathSelectorLimitMetadataOwnerReferencesController struct{}

func (UpdateLimitRequestPathSelectorLimitMetadataOwnerReferencesController) FieldPath() *UpdateLimitRequest_FieldSubPath {
	return &UpdateLimitRequest_FieldSubPath{
		selector: UpdateLimitRequest_FieldPathSelectorLimit,
		subPath:  limit.NewLimitFieldPathBuilder().Metadata().OwnerReferences().Controller().FieldPath(),
	}
}

func (s UpdateLimitRequestPathSelectorLimitMetadataOwnerReferencesController) WithValue(value bool) *UpdateLimitRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateLimitRequest_FieldSubPathValue)
}

func (s UpdateLimitRequestPathSelectorLimitMetadataOwnerReferencesController) WithArrayOfValues(values []bool) *UpdateLimitRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateLimitRequest_FieldSubPathArrayOfValues)
}

type UpdateLimitRequestPathSelectorLimitMetadataOwnerReferencesBlockOwnerDeletion struct{}

func (UpdateLimitRequestPathSelectorLimitMetadataOwnerReferencesBlockOwnerDeletion) FieldPath() *UpdateLimitRequest_FieldSubPath {
	return &UpdateLimitRequest_FieldSubPath{
		selector: UpdateLimitRequest_FieldPathSelectorLimit,
		subPath:  limit.NewLimitFieldPathBuilder().Metadata().OwnerReferences().BlockOwnerDeletion().FieldPath(),
	}
}

func (s UpdateLimitRequestPathSelectorLimitMetadataOwnerReferencesBlockOwnerDeletion) WithValue(value bool) *UpdateLimitRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateLimitRequest_FieldSubPathValue)
}

func (s UpdateLimitRequestPathSelectorLimitMetadataOwnerReferencesBlockOwnerDeletion) WithArrayOfValues(values []bool) *UpdateLimitRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateLimitRequest_FieldSubPathArrayOfValues)
}

type UpdateLimitRequestPathSelectorLimitMetadataOwnerReferencesRequiresOwnerReference struct{}

func (UpdateLimitRequestPathSelectorLimitMetadataOwnerReferencesRequiresOwnerReference) FieldPath() *UpdateLimitRequest_FieldSubPath {
	return &UpdateLimitRequest_FieldSubPath{
		selector: UpdateLimitRequest_FieldPathSelectorLimit,
		subPath:  limit.NewLimitFieldPathBuilder().Metadata().OwnerReferences().RequiresOwnerReference().FieldPath(),
	}
}

func (s UpdateLimitRequestPathSelectorLimitMetadataOwnerReferencesRequiresOwnerReference) WithValue(value bool) *UpdateLimitRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateLimitRequest_FieldSubPathValue)
}

func (s UpdateLimitRequestPathSelectorLimitMetadataOwnerReferencesRequiresOwnerReference) WithArrayOfValues(values []bool) *UpdateLimitRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateLimitRequest_FieldSubPathArrayOfValues)
}

type UpdateLimitRequestPathSelectorLimitMetadataShards struct{}

func (UpdateLimitRequestPathSelectorLimitMetadataShards) FieldPath() *UpdateLimitRequest_FieldSubPath {
	return &UpdateLimitRequest_FieldSubPath{
		selector: UpdateLimitRequest_FieldPathSelectorLimit,
		subPath:  limit.NewLimitFieldPathBuilder().Metadata().Shards().FieldPath(),
	}
}

func (s UpdateLimitRequestPathSelectorLimitMetadataShards) WithValue(value map[string]int64) *UpdateLimitRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateLimitRequest_FieldSubPathValue)
}

func (s UpdateLimitRequestPathSelectorLimitMetadataShards) WithArrayOfValues(values []map[string]int64) *UpdateLimitRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateLimitRequest_FieldSubPathArrayOfValues)
}

func (UpdateLimitRequestPathSelectorLimitMetadataShards) WithKey(key string) UpdateLimitRequestMapPathSelectorLimitMetadataShards {
	return UpdateLimitRequestMapPathSelectorLimitMetadataShards{key: key}
}

type UpdateLimitRequestMapPathSelectorLimitMetadataShards struct {
	key string
}

func (s UpdateLimitRequestMapPathSelectorLimitMetadataShards) FieldPath() *UpdateLimitRequest_FieldSubPath {
	return &UpdateLimitRequest_FieldSubPath{
		selector: UpdateLimitRequest_FieldPathSelectorLimit,
		subPath:  limit.NewLimitFieldPathBuilder().Metadata().Shards().WithKey(s.key).FieldPath(),
	}
}

func (s UpdateLimitRequestMapPathSelectorLimitMetadataShards) WithValue(value int64) *UpdateLimitRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateLimitRequest_FieldSubPathValue)
}

func (s UpdateLimitRequestMapPathSelectorLimitMetadataShards) WithArrayOfValues(values []int64) *UpdateLimitRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateLimitRequest_FieldSubPathArrayOfValues)
}

type UpdateLimitRequestPathSelectorLimitMetadataSyncing struct{}

func (UpdateLimitRequestPathSelectorLimitMetadataSyncing) FieldPath() *UpdateLimitRequest_FieldSubPath {
	return &UpdateLimitRequest_FieldSubPath{
		selector: UpdateLimitRequest_FieldPathSelectorLimit,
		subPath:  limit.NewLimitFieldPathBuilder().Metadata().Syncing().FieldPath(),
	}
}

func (s UpdateLimitRequestPathSelectorLimitMetadataSyncing) WithValue(value *ntt_meta.SyncingMeta) *UpdateLimitRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateLimitRequest_FieldSubPathValue)
}

func (s UpdateLimitRequestPathSelectorLimitMetadataSyncing) WithArrayOfValues(values []*ntt_meta.SyncingMeta) *UpdateLimitRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateLimitRequest_FieldSubPathArrayOfValues)
}

func (UpdateLimitRequestPathSelectorLimitMetadataSyncing) OwningRegion() UpdateLimitRequestPathSelectorLimitMetadataSyncingOwningRegion {
	return UpdateLimitRequestPathSelectorLimitMetadataSyncingOwningRegion{}
}

func (UpdateLimitRequestPathSelectorLimitMetadataSyncing) Regions() UpdateLimitRequestPathSelectorLimitMetadataSyncingRegions {
	return UpdateLimitRequestPathSelectorLimitMetadataSyncingRegions{}
}

type UpdateLimitRequestPathSelectorLimitMetadataSyncingOwningRegion struct{}

func (UpdateLimitRequestPathSelectorLimitMetadataSyncingOwningRegion) FieldPath() *UpdateLimitRequest_FieldSubPath {
	return &UpdateLimitRequest_FieldSubPath{
		selector: UpdateLimitRequest_FieldPathSelectorLimit,
		subPath:  limit.NewLimitFieldPathBuilder().Metadata().Syncing().OwningRegion().FieldPath(),
	}
}

func (s UpdateLimitRequestPathSelectorLimitMetadataSyncingOwningRegion) WithValue(value string) *UpdateLimitRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateLimitRequest_FieldSubPathValue)
}

func (s UpdateLimitRequestPathSelectorLimitMetadataSyncingOwningRegion) WithArrayOfValues(values []string) *UpdateLimitRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateLimitRequest_FieldSubPathArrayOfValues)
}

type UpdateLimitRequestPathSelectorLimitMetadataSyncingRegions struct{}

func (UpdateLimitRequestPathSelectorLimitMetadataSyncingRegions) FieldPath() *UpdateLimitRequest_FieldSubPath {
	return &UpdateLimitRequest_FieldSubPath{
		selector: UpdateLimitRequest_FieldPathSelectorLimit,
		subPath:  limit.NewLimitFieldPathBuilder().Metadata().Syncing().Regions().FieldPath(),
	}
}

func (s UpdateLimitRequestPathSelectorLimitMetadataSyncingRegions) WithValue(value []string) *UpdateLimitRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateLimitRequest_FieldSubPathValue)
}

func (s UpdateLimitRequestPathSelectorLimitMetadataSyncingRegions) WithArrayOfValues(values [][]string) *UpdateLimitRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateLimitRequest_FieldSubPathArrayOfValues)
}

func (s UpdateLimitRequestPathSelectorLimitMetadataSyncingRegions) WithItemValue(value string) *UpdateLimitRequest_FieldSubPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*UpdateLimitRequest_FieldSubPathArrayItemValue)
}

type UpdateLimitRequestPathSelectorLimitMetadataLifecycle struct{}

func (UpdateLimitRequestPathSelectorLimitMetadataLifecycle) FieldPath() *UpdateLimitRequest_FieldSubPath {
	return &UpdateLimitRequest_FieldSubPath{
		selector: UpdateLimitRequest_FieldPathSelectorLimit,
		subPath:  limit.NewLimitFieldPathBuilder().Metadata().Lifecycle().FieldPath(),
	}
}

func (s UpdateLimitRequestPathSelectorLimitMetadataLifecycle) WithValue(value *ntt_meta.Lifecycle) *UpdateLimitRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateLimitRequest_FieldSubPathValue)
}

func (s UpdateLimitRequestPathSelectorLimitMetadataLifecycle) WithArrayOfValues(values []*ntt_meta.Lifecycle) *UpdateLimitRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateLimitRequest_FieldSubPathArrayOfValues)
}

func (UpdateLimitRequestPathSelectorLimitMetadataLifecycle) State() UpdateLimitRequestPathSelectorLimitMetadataLifecycleState {
	return UpdateLimitRequestPathSelectorLimitMetadataLifecycleState{}
}

func (UpdateLimitRequestPathSelectorLimitMetadataLifecycle) BlockDeletion() UpdateLimitRequestPathSelectorLimitMetadataLifecycleBlockDeletion {
	return UpdateLimitRequestPathSelectorLimitMetadataLifecycleBlockDeletion{}
}

type UpdateLimitRequestPathSelectorLimitMetadataLifecycleState struct{}

func (UpdateLimitRequestPathSelectorLimitMetadataLifecycleState) FieldPath() *UpdateLimitRequest_FieldSubPath {
	return &UpdateLimitRequest_FieldSubPath{
		selector: UpdateLimitRequest_FieldPathSelectorLimit,
		subPath:  limit.NewLimitFieldPathBuilder().Metadata().Lifecycle().State().FieldPath(),
	}
}

func (s UpdateLimitRequestPathSelectorLimitMetadataLifecycleState) WithValue(value ntt_meta.Lifecycle_State) *UpdateLimitRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateLimitRequest_FieldSubPathValue)
}

func (s UpdateLimitRequestPathSelectorLimitMetadataLifecycleState) WithArrayOfValues(values []ntt_meta.Lifecycle_State) *UpdateLimitRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateLimitRequest_FieldSubPathArrayOfValues)
}

type UpdateLimitRequestPathSelectorLimitMetadataLifecycleBlockDeletion struct{}

func (UpdateLimitRequestPathSelectorLimitMetadataLifecycleBlockDeletion) FieldPath() *UpdateLimitRequest_FieldSubPath {
	return &UpdateLimitRequest_FieldSubPath{
		selector: UpdateLimitRequest_FieldPathSelectorLimit,
		subPath:  limit.NewLimitFieldPathBuilder().Metadata().Lifecycle().BlockDeletion().FieldPath(),
	}
}

func (s UpdateLimitRequestPathSelectorLimitMetadataLifecycleBlockDeletion) WithValue(value bool) *UpdateLimitRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateLimitRequest_FieldSubPathValue)
}

func (s UpdateLimitRequestPathSelectorLimitMetadataLifecycleBlockDeletion) WithArrayOfValues(values []bool) *UpdateLimitRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateLimitRequest_FieldSubPathArrayOfValues)
}

type UpdateLimitRequestPathSelectorUpdateMask struct{}

func (UpdateLimitRequestPathSelectorUpdateMask) FieldPath() *UpdateLimitRequest_FieldTerminalPath {
	return &UpdateLimitRequest_FieldTerminalPath{selector: UpdateLimitRequest_FieldPathSelectorUpdateMask}
}

func (s UpdateLimitRequestPathSelectorUpdateMask) WithValue(value *limit.Limit_FieldMask) *UpdateLimitRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateLimitRequest_FieldTerminalPathValue)
}

func (s UpdateLimitRequestPathSelectorUpdateMask) WithArrayOfValues(values []*limit.Limit_FieldMask) *UpdateLimitRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateLimitRequest_FieldTerminalPathArrayOfValues)
}

type UpdateLimitRequestPathSelectorCas struct{}

func (UpdateLimitRequestPathSelectorCas) FieldPath() *UpdateLimitRequest_FieldTerminalPath {
	return &UpdateLimitRequest_FieldTerminalPath{selector: UpdateLimitRequest_FieldPathSelectorCas}
}

func (s UpdateLimitRequestPathSelectorCas) WithValue(value *UpdateLimitRequest_CAS) *UpdateLimitRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateLimitRequest_FieldTerminalPathValue)
}

func (s UpdateLimitRequestPathSelectorCas) WithArrayOfValues(values []*UpdateLimitRequest_CAS) *UpdateLimitRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateLimitRequest_FieldTerminalPathArrayOfValues)
}

func (UpdateLimitRequestPathSelectorCas) WithSubPath(subPath UpdateLimitRequestCAS_FieldPath) *UpdateLimitRequest_FieldSubPath {
	return &UpdateLimitRequest_FieldSubPath{selector: UpdateLimitRequest_FieldPathSelectorCas, subPath: subPath}
}

func (s UpdateLimitRequestPathSelectorCas) WithSubValue(subPathValue UpdateLimitRequestCAS_FieldPathValue) *UpdateLimitRequest_FieldSubPathValue {
	return &UpdateLimitRequest_FieldSubPathValue{UpdateLimitRequest_FieldPath: s.WithSubPath(subPathValue), subPathValue: subPathValue}
}

func (s UpdateLimitRequestPathSelectorCas) WithSubArrayOfValues(subPathArrayOfValues UpdateLimitRequestCAS_FieldPathArrayOfValues) *UpdateLimitRequest_FieldSubPathArrayOfValues {
	return &UpdateLimitRequest_FieldSubPathArrayOfValues{UpdateLimitRequest_FieldPath: s.WithSubPath(subPathArrayOfValues), subPathArrayOfValues: subPathArrayOfValues}
}

func (s UpdateLimitRequestPathSelectorCas) WithSubArrayItemValue(subPathArrayItemValue UpdateLimitRequestCAS_FieldPathArrayItemValue) *UpdateLimitRequest_FieldSubPathArrayItemValue {
	return &UpdateLimitRequest_FieldSubPathArrayItemValue{UpdateLimitRequest_FieldPath: s.WithSubPath(subPathArrayItemValue), subPathItemValue: subPathArrayItemValue}
}

func (UpdateLimitRequestPathSelectorCas) ConditionalState() UpdateLimitRequestPathSelectorCasConditionalState {
	return UpdateLimitRequestPathSelectorCasConditionalState{}
}

func (UpdateLimitRequestPathSelectorCas) FieldMask() UpdateLimitRequestPathSelectorCasFieldMask {
	return UpdateLimitRequestPathSelectorCasFieldMask{}
}

type UpdateLimitRequestPathSelectorCasConditionalState struct{}

func (UpdateLimitRequestPathSelectorCasConditionalState) FieldPath() *UpdateLimitRequest_FieldSubPath {
	return &UpdateLimitRequest_FieldSubPath{
		selector: UpdateLimitRequest_FieldPathSelectorCas,
		subPath:  NewUpdateLimitRequestCASFieldPathBuilder().ConditionalState().FieldPath(),
	}
}

func (s UpdateLimitRequestPathSelectorCasConditionalState) WithValue(value *limit.Limit) *UpdateLimitRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateLimitRequest_FieldSubPathValue)
}

func (s UpdateLimitRequestPathSelectorCasConditionalState) WithArrayOfValues(values []*limit.Limit) *UpdateLimitRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateLimitRequest_FieldSubPathArrayOfValues)
}

func (UpdateLimitRequestPathSelectorCasConditionalState) Name() UpdateLimitRequestPathSelectorCasConditionalStateName {
	return UpdateLimitRequestPathSelectorCasConditionalStateName{}
}

func (UpdateLimitRequestPathSelectorCasConditionalState) Service() UpdateLimitRequestPathSelectorCasConditionalStateService {
	return UpdateLimitRequestPathSelectorCasConditionalStateService{}
}

func (UpdateLimitRequestPathSelectorCasConditionalState) Resource() UpdateLimitRequestPathSelectorCasConditionalStateResource {
	return UpdateLimitRequestPathSelectorCasConditionalStateResource{}
}

func (UpdateLimitRequestPathSelectorCasConditionalState) Region() UpdateLimitRequestPathSelectorCasConditionalStateRegion {
	return UpdateLimitRequestPathSelectorCasConditionalStateRegion{}
}

func (UpdateLimitRequestPathSelectorCasConditionalState) ConfiguredLimit() UpdateLimitRequestPathSelectorCasConditionalStateConfiguredLimit {
	return UpdateLimitRequestPathSelectorCasConditionalStateConfiguredLimit{}
}

func (UpdateLimitRequestPathSelectorCasConditionalState) ActiveLimit() UpdateLimitRequestPathSelectorCasConditionalStateActiveLimit {
	return UpdateLimitRequestPathSelectorCasConditionalStateActiveLimit{}
}

func (UpdateLimitRequestPathSelectorCasConditionalState) Usage() UpdateLimitRequestPathSelectorCasConditionalStateUsage {
	return UpdateLimitRequestPathSelectorCasConditionalStateUsage{}
}

func (UpdateLimitRequestPathSelectorCasConditionalState) Source() UpdateLimitRequestPathSelectorCasConditionalStateSource {
	return UpdateLimitRequestPathSelectorCasConditionalStateSource{}
}

func (UpdateLimitRequestPathSelectorCasConditionalState) Metadata() UpdateLimitRequestPathSelectorCasConditionalStateMetadata {
	return UpdateLimitRequestPathSelectorCasConditionalStateMetadata{}
}

type UpdateLimitRequestPathSelectorCasConditionalStateName struct{}

func (UpdateLimitRequestPathSelectorCasConditionalStateName) FieldPath() *UpdateLimitRequest_FieldSubPath {
	return &UpdateLimitRequest_FieldSubPath{
		selector: UpdateLimitRequest_FieldPathSelectorCas,
		subPath:  NewUpdateLimitRequestCASFieldPathBuilder().ConditionalState().Name().FieldPath(),
	}
}

func (s UpdateLimitRequestPathSelectorCasConditionalStateName) WithValue(value *limit.Name) *UpdateLimitRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateLimitRequest_FieldSubPathValue)
}

func (s UpdateLimitRequestPathSelectorCasConditionalStateName) WithArrayOfValues(values []*limit.Name) *UpdateLimitRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateLimitRequest_FieldSubPathArrayOfValues)
}

type UpdateLimitRequestPathSelectorCasConditionalStateService struct{}

func (UpdateLimitRequestPathSelectorCasConditionalStateService) FieldPath() *UpdateLimitRequest_FieldSubPath {
	return &UpdateLimitRequest_FieldSubPath{
		selector: UpdateLimitRequest_FieldPathSelectorCas,
		subPath:  NewUpdateLimitRequestCASFieldPathBuilder().ConditionalState().Service().FieldPath(),
	}
}

func (s UpdateLimitRequestPathSelectorCasConditionalStateService) WithValue(value *meta_service.Reference) *UpdateLimitRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateLimitRequest_FieldSubPathValue)
}

func (s UpdateLimitRequestPathSelectorCasConditionalStateService) WithArrayOfValues(values []*meta_service.Reference) *UpdateLimitRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateLimitRequest_FieldSubPathArrayOfValues)
}

type UpdateLimitRequestPathSelectorCasConditionalStateResource struct{}

func (UpdateLimitRequestPathSelectorCasConditionalStateResource) FieldPath() *UpdateLimitRequest_FieldSubPath {
	return &UpdateLimitRequest_FieldSubPath{
		selector: UpdateLimitRequest_FieldPathSelectorCas,
		subPath:  NewUpdateLimitRequestCASFieldPathBuilder().ConditionalState().Resource().FieldPath(),
	}
}

func (s UpdateLimitRequestPathSelectorCasConditionalStateResource) WithValue(value *meta_resource.Reference) *UpdateLimitRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateLimitRequest_FieldSubPathValue)
}

func (s UpdateLimitRequestPathSelectorCasConditionalStateResource) WithArrayOfValues(values []*meta_resource.Reference) *UpdateLimitRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateLimitRequest_FieldSubPathArrayOfValues)
}

type UpdateLimitRequestPathSelectorCasConditionalStateRegion struct{}

func (UpdateLimitRequestPathSelectorCasConditionalStateRegion) FieldPath() *UpdateLimitRequest_FieldSubPath {
	return &UpdateLimitRequest_FieldSubPath{
		selector: UpdateLimitRequest_FieldPathSelectorCas,
		subPath:  NewUpdateLimitRequestCASFieldPathBuilder().ConditionalState().Region().FieldPath(),
	}
}

func (s UpdateLimitRequestPathSelectorCasConditionalStateRegion) WithValue(value string) *UpdateLimitRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateLimitRequest_FieldSubPathValue)
}

func (s UpdateLimitRequestPathSelectorCasConditionalStateRegion) WithArrayOfValues(values []string) *UpdateLimitRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateLimitRequest_FieldSubPathArrayOfValues)
}

type UpdateLimitRequestPathSelectorCasConditionalStateConfiguredLimit struct{}

func (UpdateLimitRequestPathSelectorCasConditionalStateConfiguredLimit) FieldPath() *UpdateLimitRequest_FieldSubPath {
	return &UpdateLimitRequest_FieldSubPath{
		selector: UpdateLimitRequest_FieldPathSelectorCas,
		subPath:  NewUpdateLimitRequestCASFieldPathBuilder().ConditionalState().ConfiguredLimit().FieldPath(),
	}
}

func (s UpdateLimitRequestPathSelectorCasConditionalStateConfiguredLimit) WithValue(value int64) *UpdateLimitRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateLimitRequest_FieldSubPathValue)
}

func (s UpdateLimitRequestPathSelectorCasConditionalStateConfiguredLimit) WithArrayOfValues(values []int64) *UpdateLimitRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateLimitRequest_FieldSubPathArrayOfValues)
}

type UpdateLimitRequestPathSelectorCasConditionalStateActiveLimit struct{}

func (UpdateLimitRequestPathSelectorCasConditionalStateActiveLimit) FieldPath() *UpdateLimitRequest_FieldSubPath {
	return &UpdateLimitRequest_FieldSubPath{
		selector: UpdateLimitRequest_FieldPathSelectorCas,
		subPath:  NewUpdateLimitRequestCASFieldPathBuilder().ConditionalState().ActiveLimit().FieldPath(),
	}
}

func (s UpdateLimitRequestPathSelectorCasConditionalStateActiveLimit) WithValue(value int64) *UpdateLimitRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateLimitRequest_FieldSubPathValue)
}

func (s UpdateLimitRequestPathSelectorCasConditionalStateActiveLimit) WithArrayOfValues(values []int64) *UpdateLimitRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateLimitRequest_FieldSubPathArrayOfValues)
}

type UpdateLimitRequestPathSelectorCasConditionalStateUsage struct{}

func (UpdateLimitRequestPathSelectorCasConditionalStateUsage) FieldPath() *UpdateLimitRequest_FieldSubPath {
	return &UpdateLimitRequest_FieldSubPath{
		selector: UpdateLimitRequest_FieldPathSelectorCas,
		subPath:  NewUpdateLimitRequestCASFieldPathBuilder().ConditionalState().Usage().FieldPath(),
	}
}

func (s UpdateLimitRequestPathSelectorCasConditionalStateUsage) WithValue(value int64) *UpdateLimitRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateLimitRequest_FieldSubPathValue)
}

func (s UpdateLimitRequestPathSelectorCasConditionalStateUsage) WithArrayOfValues(values []int64) *UpdateLimitRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateLimitRequest_FieldSubPathArrayOfValues)
}

type UpdateLimitRequestPathSelectorCasConditionalStateSource struct{}

func (UpdateLimitRequestPathSelectorCasConditionalStateSource) FieldPath() *UpdateLimitRequest_FieldSubPath {
	return &UpdateLimitRequest_FieldSubPath{
		selector: UpdateLimitRequest_FieldPathSelectorCas,
		subPath:  NewUpdateLimitRequestCASFieldPathBuilder().ConditionalState().Source().FieldPath(),
	}
}

func (s UpdateLimitRequestPathSelectorCasConditionalStateSource) WithValue(value *limit_pool.Reference) *UpdateLimitRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateLimitRequest_FieldSubPathValue)
}

func (s UpdateLimitRequestPathSelectorCasConditionalStateSource) WithArrayOfValues(values []*limit_pool.Reference) *UpdateLimitRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateLimitRequest_FieldSubPathArrayOfValues)
}

type UpdateLimitRequestPathSelectorCasConditionalStateMetadata struct{}

func (UpdateLimitRequestPathSelectorCasConditionalStateMetadata) FieldPath() *UpdateLimitRequest_FieldSubPath {
	return &UpdateLimitRequest_FieldSubPath{
		selector: UpdateLimitRequest_FieldPathSelectorCas,
		subPath:  NewUpdateLimitRequestCASFieldPathBuilder().ConditionalState().Metadata().FieldPath(),
	}
}

func (s UpdateLimitRequestPathSelectorCasConditionalStateMetadata) WithValue(value *ntt_meta.Meta) *UpdateLimitRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateLimitRequest_FieldSubPathValue)
}

func (s UpdateLimitRequestPathSelectorCasConditionalStateMetadata) WithArrayOfValues(values []*ntt_meta.Meta) *UpdateLimitRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateLimitRequest_FieldSubPathArrayOfValues)
}

func (UpdateLimitRequestPathSelectorCasConditionalStateMetadata) CreateTime() UpdateLimitRequestPathSelectorCasConditionalStateMetadataCreateTime {
	return UpdateLimitRequestPathSelectorCasConditionalStateMetadataCreateTime{}
}

func (UpdateLimitRequestPathSelectorCasConditionalStateMetadata) UpdateTime() UpdateLimitRequestPathSelectorCasConditionalStateMetadataUpdateTime {
	return UpdateLimitRequestPathSelectorCasConditionalStateMetadataUpdateTime{}
}

func (UpdateLimitRequestPathSelectorCasConditionalStateMetadata) DeleteTime() UpdateLimitRequestPathSelectorCasConditionalStateMetadataDeleteTime {
	return UpdateLimitRequestPathSelectorCasConditionalStateMetadataDeleteTime{}
}

func (UpdateLimitRequestPathSelectorCasConditionalStateMetadata) Uuid() UpdateLimitRequestPathSelectorCasConditionalStateMetadataUuid {
	return UpdateLimitRequestPathSelectorCasConditionalStateMetadataUuid{}
}

func (UpdateLimitRequestPathSelectorCasConditionalStateMetadata) Tags() UpdateLimitRequestPathSelectorCasConditionalStateMetadataTags {
	return UpdateLimitRequestPathSelectorCasConditionalStateMetadataTags{}
}

func (UpdateLimitRequestPathSelectorCasConditionalStateMetadata) Labels() UpdateLimitRequestPathSelectorCasConditionalStateMetadataLabels {
	return UpdateLimitRequestPathSelectorCasConditionalStateMetadataLabels{}
}

func (UpdateLimitRequestPathSelectorCasConditionalStateMetadata) Annotations() UpdateLimitRequestPathSelectorCasConditionalStateMetadataAnnotations {
	return UpdateLimitRequestPathSelectorCasConditionalStateMetadataAnnotations{}
}

func (UpdateLimitRequestPathSelectorCasConditionalStateMetadata) Generation() UpdateLimitRequestPathSelectorCasConditionalStateMetadataGeneration {
	return UpdateLimitRequestPathSelectorCasConditionalStateMetadataGeneration{}
}

func (UpdateLimitRequestPathSelectorCasConditionalStateMetadata) ResourceVersion() UpdateLimitRequestPathSelectorCasConditionalStateMetadataResourceVersion {
	return UpdateLimitRequestPathSelectorCasConditionalStateMetadataResourceVersion{}
}

func (UpdateLimitRequestPathSelectorCasConditionalStateMetadata) OwnerReferences() UpdateLimitRequestPathSelectorCasConditionalStateMetadataOwnerReferences {
	return UpdateLimitRequestPathSelectorCasConditionalStateMetadataOwnerReferences{}
}

func (UpdateLimitRequestPathSelectorCasConditionalStateMetadata) Shards() UpdateLimitRequestPathSelectorCasConditionalStateMetadataShards {
	return UpdateLimitRequestPathSelectorCasConditionalStateMetadataShards{}
}

func (UpdateLimitRequestPathSelectorCasConditionalStateMetadata) Syncing() UpdateLimitRequestPathSelectorCasConditionalStateMetadataSyncing {
	return UpdateLimitRequestPathSelectorCasConditionalStateMetadataSyncing{}
}

func (UpdateLimitRequestPathSelectorCasConditionalStateMetadata) Lifecycle() UpdateLimitRequestPathSelectorCasConditionalStateMetadataLifecycle {
	return UpdateLimitRequestPathSelectorCasConditionalStateMetadataLifecycle{}
}

type UpdateLimitRequestPathSelectorCasConditionalStateMetadataCreateTime struct{}

func (UpdateLimitRequestPathSelectorCasConditionalStateMetadataCreateTime) FieldPath() *UpdateLimitRequest_FieldSubPath {
	return &UpdateLimitRequest_FieldSubPath{
		selector: UpdateLimitRequest_FieldPathSelectorCas,
		subPath:  NewUpdateLimitRequestCASFieldPathBuilder().ConditionalState().Metadata().CreateTime().FieldPath(),
	}
}

func (s UpdateLimitRequestPathSelectorCasConditionalStateMetadataCreateTime) WithValue(value *timestamp.Timestamp) *UpdateLimitRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateLimitRequest_FieldSubPathValue)
}

func (s UpdateLimitRequestPathSelectorCasConditionalStateMetadataCreateTime) WithArrayOfValues(values []*timestamp.Timestamp) *UpdateLimitRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateLimitRequest_FieldSubPathArrayOfValues)
}

type UpdateLimitRequestPathSelectorCasConditionalStateMetadataUpdateTime struct{}

func (UpdateLimitRequestPathSelectorCasConditionalStateMetadataUpdateTime) FieldPath() *UpdateLimitRequest_FieldSubPath {
	return &UpdateLimitRequest_FieldSubPath{
		selector: UpdateLimitRequest_FieldPathSelectorCas,
		subPath:  NewUpdateLimitRequestCASFieldPathBuilder().ConditionalState().Metadata().UpdateTime().FieldPath(),
	}
}

func (s UpdateLimitRequestPathSelectorCasConditionalStateMetadataUpdateTime) WithValue(value *timestamp.Timestamp) *UpdateLimitRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateLimitRequest_FieldSubPathValue)
}

func (s UpdateLimitRequestPathSelectorCasConditionalStateMetadataUpdateTime) WithArrayOfValues(values []*timestamp.Timestamp) *UpdateLimitRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateLimitRequest_FieldSubPathArrayOfValues)
}

type UpdateLimitRequestPathSelectorCasConditionalStateMetadataDeleteTime struct{}

func (UpdateLimitRequestPathSelectorCasConditionalStateMetadataDeleteTime) FieldPath() *UpdateLimitRequest_FieldSubPath {
	return &UpdateLimitRequest_FieldSubPath{
		selector: UpdateLimitRequest_FieldPathSelectorCas,
		subPath:  NewUpdateLimitRequestCASFieldPathBuilder().ConditionalState().Metadata().DeleteTime().FieldPath(),
	}
}

func (s UpdateLimitRequestPathSelectorCasConditionalStateMetadataDeleteTime) WithValue(value *timestamp.Timestamp) *UpdateLimitRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateLimitRequest_FieldSubPathValue)
}

func (s UpdateLimitRequestPathSelectorCasConditionalStateMetadataDeleteTime) WithArrayOfValues(values []*timestamp.Timestamp) *UpdateLimitRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateLimitRequest_FieldSubPathArrayOfValues)
}

type UpdateLimitRequestPathSelectorCasConditionalStateMetadataUuid struct{}

func (UpdateLimitRequestPathSelectorCasConditionalStateMetadataUuid) FieldPath() *UpdateLimitRequest_FieldSubPath {
	return &UpdateLimitRequest_FieldSubPath{
		selector: UpdateLimitRequest_FieldPathSelectorCas,
		subPath:  NewUpdateLimitRequestCASFieldPathBuilder().ConditionalState().Metadata().Uuid().FieldPath(),
	}
}

func (s UpdateLimitRequestPathSelectorCasConditionalStateMetadataUuid) WithValue(value string) *UpdateLimitRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateLimitRequest_FieldSubPathValue)
}

func (s UpdateLimitRequestPathSelectorCasConditionalStateMetadataUuid) WithArrayOfValues(values []string) *UpdateLimitRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateLimitRequest_FieldSubPathArrayOfValues)
}

type UpdateLimitRequestPathSelectorCasConditionalStateMetadataTags struct{}

func (UpdateLimitRequestPathSelectorCasConditionalStateMetadataTags) FieldPath() *UpdateLimitRequest_FieldSubPath {
	return &UpdateLimitRequest_FieldSubPath{
		selector: UpdateLimitRequest_FieldPathSelectorCas,
		subPath:  NewUpdateLimitRequestCASFieldPathBuilder().ConditionalState().Metadata().Tags().FieldPath(),
	}
}

func (s UpdateLimitRequestPathSelectorCasConditionalStateMetadataTags) WithValue(value []string) *UpdateLimitRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateLimitRequest_FieldSubPathValue)
}

func (s UpdateLimitRequestPathSelectorCasConditionalStateMetadataTags) WithArrayOfValues(values [][]string) *UpdateLimitRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateLimitRequest_FieldSubPathArrayOfValues)
}

func (s UpdateLimitRequestPathSelectorCasConditionalStateMetadataTags) WithItemValue(value string) *UpdateLimitRequest_FieldSubPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*UpdateLimitRequest_FieldSubPathArrayItemValue)
}

type UpdateLimitRequestPathSelectorCasConditionalStateMetadataLabels struct{}

func (UpdateLimitRequestPathSelectorCasConditionalStateMetadataLabels) FieldPath() *UpdateLimitRequest_FieldSubPath {
	return &UpdateLimitRequest_FieldSubPath{
		selector: UpdateLimitRequest_FieldPathSelectorCas,
		subPath:  NewUpdateLimitRequestCASFieldPathBuilder().ConditionalState().Metadata().Labels().FieldPath(),
	}
}

func (s UpdateLimitRequestPathSelectorCasConditionalStateMetadataLabels) WithValue(value map[string]string) *UpdateLimitRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateLimitRequest_FieldSubPathValue)
}

func (s UpdateLimitRequestPathSelectorCasConditionalStateMetadataLabels) WithArrayOfValues(values []map[string]string) *UpdateLimitRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateLimitRequest_FieldSubPathArrayOfValues)
}

func (UpdateLimitRequestPathSelectorCasConditionalStateMetadataLabels) WithKey(key string) UpdateLimitRequestMapPathSelectorCasConditionalStateMetadataLabels {
	return UpdateLimitRequestMapPathSelectorCasConditionalStateMetadataLabels{key: key}
}

type UpdateLimitRequestMapPathSelectorCasConditionalStateMetadataLabels struct {
	key string
}

func (s UpdateLimitRequestMapPathSelectorCasConditionalStateMetadataLabels) FieldPath() *UpdateLimitRequest_FieldSubPath {
	return &UpdateLimitRequest_FieldSubPath{
		selector: UpdateLimitRequest_FieldPathSelectorCas,
		subPath:  NewUpdateLimitRequestCASFieldPathBuilder().ConditionalState().Metadata().Labels().WithKey(s.key).FieldPath(),
	}
}

func (s UpdateLimitRequestMapPathSelectorCasConditionalStateMetadataLabels) WithValue(value string) *UpdateLimitRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateLimitRequest_FieldSubPathValue)
}

func (s UpdateLimitRequestMapPathSelectorCasConditionalStateMetadataLabels) WithArrayOfValues(values []string) *UpdateLimitRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateLimitRequest_FieldSubPathArrayOfValues)
}

type UpdateLimitRequestPathSelectorCasConditionalStateMetadataAnnotations struct{}

func (UpdateLimitRequestPathSelectorCasConditionalStateMetadataAnnotations) FieldPath() *UpdateLimitRequest_FieldSubPath {
	return &UpdateLimitRequest_FieldSubPath{
		selector: UpdateLimitRequest_FieldPathSelectorCas,
		subPath:  NewUpdateLimitRequestCASFieldPathBuilder().ConditionalState().Metadata().Annotations().FieldPath(),
	}
}

func (s UpdateLimitRequestPathSelectorCasConditionalStateMetadataAnnotations) WithValue(value map[string]string) *UpdateLimitRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateLimitRequest_FieldSubPathValue)
}

func (s UpdateLimitRequestPathSelectorCasConditionalStateMetadataAnnotations) WithArrayOfValues(values []map[string]string) *UpdateLimitRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateLimitRequest_FieldSubPathArrayOfValues)
}

func (UpdateLimitRequestPathSelectorCasConditionalStateMetadataAnnotations) WithKey(key string) UpdateLimitRequestMapPathSelectorCasConditionalStateMetadataAnnotations {
	return UpdateLimitRequestMapPathSelectorCasConditionalStateMetadataAnnotations{key: key}
}

type UpdateLimitRequestMapPathSelectorCasConditionalStateMetadataAnnotations struct {
	key string
}

func (s UpdateLimitRequestMapPathSelectorCasConditionalStateMetadataAnnotations) FieldPath() *UpdateLimitRequest_FieldSubPath {
	return &UpdateLimitRequest_FieldSubPath{
		selector: UpdateLimitRequest_FieldPathSelectorCas,
		subPath:  NewUpdateLimitRequestCASFieldPathBuilder().ConditionalState().Metadata().Annotations().WithKey(s.key).FieldPath(),
	}
}

func (s UpdateLimitRequestMapPathSelectorCasConditionalStateMetadataAnnotations) WithValue(value string) *UpdateLimitRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateLimitRequest_FieldSubPathValue)
}

func (s UpdateLimitRequestMapPathSelectorCasConditionalStateMetadataAnnotations) WithArrayOfValues(values []string) *UpdateLimitRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateLimitRequest_FieldSubPathArrayOfValues)
}

type UpdateLimitRequestPathSelectorCasConditionalStateMetadataGeneration struct{}

func (UpdateLimitRequestPathSelectorCasConditionalStateMetadataGeneration) FieldPath() *UpdateLimitRequest_FieldSubPath {
	return &UpdateLimitRequest_FieldSubPath{
		selector: UpdateLimitRequest_FieldPathSelectorCas,
		subPath:  NewUpdateLimitRequestCASFieldPathBuilder().ConditionalState().Metadata().Generation().FieldPath(),
	}
}

func (s UpdateLimitRequestPathSelectorCasConditionalStateMetadataGeneration) WithValue(value int64) *UpdateLimitRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateLimitRequest_FieldSubPathValue)
}

func (s UpdateLimitRequestPathSelectorCasConditionalStateMetadataGeneration) WithArrayOfValues(values []int64) *UpdateLimitRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateLimitRequest_FieldSubPathArrayOfValues)
}

type UpdateLimitRequestPathSelectorCasConditionalStateMetadataResourceVersion struct{}

func (UpdateLimitRequestPathSelectorCasConditionalStateMetadataResourceVersion) FieldPath() *UpdateLimitRequest_FieldSubPath {
	return &UpdateLimitRequest_FieldSubPath{
		selector: UpdateLimitRequest_FieldPathSelectorCas,
		subPath:  NewUpdateLimitRequestCASFieldPathBuilder().ConditionalState().Metadata().ResourceVersion().FieldPath(),
	}
}

func (s UpdateLimitRequestPathSelectorCasConditionalStateMetadataResourceVersion) WithValue(value string) *UpdateLimitRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateLimitRequest_FieldSubPathValue)
}

func (s UpdateLimitRequestPathSelectorCasConditionalStateMetadataResourceVersion) WithArrayOfValues(values []string) *UpdateLimitRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateLimitRequest_FieldSubPathArrayOfValues)
}

type UpdateLimitRequestPathSelectorCasConditionalStateMetadataOwnerReferences struct{}

func (UpdateLimitRequestPathSelectorCasConditionalStateMetadataOwnerReferences) FieldPath() *UpdateLimitRequest_FieldSubPath {
	return &UpdateLimitRequest_FieldSubPath{
		selector: UpdateLimitRequest_FieldPathSelectorCas,
		subPath:  NewUpdateLimitRequestCASFieldPathBuilder().ConditionalState().Metadata().OwnerReferences().FieldPath(),
	}
}

func (s UpdateLimitRequestPathSelectorCasConditionalStateMetadataOwnerReferences) WithValue(value []*ntt_meta.OwnerReference) *UpdateLimitRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateLimitRequest_FieldSubPathValue)
}

func (s UpdateLimitRequestPathSelectorCasConditionalStateMetadataOwnerReferences) WithArrayOfValues(values [][]*ntt_meta.OwnerReference) *UpdateLimitRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateLimitRequest_FieldSubPathArrayOfValues)
}

func (s UpdateLimitRequestPathSelectorCasConditionalStateMetadataOwnerReferences) WithItemValue(value *ntt_meta.OwnerReference) *UpdateLimitRequest_FieldSubPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*UpdateLimitRequest_FieldSubPathArrayItemValue)
}

func (UpdateLimitRequestPathSelectorCasConditionalStateMetadataOwnerReferences) Kind() UpdateLimitRequestPathSelectorCasConditionalStateMetadataOwnerReferencesKind {
	return UpdateLimitRequestPathSelectorCasConditionalStateMetadataOwnerReferencesKind{}
}

func (UpdateLimitRequestPathSelectorCasConditionalStateMetadataOwnerReferences) Version() UpdateLimitRequestPathSelectorCasConditionalStateMetadataOwnerReferencesVersion {
	return UpdateLimitRequestPathSelectorCasConditionalStateMetadataOwnerReferencesVersion{}
}

func (UpdateLimitRequestPathSelectorCasConditionalStateMetadataOwnerReferences) Name() UpdateLimitRequestPathSelectorCasConditionalStateMetadataOwnerReferencesName {
	return UpdateLimitRequestPathSelectorCasConditionalStateMetadataOwnerReferencesName{}
}

func (UpdateLimitRequestPathSelectorCasConditionalStateMetadataOwnerReferences) Region() UpdateLimitRequestPathSelectorCasConditionalStateMetadataOwnerReferencesRegion {
	return UpdateLimitRequestPathSelectorCasConditionalStateMetadataOwnerReferencesRegion{}
}

func (UpdateLimitRequestPathSelectorCasConditionalStateMetadataOwnerReferences) Controller() UpdateLimitRequestPathSelectorCasConditionalStateMetadataOwnerReferencesController {
	return UpdateLimitRequestPathSelectorCasConditionalStateMetadataOwnerReferencesController{}
}

func (UpdateLimitRequestPathSelectorCasConditionalStateMetadataOwnerReferences) BlockOwnerDeletion() UpdateLimitRequestPathSelectorCasConditionalStateMetadataOwnerReferencesBlockOwnerDeletion {
	return UpdateLimitRequestPathSelectorCasConditionalStateMetadataOwnerReferencesBlockOwnerDeletion{}
}

func (UpdateLimitRequestPathSelectorCasConditionalStateMetadataOwnerReferences) RequiresOwnerReference() UpdateLimitRequestPathSelectorCasConditionalStateMetadataOwnerReferencesRequiresOwnerReference {
	return UpdateLimitRequestPathSelectorCasConditionalStateMetadataOwnerReferencesRequiresOwnerReference{}
}

type UpdateLimitRequestPathSelectorCasConditionalStateMetadataOwnerReferencesKind struct{}

func (UpdateLimitRequestPathSelectorCasConditionalStateMetadataOwnerReferencesKind) FieldPath() *UpdateLimitRequest_FieldSubPath {
	return &UpdateLimitRequest_FieldSubPath{
		selector: UpdateLimitRequest_FieldPathSelectorCas,
		subPath:  NewUpdateLimitRequestCASFieldPathBuilder().ConditionalState().Metadata().OwnerReferences().Kind().FieldPath(),
	}
}

func (s UpdateLimitRequestPathSelectorCasConditionalStateMetadataOwnerReferencesKind) WithValue(value string) *UpdateLimitRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateLimitRequest_FieldSubPathValue)
}

func (s UpdateLimitRequestPathSelectorCasConditionalStateMetadataOwnerReferencesKind) WithArrayOfValues(values []string) *UpdateLimitRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateLimitRequest_FieldSubPathArrayOfValues)
}

type UpdateLimitRequestPathSelectorCasConditionalStateMetadataOwnerReferencesVersion struct{}

func (UpdateLimitRequestPathSelectorCasConditionalStateMetadataOwnerReferencesVersion) FieldPath() *UpdateLimitRequest_FieldSubPath {
	return &UpdateLimitRequest_FieldSubPath{
		selector: UpdateLimitRequest_FieldPathSelectorCas,
		subPath:  NewUpdateLimitRequestCASFieldPathBuilder().ConditionalState().Metadata().OwnerReferences().Version().FieldPath(),
	}
}

func (s UpdateLimitRequestPathSelectorCasConditionalStateMetadataOwnerReferencesVersion) WithValue(value string) *UpdateLimitRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateLimitRequest_FieldSubPathValue)
}

func (s UpdateLimitRequestPathSelectorCasConditionalStateMetadataOwnerReferencesVersion) WithArrayOfValues(values []string) *UpdateLimitRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateLimitRequest_FieldSubPathArrayOfValues)
}

type UpdateLimitRequestPathSelectorCasConditionalStateMetadataOwnerReferencesName struct{}

func (UpdateLimitRequestPathSelectorCasConditionalStateMetadataOwnerReferencesName) FieldPath() *UpdateLimitRequest_FieldSubPath {
	return &UpdateLimitRequest_FieldSubPath{
		selector: UpdateLimitRequest_FieldPathSelectorCas,
		subPath:  NewUpdateLimitRequestCASFieldPathBuilder().ConditionalState().Metadata().OwnerReferences().Name().FieldPath(),
	}
}

func (s UpdateLimitRequestPathSelectorCasConditionalStateMetadataOwnerReferencesName) WithValue(value string) *UpdateLimitRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateLimitRequest_FieldSubPathValue)
}

func (s UpdateLimitRequestPathSelectorCasConditionalStateMetadataOwnerReferencesName) WithArrayOfValues(values []string) *UpdateLimitRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateLimitRequest_FieldSubPathArrayOfValues)
}

type UpdateLimitRequestPathSelectorCasConditionalStateMetadataOwnerReferencesRegion struct{}

func (UpdateLimitRequestPathSelectorCasConditionalStateMetadataOwnerReferencesRegion) FieldPath() *UpdateLimitRequest_FieldSubPath {
	return &UpdateLimitRequest_FieldSubPath{
		selector: UpdateLimitRequest_FieldPathSelectorCas,
		subPath:  NewUpdateLimitRequestCASFieldPathBuilder().ConditionalState().Metadata().OwnerReferences().Region().FieldPath(),
	}
}

func (s UpdateLimitRequestPathSelectorCasConditionalStateMetadataOwnerReferencesRegion) WithValue(value string) *UpdateLimitRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateLimitRequest_FieldSubPathValue)
}

func (s UpdateLimitRequestPathSelectorCasConditionalStateMetadataOwnerReferencesRegion) WithArrayOfValues(values []string) *UpdateLimitRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateLimitRequest_FieldSubPathArrayOfValues)
}

type UpdateLimitRequestPathSelectorCasConditionalStateMetadataOwnerReferencesController struct{}

func (UpdateLimitRequestPathSelectorCasConditionalStateMetadataOwnerReferencesController) FieldPath() *UpdateLimitRequest_FieldSubPath {
	return &UpdateLimitRequest_FieldSubPath{
		selector: UpdateLimitRequest_FieldPathSelectorCas,
		subPath:  NewUpdateLimitRequestCASFieldPathBuilder().ConditionalState().Metadata().OwnerReferences().Controller().FieldPath(),
	}
}

func (s UpdateLimitRequestPathSelectorCasConditionalStateMetadataOwnerReferencesController) WithValue(value bool) *UpdateLimitRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateLimitRequest_FieldSubPathValue)
}

func (s UpdateLimitRequestPathSelectorCasConditionalStateMetadataOwnerReferencesController) WithArrayOfValues(values []bool) *UpdateLimitRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateLimitRequest_FieldSubPathArrayOfValues)
}

type UpdateLimitRequestPathSelectorCasConditionalStateMetadataOwnerReferencesBlockOwnerDeletion struct{}

func (UpdateLimitRequestPathSelectorCasConditionalStateMetadataOwnerReferencesBlockOwnerDeletion) FieldPath() *UpdateLimitRequest_FieldSubPath {
	return &UpdateLimitRequest_FieldSubPath{
		selector: UpdateLimitRequest_FieldPathSelectorCas,
		subPath:  NewUpdateLimitRequestCASFieldPathBuilder().ConditionalState().Metadata().OwnerReferences().BlockOwnerDeletion().FieldPath(),
	}
}

func (s UpdateLimitRequestPathSelectorCasConditionalStateMetadataOwnerReferencesBlockOwnerDeletion) WithValue(value bool) *UpdateLimitRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateLimitRequest_FieldSubPathValue)
}

func (s UpdateLimitRequestPathSelectorCasConditionalStateMetadataOwnerReferencesBlockOwnerDeletion) WithArrayOfValues(values []bool) *UpdateLimitRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateLimitRequest_FieldSubPathArrayOfValues)
}

type UpdateLimitRequestPathSelectorCasConditionalStateMetadataOwnerReferencesRequiresOwnerReference struct{}

func (UpdateLimitRequestPathSelectorCasConditionalStateMetadataOwnerReferencesRequiresOwnerReference) FieldPath() *UpdateLimitRequest_FieldSubPath {
	return &UpdateLimitRequest_FieldSubPath{
		selector: UpdateLimitRequest_FieldPathSelectorCas,
		subPath:  NewUpdateLimitRequestCASFieldPathBuilder().ConditionalState().Metadata().OwnerReferences().RequiresOwnerReference().FieldPath(),
	}
}

func (s UpdateLimitRequestPathSelectorCasConditionalStateMetadataOwnerReferencesRequiresOwnerReference) WithValue(value bool) *UpdateLimitRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateLimitRequest_FieldSubPathValue)
}

func (s UpdateLimitRequestPathSelectorCasConditionalStateMetadataOwnerReferencesRequiresOwnerReference) WithArrayOfValues(values []bool) *UpdateLimitRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateLimitRequest_FieldSubPathArrayOfValues)
}

type UpdateLimitRequestPathSelectorCasConditionalStateMetadataShards struct{}

func (UpdateLimitRequestPathSelectorCasConditionalStateMetadataShards) FieldPath() *UpdateLimitRequest_FieldSubPath {
	return &UpdateLimitRequest_FieldSubPath{
		selector: UpdateLimitRequest_FieldPathSelectorCas,
		subPath:  NewUpdateLimitRequestCASFieldPathBuilder().ConditionalState().Metadata().Shards().FieldPath(),
	}
}

func (s UpdateLimitRequestPathSelectorCasConditionalStateMetadataShards) WithValue(value map[string]int64) *UpdateLimitRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateLimitRequest_FieldSubPathValue)
}

func (s UpdateLimitRequestPathSelectorCasConditionalStateMetadataShards) WithArrayOfValues(values []map[string]int64) *UpdateLimitRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateLimitRequest_FieldSubPathArrayOfValues)
}

func (UpdateLimitRequestPathSelectorCasConditionalStateMetadataShards) WithKey(key string) UpdateLimitRequestMapPathSelectorCasConditionalStateMetadataShards {
	return UpdateLimitRequestMapPathSelectorCasConditionalStateMetadataShards{key: key}
}

type UpdateLimitRequestMapPathSelectorCasConditionalStateMetadataShards struct {
	key string
}

func (s UpdateLimitRequestMapPathSelectorCasConditionalStateMetadataShards) FieldPath() *UpdateLimitRequest_FieldSubPath {
	return &UpdateLimitRequest_FieldSubPath{
		selector: UpdateLimitRequest_FieldPathSelectorCas,
		subPath:  NewUpdateLimitRequestCASFieldPathBuilder().ConditionalState().Metadata().Shards().WithKey(s.key).FieldPath(),
	}
}

func (s UpdateLimitRequestMapPathSelectorCasConditionalStateMetadataShards) WithValue(value int64) *UpdateLimitRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateLimitRequest_FieldSubPathValue)
}

func (s UpdateLimitRequestMapPathSelectorCasConditionalStateMetadataShards) WithArrayOfValues(values []int64) *UpdateLimitRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateLimitRequest_FieldSubPathArrayOfValues)
}

type UpdateLimitRequestPathSelectorCasConditionalStateMetadataSyncing struct{}

func (UpdateLimitRequestPathSelectorCasConditionalStateMetadataSyncing) FieldPath() *UpdateLimitRequest_FieldSubPath {
	return &UpdateLimitRequest_FieldSubPath{
		selector: UpdateLimitRequest_FieldPathSelectorCas,
		subPath:  NewUpdateLimitRequestCASFieldPathBuilder().ConditionalState().Metadata().Syncing().FieldPath(),
	}
}

func (s UpdateLimitRequestPathSelectorCasConditionalStateMetadataSyncing) WithValue(value *ntt_meta.SyncingMeta) *UpdateLimitRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateLimitRequest_FieldSubPathValue)
}

func (s UpdateLimitRequestPathSelectorCasConditionalStateMetadataSyncing) WithArrayOfValues(values []*ntt_meta.SyncingMeta) *UpdateLimitRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateLimitRequest_FieldSubPathArrayOfValues)
}

func (UpdateLimitRequestPathSelectorCasConditionalStateMetadataSyncing) OwningRegion() UpdateLimitRequestPathSelectorCasConditionalStateMetadataSyncingOwningRegion {
	return UpdateLimitRequestPathSelectorCasConditionalStateMetadataSyncingOwningRegion{}
}

func (UpdateLimitRequestPathSelectorCasConditionalStateMetadataSyncing) Regions() UpdateLimitRequestPathSelectorCasConditionalStateMetadataSyncingRegions {
	return UpdateLimitRequestPathSelectorCasConditionalStateMetadataSyncingRegions{}
}

type UpdateLimitRequestPathSelectorCasConditionalStateMetadataSyncingOwningRegion struct{}

func (UpdateLimitRequestPathSelectorCasConditionalStateMetadataSyncingOwningRegion) FieldPath() *UpdateLimitRequest_FieldSubPath {
	return &UpdateLimitRequest_FieldSubPath{
		selector: UpdateLimitRequest_FieldPathSelectorCas,
		subPath:  NewUpdateLimitRequestCASFieldPathBuilder().ConditionalState().Metadata().Syncing().OwningRegion().FieldPath(),
	}
}

func (s UpdateLimitRequestPathSelectorCasConditionalStateMetadataSyncingOwningRegion) WithValue(value string) *UpdateLimitRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateLimitRequest_FieldSubPathValue)
}

func (s UpdateLimitRequestPathSelectorCasConditionalStateMetadataSyncingOwningRegion) WithArrayOfValues(values []string) *UpdateLimitRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateLimitRequest_FieldSubPathArrayOfValues)
}

type UpdateLimitRequestPathSelectorCasConditionalStateMetadataSyncingRegions struct{}

func (UpdateLimitRequestPathSelectorCasConditionalStateMetadataSyncingRegions) FieldPath() *UpdateLimitRequest_FieldSubPath {
	return &UpdateLimitRequest_FieldSubPath{
		selector: UpdateLimitRequest_FieldPathSelectorCas,
		subPath:  NewUpdateLimitRequestCASFieldPathBuilder().ConditionalState().Metadata().Syncing().Regions().FieldPath(),
	}
}

func (s UpdateLimitRequestPathSelectorCasConditionalStateMetadataSyncingRegions) WithValue(value []string) *UpdateLimitRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateLimitRequest_FieldSubPathValue)
}

func (s UpdateLimitRequestPathSelectorCasConditionalStateMetadataSyncingRegions) WithArrayOfValues(values [][]string) *UpdateLimitRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateLimitRequest_FieldSubPathArrayOfValues)
}

func (s UpdateLimitRequestPathSelectorCasConditionalStateMetadataSyncingRegions) WithItemValue(value string) *UpdateLimitRequest_FieldSubPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*UpdateLimitRequest_FieldSubPathArrayItemValue)
}

type UpdateLimitRequestPathSelectorCasConditionalStateMetadataLifecycle struct{}

func (UpdateLimitRequestPathSelectorCasConditionalStateMetadataLifecycle) FieldPath() *UpdateLimitRequest_FieldSubPath {
	return &UpdateLimitRequest_FieldSubPath{
		selector: UpdateLimitRequest_FieldPathSelectorCas,
		subPath:  NewUpdateLimitRequestCASFieldPathBuilder().ConditionalState().Metadata().Lifecycle().FieldPath(),
	}
}

func (s UpdateLimitRequestPathSelectorCasConditionalStateMetadataLifecycle) WithValue(value *ntt_meta.Lifecycle) *UpdateLimitRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateLimitRequest_FieldSubPathValue)
}

func (s UpdateLimitRequestPathSelectorCasConditionalStateMetadataLifecycle) WithArrayOfValues(values []*ntt_meta.Lifecycle) *UpdateLimitRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateLimitRequest_FieldSubPathArrayOfValues)
}

func (UpdateLimitRequestPathSelectorCasConditionalStateMetadataLifecycle) State() UpdateLimitRequestPathSelectorCasConditionalStateMetadataLifecycleState {
	return UpdateLimitRequestPathSelectorCasConditionalStateMetadataLifecycleState{}
}

func (UpdateLimitRequestPathSelectorCasConditionalStateMetadataLifecycle) BlockDeletion() UpdateLimitRequestPathSelectorCasConditionalStateMetadataLifecycleBlockDeletion {
	return UpdateLimitRequestPathSelectorCasConditionalStateMetadataLifecycleBlockDeletion{}
}

type UpdateLimitRequestPathSelectorCasConditionalStateMetadataLifecycleState struct{}

func (UpdateLimitRequestPathSelectorCasConditionalStateMetadataLifecycleState) FieldPath() *UpdateLimitRequest_FieldSubPath {
	return &UpdateLimitRequest_FieldSubPath{
		selector: UpdateLimitRequest_FieldPathSelectorCas,
		subPath:  NewUpdateLimitRequestCASFieldPathBuilder().ConditionalState().Metadata().Lifecycle().State().FieldPath(),
	}
}

func (s UpdateLimitRequestPathSelectorCasConditionalStateMetadataLifecycleState) WithValue(value ntt_meta.Lifecycle_State) *UpdateLimitRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateLimitRequest_FieldSubPathValue)
}

func (s UpdateLimitRequestPathSelectorCasConditionalStateMetadataLifecycleState) WithArrayOfValues(values []ntt_meta.Lifecycle_State) *UpdateLimitRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateLimitRequest_FieldSubPathArrayOfValues)
}

type UpdateLimitRequestPathSelectorCasConditionalStateMetadataLifecycleBlockDeletion struct{}

func (UpdateLimitRequestPathSelectorCasConditionalStateMetadataLifecycleBlockDeletion) FieldPath() *UpdateLimitRequest_FieldSubPath {
	return &UpdateLimitRequest_FieldSubPath{
		selector: UpdateLimitRequest_FieldPathSelectorCas,
		subPath:  NewUpdateLimitRequestCASFieldPathBuilder().ConditionalState().Metadata().Lifecycle().BlockDeletion().FieldPath(),
	}
}

func (s UpdateLimitRequestPathSelectorCasConditionalStateMetadataLifecycleBlockDeletion) WithValue(value bool) *UpdateLimitRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateLimitRequest_FieldSubPathValue)
}

func (s UpdateLimitRequestPathSelectorCasConditionalStateMetadataLifecycleBlockDeletion) WithArrayOfValues(values []bool) *UpdateLimitRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateLimitRequest_FieldSubPathArrayOfValues)
}

type UpdateLimitRequestPathSelectorCasFieldMask struct{}

func (UpdateLimitRequestPathSelectorCasFieldMask) FieldPath() *UpdateLimitRequest_FieldSubPath {
	return &UpdateLimitRequest_FieldSubPath{
		selector: UpdateLimitRequest_FieldPathSelectorCas,
		subPath:  NewUpdateLimitRequestCASFieldPathBuilder().FieldMask().FieldPath(),
	}
}

func (s UpdateLimitRequestPathSelectorCasFieldMask) WithValue(value *limit.Limit_FieldMask) *UpdateLimitRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateLimitRequest_FieldSubPathValue)
}

func (s UpdateLimitRequestPathSelectorCasFieldMask) WithArrayOfValues(values []*limit.Limit_FieldMask) *UpdateLimitRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateLimitRequest_FieldSubPathArrayOfValues)
}

type UpdateLimitRequestCASFieldPathBuilder struct{}

func NewUpdateLimitRequestCASFieldPathBuilder() UpdateLimitRequestCASFieldPathBuilder {
	return UpdateLimitRequestCASFieldPathBuilder{}
}
func (UpdateLimitRequestCASFieldPathBuilder) ConditionalState() UpdateLimitRequest_CASPathSelectorConditionalState {
	return UpdateLimitRequest_CASPathSelectorConditionalState{}
}
func (UpdateLimitRequestCASFieldPathBuilder) FieldMask() UpdateLimitRequest_CASPathSelectorFieldMask {
	return UpdateLimitRequest_CASPathSelectorFieldMask{}
}

type UpdateLimitRequest_CASPathSelectorConditionalState struct{}

func (UpdateLimitRequest_CASPathSelectorConditionalState) FieldPath() *UpdateLimitRequestCAS_FieldTerminalPath {
	return &UpdateLimitRequestCAS_FieldTerminalPath{selector: UpdateLimitRequestCAS_FieldPathSelectorConditionalState}
}

func (s UpdateLimitRequest_CASPathSelectorConditionalState) WithValue(value *limit.Limit) *UpdateLimitRequestCAS_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateLimitRequestCAS_FieldTerminalPathValue)
}

func (s UpdateLimitRequest_CASPathSelectorConditionalState) WithArrayOfValues(values []*limit.Limit) *UpdateLimitRequestCAS_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateLimitRequestCAS_FieldTerminalPathArrayOfValues)
}

func (UpdateLimitRequest_CASPathSelectorConditionalState) WithSubPath(subPath limit.Limit_FieldPath) *UpdateLimitRequestCAS_FieldSubPath {
	return &UpdateLimitRequestCAS_FieldSubPath{selector: UpdateLimitRequestCAS_FieldPathSelectorConditionalState, subPath: subPath}
}

func (s UpdateLimitRequest_CASPathSelectorConditionalState) WithSubValue(subPathValue limit.Limit_FieldPathValue) *UpdateLimitRequestCAS_FieldSubPathValue {
	return &UpdateLimitRequestCAS_FieldSubPathValue{UpdateLimitRequestCAS_FieldPath: s.WithSubPath(subPathValue), subPathValue: subPathValue}
}

func (s UpdateLimitRequest_CASPathSelectorConditionalState) WithSubArrayOfValues(subPathArrayOfValues limit.Limit_FieldPathArrayOfValues) *UpdateLimitRequestCAS_FieldSubPathArrayOfValues {
	return &UpdateLimitRequestCAS_FieldSubPathArrayOfValues{UpdateLimitRequestCAS_FieldPath: s.WithSubPath(subPathArrayOfValues), subPathArrayOfValues: subPathArrayOfValues}
}

func (s UpdateLimitRequest_CASPathSelectorConditionalState) WithSubArrayItemValue(subPathArrayItemValue limit.Limit_FieldPathArrayItemValue) *UpdateLimitRequestCAS_FieldSubPathArrayItemValue {
	return &UpdateLimitRequestCAS_FieldSubPathArrayItemValue{UpdateLimitRequestCAS_FieldPath: s.WithSubPath(subPathArrayItemValue), subPathItemValue: subPathArrayItemValue}
}

func (UpdateLimitRequest_CASPathSelectorConditionalState) Name() UpdateLimitRequest_CASPathSelectorConditionalStateName {
	return UpdateLimitRequest_CASPathSelectorConditionalStateName{}
}

func (UpdateLimitRequest_CASPathSelectorConditionalState) Service() UpdateLimitRequest_CASPathSelectorConditionalStateService {
	return UpdateLimitRequest_CASPathSelectorConditionalStateService{}
}

func (UpdateLimitRequest_CASPathSelectorConditionalState) Resource() UpdateLimitRequest_CASPathSelectorConditionalStateResource {
	return UpdateLimitRequest_CASPathSelectorConditionalStateResource{}
}

func (UpdateLimitRequest_CASPathSelectorConditionalState) Region() UpdateLimitRequest_CASPathSelectorConditionalStateRegion {
	return UpdateLimitRequest_CASPathSelectorConditionalStateRegion{}
}

func (UpdateLimitRequest_CASPathSelectorConditionalState) ConfiguredLimit() UpdateLimitRequest_CASPathSelectorConditionalStateConfiguredLimit {
	return UpdateLimitRequest_CASPathSelectorConditionalStateConfiguredLimit{}
}

func (UpdateLimitRequest_CASPathSelectorConditionalState) ActiveLimit() UpdateLimitRequest_CASPathSelectorConditionalStateActiveLimit {
	return UpdateLimitRequest_CASPathSelectorConditionalStateActiveLimit{}
}

func (UpdateLimitRequest_CASPathSelectorConditionalState) Usage() UpdateLimitRequest_CASPathSelectorConditionalStateUsage {
	return UpdateLimitRequest_CASPathSelectorConditionalStateUsage{}
}

func (UpdateLimitRequest_CASPathSelectorConditionalState) Source() UpdateLimitRequest_CASPathSelectorConditionalStateSource {
	return UpdateLimitRequest_CASPathSelectorConditionalStateSource{}
}

func (UpdateLimitRequest_CASPathSelectorConditionalState) Metadata() UpdateLimitRequest_CASPathSelectorConditionalStateMetadata {
	return UpdateLimitRequest_CASPathSelectorConditionalStateMetadata{}
}

type UpdateLimitRequest_CASPathSelectorConditionalStateName struct{}

func (UpdateLimitRequest_CASPathSelectorConditionalStateName) FieldPath() *UpdateLimitRequestCAS_FieldSubPath {
	return &UpdateLimitRequestCAS_FieldSubPath{
		selector: UpdateLimitRequestCAS_FieldPathSelectorConditionalState,
		subPath:  limit.NewLimitFieldPathBuilder().Name().FieldPath(),
	}
}

func (s UpdateLimitRequest_CASPathSelectorConditionalStateName) WithValue(value *limit.Name) *UpdateLimitRequestCAS_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateLimitRequestCAS_FieldSubPathValue)
}

func (s UpdateLimitRequest_CASPathSelectorConditionalStateName) WithArrayOfValues(values []*limit.Name) *UpdateLimitRequestCAS_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateLimitRequestCAS_FieldSubPathArrayOfValues)
}

type UpdateLimitRequest_CASPathSelectorConditionalStateService struct{}

func (UpdateLimitRequest_CASPathSelectorConditionalStateService) FieldPath() *UpdateLimitRequestCAS_FieldSubPath {
	return &UpdateLimitRequestCAS_FieldSubPath{
		selector: UpdateLimitRequestCAS_FieldPathSelectorConditionalState,
		subPath:  limit.NewLimitFieldPathBuilder().Service().FieldPath(),
	}
}

func (s UpdateLimitRequest_CASPathSelectorConditionalStateService) WithValue(value *meta_service.Reference) *UpdateLimitRequestCAS_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateLimitRequestCAS_FieldSubPathValue)
}

func (s UpdateLimitRequest_CASPathSelectorConditionalStateService) WithArrayOfValues(values []*meta_service.Reference) *UpdateLimitRequestCAS_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateLimitRequestCAS_FieldSubPathArrayOfValues)
}

type UpdateLimitRequest_CASPathSelectorConditionalStateResource struct{}

func (UpdateLimitRequest_CASPathSelectorConditionalStateResource) FieldPath() *UpdateLimitRequestCAS_FieldSubPath {
	return &UpdateLimitRequestCAS_FieldSubPath{
		selector: UpdateLimitRequestCAS_FieldPathSelectorConditionalState,
		subPath:  limit.NewLimitFieldPathBuilder().Resource().FieldPath(),
	}
}

func (s UpdateLimitRequest_CASPathSelectorConditionalStateResource) WithValue(value *meta_resource.Reference) *UpdateLimitRequestCAS_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateLimitRequestCAS_FieldSubPathValue)
}

func (s UpdateLimitRequest_CASPathSelectorConditionalStateResource) WithArrayOfValues(values []*meta_resource.Reference) *UpdateLimitRequestCAS_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateLimitRequestCAS_FieldSubPathArrayOfValues)
}

type UpdateLimitRequest_CASPathSelectorConditionalStateRegion struct{}

func (UpdateLimitRequest_CASPathSelectorConditionalStateRegion) FieldPath() *UpdateLimitRequestCAS_FieldSubPath {
	return &UpdateLimitRequestCAS_FieldSubPath{
		selector: UpdateLimitRequestCAS_FieldPathSelectorConditionalState,
		subPath:  limit.NewLimitFieldPathBuilder().Region().FieldPath(),
	}
}

func (s UpdateLimitRequest_CASPathSelectorConditionalStateRegion) WithValue(value string) *UpdateLimitRequestCAS_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateLimitRequestCAS_FieldSubPathValue)
}

func (s UpdateLimitRequest_CASPathSelectorConditionalStateRegion) WithArrayOfValues(values []string) *UpdateLimitRequestCAS_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateLimitRequestCAS_FieldSubPathArrayOfValues)
}

type UpdateLimitRequest_CASPathSelectorConditionalStateConfiguredLimit struct{}

func (UpdateLimitRequest_CASPathSelectorConditionalStateConfiguredLimit) FieldPath() *UpdateLimitRequestCAS_FieldSubPath {
	return &UpdateLimitRequestCAS_FieldSubPath{
		selector: UpdateLimitRequestCAS_FieldPathSelectorConditionalState,
		subPath:  limit.NewLimitFieldPathBuilder().ConfiguredLimit().FieldPath(),
	}
}

func (s UpdateLimitRequest_CASPathSelectorConditionalStateConfiguredLimit) WithValue(value int64) *UpdateLimitRequestCAS_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateLimitRequestCAS_FieldSubPathValue)
}

func (s UpdateLimitRequest_CASPathSelectorConditionalStateConfiguredLimit) WithArrayOfValues(values []int64) *UpdateLimitRequestCAS_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateLimitRequestCAS_FieldSubPathArrayOfValues)
}

type UpdateLimitRequest_CASPathSelectorConditionalStateActiveLimit struct{}

func (UpdateLimitRequest_CASPathSelectorConditionalStateActiveLimit) FieldPath() *UpdateLimitRequestCAS_FieldSubPath {
	return &UpdateLimitRequestCAS_FieldSubPath{
		selector: UpdateLimitRequestCAS_FieldPathSelectorConditionalState,
		subPath:  limit.NewLimitFieldPathBuilder().ActiveLimit().FieldPath(),
	}
}

func (s UpdateLimitRequest_CASPathSelectorConditionalStateActiveLimit) WithValue(value int64) *UpdateLimitRequestCAS_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateLimitRequestCAS_FieldSubPathValue)
}

func (s UpdateLimitRequest_CASPathSelectorConditionalStateActiveLimit) WithArrayOfValues(values []int64) *UpdateLimitRequestCAS_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateLimitRequestCAS_FieldSubPathArrayOfValues)
}

type UpdateLimitRequest_CASPathSelectorConditionalStateUsage struct{}

func (UpdateLimitRequest_CASPathSelectorConditionalStateUsage) FieldPath() *UpdateLimitRequestCAS_FieldSubPath {
	return &UpdateLimitRequestCAS_FieldSubPath{
		selector: UpdateLimitRequestCAS_FieldPathSelectorConditionalState,
		subPath:  limit.NewLimitFieldPathBuilder().Usage().FieldPath(),
	}
}

func (s UpdateLimitRequest_CASPathSelectorConditionalStateUsage) WithValue(value int64) *UpdateLimitRequestCAS_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateLimitRequestCAS_FieldSubPathValue)
}

func (s UpdateLimitRequest_CASPathSelectorConditionalStateUsage) WithArrayOfValues(values []int64) *UpdateLimitRequestCAS_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateLimitRequestCAS_FieldSubPathArrayOfValues)
}

type UpdateLimitRequest_CASPathSelectorConditionalStateSource struct{}

func (UpdateLimitRequest_CASPathSelectorConditionalStateSource) FieldPath() *UpdateLimitRequestCAS_FieldSubPath {
	return &UpdateLimitRequestCAS_FieldSubPath{
		selector: UpdateLimitRequestCAS_FieldPathSelectorConditionalState,
		subPath:  limit.NewLimitFieldPathBuilder().Source().FieldPath(),
	}
}

func (s UpdateLimitRequest_CASPathSelectorConditionalStateSource) WithValue(value *limit_pool.Reference) *UpdateLimitRequestCAS_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateLimitRequestCAS_FieldSubPathValue)
}

func (s UpdateLimitRequest_CASPathSelectorConditionalStateSource) WithArrayOfValues(values []*limit_pool.Reference) *UpdateLimitRequestCAS_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateLimitRequestCAS_FieldSubPathArrayOfValues)
}

type UpdateLimitRequest_CASPathSelectorConditionalStateMetadata struct{}

func (UpdateLimitRequest_CASPathSelectorConditionalStateMetadata) FieldPath() *UpdateLimitRequestCAS_FieldSubPath {
	return &UpdateLimitRequestCAS_FieldSubPath{
		selector: UpdateLimitRequestCAS_FieldPathSelectorConditionalState,
		subPath:  limit.NewLimitFieldPathBuilder().Metadata().FieldPath(),
	}
}

func (s UpdateLimitRequest_CASPathSelectorConditionalStateMetadata) WithValue(value *ntt_meta.Meta) *UpdateLimitRequestCAS_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateLimitRequestCAS_FieldSubPathValue)
}

func (s UpdateLimitRequest_CASPathSelectorConditionalStateMetadata) WithArrayOfValues(values []*ntt_meta.Meta) *UpdateLimitRequestCAS_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateLimitRequestCAS_FieldSubPathArrayOfValues)
}

func (UpdateLimitRequest_CASPathSelectorConditionalStateMetadata) CreateTime() UpdateLimitRequest_CASPathSelectorConditionalStateMetadataCreateTime {
	return UpdateLimitRequest_CASPathSelectorConditionalStateMetadataCreateTime{}
}

func (UpdateLimitRequest_CASPathSelectorConditionalStateMetadata) UpdateTime() UpdateLimitRequest_CASPathSelectorConditionalStateMetadataUpdateTime {
	return UpdateLimitRequest_CASPathSelectorConditionalStateMetadataUpdateTime{}
}

func (UpdateLimitRequest_CASPathSelectorConditionalStateMetadata) DeleteTime() UpdateLimitRequest_CASPathSelectorConditionalStateMetadataDeleteTime {
	return UpdateLimitRequest_CASPathSelectorConditionalStateMetadataDeleteTime{}
}

func (UpdateLimitRequest_CASPathSelectorConditionalStateMetadata) Uuid() UpdateLimitRequest_CASPathSelectorConditionalStateMetadataUuid {
	return UpdateLimitRequest_CASPathSelectorConditionalStateMetadataUuid{}
}

func (UpdateLimitRequest_CASPathSelectorConditionalStateMetadata) Tags() UpdateLimitRequest_CASPathSelectorConditionalStateMetadataTags {
	return UpdateLimitRequest_CASPathSelectorConditionalStateMetadataTags{}
}

func (UpdateLimitRequest_CASPathSelectorConditionalStateMetadata) Labels() UpdateLimitRequest_CASPathSelectorConditionalStateMetadataLabels {
	return UpdateLimitRequest_CASPathSelectorConditionalStateMetadataLabels{}
}

func (UpdateLimitRequest_CASPathSelectorConditionalStateMetadata) Annotations() UpdateLimitRequest_CASPathSelectorConditionalStateMetadataAnnotations {
	return UpdateLimitRequest_CASPathSelectorConditionalStateMetadataAnnotations{}
}

func (UpdateLimitRequest_CASPathSelectorConditionalStateMetadata) Generation() UpdateLimitRequest_CASPathSelectorConditionalStateMetadataGeneration {
	return UpdateLimitRequest_CASPathSelectorConditionalStateMetadataGeneration{}
}

func (UpdateLimitRequest_CASPathSelectorConditionalStateMetadata) ResourceVersion() UpdateLimitRequest_CASPathSelectorConditionalStateMetadataResourceVersion {
	return UpdateLimitRequest_CASPathSelectorConditionalStateMetadataResourceVersion{}
}

func (UpdateLimitRequest_CASPathSelectorConditionalStateMetadata) OwnerReferences() UpdateLimitRequest_CASPathSelectorConditionalStateMetadataOwnerReferences {
	return UpdateLimitRequest_CASPathSelectorConditionalStateMetadataOwnerReferences{}
}

func (UpdateLimitRequest_CASPathSelectorConditionalStateMetadata) Shards() UpdateLimitRequest_CASPathSelectorConditionalStateMetadataShards {
	return UpdateLimitRequest_CASPathSelectorConditionalStateMetadataShards{}
}

func (UpdateLimitRequest_CASPathSelectorConditionalStateMetadata) Syncing() UpdateLimitRequest_CASPathSelectorConditionalStateMetadataSyncing {
	return UpdateLimitRequest_CASPathSelectorConditionalStateMetadataSyncing{}
}

func (UpdateLimitRequest_CASPathSelectorConditionalStateMetadata) Lifecycle() UpdateLimitRequest_CASPathSelectorConditionalStateMetadataLifecycle {
	return UpdateLimitRequest_CASPathSelectorConditionalStateMetadataLifecycle{}
}

type UpdateLimitRequest_CASPathSelectorConditionalStateMetadataCreateTime struct{}

func (UpdateLimitRequest_CASPathSelectorConditionalStateMetadataCreateTime) FieldPath() *UpdateLimitRequestCAS_FieldSubPath {
	return &UpdateLimitRequestCAS_FieldSubPath{
		selector: UpdateLimitRequestCAS_FieldPathSelectorConditionalState,
		subPath:  limit.NewLimitFieldPathBuilder().Metadata().CreateTime().FieldPath(),
	}
}

func (s UpdateLimitRequest_CASPathSelectorConditionalStateMetadataCreateTime) WithValue(value *timestamp.Timestamp) *UpdateLimitRequestCAS_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateLimitRequestCAS_FieldSubPathValue)
}

func (s UpdateLimitRequest_CASPathSelectorConditionalStateMetadataCreateTime) WithArrayOfValues(values []*timestamp.Timestamp) *UpdateLimitRequestCAS_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateLimitRequestCAS_FieldSubPathArrayOfValues)
}

type UpdateLimitRequest_CASPathSelectorConditionalStateMetadataUpdateTime struct{}

func (UpdateLimitRequest_CASPathSelectorConditionalStateMetadataUpdateTime) FieldPath() *UpdateLimitRequestCAS_FieldSubPath {
	return &UpdateLimitRequestCAS_FieldSubPath{
		selector: UpdateLimitRequestCAS_FieldPathSelectorConditionalState,
		subPath:  limit.NewLimitFieldPathBuilder().Metadata().UpdateTime().FieldPath(),
	}
}

func (s UpdateLimitRequest_CASPathSelectorConditionalStateMetadataUpdateTime) WithValue(value *timestamp.Timestamp) *UpdateLimitRequestCAS_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateLimitRequestCAS_FieldSubPathValue)
}

func (s UpdateLimitRequest_CASPathSelectorConditionalStateMetadataUpdateTime) WithArrayOfValues(values []*timestamp.Timestamp) *UpdateLimitRequestCAS_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateLimitRequestCAS_FieldSubPathArrayOfValues)
}

type UpdateLimitRequest_CASPathSelectorConditionalStateMetadataDeleteTime struct{}

func (UpdateLimitRequest_CASPathSelectorConditionalStateMetadataDeleteTime) FieldPath() *UpdateLimitRequestCAS_FieldSubPath {
	return &UpdateLimitRequestCAS_FieldSubPath{
		selector: UpdateLimitRequestCAS_FieldPathSelectorConditionalState,
		subPath:  limit.NewLimitFieldPathBuilder().Metadata().DeleteTime().FieldPath(),
	}
}

func (s UpdateLimitRequest_CASPathSelectorConditionalStateMetadataDeleteTime) WithValue(value *timestamp.Timestamp) *UpdateLimitRequestCAS_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateLimitRequestCAS_FieldSubPathValue)
}

func (s UpdateLimitRequest_CASPathSelectorConditionalStateMetadataDeleteTime) WithArrayOfValues(values []*timestamp.Timestamp) *UpdateLimitRequestCAS_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateLimitRequestCAS_FieldSubPathArrayOfValues)
}

type UpdateLimitRequest_CASPathSelectorConditionalStateMetadataUuid struct{}

func (UpdateLimitRequest_CASPathSelectorConditionalStateMetadataUuid) FieldPath() *UpdateLimitRequestCAS_FieldSubPath {
	return &UpdateLimitRequestCAS_FieldSubPath{
		selector: UpdateLimitRequestCAS_FieldPathSelectorConditionalState,
		subPath:  limit.NewLimitFieldPathBuilder().Metadata().Uuid().FieldPath(),
	}
}

func (s UpdateLimitRequest_CASPathSelectorConditionalStateMetadataUuid) WithValue(value string) *UpdateLimitRequestCAS_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateLimitRequestCAS_FieldSubPathValue)
}

func (s UpdateLimitRequest_CASPathSelectorConditionalStateMetadataUuid) WithArrayOfValues(values []string) *UpdateLimitRequestCAS_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateLimitRequestCAS_FieldSubPathArrayOfValues)
}

type UpdateLimitRequest_CASPathSelectorConditionalStateMetadataTags struct{}

func (UpdateLimitRequest_CASPathSelectorConditionalStateMetadataTags) FieldPath() *UpdateLimitRequestCAS_FieldSubPath {
	return &UpdateLimitRequestCAS_FieldSubPath{
		selector: UpdateLimitRequestCAS_FieldPathSelectorConditionalState,
		subPath:  limit.NewLimitFieldPathBuilder().Metadata().Tags().FieldPath(),
	}
}

func (s UpdateLimitRequest_CASPathSelectorConditionalStateMetadataTags) WithValue(value []string) *UpdateLimitRequestCAS_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateLimitRequestCAS_FieldSubPathValue)
}

func (s UpdateLimitRequest_CASPathSelectorConditionalStateMetadataTags) WithArrayOfValues(values [][]string) *UpdateLimitRequestCAS_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateLimitRequestCAS_FieldSubPathArrayOfValues)
}

func (s UpdateLimitRequest_CASPathSelectorConditionalStateMetadataTags) WithItemValue(value string) *UpdateLimitRequestCAS_FieldSubPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*UpdateLimitRequestCAS_FieldSubPathArrayItemValue)
}

type UpdateLimitRequest_CASPathSelectorConditionalStateMetadataLabels struct{}

func (UpdateLimitRequest_CASPathSelectorConditionalStateMetadataLabels) FieldPath() *UpdateLimitRequestCAS_FieldSubPath {
	return &UpdateLimitRequestCAS_FieldSubPath{
		selector: UpdateLimitRequestCAS_FieldPathSelectorConditionalState,
		subPath:  limit.NewLimitFieldPathBuilder().Metadata().Labels().FieldPath(),
	}
}

func (s UpdateLimitRequest_CASPathSelectorConditionalStateMetadataLabels) WithValue(value map[string]string) *UpdateLimitRequestCAS_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateLimitRequestCAS_FieldSubPathValue)
}

func (s UpdateLimitRequest_CASPathSelectorConditionalStateMetadataLabels) WithArrayOfValues(values []map[string]string) *UpdateLimitRequestCAS_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateLimitRequestCAS_FieldSubPathArrayOfValues)
}

func (UpdateLimitRequest_CASPathSelectorConditionalStateMetadataLabels) WithKey(key string) UpdateLimitRequest_CASMapPathSelectorConditionalStateMetadataLabels {
	return UpdateLimitRequest_CASMapPathSelectorConditionalStateMetadataLabels{key: key}
}

type UpdateLimitRequest_CASMapPathSelectorConditionalStateMetadataLabels struct {
	key string
}

func (s UpdateLimitRequest_CASMapPathSelectorConditionalStateMetadataLabels) FieldPath() *UpdateLimitRequestCAS_FieldSubPath {
	return &UpdateLimitRequestCAS_FieldSubPath{
		selector: UpdateLimitRequestCAS_FieldPathSelectorConditionalState,
		subPath:  limit.NewLimitFieldPathBuilder().Metadata().Labels().WithKey(s.key).FieldPath(),
	}
}

func (s UpdateLimitRequest_CASMapPathSelectorConditionalStateMetadataLabels) WithValue(value string) *UpdateLimitRequestCAS_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateLimitRequestCAS_FieldSubPathValue)
}

func (s UpdateLimitRequest_CASMapPathSelectorConditionalStateMetadataLabels) WithArrayOfValues(values []string) *UpdateLimitRequestCAS_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateLimitRequestCAS_FieldSubPathArrayOfValues)
}

type UpdateLimitRequest_CASPathSelectorConditionalStateMetadataAnnotations struct{}

func (UpdateLimitRequest_CASPathSelectorConditionalStateMetadataAnnotations) FieldPath() *UpdateLimitRequestCAS_FieldSubPath {
	return &UpdateLimitRequestCAS_FieldSubPath{
		selector: UpdateLimitRequestCAS_FieldPathSelectorConditionalState,
		subPath:  limit.NewLimitFieldPathBuilder().Metadata().Annotations().FieldPath(),
	}
}

func (s UpdateLimitRequest_CASPathSelectorConditionalStateMetadataAnnotations) WithValue(value map[string]string) *UpdateLimitRequestCAS_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateLimitRequestCAS_FieldSubPathValue)
}

func (s UpdateLimitRequest_CASPathSelectorConditionalStateMetadataAnnotations) WithArrayOfValues(values []map[string]string) *UpdateLimitRequestCAS_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateLimitRequestCAS_FieldSubPathArrayOfValues)
}

func (UpdateLimitRequest_CASPathSelectorConditionalStateMetadataAnnotations) WithKey(key string) UpdateLimitRequest_CASMapPathSelectorConditionalStateMetadataAnnotations {
	return UpdateLimitRequest_CASMapPathSelectorConditionalStateMetadataAnnotations{key: key}
}

type UpdateLimitRequest_CASMapPathSelectorConditionalStateMetadataAnnotations struct {
	key string
}

func (s UpdateLimitRequest_CASMapPathSelectorConditionalStateMetadataAnnotations) FieldPath() *UpdateLimitRequestCAS_FieldSubPath {
	return &UpdateLimitRequestCAS_FieldSubPath{
		selector: UpdateLimitRequestCAS_FieldPathSelectorConditionalState,
		subPath:  limit.NewLimitFieldPathBuilder().Metadata().Annotations().WithKey(s.key).FieldPath(),
	}
}

func (s UpdateLimitRequest_CASMapPathSelectorConditionalStateMetadataAnnotations) WithValue(value string) *UpdateLimitRequestCAS_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateLimitRequestCAS_FieldSubPathValue)
}

func (s UpdateLimitRequest_CASMapPathSelectorConditionalStateMetadataAnnotations) WithArrayOfValues(values []string) *UpdateLimitRequestCAS_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateLimitRequestCAS_FieldSubPathArrayOfValues)
}

type UpdateLimitRequest_CASPathSelectorConditionalStateMetadataGeneration struct{}

func (UpdateLimitRequest_CASPathSelectorConditionalStateMetadataGeneration) FieldPath() *UpdateLimitRequestCAS_FieldSubPath {
	return &UpdateLimitRequestCAS_FieldSubPath{
		selector: UpdateLimitRequestCAS_FieldPathSelectorConditionalState,
		subPath:  limit.NewLimitFieldPathBuilder().Metadata().Generation().FieldPath(),
	}
}

func (s UpdateLimitRequest_CASPathSelectorConditionalStateMetadataGeneration) WithValue(value int64) *UpdateLimitRequestCAS_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateLimitRequestCAS_FieldSubPathValue)
}

func (s UpdateLimitRequest_CASPathSelectorConditionalStateMetadataGeneration) WithArrayOfValues(values []int64) *UpdateLimitRequestCAS_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateLimitRequestCAS_FieldSubPathArrayOfValues)
}

type UpdateLimitRequest_CASPathSelectorConditionalStateMetadataResourceVersion struct{}

func (UpdateLimitRequest_CASPathSelectorConditionalStateMetadataResourceVersion) FieldPath() *UpdateLimitRequestCAS_FieldSubPath {
	return &UpdateLimitRequestCAS_FieldSubPath{
		selector: UpdateLimitRequestCAS_FieldPathSelectorConditionalState,
		subPath:  limit.NewLimitFieldPathBuilder().Metadata().ResourceVersion().FieldPath(),
	}
}

func (s UpdateLimitRequest_CASPathSelectorConditionalStateMetadataResourceVersion) WithValue(value string) *UpdateLimitRequestCAS_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateLimitRequestCAS_FieldSubPathValue)
}

func (s UpdateLimitRequest_CASPathSelectorConditionalStateMetadataResourceVersion) WithArrayOfValues(values []string) *UpdateLimitRequestCAS_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateLimitRequestCAS_FieldSubPathArrayOfValues)
}

type UpdateLimitRequest_CASPathSelectorConditionalStateMetadataOwnerReferences struct{}

func (UpdateLimitRequest_CASPathSelectorConditionalStateMetadataOwnerReferences) FieldPath() *UpdateLimitRequestCAS_FieldSubPath {
	return &UpdateLimitRequestCAS_FieldSubPath{
		selector: UpdateLimitRequestCAS_FieldPathSelectorConditionalState,
		subPath:  limit.NewLimitFieldPathBuilder().Metadata().OwnerReferences().FieldPath(),
	}
}

func (s UpdateLimitRequest_CASPathSelectorConditionalStateMetadataOwnerReferences) WithValue(value []*ntt_meta.OwnerReference) *UpdateLimitRequestCAS_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateLimitRequestCAS_FieldSubPathValue)
}

func (s UpdateLimitRequest_CASPathSelectorConditionalStateMetadataOwnerReferences) WithArrayOfValues(values [][]*ntt_meta.OwnerReference) *UpdateLimitRequestCAS_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateLimitRequestCAS_FieldSubPathArrayOfValues)
}

func (s UpdateLimitRequest_CASPathSelectorConditionalStateMetadataOwnerReferences) WithItemValue(value *ntt_meta.OwnerReference) *UpdateLimitRequestCAS_FieldSubPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*UpdateLimitRequestCAS_FieldSubPathArrayItemValue)
}

func (UpdateLimitRequest_CASPathSelectorConditionalStateMetadataOwnerReferences) Kind() UpdateLimitRequest_CASPathSelectorConditionalStateMetadataOwnerReferencesKind {
	return UpdateLimitRequest_CASPathSelectorConditionalStateMetadataOwnerReferencesKind{}
}

func (UpdateLimitRequest_CASPathSelectorConditionalStateMetadataOwnerReferences) Version() UpdateLimitRequest_CASPathSelectorConditionalStateMetadataOwnerReferencesVersion {
	return UpdateLimitRequest_CASPathSelectorConditionalStateMetadataOwnerReferencesVersion{}
}

func (UpdateLimitRequest_CASPathSelectorConditionalStateMetadataOwnerReferences) Name() UpdateLimitRequest_CASPathSelectorConditionalStateMetadataOwnerReferencesName {
	return UpdateLimitRequest_CASPathSelectorConditionalStateMetadataOwnerReferencesName{}
}

func (UpdateLimitRequest_CASPathSelectorConditionalStateMetadataOwnerReferences) Region() UpdateLimitRequest_CASPathSelectorConditionalStateMetadataOwnerReferencesRegion {
	return UpdateLimitRequest_CASPathSelectorConditionalStateMetadataOwnerReferencesRegion{}
}

func (UpdateLimitRequest_CASPathSelectorConditionalStateMetadataOwnerReferences) Controller() UpdateLimitRequest_CASPathSelectorConditionalStateMetadataOwnerReferencesController {
	return UpdateLimitRequest_CASPathSelectorConditionalStateMetadataOwnerReferencesController{}
}

func (UpdateLimitRequest_CASPathSelectorConditionalStateMetadataOwnerReferences) BlockOwnerDeletion() UpdateLimitRequest_CASPathSelectorConditionalStateMetadataOwnerReferencesBlockOwnerDeletion {
	return UpdateLimitRequest_CASPathSelectorConditionalStateMetadataOwnerReferencesBlockOwnerDeletion{}
}

func (UpdateLimitRequest_CASPathSelectorConditionalStateMetadataOwnerReferences) RequiresOwnerReference() UpdateLimitRequest_CASPathSelectorConditionalStateMetadataOwnerReferencesRequiresOwnerReference {
	return UpdateLimitRequest_CASPathSelectorConditionalStateMetadataOwnerReferencesRequiresOwnerReference{}
}

type UpdateLimitRequest_CASPathSelectorConditionalStateMetadataOwnerReferencesKind struct{}

func (UpdateLimitRequest_CASPathSelectorConditionalStateMetadataOwnerReferencesKind) FieldPath() *UpdateLimitRequestCAS_FieldSubPath {
	return &UpdateLimitRequestCAS_FieldSubPath{
		selector: UpdateLimitRequestCAS_FieldPathSelectorConditionalState,
		subPath:  limit.NewLimitFieldPathBuilder().Metadata().OwnerReferences().Kind().FieldPath(),
	}
}

func (s UpdateLimitRequest_CASPathSelectorConditionalStateMetadataOwnerReferencesKind) WithValue(value string) *UpdateLimitRequestCAS_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateLimitRequestCAS_FieldSubPathValue)
}

func (s UpdateLimitRequest_CASPathSelectorConditionalStateMetadataOwnerReferencesKind) WithArrayOfValues(values []string) *UpdateLimitRequestCAS_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateLimitRequestCAS_FieldSubPathArrayOfValues)
}

type UpdateLimitRequest_CASPathSelectorConditionalStateMetadataOwnerReferencesVersion struct{}

func (UpdateLimitRequest_CASPathSelectorConditionalStateMetadataOwnerReferencesVersion) FieldPath() *UpdateLimitRequestCAS_FieldSubPath {
	return &UpdateLimitRequestCAS_FieldSubPath{
		selector: UpdateLimitRequestCAS_FieldPathSelectorConditionalState,
		subPath:  limit.NewLimitFieldPathBuilder().Metadata().OwnerReferences().Version().FieldPath(),
	}
}

func (s UpdateLimitRequest_CASPathSelectorConditionalStateMetadataOwnerReferencesVersion) WithValue(value string) *UpdateLimitRequestCAS_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateLimitRequestCAS_FieldSubPathValue)
}

func (s UpdateLimitRequest_CASPathSelectorConditionalStateMetadataOwnerReferencesVersion) WithArrayOfValues(values []string) *UpdateLimitRequestCAS_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateLimitRequestCAS_FieldSubPathArrayOfValues)
}

type UpdateLimitRequest_CASPathSelectorConditionalStateMetadataOwnerReferencesName struct{}

func (UpdateLimitRequest_CASPathSelectorConditionalStateMetadataOwnerReferencesName) FieldPath() *UpdateLimitRequestCAS_FieldSubPath {
	return &UpdateLimitRequestCAS_FieldSubPath{
		selector: UpdateLimitRequestCAS_FieldPathSelectorConditionalState,
		subPath:  limit.NewLimitFieldPathBuilder().Metadata().OwnerReferences().Name().FieldPath(),
	}
}

func (s UpdateLimitRequest_CASPathSelectorConditionalStateMetadataOwnerReferencesName) WithValue(value string) *UpdateLimitRequestCAS_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateLimitRequestCAS_FieldSubPathValue)
}

func (s UpdateLimitRequest_CASPathSelectorConditionalStateMetadataOwnerReferencesName) WithArrayOfValues(values []string) *UpdateLimitRequestCAS_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateLimitRequestCAS_FieldSubPathArrayOfValues)
}

type UpdateLimitRequest_CASPathSelectorConditionalStateMetadataOwnerReferencesRegion struct{}

func (UpdateLimitRequest_CASPathSelectorConditionalStateMetadataOwnerReferencesRegion) FieldPath() *UpdateLimitRequestCAS_FieldSubPath {
	return &UpdateLimitRequestCAS_FieldSubPath{
		selector: UpdateLimitRequestCAS_FieldPathSelectorConditionalState,
		subPath:  limit.NewLimitFieldPathBuilder().Metadata().OwnerReferences().Region().FieldPath(),
	}
}

func (s UpdateLimitRequest_CASPathSelectorConditionalStateMetadataOwnerReferencesRegion) WithValue(value string) *UpdateLimitRequestCAS_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateLimitRequestCAS_FieldSubPathValue)
}

func (s UpdateLimitRequest_CASPathSelectorConditionalStateMetadataOwnerReferencesRegion) WithArrayOfValues(values []string) *UpdateLimitRequestCAS_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateLimitRequestCAS_FieldSubPathArrayOfValues)
}

type UpdateLimitRequest_CASPathSelectorConditionalStateMetadataOwnerReferencesController struct{}

func (UpdateLimitRequest_CASPathSelectorConditionalStateMetadataOwnerReferencesController) FieldPath() *UpdateLimitRequestCAS_FieldSubPath {
	return &UpdateLimitRequestCAS_FieldSubPath{
		selector: UpdateLimitRequestCAS_FieldPathSelectorConditionalState,
		subPath:  limit.NewLimitFieldPathBuilder().Metadata().OwnerReferences().Controller().FieldPath(),
	}
}

func (s UpdateLimitRequest_CASPathSelectorConditionalStateMetadataOwnerReferencesController) WithValue(value bool) *UpdateLimitRequestCAS_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateLimitRequestCAS_FieldSubPathValue)
}

func (s UpdateLimitRequest_CASPathSelectorConditionalStateMetadataOwnerReferencesController) WithArrayOfValues(values []bool) *UpdateLimitRequestCAS_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateLimitRequestCAS_FieldSubPathArrayOfValues)
}

type UpdateLimitRequest_CASPathSelectorConditionalStateMetadataOwnerReferencesBlockOwnerDeletion struct{}

func (UpdateLimitRequest_CASPathSelectorConditionalStateMetadataOwnerReferencesBlockOwnerDeletion) FieldPath() *UpdateLimitRequestCAS_FieldSubPath {
	return &UpdateLimitRequestCAS_FieldSubPath{
		selector: UpdateLimitRequestCAS_FieldPathSelectorConditionalState,
		subPath:  limit.NewLimitFieldPathBuilder().Metadata().OwnerReferences().BlockOwnerDeletion().FieldPath(),
	}
}

func (s UpdateLimitRequest_CASPathSelectorConditionalStateMetadataOwnerReferencesBlockOwnerDeletion) WithValue(value bool) *UpdateLimitRequestCAS_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateLimitRequestCAS_FieldSubPathValue)
}

func (s UpdateLimitRequest_CASPathSelectorConditionalStateMetadataOwnerReferencesBlockOwnerDeletion) WithArrayOfValues(values []bool) *UpdateLimitRequestCAS_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateLimitRequestCAS_FieldSubPathArrayOfValues)
}

type UpdateLimitRequest_CASPathSelectorConditionalStateMetadataOwnerReferencesRequiresOwnerReference struct{}

func (UpdateLimitRequest_CASPathSelectorConditionalStateMetadataOwnerReferencesRequiresOwnerReference) FieldPath() *UpdateLimitRequestCAS_FieldSubPath {
	return &UpdateLimitRequestCAS_FieldSubPath{
		selector: UpdateLimitRequestCAS_FieldPathSelectorConditionalState,
		subPath:  limit.NewLimitFieldPathBuilder().Metadata().OwnerReferences().RequiresOwnerReference().FieldPath(),
	}
}

func (s UpdateLimitRequest_CASPathSelectorConditionalStateMetadataOwnerReferencesRequiresOwnerReference) WithValue(value bool) *UpdateLimitRequestCAS_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateLimitRequestCAS_FieldSubPathValue)
}

func (s UpdateLimitRequest_CASPathSelectorConditionalStateMetadataOwnerReferencesRequiresOwnerReference) WithArrayOfValues(values []bool) *UpdateLimitRequestCAS_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateLimitRequestCAS_FieldSubPathArrayOfValues)
}

type UpdateLimitRequest_CASPathSelectorConditionalStateMetadataShards struct{}

func (UpdateLimitRequest_CASPathSelectorConditionalStateMetadataShards) FieldPath() *UpdateLimitRequestCAS_FieldSubPath {
	return &UpdateLimitRequestCAS_FieldSubPath{
		selector: UpdateLimitRequestCAS_FieldPathSelectorConditionalState,
		subPath:  limit.NewLimitFieldPathBuilder().Metadata().Shards().FieldPath(),
	}
}

func (s UpdateLimitRequest_CASPathSelectorConditionalStateMetadataShards) WithValue(value map[string]int64) *UpdateLimitRequestCAS_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateLimitRequestCAS_FieldSubPathValue)
}

func (s UpdateLimitRequest_CASPathSelectorConditionalStateMetadataShards) WithArrayOfValues(values []map[string]int64) *UpdateLimitRequestCAS_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateLimitRequestCAS_FieldSubPathArrayOfValues)
}

func (UpdateLimitRequest_CASPathSelectorConditionalStateMetadataShards) WithKey(key string) UpdateLimitRequest_CASMapPathSelectorConditionalStateMetadataShards {
	return UpdateLimitRequest_CASMapPathSelectorConditionalStateMetadataShards{key: key}
}

type UpdateLimitRequest_CASMapPathSelectorConditionalStateMetadataShards struct {
	key string
}

func (s UpdateLimitRequest_CASMapPathSelectorConditionalStateMetadataShards) FieldPath() *UpdateLimitRequestCAS_FieldSubPath {
	return &UpdateLimitRequestCAS_FieldSubPath{
		selector: UpdateLimitRequestCAS_FieldPathSelectorConditionalState,
		subPath:  limit.NewLimitFieldPathBuilder().Metadata().Shards().WithKey(s.key).FieldPath(),
	}
}

func (s UpdateLimitRequest_CASMapPathSelectorConditionalStateMetadataShards) WithValue(value int64) *UpdateLimitRequestCAS_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateLimitRequestCAS_FieldSubPathValue)
}

func (s UpdateLimitRequest_CASMapPathSelectorConditionalStateMetadataShards) WithArrayOfValues(values []int64) *UpdateLimitRequestCAS_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateLimitRequestCAS_FieldSubPathArrayOfValues)
}

type UpdateLimitRequest_CASPathSelectorConditionalStateMetadataSyncing struct{}

func (UpdateLimitRequest_CASPathSelectorConditionalStateMetadataSyncing) FieldPath() *UpdateLimitRequestCAS_FieldSubPath {
	return &UpdateLimitRequestCAS_FieldSubPath{
		selector: UpdateLimitRequestCAS_FieldPathSelectorConditionalState,
		subPath:  limit.NewLimitFieldPathBuilder().Metadata().Syncing().FieldPath(),
	}
}

func (s UpdateLimitRequest_CASPathSelectorConditionalStateMetadataSyncing) WithValue(value *ntt_meta.SyncingMeta) *UpdateLimitRequestCAS_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateLimitRequestCAS_FieldSubPathValue)
}

func (s UpdateLimitRequest_CASPathSelectorConditionalStateMetadataSyncing) WithArrayOfValues(values []*ntt_meta.SyncingMeta) *UpdateLimitRequestCAS_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateLimitRequestCAS_FieldSubPathArrayOfValues)
}

func (UpdateLimitRequest_CASPathSelectorConditionalStateMetadataSyncing) OwningRegion() UpdateLimitRequest_CASPathSelectorConditionalStateMetadataSyncingOwningRegion {
	return UpdateLimitRequest_CASPathSelectorConditionalStateMetadataSyncingOwningRegion{}
}

func (UpdateLimitRequest_CASPathSelectorConditionalStateMetadataSyncing) Regions() UpdateLimitRequest_CASPathSelectorConditionalStateMetadataSyncingRegions {
	return UpdateLimitRequest_CASPathSelectorConditionalStateMetadataSyncingRegions{}
}

type UpdateLimitRequest_CASPathSelectorConditionalStateMetadataSyncingOwningRegion struct{}

func (UpdateLimitRequest_CASPathSelectorConditionalStateMetadataSyncingOwningRegion) FieldPath() *UpdateLimitRequestCAS_FieldSubPath {
	return &UpdateLimitRequestCAS_FieldSubPath{
		selector: UpdateLimitRequestCAS_FieldPathSelectorConditionalState,
		subPath:  limit.NewLimitFieldPathBuilder().Metadata().Syncing().OwningRegion().FieldPath(),
	}
}

func (s UpdateLimitRequest_CASPathSelectorConditionalStateMetadataSyncingOwningRegion) WithValue(value string) *UpdateLimitRequestCAS_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateLimitRequestCAS_FieldSubPathValue)
}

func (s UpdateLimitRequest_CASPathSelectorConditionalStateMetadataSyncingOwningRegion) WithArrayOfValues(values []string) *UpdateLimitRequestCAS_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateLimitRequestCAS_FieldSubPathArrayOfValues)
}

type UpdateLimitRequest_CASPathSelectorConditionalStateMetadataSyncingRegions struct{}

func (UpdateLimitRequest_CASPathSelectorConditionalStateMetadataSyncingRegions) FieldPath() *UpdateLimitRequestCAS_FieldSubPath {
	return &UpdateLimitRequestCAS_FieldSubPath{
		selector: UpdateLimitRequestCAS_FieldPathSelectorConditionalState,
		subPath:  limit.NewLimitFieldPathBuilder().Metadata().Syncing().Regions().FieldPath(),
	}
}

func (s UpdateLimitRequest_CASPathSelectorConditionalStateMetadataSyncingRegions) WithValue(value []string) *UpdateLimitRequestCAS_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateLimitRequestCAS_FieldSubPathValue)
}

func (s UpdateLimitRequest_CASPathSelectorConditionalStateMetadataSyncingRegions) WithArrayOfValues(values [][]string) *UpdateLimitRequestCAS_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateLimitRequestCAS_FieldSubPathArrayOfValues)
}

func (s UpdateLimitRequest_CASPathSelectorConditionalStateMetadataSyncingRegions) WithItemValue(value string) *UpdateLimitRequestCAS_FieldSubPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*UpdateLimitRequestCAS_FieldSubPathArrayItemValue)
}

type UpdateLimitRequest_CASPathSelectorConditionalStateMetadataLifecycle struct{}

func (UpdateLimitRequest_CASPathSelectorConditionalStateMetadataLifecycle) FieldPath() *UpdateLimitRequestCAS_FieldSubPath {
	return &UpdateLimitRequestCAS_FieldSubPath{
		selector: UpdateLimitRequestCAS_FieldPathSelectorConditionalState,
		subPath:  limit.NewLimitFieldPathBuilder().Metadata().Lifecycle().FieldPath(),
	}
}

func (s UpdateLimitRequest_CASPathSelectorConditionalStateMetadataLifecycle) WithValue(value *ntt_meta.Lifecycle) *UpdateLimitRequestCAS_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateLimitRequestCAS_FieldSubPathValue)
}

func (s UpdateLimitRequest_CASPathSelectorConditionalStateMetadataLifecycle) WithArrayOfValues(values []*ntt_meta.Lifecycle) *UpdateLimitRequestCAS_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateLimitRequestCAS_FieldSubPathArrayOfValues)
}

func (UpdateLimitRequest_CASPathSelectorConditionalStateMetadataLifecycle) State() UpdateLimitRequest_CASPathSelectorConditionalStateMetadataLifecycleState {
	return UpdateLimitRequest_CASPathSelectorConditionalStateMetadataLifecycleState{}
}

func (UpdateLimitRequest_CASPathSelectorConditionalStateMetadataLifecycle) BlockDeletion() UpdateLimitRequest_CASPathSelectorConditionalStateMetadataLifecycleBlockDeletion {
	return UpdateLimitRequest_CASPathSelectorConditionalStateMetadataLifecycleBlockDeletion{}
}

type UpdateLimitRequest_CASPathSelectorConditionalStateMetadataLifecycleState struct{}

func (UpdateLimitRequest_CASPathSelectorConditionalStateMetadataLifecycleState) FieldPath() *UpdateLimitRequestCAS_FieldSubPath {
	return &UpdateLimitRequestCAS_FieldSubPath{
		selector: UpdateLimitRequestCAS_FieldPathSelectorConditionalState,
		subPath:  limit.NewLimitFieldPathBuilder().Metadata().Lifecycle().State().FieldPath(),
	}
}

func (s UpdateLimitRequest_CASPathSelectorConditionalStateMetadataLifecycleState) WithValue(value ntt_meta.Lifecycle_State) *UpdateLimitRequestCAS_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateLimitRequestCAS_FieldSubPathValue)
}

func (s UpdateLimitRequest_CASPathSelectorConditionalStateMetadataLifecycleState) WithArrayOfValues(values []ntt_meta.Lifecycle_State) *UpdateLimitRequestCAS_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateLimitRequestCAS_FieldSubPathArrayOfValues)
}

type UpdateLimitRequest_CASPathSelectorConditionalStateMetadataLifecycleBlockDeletion struct{}

func (UpdateLimitRequest_CASPathSelectorConditionalStateMetadataLifecycleBlockDeletion) FieldPath() *UpdateLimitRequestCAS_FieldSubPath {
	return &UpdateLimitRequestCAS_FieldSubPath{
		selector: UpdateLimitRequestCAS_FieldPathSelectorConditionalState,
		subPath:  limit.NewLimitFieldPathBuilder().Metadata().Lifecycle().BlockDeletion().FieldPath(),
	}
}

func (s UpdateLimitRequest_CASPathSelectorConditionalStateMetadataLifecycleBlockDeletion) WithValue(value bool) *UpdateLimitRequestCAS_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateLimitRequestCAS_FieldSubPathValue)
}

func (s UpdateLimitRequest_CASPathSelectorConditionalStateMetadataLifecycleBlockDeletion) WithArrayOfValues(values []bool) *UpdateLimitRequestCAS_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateLimitRequestCAS_FieldSubPathArrayOfValues)
}

type UpdateLimitRequest_CASPathSelectorFieldMask struct{}

func (UpdateLimitRequest_CASPathSelectorFieldMask) FieldPath() *UpdateLimitRequestCAS_FieldTerminalPath {
	return &UpdateLimitRequestCAS_FieldTerminalPath{selector: UpdateLimitRequestCAS_FieldPathSelectorFieldMask}
}

func (s UpdateLimitRequest_CASPathSelectorFieldMask) WithValue(value *limit.Limit_FieldMask) *UpdateLimitRequestCAS_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateLimitRequestCAS_FieldTerminalPathValue)
}

func (s UpdateLimitRequest_CASPathSelectorFieldMask) WithArrayOfValues(values []*limit.Limit_FieldMask) *UpdateLimitRequestCAS_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateLimitRequestCAS_FieldTerminalPathArrayOfValues)
}

type DeleteLimitRequestFieldPathBuilder struct{}

func NewDeleteLimitRequestFieldPathBuilder() DeleteLimitRequestFieldPathBuilder {
	return DeleteLimitRequestFieldPathBuilder{}
}
func (DeleteLimitRequestFieldPathBuilder) Name() DeleteLimitRequestPathSelectorName {
	return DeleteLimitRequestPathSelectorName{}
}

type DeleteLimitRequestPathSelectorName struct{}

func (DeleteLimitRequestPathSelectorName) FieldPath() *DeleteLimitRequest_FieldTerminalPath {
	return &DeleteLimitRequest_FieldTerminalPath{selector: DeleteLimitRequest_FieldPathSelectorName}
}

func (s DeleteLimitRequestPathSelectorName) WithValue(value *limit.Reference) *DeleteLimitRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*DeleteLimitRequest_FieldTerminalPathValue)
}

func (s DeleteLimitRequestPathSelectorName) WithArrayOfValues(values []*limit.Reference) *DeleteLimitRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*DeleteLimitRequest_FieldTerminalPathArrayOfValues)
}
