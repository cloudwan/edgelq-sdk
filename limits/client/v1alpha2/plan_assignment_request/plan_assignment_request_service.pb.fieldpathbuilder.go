// Code generated by protoc-gen-goten-object
// File: edgelq/limits/proto/v1alpha2/plan_assignment_request_service.proto
// DO NOT EDIT!!!

package plan_assignment_request_client

// proto imports
import (
	ntt_meta "github.com/cloudwan/edgelq-sdk/common/types/meta"
	multi_region_policy "github.com/cloudwan/edgelq-sdk/common/types/multi_region_policy"
	iam_iam_common "github.com/cloudwan/edgelq-sdk/iam/resources/v1alpha2/common"
	iam_organization "github.com/cloudwan/edgelq-sdk/iam/resources/v1alpha2/organization"
	iam_project "github.com/cloudwan/edgelq-sdk/iam/resources/v1alpha2/project"
	accepted_plan "github.com/cloudwan/edgelq-sdk/limits/resources/v1alpha2/accepted_plan"
	common "github.com/cloudwan/edgelq-sdk/limits/resources/v1alpha2/common"
	plan "github.com/cloudwan/edgelq-sdk/limits/resources/v1alpha2/plan"
	plan_assignment "github.com/cloudwan/edgelq-sdk/limits/resources/v1alpha2/plan_assignment"
	plan_assignment_request "github.com/cloudwan/edgelq-sdk/limits/resources/v1alpha2/plan_assignment_request"
	meta_resource "github.com/cloudwan/edgelq-sdk/meta/resources/v1alpha2/resource"
	meta_service "github.com/cloudwan/edgelq-sdk/meta/resources/v1alpha2/service"
	view "github.com/cloudwan/goten-sdk/runtime/api/view"
	watch_type "github.com/cloudwan/goten-sdk/runtime/api/watch_type"
	empty "github.com/golang/protobuf/ptypes/empty"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	field_mask "google.golang.org/genproto/protobuf/field_mask"
)

// make sure we're using proto imports
var (
	_ = &ntt_meta.Meta{}
	_ = &multi_region_policy.MultiRegionPolicy{}
	_ = &iam_iam_common.PCR{}
	_ = &iam_organization.Organization{}
	_ = &iam_project.Project{}
	_ = &accepted_plan.AcceptedPlan{}
	_ = &common.Allowance{}
	_ = &plan.Plan{}
	_ = &plan_assignment.PlanAssignment{}
	_ = &plan_assignment_request.PlanAssignmentRequest{}
	_ = &meta_resource.Resource{}
	_ = &meta_service.Service{}
	_ = &empty.Empty{}
	_ = &field_mask.FieldMask{}
	_ = &timestamp.Timestamp{}
	_ = view.View(0)
	_ = watch_type.WatchType(0)
)

type GetPlanAssignmentRequestRequestFieldPathBuilder struct{}

func NewGetPlanAssignmentRequestRequestFieldPathBuilder() GetPlanAssignmentRequestRequestFieldPathBuilder {
	return GetPlanAssignmentRequestRequestFieldPathBuilder{}
}
func (GetPlanAssignmentRequestRequestFieldPathBuilder) Name() GetPlanAssignmentRequestRequestPathSelectorName {
	return GetPlanAssignmentRequestRequestPathSelectorName{}
}
func (GetPlanAssignmentRequestRequestFieldPathBuilder) FieldMask() GetPlanAssignmentRequestRequestPathSelectorFieldMask {
	return GetPlanAssignmentRequestRequestPathSelectorFieldMask{}
}
func (GetPlanAssignmentRequestRequestFieldPathBuilder) View() GetPlanAssignmentRequestRequestPathSelectorView {
	return GetPlanAssignmentRequestRequestPathSelectorView{}
}

type GetPlanAssignmentRequestRequestPathSelectorName struct{}

func (GetPlanAssignmentRequestRequestPathSelectorName) FieldPath() *GetPlanAssignmentRequestRequest_FieldTerminalPath {
	return &GetPlanAssignmentRequestRequest_FieldTerminalPath{selector: GetPlanAssignmentRequestRequest_FieldPathSelectorName}
}

func (s GetPlanAssignmentRequestRequestPathSelectorName) WithValue(value *plan_assignment_request.Reference) *GetPlanAssignmentRequestRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*GetPlanAssignmentRequestRequest_FieldTerminalPathValue)
}

func (s GetPlanAssignmentRequestRequestPathSelectorName) WithArrayOfValues(values []*plan_assignment_request.Reference) *GetPlanAssignmentRequestRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*GetPlanAssignmentRequestRequest_FieldTerminalPathArrayOfValues)
}

type GetPlanAssignmentRequestRequestPathSelectorFieldMask struct{}

func (GetPlanAssignmentRequestRequestPathSelectorFieldMask) FieldPath() *GetPlanAssignmentRequestRequest_FieldTerminalPath {
	return &GetPlanAssignmentRequestRequest_FieldTerminalPath{selector: GetPlanAssignmentRequestRequest_FieldPathSelectorFieldMask}
}

func (s GetPlanAssignmentRequestRequestPathSelectorFieldMask) WithValue(value *plan_assignment_request.PlanAssignmentRequest_FieldMask) *GetPlanAssignmentRequestRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*GetPlanAssignmentRequestRequest_FieldTerminalPathValue)
}

func (s GetPlanAssignmentRequestRequestPathSelectorFieldMask) WithArrayOfValues(values []*plan_assignment_request.PlanAssignmentRequest_FieldMask) *GetPlanAssignmentRequestRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*GetPlanAssignmentRequestRequest_FieldTerminalPathArrayOfValues)
}

type GetPlanAssignmentRequestRequestPathSelectorView struct{}

func (GetPlanAssignmentRequestRequestPathSelectorView) FieldPath() *GetPlanAssignmentRequestRequest_FieldTerminalPath {
	return &GetPlanAssignmentRequestRequest_FieldTerminalPath{selector: GetPlanAssignmentRequestRequest_FieldPathSelectorView}
}

func (s GetPlanAssignmentRequestRequestPathSelectorView) WithValue(value view.View) *GetPlanAssignmentRequestRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*GetPlanAssignmentRequestRequest_FieldTerminalPathValue)
}

func (s GetPlanAssignmentRequestRequestPathSelectorView) WithArrayOfValues(values []view.View) *GetPlanAssignmentRequestRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*GetPlanAssignmentRequestRequest_FieldTerminalPathArrayOfValues)
}

type BatchGetPlanAssignmentRequestsRequestFieldPathBuilder struct{}

func NewBatchGetPlanAssignmentRequestsRequestFieldPathBuilder() BatchGetPlanAssignmentRequestsRequestFieldPathBuilder {
	return BatchGetPlanAssignmentRequestsRequestFieldPathBuilder{}
}
func (BatchGetPlanAssignmentRequestsRequestFieldPathBuilder) Names() BatchGetPlanAssignmentRequestsRequestPathSelectorNames {
	return BatchGetPlanAssignmentRequestsRequestPathSelectorNames{}
}
func (BatchGetPlanAssignmentRequestsRequestFieldPathBuilder) FieldMask() BatchGetPlanAssignmentRequestsRequestPathSelectorFieldMask {
	return BatchGetPlanAssignmentRequestsRequestPathSelectorFieldMask{}
}
func (BatchGetPlanAssignmentRequestsRequestFieldPathBuilder) View() BatchGetPlanAssignmentRequestsRequestPathSelectorView {
	return BatchGetPlanAssignmentRequestsRequestPathSelectorView{}
}

type BatchGetPlanAssignmentRequestsRequestPathSelectorNames struct{}

func (BatchGetPlanAssignmentRequestsRequestPathSelectorNames) FieldPath() *BatchGetPlanAssignmentRequestsRequest_FieldTerminalPath {
	return &BatchGetPlanAssignmentRequestsRequest_FieldTerminalPath{selector: BatchGetPlanAssignmentRequestsRequest_FieldPathSelectorNames}
}

func (s BatchGetPlanAssignmentRequestsRequestPathSelectorNames) WithValue(value []*plan_assignment_request.Reference) *BatchGetPlanAssignmentRequestsRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetPlanAssignmentRequestsRequest_FieldTerminalPathValue)
}

func (s BatchGetPlanAssignmentRequestsRequestPathSelectorNames) WithArrayOfValues(values [][]*plan_assignment_request.Reference) *BatchGetPlanAssignmentRequestsRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetPlanAssignmentRequestsRequest_FieldTerminalPathArrayOfValues)
}

func (s BatchGetPlanAssignmentRequestsRequestPathSelectorNames) WithItemValue(value *plan_assignment_request.Reference) *BatchGetPlanAssignmentRequestsRequest_FieldTerminalPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*BatchGetPlanAssignmentRequestsRequest_FieldTerminalPathArrayItemValue)
}

type BatchGetPlanAssignmentRequestsRequestPathSelectorFieldMask struct{}

func (BatchGetPlanAssignmentRequestsRequestPathSelectorFieldMask) FieldPath() *BatchGetPlanAssignmentRequestsRequest_FieldTerminalPath {
	return &BatchGetPlanAssignmentRequestsRequest_FieldTerminalPath{selector: BatchGetPlanAssignmentRequestsRequest_FieldPathSelectorFieldMask}
}

func (s BatchGetPlanAssignmentRequestsRequestPathSelectorFieldMask) WithValue(value *plan_assignment_request.PlanAssignmentRequest_FieldMask) *BatchGetPlanAssignmentRequestsRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetPlanAssignmentRequestsRequest_FieldTerminalPathValue)
}

func (s BatchGetPlanAssignmentRequestsRequestPathSelectorFieldMask) WithArrayOfValues(values []*plan_assignment_request.PlanAssignmentRequest_FieldMask) *BatchGetPlanAssignmentRequestsRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetPlanAssignmentRequestsRequest_FieldTerminalPathArrayOfValues)
}

type BatchGetPlanAssignmentRequestsRequestPathSelectorView struct{}

func (BatchGetPlanAssignmentRequestsRequestPathSelectorView) FieldPath() *BatchGetPlanAssignmentRequestsRequest_FieldTerminalPath {
	return &BatchGetPlanAssignmentRequestsRequest_FieldTerminalPath{selector: BatchGetPlanAssignmentRequestsRequest_FieldPathSelectorView}
}

func (s BatchGetPlanAssignmentRequestsRequestPathSelectorView) WithValue(value view.View) *BatchGetPlanAssignmentRequestsRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetPlanAssignmentRequestsRequest_FieldTerminalPathValue)
}

func (s BatchGetPlanAssignmentRequestsRequestPathSelectorView) WithArrayOfValues(values []view.View) *BatchGetPlanAssignmentRequestsRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetPlanAssignmentRequestsRequest_FieldTerminalPathArrayOfValues)
}

type BatchGetPlanAssignmentRequestsResponseFieldPathBuilder struct{}

func NewBatchGetPlanAssignmentRequestsResponseFieldPathBuilder() BatchGetPlanAssignmentRequestsResponseFieldPathBuilder {
	return BatchGetPlanAssignmentRequestsResponseFieldPathBuilder{}
}
func (BatchGetPlanAssignmentRequestsResponseFieldPathBuilder) PlanAssignmentRequests() BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequests {
	return BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequests{}
}
func (BatchGetPlanAssignmentRequestsResponseFieldPathBuilder) Missing() BatchGetPlanAssignmentRequestsResponsePathSelectorMissing {
	return BatchGetPlanAssignmentRequestsResponsePathSelectorMissing{}
}

type BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequests struct{}

func (BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequests) FieldPath() *BatchGetPlanAssignmentRequestsResponse_FieldTerminalPath {
	return &BatchGetPlanAssignmentRequestsResponse_FieldTerminalPath{selector: BatchGetPlanAssignmentRequestsResponse_FieldPathSelectorPlanAssignmentRequests}
}

func (s BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequests) WithValue(value []*plan_assignment_request.PlanAssignmentRequest) *BatchGetPlanAssignmentRequestsResponse_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetPlanAssignmentRequestsResponse_FieldTerminalPathValue)
}

func (s BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequests) WithArrayOfValues(values [][]*plan_assignment_request.PlanAssignmentRequest) *BatchGetPlanAssignmentRequestsResponse_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetPlanAssignmentRequestsResponse_FieldTerminalPathArrayOfValues)
}

func (s BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequests) WithItemValue(value *plan_assignment_request.PlanAssignmentRequest) *BatchGetPlanAssignmentRequestsResponse_FieldTerminalPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*BatchGetPlanAssignmentRequestsResponse_FieldTerminalPathArrayItemValue)
}
func (BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequests) WithSubPath(subPath plan_assignment_request.PlanAssignmentRequest_FieldPath) *BatchGetPlanAssignmentRequestsResponse_FieldSubPath {
	return &BatchGetPlanAssignmentRequestsResponse_FieldSubPath{selector: BatchGetPlanAssignmentRequestsResponse_FieldPathSelectorPlanAssignmentRequests, subPath: subPath}
}

func (s BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequests) WithSubValue(subPathValue plan_assignment_request.PlanAssignmentRequest_FieldPathValue) *BatchGetPlanAssignmentRequestsResponse_FieldSubPathValue {
	return &BatchGetPlanAssignmentRequestsResponse_FieldSubPathValue{BatchGetPlanAssignmentRequestsResponse_FieldPath: s.WithSubPath(subPathValue), subPathValue: subPathValue}
}

func (s BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequests) WithSubArrayOfValues(subPathArrayOfValues plan_assignment_request.PlanAssignmentRequest_FieldPathArrayOfValues) *BatchGetPlanAssignmentRequestsResponse_FieldSubPathArrayOfValues {
	return &BatchGetPlanAssignmentRequestsResponse_FieldSubPathArrayOfValues{BatchGetPlanAssignmentRequestsResponse_FieldPath: s.WithSubPath(subPathArrayOfValues), subPathArrayOfValues: subPathArrayOfValues}
}

func (s BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequests) WithSubArrayItemValue(subPathArrayItemValue plan_assignment_request.PlanAssignmentRequest_FieldPathArrayItemValue) *BatchGetPlanAssignmentRequestsResponse_FieldSubPathArrayItemValue {
	return &BatchGetPlanAssignmentRequestsResponse_FieldSubPathArrayItemValue{BatchGetPlanAssignmentRequestsResponse_FieldPath: s.WithSubPath(subPathArrayItemValue), subPathItemValue: subPathArrayItemValue}
}

func (BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequests) Name() BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsName {
	return BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsName{}
}

func (BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequests) Request() BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsRequest {
	return BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsRequest{}
}

func (BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequests) Service() BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsService {
	return BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsService{}
}

func (BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequests) Approver() BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsApprover {
	return BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsApprover{}
}

func (BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequests) Status() BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsStatus {
	return BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsStatus{}
}

func (BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequests) Metadata() BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsMetadata {
	return BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsMetadata{}
}

type BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsName struct{}

func (BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsName) FieldPath() *BatchGetPlanAssignmentRequestsResponse_FieldSubPath {
	return &BatchGetPlanAssignmentRequestsResponse_FieldSubPath{
		selector: BatchGetPlanAssignmentRequestsResponse_FieldPathSelectorPlanAssignmentRequests,
		subPath:  plan_assignment_request.NewPlanAssignmentRequestFieldPathBuilder().Name().FieldPath(),
	}
}

func (s BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsName) WithValue(value *plan_assignment_request.Name) *BatchGetPlanAssignmentRequestsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetPlanAssignmentRequestsResponse_FieldSubPathValue)
}

func (s BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsName) WithArrayOfValues(values []*plan_assignment_request.Name) *BatchGetPlanAssignmentRequestsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetPlanAssignmentRequestsResponse_FieldSubPathArrayOfValues)
}

type BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsRequest struct{}

func (BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsRequest) FieldPath() *BatchGetPlanAssignmentRequestsResponse_FieldSubPath {
	return &BatchGetPlanAssignmentRequestsResponse_FieldSubPath{
		selector: BatchGetPlanAssignmentRequestsResponse_FieldPathSelectorPlanAssignmentRequests,
		subPath:  plan_assignment_request.NewPlanAssignmentRequestFieldPathBuilder().Request().FieldPath(),
	}
}

func (s BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsRequest) WithValue(value *plan_assignment_request.PlanAssignmentRequest_Request) *BatchGetPlanAssignmentRequestsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetPlanAssignmentRequestsResponse_FieldSubPathValue)
}

func (s BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsRequest) WithArrayOfValues(values []*plan_assignment_request.PlanAssignmentRequest_Request) *BatchGetPlanAssignmentRequestsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetPlanAssignmentRequestsResponse_FieldSubPathArrayOfValues)
}

func (BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsRequest) Assign() BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsRequestAssign {
	return BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsRequestAssign{}
}

func (BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsRequest) Extend() BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsRequestExtend {
	return BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsRequestExtend{}
}

func (BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsRequest) Redistribute() BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsRequestRedistribute {
	return BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsRequestRedistribute{}
}

func (BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsRequest) Unassign() BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsRequestUnassign {
	return BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsRequestUnassign{}
}

type BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsRequestAssign struct{}

func (BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsRequestAssign) FieldPath() *BatchGetPlanAssignmentRequestsResponse_FieldSubPath {
	return &BatchGetPlanAssignmentRequestsResponse_FieldSubPath{
		selector: BatchGetPlanAssignmentRequestsResponse_FieldPathSelectorPlanAssignmentRequests,
		subPath:  plan_assignment_request.NewPlanAssignmentRequestFieldPathBuilder().Request().Assign().FieldPath(),
	}
}

func (s BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsRequestAssign) WithValue(value *plan_assignment_request.PlanAssignmentRequest_Request_Assign) *BatchGetPlanAssignmentRequestsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetPlanAssignmentRequestsResponse_FieldSubPathValue)
}

func (s BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsRequestAssign) WithArrayOfValues(values []*plan_assignment_request.PlanAssignmentRequest_Request_Assign) *BatchGetPlanAssignmentRequestsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetPlanAssignmentRequestsResponse_FieldSubPathArrayOfValues)
}

func (BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsRequestAssign) Plan() BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsRequestAssignPlan {
	return BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsRequestAssignPlan{}
}

func (BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsRequestAssign) Extensions() BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsRequestAssignExtensions {
	return BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsRequestAssignExtensions{}
}

func (BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsRequestAssign) RegionalDistributions() BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsRequestAssignRegionalDistributions {
	return BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsRequestAssignRegionalDistributions{}
}

type BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsRequestAssignPlan struct{}

func (BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsRequestAssignPlan) FieldPath() *BatchGetPlanAssignmentRequestsResponse_FieldSubPath {
	return &BatchGetPlanAssignmentRequestsResponse_FieldSubPath{
		selector: BatchGetPlanAssignmentRequestsResponse_FieldPathSelectorPlanAssignmentRequests,
		subPath:  plan_assignment_request.NewPlanAssignmentRequestFieldPathBuilder().Request().Assign().Plan().FieldPath(),
	}
}

func (s BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsRequestAssignPlan) WithValue(value *plan.Reference) *BatchGetPlanAssignmentRequestsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetPlanAssignmentRequestsResponse_FieldSubPathValue)
}

func (s BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsRequestAssignPlan) WithArrayOfValues(values []*plan.Reference) *BatchGetPlanAssignmentRequestsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetPlanAssignmentRequestsResponse_FieldSubPathArrayOfValues)
}

type BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsRequestAssignExtensions struct{}

func (BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsRequestAssignExtensions) FieldPath() *BatchGetPlanAssignmentRequestsResponse_FieldSubPath {
	return &BatchGetPlanAssignmentRequestsResponse_FieldSubPath{
		selector: BatchGetPlanAssignmentRequestsResponse_FieldPathSelectorPlanAssignmentRequests,
		subPath:  plan_assignment_request.NewPlanAssignmentRequestFieldPathBuilder().Request().Assign().Extensions().FieldPath(),
	}
}

func (s BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsRequestAssignExtensions) WithValue(value []*common.Allowance) *BatchGetPlanAssignmentRequestsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetPlanAssignmentRequestsResponse_FieldSubPathValue)
}

func (s BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsRequestAssignExtensions) WithArrayOfValues(values [][]*common.Allowance) *BatchGetPlanAssignmentRequestsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetPlanAssignmentRequestsResponse_FieldSubPathArrayOfValues)
}

func (s BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsRequestAssignExtensions) WithItemValue(value *common.Allowance) *BatchGetPlanAssignmentRequestsResponse_FieldSubPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*BatchGetPlanAssignmentRequestsResponse_FieldSubPathArrayItemValue)
}

func (BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsRequestAssignExtensions) Resource() BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsRequestAssignExtensionsResource {
	return BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsRequestAssignExtensionsResource{}
}

func (BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsRequestAssignExtensions) Value() BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsRequestAssignExtensionsValue {
	return BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsRequestAssignExtensionsValue{}
}

type BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsRequestAssignExtensionsResource struct{}

func (BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsRequestAssignExtensionsResource) FieldPath() *BatchGetPlanAssignmentRequestsResponse_FieldSubPath {
	return &BatchGetPlanAssignmentRequestsResponse_FieldSubPath{
		selector: BatchGetPlanAssignmentRequestsResponse_FieldPathSelectorPlanAssignmentRequests,
		subPath:  plan_assignment_request.NewPlanAssignmentRequestFieldPathBuilder().Request().Assign().Extensions().Resource().FieldPath(),
	}
}

func (s BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsRequestAssignExtensionsResource) WithValue(value *meta_resource.Reference) *BatchGetPlanAssignmentRequestsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetPlanAssignmentRequestsResponse_FieldSubPathValue)
}

func (s BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsRequestAssignExtensionsResource) WithArrayOfValues(values []*meta_resource.Reference) *BatchGetPlanAssignmentRequestsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetPlanAssignmentRequestsResponse_FieldSubPathArrayOfValues)
}

type BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsRequestAssignExtensionsValue struct{}

func (BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsRequestAssignExtensionsValue) FieldPath() *BatchGetPlanAssignmentRequestsResponse_FieldSubPath {
	return &BatchGetPlanAssignmentRequestsResponse_FieldSubPath{
		selector: BatchGetPlanAssignmentRequestsResponse_FieldPathSelectorPlanAssignmentRequests,
		subPath:  plan_assignment_request.NewPlanAssignmentRequestFieldPathBuilder().Request().Assign().Extensions().Value().FieldPath(),
	}
}

func (s BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsRequestAssignExtensionsValue) WithValue(value int64) *BatchGetPlanAssignmentRequestsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetPlanAssignmentRequestsResponse_FieldSubPathValue)
}

func (s BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsRequestAssignExtensionsValue) WithArrayOfValues(values []int64) *BatchGetPlanAssignmentRequestsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetPlanAssignmentRequestsResponse_FieldSubPathArrayOfValues)
}

type BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsRequestAssignRegionalDistributions struct{}

func (BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsRequestAssignRegionalDistributions) FieldPath() *BatchGetPlanAssignmentRequestsResponse_FieldSubPath {
	return &BatchGetPlanAssignmentRequestsResponse_FieldSubPath{
		selector: BatchGetPlanAssignmentRequestsResponse_FieldPathSelectorPlanAssignmentRequests,
		subPath:  plan_assignment_request.NewPlanAssignmentRequestFieldPathBuilder().Request().Assign().RegionalDistributions().FieldPath(),
	}
}

func (s BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsRequestAssignRegionalDistributions) WithValue(value []*common.RegionalDistribution) *BatchGetPlanAssignmentRequestsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetPlanAssignmentRequestsResponse_FieldSubPathValue)
}

func (s BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsRequestAssignRegionalDistributions) WithArrayOfValues(values [][]*common.RegionalDistribution) *BatchGetPlanAssignmentRequestsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetPlanAssignmentRequestsResponse_FieldSubPathArrayOfValues)
}

func (s BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsRequestAssignRegionalDistributions) WithItemValue(value *common.RegionalDistribution) *BatchGetPlanAssignmentRequestsResponse_FieldSubPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*BatchGetPlanAssignmentRequestsResponse_FieldSubPathArrayItemValue)
}

func (BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsRequestAssignRegionalDistributions) Resource() BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsRequestAssignRegionalDistributionsResource {
	return BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsRequestAssignRegionalDistributionsResource{}
}

func (BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsRequestAssignRegionalDistributions) LimitsByRegion() BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsRequestAssignRegionalDistributionsLimitsByRegion {
	return BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsRequestAssignRegionalDistributionsLimitsByRegion{}
}

type BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsRequestAssignRegionalDistributionsResource struct{}

func (BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsRequestAssignRegionalDistributionsResource) FieldPath() *BatchGetPlanAssignmentRequestsResponse_FieldSubPath {
	return &BatchGetPlanAssignmentRequestsResponse_FieldSubPath{
		selector: BatchGetPlanAssignmentRequestsResponse_FieldPathSelectorPlanAssignmentRequests,
		subPath:  plan_assignment_request.NewPlanAssignmentRequestFieldPathBuilder().Request().Assign().RegionalDistributions().Resource().FieldPath(),
	}
}

func (s BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsRequestAssignRegionalDistributionsResource) WithValue(value *meta_resource.Reference) *BatchGetPlanAssignmentRequestsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetPlanAssignmentRequestsResponse_FieldSubPathValue)
}

func (s BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsRequestAssignRegionalDistributionsResource) WithArrayOfValues(values []*meta_resource.Reference) *BatchGetPlanAssignmentRequestsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetPlanAssignmentRequestsResponse_FieldSubPathArrayOfValues)
}

type BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsRequestAssignRegionalDistributionsLimitsByRegion struct{}

func (BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsRequestAssignRegionalDistributionsLimitsByRegion) FieldPath() *BatchGetPlanAssignmentRequestsResponse_FieldSubPath {
	return &BatchGetPlanAssignmentRequestsResponse_FieldSubPath{
		selector: BatchGetPlanAssignmentRequestsResponse_FieldPathSelectorPlanAssignmentRequests,
		subPath:  plan_assignment_request.NewPlanAssignmentRequestFieldPathBuilder().Request().Assign().RegionalDistributions().LimitsByRegion().FieldPath(),
	}
}

func (s BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsRequestAssignRegionalDistributionsLimitsByRegion) WithValue(value map[string]int64) *BatchGetPlanAssignmentRequestsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetPlanAssignmentRequestsResponse_FieldSubPathValue)
}

func (s BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsRequestAssignRegionalDistributionsLimitsByRegion) WithArrayOfValues(values []map[string]int64) *BatchGetPlanAssignmentRequestsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetPlanAssignmentRequestsResponse_FieldSubPathArrayOfValues)
}

func (BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsRequestAssignRegionalDistributionsLimitsByRegion) WithKey(key string) BatchGetPlanAssignmentRequestsResponseMapPathSelectorPlanAssignmentRequestsRequestAssignRegionalDistributionsLimitsByRegion {
	return BatchGetPlanAssignmentRequestsResponseMapPathSelectorPlanAssignmentRequestsRequestAssignRegionalDistributionsLimitsByRegion{key: key}
}

type BatchGetPlanAssignmentRequestsResponseMapPathSelectorPlanAssignmentRequestsRequestAssignRegionalDistributionsLimitsByRegion struct {
	key string
}

func (s BatchGetPlanAssignmentRequestsResponseMapPathSelectorPlanAssignmentRequestsRequestAssignRegionalDistributionsLimitsByRegion) FieldPath() *BatchGetPlanAssignmentRequestsResponse_FieldSubPath {
	return &BatchGetPlanAssignmentRequestsResponse_FieldSubPath{
		selector: BatchGetPlanAssignmentRequestsResponse_FieldPathSelectorPlanAssignmentRequests,
		subPath:  plan_assignment_request.NewPlanAssignmentRequestFieldPathBuilder().Request().Assign().RegionalDistributions().LimitsByRegion().WithKey(s.key).FieldPath(),
	}
}

func (s BatchGetPlanAssignmentRequestsResponseMapPathSelectorPlanAssignmentRequestsRequestAssignRegionalDistributionsLimitsByRegion) WithValue(value int64) *BatchGetPlanAssignmentRequestsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetPlanAssignmentRequestsResponse_FieldSubPathValue)
}

func (s BatchGetPlanAssignmentRequestsResponseMapPathSelectorPlanAssignmentRequestsRequestAssignRegionalDistributionsLimitsByRegion) WithArrayOfValues(values []int64) *BatchGetPlanAssignmentRequestsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetPlanAssignmentRequestsResponse_FieldSubPathArrayOfValues)
}

type BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsRequestExtend struct{}

func (BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsRequestExtend) FieldPath() *BatchGetPlanAssignmentRequestsResponse_FieldSubPath {
	return &BatchGetPlanAssignmentRequestsResponse_FieldSubPath{
		selector: BatchGetPlanAssignmentRequestsResponse_FieldPathSelectorPlanAssignmentRequests,
		subPath:  plan_assignment_request.NewPlanAssignmentRequestFieldPathBuilder().Request().Extend().FieldPath(),
	}
}

func (s BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsRequestExtend) WithValue(value *plan_assignment_request.PlanAssignmentRequest_Request_Extend) *BatchGetPlanAssignmentRequestsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetPlanAssignmentRequestsResponse_FieldSubPathValue)
}

func (s BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsRequestExtend) WithArrayOfValues(values []*plan_assignment_request.PlanAssignmentRequest_Request_Extend) *BatchGetPlanAssignmentRequestsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetPlanAssignmentRequestsResponse_FieldSubPathArrayOfValues)
}

func (BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsRequestExtend) Assignment() BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsRequestExtendAssignment {
	return BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsRequestExtendAssignment{}
}

func (BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsRequestExtend) Additions() BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsRequestExtendAdditions {
	return BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsRequestExtendAdditions{}
}

func (BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsRequestExtend) RegionalDistributions() BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsRequestExtendRegionalDistributions {
	return BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsRequestExtendRegionalDistributions{}
}

type BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsRequestExtendAssignment struct{}

func (BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsRequestExtendAssignment) FieldPath() *BatchGetPlanAssignmentRequestsResponse_FieldSubPath {
	return &BatchGetPlanAssignmentRequestsResponse_FieldSubPath{
		selector: BatchGetPlanAssignmentRequestsResponse_FieldPathSelectorPlanAssignmentRequests,
		subPath:  plan_assignment_request.NewPlanAssignmentRequestFieldPathBuilder().Request().Extend().Assignment().FieldPath(),
	}
}

func (s BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsRequestExtendAssignment) WithValue(value *plan_assignment.Reference) *BatchGetPlanAssignmentRequestsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetPlanAssignmentRequestsResponse_FieldSubPathValue)
}

func (s BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsRequestExtendAssignment) WithArrayOfValues(values []*plan_assignment.Reference) *BatchGetPlanAssignmentRequestsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetPlanAssignmentRequestsResponse_FieldSubPathArrayOfValues)
}

type BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsRequestExtendAdditions struct{}

func (BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsRequestExtendAdditions) FieldPath() *BatchGetPlanAssignmentRequestsResponse_FieldSubPath {
	return &BatchGetPlanAssignmentRequestsResponse_FieldSubPath{
		selector: BatchGetPlanAssignmentRequestsResponse_FieldPathSelectorPlanAssignmentRequests,
		subPath:  plan_assignment_request.NewPlanAssignmentRequestFieldPathBuilder().Request().Extend().Additions().FieldPath(),
	}
}

func (s BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsRequestExtendAdditions) WithValue(value []*common.Allowance) *BatchGetPlanAssignmentRequestsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetPlanAssignmentRequestsResponse_FieldSubPathValue)
}

func (s BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsRequestExtendAdditions) WithArrayOfValues(values [][]*common.Allowance) *BatchGetPlanAssignmentRequestsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetPlanAssignmentRequestsResponse_FieldSubPathArrayOfValues)
}

func (s BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsRequestExtendAdditions) WithItemValue(value *common.Allowance) *BatchGetPlanAssignmentRequestsResponse_FieldSubPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*BatchGetPlanAssignmentRequestsResponse_FieldSubPathArrayItemValue)
}

func (BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsRequestExtendAdditions) Resource() BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsRequestExtendAdditionsResource {
	return BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsRequestExtendAdditionsResource{}
}

func (BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsRequestExtendAdditions) Value() BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsRequestExtendAdditionsValue {
	return BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsRequestExtendAdditionsValue{}
}

type BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsRequestExtendAdditionsResource struct{}

func (BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsRequestExtendAdditionsResource) FieldPath() *BatchGetPlanAssignmentRequestsResponse_FieldSubPath {
	return &BatchGetPlanAssignmentRequestsResponse_FieldSubPath{
		selector: BatchGetPlanAssignmentRequestsResponse_FieldPathSelectorPlanAssignmentRequests,
		subPath:  plan_assignment_request.NewPlanAssignmentRequestFieldPathBuilder().Request().Extend().Additions().Resource().FieldPath(),
	}
}

func (s BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsRequestExtendAdditionsResource) WithValue(value *meta_resource.Reference) *BatchGetPlanAssignmentRequestsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetPlanAssignmentRequestsResponse_FieldSubPathValue)
}

func (s BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsRequestExtendAdditionsResource) WithArrayOfValues(values []*meta_resource.Reference) *BatchGetPlanAssignmentRequestsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetPlanAssignmentRequestsResponse_FieldSubPathArrayOfValues)
}

type BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsRequestExtendAdditionsValue struct{}

func (BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsRequestExtendAdditionsValue) FieldPath() *BatchGetPlanAssignmentRequestsResponse_FieldSubPath {
	return &BatchGetPlanAssignmentRequestsResponse_FieldSubPath{
		selector: BatchGetPlanAssignmentRequestsResponse_FieldPathSelectorPlanAssignmentRequests,
		subPath:  plan_assignment_request.NewPlanAssignmentRequestFieldPathBuilder().Request().Extend().Additions().Value().FieldPath(),
	}
}

func (s BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsRequestExtendAdditionsValue) WithValue(value int64) *BatchGetPlanAssignmentRequestsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetPlanAssignmentRequestsResponse_FieldSubPathValue)
}

func (s BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsRequestExtendAdditionsValue) WithArrayOfValues(values []int64) *BatchGetPlanAssignmentRequestsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetPlanAssignmentRequestsResponse_FieldSubPathArrayOfValues)
}

type BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsRequestExtendRegionalDistributions struct{}

func (BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsRequestExtendRegionalDistributions) FieldPath() *BatchGetPlanAssignmentRequestsResponse_FieldSubPath {
	return &BatchGetPlanAssignmentRequestsResponse_FieldSubPath{
		selector: BatchGetPlanAssignmentRequestsResponse_FieldPathSelectorPlanAssignmentRequests,
		subPath:  plan_assignment_request.NewPlanAssignmentRequestFieldPathBuilder().Request().Extend().RegionalDistributions().FieldPath(),
	}
}

func (s BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsRequestExtendRegionalDistributions) WithValue(value []*common.RegionalDistribution) *BatchGetPlanAssignmentRequestsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetPlanAssignmentRequestsResponse_FieldSubPathValue)
}

func (s BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsRequestExtendRegionalDistributions) WithArrayOfValues(values [][]*common.RegionalDistribution) *BatchGetPlanAssignmentRequestsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetPlanAssignmentRequestsResponse_FieldSubPathArrayOfValues)
}

func (s BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsRequestExtendRegionalDistributions) WithItemValue(value *common.RegionalDistribution) *BatchGetPlanAssignmentRequestsResponse_FieldSubPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*BatchGetPlanAssignmentRequestsResponse_FieldSubPathArrayItemValue)
}

func (BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsRequestExtendRegionalDistributions) Resource() BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsRequestExtendRegionalDistributionsResource {
	return BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsRequestExtendRegionalDistributionsResource{}
}

func (BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsRequestExtendRegionalDistributions) LimitsByRegion() BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsRequestExtendRegionalDistributionsLimitsByRegion {
	return BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsRequestExtendRegionalDistributionsLimitsByRegion{}
}

type BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsRequestExtendRegionalDistributionsResource struct{}

func (BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsRequestExtendRegionalDistributionsResource) FieldPath() *BatchGetPlanAssignmentRequestsResponse_FieldSubPath {
	return &BatchGetPlanAssignmentRequestsResponse_FieldSubPath{
		selector: BatchGetPlanAssignmentRequestsResponse_FieldPathSelectorPlanAssignmentRequests,
		subPath:  plan_assignment_request.NewPlanAssignmentRequestFieldPathBuilder().Request().Extend().RegionalDistributions().Resource().FieldPath(),
	}
}

func (s BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsRequestExtendRegionalDistributionsResource) WithValue(value *meta_resource.Reference) *BatchGetPlanAssignmentRequestsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetPlanAssignmentRequestsResponse_FieldSubPathValue)
}

func (s BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsRequestExtendRegionalDistributionsResource) WithArrayOfValues(values []*meta_resource.Reference) *BatchGetPlanAssignmentRequestsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetPlanAssignmentRequestsResponse_FieldSubPathArrayOfValues)
}

type BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsRequestExtendRegionalDistributionsLimitsByRegion struct{}

func (BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsRequestExtendRegionalDistributionsLimitsByRegion) FieldPath() *BatchGetPlanAssignmentRequestsResponse_FieldSubPath {
	return &BatchGetPlanAssignmentRequestsResponse_FieldSubPath{
		selector: BatchGetPlanAssignmentRequestsResponse_FieldPathSelectorPlanAssignmentRequests,
		subPath:  plan_assignment_request.NewPlanAssignmentRequestFieldPathBuilder().Request().Extend().RegionalDistributions().LimitsByRegion().FieldPath(),
	}
}

func (s BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsRequestExtendRegionalDistributionsLimitsByRegion) WithValue(value map[string]int64) *BatchGetPlanAssignmentRequestsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetPlanAssignmentRequestsResponse_FieldSubPathValue)
}

func (s BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsRequestExtendRegionalDistributionsLimitsByRegion) WithArrayOfValues(values []map[string]int64) *BatchGetPlanAssignmentRequestsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetPlanAssignmentRequestsResponse_FieldSubPathArrayOfValues)
}

func (BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsRequestExtendRegionalDistributionsLimitsByRegion) WithKey(key string) BatchGetPlanAssignmentRequestsResponseMapPathSelectorPlanAssignmentRequestsRequestExtendRegionalDistributionsLimitsByRegion {
	return BatchGetPlanAssignmentRequestsResponseMapPathSelectorPlanAssignmentRequestsRequestExtendRegionalDistributionsLimitsByRegion{key: key}
}

type BatchGetPlanAssignmentRequestsResponseMapPathSelectorPlanAssignmentRequestsRequestExtendRegionalDistributionsLimitsByRegion struct {
	key string
}

func (s BatchGetPlanAssignmentRequestsResponseMapPathSelectorPlanAssignmentRequestsRequestExtendRegionalDistributionsLimitsByRegion) FieldPath() *BatchGetPlanAssignmentRequestsResponse_FieldSubPath {
	return &BatchGetPlanAssignmentRequestsResponse_FieldSubPath{
		selector: BatchGetPlanAssignmentRequestsResponse_FieldPathSelectorPlanAssignmentRequests,
		subPath:  plan_assignment_request.NewPlanAssignmentRequestFieldPathBuilder().Request().Extend().RegionalDistributions().LimitsByRegion().WithKey(s.key).FieldPath(),
	}
}

func (s BatchGetPlanAssignmentRequestsResponseMapPathSelectorPlanAssignmentRequestsRequestExtendRegionalDistributionsLimitsByRegion) WithValue(value int64) *BatchGetPlanAssignmentRequestsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetPlanAssignmentRequestsResponse_FieldSubPathValue)
}

func (s BatchGetPlanAssignmentRequestsResponseMapPathSelectorPlanAssignmentRequestsRequestExtendRegionalDistributionsLimitsByRegion) WithArrayOfValues(values []int64) *BatchGetPlanAssignmentRequestsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetPlanAssignmentRequestsResponse_FieldSubPathArrayOfValues)
}

type BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsRequestRedistribute struct{}

func (BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsRequestRedistribute) FieldPath() *BatchGetPlanAssignmentRequestsResponse_FieldSubPath {
	return &BatchGetPlanAssignmentRequestsResponse_FieldSubPath{
		selector: BatchGetPlanAssignmentRequestsResponse_FieldPathSelectorPlanAssignmentRequests,
		subPath:  plan_assignment_request.NewPlanAssignmentRequestFieldPathBuilder().Request().Redistribute().FieldPath(),
	}
}

func (s BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsRequestRedistribute) WithValue(value *plan_assignment_request.PlanAssignmentRequest_Request_Redistribute) *BatchGetPlanAssignmentRequestsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetPlanAssignmentRequestsResponse_FieldSubPathValue)
}

func (s BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsRequestRedistribute) WithArrayOfValues(values []*plan_assignment_request.PlanAssignmentRequest_Request_Redistribute) *BatchGetPlanAssignmentRequestsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetPlanAssignmentRequestsResponse_FieldSubPathArrayOfValues)
}

func (BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsRequestRedistribute) Assignment() BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsRequestRedistributeAssignment {
	return BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsRequestRedistributeAssignment{}
}

func (BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsRequestRedistribute) RegionalDistributions() BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsRequestRedistributeRegionalDistributions {
	return BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsRequestRedistributeRegionalDistributions{}
}

type BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsRequestRedistributeAssignment struct{}

func (BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsRequestRedistributeAssignment) FieldPath() *BatchGetPlanAssignmentRequestsResponse_FieldSubPath {
	return &BatchGetPlanAssignmentRequestsResponse_FieldSubPath{
		selector: BatchGetPlanAssignmentRequestsResponse_FieldPathSelectorPlanAssignmentRequests,
		subPath:  plan_assignment_request.NewPlanAssignmentRequestFieldPathBuilder().Request().Redistribute().Assignment().FieldPath(),
	}
}

func (s BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsRequestRedistributeAssignment) WithValue(value *plan_assignment.Reference) *BatchGetPlanAssignmentRequestsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetPlanAssignmentRequestsResponse_FieldSubPathValue)
}

func (s BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsRequestRedistributeAssignment) WithArrayOfValues(values []*plan_assignment.Reference) *BatchGetPlanAssignmentRequestsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetPlanAssignmentRequestsResponse_FieldSubPathArrayOfValues)
}

type BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsRequestRedistributeRegionalDistributions struct{}

func (BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsRequestRedistributeRegionalDistributions) FieldPath() *BatchGetPlanAssignmentRequestsResponse_FieldSubPath {
	return &BatchGetPlanAssignmentRequestsResponse_FieldSubPath{
		selector: BatchGetPlanAssignmentRequestsResponse_FieldPathSelectorPlanAssignmentRequests,
		subPath:  plan_assignment_request.NewPlanAssignmentRequestFieldPathBuilder().Request().Redistribute().RegionalDistributions().FieldPath(),
	}
}

func (s BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsRequestRedistributeRegionalDistributions) WithValue(value []*common.RegionalDistribution) *BatchGetPlanAssignmentRequestsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetPlanAssignmentRequestsResponse_FieldSubPathValue)
}

func (s BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsRequestRedistributeRegionalDistributions) WithArrayOfValues(values [][]*common.RegionalDistribution) *BatchGetPlanAssignmentRequestsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetPlanAssignmentRequestsResponse_FieldSubPathArrayOfValues)
}

func (s BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsRequestRedistributeRegionalDistributions) WithItemValue(value *common.RegionalDistribution) *BatchGetPlanAssignmentRequestsResponse_FieldSubPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*BatchGetPlanAssignmentRequestsResponse_FieldSubPathArrayItemValue)
}

func (BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsRequestRedistributeRegionalDistributions) Resource() BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsRequestRedistributeRegionalDistributionsResource {
	return BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsRequestRedistributeRegionalDistributionsResource{}
}

func (BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsRequestRedistributeRegionalDistributions) LimitsByRegion() BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsRequestRedistributeRegionalDistributionsLimitsByRegion {
	return BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsRequestRedistributeRegionalDistributionsLimitsByRegion{}
}

type BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsRequestRedistributeRegionalDistributionsResource struct{}

func (BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsRequestRedistributeRegionalDistributionsResource) FieldPath() *BatchGetPlanAssignmentRequestsResponse_FieldSubPath {
	return &BatchGetPlanAssignmentRequestsResponse_FieldSubPath{
		selector: BatchGetPlanAssignmentRequestsResponse_FieldPathSelectorPlanAssignmentRequests,
		subPath:  plan_assignment_request.NewPlanAssignmentRequestFieldPathBuilder().Request().Redistribute().RegionalDistributions().Resource().FieldPath(),
	}
}

func (s BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsRequestRedistributeRegionalDistributionsResource) WithValue(value *meta_resource.Reference) *BatchGetPlanAssignmentRequestsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetPlanAssignmentRequestsResponse_FieldSubPathValue)
}

func (s BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsRequestRedistributeRegionalDistributionsResource) WithArrayOfValues(values []*meta_resource.Reference) *BatchGetPlanAssignmentRequestsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetPlanAssignmentRequestsResponse_FieldSubPathArrayOfValues)
}

type BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsRequestRedistributeRegionalDistributionsLimitsByRegion struct{}

func (BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsRequestRedistributeRegionalDistributionsLimitsByRegion) FieldPath() *BatchGetPlanAssignmentRequestsResponse_FieldSubPath {
	return &BatchGetPlanAssignmentRequestsResponse_FieldSubPath{
		selector: BatchGetPlanAssignmentRequestsResponse_FieldPathSelectorPlanAssignmentRequests,
		subPath:  plan_assignment_request.NewPlanAssignmentRequestFieldPathBuilder().Request().Redistribute().RegionalDistributions().LimitsByRegion().FieldPath(),
	}
}

func (s BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsRequestRedistributeRegionalDistributionsLimitsByRegion) WithValue(value map[string]int64) *BatchGetPlanAssignmentRequestsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetPlanAssignmentRequestsResponse_FieldSubPathValue)
}

func (s BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsRequestRedistributeRegionalDistributionsLimitsByRegion) WithArrayOfValues(values []map[string]int64) *BatchGetPlanAssignmentRequestsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetPlanAssignmentRequestsResponse_FieldSubPathArrayOfValues)
}

func (BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsRequestRedistributeRegionalDistributionsLimitsByRegion) WithKey(key string) BatchGetPlanAssignmentRequestsResponseMapPathSelectorPlanAssignmentRequestsRequestRedistributeRegionalDistributionsLimitsByRegion {
	return BatchGetPlanAssignmentRequestsResponseMapPathSelectorPlanAssignmentRequestsRequestRedistributeRegionalDistributionsLimitsByRegion{key: key}
}

type BatchGetPlanAssignmentRequestsResponseMapPathSelectorPlanAssignmentRequestsRequestRedistributeRegionalDistributionsLimitsByRegion struct {
	key string
}

func (s BatchGetPlanAssignmentRequestsResponseMapPathSelectorPlanAssignmentRequestsRequestRedistributeRegionalDistributionsLimitsByRegion) FieldPath() *BatchGetPlanAssignmentRequestsResponse_FieldSubPath {
	return &BatchGetPlanAssignmentRequestsResponse_FieldSubPath{
		selector: BatchGetPlanAssignmentRequestsResponse_FieldPathSelectorPlanAssignmentRequests,
		subPath:  plan_assignment_request.NewPlanAssignmentRequestFieldPathBuilder().Request().Redistribute().RegionalDistributions().LimitsByRegion().WithKey(s.key).FieldPath(),
	}
}

func (s BatchGetPlanAssignmentRequestsResponseMapPathSelectorPlanAssignmentRequestsRequestRedistributeRegionalDistributionsLimitsByRegion) WithValue(value int64) *BatchGetPlanAssignmentRequestsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetPlanAssignmentRequestsResponse_FieldSubPathValue)
}

func (s BatchGetPlanAssignmentRequestsResponseMapPathSelectorPlanAssignmentRequestsRequestRedistributeRegionalDistributionsLimitsByRegion) WithArrayOfValues(values []int64) *BatchGetPlanAssignmentRequestsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetPlanAssignmentRequestsResponse_FieldSubPathArrayOfValues)
}

type BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsRequestUnassign struct{}

func (BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsRequestUnassign) FieldPath() *BatchGetPlanAssignmentRequestsResponse_FieldSubPath {
	return &BatchGetPlanAssignmentRequestsResponse_FieldSubPath{
		selector: BatchGetPlanAssignmentRequestsResponse_FieldPathSelectorPlanAssignmentRequests,
		subPath:  plan_assignment_request.NewPlanAssignmentRequestFieldPathBuilder().Request().Unassign().FieldPath(),
	}
}

func (s BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsRequestUnassign) WithValue(value *plan_assignment_request.PlanAssignmentRequest_Request_Unassign) *BatchGetPlanAssignmentRequestsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetPlanAssignmentRequestsResponse_FieldSubPathValue)
}

func (s BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsRequestUnassign) WithArrayOfValues(values []*plan_assignment_request.PlanAssignmentRequest_Request_Unassign) *BatchGetPlanAssignmentRequestsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetPlanAssignmentRequestsResponse_FieldSubPathArrayOfValues)
}

func (BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsRequestUnassign) Assignment() BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsRequestUnassignAssignment {
	return BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsRequestUnassignAssignment{}
}

type BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsRequestUnassignAssignment struct{}

func (BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsRequestUnassignAssignment) FieldPath() *BatchGetPlanAssignmentRequestsResponse_FieldSubPath {
	return &BatchGetPlanAssignmentRequestsResponse_FieldSubPath{
		selector: BatchGetPlanAssignmentRequestsResponse_FieldPathSelectorPlanAssignmentRequests,
		subPath:  plan_assignment_request.NewPlanAssignmentRequestFieldPathBuilder().Request().Unassign().Assignment().FieldPath(),
	}
}

func (s BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsRequestUnassignAssignment) WithValue(value *plan_assignment.Reference) *BatchGetPlanAssignmentRequestsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetPlanAssignmentRequestsResponse_FieldSubPathValue)
}

func (s BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsRequestUnassignAssignment) WithArrayOfValues(values []*plan_assignment.Reference) *BatchGetPlanAssignmentRequestsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetPlanAssignmentRequestsResponse_FieldSubPathArrayOfValues)
}

type BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsService struct{}

func (BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsService) FieldPath() *BatchGetPlanAssignmentRequestsResponse_FieldSubPath {
	return &BatchGetPlanAssignmentRequestsResponse_FieldSubPath{
		selector: BatchGetPlanAssignmentRequestsResponse_FieldPathSelectorPlanAssignmentRequests,
		subPath:  plan_assignment_request.NewPlanAssignmentRequestFieldPathBuilder().Service().FieldPath(),
	}
}

func (s BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsService) WithValue(value *meta_service.Reference) *BatchGetPlanAssignmentRequestsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetPlanAssignmentRequestsResponse_FieldSubPathValue)
}

func (s BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsService) WithArrayOfValues(values []*meta_service.Reference) *BatchGetPlanAssignmentRequestsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetPlanAssignmentRequestsResponse_FieldSubPathArrayOfValues)
}

type BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsApprover struct{}

func (BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsApprover) FieldPath() *BatchGetPlanAssignmentRequestsResponse_FieldSubPath {
	return &BatchGetPlanAssignmentRequestsResponse_FieldSubPath{
		selector: BatchGetPlanAssignmentRequestsResponse_FieldPathSelectorPlanAssignmentRequests,
		subPath:  plan_assignment_request.NewPlanAssignmentRequestFieldPathBuilder().Approver().FieldPath(),
	}
}

func (s BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsApprover) WithValue(value *iam_organization.Reference) *BatchGetPlanAssignmentRequestsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetPlanAssignmentRequestsResponse_FieldSubPathValue)
}

func (s BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsApprover) WithArrayOfValues(values []*iam_organization.Reference) *BatchGetPlanAssignmentRequestsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetPlanAssignmentRequestsResponse_FieldSubPathArrayOfValues)
}

type BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsStatus struct{}

func (BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsStatus) FieldPath() *BatchGetPlanAssignmentRequestsResponse_FieldSubPath {
	return &BatchGetPlanAssignmentRequestsResponse_FieldSubPath{
		selector: BatchGetPlanAssignmentRequestsResponse_FieldPathSelectorPlanAssignmentRequests,
		subPath:  plan_assignment_request.NewPlanAssignmentRequestFieldPathBuilder().Status().FieldPath(),
	}
}

func (s BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsStatus) WithValue(value *plan_assignment_request.PlanAssignmentRequest_Status) *BatchGetPlanAssignmentRequestsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetPlanAssignmentRequestsResponse_FieldSubPathValue)
}

func (s BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsStatus) WithArrayOfValues(values []*plan_assignment_request.PlanAssignmentRequest_Status) *BatchGetPlanAssignmentRequestsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetPlanAssignmentRequestsResponse_FieldSubPathArrayOfValues)
}

func (BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsStatus) Conclusion() BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsStatusConclusion {
	return BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsStatusConclusion{}
}

func (BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsStatus) Reason() BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsStatusReason {
	return BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsStatusReason{}
}

type BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsStatusConclusion struct{}

func (BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsStatusConclusion) FieldPath() *BatchGetPlanAssignmentRequestsResponse_FieldSubPath {
	return &BatchGetPlanAssignmentRequestsResponse_FieldSubPath{
		selector: BatchGetPlanAssignmentRequestsResponse_FieldPathSelectorPlanAssignmentRequests,
		subPath:  plan_assignment_request.NewPlanAssignmentRequestFieldPathBuilder().Status().Conclusion().FieldPath(),
	}
}

func (s BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsStatusConclusion) WithValue(value plan_assignment_request.PlanAssignmentRequest_Status_Conclusion) *BatchGetPlanAssignmentRequestsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetPlanAssignmentRequestsResponse_FieldSubPathValue)
}

func (s BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsStatusConclusion) WithArrayOfValues(values []plan_assignment_request.PlanAssignmentRequest_Status_Conclusion) *BatchGetPlanAssignmentRequestsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetPlanAssignmentRequestsResponse_FieldSubPathArrayOfValues)
}

type BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsStatusReason struct{}

func (BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsStatusReason) FieldPath() *BatchGetPlanAssignmentRequestsResponse_FieldSubPath {
	return &BatchGetPlanAssignmentRequestsResponse_FieldSubPath{
		selector: BatchGetPlanAssignmentRequestsResponse_FieldPathSelectorPlanAssignmentRequests,
		subPath:  plan_assignment_request.NewPlanAssignmentRequestFieldPathBuilder().Status().Reason().FieldPath(),
	}
}

func (s BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsStatusReason) WithValue(value string) *BatchGetPlanAssignmentRequestsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetPlanAssignmentRequestsResponse_FieldSubPathValue)
}

func (s BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsStatusReason) WithArrayOfValues(values []string) *BatchGetPlanAssignmentRequestsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetPlanAssignmentRequestsResponse_FieldSubPathArrayOfValues)
}

type BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsMetadata struct{}

func (BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsMetadata) FieldPath() *BatchGetPlanAssignmentRequestsResponse_FieldSubPath {
	return &BatchGetPlanAssignmentRequestsResponse_FieldSubPath{
		selector: BatchGetPlanAssignmentRequestsResponse_FieldPathSelectorPlanAssignmentRequests,
		subPath:  plan_assignment_request.NewPlanAssignmentRequestFieldPathBuilder().Metadata().FieldPath(),
	}
}

func (s BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsMetadata) WithValue(value *ntt_meta.Meta) *BatchGetPlanAssignmentRequestsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetPlanAssignmentRequestsResponse_FieldSubPathValue)
}

func (s BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsMetadata) WithArrayOfValues(values []*ntt_meta.Meta) *BatchGetPlanAssignmentRequestsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetPlanAssignmentRequestsResponse_FieldSubPathArrayOfValues)
}

func (BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsMetadata) CreateTime() BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsMetadataCreateTime {
	return BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsMetadataCreateTime{}
}

func (BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsMetadata) UpdateTime() BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsMetadataUpdateTime {
	return BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsMetadataUpdateTime{}
}

func (BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsMetadata) DeleteTime() BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsMetadataDeleteTime {
	return BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsMetadataDeleteTime{}
}

func (BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsMetadata) Uuid() BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsMetadataUuid {
	return BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsMetadataUuid{}
}

func (BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsMetadata) Tags() BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsMetadataTags {
	return BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsMetadataTags{}
}

func (BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsMetadata) Labels() BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsMetadataLabels {
	return BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsMetadataLabels{}
}

func (BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsMetadata) Annotations() BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsMetadataAnnotations {
	return BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsMetadataAnnotations{}
}

func (BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsMetadata) Generation() BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsMetadataGeneration {
	return BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsMetadataGeneration{}
}

func (BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsMetadata) ResourceVersion() BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsMetadataResourceVersion {
	return BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsMetadataResourceVersion{}
}

func (BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsMetadata) OwnerReferences() BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsMetadataOwnerReferences {
	return BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsMetadataOwnerReferences{}
}

func (BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsMetadata) Shards() BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsMetadataShards {
	return BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsMetadataShards{}
}

func (BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsMetadata) Syncing() BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsMetadataSyncing {
	return BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsMetadataSyncing{}
}

func (BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsMetadata) Lifecycle() BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsMetadataLifecycle {
	return BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsMetadataLifecycle{}
}

type BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsMetadataCreateTime struct{}

func (BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsMetadataCreateTime) FieldPath() *BatchGetPlanAssignmentRequestsResponse_FieldSubPath {
	return &BatchGetPlanAssignmentRequestsResponse_FieldSubPath{
		selector: BatchGetPlanAssignmentRequestsResponse_FieldPathSelectorPlanAssignmentRequests,
		subPath:  plan_assignment_request.NewPlanAssignmentRequestFieldPathBuilder().Metadata().CreateTime().FieldPath(),
	}
}

func (s BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsMetadataCreateTime) WithValue(value *timestamp.Timestamp) *BatchGetPlanAssignmentRequestsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetPlanAssignmentRequestsResponse_FieldSubPathValue)
}

func (s BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsMetadataCreateTime) WithArrayOfValues(values []*timestamp.Timestamp) *BatchGetPlanAssignmentRequestsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetPlanAssignmentRequestsResponse_FieldSubPathArrayOfValues)
}

type BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsMetadataUpdateTime struct{}

func (BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsMetadataUpdateTime) FieldPath() *BatchGetPlanAssignmentRequestsResponse_FieldSubPath {
	return &BatchGetPlanAssignmentRequestsResponse_FieldSubPath{
		selector: BatchGetPlanAssignmentRequestsResponse_FieldPathSelectorPlanAssignmentRequests,
		subPath:  plan_assignment_request.NewPlanAssignmentRequestFieldPathBuilder().Metadata().UpdateTime().FieldPath(),
	}
}

func (s BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsMetadataUpdateTime) WithValue(value *timestamp.Timestamp) *BatchGetPlanAssignmentRequestsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetPlanAssignmentRequestsResponse_FieldSubPathValue)
}

func (s BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsMetadataUpdateTime) WithArrayOfValues(values []*timestamp.Timestamp) *BatchGetPlanAssignmentRequestsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetPlanAssignmentRequestsResponse_FieldSubPathArrayOfValues)
}

type BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsMetadataDeleteTime struct{}

func (BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsMetadataDeleteTime) FieldPath() *BatchGetPlanAssignmentRequestsResponse_FieldSubPath {
	return &BatchGetPlanAssignmentRequestsResponse_FieldSubPath{
		selector: BatchGetPlanAssignmentRequestsResponse_FieldPathSelectorPlanAssignmentRequests,
		subPath:  plan_assignment_request.NewPlanAssignmentRequestFieldPathBuilder().Metadata().DeleteTime().FieldPath(),
	}
}

func (s BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsMetadataDeleteTime) WithValue(value *timestamp.Timestamp) *BatchGetPlanAssignmentRequestsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetPlanAssignmentRequestsResponse_FieldSubPathValue)
}

func (s BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsMetadataDeleteTime) WithArrayOfValues(values []*timestamp.Timestamp) *BatchGetPlanAssignmentRequestsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetPlanAssignmentRequestsResponse_FieldSubPathArrayOfValues)
}

type BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsMetadataUuid struct{}

func (BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsMetadataUuid) FieldPath() *BatchGetPlanAssignmentRequestsResponse_FieldSubPath {
	return &BatchGetPlanAssignmentRequestsResponse_FieldSubPath{
		selector: BatchGetPlanAssignmentRequestsResponse_FieldPathSelectorPlanAssignmentRequests,
		subPath:  plan_assignment_request.NewPlanAssignmentRequestFieldPathBuilder().Metadata().Uuid().FieldPath(),
	}
}

func (s BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsMetadataUuid) WithValue(value string) *BatchGetPlanAssignmentRequestsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetPlanAssignmentRequestsResponse_FieldSubPathValue)
}

func (s BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsMetadataUuid) WithArrayOfValues(values []string) *BatchGetPlanAssignmentRequestsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetPlanAssignmentRequestsResponse_FieldSubPathArrayOfValues)
}

type BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsMetadataTags struct{}

func (BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsMetadataTags) FieldPath() *BatchGetPlanAssignmentRequestsResponse_FieldSubPath {
	return &BatchGetPlanAssignmentRequestsResponse_FieldSubPath{
		selector: BatchGetPlanAssignmentRequestsResponse_FieldPathSelectorPlanAssignmentRequests,
		subPath:  plan_assignment_request.NewPlanAssignmentRequestFieldPathBuilder().Metadata().Tags().FieldPath(),
	}
}

func (s BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsMetadataTags) WithValue(value []string) *BatchGetPlanAssignmentRequestsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetPlanAssignmentRequestsResponse_FieldSubPathValue)
}

func (s BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsMetadataTags) WithArrayOfValues(values [][]string) *BatchGetPlanAssignmentRequestsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetPlanAssignmentRequestsResponse_FieldSubPathArrayOfValues)
}

func (s BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsMetadataTags) WithItemValue(value string) *BatchGetPlanAssignmentRequestsResponse_FieldSubPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*BatchGetPlanAssignmentRequestsResponse_FieldSubPathArrayItemValue)
}

type BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsMetadataLabels struct{}

func (BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsMetadataLabels) FieldPath() *BatchGetPlanAssignmentRequestsResponse_FieldSubPath {
	return &BatchGetPlanAssignmentRequestsResponse_FieldSubPath{
		selector: BatchGetPlanAssignmentRequestsResponse_FieldPathSelectorPlanAssignmentRequests,
		subPath:  plan_assignment_request.NewPlanAssignmentRequestFieldPathBuilder().Metadata().Labels().FieldPath(),
	}
}

func (s BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsMetadataLabels) WithValue(value map[string]string) *BatchGetPlanAssignmentRequestsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetPlanAssignmentRequestsResponse_FieldSubPathValue)
}

func (s BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsMetadataLabels) WithArrayOfValues(values []map[string]string) *BatchGetPlanAssignmentRequestsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetPlanAssignmentRequestsResponse_FieldSubPathArrayOfValues)
}

func (BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsMetadataLabels) WithKey(key string) BatchGetPlanAssignmentRequestsResponseMapPathSelectorPlanAssignmentRequestsMetadataLabels {
	return BatchGetPlanAssignmentRequestsResponseMapPathSelectorPlanAssignmentRequestsMetadataLabels{key: key}
}

type BatchGetPlanAssignmentRequestsResponseMapPathSelectorPlanAssignmentRequestsMetadataLabels struct {
	key string
}

func (s BatchGetPlanAssignmentRequestsResponseMapPathSelectorPlanAssignmentRequestsMetadataLabels) FieldPath() *BatchGetPlanAssignmentRequestsResponse_FieldSubPath {
	return &BatchGetPlanAssignmentRequestsResponse_FieldSubPath{
		selector: BatchGetPlanAssignmentRequestsResponse_FieldPathSelectorPlanAssignmentRequests,
		subPath:  plan_assignment_request.NewPlanAssignmentRequestFieldPathBuilder().Metadata().Labels().WithKey(s.key).FieldPath(),
	}
}

func (s BatchGetPlanAssignmentRequestsResponseMapPathSelectorPlanAssignmentRequestsMetadataLabels) WithValue(value string) *BatchGetPlanAssignmentRequestsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetPlanAssignmentRequestsResponse_FieldSubPathValue)
}

func (s BatchGetPlanAssignmentRequestsResponseMapPathSelectorPlanAssignmentRequestsMetadataLabels) WithArrayOfValues(values []string) *BatchGetPlanAssignmentRequestsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetPlanAssignmentRequestsResponse_FieldSubPathArrayOfValues)
}

type BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsMetadataAnnotations struct{}

func (BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsMetadataAnnotations) FieldPath() *BatchGetPlanAssignmentRequestsResponse_FieldSubPath {
	return &BatchGetPlanAssignmentRequestsResponse_FieldSubPath{
		selector: BatchGetPlanAssignmentRequestsResponse_FieldPathSelectorPlanAssignmentRequests,
		subPath:  plan_assignment_request.NewPlanAssignmentRequestFieldPathBuilder().Metadata().Annotations().FieldPath(),
	}
}

func (s BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsMetadataAnnotations) WithValue(value map[string]string) *BatchGetPlanAssignmentRequestsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetPlanAssignmentRequestsResponse_FieldSubPathValue)
}

func (s BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsMetadataAnnotations) WithArrayOfValues(values []map[string]string) *BatchGetPlanAssignmentRequestsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetPlanAssignmentRequestsResponse_FieldSubPathArrayOfValues)
}

func (BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsMetadataAnnotations) WithKey(key string) BatchGetPlanAssignmentRequestsResponseMapPathSelectorPlanAssignmentRequestsMetadataAnnotations {
	return BatchGetPlanAssignmentRequestsResponseMapPathSelectorPlanAssignmentRequestsMetadataAnnotations{key: key}
}

type BatchGetPlanAssignmentRequestsResponseMapPathSelectorPlanAssignmentRequestsMetadataAnnotations struct {
	key string
}

func (s BatchGetPlanAssignmentRequestsResponseMapPathSelectorPlanAssignmentRequestsMetadataAnnotations) FieldPath() *BatchGetPlanAssignmentRequestsResponse_FieldSubPath {
	return &BatchGetPlanAssignmentRequestsResponse_FieldSubPath{
		selector: BatchGetPlanAssignmentRequestsResponse_FieldPathSelectorPlanAssignmentRequests,
		subPath:  plan_assignment_request.NewPlanAssignmentRequestFieldPathBuilder().Metadata().Annotations().WithKey(s.key).FieldPath(),
	}
}

func (s BatchGetPlanAssignmentRequestsResponseMapPathSelectorPlanAssignmentRequestsMetadataAnnotations) WithValue(value string) *BatchGetPlanAssignmentRequestsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetPlanAssignmentRequestsResponse_FieldSubPathValue)
}

func (s BatchGetPlanAssignmentRequestsResponseMapPathSelectorPlanAssignmentRequestsMetadataAnnotations) WithArrayOfValues(values []string) *BatchGetPlanAssignmentRequestsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetPlanAssignmentRequestsResponse_FieldSubPathArrayOfValues)
}

type BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsMetadataGeneration struct{}

func (BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsMetadataGeneration) FieldPath() *BatchGetPlanAssignmentRequestsResponse_FieldSubPath {
	return &BatchGetPlanAssignmentRequestsResponse_FieldSubPath{
		selector: BatchGetPlanAssignmentRequestsResponse_FieldPathSelectorPlanAssignmentRequests,
		subPath:  plan_assignment_request.NewPlanAssignmentRequestFieldPathBuilder().Metadata().Generation().FieldPath(),
	}
}

func (s BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsMetadataGeneration) WithValue(value int64) *BatchGetPlanAssignmentRequestsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetPlanAssignmentRequestsResponse_FieldSubPathValue)
}

func (s BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsMetadataGeneration) WithArrayOfValues(values []int64) *BatchGetPlanAssignmentRequestsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetPlanAssignmentRequestsResponse_FieldSubPathArrayOfValues)
}

type BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsMetadataResourceVersion struct{}

func (BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsMetadataResourceVersion) FieldPath() *BatchGetPlanAssignmentRequestsResponse_FieldSubPath {
	return &BatchGetPlanAssignmentRequestsResponse_FieldSubPath{
		selector: BatchGetPlanAssignmentRequestsResponse_FieldPathSelectorPlanAssignmentRequests,
		subPath:  plan_assignment_request.NewPlanAssignmentRequestFieldPathBuilder().Metadata().ResourceVersion().FieldPath(),
	}
}

func (s BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsMetadataResourceVersion) WithValue(value string) *BatchGetPlanAssignmentRequestsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetPlanAssignmentRequestsResponse_FieldSubPathValue)
}

func (s BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsMetadataResourceVersion) WithArrayOfValues(values []string) *BatchGetPlanAssignmentRequestsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetPlanAssignmentRequestsResponse_FieldSubPathArrayOfValues)
}

type BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsMetadataOwnerReferences struct{}

func (BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsMetadataOwnerReferences) FieldPath() *BatchGetPlanAssignmentRequestsResponse_FieldSubPath {
	return &BatchGetPlanAssignmentRequestsResponse_FieldSubPath{
		selector: BatchGetPlanAssignmentRequestsResponse_FieldPathSelectorPlanAssignmentRequests,
		subPath:  plan_assignment_request.NewPlanAssignmentRequestFieldPathBuilder().Metadata().OwnerReferences().FieldPath(),
	}
}

func (s BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsMetadataOwnerReferences) WithValue(value []*ntt_meta.OwnerReference) *BatchGetPlanAssignmentRequestsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetPlanAssignmentRequestsResponse_FieldSubPathValue)
}

func (s BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsMetadataOwnerReferences) WithArrayOfValues(values [][]*ntt_meta.OwnerReference) *BatchGetPlanAssignmentRequestsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetPlanAssignmentRequestsResponse_FieldSubPathArrayOfValues)
}

func (s BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsMetadataOwnerReferences) WithItemValue(value *ntt_meta.OwnerReference) *BatchGetPlanAssignmentRequestsResponse_FieldSubPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*BatchGetPlanAssignmentRequestsResponse_FieldSubPathArrayItemValue)
}

func (BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsMetadataOwnerReferences) Kind() BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsMetadataOwnerReferencesKind {
	return BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsMetadataOwnerReferencesKind{}
}

func (BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsMetadataOwnerReferences) Version() BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsMetadataOwnerReferencesVersion {
	return BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsMetadataOwnerReferencesVersion{}
}

func (BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsMetadataOwnerReferences) Name() BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsMetadataOwnerReferencesName {
	return BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsMetadataOwnerReferencesName{}
}

func (BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsMetadataOwnerReferences) Region() BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsMetadataOwnerReferencesRegion {
	return BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsMetadataOwnerReferencesRegion{}
}

func (BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsMetadataOwnerReferences) Controller() BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsMetadataOwnerReferencesController {
	return BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsMetadataOwnerReferencesController{}
}

func (BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsMetadataOwnerReferences) BlockOwnerDeletion() BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsMetadataOwnerReferencesBlockOwnerDeletion {
	return BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsMetadataOwnerReferencesBlockOwnerDeletion{}
}

func (BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsMetadataOwnerReferences) RequiresOwnerReference() BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsMetadataOwnerReferencesRequiresOwnerReference {
	return BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsMetadataOwnerReferencesRequiresOwnerReference{}
}

type BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsMetadataOwnerReferencesKind struct{}

func (BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsMetadataOwnerReferencesKind) FieldPath() *BatchGetPlanAssignmentRequestsResponse_FieldSubPath {
	return &BatchGetPlanAssignmentRequestsResponse_FieldSubPath{
		selector: BatchGetPlanAssignmentRequestsResponse_FieldPathSelectorPlanAssignmentRequests,
		subPath:  plan_assignment_request.NewPlanAssignmentRequestFieldPathBuilder().Metadata().OwnerReferences().Kind().FieldPath(),
	}
}

func (s BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsMetadataOwnerReferencesKind) WithValue(value string) *BatchGetPlanAssignmentRequestsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetPlanAssignmentRequestsResponse_FieldSubPathValue)
}

func (s BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsMetadataOwnerReferencesKind) WithArrayOfValues(values []string) *BatchGetPlanAssignmentRequestsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetPlanAssignmentRequestsResponse_FieldSubPathArrayOfValues)
}

type BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsMetadataOwnerReferencesVersion struct{}

func (BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsMetadataOwnerReferencesVersion) FieldPath() *BatchGetPlanAssignmentRequestsResponse_FieldSubPath {
	return &BatchGetPlanAssignmentRequestsResponse_FieldSubPath{
		selector: BatchGetPlanAssignmentRequestsResponse_FieldPathSelectorPlanAssignmentRequests,
		subPath:  plan_assignment_request.NewPlanAssignmentRequestFieldPathBuilder().Metadata().OwnerReferences().Version().FieldPath(),
	}
}

func (s BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsMetadataOwnerReferencesVersion) WithValue(value string) *BatchGetPlanAssignmentRequestsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetPlanAssignmentRequestsResponse_FieldSubPathValue)
}

func (s BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsMetadataOwnerReferencesVersion) WithArrayOfValues(values []string) *BatchGetPlanAssignmentRequestsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetPlanAssignmentRequestsResponse_FieldSubPathArrayOfValues)
}

type BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsMetadataOwnerReferencesName struct{}

func (BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsMetadataOwnerReferencesName) FieldPath() *BatchGetPlanAssignmentRequestsResponse_FieldSubPath {
	return &BatchGetPlanAssignmentRequestsResponse_FieldSubPath{
		selector: BatchGetPlanAssignmentRequestsResponse_FieldPathSelectorPlanAssignmentRequests,
		subPath:  plan_assignment_request.NewPlanAssignmentRequestFieldPathBuilder().Metadata().OwnerReferences().Name().FieldPath(),
	}
}

func (s BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsMetadataOwnerReferencesName) WithValue(value string) *BatchGetPlanAssignmentRequestsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetPlanAssignmentRequestsResponse_FieldSubPathValue)
}

func (s BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsMetadataOwnerReferencesName) WithArrayOfValues(values []string) *BatchGetPlanAssignmentRequestsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetPlanAssignmentRequestsResponse_FieldSubPathArrayOfValues)
}

type BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsMetadataOwnerReferencesRegion struct{}

func (BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsMetadataOwnerReferencesRegion) FieldPath() *BatchGetPlanAssignmentRequestsResponse_FieldSubPath {
	return &BatchGetPlanAssignmentRequestsResponse_FieldSubPath{
		selector: BatchGetPlanAssignmentRequestsResponse_FieldPathSelectorPlanAssignmentRequests,
		subPath:  plan_assignment_request.NewPlanAssignmentRequestFieldPathBuilder().Metadata().OwnerReferences().Region().FieldPath(),
	}
}

func (s BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsMetadataOwnerReferencesRegion) WithValue(value string) *BatchGetPlanAssignmentRequestsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetPlanAssignmentRequestsResponse_FieldSubPathValue)
}

func (s BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsMetadataOwnerReferencesRegion) WithArrayOfValues(values []string) *BatchGetPlanAssignmentRequestsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetPlanAssignmentRequestsResponse_FieldSubPathArrayOfValues)
}

type BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsMetadataOwnerReferencesController struct{}

func (BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsMetadataOwnerReferencesController) FieldPath() *BatchGetPlanAssignmentRequestsResponse_FieldSubPath {
	return &BatchGetPlanAssignmentRequestsResponse_FieldSubPath{
		selector: BatchGetPlanAssignmentRequestsResponse_FieldPathSelectorPlanAssignmentRequests,
		subPath:  plan_assignment_request.NewPlanAssignmentRequestFieldPathBuilder().Metadata().OwnerReferences().Controller().FieldPath(),
	}
}

func (s BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsMetadataOwnerReferencesController) WithValue(value bool) *BatchGetPlanAssignmentRequestsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetPlanAssignmentRequestsResponse_FieldSubPathValue)
}

func (s BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsMetadataOwnerReferencesController) WithArrayOfValues(values []bool) *BatchGetPlanAssignmentRequestsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetPlanAssignmentRequestsResponse_FieldSubPathArrayOfValues)
}

type BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsMetadataOwnerReferencesBlockOwnerDeletion struct{}

func (BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsMetadataOwnerReferencesBlockOwnerDeletion) FieldPath() *BatchGetPlanAssignmentRequestsResponse_FieldSubPath {
	return &BatchGetPlanAssignmentRequestsResponse_FieldSubPath{
		selector: BatchGetPlanAssignmentRequestsResponse_FieldPathSelectorPlanAssignmentRequests,
		subPath:  plan_assignment_request.NewPlanAssignmentRequestFieldPathBuilder().Metadata().OwnerReferences().BlockOwnerDeletion().FieldPath(),
	}
}

func (s BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsMetadataOwnerReferencesBlockOwnerDeletion) WithValue(value bool) *BatchGetPlanAssignmentRequestsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetPlanAssignmentRequestsResponse_FieldSubPathValue)
}

func (s BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsMetadataOwnerReferencesBlockOwnerDeletion) WithArrayOfValues(values []bool) *BatchGetPlanAssignmentRequestsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetPlanAssignmentRequestsResponse_FieldSubPathArrayOfValues)
}

type BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsMetadataOwnerReferencesRequiresOwnerReference struct{}

func (BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsMetadataOwnerReferencesRequiresOwnerReference) FieldPath() *BatchGetPlanAssignmentRequestsResponse_FieldSubPath {
	return &BatchGetPlanAssignmentRequestsResponse_FieldSubPath{
		selector: BatchGetPlanAssignmentRequestsResponse_FieldPathSelectorPlanAssignmentRequests,
		subPath:  plan_assignment_request.NewPlanAssignmentRequestFieldPathBuilder().Metadata().OwnerReferences().RequiresOwnerReference().FieldPath(),
	}
}

func (s BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsMetadataOwnerReferencesRequiresOwnerReference) WithValue(value bool) *BatchGetPlanAssignmentRequestsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetPlanAssignmentRequestsResponse_FieldSubPathValue)
}

func (s BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsMetadataOwnerReferencesRequiresOwnerReference) WithArrayOfValues(values []bool) *BatchGetPlanAssignmentRequestsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetPlanAssignmentRequestsResponse_FieldSubPathArrayOfValues)
}

type BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsMetadataShards struct{}

func (BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsMetadataShards) FieldPath() *BatchGetPlanAssignmentRequestsResponse_FieldSubPath {
	return &BatchGetPlanAssignmentRequestsResponse_FieldSubPath{
		selector: BatchGetPlanAssignmentRequestsResponse_FieldPathSelectorPlanAssignmentRequests,
		subPath:  plan_assignment_request.NewPlanAssignmentRequestFieldPathBuilder().Metadata().Shards().FieldPath(),
	}
}

func (s BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsMetadataShards) WithValue(value map[string]int64) *BatchGetPlanAssignmentRequestsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetPlanAssignmentRequestsResponse_FieldSubPathValue)
}

func (s BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsMetadataShards) WithArrayOfValues(values []map[string]int64) *BatchGetPlanAssignmentRequestsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetPlanAssignmentRequestsResponse_FieldSubPathArrayOfValues)
}

func (BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsMetadataShards) WithKey(key string) BatchGetPlanAssignmentRequestsResponseMapPathSelectorPlanAssignmentRequestsMetadataShards {
	return BatchGetPlanAssignmentRequestsResponseMapPathSelectorPlanAssignmentRequestsMetadataShards{key: key}
}

type BatchGetPlanAssignmentRequestsResponseMapPathSelectorPlanAssignmentRequestsMetadataShards struct {
	key string
}

func (s BatchGetPlanAssignmentRequestsResponseMapPathSelectorPlanAssignmentRequestsMetadataShards) FieldPath() *BatchGetPlanAssignmentRequestsResponse_FieldSubPath {
	return &BatchGetPlanAssignmentRequestsResponse_FieldSubPath{
		selector: BatchGetPlanAssignmentRequestsResponse_FieldPathSelectorPlanAssignmentRequests,
		subPath:  plan_assignment_request.NewPlanAssignmentRequestFieldPathBuilder().Metadata().Shards().WithKey(s.key).FieldPath(),
	}
}

func (s BatchGetPlanAssignmentRequestsResponseMapPathSelectorPlanAssignmentRequestsMetadataShards) WithValue(value int64) *BatchGetPlanAssignmentRequestsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetPlanAssignmentRequestsResponse_FieldSubPathValue)
}

func (s BatchGetPlanAssignmentRequestsResponseMapPathSelectorPlanAssignmentRequestsMetadataShards) WithArrayOfValues(values []int64) *BatchGetPlanAssignmentRequestsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetPlanAssignmentRequestsResponse_FieldSubPathArrayOfValues)
}

type BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsMetadataSyncing struct{}

func (BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsMetadataSyncing) FieldPath() *BatchGetPlanAssignmentRequestsResponse_FieldSubPath {
	return &BatchGetPlanAssignmentRequestsResponse_FieldSubPath{
		selector: BatchGetPlanAssignmentRequestsResponse_FieldPathSelectorPlanAssignmentRequests,
		subPath:  plan_assignment_request.NewPlanAssignmentRequestFieldPathBuilder().Metadata().Syncing().FieldPath(),
	}
}

func (s BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsMetadataSyncing) WithValue(value *ntt_meta.SyncingMeta) *BatchGetPlanAssignmentRequestsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetPlanAssignmentRequestsResponse_FieldSubPathValue)
}

func (s BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsMetadataSyncing) WithArrayOfValues(values []*ntt_meta.SyncingMeta) *BatchGetPlanAssignmentRequestsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetPlanAssignmentRequestsResponse_FieldSubPathArrayOfValues)
}

func (BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsMetadataSyncing) OwningRegion() BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsMetadataSyncingOwningRegion {
	return BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsMetadataSyncingOwningRegion{}
}

func (BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsMetadataSyncing) Regions() BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsMetadataSyncingRegions {
	return BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsMetadataSyncingRegions{}
}

type BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsMetadataSyncingOwningRegion struct{}

func (BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsMetadataSyncingOwningRegion) FieldPath() *BatchGetPlanAssignmentRequestsResponse_FieldSubPath {
	return &BatchGetPlanAssignmentRequestsResponse_FieldSubPath{
		selector: BatchGetPlanAssignmentRequestsResponse_FieldPathSelectorPlanAssignmentRequests,
		subPath:  plan_assignment_request.NewPlanAssignmentRequestFieldPathBuilder().Metadata().Syncing().OwningRegion().FieldPath(),
	}
}

func (s BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsMetadataSyncingOwningRegion) WithValue(value string) *BatchGetPlanAssignmentRequestsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetPlanAssignmentRequestsResponse_FieldSubPathValue)
}

func (s BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsMetadataSyncingOwningRegion) WithArrayOfValues(values []string) *BatchGetPlanAssignmentRequestsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetPlanAssignmentRequestsResponse_FieldSubPathArrayOfValues)
}

type BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsMetadataSyncingRegions struct{}

func (BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsMetadataSyncingRegions) FieldPath() *BatchGetPlanAssignmentRequestsResponse_FieldSubPath {
	return &BatchGetPlanAssignmentRequestsResponse_FieldSubPath{
		selector: BatchGetPlanAssignmentRequestsResponse_FieldPathSelectorPlanAssignmentRequests,
		subPath:  plan_assignment_request.NewPlanAssignmentRequestFieldPathBuilder().Metadata().Syncing().Regions().FieldPath(),
	}
}

func (s BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsMetadataSyncingRegions) WithValue(value []string) *BatchGetPlanAssignmentRequestsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetPlanAssignmentRequestsResponse_FieldSubPathValue)
}

func (s BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsMetadataSyncingRegions) WithArrayOfValues(values [][]string) *BatchGetPlanAssignmentRequestsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetPlanAssignmentRequestsResponse_FieldSubPathArrayOfValues)
}

func (s BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsMetadataSyncingRegions) WithItemValue(value string) *BatchGetPlanAssignmentRequestsResponse_FieldSubPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*BatchGetPlanAssignmentRequestsResponse_FieldSubPathArrayItemValue)
}

type BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsMetadataLifecycle struct{}

func (BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsMetadataLifecycle) FieldPath() *BatchGetPlanAssignmentRequestsResponse_FieldSubPath {
	return &BatchGetPlanAssignmentRequestsResponse_FieldSubPath{
		selector: BatchGetPlanAssignmentRequestsResponse_FieldPathSelectorPlanAssignmentRequests,
		subPath:  plan_assignment_request.NewPlanAssignmentRequestFieldPathBuilder().Metadata().Lifecycle().FieldPath(),
	}
}

func (s BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsMetadataLifecycle) WithValue(value *ntt_meta.Lifecycle) *BatchGetPlanAssignmentRequestsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetPlanAssignmentRequestsResponse_FieldSubPathValue)
}

func (s BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsMetadataLifecycle) WithArrayOfValues(values []*ntt_meta.Lifecycle) *BatchGetPlanAssignmentRequestsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetPlanAssignmentRequestsResponse_FieldSubPathArrayOfValues)
}

func (BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsMetadataLifecycle) State() BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsMetadataLifecycleState {
	return BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsMetadataLifecycleState{}
}

func (BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsMetadataLifecycle) BlockDeletion() BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsMetadataLifecycleBlockDeletion {
	return BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsMetadataLifecycleBlockDeletion{}
}

type BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsMetadataLifecycleState struct{}

func (BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsMetadataLifecycleState) FieldPath() *BatchGetPlanAssignmentRequestsResponse_FieldSubPath {
	return &BatchGetPlanAssignmentRequestsResponse_FieldSubPath{
		selector: BatchGetPlanAssignmentRequestsResponse_FieldPathSelectorPlanAssignmentRequests,
		subPath:  plan_assignment_request.NewPlanAssignmentRequestFieldPathBuilder().Metadata().Lifecycle().State().FieldPath(),
	}
}

func (s BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsMetadataLifecycleState) WithValue(value ntt_meta.Lifecycle_State) *BatchGetPlanAssignmentRequestsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetPlanAssignmentRequestsResponse_FieldSubPathValue)
}

func (s BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsMetadataLifecycleState) WithArrayOfValues(values []ntt_meta.Lifecycle_State) *BatchGetPlanAssignmentRequestsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetPlanAssignmentRequestsResponse_FieldSubPathArrayOfValues)
}

type BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsMetadataLifecycleBlockDeletion struct{}

func (BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsMetadataLifecycleBlockDeletion) FieldPath() *BatchGetPlanAssignmentRequestsResponse_FieldSubPath {
	return &BatchGetPlanAssignmentRequestsResponse_FieldSubPath{
		selector: BatchGetPlanAssignmentRequestsResponse_FieldPathSelectorPlanAssignmentRequests,
		subPath:  plan_assignment_request.NewPlanAssignmentRequestFieldPathBuilder().Metadata().Lifecycle().BlockDeletion().FieldPath(),
	}
}

func (s BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsMetadataLifecycleBlockDeletion) WithValue(value bool) *BatchGetPlanAssignmentRequestsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetPlanAssignmentRequestsResponse_FieldSubPathValue)
}

func (s BatchGetPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsMetadataLifecycleBlockDeletion) WithArrayOfValues(values []bool) *BatchGetPlanAssignmentRequestsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetPlanAssignmentRequestsResponse_FieldSubPathArrayOfValues)
}

type BatchGetPlanAssignmentRequestsResponsePathSelectorMissing struct{}

func (BatchGetPlanAssignmentRequestsResponsePathSelectorMissing) FieldPath() *BatchGetPlanAssignmentRequestsResponse_FieldTerminalPath {
	return &BatchGetPlanAssignmentRequestsResponse_FieldTerminalPath{selector: BatchGetPlanAssignmentRequestsResponse_FieldPathSelectorMissing}
}

func (s BatchGetPlanAssignmentRequestsResponsePathSelectorMissing) WithValue(value []*plan_assignment_request.Reference) *BatchGetPlanAssignmentRequestsResponse_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetPlanAssignmentRequestsResponse_FieldTerminalPathValue)
}

func (s BatchGetPlanAssignmentRequestsResponsePathSelectorMissing) WithArrayOfValues(values [][]*plan_assignment_request.Reference) *BatchGetPlanAssignmentRequestsResponse_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetPlanAssignmentRequestsResponse_FieldTerminalPathArrayOfValues)
}

func (s BatchGetPlanAssignmentRequestsResponsePathSelectorMissing) WithItemValue(value *plan_assignment_request.Reference) *BatchGetPlanAssignmentRequestsResponse_FieldTerminalPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*BatchGetPlanAssignmentRequestsResponse_FieldTerminalPathArrayItemValue)
}

type ListPlanAssignmentRequestsRequestFieldPathBuilder struct{}

func NewListPlanAssignmentRequestsRequestFieldPathBuilder() ListPlanAssignmentRequestsRequestFieldPathBuilder {
	return ListPlanAssignmentRequestsRequestFieldPathBuilder{}
}
func (ListPlanAssignmentRequestsRequestFieldPathBuilder) Parent() ListPlanAssignmentRequestsRequestPathSelectorParent {
	return ListPlanAssignmentRequestsRequestPathSelectorParent{}
}
func (ListPlanAssignmentRequestsRequestFieldPathBuilder) PageSize() ListPlanAssignmentRequestsRequestPathSelectorPageSize {
	return ListPlanAssignmentRequestsRequestPathSelectorPageSize{}
}
func (ListPlanAssignmentRequestsRequestFieldPathBuilder) PageToken() ListPlanAssignmentRequestsRequestPathSelectorPageToken {
	return ListPlanAssignmentRequestsRequestPathSelectorPageToken{}
}
func (ListPlanAssignmentRequestsRequestFieldPathBuilder) OrderBy() ListPlanAssignmentRequestsRequestPathSelectorOrderBy {
	return ListPlanAssignmentRequestsRequestPathSelectorOrderBy{}
}
func (ListPlanAssignmentRequestsRequestFieldPathBuilder) Filter() ListPlanAssignmentRequestsRequestPathSelectorFilter {
	return ListPlanAssignmentRequestsRequestPathSelectorFilter{}
}
func (ListPlanAssignmentRequestsRequestFieldPathBuilder) FieldMask() ListPlanAssignmentRequestsRequestPathSelectorFieldMask {
	return ListPlanAssignmentRequestsRequestPathSelectorFieldMask{}
}
func (ListPlanAssignmentRequestsRequestFieldPathBuilder) View() ListPlanAssignmentRequestsRequestPathSelectorView {
	return ListPlanAssignmentRequestsRequestPathSelectorView{}
}
func (ListPlanAssignmentRequestsRequestFieldPathBuilder) IncludePagingInfo() ListPlanAssignmentRequestsRequestPathSelectorIncludePagingInfo {
	return ListPlanAssignmentRequestsRequestPathSelectorIncludePagingInfo{}
}

type ListPlanAssignmentRequestsRequestPathSelectorParent struct{}

func (ListPlanAssignmentRequestsRequestPathSelectorParent) FieldPath() *ListPlanAssignmentRequestsRequest_FieldTerminalPath {
	return &ListPlanAssignmentRequestsRequest_FieldTerminalPath{selector: ListPlanAssignmentRequestsRequest_FieldPathSelectorParent}
}

func (s ListPlanAssignmentRequestsRequestPathSelectorParent) WithValue(value *plan_assignment_request.ParentName) *ListPlanAssignmentRequestsRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*ListPlanAssignmentRequestsRequest_FieldTerminalPathValue)
}

func (s ListPlanAssignmentRequestsRequestPathSelectorParent) WithArrayOfValues(values []*plan_assignment_request.ParentName) *ListPlanAssignmentRequestsRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListPlanAssignmentRequestsRequest_FieldTerminalPathArrayOfValues)
}

type ListPlanAssignmentRequestsRequestPathSelectorPageSize struct{}

func (ListPlanAssignmentRequestsRequestPathSelectorPageSize) FieldPath() *ListPlanAssignmentRequestsRequest_FieldTerminalPath {
	return &ListPlanAssignmentRequestsRequest_FieldTerminalPath{selector: ListPlanAssignmentRequestsRequest_FieldPathSelectorPageSize}
}

func (s ListPlanAssignmentRequestsRequestPathSelectorPageSize) WithValue(value int32) *ListPlanAssignmentRequestsRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*ListPlanAssignmentRequestsRequest_FieldTerminalPathValue)
}

func (s ListPlanAssignmentRequestsRequestPathSelectorPageSize) WithArrayOfValues(values []int32) *ListPlanAssignmentRequestsRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListPlanAssignmentRequestsRequest_FieldTerminalPathArrayOfValues)
}

type ListPlanAssignmentRequestsRequestPathSelectorPageToken struct{}

func (ListPlanAssignmentRequestsRequestPathSelectorPageToken) FieldPath() *ListPlanAssignmentRequestsRequest_FieldTerminalPath {
	return &ListPlanAssignmentRequestsRequest_FieldTerminalPath{selector: ListPlanAssignmentRequestsRequest_FieldPathSelectorPageToken}
}

func (s ListPlanAssignmentRequestsRequestPathSelectorPageToken) WithValue(value *plan_assignment_request.PagerCursor) *ListPlanAssignmentRequestsRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*ListPlanAssignmentRequestsRequest_FieldTerminalPathValue)
}

func (s ListPlanAssignmentRequestsRequestPathSelectorPageToken) WithArrayOfValues(values []*plan_assignment_request.PagerCursor) *ListPlanAssignmentRequestsRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListPlanAssignmentRequestsRequest_FieldTerminalPathArrayOfValues)
}

type ListPlanAssignmentRequestsRequestPathSelectorOrderBy struct{}

func (ListPlanAssignmentRequestsRequestPathSelectorOrderBy) FieldPath() *ListPlanAssignmentRequestsRequest_FieldTerminalPath {
	return &ListPlanAssignmentRequestsRequest_FieldTerminalPath{selector: ListPlanAssignmentRequestsRequest_FieldPathSelectorOrderBy}
}

func (s ListPlanAssignmentRequestsRequestPathSelectorOrderBy) WithValue(value *plan_assignment_request.OrderBy) *ListPlanAssignmentRequestsRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*ListPlanAssignmentRequestsRequest_FieldTerminalPathValue)
}

func (s ListPlanAssignmentRequestsRequestPathSelectorOrderBy) WithArrayOfValues(values []*plan_assignment_request.OrderBy) *ListPlanAssignmentRequestsRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListPlanAssignmentRequestsRequest_FieldTerminalPathArrayOfValues)
}

type ListPlanAssignmentRequestsRequestPathSelectorFilter struct{}

func (ListPlanAssignmentRequestsRequestPathSelectorFilter) FieldPath() *ListPlanAssignmentRequestsRequest_FieldTerminalPath {
	return &ListPlanAssignmentRequestsRequest_FieldTerminalPath{selector: ListPlanAssignmentRequestsRequest_FieldPathSelectorFilter}
}

func (s ListPlanAssignmentRequestsRequestPathSelectorFilter) WithValue(value *plan_assignment_request.Filter) *ListPlanAssignmentRequestsRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*ListPlanAssignmentRequestsRequest_FieldTerminalPathValue)
}

func (s ListPlanAssignmentRequestsRequestPathSelectorFilter) WithArrayOfValues(values []*plan_assignment_request.Filter) *ListPlanAssignmentRequestsRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListPlanAssignmentRequestsRequest_FieldTerminalPathArrayOfValues)
}

type ListPlanAssignmentRequestsRequestPathSelectorFieldMask struct{}

func (ListPlanAssignmentRequestsRequestPathSelectorFieldMask) FieldPath() *ListPlanAssignmentRequestsRequest_FieldTerminalPath {
	return &ListPlanAssignmentRequestsRequest_FieldTerminalPath{selector: ListPlanAssignmentRequestsRequest_FieldPathSelectorFieldMask}
}

func (s ListPlanAssignmentRequestsRequestPathSelectorFieldMask) WithValue(value *plan_assignment_request.PlanAssignmentRequest_FieldMask) *ListPlanAssignmentRequestsRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*ListPlanAssignmentRequestsRequest_FieldTerminalPathValue)
}

func (s ListPlanAssignmentRequestsRequestPathSelectorFieldMask) WithArrayOfValues(values []*plan_assignment_request.PlanAssignmentRequest_FieldMask) *ListPlanAssignmentRequestsRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListPlanAssignmentRequestsRequest_FieldTerminalPathArrayOfValues)
}

type ListPlanAssignmentRequestsRequestPathSelectorView struct{}

func (ListPlanAssignmentRequestsRequestPathSelectorView) FieldPath() *ListPlanAssignmentRequestsRequest_FieldTerminalPath {
	return &ListPlanAssignmentRequestsRequest_FieldTerminalPath{selector: ListPlanAssignmentRequestsRequest_FieldPathSelectorView}
}

func (s ListPlanAssignmentRequestsRequestPathSelectorView) WithValue(value view.View) *ListPlanAssignmentRequestsRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*ListPlanAssignmentRequestsRequest_FieldTerminalPathValue)
}

func (s ListPlanAssignmentRequestsRequestPathSelectorView) WithArrayOfValues(values []view.View) *ListPlanAssignmentRequestsRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListPlanAssignmentRequestsRequest_FieldTerminalPathArrayOfValues)
}

type ListPlanAssignmentRequestsRequestPathSelectorIncludePagingInfo struct{}

func (ListPlanAssignmentRequestsRequestPathSelectorIncludePagingInfo) FieldPath() *ListPlanAssignmentRequestsRequest_FieldTerminalPath {
	return &ListPlanAssignmentRequestsRequest_FieldTerminalPath{selector: ListPlanAssignmentRequestsRequest_FieldPathSelectorIncludePagingInfo}
}

func (s ListPlanAssignmentRequestsRequestPathSelectorIncludePagingInfo) WithValue(value bool) *ListPlanAssignmentRequestsRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*ListPlanAssignmentRequestsRequest_FieldTerminalPathValue)
}

func (s ListPlanAssignmentRequestsRequestPathSelectorIncludePagingInfo) WithArrayOfValues(values []bool) *ListPlanAssignmentRequestsRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListPlanAssignmentRequestsRequest_FieldTerminalPathArrayOfValues)
}

type ListPlanAssignmentRequestsResponseFieldPathBuilder struct{}

func NewListPlanAssignmentRequestsResponseFieldPathBuilder() ListPlanAssignmentRequestsResponseFieldPathBuilder {
	return ListPlanAssignmentRequestsResponseFieldPathBuilder{}
}
func (ListPlanAssignmentRequestsResponseFieldPathBuilder) PlanAssignmentRequests() ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequests {
	return ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequests{}
}
func (ListPlanAssignmentRequestsResponseFieldPathBuilder) PrevPageToken() ListPlanAssignmentRequestsResponsePathSelectorPrevPageToken {
	return ListPlanAssignmentRequestsResponsePathSelectorPrevPageToken{}
}
func (ListPlanAssignmentRequestsResponseFieldPathBuilder) NextPageToken() ListPlanAssignmentRequestsResponsePathSelectorNextPageToken {
	return ListPlanAssignmentRequestsResponsePathSelectorNextPageToken{}
}
func (ListPlanAssignmentRequestsResponseFieldPathBuilder) CurrentOffset() ListPlanAssignmentRequestsResponsePathSelectorCurrentOffset {
	return ListPlanAssignmentRequestsResponsePathSelectorCurrentOffset{}
}
func (ListPlanAssignmentRequestsResponseFieldPathBuilder) TotalResultsCount() ListPlanAssignmentRequestsResponsePathSelectorTotalResultsCount {
	return ListPlanAssignmentRequestsResponsePathSelectorTotalResultsCount{}
}

type ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequests struct{}

func (ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequests) FieldPath() *ListPlanAssignmentRequestsResponse_FieldTerminalPath {
	return &ListPlanAssignmentRequestsResponse_FieldTerminalPath{selector: ListPlanAssignmentRequestsResponse_FieldPathSelectorPlanAssignmentRequests}
}

func (s ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequests) WithValue(value []*plan_assignment_request.PlanAssignmentRequest) *ListPlanAssignmentRequestsResponse_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*ListPlanAssignmentRequestsResponse_FieldTerminalPathValue)
}

func (s ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequests) WithArrayOfValues(values [][]*plan_assignment_request.PlanAssignmentRequest) *ListPlanAssignmentRequestsResponse_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListPlanAssignmentRequestsResponse_FieldTerminalPathArrayOfValues)
}

func (s ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequests) WithItemValue(value *plan_assignment_request.PlanAssignmentRequest) *ListPlanAssignmentRequestsResponse_FieldTerminalPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*ListPlanAssignmentRequestsResponse_FieldTerminalPathArrayItemValue)
}
func (ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequests) WithSubPath(subPath plan_assignment_request.PlanAssignmentRequest_FieldPath) *ListPlanAssignmentRequestsResponse_FieldSubPath {
	return &ListPlanAssignmentRequestsResponse_FieldSubPath{selector: ListPlanAssignmentRequestsResponse_FieldPathSelectorPlanAssignmentRequests, subPath: subPath}
}

func (s ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequests) WithSubValue(subPathValue plan_assignment_request.PlanAssignmentRequest_FieldPathValue) *ListPlanAssignmentRequestsResponse_FieldSubPathValue {
	return &ListPlanAssignmentRequestsResponse_FieldSubPathValue{ListPlanAssignmentRequestsResponse_FieldPath: s.WithSubPath(subPathValue), subPathValue: subPathValue}
}

func (s ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequests) WithSubArrayOfValues(subPathArrayOfValues plan_assignment_request.PlanAssignmentRequest_FieldPathArrayOfValues) *ListPlanAssignmentRequestsResponse_FieldSubPathArrayOfValues {
	return &ListPlanAssignmentRequestsResponse_FieldSubPathArrayOfValues{ListPlanAssignmentRequestsResponse_FieldPath: s.WithSubPath(subPathArrayOfValues), subPathArrayOfValues: subPathArrayOfValues}
}

func (s ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequests) WithSubArrayItemValue(subPathArrayItemValue plan_assignment_request.PlanAssignmentRequest_FieldPathArrayItemValue) *ListPlanAssignmentRequestsResponse_FieldSubPathArrayItemValue {
	return &ListPlanAssignmentRequestsResponse_FieldSubPathArrayItemValue{ListPlanAssignmentRequestsResponse_FieldPath: s.WithSubPath(subPathArrayItemValue), subPathItemValue: subPathArrayItemValue}
}

func (ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequests) Name() ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsName {
	return ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsName{}
}

func (ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequests) Request() ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsRequest {
	return ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsRequest{}
}

func (ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequests) Service() ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsService {
	return ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsService{}
}

func (ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequests) Approver() ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsApprover {
	return ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsApprover{}
}

func (ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequests) Status() ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsStatus {
	return ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsStatus{}
}

func (ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequests) Metadata() ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsMetadata {
	return ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsMetadata{}
}

type ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsName struct{}

func (ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsName) FieldPath() *ListPlanAssignmentRequestsResponse_FieldSubPath {
	return &ListPlanAssignmentRequestsResponse_FieldSubPath{
		selector: ListPlanAssignmentRequestsResponse_FieldPathSelectorPlanAssignmentRequests,
		subPath:  plan_assignment_request.NewPlanAssignmentRequestFieldPathBuilder().Name().FieldPath(),
	}
}

func (s ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsName) WithValue(value *plan_assignment_request.Name) *ListPlanAssignmentRequestsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListPlanAssignmentRequestsResponse_FieldSubPathValue)
}

func (s ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsName) WithArrayOfValues(values []*plan_assignment_request.Name) *ListPlanAssignmentRequestsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListPlanAssignmentRequestsResponse_FieldSubPathArrayOfValues)
}

type ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsRequest struct{}

func (ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsRequest) FieldPath() *ListPlanAssignmentRequestsResponse_FieldSubPath {
	return &ListPlanAssignmentRequestsResponse_FieldSubPath{
		selector: ListPlanAssignmentRequestsResponse_FieldPathSelectorPlanAssignmentRequests,
		subPath:  plan_assignment_request.NewPlanAssignmentRequestFieldPathBuilder().Request().FieldPath(),
	}
}

func (s ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsRequest) WithValue(value *plan_assignment_request.PlanAssignmentRequest_Request) *ListPlanAssignmentRequestsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListPlanAssignmentRequestsResponse_FieldSubPathValue)
}

func (s ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsRequest) WithArrayOfValues(values []*plan_assignment_request.PlanAssignmentRequest_Request) *ListPlanAssignmentRequestsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListPlanAssignmentRequestsResponse_FieldSubPathArrayOfValues)
}

func (ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsRequest) Assign() ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsRequestAssign {
	return ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsRequestAssign{}
}

func (ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsRequest) Extend() ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsRequestExtend {
	return ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsRequestExtend{}
}

func (ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsRequest) Redistribute() ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsRequestRedistribute {
	return ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsRequestRedistribute{}
}

func (ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsRequest) Unassign() ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsRequestUnassign {
	return ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsRequestUnassign{}
}

type ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsRequestAssign struct{}

func (ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsRequestAssign) FieldPath() *ListPlanAssignmentRequestsResponse_FieldSubPath {
	return &ListPlanAssignmentRequestsResponse_FieldSubPath{
		selector: ListPlanAssignmentRequestsResponse_FieldPathSelectorPlanAssignmentRequests,
		subPath:  plan_assignment_request.NewPlanAssignmentRequestFieldPathBuilder().Request().Assign().FieldPath(),
	}
}

func (s ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsRequestAssign) WithValue(value *plan_assignment_request.PlanAssignmentRequest_Request_Assign) *ListPlanAssignmentRequestsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListPlanAssignmentRequestsResponse_FieldSubPathValue)
}

func (s ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsRequestAssign) WithArrayOfValues(values []*plan_assignment_request.PlanAssignmentRequest_Request_Assign) *ListPlanAssignmentRequestsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListPlanAssignmentRequestsResponse_FieldSubPathArrayOfValues)
}

func (ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsRequestAssign) Plan() ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsRequestAssignPlan {
	return ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsRequestAssignPlan{}
}

func (ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsRequestAssign) Extensions() ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsRequestAssignExtensions {
	return ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsRequestAssignExtensions{}
}

func (ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsRequestAssign) RegionalDistributions() ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsRequestAssignRegionalDistributions {
	return ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsRequestAssignRegionalDistributions{}
}

type ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsRequestAssignPlan struct{}

func (ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsRequestAssignPlan) FieldPath() *ListPlanAssignmentRequestsResponse_FieldSubPath {
	return &ListPlanAssignmentRequestsResponse_FieldSubPath{
		selector: ListPlanAssignmentRequestsResponse_FieldPathSelectorPlanAssignmentRequests,
		subPath:  plan_assignment_request.NewPlanAssignmentRequestFieldPathBuilder().Request().Assign().Plan().FieldPath(),
	}
}

func (s ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsRequestAssignPlan) WithValue(value *plan.Reference) *ListPlanAssignmentRequestsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListPlanAssignmentRequestsResponse_FieldSubPathValue)
}

func (s ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsRequestAssignPlan) WithArrayOfValues(values []*plan.Reference) *ListPlanAssignmentRequestsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListPlanAssignmentRequestsResponse_FieldSubPathArrayOfValues)
}

type ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsRequestAssignExtensions struct{}

func (ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsRequestAssignExtensions) FieldPath() *ListPlanAssignmentRequestsResponse_FieldSubPath {
	return &ListPlanAssignmentRequestsResponse_FieldSubPath{
		selector: ListPlanAssignmentRequestsResponse_FieldPathSelectorPlanAssignmentRequests,
		subPath:  plan_assignment_request.NewPlanAssignmentRequestFieldPathBuilder().Request().Assign().Extensions().FieldPath(),
	}
}

func (s ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsRequestAssignExtensions) WithValue(value []*common.Allowance) *ListPlanAssignmentRequestsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListPlanAssignmentRequestsResponse_FieldSubPathValue)
}

func (s ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsRequestAssignExtensions) WithArrayOfValues(values [][]*common.Allowance) *ListPlanAssignmentRequestsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListPlanAssignmentRequestsResponse_FieldSubPathArrayOfValues)
}

func (s ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsRequestAssignExtensions) WithItemValue(value *common.Allowance) *ListPlanAssignmentRequestsResponse_FieldSubPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*ListPlanAssignmentRequestsResponse_FieldSubPathArrayItemValue)
}

func (ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsRequestAssignExtensions) Resource() ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsRequestAssignExtensionsResource {
	return ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsRequestAssignExtensionsResource{}
}

func (ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsRequestAssignExtensions) Value() ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsRequestAssignExtensionsValue {
	return ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsRequestAssignExtensionsValue{}
}

type ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsRequestAssignExtensionsResource struct{}

func (ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsRequestAssignExtensionsResource) FieldPath() *ListPlanAssignmentRequestsResponse_FieldSubPath {
	return &ListPlanAssignmentRequestsResponse_FieldSubPath{
		selector: ListPlanAssignmentRequestsResponse_FieldPathSelectorPlanAssignmentRequests,
		subPath:  plan_assignment_request.NewPlanAssignmentRequestFieldPathBuilder().Request().Assign().Extensions().Resource().FieldPath(),
	}
}

func (s ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsRequestAssignExtensionsResource) WithValue(value *meta_resource.Reference) *ListPlanAssignmentRequestsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListPlanAssignmentRequestsResponse_FieldSubPathValue)
}

func (s ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsRequestAssignExtensionsResource) WithArrayOfValues(values []*meta_resource.Reference) *ListPlanAssignmentRequestsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListPlanAssignmentRequestsResponse_FieldSubPathArrayOfValues)
}

type ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsRequestAssignExtensionsValue struct{}

func (ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsRequestAssignExtensionsValue) FieldPath() *ListPlanAssignmentRequestsResponse_FieldSubPath {
	return &ListPlanAssignmentRequestsResponse_FieldSubPath{
		selector: ListPlanAssignmentRequestsResponse_FieldPathSelectorPlanAssignmentRequests,
		subPath:  plan_assignment_request.NewPlanAssignmentRequestFieldPathBuilder().Request().Assign().Extensions().Value().FieldPath(),
	}
}

func (s ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsRequestAssignExtensionsValue) WithValue(value int64) *ListPlanAssignmentRequestsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListPlanAssignmentRequestsResponse_FieldSubPathValue)
}

func (s ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsRequestAssignExtensionsValue) WithArrayOfValues(values []int64) *ListPlanAssignmentRequestsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListPlanAssignmentRequestsResponse_FieldSubPathArrayOfValues)
}

type ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsRequestAssignRegionalDistributions struct{}

func (ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsRequestAssignRegionalDistributions) FieldPath() *ListPlanAssignmentRequestsResponse_FieldSubPath {
	return &ListPlanAssignmentRequestsResponse_FieldSubPath{
		selector: ListPlanAssignmentRequestsResponse_FieldPathSelectorPlanAssignmentRequests,
		subPath:  plan_assignment_request.NewPlanAssignmentRequestFieldPathBuilder().Request().Assign().RegionalDistributions().FieldPath(),
	}
}

func (s ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsRequestAssignRegionalDistributions) WithValue(value []*common.RegionalDistribution) *ListPlanAssignmentRequestsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListPlanAssignmentRequestsResponse_FieldSubPathValue)
}

func (s ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsRequestAssignRegionalDistributions) WithArrayOfValues(values [][]*common.RegionalDistribution) *ListPlanAssignmentRequestsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListPlanAssignmentRequestsResponse_FieldSubPathArrayOfValues)
}

func (s ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsRequestAssignRegionalDistributions) WithItemValue(value *common.RegionalDistribution) *ListPlanAssignmentRequestsResponse_FieldSubPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*ListPlanAssignmentRequestsResponse_FieldSubPathArrayItemValue)
}

func (ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsRequestAssignRegionalDistributions) Resource() ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsRequestAssignRegionalDistributionsResource {
	return ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsRequestAssignRegionalDistributionsResource{}
}

func (ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsRequestAssignRegionalDistributions) LimitsByRegion() ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsRequestAssignRegionalDistributionsLimitsByRegion {
	return ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsRequestAssignRegionalDistributionsLimitsByRegion{}
}

type ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsRequestAssignRegionalDistributionsResource struct{}

func (ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsRequestAssignRegionalDistributionsResource) FieldPath() *ListPlanAssignmentRequestsResponse_FieldSubPath {
	return &ListPlanAssignmentRequestsResponse_FieldSubPath{
		selector: ListPlanAssignmentRequestsResponse_FieldPathSelectorPlanAssignmentRequests,
		subPath:  plan_assignment_request.NewPlanAssignmentRequestFieldPathBuilder().Request().Assign().RegionalDistributions().Resource().FieldPath(),
	}
}

func (s ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsRequestAssignRegionalDistributionsResource) WithValue(value *meta_resource.Reference) *ListPlanAssignmentRequestsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListPlanAssignmentRequestsResponse_FieldSubPathValue)
}

func (s ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsRequestAssignRegionalDistributionsResource) WithArrayOfValues(values []*meta_resource.Reference) *ListPlanAssignmentRequestsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListPlanAssignmentRequestsResponse_FieldSubPathArrayOfValues)
}

type ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsRequestAssignRegionalDistributionsLimitsByRegion struct{}

func (ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsRequestAssignRegionalDistributionsLimitsByRegion) FieldPath() *ListPlanAssignmentRequestsResponse_FieldSubPath {
	return &ListPlanAssignmentRequestsResponse_FieldSubPath{
		selector: ListPlanAssignmentRequestsResponse_FieldPathSelectorPlanAssignmentRequests,
		subPath:  plan_assignment_request.NewPlanAssignmentRequestFieldPathBuilder().Request().Assign().RegionalDistributions().LimitsByRegion().FieldPath(),
	}
}

func (s ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsRequestAssignRegionalDistributionsLimitsByRegion) WithValue(value map[string]int64) *ListPlanAssignmentRequestsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListPlanAssignmentRequestsResponse_FieldSubPathValue)
}

func (s ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsRequestAssignRegionalDistributionsLimitsByRegion) WithArrayOfValues(values []map[string]int64) *ListPlanAssignmentRequestsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListPlanAssignmentRequestsResponse_FieldSubPathArrayOfValues)
}

func (ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsRequestAssignRegionalDistributionsLimitsByRegion) WithKey(key string) ListPlanAssignmentRequestsResponseMapPathSelectorPlanAssignmentRequestsRequestAssignRegionalDistributionsLimitsByRegion {
	return ListPlanAssignmentRequestsResponseMapPathSelectorPlanAssignmentRequestsRequestAssignRegionalDistributionsLimitsByRegion{key: key}
}

type ListPlanAssignmentRequestsResponseMapPathSelectorPlanAssignmentRequestsRequestAssignRegionalDistributionsLimitsByRegion struct {
	key string
}

func (s ListPlanAssignmentRequestsResponseMapPathSelectorPlanAssignmentRequestsRequestAssignRegionalDistributionsLimitsByRegion) FieldPath() *ListPlanAssignmentRequestsResponse_FieldSubPath {
	return &ListPlanAssignmentRequestsResponse_FieldSubPath{
		selector: ListPlanAssignmentRequestsResponse_FieldPathSelectorPlanAssignmentRequests,
		subPath:  plan_assignment_request.NewPlanAssignmentRequestFieldPathBuilder().Request().Assign().RegionalDistributions().LimitsByRegion().WithKey(s.key).FieldPath(),
	}
}

func (s ListPlanAssignmentRequestsResponseMapPathSelectorPlanAssignmentRequestsRequestAssignRegionalDistributionsLimitsByRegion) WithValue(value int64) *ListPlanAssignmentRequestsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListPlanAssignmentRequestsResponse_FieldSubPathValue)
}

func (s ListPlanAssignmentRequestsResponseMapPathSelectorPlanAssignmentRequestsRequestAssignRegionalDistributionsLimitsByRegion) WithArrayOfValues(values []int64) *ListPlanAssignmentRequestsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListPlanAssignmentRequestsResponse_FieldSubPathArrayOfValues)
}

type ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsRequestExtend struct{}

func (ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsRequestExtend) FieldPath() *ListPlanAssignmentRequestsResponse_FieldSubPath {
	return &ListPlanAssignmentRequestsResponse_FieldSubPath{
		selector: ListPlanAssignmentRequestsResponse_FieldPathSelectorPlanAssignmentRequests,
		subPath:  plan_assignment_request.NewPlanAssignmentRequestFieldPathBuilder().Request().Extend().FieldPath(),
	}
}

func (s ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsRequestExtend) WithValue(value *plan_assignment_request.PlanAssignmentRequest_Request_Extend) *ListPlanAssignmentRequestsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListPlanAssignmentRequestsResponse_FieldSubPathValue)
}

func (s ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsRequestExtend) WithArrayOfValues(values []*plan_assignment_request.PlanAssignmentRequest_Request_Extend) *ListPlanAssignmentRequestsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListPlanAssignmentRequestsResponse_FieldSubPathArrayOfValues)
}

func (ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsRequestExtend) Assignment() ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsRequestExtendAssignment {
	return ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsRequestExtendAssignment{}
}

func (ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsRequestExtend) Additions() ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsRequestExtendAdditions {
	return ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsRequestExtendAdditions{}
}

func (ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsRequestExtend) RegionalDistributions() ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsRequestExtendRegionalDistributions {
	return ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsRequestExtendRegionalDistributions{}
}

type ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsRequestExtendAssignment struct{}

func (ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsRequestExtendAssignment) FieldPath() *ListPlanAssignmentRequestsResponse_FieldSubPath {
	return &ListPlanAssignmentRequestsResponse_FieldSubPath{
		selector: ListPlanAssignmentRequestsResponse_FieldPathSelectorPlanAssignmentRequests,
		subPath:  plan_assignment_request.NewPlanAssignmentRequestFieldPathBuilder().Request().Extend().Assignment().FieldPath(),
	}
}

func (s ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsRequestExtendAssignment) WithValue(value *plan_assignment.Reference) *ListPlanAssignmentRequestsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListPlanAssignmentRequestsResponse_FieldSubPathValue)
}

func (s ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsRequestExtendAssignment) WithArrayOfValues(values []*plan_assignment.Reference) *ListPlanAssignmentRequestsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListPlanAssignmentRequestsResponse_FieldSubPathArrayOfValues)
}

type ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsRequestExtendAdditions struct{}

func (ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsRequestExtendAdditions) FieldPath() *ListPlanAssignmentRequestsResponse_FieldSubPath {
	return &ListPlanAssignmentRequestsResponse_FieldSubPath{
		selector: ListPlanAssignmentRequestsResponse_FieldPathSelectorPlanAssignmentRequests,
		subPath:  plan_assignment_request.NewPlanAssignmentRequestFieldPathBuilder().Request().Extend().Additions().FieldPath(),
	}
}

func (s ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsRequestExtendAdditions) WithValue(value []*common.Allowance) *ListPlanAssignmentRequestsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListPlanAssignmentRequestsResponse_FieldSubPathValue)
}

func (s ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsRequestExtendAdditions) WithArrayOfValues(values [][]*common.Allowance) *ListPlanAssignmentRequestsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListPlanAssignmentRequestsResponse_FieldSubPathArrayOfValues)
}

func (s ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsRequestExtendAdditions) WithItemValue(value *common.Allowance) *ListPlanAssignmentRequestsResponse_FieldSubPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*ListPlanAssignmentRequestsResponse_FieldSubPathArrayItemValue)
}

func (ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsRequestExtendAdditions) Resource() ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsRequestExtendAdditionsResource {
	return ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsRequestExtendAdditionsResource{}
}

func (ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsRequestExtendAdditions) Value() ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsRequestExtendAdditionsValue {
	return ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsRequestExtendAdditionsValue{}
}

type ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsRequestExtendAdditionsResource struct{}

func (ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsRequestExtendAdditionsResource) FieldPath() *ListPlanAssignmentRequestsResponse_FieldSubPath {
	return &ListPlanAssignmentRequestsResponse_FieldSubPath{
		selector: ListPlanAssignmentRequestsResponse_FieldPathSelectorPlanAssignmentRequests,
		subPath:  plan_assignment_request.NewPlanAssignmentRequestFieldPathBuilder().Request().Extend().Additions().Resource().FieldPath(),
	}
}

func (s ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsRequestExtendAdditionsResource) WithValue(value *meta_resource.Reference) *ListPlanAssignmentRequestsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListPlanAssignmentRequestsResponse_FieldSubPathValue)
}

func (s ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsRequestExtendAdditionsResource) WithArrayOfValues(values []*meta_resource.Reference) *ListPlanAssignmentRequestsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListPlanAssignmentRequestsResponse_FieldSubPathArrayOfValues)
}

type ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsRequestExtendAdditionsValue struct{}

func (ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsRequestExtendAdditionsValue) FieldPath() *ListPlanAssignmentRequestsResponse_FieldSubPath {
	return &ListPlanAssignmentRequestsResponse_FieldSubPath{
		selector: ListPlanAssignmentRequestsResponse_FieldPathSelectorPlanAssignmentRequests,
		subPath:  plan_assignment_request.NewPlanAssignmentRequestFieldPathBuilder().Request().Extend().Additions().Value().FieldPath(),
	}
}

func (s ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsRequestExtendAdditionsValue) WithValue(value int64) *ListPlanAssignmentRequestsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListPlanAssignmentRequestsResponse_FieldSubPathValue)
}

func (s ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsRequestExtendAdditionsValue) WithArrayOfValues(values []int64) *ListPlanAssignmentRequestsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListPlanAssignmentRequestsResponse_FieldSubPathArrayOfValues)
}

type ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsRequestExtendRegionalDistributions struct{}

func (ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsRequestExtendRegionalDistributions) FieldPath() *ListPlanAssignmentRequestsResponse_FieldSubPath {
	return &ListPlanAssignmentRequestsResponse_FieldSubPath{
		selector: ListPlanAssignmentRequestsResponse_FieldPathSelectorPlanAssignmentRequests,
		subPath:  plan_assignment_request.NewPlanAssignmentRequestFieldPathBuilder().Request().Extend().RegionalDistributions().FieldPath(),
	}
}

func (s ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsRequestExtendRegionalDistributions) WithValue(value []*common.RegionalDistribution) *ListPlanAssignmentRequestsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListPlanAssignmentRequestsResponse_FieldSubPathValue)
}

func (s ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsRequestExtendRegionalDistributions) WithArrayOfValues(values [][]*common.RegionalDistribution) *ListPlanAssignmentRequestsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListPlanAssignmentRequestsResponse_FieldSubPathArrayOfValues)
}

func (s ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsRequestExtendRegionalDistributions) WithItemValue(value *common.RegionalDistribution) *ListPlanAssignmentRequestsResponse_FieldSubPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*ListPlanAssignmentRequestsResponse_FieldSubPathArrayItemValue)
}

func (ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsRequestExtendRegionalDistributions) Resource() ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsRequestExtendRegionalDistributionsResource {
	return ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsRequestExtendRegionalDistributionsResource{}
}

func (ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsRequestExtendRegionalDistributions) LimitsByRegion() ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsRequestExtendRegionalDistributionsLimitsByRegion {
	return ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsRequestExtendRegionalDistributionsLimitsByRegion{}
}

type ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsRequestExtendRegionalDistributionsResource struct{}

func (ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsRequestExtendRegionalDistributionsResource) FieldPath() *ListPlanAssignmentRequestsResponse_FieldSubPath {
	return &ListPlanAssignmentRequestsResponse_FieldSubPath{
		selector: ListPlanAssignmentRequestsResponse_FieldPathSelectorPlanAssignmentRequests,
		subPath:  plan_assignment_request.NewPlanAssignmentRequestFieldPathBuilder().Request().Extend().RegionalDistributions().Resource().FieldPath(),
	}
}

func (s ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsRequestExtendRegionalDistributionsResource) WithValue(value *meta_resource.Reference) *ListPlanAssignmentRequestsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListPlanAssignmentRequestsResponse_FieldSubPathValue)
}

func (s ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsRequestExtendRegionalDistributionsResource) WithArrayOfValues(values []*meta_resource.Reference) *ListPlanAssignmentRequestsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListPlanAssignmentRequestsResponse_FieldSubPathArrayOfValues)
}

type ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsRequestExtendRegionalDistributionsLimitsByRegion struct{}

func (ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsRequestExtendRegionalDistributionsLimitsByRegion) FieldPath() *ListPlanAssignmentRequestsResponse_FieldSubPath {
	return &ListPlanAssignmentRequestsResponse_FieldSubPath{
		selector: ListPlanAssignmentRequestsResponse_FieldPathSelectorPlanAssignmentRequests,
		subPath:  plan_assignment_request.NewPlanAssignmentRequestFieldPathBuilder().Request().Extend().RegionalDistributions().LimitsByRegion().FieldPath(),
	}
}

func (s ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsRequestExtendRegionalDistributionsLimitsByRegion) WithValue(value map[string]int64) *ListPlanAssignmentRequestsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListPlanAssignmentRequestsResponse_FieldSubPathValue)
}

func (s ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsRequestExtendRegionalDistributionsLimitsByRegion) WithArrayOfValues(values []map[string]int64) *ListPlanAssignmentRequestsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListPlanAssignmentRequestsResponse_FieldSubPathArrayOfValues)
}

func (ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsRequestExtendRegionalDistributionsLimitsByRegion) WithKey(key string) ListPlanAssignmentRequestsResponseMapPathSelectorPlanAssignmentRequestsRequestExtendRegionalDistributionsLimitsByRegion {
	return ListPlanAssignmentRequestsResponseMapPathSelectorPlanAssignmentRequestsRequestExtendRegionalDistributionsLimitsByRegion{key: key}
}

type ListPlanAssignmentRequestsResponseMapPathSelectorPlanAssignmentRequestsRequestExtendRegionalDistributionsLimitsByRegion struct {
	key string
}

func (s ListPlanAssignmentRequestsResponseMapPathSelectorPlanAssignmentRequestsRequestExtendRegionalDistributionsLimitsByRegion) FieldPath() *ListPlanAssignmentRequestsResponse_FieldSubPath {
	return &ListPlanAssignmentRequestsResponse_FieldSubPath{
		selector: ListPlanAssignmentRequestsResponse_FieldPathSelectorPlanAssignmentRequests,
		subPath:  plan_assignment_request.NewPlanAssignmentRequestFieldPathBuilder().Request().Extend().RegionalDistributions().LimitsByRegion().WithKey(s.key).FieldPath(),
	}
}

func (s ListPlanAssignmentRequestsResponseMapPathSelectorPlanAssignmentRequestsRequestExtendRegionalDistributionsLimitsByRegion) WithValue(value int64) *ListPlanAssignmentRequestsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListPlanAssignmentRequestsResponse_FieldSubPathValue)
}

func (s ListPlanAssignmentRequestsResponseMapPathSelectorPlanAssignmentRequestsRequestExtendRegionalDistributionsLimitsByRegion) WithArrayOfValues(values []int64) *ListPlanAssignmentRequestsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListPlanAssignmentRequestsResponse_FieldSubPathArrayOfValues)
}

type ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsRequestRedistribute struct{}

func (ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsRequestRedistribute) FieldPath() *ListPlanAssignmentRequestsResponse_FieldSubPath {
	return &ListPlanAssignmentRequestsResponse_FieldSubPath{
		selector: ListPlanAssignmentRequestsResponse_FieldPathSelectorPlanAssignmentRequests,
		subPath:  plan_assignment_request.NewPlanAssignmentRequestFieldPathBuilder().Request().Redistribute().FieldPath(),
	}
}

func (s ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsRequestRedistribute) WithValue(value *plan_assignment_request.PlanAssignmentRequest_Request_Redistribute) *ListPlanAssignmentRequestsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListPlanAssignmentRequestsResponse_FieldSubPathValue)
}

func (s ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsRequestRedistribute) WithArrayOfValues(values []*plan_assignment_request.PlanAssignmentRequest_Request_Redistribute) *ListPlanAssignmentRequestsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListPlanAssignmentRequestsResponse_FieldSubPathArrayOfValues)
}

func (ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsRequestRedistribute) Assignment() ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsRequestRedistributeAssignment {
	return ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsRequestRedistributeAssignment{}
}

func (ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsRequestRedistribute) RegionalDistributions() ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsRequestRedistributeRegionalDistributions {
	return ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsRequestRedistributeRegionalDistributions{}
}

type ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsRequestRedistributeAssignment struct{}

func (ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsRequestRedistributeAssignment) FieldPath() *ListPlanAssignmentRequestsResponse_FieldSubPath {
	return &ListPlanAssignmentRequestsResponse_FieldSubPath{
		selector: ListPlanAssignmentRequestsResponse_FieldPathSelectorPlanAssignmentRequests,
		subPath:  plan_assignment_request.NewPlanAssignmentRequestFieldPathBuilder().Request().Redistribute().Assignment().FieldPath(),
	}
}

func (s ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsRequestRedistributeAssignment) WithValue(value *plan_assignment.Reference) *ListPlanAssignmentRequestsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListPlanAssignmentRequestsResponse_FieldSubPathValue)
}

func (s ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsRequestRedistributeAssignment) WithArrayOfValues(values []*plan_assignment.Reference) *ListPlanAssignmentRequestsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListPlanAssignmentRequestsResponse_FieldSubPathArrayOfValues)
}

type ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsRequestRedistributeRegionalDistributions struct{}

func (ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsRequestRedistributeRegionalDistributions) FieldPath() *ListPlanAssignmentRequestsResponse_FieldSubPath {
	return &ListPlanAssignmentRequestsResponse_FieldSubPath{
		selector: ListPlanAssignmentRequestsResponse_FieldPathSelectorPlanAssignmentRequests,
		subPath:  plan_assignment_request.NewPlanAssignmentRequestFieldPathBuilder().Request().Redistribute().RegionalDistributions().FieldPath(),
	}
}

func (s ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsRequestRedistributeRegionalDistributions) WithValue(value []*common.RegionalDistribution) *ListPlanAssignmentRequestsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListPlanAssignmentRequestsResponse_FieldSubPathValue)
}

func (s ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsRequestRedistributeRegionalDistributions) WithArrayOfValues(values [][]*common.RegionalDistribution) *ListPlanAssignmentRequestsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListPlanAssignmentRequestsResponse_FieldSubPathArrayOfValues)
}

func (s ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsRequestRedistributeRegionalDistributions) WithItemValue(value *common.RegionalDistribution) *ListPlanAssignmentRequestsResponse_FieldSubPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*ListPlanAssignmentRequestsResponse_FieldSubPathArrayItemValue)
}

func (ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsRequestRedistributeRegionalDistributions) Resource() ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsRequestRedistributeRegionalDistributionsResource {
	return ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsRequestRedistributeRegionalDistributionsResource{}
}

func (ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsRequestRedistributeRegionalDistributions) LimitsByRegion() ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsRequestRedistributeRegionalDistributionsLimitsByRegion {
	return ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsRequestRedistributeRegionalDistributionsLimitsByRegion{}
}

type ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsRequestRedistributeRegionalDistributionsResource struct{}

func (ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsRequestRedistributeRegionalDistributionsResource) FieldPath() *ListPlanAssignmentRequestsResponse_FieldSubPath {
	return &ListPlanAssignmentRequestsResponse_FieldSubPath{
		selector: ListPlanAssignmentRequestsResponse_FieldPathSelectorPlanAssignmentRequests,
		subPath:  plan_assignment_request.NewPlanAssignmentRequestFieldPathBuilder().Request().Redistribute().RegionalDistributions().Resource().FieldPath(),
	}
}

func (s ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsRequestRedistributeRegionalDistributionsResource) WithValue(value *meta_resource.Reference) *ListPlanAssignmentRequestsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListPlanAssignmentRequestsResponse_FieldSubPathValue)
}

func (s ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsRequestRedistributeRegionalDistributionsResource) WithArrayOfValues(values []*meta_resource.Reference) *ListPlanAssignmentRequestsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListPlanAssignmentRequestsResponse_FieldSubPathArrayOfValues)
}

type ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsRequestRedistributeRegionalDistributionsLimitsByRegion struct{}

func (ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsRequestRedistributeRegionalDistributionsLimitsByRegion) FieldPath() *ListPlanAssignmentRequestsResponse_FieldSubPath {
	return &ListPlanAssignmentRequestsResponse_FieldSubPath{
		selector: ListPlanAssignmentRequestsResponse_FieldPathSelectorPlanAssignmentRequests,
		subPath:  plan_assignment_request.NewPlanAssignmentRequestFieldPathBuilder().Request().Redistribute().RegionalDistributions().LimitsByRegion().FieldPath(),
	}
}

func (s ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsRequestRedistributeRegionalDistributionsLimitsByRegion) WithValue(value map[string]int64) *ListPlanAssignmentRequestsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListPlanAssignmentRequestsResponse_FieldSubPathValue)
}

func (s ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsRequestRedistributeRegionalDistributionsLimitsByRegion) WithArrayOfValues(values []map[string]int64) *ListPlanAssignmentRequestsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListPlanAssignmentRequestsResponse_FieldSubPathArrayOfValues)
}

func (ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsRequestRedistributeRegionalDistributionsLimitsByRegion) WithKey(key string) ListPlanAssignmentRequestsResponseMapPathSelectorPlanAssignmentRequestsRequestRedistributeRegionalDistributionsLimitsByRegion {
	return ListPlanAssignmentRequestsResponseMapPathSelectorPlanAssignmentRequestsRequestRedistributeRegionalDistributionsLimitsByRegion{key: key}
}

type ListPlanAssignmentRequestsResponseMapPathSelectorPlanAssignmentRequestsRequestRedistributeRegionalDistributionsLimitsByRegion struct {
	key string
}

func (s ListPlanAssignmentRequestsResponseMapPathSelectorPlanAssignmentRequestsRequestRedistributeRegionalDistributionsLimitsByRegion) FieldPath() *ListPlanAssignmentRequestsResponse_FieldSubPath {
	return &ListPlanAssignmentRequestsResponse_FieldSubPath{
		selector: ListPlanAssignmentRequestsResponse_FieldPathSelectorPlanAssignmentRequests,
		subPath:  plan_assignment_request.NewPlanAssignmentRequestFieldPathBuilder().Request().Redistribute().RegionalDistributions().LimitsByRegion().WithKey(s.key).FieldPath(),
	}
}

func (s ListPlanAssignmentRequestsResponseMapPathSelectorPlanAssignmentRequestsRequestRedistributeRegionalDistributionsLimitsByRegion) WithValue(value int64) *ListPlanAssignmentRequestsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListPlanAssignmentRequestsResponse_FieldSubPathValue)
}

func (s ListPlanAssignmentRequestsResponseMapPathSelectorPlanAssignmentRequestsRequestRedistributeRegionalDistributionsLimitsByRegion) WithArrayOfValues(values []int64) *ListPlanAssignmentRequestsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListPlanAssignmentRequestsResponse_FieldSubPathArrayOfValues)
}

type ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsRequestUnassign struct{}

func (ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsRequestUnassign) FieldPath() *ListPlanAssignmentRequestsResponse_FieldSubPath {
	return &ListPlanAssignmentRequestsResponse_FieldSubPath{
		selector: ListPlanAssignmentRequestsResponse_FieldPathSelectorPlanAssignmentRequests,
		subPath:  plan_assignment_request.NewPlanAssignmentRequestFieldPathBuilder().Request().Unassign().FieldPath(),
	}
}

func (s ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsRequestUnassign) WithValue(value *plan_assignment_request.PlanAssignmentRequest_Request_Unassign) *ListPlanAssignmentRequestsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListPlanAssignmentRequestsResponse_FieldSubPathValue)
}

func (s ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsRequestUnassign) WithArrayOfValues(values []*plan_assignment_request.PlanAssignmentRequest_Request_Unassign) *ListPlanAssignmentRequestsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListPlanAssignmentRequestsResponse_FieldSubPathArrayOfValues)
}

func (ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsRequestUnassign) Assignment() ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsRequestUnassignAssignment {
	return ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsRequestUnassignAssignment{}
}

type ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsRequestUnassignAssignment struct{}

func (ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsRequestUnassignAssignment) FieldPath() *ListPlanAssignmentRequestsResponse_FieldSubPath {
	return &ListPlanAssignmentRequestsResponse_FieldSubPath{
		selector: ListPlanAssignmentRequestsResponse_FieldPathSelectorPlanAssignmentRequests,
		subPath:  plan_assignment_request.NewPlanAssignmentRequestFieldPathBuilder().Request().Unassign().Assignment().FieldPath(),
	}
}

func (s ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsRequestUnassignAssignment) WithValue(value *plan_assignment.Reference) *ListPlanAssignmentRequestsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListPlanAssignmentRequestsResponse_FieldSubPathValue)
}

func (s ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsRequestUnassignAssignment) WithArrayOfValues(values []*plan_assignment.Reference) *ListPlanAssignmentRequestsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListPlanAssignmentRequestsResponse_FieldSubPathArrayOfValues)
}

type ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsService struct{}

func (ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsService) FieldPath() *ListPlanAssignmentRequestsResponse_FieldSubPath {
	return &ListPlanAssignmentRequestsResponse_FieldSubPath{
		selector: ListPlanAssignmentRequestsResponse_FieldPathSelectorPlanAssignmentRequests,
		subPath:  plan_assignment_request.NewPlanAssignmentRequestFieldPathBuilder().Service().FieldPath(),
	}
}

func (s ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsService) WithValue(value *meta_service.Reference) *ListPlanAssignmentRequestsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListPlanAssignmentRequestsResponse_FieldSubPathValue)
}

func (s ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsService) WithArrayOfValues(values []*meta_service.Reference) *ListPlanAssignmentRequestsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListPlanAssignmentRequestsResponse_FieldSubPathArrayOfValues)
}

type ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsApprover struct{}

func (ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsApprover) FieldPath() *ListPlanAssignmentRequestsResponse_FieldSubPath {
	return &ListPlanAssignmentRequestsResponse_FieldSubPath{
		selector: ListPlanAssignmentRequestsResponse_FieldPathSelectorPlanAssignmentRequests,
		subPath:  plan_assignment_request.NewPlanAssignmentRequestFieldPathBuilder().Approver().FieldPath(),
	}
}

func (s ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsApprover) WithValue(value *iam_organization.Reference) *ListPlanAssignmentRequestsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListPlanAssignmentRequestsResponse_FieldSubPathValue)
}

func (s ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsApprover) WithArrayOfValues(values []*iam_organization.Reference) *ListPlanAssignmentRequestsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListPlanAssignmentRequestsResponse_FieldSubPathArrayOfValues)
}

type ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsStatus struct{}

func (ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsStatus) FieldPath() *ListPlanAssignmentRequestsResponse_FieldSubPath {
	return &ListPlanAssignmentRequestsResponse_FieldSubPath{
		selector: ListPlanAssignmentRequestsResponse_FieldPathSelectorPlanAssignmentRequests,
		subPath:  plan_assignment_request.NewPlanAssignmentRequestFieldPathBuilder().Status().FieldPath(),
	}
}

func (s ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsStatus) WithValue(value *plan_assignment_request.PlanAssignmentRequest_Status) *ListPlanAssignmentRequestsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListPlanAssignmentRequestsResponse_FieldSubPathValue)
}

func (s ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsStatus) WithArrayOfValues(values []*plan_assignment_request.PlanAssignmentRequest_Status) *ListPlanAssignmentRequestsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListPlanAssignmentRequestsResponse_FieldSubPathArrayOfValues)
}

func (ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsStatus) Conclusion() ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsStatusConclusion {
	return ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsStatusConclusion{}
}

func (ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsStatus) Reason() ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsStatusReason {
	return ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsStatusReason{}
}

type ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsStatusConclusion struct{}

func (ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsStatusConclusion) FieldPath() *ListPlanAssignmentRequestsResponse_FieldSubPath {
	return &ListPlanAssignmentRequestsResponse_FieldSubPath{
		selector: ListPlanAssignmentRequestsResponse_FieldPathSelectorPlanAssignmentRequests,
		subPath:  plan_assignment_request.NewPlanAssignmentRequestFieldPathBuilder().Status().Conclusion().FieldPath(),
	}
}

func (s ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsStatusConclusion) WithValue(value plan_assignment_request.PlanAssignmentRequest_Status_Conclusion) *ListPlanAssignmentRequestsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListPlanAssignmentRequestsResponse_FieldSubPathValue)
}

func (s ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsStatusConclusion) WithArrayOfValues(values []plan_assignment_request.PlanAssignmentRequest_Status_Conclusion) *ListPlanAssignmentRequestsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListPlanAssignmentRequestsResponse_FieldSubPathArrayOfValues)
}

type ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsStatusReason struct{}

func (ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsStatusReason) FieldPath() *ListPlanAssignmentRequestsResponse_FieldSubPath {
	return &ListPlanAssignmentRequestsResponse_FieldSubPath{
		selector: ListPlanAssignmentRequestsResponse_FieldPathSelectorPlanAssignmentRequests,
		subPath:  plan_assignment_request.NewPlanAssignmentRequestFieldPathBuilder().Status().Reason().FieldPath(),
	}
}

func (s ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsStatusReason) WithValue(value string) *ListPlanAssignmentRequestsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListPlanAssignmentRequestsResponse_FieldSubPathValue)
}

func (s ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsStatusReason) WithArrayOfValues(values []string) *ListPlanAssignmentRequestsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListPlanAssignmentRequestsResponse_FieldSubPathArrayOfValues)
}

type ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsMetadata struct{}

func (ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsMetadata) FieldPath() *ListPlanAssignmentRequestsResponse_FieldSubPath {
	return &ListPlanAssignmentRequestsResponse_FieldSubPath{
		selector: ListPlanAssignmentRequestsResponse_FieldPathSelectorPlanAssignmentRequests,
		subPath:  plan_assignment_request.NewPlanAssignmentRequestFieldPathBuilder().Metadata().FieldPath(),
	}
}

func (s ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsMetadata) WithValue(value *ntt_meta.Meta) *ListPlanAssignmentRequestsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListPlanAssignmentRequestsResponse_FieldSubPathValue)
}

func (s ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsMetadata) WithArrayOfValues(values []*ntt_meta.Meta) *ListPlanAssignmentRequestsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListPlanAssignmentRequestsResponse_FieldSubPathArrayOfValues)
}

func (ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsMetadata) CreateTime() ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsMetadataCreateTime {
	return ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsMetadataCreateTime{}
}

func (ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsMetadata) UpdateTime() ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsMetadataUpdateTime {
	return ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsMetadataUpdateTime{}
}

func (ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsMetadata) DeleteTime() ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsMetadataDeleteTime {
	return ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsMetadataDeleteTime{}
}

func (ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsMetadata) Uuid() ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsMetadataUuid {
	return ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsMetadataUuid{}
}

func (ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsMetadata) Tags() ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsMetadataTags {
	return ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsMetadataTags{}
}

func (ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsMetadata) Labels() ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsMetadataLabels {
	return ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsMetadataLabels{}
}

func (ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsMetadata) Annotations() ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsMetadataAnnotations {
	return ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsMetadataAnnotations{}
}

func (ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsMetadata) Generation() ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsMetadataGeneration {
	return ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsMetadataGeneration{}
}

func (ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsMetadata) ResourceVersion() ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsMetadataResourceVersion {
	return ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsMetadataResourceVersion{}
}

func (ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsMetadata) OwnerReferences() ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsMetadataOwnerReferences {
	return ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsMetadataOwnerReferences{}
}

func (ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsMetadata) Shards() ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsMetadataShards {
	return ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsMetadataShards{}
}

func (ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsMetadata) Syncing() ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsMetadataSyncing {
	return ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsMetadataSyncing{}
}

func (ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsMetadata) Lifecycle() ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsMetadataLifecycle {
	return ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsMetadataLifecycle{}
}

type ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsMetadataCreateTime struct{}

func (ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsMetadataCreateTime) FieldPath() *ListPlanAssignmentRequestsResponse_FieldSubPath {
	return &ListPlanAssignmentRequestsResponse_FieldSubPath{
		selector: ListPlanAssignmentRequestsResponse_FieldPathSelectorPlanAssignmentRequests,
		subPath:  plan_assignment_request.NewPlanAssignmentRequestFieldPathBuilder().Metadata().CreateTime().FieldPath(),
	}
}

func (s ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsMetadataCreateTime) WithValue(value *timestamp.Timestamp) *ListPlanAssignmentRequestsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListPlanAssignmentRequestsResponse_FieldSubPathValue)
}

func (s ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsMetadataCreateTime) WithArrayOfValues(values []*timestamp.Timestamp) *ListPlanAssignmentRequestsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListPlanAssignmentRequestsResponse_FieldSubPathArrayOfValues)
}

type ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsMetadataUpdateTime struct{}

func (ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsMetadataUpdateTime) FieldPath() *ListPlanAssignmentRequestsResponse_FieldSubPath {
	return &ListPlanAssignmentRequestsResponse_FieldSubPath{
		selector: ListPlanAssignmentRequestsResponse_FieldPathSelectorPlanAssignmentRequests,
		subPath:  plan_assignment_request.NewPlanAssignmentRequestFieldPathBuilder().Metadata().UpdateTime().FieldPath(),
	}
}

func (s ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsMetadataUpdateTime) WithValue(value *timestamp.Timestamp) *ListPlanAssignmentRequestsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListPlanAssignmentRequestsResponse_FieldSubPathValue)
}

func (s ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsMetadataUpdateTime) WithArrayOfValues(values []*timestamp.Timestamp) *ListPlanAssignmentRequestsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListPlanAssignmentRequestsResponse_FieldSubPathArrayOfValues)
}

type ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsMetadataDeleteTime struct{}

func (ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsMetadataDeleteTime) FieldPath() *ListPlanAssignmentRequestsResponse_FieldSubPath {
	return &ListPlanAssignmentRequestsResponse_FieldSubPath{
		selector: ListPlanAssignmentRequestsResponse_FieldPathSelectorPlanAssignmentRequests,
		subPath:  plan_assignment_request.NewPlanAssignmentRequestFieldPathBuilder().Metadata().DeleteTime().FieldPath(),
	}
}

func (s ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsMetadataDeleteTime) WithValue(value *timestamp.Timestamp) *ListPlanAssignmentRequestsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListPlanAssignmentRequestsResponse_FieldSubPathValue)
}

func (s ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsMetadataDeleteTime) WithArrayOfValues(values []*timestamp.Timestamp) *ListPlanAssignmentRequestsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListPlanAssignmentRequestsResponse_FieldSubPathArrayOfValues)
}

type ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsMetadataUuid struct{}

func (ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsMetadataUuid) FieldPath() *ListPlanAssignmentRequestsResponse_FieldSubPath {
	return &ListPlanAssignmentRequestsResponse_FieldSubPath{
		selector: ListPlanAssignmentRequestsResponse_FieldPathSelectorPlanAssignmentRequests,
		subPath:  plan_assignment_request.NewPlanAssignmentRequestFieldPathBuilder().Metadata().Uuid().FieldPath(),
	}
}

func (s ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsMetadataUuid) WithValue(value string) *ListPlanAssignmentRequestsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListPlanAssignmentRequestsResponse_FieldSubPathValue)
}

func (s ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsMetadataUuid) WithArrayOfValues(values []string) *ListPlanAssignmentRequestsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListPlanAssignmentRequestsResponse_FieldSubPathArrayOfValues)
}

type ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsMetadataTags struct{}

func (ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsMetadataTags) FieldPath() *ListPlanAssignmentRequestsResponse_FieldSubPath {
	return &ListPlanAssignmentRequestsResponse_FieldSubPath{
		selector: ListPlanAssignmentRequestsResponse_FieldPathSelectorPlanAssignmentRequests,
		subPath:  plan_assignment_request.NewPlanAssignmentRequestFieldPathBuilder().Metadata().Tags().FieldPath(),
	}
}

func (s ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsMetadataTags) WithValue(value []string) *ListPlanAssignmentRequestsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListPlanAssignmentRequestsResponse_FieldSubPathValue)
}

func (s ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsMetadataTags) WithArrayOfValues(values [][]string) *ListPlanAssignmentRequestsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListPlanAssignmentRequestsResponse_FieldSubPathArrayOfValues)
}

func (s ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsMetadataTags) WithItemValue(value string) *ListPlanAssignmentRequestsResponse_FieldSubPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*ListPlanAssignmentRequestsResponse_FieldSubPathArrayItemValue)
}

type ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsMetadataLabels struct{}

func (ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsMetadataLabels) FieldPath() *ListPlanAssignmentRequestsResponse_FieldSubPath {
	return &ListPlanAssignmentRequestsResponse_FieldSubPath{
		selector: ListPlanAssignmentRequestsResponse_FieldPathSelectorPlanAssignmentRequests,
		subPath:  plan_assignment_request.NewPlanAssignmentRequestFieldPathBuilder().Metadata().Labels().FieldPath(),
	}
}

func (s ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsMetadataLabels) WithValue(value map[string]string) *ListPlanAssignmentRequestsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListPlanAssignmentRequestsResponse_FieldSubPathValue)
}

func (s ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsMetadataLabels) WithArrayOfValues(values []map[string]string) *ListPlanAssignmentRequestsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListPlanAssignmentRequestsResponse_FieldSubPathArrayOfValues)
}

func (ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsMetadataLabels) WithKey(key string) ListPlanAssignmentRequestsResponseMapPathSelectorPlanAssignmentRequestsMetadataLabels {
	return ListPlanAssignmentRequestsResponseMapPathSelectorPlanAssignmentRequestsMetadataLabels{key: key}
}

type ListPlanAssignmentRequestsResponseMapPathSelectorPlanAssignmentRequestsMetadataLabels struct {
	key string
}

func (s ListPlanAssignmentRequestsResponseMapPathSelectorPlanAssignmentRequestsMetadataLabels) FieldPath() *ListPlanAssignmentRequestsResponse_FieldSubPath {
	return &ListPlanAssignmentRequestsResponse_FieldSubPath{
		selector: ListPlanAssignmentRequestsResponse_FieldPathSelectorPlanAssignmentRequests,
		subPath:  plan_assignment_request.NewPlanAssignmentRequestFieldPathBuilder().Metadata().Labels().WithKey(s.key).FieldPath(),
	}
}

func (s ListPlanAssignmentRequestsResponseMapPathSelectorPlanAssignmentRequestsMetadataLabels) WithValue(value string) *ListPlanAssignmentRequestsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListPlanAssignmentRequestsResponse_FieldSubPathValue)
}

func (s ListPlanAssignmentRequestsResponseMapPathSelectorPlanAssignmentRequestsMetadataLabels) WithArrayOfValues(values []string) *ListPlanAssignmentRequestsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListPlanAssignmentRequestsResponse_FieldSubPathArrayOfValues)
}

type ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsMetadataAnnotations struct{}

func (ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsMetadataAnnotations) FieldPath() *ListPlanAssignmentRequestsResponse_FieldSubPath {
	return &ListPlanAssignmentRequestsResponse_FieldSubPath{
		selector: ListPlanAssignmentRequestsResponse_FieldPathSelectorPlanAssignmentRequests,
		subPath:  plan_assignment_request.NewPlanAssignmentRequestFieldPathBuilder().Metadata().Annotations().FieldPath(),
	}
}

func (s ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsMetadataAnnotations) WithValue(value map[string]string) *ListPlanAssignmentRequestsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListPlanAssignmentRequestsResponse_FieldSubPathValue)
}

func (s ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsMetadataAnnotations) WithArrayOfValues(values []map[string]string) *ListPlanAssignmentRequestsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListPlanAssignmentRequestsResponse_FieldSubPathArrayOfValues)
}

func (ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsMetadataAnnotations) WithKey(key string) ListPlanAssignmentRequestsResponseMapPathSelectorPlanAssignmentRequestsMetadataAnnotations {
	return ListPlanAssignmentRequestsResponseMapPathSelectorPlanAssignmentRequestsMetadataAnnotations{key: key}
}

type ListPlanAssignmentRequestsResponseMapPathSelectorPlanAssignmentRequestsMetadataAnnotations struct {
	key string
}

func (s ListPlanAssignmentRequestsResponseMapPathSelectorPlanAssignmentRequestsMetadataAnnotations) FieldPath() *ListPlanAssignmentRequestsResponse_FieldSubPath {
	return &ListPlanAssignmentRequestsResponse_FieldSubPath{
		selector: ListPlanAssignmentRequestsResponse_FieldPathSelectorPlanAssignmentRequests,
		subPath:  plan_assignment_request.NewPlanAssignmentRequestFieldPathBuilder().Metadata().Annotations().WithKey(s.key).FieldPath(),
	}
}

func (s ListPlanAssignmentRequestsResponseMapPathSelectorPlanAssignmentRequestsMetadataAnnotations) WithValue(value string) *ListPlanAssignmentRequestsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListPlanAssignmentRequestsResponse_FieldSubPathValue)
}

func (s ListPlanAssignmentRequestsResponseMapPathSelectorPlanAssignmentRequestsMetadataAnnotations) WithArrayOfValues(values []string) *ListPlanAssignmentRequestsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListPlanAssignmentRequestsResponse_FieldSubPathArrayOfValues)
}

type ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsMetadataGeneration struct{}

func (ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsMetadataGeneration) FieldPath() *ListPlanAssignmentRequestsResponse_FieldSubPath {
	return &ListPlanAssignmentRequestsResponse_FieldSubPath{
		selector: ListPlanAssignmentRequestsResponse_FieldPathSelectorPlanAssignmentRequests,
		subPath:  plan_assignment_request.NewPlanAssignmentRequestFieldPathBuilder().Metadata().Generation().FieldPath(),
	}
}

func (s ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsMetadataGeneration) WithValue(value int64) *ListPlanAssignmentRequestsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListPlanAssignmentRequestsResponse_FieldSubPathValue)
}

func (s ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsMetadataGeneration) WithArrayOfValues(values []int64) *ListPlanAssignmentRequestsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListPlanAssignmentRequestsResponse_FieldSubPathArrayOfValues)
}

type ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsMetadataResourceVersion struct{}

func (ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsMetadataResourceVersion) FieldPath() *ListPlanAssignmentRequestsResponse_FieldSubPath {
	return &ListPlanAssignmentRequestsResponse_FieldSubPath{
		selector: ListPlanAssignmentRequestsResponse_FieldPathSelectorPlanAssignmentRequests,
		subPath:  plan_assignment_request.NewPlanAssignmentRequestFieldPathBuilder().Metadata().ResourceVersion().FieldPath(),
	}
}

func (s ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsMetadataResourceVersion) WithValue(value string) *ListPlanAssignmentRequestsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListPlanAssignmentRequestsResponse_FieldSubPathValue)
}

func (s ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsMetadataResourceVersion) WithArrayOfValues(values []string) *ListPlanAssignmentRequestsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListPlanAssignmentRequestsResponse_FieldSubPathArrayOfValues)
}

type ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsMetadataOwnerReferences struct{}

func (ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsMetadataOwnerReferences) FieldPath() *ListPlanAssignmentRequestsResponse_FieldSubPath {
	return &ListPlanAssignmentRequestsResponse_FieldSubPath{
		selector: ListPlanAssignmentRequestsResponse_FieldPathSelectorPlanAssignmentRequests,
		subPath:  plan_assignment_request.NewPlanAssignmentRequestFieldPathBuilder().Metadata().OwnerReferences().FieldPath(),
	}
}

func (s ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsMetadataOwnerReferences) WithValue(value []*ntt_meta.OwnerReference) *ListPlanAssignmentRequestsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListPlanAssignmentRequestsResponse_FieldSubPathValue)
}

func (s ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsMetadataOwnerReferences) WithArrayOfValues(values [][]*ntt_meta.OwnerReference) *ListPlanAssignmentRequestsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListPlanAssignmentRequestsResponse_FieldSubPathArrayOfValues)
}

func (s ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsMetadataOwnerReferences) WithItemValue(value *ntt_meta.OwnerReference) *ListPlanAssignmentRequestsResponse_FieldSubPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*ListPlanAssignmentRequestsResponse_FieldSubPathArrayItemValue)
}

func (ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsMetadataOwnerReferences) Kind() ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsMetadataOwnerReferencesKind {
	return ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsMetadataOwnerReferencesKind{}
}

func (ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsMetadataOwnerReferences) Version() ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsMetadataOwnerReferencesVersion {
	return ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsMetadataOwnerReferencesVersion{}
}

func (ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsMetadataOwnerReferences) Name() ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsMetadataOwnerReferencesName {
	return ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsMetadataOwnerReferencesName{}
}

func (ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsMetadataOwnerReferences) Region() ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsMetadataOwnerReferencesRegion {
	return ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsMetadataOwnerReferencesRegion{}
}

func (ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsMetadataOwnerReferences) Controller() ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsMetadataOwnerReferencesController {
	return ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsMetadataOwnerReferencesController{}
}

func (ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsMetadataOwnerReferences) BlockOwnerDeletion() ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsMetadataOwnerReferencesBlockOwnerDeletion {
	return ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsMetadataOwnerReferencesBlockOwnerDeletion{}
}

func (ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsMetadataOwnerReferences) RequiresOwnerReference() ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsMetadataOwnerReferencesRequiresOwnerReference {
	return ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsMetadataOwnerReferencesRequiresOwnerReference{}
}

type ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsMetadataOwnerReferencesKind struct{}

func (ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsMetadataOwnerReferencesKind) FieldPath() *ListPlanAssignmentRequestsResponse_FieldSubPath {
	return &ListPlanAssignmentRequestsResponse_FieldSubPath{
		selector: ListPlanAssignmentRequestsResponse_FieldPathSelectorPlanAssignmentRequests,
		subPath:  plan_assignment_request.NewPlanAssignmentRequestFieldPathBuilder().Metadata().OwnerReferences().Kind().FieldPath(),
	}
}

func (s ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsMetadataOwnerReferencesKind) WithValue(value string) *ListPlanAssignmentRequestsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListPlanAssignmentRequestsResponse_FieldSubPathValue)
}

func (s ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsMetadataOwnerReferencesKind) WithArrayOfValues(values []string) *ListPlanAssignmentRequestsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListPlanAssignmentRequestsResponse_FieldSubPathArrayOfValues)
}

type ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsMetadataOwnerReferencesVersion struct{}

func (ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsMetadataOwnerReferencesVersion) FieldPath() *ListPlanAssignmentRequestsResponse_FieldSubPath {
	return &ListPlanAssignmentRequestsResponse_FieldSubPath{
		selector: ListPlanAssignmentRequestsResponse_FieldPathSelectorPlanAssignmentRequests,
		subPath:  plan_assignment_request.NewPlanAssignmentRequestFieldPathBuilder().Metadata().OwnerReferences().Version().FieldPath(),
	}
}

func (s ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsMetadataOwnerReferencesVersion) WithValue(value string) *ListPlanAssignmentRequestsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListPlanAssignmentRequestsResponse_FieldSubPathValue)
}

func (s ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsMetadataOwnerReferencesVersion) WithArrayOfValues(values []string) *ListPlanAssignmentRequestsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListPlanAssignmentRequestsResponse_FieldSubPathArrayOfValues)
}

type ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsMetadataOwnerReferencesName struct{}

func (ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsMetadataOwnerReferencesName) FieldPath() *ListPlanAssignmentRequestsResponse_FieldSubPath {
	return &ListPlanAssignmentRequestsResponse_FieldSubPath{
		selector: ListPlanAssignmentRequestsResponse_FieldPathSelectorPlanAssignmentRequests,
		subPath:  plan_assignment_request.NewPlanAssignmentRequestFieldPathBuilder().Metadata().OwnerReferences().Name().FieldPath(),
	}
}

func (s ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsMetadataOwnerReferencesName) WithValue(value string) *ListPlanAssignmentRequestsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListPlanAssignmentRequestsResponse_FieldSubPathValue)
}

func (s ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsMetadataOwnerReferencesName) WithArrayOfValues(values []string) *ListPlanAssignmentRequestsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListPlanAssignmentRequestsResponse_FieldSubPathArrayOfValues)
}

type ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsMetadataOwnerReferencesRegion struct{}

func (ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsMetadataOwnerReferencesRegion) FieldPath() *ListPlanAssignmentRequestsResponse_FieldSubPath {
	return &ListPlanAssignmentRequestsResponse_FieldSubPath{
		selector: ListPlanAssignmentRequestsResponse_FieldPathSelectorPlanAssignmentRequests,
		subPath:  plan_assignment_request.NewPlanAssignmentRequestFieldPathBuilder().Metadata().OwnerReferences().Region().FieldPath(),
	}
}

func (s ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsMetadataOwnerReferencesRegion) WithValue(value string) *ListPlanAssignmentRequestsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListPlanAssignmentRequestsResponse_FieldSubPathValue)
}

func (s ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsMetadataOwnerReferencesRegion) WithArrayOfValues(values []string) *ListPlanAssignmentRequestsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListPlanAssignmentRequestsResponse_FieldSubPathArrayOfValues)
}

type ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsMetadataOwnerReferencesController struct{}

func (ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsMetadataOwnerReferencesController) FieldPath() *ListPlanAssignmentRequestsResponse_FieldSubPath {
	return &ListPlanAssignmentRequestsResponse_FieldSubPath{
		selector: ListPlanAssignmentRequestsResponse_FieldPathSelectorPlanAssignmentRequests,
		subPath:  plan_assignment_request.NewPlanAssignmentRequestFieldPathBuilder().Metadata().OwnerReferences().Controller().FieldPath(),
	}
}

func (s ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsMetadataOwnerReferencesController) WithValue(value bool) *ListPlanAssignmentRequestsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListPlanAssignmentRequestsResponse_FieldSubPathValue)
}

func (s ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsMetadataOwnerReferencesController) WithArrayOfValues(values []bool) *ListPlanAssignmentRequestsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListPlanAssignmentRequestsResponse_FieldSubPathArrayOfValues)
}

type ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsMetadataOwnerReferencesBlockOwnerDeletion struct{}

func (ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsMetadataOwnerReferencesBlockOwnerDeletion) FieldPath() *ListPlanAssignmentRequestsResponse_FieldSubPath {
	return &ListPlanAssignmentRequestsResponse_FieldSubPath{
		selector: ListPlanAssignmentRequestsResponse_FieldPathSelectorPlanAssignmentRequests,
		subPath:  plan_assignment_request.NewPlanAssignmentRequestFieldPathBuilder().Metadata().OwnerReferences().BlockOwnerDeletion().FieldPath(),
	}
}

func (s ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsMetadataOwnerReferencesBlockOwnerDeletion) WithValue(value bool) *ListPlanAssignmentRequestsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListPlanAssignmentRequestsResponse_FieldSubPathValue)
}

func (s ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsMetadataOwnerReferencesBlockOwnerDeletion) WithArrayOfValues(values []bool) *ListPlanAssignmentRequestsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListPlanAssignmentRequestsResponse_FieldSubPathArrayOfValues)
}

type ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsMetadataOwnerReferencesRequiresOwnerReference struct{}

func (ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsMetadataOwnerReferencesRequiresOwnerReference) FieldPath() *ListPlanAssignmentRequestsResponse_FieldSubPath {
	return &ListPlanAssignmentRequestsResponse_FieldSubPath{
		selector: ListPlanAssignmentRequestsResponse_FieldPathSelectorPlanAssignmentRequests,
		subPath:  plan_assignment_request.NewPlanAssignmentRequestFieldPathBuilder().Metadata().OwnerReferences().RequiresOwnerReference().FieldPath(),
	}
}

func (s ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsMetadataOwnerReferencesRequiresOwnerReference) WithValue(value bool) *ListPlanAssignmentRequestsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListPlanAssignmentRequestsResponse_FieldSubPathValue)
}

func (s ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsMetadataOwnerReferencesRequiresOwnerReference) WithArrayOfValues(values []bool) *ListPlanAssignmentRequestsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListPlanAssignmentRequestsResponse_FieldSubPathArrayOfValues)
}

type ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsMetadataShards struct{}

func (ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsMetadataShards) FieldPath() *ListPlanAssignmentRequestsResponse_FieldSubPath {
	return &ListPlanAssignmentRequestsResponse_FieldSubPath{
		selector: ListPlanAssignmentRequestsResponse_FieldPathSelectorPlanAssignmentRequests,
		subPath:  plan_assignment_request.NewPlanAssignmentRequestFieldPathBuilder().Metadata().Shards().FieldPath(),
	}
}

func (s ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsMetadataShards) WithValue(value map[string]int64) *ListPlanAssignmentRequestsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListPlanAssignmentRequestsResponse_FieldSubPathValue)
}

func (s ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsMetadataShards) WithArrayOfValues(values []map[string]int64) *ListPlanAssignmentRequestsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListPlanAssignmentRequestsResponse_FieldSubPathArrayOfValues)
}

func (ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsMetadataShards) WithKey(key string) ListPlanAssignmentRequestsResponseMapPathSelectorPlanAssignmentRequestsMetadataShards {
	return ListPlanAssignmentRequestsResponseMapPathSelectorPlanAssignmentRequestsMetadataShards{key: key}
}

type ListPlanAssignmentRequestsResponseMapPathSelectorPlanAssignmentRequestsMetadataShards struct {
	key string
}

func (s ListPlanAssignmentRequestsResponseMapPathSelectorPlanAssignmentRequestsMetadataShards) FieldPath() *ListPlanAssignmentRequestsResponse_FieldSubPath {
	return &ListPlanAssignmentRequestsResponse_FieldSubPath{
		selector: ListPlanAssignmentRequestsResponse_FieldPathSelectorPlanAssignmentRequests,
		subPath:  plan_assignment_request.NewPlanAssignmentRequestFieldPathBuilder().Metadata().Shards().WithKey(s.key).FieldPath(),
	}
}

func (s ListPlanAssignmentRequestsResponseMapPathSelectorPlanAssignmentRequestsMetadataShards) WithValue(value int64) *ListPlanAssignmentRequestsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListPlanAssignmentRequestsResponse_FieldSubPathValue)
}

func (s ListPlanAssignmentRequestsResponseMapPathSelectorPlanAssignmentRequestsMetadataShards) WithArrayOfValues(values []int64) *ListPlanAssignmentRequestsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListPlanAssignmentRequestsResponse_FieldSubPathArrayOfValues)
}

type ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsMetadataSyncing struct{}

func (ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsMetadataSyncing) FieldPath() *ListPlanAssignmentRequestsResponse_FieldSubPath {
	return &ListPlanAssignmentRequestsResponse_FieldSubPath{
		selector: ListPlanAssignmentRequestsResponse_FieldPathSelectorPlanAssignmentRequests,
		subPath:  plan_assignment_request.NewPlanAssignmentRequestFieldPathBuilder().Metadata().Syncing().FieldPath(),
	}
}

func (s ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsMetadataSyncing) WithValue(value *ntt_meta.SyncingMeta) *ListPlanAssignmentRequestsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListPlanAssignmentRequestsResponse_FieldSubPathValue)
}

func (s ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsMetadataSyncing) WithArrayOfValues(values []*ntt_meta.SyncingMeta) *ListPlanAssignmentRequestsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListPlanAssignmentRequestsResponse_FieldSubPathArrayOfValues)
}

func (ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsMetadataSyncing) OwningRegion() ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsMetadataSyncingOwningRegion {
	return ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsMetadataSyncingOwningRegion{}
}

func (ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsMetadataSyncing) Regions() ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsMetadataSyncingRegions {
	return ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsMetadataSyncingRegions{}
}

type ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsMetadataSyncingOwningRegion struct{}

func (ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsMetadataSyncingOwningRegion) FieldPath() *ListPlanAssignmentRequestsResponse_FieldSubPath {
	return &ListPlanAssignmentRequestsResponse_FieldSubPath{
		selector: ListPlanAssignmentRequestsResponse_FieldPathSelectorPlanAssignmentRequests,
		subPath:  plan_assignment_request.NewPlanAssignmentRequestFieldPathBuilder().Metadata().Syncing().OwningRegion().FieldPath(),
	}
}

func (s ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsMetadataSyncingOwningRegion) WithValue(value string) *ListPlanAssignmentRequestsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListPlanAssignmentRequestsResponse_FieldSubPathValue)
}

func (s ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsMetadataSyncingOwningRegion) WithArrayOfValues(values []string) *ListPlanAssignmentRequestsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListPlanAssignmentRequestsResponse_FieldSubPathArrayOfValues)
}

type ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsMetadataSyncingRegions struct{}

func (ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsMetadataSyncingRegions) FieldPath() *ListPlanAssignmentRequestsResponse_FieldSubPath {
	return &ListPlanAssignmentRequestsResponse_FieldSubPath{
		selector: ListPlanAssignmentRequestsResponse_FieldPathSelectorPlanAssignmentRequests,
		subPath:  plan_assignment_request.NewPlanAssignmentRequestFieldPathBuilder().Metadata().Syncing().Regions().FieldPath(),
	}
}

func (s ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsMetadataSyncingRegions) WithValue(value []string) *ListPlanAssignmentRequestsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListPlanAssignmentRequestsResponse_FieldSubPathValue)
}

func (s ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsMetadataSyncingRegions) WithArrayOfValues(values [][]string) *ListPlanAssignmentRequestsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListPlanAssignmentRequestsResponse_FieldSubPathArrayOfValues)
}

func (s ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsMetadataSyncingRegions) WithItemValue(value string) *ListPlanAssignmentRequestsResponse_FieldSubPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*ListPlanAssignmentRequestsResponse_FieldSubPathArrayItemValue)
}

type ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsMetadataLifecycle struct{}

func (ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsMetadataLifecycle) FieldPath() *ListPlanAssignmentRequestsResponse_FieldSubPath {
	return &ListPlanAssignmentRequestsResponse_FieldSubPath{
		selector: ListPlanAssignmentRequestsResponse_FieldPathSelectorPlanAssignmentRequests,
		subPath:  plan_assignment_request.NewPlanAssignmentRequestFieldPathBuilder().Metadata().Lifecycle().FieldPath(),
	}
}

func (s ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsMetadataLifecycle) WithValue(value *ntt_meta.Lifecycle) *ListPlanAssignmentRequestsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListPlanAssignmentRequestsResponse_FieldSubPathValue)
}

func (s ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsMetadataLifecycle) WithArrayOfValues(values []*ntt_meta.Lifecycle) *ListPlanAssignmentRequestsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListPlanAssignmentRequestsResponse_FieldSubPathArrayOfValues)
}

func (ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsMetadataLifecycle) State() ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsMetadataLifecycleState {
	return ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsMetadataLifecycleState{}
}

func (ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsMetadataLifecycle) BlockDeletion() ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsMetadataLifecycleBlockDeletion {
	return ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsMetadataLifecycleBlockDeletion{}
}

type ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsMetadataLifecycleState struct{}

func (ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsMetadataLifecycleState) FieldPath() *ListPlanAssignmentRequestsResponse_FieldSubPath {
	return &ListPlanAssignmentRequestsResponse_FieldSubPath{
		selector: ListPlanAssignmentRequestsResponse_FieldPathSelectorPlanAssignmentRequests,
		subPath:  plan_assignment_request.NewPlanAssignmentRequestFieldPathBuilder().Metadata().Lifecycle().State().FieldPath(),
	}
}

func (s ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsMetadataLifecycleState) WithValue(value ntt_meta.Lifecycle_State) *ListPlanAssignmentRequestsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListPlanAssignmentRequestsResponse_FieldSubPathValue)
}

func (s ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsMetadataLifecycleState) WithArrayOfValues(values []ntt_meta.Lifecycle_State) *ListPlanAssignmentRequestsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListPlanAssignmentRequestsResponse_FieldSubPathArrayOfValues)
}

type ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsMetadataLifecycleBlockDeletion struct{}

func (ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsMetadataLifecycleBlockDeletion) FieldPath() *ListPlanAssignmentRequestsResponse_FieldSubPath {
	return &ListPlanAssignmentRequestsResponse_FieldSubPath{
		selector: ListPlanAssignmentRequestsResponse_FieldPathSelectorPlanAssignmentRequests,
		subPath:  plan_assignment_request.NewPlanAssignmentRequestFieldPathBuilder().Metadata().Lifecycle().BlockDeletion().FieldPath(),
	}
}

func (s ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsMetadataLifecycleBlockDeletion) WithValue(value bool) *ListPlanAssignmentRequestsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListPlanAssignmentRequestsResponse_FieldSubPathValue)
}

func (s ListPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestsMetadataLifecycleBlockDeletion) WithArrayOfValues(values []bool) *ListPlanAssignmentRequestsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListPlanAssignmentRequestsResponse_FieldSubPathArrayOfValues)
}

type ListPlanAssignmentRequestsResponsePathSelectorPrevPageToken struct{}

func (ListPlanAssignmentRequestsResponsePathSelectorPrevPageToken) FieldPath() *ListPlanAssignmentRequestsResponse_FieldTerminalPath {
	return &ListPlanAssignmentRequestsResponse_FieldTerminalPath{selector: ListPlanAssignmentRequestsResponse_FieldPathSelectorPrevPageToken}
}

func (s ListPlanAssignmentRequestsResponsePathSelectorPrevPageToken) WithValue(value *plan_assignment_request.PagerCursor) *ListPlanAssignmentRequestsResponse_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*ListPlanAssignmentRequestsResponse_FieldTerminalPathValue)
}

func (s ListPlanAssignmentRequestsResponsePathSelectorPrevPageToken) WithArrayOfValues(values []*plan_assignment_request.PagerCursor) *ListPlanAssignmentRequestsResponse_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListPlanAssignmentRequestsResponse_FieldTerminalPathArrayOfValues)
}

type ListPlanAssignmentRequestsResponsePathSelectorNextPageToken struct{}

func (ListPlanAssignmentRequestsResponsePathSelectorNextPageToken) FieldPath() *ListPlanAssignmentRequestsResponse_FieldTerminalPath {
	return &ListPlanAssignmentRequestsResponse_FieldTerminalPath{selector: ListPlanAssignmentRequestsResponse_FieldPathSelectorNextPageToken}
}

func (s ListPlanAssignmentRequestsResponsePathSelectorNextPageToken) WithValue(value *plan_assignment_request.PagerCursor) *ListPlanAssignmentRequestsResponse_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*ListPlanAssignmentRequestsResponse_FieldTerminalPathValue)
}

func (s ListPlanAssignmentRequestsResponsePathSelectorNextPageToken) WithArrayOfValues(values []*plan_assignment_request.PagerCursor) *ListPlanAssignmentRequestsResponse_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListPlanAssignmentRequestsResponse_FieldTerminalPathArrayOfValues)
}

type ListPlanAssignmentRequestsResponsePathSelectorCurrentOffset struct{}

func (ListPlanAssignmentRequestsResponsePathSelectorCurrentOffset) FieldPath() *ListPlanAssignmentRequestsResponse_FieldTerminalPath {
	return &ListPlanAssignmentRequestsResponse_FieldTerminalPath{selector: ListPlanAssignmentRequestsResponse_FieldPathSelectorCurrentOffset}
}

func (s ListPlanAssignmentRequestsResponsePathSelectorCurrentOffset) WithValue(value int32) *ListPlanAssignmentRequestsResponse_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*ListPlanAssignmentRequestsResponse_FieldTerminalPathValue)
}

func (s ListPlanAssignmentRequestsResponsePathSelectorCurrentOffset) WithArrayOfValues(values []int32) *ListPlanAssignmentRequestsResponse_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListPlanAssignmentRequestsResponse_FieldTerminalPathArrayOfValues)
}

type ListPlanAssignmentRequestsResponsePathSelectorTotalResultsCount struct{}

func (ListPlanAssignmentRequestsResponsePathSelectorTotalResultsCount) FieldPath() *ListPlanAssignmentRequestsResponse_FieldTerminalPath {
	return &ListPlanAssignmentRequestsResponse_FieldTerminalPath{selector: ListPlanAssignmentRequestsResponse_FieldPathSelectorTotalResultsCount}
}

func (s ListPlanAssignmentRequestsResponsePathSelectorTotalResultsCount) WithValue(value int32) *ListPlanAssignmentRequestsResponse_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*ListPlanAssignmentRequestsResponse_FieldTerminalPathValue)
}

func (s ListPlanAssignmentRequestsResponsePathSelectorTotalResultsCount) WithArrayOfValues(values []int32) *ListPlanAssignmentRequestsResponse_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListPlanAssignmentRequestsResponse_FieldTerminalPathArrayOfValues)
}

type WatchPlanAssignmentRequestRequestFieldPathBuilder struct{}

func NewWatchPlanAssignmentRequestRequestFieldPathBuilder() WatchPlanAssignmentRequestRequestFieldPathBuilder {
	return WatchPlanAssignmentRequestRequestFieldPathBuilder{}
}
func (WatchPlanAssignmentRequestRequestFieldPathBuilder) Name() WatchPlanAssignmentRequestRequestPathSelectorName {
	return WatchPlanAssignmentRequestRequestPathSelectorName{}
}
func (WatchPlanAssignmentRequestRequestFieldPathBuilder) FieldMask() WatchPlanAssignmentRequestRequestPathSelectorFieldMask {
	return WatchPlanAssignmentRequestRequestPathSelectorFieldMask{}
}
func (WatchPlanAssignmentRequestRequestFieldPathBuilder) View() WatchPlanAssignmentRequestRequestPathSelectorView {
	return WatchPlanAssignmentRequestRequestPathSelectorView{}
}

type WatchPlanAssignmentRequestRequestPathSelectorName struct{}

func (WatchPlanAssignmentRequestRequestPathSelectorName) FieldPath() *WatchPlanAssignmentRequestRequest_FieldTerminalPath {
	return &WatchPlanAssignmentRequestRequest_FieldTerminalPath{selector: WatchPlanAssignmentRequestRequest_FieldPathSelectorName}
}

func (s WatchPlanAssignmentRequestRequestPathSelectorName) WithValue(value *plan_assignment_request.Reference) *WatchPlanAssignmentRequestRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*WatchPlanAssignmentRequestRequest_FieldTerminalPathValue)
}

func (s WatchPlanAssignmentRequestRequestPathSelectorName) WithArrayOfValues(values []*plan_assignment_request.Reference) *WatchPlanAssignmentRequestRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*WatchPlanAssignmentRequestRequest_FieldTerminalPathArrayOfValues)
}

type WatchPlanAssignmentRequestRequestPathSelectorFieldMask struct{}

func (WatchPlanAssignmentRequestRequestPathSelectorFieldMask) FieldPath() *WatchPlanAssignmentRequestRequest_FieldTerminalPath {
	return &WatchPlanAssignmentRequestRequest_FieldTerminalPath{selector: WatchPlanAssignmentRequestRequest_FieldPathSelectorFieldMask}
}

func (s WatchPlanAssignmentRequestRequestPathSelectorFieldMask) WithValue(value *plan_assignment_request.PlanAssignmentRequest_FieldMask) *WatchPlanAssignmentRequestRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*WatchPlanAssignmentRequestRequest_FieldTerminalPathValue)
}

func (s WatchPlanAssignmentRequestRequestPathSelectorFieldMask) WithArrayOfValues(values []*plan_assignment_request.PlanAssignmentRequest_FieldMask) *WatchPlanAssignmentRequestRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*WatchPlanAssignmentRequestRequest_FieldTerminalPathArrayOfValues)
}

type WatchPlanAssignmentRequestRequestPathSelectorView struct{}

func (WatchPlanAssignmentRequestRequestPathSelectorView) FieldPath() *WatchPlanAssignmentRequestRequest_FieldTerminalPath {
	return &WatchPlanAssignmentRequestRequest_FieldTerminalPath{selector: WatchPlanAssignmentRequestRequest_FieldPathSelectorView}
}

func (s WatchPlanAssignmentRequestRequestPathSelectorView) WithValue(value view.View) *WatchPlanAssignmentRequestRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*WatchPlanAssignmentRequestRequest_FieldTerminalPathValue)
}

func (s WatchPlanAssignmentRequestRequestPathSelectorView) WithArrayOfValues(values []view.View) *WatchPlanAssignmentRequestRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*WatchPlanAssignmentRequestRequest_FieldTerminalPathArrayOfValues)
}

type WatchPlanAssignmentRequestResponseFieldPathBuilder struct{}

func NewWatchPlanAssignmentRequestResponseFieldPathBuilder() WatchPlanAssignmentRequestResponseFieldPathBuilder {
	return WatchPlanAssignmentRequestResponseFieldPathBuilder{}
}
func (WatchPlanAssignmentRequestResponseFieldPathBuilder) Change() WatchPlanAssignmentRequestResponsePathSelectorChange {
	return WatchPlanAssignmentRequestResponsePathSelectorChange{}
}

type WatchPlanAssignmentRequestResponsePathSelectorChange struct{}

func (WatchPlanAssignmentRequestResponsePathSelectorChange) FieldPath() *WatchPlanAssignmentRequestResponse_FieldTerminalPath {
	return &WatchPlanAssignmentRequestResponse_FieldTerminalPath{selector: WatchPlanAssignmentRequestResponse_FieldPathSelectorChange}
}

func (s WatchPlanAssignmentRequestResponsePathSelectorChange) WithValue(value *plan_assignment_request.PlanAssignmentRequestChange) *WatchPlanAssignmentRequestResponse_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*WatchPlanAssignmentRequestResponse_FieldTerminalPathValue)
}

func (s WatchPlanAssignmentRequestResponsePathSelectorChange) WithArrayOfValues(values []*plan_assignment_request.PlanAssignmentRequestChange) *WatchPlanAssignmentRequestResponse_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*WatchPlanAssignmentRequestResponse_FieldTerminalPathArrayOfValues)
}

type WatchPlanAssignmentRequestsRequestFieldPathBuilder struct{}

func NewWatchPlanAssignmentRequestsRequestFieldPathBuilder() WatchPlanAssignmentRequestsRequestFieldPathBuilder {
	return WatchPlanAssignmentRequestsRequestFieldPathBuilder{}
}
func (WatchPlanAssignmentRequestsRequestFieldPathBuilder) Type() WatchPlanAssignmentRequestsRequestPathSelectorType {
	return WatchPlanAssignmentRequestsRequestPathSelectorType{}
}
func (WatchPlanAssignmentRequestsRequestFieldPathBuilder) Parent() WatchPlanAssignmentRequestsRequestPathSelectorParent {
	return WatchPlanAssignmentRequestsRequestPathSelectorParent{}
}
func (WatchPlanAssignmentRequestsRequestFieldPathBuilder) PageSize() WatchPlanAssignmentRequestsRequestPathSelectorPageSize {
	return WatchPlanAssignmentRequestsRequestPathSelectorPageSize{}
}
func (WatchPlanAssignmentRequestsRequestFieldPathBuilder) PageToken() WatchPlanAssignmentRequestsRequestPathSelectorPageToken {
	return WatchPlanAssignmentRequestsRequestPathSelectorPageToken{}
}
func (WatchPlanAssignmentRequestsRequestFieldPathBuilder) OrderBy() WatchPlanAssignmentRequestsRequestPathSelectorOrderBy {
	return WatchPlanAssignmentRequestsRequestPathSelectorOrderBy{}
}
func (WatchPlanAssignmentRequestsRequestFieldPathBuilder) ResumeToken() WatchPlanAssignmentRequestsRequestPathSelectorResumeToken {
	return WatchPlanAssignmentRequestsRequestPathSelectorResumeToken{}
}
func (WatchPlanAssignmentRequestsRequestFieldPathBuilder) StartingTime() WatchPlanAssignmentRequestsRequestPathSelectorStartingTime {
	return WatchPlanAssignmentRequestsRequestPathSelectorStartingTime{}
}
func (WatchPlanAssignmentRequestsRequestFieldPathBuilder) Filter() WatchPlanAssignmentRequestsRequestPathSelectorFilter {
	return WatchPlanAssignmentRequestsRequestPathSelectorFilter{}
}
func (WatchPlanAssignmentRequestsRequestFieldPathBuilder) FieldMask() WatchPlanAssignmentRequestsRequestPathSelectorFieldMask {
	return WatchPlanAssignmentRequestsRequestPathSelectorFieldMask{}
}
func (WatchPlanAssignmentRequestsRequestFieldPathBuilder) View() WatchPlanAssignmentRequestsRequestPathSelectorView {
	return WatchPlanAssignmentRequestsRequestPathSelectorView{}
}
func (WatchPlanAssignmentRequestsRequestFieldPathBuilder) MaxChunkSize() WatchPlanAssignmentRequestsRequestPathSelectorMaxChunkSize {
	return WatchPlanAssignmentRequestsRequestPathSelectorMaxChunkSize{}
}

type WatchPlanAssignmentRequestsRequestPathSelectorType struct{}

func (WatchPlanAssignmentRequestsRequestPathSelectorType) FieldPath() *WatchPlanAssignmentRequestsRequest_FieldTerminalPath {
	return &WatchPlanAssignmentRequestsRequest_FieldTerminalPath{selector: WatchPlanAssignmentRequestsRequest_FieldPathSelectorType}
}

func (s WatchPlanAssignmentRequestsRequestPathSelectorType) WithValue(value watch_type.WatchType) *WatchPlanAssignmentRequestsRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*WatchPlanAssignmentRequestsRequest_FieldTerminalPathValue)
}

func (s WatchPlanAssignmentRequestsRequestPathSelectorType) WithArrayOfValues(values []watch_type.WatchType) *WatchPlanAssignmentRequestsRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*WatchPlanAssignmentRequestsRequest_FieldTerminalPathArrayOfValues)
}

type WatchPlanAssignmentRequestsRequestPathSelectorParent struct{}

func (WatchPlanAssignmentRequestsRequestPathSelectorParent) FieldPath() *WatchPlanAssignmentRequestsRequest_FieldTerminalPath {
	return &WatchPlanAssignmentRequestsRequest_FieldTerminalPath{selector: WatchPlanAssignmentRequestsRequest_FieldPathSelectorParent}
}

func (s WatchPlanAssignmentRequestsRequestPathSelectorParent) WithValue(value *plan_assignment_request.ParentReference) *WatchPlanAssignmentRequestsRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*WatchPlanAssignmentRequestsRequest_FieldTerminalPathValue)
}

func (s WatchPlanAssignmentRequestsRequestPathSelectorParent) WithArrayOfValues(values []*plan_assignment_request.ParentReference) *WatchPlanAssignmentRequestsRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*WatchPlanAssignmentRequestsRequest_FieldTerminalPathArrayOfValues)
}

type WatchPlanAssignmentRequestsRequestPathSelectorPageSize struct{}

func (WatchPlanAssignmentRequestsRequestPathSelectorPageSize) FieldPath() *WatchPlanAssignmentRequestsRequest_FieldTerminalPath {
	return &WatchPlanAssignmentRequestsRequest_FieldTerminalPath{selector: WatchPlanAssignmentRequestsRequest_FieldPathSelectorPageSize}
}

func (s WatchPlanAssignmentRequestsRequestPathSelectorPageSize) WithValue(value int32) *WatchPlanAssignmentRequestsRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*WatchPlanAssignmentRequestsRequest_FieldTerminalPathValue)
}

func (s WatchPlanAssignmentRequestsRequestPathSelectorPageSize) WithArrayOfValues(values []int32) *WatchPlanAssignmentRequestsRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*WatchPlanAssignmentRequestsRequest_FieldTerminalPathArrayOfValues)
}

type WatchPlanAssignmentRequestsRequestPathSelectorPageToken struct{}

func (WatchPlanAssignmentRequestsRequestPathSelectorPageToken) FieldPath() *WatchPlanAssignmentRequestsRequest_FieldTerminalPath {
	return &WatchPlanAssignmentRequestsRequest_FieldTerminalPath{selector: WatchPlanAssignmentRequestsRequest_FieldPathSelectorPageToken}
}

func (s WatchPlanAssignmentRequestsRequestPathSelectorPageToken) WithValue(value *plan_assignment_request.PagerCursor) *WatchPlanAssignmentRequestsRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*WatchPlanAssignmentRequestsRequest_FieldTerminalPathValue)
}

func (s WatchPlanAssignmentRequestsRequestPathSelectorPageToken) WithArrayOfValues(values []*plan_assignment_request.PagerCursor) *WatchPlanAssignmentRequestsRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*WatchPlanAssignmentRequestsRequest_FieldTerminalPathArrayOfValues)
}

type WatchPlanAssignmentRequestsRequestPathSelectorOrderBy struct{}

func (WatchPlanAssignmentRequestsRequestPathSelectorOrderBy) FieldPath() *WatchPlanAssignmentRequestsRequest_FieldTerminalPath {
	return &WatchPlanAssignmentRequestsRequest_FieldTerminalPath{selector: WatchPlanAssignmentRequestsRequest_FieldPathSelectorOrderBy}
}

func (s WatchPlanAssignmentRequestsRequestPathSelectorOrderBy) WithValue(value *plan_assignment_request.OrderBy) *WatchPlanAssignmentRequestsRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*WatchPlanAssignmentRequestsRequest_FieldTerminalPathValue)
}

func (s WatchPlanAssignmentRequestsRequestPathSelectorOrderBy) WithArrayOfValues(values []*plan_assignment_request.OrderBy) *WatchPlanAssignmentRequestsRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*WatchPlanAssignmentRequestsRequest_FieldTerminalPathArrayOfValues)
}

type WatchPlanAssignmentRequestsRequestPathSelectorResumeToken struct{}

func (WatchPlanAssignmentRequestsRequestPathSelectorResumeToken) FieldPath() *WatchPlanAssignmentRequestsRequest_FieldTerminalPath {
	return &WatchPlanAssignmentRequestsRequest_FieldTerminalPath{selector: WatchPlanAssignmentRequestsRequest_FieldPathSelectorResumeToken}
}

func (s WatchPlanAssignmentRequestsRequestPathSelectorResumeToken) WithValue(value string) *WatchPlanAssignmentRequestsRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*WatchPlanAssignmentRequestsRequest_FieldTerminalPathValue)
}

func (s WatchPlanAssignmentRequestsRequestPathSelectorResumeToken) WithArrayOfValues(values []string) *WatchPlanAssignmentRequestsRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*WatchPlanAssignmentRequestsRequest_FieldTerminalPathArrayOfValues)
}

type WatchPlanAssignmentRequestsRequestPathSelectorStartingTime struct{}

func (WatchPlanAssignmentRequestsRequestPathSelectorStartingTime) FieldPath() *WatchPlanAssignmentRequestsRequest_FieldTerminalPath {
	return &WatchPlanAssignmentRequestsRequest_FieldTerminalPath{selector: WatchPlanAssignmentRequestsRequest_FieldPathSelectorStartingTime}
}

func (s WatchPlanAssignmentRequestsRequestPathSelectorStartingTime) WithValue(value *timestamp.Timestamp) *WatchPlanAssignmentRequestsRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*WatchPlanAssignmentRequestsRequest_FieldTerminalPathValue)
}

func (s WatchPlanAssignmentRequestsRequestPathSelectorStartingTime) WithArrayOfValues(values []*timestamp.Timestamp) *WatchPlanAssignmentRequestsRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*WatchPlanAssignmentRequestsRequest_FieldTerminalPathArrayOfValues)
}

type WatchPlanAssignmentRequestsRequestPathSelectorFilter struct{}

func (WatchPlanAssignmentRequestsRequestPathSelectorFilter) FieldPath() *WatchPlanAssignmentRequestsRequest_FieldTerminalPath {
	return &WatchPlanAssignmentRequestsRequest_FieldTerminalPath{selector: WatchPlanAssignmentRequestsRequest_FieldPathSelectorFilter}
}

func (s WatchPlanAssignmentRequestsRequestPathSelectorFilter) WithValue(value *plan_assignment_request.Filter) *WatchPlanAssignmentRequestsRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*WatchPlanAssignmentRequestsRequest_FieldTerminalPathValue)
}

func (s WatchPlanAssignmentRequestsRequestPathSelectorFilter) WithArrayOfValues(values []*plan_assignment_request.Filter) *WatchPlanAssignmentRequestsRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*WatchPlanAssignmentRequestsRequest_FieldTerminalPathArrayOfValues)
}

type WatchPlanAssignmentRequestsRequestPathSelectorFieldMask struct{}

func (WatchPlanAssignmentRequestsRequestPathSelectorFieldMask) FieldPath() *WatchPlanAssignmentRequestsRequest_FieldTerminalPath {
	return &WatchPlanAssignmentRequestsRequest_FieldTerminalPath{selector: WatchPlanAssignmentRequestsRequest_FieldPathSelectorFieldMask}
}

func (s WatchPlanAssignmentRequestsRequestPathSelectorFieldMask) WithValue(value *plan_assignment_request.PlanAssignmentRequest_FieldMask) *WatchPlanAssignmentRequestsRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*WatchPlanAssignmentRequestsRequest_FieldTerminalPathValue)
}

func (s WatchPlanAssignmentRequestsRequestPathSelectorFieldMask) WithArrayOfValues(values []*plan_assignment_request.PlanAssignmentRequest_FieldMask) *WatchPlanAssignmentRequestsRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*WatchPlanAssignmentRequestsRequest_FieldTerminalPathArrayOfValues)
}

type WatchPlanAssignmentRequestsRequestPathSelectorView struct{}

func (WatchPlanAssignmentRequestsRequestPathSelectorView) FieldPath() *WatchPlanAssignmentRequestsRequest_FieldTerminalPath {
	return &WatchPlanAssignmentRequestsRequest_FieldTerminalPath{selector: WatchPlanAssignmentRequestsRequest_FieldPathSelectorView}
}

func (s WatchPlanAssignmentRequestsRequestPathSelectorView) WithValue(value view.View) *WatchPlanAssignmentRequestsRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*WatchPlanAssignmentRequestsRequest_FieldTerminalPathValue)
}

func (s WatchPlanAssignmentRequestsRequestPathSelectorView) WithArrayOfValues(values []view.View) *WatchPlanAssignmentRequestsRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*WatchPlanAssignmentRequestsRequest_FieldTerminalPathArrayOfValues)
}

type WatchPlanAssignmentRequestsRequestPathSelectorMaxChunkSize struct{}

func (WatchPlanAssignmentRequestsRequestPathSelectorMaxChunkSize) FieldPath() *WatchPlanAssignmentRequestsRequest_FieldTerminalPath {
	return &WatchPlanAssignmentRequestsRequest_FieldTerminalPath{selector: WatchPlanAssignmentRequestsRequest_FieldPathSelectorMaxChunkSize}
}

func (s WatchPlanAssignmentRequestsRequestPathSelectorMaxChunkSize) WithValue(value int32) *WatchPlanAssignmentRequestsRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*WatchPlanAssignmentRequestsRequest_FieldTerminalPathValue)
}

func (s WatchPlanAssignmentRequestsRequestPathSelectorMaxChunkSize) WithArrayOfValues(values []int32) *WatchPlanAssignmentRequestsRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*WatchPlanAssignmentRequestsRequest_FieldTerminalPathArrayOfValues)
}

type WatchPlanAssignmentRequestsResponseFieldPathBuilder struct{}

func NewWatchPlanAssignmentRequestsResponseFieldPathBuilder() WatchPlanAssignmentRequestsResponseFieldPathBuilder {
	return WatchPlanAssignmentRequestsResponseFieldPathBuilder{}
}
func (WatchPlanAssignmentRequestsResponseFieldPathBuilder) PlanAssignmentRequestChanges() WatchPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestChanges {
	return WatchPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestChanges{}
}
func (WatchPlanAssignmentRequestsResponseFieldPathBuilder) IsCurrent() WatchPlanAssignmentRequestsResponsePathSelectorIsCurrent {
	return WatchPlanAssignmentRequestsResponsePathSelectorIsCurrent{}
}
func (WatchPlanAssignmentRequestsResponseFieldPathBuilder) PageTokenChange() WatchPlanAssignmentRequestsResponsePathSelectorPageTokenChange {
	return WatchPlanAssignmentRequestsResponsePathSelectorPageTokenChange{}
}
func (WatchPlanAssignmentRequestsResponseFieldPathBuilder) ResumeToken() WatchPlanAssignmentRequestsResponsePathSelectorResumeToken {
	return WatchPlanAssignmentRequestsResponsePathSelectorResumeToken{}
}
func (WatchPlanAssignmentRequestsResponseFieldPathBuilder) SnapshotSize() WatchPlanAssignmentRequestsResponsePathSelectorSnapshotSize {
	return WatchPlanAssignmentRequestsResponsePathSelectorSnapshotSize{}
}
func (WatchPlanAssignmentRequestsResponseFieldPathBuilder) IsSoftReset() WatchPlanAssignmentRequestsResponsePathSelectorIsSoftReset {
	return WatchPlanAssignmentRequestsResponsePathSelectorIsSoftReset{}
}
func (WatchPlanAssignmentRequestsResponseFieldPathBuilder) IsHardReset() WatchPlanAssignmentRequestsResponsePathSelectorIsHardReset {
	return WatchPlanAssignmentRequestsResponsePathSelectorIsHardReset{}
}

type WatchPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestChanges struct{}

func (WatchPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestChanges) FieldPath() *WatchPlanAssignmentRequestsResponse_FieldTerminalPath {
	return &WatchPlanAssignmentRequestsResponse_FieldTerminalPath{selector: WatchPlanAssignmentRequestsResponse_FieldPathSelectorPlanAssignmentRequestChanges}
}

func (s WatchPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestChanges) WithValue(value []*plan_assignment_request.PlanAssignmentRequestChange) *WatchPlanAssignmentRequestsResponse_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*WatchPlanAssignmentRequestsResponse_FieldTerminalPathValue)
}

func (s WatchPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestChanges) WithArrayOfValues(values [][]*plan_assignment_request.PlanAssignmentRequestChange) *WatchPlanAssignmentRequestsResponse_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*WatchPlanAssignmentRequestsResponse_FieldTerminalPathArrayOfValues)
}

func (s WatchPlanAssignmentRequestsResponsePathSelectorPlanAssignmentRequestChanges) WithItemValue(value *plan_assignment_request.PlanAssignmentRequestChange) *WatchPlanAssignmentRequestsResponse_FieldTerminalPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*WatchPlanAssignmentRequestsResponse_FieldTerminalPathArrayItemValue)
}

type WatchPlanAssignmentRequestsResponsePathSelectorIsCurrent struct{}

func (WatchPlanAssignmentRequestsResponsePathSelectorIsCurrent) FieldPath() *WatchPlanAssignmentRequestsResponse_FieldTerminalPath {
	return &WatchPlanAssignmentRequestsResponse_FieldTerminalPath{selector: WatchPlanAssignmentRequestsResponse_FieldPathSelectorIsCurrent}
}

func (s WatchPlanAssignmentRequestsResponsePathSelectorIsCurrent) WithValue(value bool) *WatchPlanAssignmentRequestsResponse_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*WatchPlanAssignmentRequestsResponse_FieldTerminalPathValue)
}

func (s WatchPlanAssignmentRequestsResponsePathSelectorIsCurrent) WithArrayOfValues(values []bool) *WatchPlanAssignmentRequestsResponse_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*WatchPlanAssignmentRequestsResponse_FieldTerminalPathArrayOfValues)
}

type WatchPlanAssignmentRequestsResponsePathSelectorPageTokenChange struct{}

func (WatchPlanAssignmentRequestsResponsePathSelectorPageTokenChange) FieldPath() *WatchPlanAssignmentRequestsResponse_FieldTerminalPath {
	return &WatchPlanAssignmentRequestsResponse_FieldTerminalPath{selector: WatchPlanAssignmentRequestsResponse_FieldPathSelectorPageTokenChange}
}

func (s WatchPlanAssignmentRequestsResponsePathSelectorPageTokenChange) WithValue(value *WatchPlanAssignmentRequestsResponse_PageTokenChange) *WatchPlanAssignmentRequestsResponse_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*WatchPlanAssignmentRequestsResponse_FieldTerminalPathValue)
}

func (s WatchPlanAssignmentRequestsResponsePathSelectorPageTokenChange) WithArrayOfValues(values []*WatchPlanAssignmentRequestsResponse_PageTokenChange) *WatchPlanAssignmentRequestsResponse_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*WatchPlanAssignmentRequestsResponse_FieldTerminalPathArrayOfValues)
}

func (WatchPlanAssignmentRequestsResponsePathSelectorPageTokenChange) WithSubPath(subPath WatchPlanAssignmentRequestsResponsePageTokenChange_FieldPath) *WatchPlanAssignmentRequestsResponse_FieldSubPath {
	return &WatchPlanAssignmentRequestsResponse_FieldSubPath{selector: WatchPlanAssignmentRequestsResponse_FieldPathSelectorPageTokenChange, subPath: subPath}
}

func (s WatchPlanAssignmentRequestsResponsePathSelectorPageTokenChange) WithSubValue(subPathValue WatchPlanAssignmentRequestsResponsePageTokenChange_FieldPathValue) *WatchPlanAssignmentRequestsResponse_FieldSubPathValue {
	return &WatchPlanAssignmentRequestsResponse_FieldSubPathValue{WatchPlanAssignmentRequestsResponse_FieldPath: s.WithSubPath(subPathValue), subPathValue: subPathValue}
}

func (s WatchPlanAssignmentRequestsResponsePathSelectorPageTokenChange) WithSubArrayOfValues(subPathArrayOfValues WatchPlanAssignmentRequestsResponsePageTokenChange_FieldPathArrayOfValues) *WatchPlanAssignmentRequestsResponse_FieldSubPathArrayOfValues {
	return &WatchPlanAssignmentRequestsResponse_FieldSubPathArrayOfValues{WatchPlanAssignmentRequestsResponse_FieldPath: s.WithSubPath(subPathArrayOfValues), subPathArrayOfValues: subPathArrayOfValues}
}

func (s WatchPlanAssignmentRequestsResponsePathSelectorPageTokenChange) WithSubArrayItemValue(subPathArrayItemValue WatchPlanAssignmentRequestsResponsePageTokenChange_FieldPathArrayItemValue) *WatchPlanAssignmentRequestsResponse_FieldSubPathArrayItemValue {
	return &WatchPlanAssignmentRequestsResponse_FieldSubPathArrayItemValue{WatchPlanAssignmentRequestsResponse_FieldPath: s.WithSubPath(subPathArrayItemValue), subPathItemValue: subPathArrayItemValue}
}

func (WatchPlanAssignmentRequestsResponsePathSelectorPageTokenChange) PrevPageToken() WatchPlanAssignmentRequestsResponsePathSelectorPageTokenChangePrevPageToken {
	return WatchPlanAssignmentRequestsResponsePathSelectorPageTokenChangePrevPageToken{}
}

func (WatchPlanAssignmentRequestsResponsePathSelectorPageTokenChange) NextPageToken() WatchPlanAssignmentRequestsResponsePathSelectorPageTokenChangeNextPageToken {
	return WatchPlanAssignmentRequestsResponsePathSelectorPageTokenChangeNextPageToken{}
}

type WatchPlanAssignmentRequestsResponsePathSelectorPageTokenChangePrevPageToken struct{}

func (WatchPlanAssignmentRequestsResponsePathSelectorPageTokenChangePrevPageToken) FieldPath() *WatchPlanAssignmentRequestsResponse_FieldSubPath {
	return &WatchPlanAssignmentRequestsResponse_FieldSubPath{
		selector: WatchPlanAssignmentRequestsResponse_FieldPathSelectorPageTokenChange,
		subPath:  NewWatchPlanAssignmentRequestsResponsePageTokenChangeFieldPathBuilder().PrevPageToken().FieldPath(),
	}
}

func (s WatchPlanAssignmentRequestsResponsePathSelectorPageTokenChangePrevPageToken) WithValue(value *plan_assignment_request.PagerCursor) *WatchPlanAssignmentRequestsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*WatchPlanAssignmentRequestsResponse_FieldSubPathValue)
}

func (s WatchPlanAssignmentRequestsResponsePathSelectorPageTokenChangePrevPageToken) WithArrayOfValues(values []*plan_assignment_request.PagerCursor) *WatchPlanAssignmentRequestsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*WatchPlanAssignmentRequestsResponse_FieldSubPathArrayOfValues)
}

type WatchPlanAssignmentRequestsResponsePathSelectorPageTokenChangeNextPageToken struct{}

func (WatchPlanAssignmentRequestsResponsePathSelectorPageTokenChangeNextPageToken) FieldPath() *WatchPlanAssignmentRequestsResponse_FieldSubPath {
	return &WatchPlanAssignmentRequestsResponse_FieldSubPath{
		selector: WatchPlanAssignmentRequestsResponse_FieldPathSelectorPageTokenChange,
		subPath:  NewWatchPlanAssignmentRequestsResponsePageTokenChangeFieldPathBuilder().NextPageToken().FieldPath(),
	}
}

func (s WatchPlanAssignmentRequestsResponsePathSelectorPageTokenChangeNextPageToken) WithValue(value *plan_assignment_request.PagerCursor) *WatchPlanAssignmentRequestsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*WatchPlanAssignmentRequestsResponse_FieldSubPathValue)
}

func (s WatchPlanAssignmentRequestsResponsePathSelectorPageTokenChangeNextPageToken) WithArrayOfValues(values []*plan_assignment_request.PagerCursor) *WatchPlanAssignmentRequestsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*WatchPlanAssignmentRequestsResponse_FieldSubPathArrayOfValues)
}

type WatchPlanAssignmentRequestsResponsePathSelectorResumeToken struct{}

func (WatchPlanAssignmentRequestsResponsePathSelectorResumeToken) FieldPath() *WatchPlanAssignmentRequestsResponse_FieldTerminalPath {
	return &WatchPlanAssignmentRequestsResponse_FieldTerminalPath{selector: WatchPlanAssignmentRequestsResponse_FieldPathSelectorResumeToken}
}

func (s WatchPlanAssignmentRequestsResponsePathSelectorResumeToken) WithValue(value string) *WatchPlanAssignmentRequestsResponse_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*WatchPlanAssignmentRequestsResponse_FieldTerminalPathValue)
}

func (s WatchPlanAssignmentRequestsResponsePathSelectorResumeToken) WithArrayOfValues(values []string) *WatchPlanAssignmentRequestsResponse_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*WatchPlanAssignmentRequestsResponse_FieldTerminalPathArrayOfValues)
}

type WatchPlanAssignmentRequestsResponsePathSelectorSnapshotSize struct{}

func (WatchPlanAssignmentRequestsResponsePathSelectorSnapshotSize) FieldPath() *WatchPlanAssignmentRequestsResponse_FieldTerminalPath {
	return &WatchPlanAssignmentRequestsResponse_FieldTerminalPath{selector: WatchPlanAssignmentRequestsResponse_FieldPathSelectorSnapshotSize}
}

func (s WatchPlanAssignmentRequestsResponsePathSelectorSnapshotSize) WithValue(value int64) *WatchPlanAssignmentRequestsResponse_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*WatchPlanAssignmentRequestsResponse_FieldTerminalPathValue)
}

func (s WatchPlanAssignmentRequestsResponsePathSelectorSnapshotSize) WithArrayOfValues(values []int64) *WatchPlanAssignmentRequestsResponse_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*WatchPlanAssignmentRequestsResponse_FieldTerminalPathArrayOfValues)
}

type WatchPlanAssignmentRequestsResponsePathSelectorIsSoftReset struct{}

func (WatchPlanAssignmentRequestsResponsePathSelectorIsSoftReset) FieldPath() *WatchPlanAssignmentRequestsResponse_FieldTerminalPath {
	return &WatchPlanAssignmentRequestsResponse_FieldTerminalPath{selector: WatchPlanAssignmentRequestsResponse_FieldPathSelectorIsSoftReset}
}

func (s WatchPlanAssignmentRequestsResponsePathSelectorIsSoftReset) WithValue(value bool) *WatchPlanAssignmentRequestsResponse_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*WatchPlanAssignmentRequestsResponse_FieldTerminalPathValue)
}

func (s WatchPlanAssignmentRequestsResponsePathSelectorIsSoftReset) WithArrayOfValues(values []bool) *WatchPlanAssignmentRequestsResponse_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*WatchPlanAssignmentRequestsResponse_FieldTerminalPathArrayOfValues)
}

type WatchPlanAssignmentRequestsResponsePathSelectorIsHardReset struct{}

func (WatchPlanAssignmentRequestsResponsePathSelectorIsHardReset) FieldPath() *WatchPlanAssignmentRequestsResponse_FieldTerminalPath {
	return &WatchPlanAssignmentRequestsResponse_FieldTerminalPath{selector: WatchPlanAssignmentRequestsResponse_FieldPathSelectorIsHardReset}
}

func (s WatchPlanAssignmentRequestsResponsePathSelectorIsHardReset) WithValue(value bool) *WatchPlanAssignmentRequestsResponse_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*WatchPlanAssignmentRequestsResponse_FieldTerminalPathValue)
}

func (s WatchPlanAssignmentRequestsResponsePathSelectorIsHardReset) WithArrayOfValues(values []bool) *WatchPlanAssignmentRequestsResponse_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*WatchPlanAssignmentRequestsResponse_FieldTerminalPathArrayOfValues)
}

type WatchPlanAssignmentRequestsResponsePageTokenChangeFieldPathBuilder struct{}

func NewWatchPlanAssignmentRequestsResponsePageTokenChangeFieldPathBuilder() WatchPlanAssignmentRequestsResponsePageTokenChangeFieldPathBuilder {
	return WatchPlanAssignmentRequestsResponsePageTokenChangeFieldPathBuilder{}
}
func (WatchPlanAssignmentRequestsResponsePageTokenChangeFieldPathBuilder) PrevPageToken() WatchPlanAssignmentRequestsResponse_PageTokenChangePathSelectorPrevPageToken {
	return WatchPlanAssignmentRequestsResponse_PageTokenChangePathSelectorPrevPageToken{}
}
func (WatchPlanAssignmentRequestsResponsePageTokenChangeFieldPathBuilder) NextPageToken() WatchPlanAssignmentRequestsResponse_PageTokenChangePathSelectorNextPageToken {
	return WatchPlanAssignmentRequestsResponse_PageTokenChangePathSelectorNextPageToken{}
}

type WatchPlanAssignmentRequestsResponse_PageTokenChangePathSelectorPrevPageToken struct{}

func (WatchPlanAssignmentRequestsResponse_PageTokenChangePathSelectorPrevPageToken) FieldPath() *WatchPlanAssignmentRequestsResponsePageTokenChange_FieldTerminalPath {
	return &WatchPlanAssignmentRequestsResponsePageTokenChange_FieldTerminalPath{selector: WatchPlanAssignmentRequestsResponsePageTokenChange_FieldPathSelectorPrevPageToken}
}

func (s WatchPlanAssignmentRequestsResponse_PageTokenChangePathSelectorPrevPageToken) WithValue(value *plan_assignment_request.PagerCursor) *WatchPlanAssignmentRequestsResponsePageTokenChange_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*WatchPlanAssignmentRequestsResponsePageTokenChange_FieldTerminalPathValue)
}

func (s WatchPlanAssignmentRequestsResponse_PageTokenChangePathSelectorPrevPageToken) WithArrayOfValues(values []*plan_assignment_request.PagerCursor) *WatchPlanAssignmentRequestsResponsePageTokenChange_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*WatchPlanAssignmentRequestsResponsePageTokenChange_FieldTerminalPathArrayOfValues)
}

type WatchPlanAssignmentRequestsResponse_PageTokenChangePathSelectorNextPageToken struct{}

func (WatchPlanAssignmentRequestsResponse_PageTokenChangePathSelectorNextPageToken) FieldPath() *WatchPlanAssignmentRequestsResponsePageTokenChange_FieldTerminalPath {
	return &WatchPlanAssignmentRequestsResponsePageTokenChange_FieldTerminalPath{selector: WatchPlanAssignmentRequestsResponsePageTokenChange_FieldPathSelectorNextPageToken}
}

func (s WatchPlanAssignmentRequestsResponse_PageTokenChangePathSelectorNextPageToken) WithValue(value *plan_assignment_request.PagerCursor) *WatchPlanAssignmentRequestsResponsePageTokenChange_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*WatchPlanAssignmentRequestsResponsePageTokenChange_FieldTerminalPathValue)
}

func (s WatchPlanAssignmentRequestsResponse_PageTokenChangePathSelectorNextPageToken) WithArrayOfValues(values []*plan_assignment_request.PagerCursor) *WatchPlanAssignmentRequestsResponsePageTokenChange_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*WatchPlanAssignmentRequestsResponsePageTokenChange_FieldTerminalPathArrayOfValues)
}

type CreatePlanAssignmentRequestRequestFieldPathBuilder struct{}

func NewCreatePlanAssignmentRequestRequestFieldPathBuilder() CreatePlanAssignmentRequestRequestFieldPathBuilder {
	return CreatePlanAssignmentRequestRequestFieldPathBuilder{}
}
func (CreatePlanAssignmentRequestRequestFieldPathBuilder) Parent() CreatePlanAssignmentRequestRequestPathSelectorParent {
	return CreatePlanAssignmentRequestRequestPathSelectorParent{}
}
func (CreatePlanAssignmentRequestRequestFieldPathBuilder) PlanAssignmentRequest() CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequest {
	return CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequest{}
}

type CreatePlanAssignmentRequestRequestPathSelectorParent struct{}

func (CreatePlanAssignmentRequestRequestPathSelectorParent) FieldPath() *CreatePlanAssignmentRequestRequest_FieldTerminalPath {
	return &CreatePlanAssignmentRequestRequest_FieldTerminalPath{selector: CreatePlanAssignmentRequestRequest_FieldPathSelectorParent}
}

func (s CreatePlanAssignmentRequestRequestPathSelectorParent) WithValue(value *plan_assignment_request.ParentReference) *CreatePlanAssignmentRequestRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*CreatePlanAssignmentRequestRequest_FieldTerminalPathValue)
}

func (s CreatePlanAssignmentRequestRequestPathSelectorParent) WithArrayOfValues(values []*plan_assignment_request.ParentReference) *CreatePlanAssignmentRequestRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CreatePlanAssignmentRequestRequest_FieldTerminalPathArrayOfValues)
}

type CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequest struct{}

func (CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequest) FieldPath() *CreatePlanAssignmentRequestRequest_FieldTerminalPath {
	return &CreatePlanAssignmentRequestRequest_FieldTerminalPath{selector: CreatePlanAssignmentRequestRequest_FieldPathSelectorPlanAssignmentRequest}
}

func (s CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequest) WithValue(value *plan_assignment_request.PlanAssignmentRequest) *CreatePlanAssignmentRequestRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*CreatePlanAssignmentRequestRequest_FieldTerminalPathValue)
}

func (s CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequest) WithArrayOfValues(values []*plan_assignment_request.PlanAssignmentRequest) *CreatePlanAssignmentRequestRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CreatePlanAssignmentRequestRequest_FieldTerminalPathArrayOfValues)
}

func (CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequest) WithSubPath(subPath plan_assignment_request.PlanAssignmentRequest_FieldPath) *CreatePlanAssignmentRequestRequest_FieldSubPath {
	return &CreatePlanAssignmentRequestRequest_FieldSubPath{selector: CreatePlanAssignmentRequestRequest_FieldPathSelectorPlanAssignmentRequest, subPath: subPath}
}

func (s CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequest) WithSubValue(subPathValue plan_assignment_request.PlanAssignmentRequest_FieldPathValue) *CreatePlanAssignmentRequestRequest_FieldSubPathValue {
	return &CreatePlanAssignmentRequestRequest_FieldSubPathValue{CreatePlanAssignmentRequestRequest_FieldPath: s.WithSubPath(subPathValue), subPathValue: subPathValue}
}

func (s CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequest) WithSubArrayOfValues(subPathArrayOfValues plan_assignment_request.PlanAssignmentRequest_FieldPathArrayOfValues) *CreatePlanAssignmentRequestRequest_FieldSubPathArrayOfValues {
	return &CreatePlanAssignmentRequestRequest_FieldSubPathArrayOfValues{CreatePlanAssignmentRequestRequest_FieldPath: s.WithSubPath(subPathArrayOfValues), subPathArrayOfValues: subPathArrayOfValues}
}

func (s CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequest) WithSubArrayItemValue(subPathArrayItemValue plan_assignment_request.PlanAssignmentRequest_FieldPathArrayItemValue) *CreatePlanAssignmentRequestRequest_FieldSubPathArrayItemValue {
	return &CreatePlanAssignmentRequestRequest_FieldSubPathArrayItemValue{CreatePlanAssignmentRequestRequest_FieldPath: s.WithSubPath(subPathArrayItemValue), subPathItemValue: subPathArrayItemValue}
}

func (CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequest) Name() CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestName {
	return CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestName{}
}

func (CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequest) Request() CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestRequest {
	return CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestRequest{}
}

func (CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequest) Service() CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestService {
	return CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestService{}
}

func (CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequest) Approver() CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestApprover {
	return CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestApprover{}
}

func (CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequest) Status() CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestStatus {
	return CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestStatus{}
}

func (CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequest) Metadata() CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestMetadata {
	return CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestMetadata{}
}

type CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestName struct{}

func (CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestName) FieldPath() *CreatePlanAssignmentRequestRequest_FieldSubPath {
	return &CreatePlanAssignmentRequestRequest_FieldSubPath{
		selector: CreatePlanAssignmentRequestRequest_FieldPathSelectorPlanAssignmentRequest,
		subPath:  plan_assignment_request.NewPlanAssignmentRequestFieldPathBuilder().Name().FieldPath(),
	}
}

func (s CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestName) WithValue(value *plan_assignment_request.Name) *CreatePlanAssignmentRequestRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*CreatePlanAssignmentRequestRequest_FieldSubPathValue)
}

func (s CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestName) WithArrayOfValues(values []*plan_assignment_request.Name) *CreatePlanAssignmentRequestRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CreatePlanAssignmentRequestRequest_FieldSubPathArrayOfValues)
}

type CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestRequest struct{}

func (CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestRequest) FieldPath() *CreatePlanAssignmentRequestRequest_FieldSubPath {
	return &CreatePlanAssignmentRequestRequest_FieldSubPath{
		selector: CreatePlanAssignmentRequestRequest_FieldPathSelectorPlanAssignmentRequest,
		subPath:  plan_assignment_request.NewPlanAssignmentRequestFieldPathBuilder().Request().FieldPath(),
	}
}

func (s CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestRequest) WithValue(value *plan_assignment_request.PlanAssignmentRequest_Request) *CreatePlanAssignmentRequestRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*CreatePlanAssignmentRequestRequest_FieldSubPathValue)
}

func (s CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestRequest) WithArrayOfValues(values []*plan_assignment_request.PlanAssignmentRequest_Request) *CreatePlanAssignmentRequestRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CreatePlanAssignmentRequestRequest_FieldSubPathArrayOfValues)
}

func (CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestRequest) Assign() CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestRequestAssign {
	return CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestRequestAssign{}
}

func (CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestRequest) Extend() CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestRequestExtend {
	return CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestRequestExtend{}
}

func (CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestRequest) Redistribute() CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestRequestRedistribute {
	return CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestRequestRedistribute{}
}

func (CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestRequest) Unassign() CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestRequestUnassign {
	return CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestRequestUnassign{}
}

type CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestRequestAssign struct{}

func (CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestRequestAssign) FieldPath() *CreatePlanAssignmentRequestRequest_FieldSubPath {
	return &CreatePlanAssignmentRequestRequest_FieldSubPath{
		selector: CreatePlanAssignmentRequestRequest_FieldPathSelectorPlanAssignmentRequest,
		subPath:  plan_assignment_request.NewPlanAssignmentRequestFieldPathBuilder().Request().Assign().FieldPath(),
	}
}

func (s CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestRequestAssign) WithValue(value *plan_assignment_request.PlanAssignmentRequest_Request_Assign) *CreatePlanAssignmentRequestRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*CreatePlanAssignmentRequestRequest_FieldSubPathValue)
}

func (s CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestRequestAssign) WithArrayOfValues(values []*plan_assignment_request.PlanAssignmentRequest_Request_Assign) *CreatePlanAssignmentRequestRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CreatePlanAssignmentRequestRequest_FieldSubPathArrayOfValues)
}

func (CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestRequestAssign) Plan() CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestRequestAssignPlan {
	return CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestRequestAssignPlan{}
}

func (CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestRequestAssign) Extensions() CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestRequestAssignExtensions {
	return CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestRequestAssignExtensions{}
}

func (CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestRequestAssign) RegionalDistributions() CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestRequestAssignRegionalDistributions {
	return CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestRequestAssignRegionalDistributions{}
}

type CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestRequestAssignPlan struct{}

func (CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestRequestAssignPlan) FieldPath() *CreatePlanAssignmentRequestRequest_FieldSubPath {
	return &CreatePlanAssignmentRequestRequest_FieldSubPath{
		selector: CreatePlanAssignmentRequestRequest_FieldPathSelectorPlanAssignmentRequest,
		subPath:  plan_assignment_request.NewPlanAssignmentRequestFieldPathBuilder().Request().Assign().Plan().FieldPath(),
	}
}

func (s CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestRequestAssignPlan) WithValue(value *plan.Reference) *CreatePlanAssignmentRequestRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*CreatePlanAssignmentRequestRequest_FieldSubPathValue)
}

func (s CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestRequestAssignPlan) WithArrayOfValues(values []*plan.Reference) *CreatePlanAssignmentRequestRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CreatePlanAssignmentRequestRequest_FieldSubPathArrayOfValues)
}

type CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestRequestAssignExtensions struct{}

func (CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestRequestAssignExtensions) FieldPath() *CreatePlanAssignmentRequestRequest_FieldSubPath {
	return &CreatePlanAssignmentRequestRequest_FieldSubPath{
		selector: CreatePlanAssignmentRequestRequest_FieldPathSelectorPlanAssignmentRequest,
		subPath:  plan_assignment_request.NewPlanAssignmentRequestFieldPathBuilder().Request().Assign().Extensions().FieldPath(),
	}
}

func (s CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestRequestAssignExtensions) WithValue(value []*common.Allowance) *CreatePlanAssignmentRequestRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*CreatePlanAssignmentRequestRequest_FieldSubPathValue)
}

func (s CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestRequestAssignExtensions) WithArrayOfValues(values [][]*common.Allowance) *CreatePlanAssignmentRequestRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CreatePlanAssignmentRequestRequest_FieldSubPathArrayOfValues)
}

func (s CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestRequestAssignExtensions) WithItemValue(value *common.Allowance) *CreatePlanAssignmentRequestRequest_FieldSubPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*CreatePlanAssignmentRequestRequest_FieldSubPathArrayItemValue)
}

func (CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestRequestAssignExtensions) Resource() CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestRequestAssignExtensionsResource {
	return CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestRequestAssignExtensionsResource{}
}

func (CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestRequestAssignExtensions) Value() CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestRequestAssignExtensionsValue {
	return CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestRequestAssignExtensionsValue{}
}

type CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestRequestAssignExtensionsResource struct{}

func (CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestRequestAssignExtensionsResource) FieldPath() *CreatePlanAssignmentRequestRequest_FieldSubPath {
	return &CreatePlanAssignmentRequestRequest_FieldSubPath{
		selector: CreatePlanAssignmentRequestRequest_FieldPathSelectorPlanAssignmentRequest,
		subPath:  plan_assignment_request.NewPlanAssignmentRequestFieldPathBuilder().Request().Assign().Extensions().Resource().FieldPath(),
	}
}

func (s CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestRequestAssignExtensionsResource) WithValue(value *meta_resource.Reference) *CreatePlanAssignmentRequestRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*CreatePlanAssignmentRequestRequest_FieldSubPathValue)
}

func (s CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestRequestAssignExtensionsResource) WithArrayOfValues(values []*meta_resource.Reference) *CreatePlanAssignmentRequestRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CreatePlanAssignmentRequestRequest_FieldSubPathArrayOfValues)
}

type CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestRequestAssignExtensionsValue struct{}

func (CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestRequestAssignExtensionsValue) FieldPath() *CreatePlanAssignmentRequestRequest_FieldSubPath {
	return &CreatePlanAssignmentRequestRequest_FieldSubPath{
		selector: CreatePlanAssignmentRequestRequest_FieldPathSelectorPlanAssignmentRequest,
		subPath:  plan_assignment_request.NewPlanAssignmentRequestFieldPathBuilder().Request().Assign().Extensions().Value().FieldPath(),
	}
}

func (s CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestRequestAssignExtensionsValue) WithValue(value int64) *CreatePlanAssignmentRequestRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*CreatePlanAssignmentRequestRequest_FieldSubPathValue)
}

func (s CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestRequestAssignExtensionsValue) WithArrayOfValues(values []int64) *CreatePlanAssignmentRequestRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CreatePlanAssignmentRequestRequest_FieldSubPathArrayOfValues)
}

type CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestRequestAssignRegionalDistributions struct{}

func (CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestRequestAssignRegionalDistributions) FieldPath() *CreatePlanAssignmentRequestRequest_FieldSubPath {
	return &CreatePlanAssignmentRequestRequest_FieldSubPath{
		selector: CreatePlanAssignmentRequestRequest_FieldPathSelectorPlanAssignmentRequest,
		subPath:  plan_assignment_request.NewPlanAssignmentRequestFieldPathBuilder().Request().Assign().RegionalDistributions().FieldPath(),
	}
}

func (s CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestRequestAssignRegionalDistributions) WithValue(value []*common.RegionalDistribution) *CreatePlanAssignmentRequestRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*CreatePlanAssignmentRequestRequest_FieldSubPathValue)
}

func (s CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestRequestAssignRegionalDistributions) WithArrayOfValues(values [][]*common.RegionalDistribution) *CreatePlanAssignmentRequestRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CreatePlanAssignmentRequestRequest_FieldSubPathArrayOfValues)
}

func (s CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestRequestAssignRegionalDistributions) WithItemValue(value *common.RegionalDistribution) *CreatePlanAssignmentRequestRequest_FieldSubPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*CreatePlanAssignmentRequestRequest_FieldSubPathArrayItemValue)
}

func (CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestRequestAssignRegionalDistributions) Resource() CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestRequestAssignRegionalDistributionsResource {
	return CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestRequestAssignRegionalDistributionsResource{}
}

func (CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestRequestAssignRegionalDistributions) LimitsByRegion() CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestRequestAssignRegionalDistributionsLimitsByRegion {
	return CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestRequestAssignRegionalDistributionsLimitsByRegion{}
}

type CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestRequestAssignRegionalDistributionsResource struct{}

func (CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestRequestAssignRegionalDistributionsResource) FieldPath() *CreatePlanAssignmentRequestRequest_FieldSubPath {
	return &CreatePlanAssignmentRequestRequest_FieldSubPath{
		selector: CreatePlanAssignmentRequestRequest_FieldPathSelectorPlanAssignmentRequest,
		subPath:  plan_assignment_request.NewPlanAssignmentRequestFieldPathBuilder().Request().Assign().RegionalDistributions().Resource().FieldPath(),
	}
}

func (s CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestRequestAssignRegionalDistributionsResource) WithValue(value *meta_resource.Reference) *CreatePlanAssignmentRequestRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*CreatePlanAssignmentRequestRequest_FieldSubPathValue)
}

func (s CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestRequestAssignRegionalDistributionsResource) WithArrayOfValues(values []*meta_resource.Reference) *CreatePlanAssignmentRequestRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CreatePlanAssignmentRequestRequest_FieldSubPathArrayOfValues)
}

type CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestRequestAssignRegionalDistributionsLimitsByRegion struct{}

func (CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestRequestAssignRegionalDistributionsLimitsByRegion) FieldPath() *CreatePlanAssignmentRequestRequest_FieldSubPath {
	return &CreatePlanAssignmentRequestRequest_FieldSubPath{
		selector: CreatePlanAssignmentRequestRequest_FieldPathSelectorPlanAssignmentRequest,
		subPath:  plan_assignment_request.NewPlanAssignmentRequestFieldPathBuilder().Request().Assign().RegionalDistributions().LimitsByRegion().FieldPath(),
	}
}

func (s CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestRequestAssignRegionalDistributionsLimitsByRegion) WithValue(value map[string]int64) *CreatePlanAssignmentRequestRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*CreatePlanAssignmentRequestRequest_FieldSubPathValue)
}

func (s CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestRequestAssignRegionalDistributionsLimitsByRegion) WithArrayOfValues(values []map[string]int64) *CreatePlanAssignmentRequestRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CreatePlanAssignmentRequestRequest_FieldSubPathArrayOfValues)
}

func (CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestRequestAssignRegionalDistributionsLimitsByRegion) WithKey(key string) CreatePlanAssignmentRequestRequestMapPathSelectorPlanAssignmentRequestRequestAssignRegionalDistributionsLimitsByRegion {
	return CreatePlanAssignmentRequestRequestMapPathSelectorPlanAssignmentRequestRequestAssignRegionalDistributionsLimitsByRegion{key: key}
}

type CreatePlanAssignmentRequestRequestMapPathSelectorPlanAssignmentRequestRequestAssignRegionalDistributionsLimitsByRegion struct {
	key string
}

func (s CreatePlanAssignmentRequestRequestMapPathSelectorPlanAssignmentRequestRequestAssignRegionalDistributionsLimitsByRegion) FieldPath() *CreatePlanAssignmentRequestRequest_FieldSubPath {
	return &CreatePlanAssignmentRequestRequest_FieldSubPath{
		selector: CreatePlanAssignmentRequestRequest_FieldPathSelectorPlanAssignmentRequest,
		subPath:  plan_assignment_request.NewPlanAssignmentRequestFieldPathBuilder().Request().Assign().RegionalDistributions().LimitsByRegion().WithKey(s.key).FieldPath(),
	}
}

func (s CreatePlanAssignmentRequestRequestMapPathSelectorPlanAssignmentRequestRequestAssignRegionalDistributionsLimitsByRegion) WithValue(value int64) *CreatePlanAssignmentRequestRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*CreatePlanAssignmentRequestRequest_FieldSubPathValue)
}

func (s CreatePlanAssignmentRequestRequestMapPathSelectorPlanAssignmentRequestRequestAssignRegionalDistributionsLimitsByRegion) WithArrayOfValues(values []int64) *CreatePlanAssignmentRequestRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CreatePlanAssignmentRequestRequest_FieldSubPathArrayOfValues)
}

type CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestRequestExtend struct{}

func (CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestRequestExtend) FieldPath() *CreatePlanAssignmentRequestRequest_FieldSubPath {
	return &CreatePlanAssignmentRequestRequest_FieldSubPath{
		selector: CreatePlanAssignmentRequestRequest_FieldPathSelectorPlanAssignmentRequest,
		subPath:  plan_assignment_request.NewPlanAssignmentRequestFieldPathBuilder().Request().Extend().FieldPath(),
	}
}

func (s CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestRequestExtend) WithValue(value *plan_assignment_request.PlanAssignmentRequest_Request_Extend) *CreatePlanAssignmentRequestRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*CreatePlanAssignmentRequestRequest_FieldSubPathValue)
}

func (s CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestRequestExtend) WithArrayOfValues(values []*plan_assignment_request.PlanAssignmentRequest_Request_Extend) *CreatePlanAssignmentRequestRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CreatePlanAssignmentRequestRequest_FieldSubPathArrayOfValues)
}

func (CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestRequestExtend) Assignment() CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestRequestExtendAssignment {
	return CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestRequestExtendAssignment{}
}

func (CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestRequestExtend) Additions() CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestRequestExtendAdditions {
	return CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestRequestExtendAdditions{}
}

func (CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestRequestExtend) RegionalDistributions() CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestRequestExtendRegionalDistributions {
	return CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestRequestExtendRegionalDistributions{}
}

type CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestRequestExtendAssignment struct{}

func (CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestRequestExtendAssignment) FieldPath() *CreatePlanAssignmentRequestRequest_FieldSubPath {
	return &CreatePlanAssignmentRequestRequest_FieldSubPath{
		selector: CreatePlanAssignmentRequestRequest_FieldPathSelectorPlanAssignmentRequest,
		subPath:  plan_assignment_request.NewPlanAssignmentRequestFieldPathBuilder().Request().Extend().Assignment().FieldPath(),
	}
}

func (s CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestRequestExtendAssignment) WithValue(value *plan_assignment.Reference) *CreatePlanAssignmentRequestRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*CreatePlanAssignmentRequestRequest_FieldSubPathValue)
}

func (s CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestRequestExtendAssignment) WithArrayOfValues(values []*plan_assignment.Reference) *CreatePlanAssignmentRequestRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CreatePlanAssignmentRequestRequest_FieldSubPathArrayOfValues)
}

type CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestRequestExtendAdditions struct{}

func (CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestRequestExtendAdditions) FieldPath() *CreatePlanAssignmentRequestRequest_FieldSubPath {
	return &CreatePlanAssignmentRequestRequest_FieldSubPath{
		selector: CreatePlanAssignmentRequestRequest_FieldPathSelectorPlanAssignmentRequest,
		subPath:  plan_assignment_request.NewPlanAssignmentRequestFieldPathBuilder().Request().Extend().Additions().FieldPath(),
	}
}

func (s CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestRequestExtendAdditions) WithValue(value []*common.Allowance) *CreatePlanAssignmentRequestRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*CreatePlanAssignmentRequestRequest_FieldSubPathValue)
}

func (s CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestRequestExtendAdditions) WithArrayOfValues(values [][]*common.Allowance) *CreatePlanAssignmentRequestRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CreatePlanAssignmentRequestRequest_FieldSubPathArrayOfValues)
}

func (s CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestRequestExtendAdditions) WithItemValue(value *common.Allowance) *CreatePlanAssignmentRequestRequest_FieldSubPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*CreatePlanAssignmentRequestRequest_FieldSubPathArrayItemValue)
}

func (CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestRequestExtendAdditions) Resource() CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestRequestExtendAdditionsResource {
	return CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestRequestExtendAdditionsResource{}
}

func (CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestRequestExtendAdditions) Value() CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestRequestExtendAdditionsValue {
	return CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestRequestExtendAdditionsValue{}
}

type CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestRequestExtendAdditionsResource struct{}

func (CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestRequestExtendAdditionsResource) FieldPath() *CreatePlanAssignmentRequestRequest_FieldSubPath {
	return &CreatePlanAssignmentRequestRequest_FieldSubPath{
		selector: CreatePlanAssignmentRequestRequest_FieldPathSelectorPlanAssignmentRequest,
		subPath:  plan_assignment_request.NewPlanAssignmentRequestFieldPathBuilder().Request().Extend().Additions().Resource().FieldPath(),
	}
}

func (s CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestRequestExtendAdditionsResource) WithValue(value *meta_resource.Reference) *CreatePlanAssignmentRequestRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*CreatePlanAssignmentRequestRequest_FieldSubPathValue)
}

func (s CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestRequestExtendAdditionsResource) WithArrayOfValues(values []*meta_resource.Reference) *CreatePlanAssignmentRequestRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CreatePlanAssignmentRequestRequest_FieldSubPathArrayOfValues)
}

type CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestRequestExtendAdditionsValue struct{}

func (CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestRequestExtendAdditionsValue) FieldPath() *CreatePlanAssignmentRequestRequest_FieldSubPath {
	return &CreatePlanAssignmentRequestRequest_FieldSubPath{
		selector: CreatePlanAssignmentRequestRequest_FieldPathSelectorPlanAssignmentRequest,
		subPath:  plan_assignment_request.NewPlanAssignmentRequestFieldPathBuilder().Request().Extend().Additions().Value().FieldPath(),
	}
}

func (s CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestRequestExtendAdditionsValue) WithValue(value int64) *CreatePlanAssignmentRequestRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*CreatePlanAssignmentRequestRequest_FieldSubPathValue)
}

func (s CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestRequestExtendAdditionsValue) WithArrayOfValues(values []int64) *CreatePlanAssignmentRequestRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CreatePlanAssignmentRequestRequest_FieldSubPathArrayOfValues)
}

type CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestRequestExtendRegionalDistributions struct{}

func (CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestRequestExtendRegionalDistributions) FieldPath() *CreatePlanAssignmentRequestRequest_FieldSubPath {
	return &CreatePlanAssignmentRequestRequest_FieldSubPath{
		selector: CreatePlanAssignmentRequestRequest_FieldPathSelectorPlanAssignmentRequest,
		subPath:  plan_assignment_request.NewPlanAssignmentRequestFieldPathBuilder().Request().Extend().RegionalDistributions().FieldPath(),
	}
}

func (s CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestRequestExtendRegionalDistributions) WithValue(value []*common.RegionalDistribution) *CreatePlanAssignmentRequestRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*CreatePlanAssignmentRequestRequest_FieldSubPathValue)
}

func (s CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestRequestExtendRegionalDistributions) WithArrayOfValues(values [][]*common.RegionalDistribution) *CreatePlanAssignmentRequestRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CreatePlanAssignmentRequestRequest_FieldSubPathArrayOfValues)
}

func (s CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestRequestExtendRegionalDistributions) WithItemValue(value *common.RegionalDistribution) *CreatePlanAssignmentRequestRequest_FieldSubPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*CreatePlanAssignmentRequestRequest_FieldSubPathArrayItemValue)
}

func (CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestRequestExtendRegionalDistributions) Resource() CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestRequestExtendRegionalDistributionsResource {
	return CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestRequestExtendRegionalDistributionsResource{}
}

func (CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestRequestExtendRegionalDistributions) LimitsByRegion() CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestRequestExtendRegionalDistributionsLimitsByRegion {
	return CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestRequestExtendRegionalDistributionsLimitsByRegion{}
}

type CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestRequestExtendRegionalDistributionsResource struct{}

func (CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestRequestExtendRegionalDistributionsResource) FieldPath() *CreatePlanAssignmentRequestRequest_FieldSubPath {
	return &CreatePlanAssignmentRequestRequest_FieldSubPath{
		selector: CreatePlanAssignmentRequestRequest_FieldPathSelectorPlanAssignmentRequest,
		subPath:  plan_assignment_request.NewPlanAssignmentRequestFieldPathBuilder().Request().Extend().RegionalDistributions().Resource().FieldPath(),
	}
}

func (s CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestRequestExtendRegionalDistributionsResource) WithValue(value *meta_resource.Reference) *CreatePlanAssignmentRequestRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*CreatePlanAssignmentRequestRequest_FieldSubPathValue)
}

func (s CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestRequestExtendRegionalDistributionsResource) WithArrayOfValues(values []*meta_resource.Reference) *CreatePlanAssignmentRequestRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CreatePlanAssignmentRequestRequest_FieldSubPathArrayOfValues)
}

type CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestRequestExtendRegionalDistributionsLimitsByRegion struct{}

func (CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestRequestExtendRegionalDistributionsLimitsByRegion) FieldPath() *CreatePlanAssignmentRequestRequest_FieldSubPath {
	return &CreatePlanAssignmentRequestRequest_FieldSubPath{
		selector: CreatePlanAssignmentRequestRequest_FieldPathSelectorPlanAssignmentRequest,
		subPath:  plan_assignment_request.NewPlanAssignmentRequestFieldPathBuilder().Request().Extend().RegionalDistributions().LimitsByRegion().FieldPath(),
	}
}

func (s CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestRequestExtendRegionalDistributionsLimitsByRegion) WithValue(value map[string]int64) *CreatePlanAssignmentRequestRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*CreatePlanAssignmentRequestRequest_FieldSubPathValue)
}

func (s CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestRequestExtendRegionalDistributionsLimitsByRegion) WithArrayOfValues(values []map[string]int64) *CreatePlanAssignmentRequestRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CreatePlanAssignmentRequestRequest_FieldSubPathArrayOfValues)
}

func (CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestRequestExtendRegionalDistributionsLimitsByRegion) WithKey(key string) CreatePlanAssignmentRequestRequestMapPathSelectorPlanAssignmentRequestRequestExtendRegionalDistributionsLimitsByRegion {
	return CreatePlanAssignmentRequestRequestMapPathSelectorPlanAssignmentRequestRequestExtendRegionalDistributionsLimitsByRegion{key: key}
}

type CreatePlanAssignmentRequestRequestMapPathSelectorPlanAssignmentRequestRequestExtendRegionalDistributionsLimitsByRegion struct {
	key string
}

func (s CreatePlanAssignmentRequestRequestMapPathSelectorPlanAssignmentRequestRequestExtendRegionalDistributionsLimitsByRegion) FieldPath() *CreatePlanAssignmentRequestRequest_FieldSubPath {
	return &CreatePlanAssignmentRequestRequest_FieldSubPath{
		selector: CreatePlanAssignmentRequestRequest_FieldPathSelectorPlanAssignmentRequest,
		subPath:  plan_assignment_request.NewPlanAssignmentRequestFieldPathBuilder().Request().Extend().RegionalDistributions().LimitsByRegion().WithKey(s.key).FieldPath(),
	}
}

func (s CreatePlanAssignmentRequestRequestMapPathSelectorPlanAssignmentRequestRequestExtendRegionalDistributionsLimitsByRegion) WithValue(value int64) *CreatePlanAssignmentRequestRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*CreatePlanAssignmentRequestRequest_FieldSubPathValue)
}

func (s CreatePlanAssignmentRequestRequestMapPathSelectorPlanAssignmentRequestRequestExtendRegionalDistributionsLimitsByRegion) WithArrayOfValues(values []int64) *CreatePlanAssignmentRequestRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CreatePlanAssignmentRequestRequest_FieldSubPathArrayOfValues)
}

type CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestRequestRedistribute struct{}

func (CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestRequestRedistribute) FieldPath() *CreatePlanAssignmentRequestRequest_FieldSubPath {
	return &CreatePlanAssignmentRequestRequest_FieldSubPath{
		selector: CreatePlanAssignmentRequestRequest_FieldPathSelectorPlanAssignmentRequest,
		subPath:  plan_assignment_request.NewPlanAssignmentRequestFieldPathBuilder().Request().Redistribute().FieldPath(),
	}
}

func (s CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestRequestRedistribute) WithValue(value *plan_assignment_request.PlanAssignmentRequest_Request_Redistribute) *CreatePlanAssignmentRequestRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*CreatePlanAssignmentRequestRequest_FieldSubPathValue)
}

func (s CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestRequestRedistribute) WithArrayOfValues(values []*plan_assignment_request.PlanAssignmentRequest_Request_Redistribute) *CreatePlanAssignmentRequestRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CreatePlanAssignmentRequestRequest_FieldSubPathArrayOfValues)
}

func (CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestRequestRedistribute) Assignment() CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestRequestRedistributeAssignment {
	return CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestRequestRedistributeAssignment{}
}

func (CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestRequestRedistribute) RegionalDistributions() CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestRequestRedistributeRegionalDistributions {
	return CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestRequestRedistributeRegionalDistributions{}
}

type CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestRequestRedistributeAssignment struct{}

func (CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestRequestRedistributeAssignment) FieldPath() *CreatePlanAssignmentRequestRequest_FieldSubPath {
	return &CreatePlanAssignmentRequestRequest_FieldSubPath{
		selector: CreatePlanAssignmentRequestRequest_FieldPathSelectorPlanAssignmentRequest,
		subPath:  plan_assignment_request.NewPlanAssignmentRequestFieldPathBuilder().Request().Redistribute().Assignment().FieldPath(),
	}
}

func (s CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestRequestRedistributeAssignment) WithValue(value *plan_assignment.Reference) *CreatePlanAssignmentRequestRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*CreatePlanAssignmentRequestRequest_FieldSubPathValue)
}

func (s CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestRequestRedistributeAssignment) WithArrayOfValues(values []*plan_assignment.Reference) *CreatePlanAssignmentRequestRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CreatePlanAssignmentRequestRequest_FieldSubPathArrayOfValues)
}

type CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestRequestRedistributeRegionalDistributions struct{}

func (CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestRequestRedistributeRegionalDistributions) FieldPath() *CreatePlanAssignmentRequestRequest_FieldSubPath {
	return &CreatePlanAssignmentRequestRequest_FieldSubPath{
		selector: CreatePlanAssignmentRequestRequest_FieldPathSelectorPlanAssignmentRequest,
		subPath:  plan_assignment_request.NewPlanAssignmentRequestFieldPathBuilder().Request().Redistribute().RegionalDistributions().FieldPath(),
	}
}

func (s CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestRequestRedistributeRegionalDistributions) WithValue(value []*common.RegionalDistribution) *CreatePlanAssignmentRequestRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*CreatePlanAssignmentRequestRequest_FieldSubPathValue)
}

func (s CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestRequestRedistributeRegionalDistributions) WithArrayOfValues(values [][]*common.RegionalDistribution) *CreatePlanAssignmentRequestRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CreatePlanAssignmentRequestRequest_FieldSubPathArrayOfValues)
}

func (s CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestRequestRedistributeRegionalDistributions) WithItemValue(value *common.RegionalDistribution) *CreatePlanAssignmentRequestRequest_FieldSubPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*CreatePlanAssignmentRequestRequest_FieldSubPathArrayItemValue)
}

func (CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestRequestRedistributeRegionalDistributions) Resource() CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestRequestRedistributeRegionalDistributionsResource {
	return CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestRequestRedistributeRegionalDistributionsResource{}
}

func (CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestRequestRedistributeRegionalDistributions) LimitsByRegion() CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestRequestRedistributeRegionalDistributionsLimitsByRegion {
	return CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestRequestRedistributeRegionalDistributionsLimitsByRegion{}
}

type CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestRequestRedistributeRegionalDistributionsResource struct{}

func (CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestRequestRedistributeRegionalDistributionsResource) FieldPath() *CreatePlanAssignmentRequestRequest_FieldSubPath {
	return &CreatePlanAssignmentRequestRequest_FieldSubPath{
		selector: CreatePlanAssignmentRequestRequest_FieldPathSelectorPlanAssignmentRequest,
		subPath:  plan_assignment_request.NewPlanAssignmentRequestFieldPathBuilder().Request().Redistribute().RegionalDistributions().Resource().FieldPath(),
	}
}

func (s CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestRequestRedistributeRegionalDistributionsResource) WithValue(value *meta_resource.Reference) *CreatePlanAssignmentRequestRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*CreatePlanAssignmentRequestRequest_FieldSubPathValue)
}

func (s CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestRequestRedistributeRegionalDistributionsResource) WithArrayOfValues(values []*meta_resource.Reference) *CreatePlanAssignmentRequestRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CreatePlanAssignmentRequestRequest_FieldSubPathArrayOfValues)
}

type CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestRequestRedistributeRegionalDistributionsLimitsByRegion struct{}

func (CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestRequestRedistributeRegionalDistributionsLimitsByRegion) FieldPath() *CreatePlanAssignmentRequestRequest_FieldSubPath {
	return &CreatePlanAssignmentRequestRequest_FieldSubPath{
		selector: CreatePlanAssignmentRequestRequest_FieldPathSelectorPlanAssignmentRequest,
		subPath:  plan_assignment_request.NewPlanAssignmentRequestFieldPathBuilder().Request().Redistribute().RegionalDistributions().LimitsByRegion().FieldPath(),
	}
}

func (s CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestRequestRedistributeRegionalDistributionsLimitsByRegion) WithValue(value map[string]int64) *CreatePlanAssignmentRequestRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*CreatePlanAssignmentRequestRequest_FieldSubPathValue)
}

func (s CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestRequestRedistributeRegionalDistributionsLimitsByRegion) WithArrayOfValues(values []map[string]int64) *CreatePlanAssignmentRequestRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CreatePlanAssignmentRequestRequest_FieldSubPathArrayOfValues)
}

func (CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestRequestRedistributeRegionalDistributionsLimitsByRegion) WithKey(key string) CreatePlanAssignmentRequestRequestMapPathSelectorPlanAssignmentRequestRequestRedistributeRegionalDistributionsLimitsByRegion {
	return CreatePlanAssignmentRequestRequestMapPathSelectorPlanAssignmentRequestRequestRedistributeRegionalDistributionsLimitsByRegion{key: key}
}

type CreatePlanAssignmentRequestRequestMapPathSelectorPlanAssignmentRequestRequestRedistributeRegionalDistributionsLimitsByRegion struct {
	key string
}

func (s CreatePlanAssignmentRequestRequestMapPathSelectorPlanAssignmentRequestRequestRedistributeRegionalDistributionsLimitsByRegion) FieldPath() *CreatePlanAssignmentRequestRequest_FieldSubPath {
	return &CreatePlanAssignmentRequestRequest_FieldSubPath{
		selector: CreatePlanAssignmentRequestRequest_FieldPathSelectorPlanAssignmentRequest,
		subPath:  plan_assignment_request.NewPlanAssignmentRequestFieldPathBuilder().Request().Redistribute().RegionalDistributions().LimitsByRegion().WithKey(s.key).FieldPath(),
	}
}

func (s CreatePlanAssignmentRequestRequestMapPathSelectorPlanAssignmentRequestRequestRedistributeRegionalDistributionsLimitsByRegion) WithValue(value int64) *CreatePlanAssignmentRequestRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*CreatePlanAssignmentRequestRequest_FieldSubPathValue)
}

func (s CreatePlanAssignmentRequestRequestMapPathSelectorPlanAssignmentRequestRequestRedistributeRegionalDistributionsLimitsByRegion) WithArrayOfValues(values []int64) *CreatePlanAssignmentRequestRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CreatePlanAssignmentRequestRequest_FieldSubPathArrayOfValues)
}

type CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestRequestUnassign struct{}

func (CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestRequestUnassign) FieldPath() *CreatePlanAssignmentRequestRequest_FieldSubPath {
	return &CreatePlanAssignmentRequestRequest_FieldSubPath{
		selector: CreatePlanAssignmentRequestRequest_FieldPathSelectorPlanAssignmentRequest,
		subPath:  plan_assignment_request.NewPlanAssignmentRequestFieldPathBuilder().Request().Unassign().FieldPath(),
	}
}

func (s CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestRequestUnassign) WithValue(value *plan_assignment_request.PlanAssignmentRequest_Request_Unassign) *CreatePlanAssignmentRequestRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*CreatePlanAssignmentRequestRequest_FieldSubPathValue)
}

func (s CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestRequestUnassign) WithArrayOfValues(values []*plan_assignment_request.PlanAssignmentRequest_Request_Unassign) *CreatePlanAssignmentRequestRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CreatePlanAssignmentRequestRequest_FieldSubPathArrayOfValues)
}

func (CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestRequestUnassign) Assignment() CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestRequestUnassignAssignment {
	return CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestRequestUnassignAssignment{}
}

type CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestRequestUnassignAssignment struct{}

func (CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestRequestUnassignAssignment) FieldPath() *CreatePlanAssignmentRequestRequest_FieldSubPath {
	return &CreatePlanAssignmentRequestRequest_FieldSubPath{
		selector: CreatePlanAssignmentRequestRequest_FieldPathSelectorPlanAssignmentRequest,
		subPath:  plan_assignment_request.NewPlanAssignmentRequestFieldPathBuilder().Request().Unassign().Assignment().FieldPath(),
	}
}

func (s CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestRequestUnassignAssignment) WithValue(value *plan_assignment.Reference) *CreatePlanAssignmentRequestRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*CreatePlanAssignmentRequestRequest_FieldSubPathValue)
}

func (s CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestRequestUnassignAssignment) WithArrayOfValues(values []*plan_assignment.Reference) *CreatePlanAssignmentRequestRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CreatePlanAssignmentRequestRequest_FieldSubPathArrayOfValues)
}

type CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestService struct{}

func (CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestService) FieldPath() *CreatePlanAssignmentRequestRequest_FieldSubPath {
	return &CreatePlanAssignmentRequestRequest_FieldSubPath{
		selector: CreatePlanAssignmentRequestRequest_FieldPathSelectorPlanAssignmentRequest,
		subPath:  plan_assignment_request.NewPlanAssignmentRequestFieldPathBuilder().Service().FieldPath(),
	}
}

func (s CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestService) WithValue(value *meta_service.Reference) *CreatePlanAssignmentRequestRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*CreatePlanAssignmentRequestRequest_FieldSubPathValue)
}

func (s CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestService) WithArrayOfValues(values []*meta_service.Reference) *CreatePlanAssignmentRequestRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CreatePlanAssignmentRequestRequest_FieldSubPathArrayOfValues)
}

type CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestApprover struct{}

func (CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestApprover) FieldPath() *CreatePlanAssignmentRequestRequest_FieldSubPath {
	return &CreatePlanAssignmentRequestRequest_FieldSubPath{
		selector: CreatePlanAssignmentRequestRequest_FieldPathSelectorPlanAssignmentRequest,
		subPath:  plan_assignment_request.NewPlanAssignmentRequestFieldPathBuilder().Approver().FieldPath(),
	}
}

func (s CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestApprover) WithValue(value *iam_organization.Reference) *CreatePlanAssignmentRequestRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*CreatePlanAssignmentRequestRequest_FieldSubPathValue)
}

func (s CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestApprover) WithArrayOfValues(values []*iam_organization.Reference) *CreatePlanAssignmentRequestRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CreatePlanAssignmentRequestRequest_FieldSubPathArrayOfValues)
}

type CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestStatus struct{}

func (CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestStatus) FieldPath() *CreatePlanAssignmentRequestRequest_FieldSubPath {
	return &CreatePlanAssignmentRequestRequest_FieldSubPath{
		selector: CreatePlanAssignmentRequestRequest_FieldPathSelectorPlanAssignmentRequest,
		subPath:  plan_assignment_request.NewPlanAssignmentRequestFieldPathBuilder().Status().FieldPath(),
	}
}

func (s CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestStatus) WithValue(value *plan_assignment_request.PlanAssignmentRequest_Status) *CreatePlanAssignmentRequestRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*CreatePlanAssignmentRequestRequest_FieldSubPathValue)
}

func (s CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestStatus) WithArrayOfValues(values []*plan_assignment_request.PlanAssignmentRequest_Status) *CreatePlanAssignmentRequestRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CreatePlanAssignmentRequestRequest_FieldSubPathArrayOfValues)
}

func (CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestStatus) Conclusion() CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestStatusConclusion {
	return CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestStatusConclusion{}
}

func (CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestStatus) Reason() CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestStatusReason {
	return CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestStatusReason{}
}

type CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestStatusConclusion struct{}

func (CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestStatusConclusion) FieldPath() *CreatePlanAssignmentRequestRequest_FieldSubPath {
	return &CreatePlanAssignmentRequestRequest_FieldSubPath{
		selector: CreatePlanAssignmentRequestRequest_FieldPathSelectorPlanAssignmentRequest,
		subPath:  plan_assignment_request.NewPlanAssignmentRequestFieldPathBuilder().Status().Conclusion().FieldPath(),
	}
}

func (s CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestStatusConclusion) WithValue(value plan_assignment_request.PlanAssignmentRequest_Status_Conclusion) *CreatePlanAssignmentRequestRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*CreatePlanAssignmentRequestRequest_FieldSubPathValue)
}

func (s CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestStatusConclusion) WithArrayOfValues(values []plan_assignment_request.PlanAssignmentRequest_Status_Conclusion) *CreatePlanAssignmentRequestRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CreatePlanAssignmentRequestRequest_FieldSubPathArrayOfValues)
}

type CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestStatusReason struct{}

func (CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestStatusReason) FieldPath() *CreatePlanAssignmentRequestRequest_FieldSubPath {
	return &CreatePlanAssignmentRequestRequest_FieldSubPath{
		selector: CreatePlanAssignmentRequestRequest_FieldPathSelectorPlanAssignmentRequest,
		subPath:  plan_assignment_request.NewPlanAssignmentRequestFieldPathBuilder().Status().Reason().FieldPath(),
	}
}

func (s CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestStatusReason) WithValue(value string) *CreatePlanAssignmentRequestRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*CreatePlanAssignmentRequestRequest_FieldSubPathValue)
}

func (s CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestStatusReason) WithArrayOfValues(values []string) *CreatePlanAssignmentRequestRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CreatePlanAssignmentRequestRequest_FieldSubPathArrayOfValues)
}

type CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestMetadata struct{}

func (CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestMetadata) FieldPath() *CreatePlanAssignmentRequestRequest_FieldSubPath {
	return &CreatePlanAssignmentRequestRequest_FieldSubPath{
		selector: CreatePlanAssignmentRequestRequest_FieldPathSelectorPlanAssignmentRequest,
		subPath:  plan_assignment_request.NewPlanAssignmentRequestFieldPathBuilder().Metadata().FieldPath(),
	}
}

func (s CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestMetadata) WithValue(value *ntt_meta.Meta) *CreatePlanAssignmentRequestRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*CreatePlanAssignmentRequestRequest_FieldSubPathValue)
}

func (s CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestMetadata) WithArrayOfValues(values []*ntt_meta.Meta) *CreatePlanAssignmentRequestRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CreatePlanAssignmentRequestRequest_FieldSubPathArrayOfValues)
}

func (CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestMetadata) CreateTime() CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestMetadataCreateTime {
	return CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestMetadataCreateTime{}
}

func (CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestMetadata) UpdateTime() CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestMetadataUpdateTime {
	return CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestMetadataUpdateTime{}
}

func (CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestMetadata) DeleteTime() CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestMetadataDeleteTime {
	return CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestMetadataDeleteTime{}
}

func (CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestMetadata) Uuid() CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestMetadataUuid {
	return CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestMetadataUuid{}
}

func (CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestMetadata) Tags() CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestMetadataTags {
	return CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestMetadataTags{}
}

func (CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestMetadata) Labels() CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestMetadataLabels {
	return CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestMetadataLabels{}
}

func (CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestMetadata) Annotations() CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestMetadataAnnotations {
	return CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestMetadataAnnotations{}
}

func (CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestMetadata) Generation() CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestMetadataGeneration {
	return CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestMetadataGeneration{}
}

func (CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestMetadata) ResourceVersion() CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestMetadataResourceVersion {
	return CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestMetadataResourceVersion{}
}

func (CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestMetadata) OwnerReferences() CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestMetadataOwnerReferences {
	return CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestMetadataOwnerReferences{}
}

func (CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestMetadata) Shards() CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestMetadataShards {
	return CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestMetadataShards{}
}

func (CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestMetadata) Syncing() CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestMetadataSyncing {
	return CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestMetadataSyncing{}
}

func (CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestMetadata) Lifecycle() CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestMetadataLifecycle {
	return CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestMetadataLifecycle{}
}

type CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestMetadataCreateTime struct{}

func (CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestMetadataCreateTime) FieldPath() *CreatePlanAssignmentRequestRequest_FieldSubPath {
	return &CreatePlanAssignmentRequestRequest_FieldSubPath{
		selector: CreatePlanAssignmentRequestRequest_FieldPathSelectorPlanAssignmentRequest,
		subPath:  plan_assignment_request.NewPlanAssignmentRequestFieldPathBuilder().Metadata().CreateTime().FieldPath(),
	}
}

func (s CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestMetadataCreateTime) WithValue(value *timestamp.Timestamp) *CreatePlanAssignmentRequestRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*CreatePlanAssignmentRequestRequest_FieldSubPathValue)
}

func (s CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestMetadataCreateTime) WithArrayOfValues(values []*timestamp.Timestamp) *CreatePlanAssignmentRequestRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CreatePlanAssignmentRequestRequest_FieldSubPathArrayOfValues)
}

type CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestMetadataUpdateTime struct{}

func (CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestMetadataUpdateTime) FieldPath() *CreatePlanAssignmentRequestRequest_FieldSubPath {
	return &CreatePlanAssignmentRequestRequest_FieldSubPath{
		selector: CreatePlanAssignmentRequestRequest_FieldPathSelectorPlanAssignmentRequest,
		subPath:  plan_assignment_request.NewPlanAssignmentRequestFieldPathBuilder().Metadata().UpdateTime().FieldPath(),
	}
}

func (s CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestMetadataUpdateTime) WithValue(value *timestamp.Timestamp) *CreatePlanAssignmentRequestRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*CreatePlanAssignmentRequestRequest_FieldSubPathValue)
}

func (s CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestMetadataUpdateTime) WithArrayOfValues(values []*timestamp.Timestamp) *CreatePlanAssignmentRequestRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CreatePlanAssignmentRequestRequest_FieldSubPathArrayOfValues)
}

type CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestMetadataDeleteTime struct{}

func (CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestMetadataDeleteTime) FieldPath() *CreatePlanAssignmentRequestRequest_FieldSubPath {
	return &CreatePlanAssignmentRequestRequest_FieldSubPath{
		selector: CreatePlanAssignmentRequestRequest_FieldPathSelectorPlanAssignmentRequest,
		subPath:  plan_assignment_request.NewPlanAssignmentRequestFieldPathBuilder().Metadata().DeleteTime().FieldPath(),
	}
}

func (s CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestMetadataDeleteTime) WithValue(value *timestamp.Timestamp) *CreatePlanAssignmentRequestRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*CreatePlanAssignmentRequestRequest_FieldSubPathValue)
}

func (s CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestMetadataDeleteTime) WithArrayOfValues(values []*timestamp.Timestamp) *CreatePlanAssignmentRequestRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CreatePlanAssignmentRequestRequest_FieldSubPathArrayOfValues)
}

type CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestMetadataUuid struct{}

func (CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestMetadataUuid) FieldPath() *CreatePlanAssignmentRequestRequest_FieldSubPath {
	return &CreatePlanAssignmentRequestRequest_FieldSubPath{
		selector: CreatePlanAssignmentRequestRequest_FieldPathSelectorPlanAssignmentRequest,
		subPath:  plan_assignment_request.NewPlanAssignmentRequestFieldPathBuilder().Metadata().Uuid().FieldPath(),
	}
}

func (s CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestMetadataUuid) WithValue(value string) *CreatePlanAssignmentRequestRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*CreatePlanAssignmentRequestRequest_FieldSubPathValue)
}

func (s CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestMetadataUuid) WithArrayOfValues(values []string) *CreatePlanAssignmentRequestRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CreatePlanAssignmentRequestRequest_FieldSubPathArrayOfValues)
}

type CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestMetadataTags struct{}

func (CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestMetadataTags) FieldPath() *CreatePlanAssignmentRequestRequest_FieldSubPath {
	return &CreatePlanAssignmentRequestRequest_FieldSubPath{
		selector: CreatePlanAssignmentRequestRequest_FieldPathSelectorPlanAssignmentRequest,
		subPath:  plan_assignment_request.NewPlanAssignmentRequestFieldPathBuilder().Metadata().Tags().FieldPath(),
	}
}

func (s CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestMetadataTags) WithValue(value []string) *CreatePlanAssignmentRequestRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*CreatePlanAssignmentRequestRequest_FieldSubPathValue)
}

func (s CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestMetadataTags) WithArrayOfValues(values [][]string) *CreatePlanAssignmentRequestRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CreatePlanAssignmentRequestRequest_FieldSubPathArrayOfValues)
}

func (s CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestMetadataTags) WithItemValue(value string) *CreatePlanAssignmentRequestRequest_FieldSubPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*CreatePlanAssignmentRequestRequest_FieldSubPathArrayItemValue)
}

type CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestMetadataLabels struct{}

func (CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestMetadataLabels) FieldPath() *CreatePlanAssignmentRequestRequest_FieldSubPath {
	return &CreatePlanAssignmentRequestRequest_FieldSubPath{
		selector: CreatePlanAssignmentRequestRequest_FieldPathSelectorPlanAssignmentRequest,
		subPath:  plan_assignment_request.NewPlanAssignmentRequestFieldPathBuilder().Metadata().Labels().FieldPath(),
	}
}

func (s CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestMetadataLabels) WithValue(value map[string]string) *CreatePlanAssignmentRequestRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*CreatePlanAssignmentRequestRequest_FieldSubPathValue)
}

func (s CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestMetadataLabels) WithArrayOfValues(values []map[string]string) *CreatePlanAssignmentRequestRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CreatePlanAssignmentRequestRequest_FieldSubPathArrayOfValues)
}

func (CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestMetadataLabels) WithKey(key string) CreatePlanAssignmentRequestRequestMapPathSelectorPlanAssignmentRequestMetadataLabels {
	return CreatePlanAssignmentRequestRequestMapPathSelectorPlanAssignmentRequestMetadataLabels{key: key}
}

type CreatePlanAssignmentRequestRequestMapPathSelectorPlanAssignmentRequestMetadataLabels struct {
	key string
}

func (s CreatePlanAssignmentRequestRequestMapPathSelectorPlanAssignmentRequestMetadataLabels) FieldPath() *CreatePlanAssignmentRequestRequest_FieldSubPath {
	return &CreatePlanAssignmentRequestRequest_FieldSubPath{
		selector: CreatePlanAssignmentRequestRequest_FieldPathSelectorPlanAssignmentRequest,
		subPath:  plan_assignment_request.NewPlanAssignmentRequestFieldPathBuilder().Metadata().Labels().WithKey(s.key).FieldPath(),
	}
}

func (s CreatePlanAssignmentRequestRequestMapPathSelectorPlanAssignmentRequestMetadataLabels) WithValue(value string) *CreatePlanAssignmentRequestRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*CreatePlanAssignmentRequestRequest_FieldSubPathValue)
}

func (s CreatePlanAssignmentRequestRequestMapPathSelectorPlanAssignmentRequestMetadataLabels) WithArrayOfValues(values []string) *CreatePlanAssignmentRequestRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CreatePlanAssignmentRequestRequest_FieldSubPathArrayOfValues)
}

type CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestMetadataAnnotations struct{}

func (CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestMetadataAnnotations) FieldPath() *CreatePlanAssignmentRequestRequest_FieldSubPath {
	return &CreatePlanAssignmentRequestRequest_FieldSubPath{
		selector: CreatePlanAssignmentRequestRequest_FieldPathSelectorPlanAssignmentRequest,
		subPath:  plan_assignment_request.NewPlanAssignmentRequestFieldPathBuilder().Metadata().Annotations().FieldPath(),
	}
}

func (s CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestMetadataAnnotations) WithValue(value map[string]string) *CreatePlanAssignmentRequestRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*CreatePlanAssignmentRequestRequest_FieldSubPathValue)
}

func (s CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestMetadataAnnotations) WithArrayOfValues(values []map[string]string) *CreatePlanAssignmentRequestRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CreatePlanAssignmentRequestRequest_FieldSubPathArrayOfValues)
}

func (CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestMetadataAnnotations) WithKey(key string) CreatePlanAssignmentRequestRequestMapPathSelectorPlanAssignmentRequestMetadataAnnotations {
	return CreatePlanAssignmentRequestRequestMapPathSelectorPlanAssignmentRequestMetadataAnnotations{key: key}
}

type CreatePlanAssignmentRequestRequestMapPathSelectorPlanAssignmentRequestMetadataAnnotations struct {
	key string
}

func (s CreatePlanAssignmentRequestRequestMapPathSelectorPlanAssignmentRequestMetadataAnnotations) FieldPath() *CreatePlanAssignmentRequestRequest_FieldSubPath {
	return &CreatePlanAssignmentRequestRequest_FieldSubPath{
		selector: CreatePlanAssignmentRequestRequest_FieldPathSelectorPlanAssignmentRequest,
		subPath:  plan_assignment_request.NewPlanAssignmentRequestFieldPathBuilder().Metadata().Annotations().WithKey(s.key).FieldPath(),
	}
}

func (s CreatePlanAssignmentRequestRequestMapPathSelectorPlanAssignmentRequestMetadataAnnotations) WithValue(value string) *CreatePlanAssignmentRequestRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*CreatePlanAssignmentRequestRequest_FieldSubPathValue)
}

func (s CreatePlanAssignmentRequestRequestMapPathSelectorPlanAssignmentRequestMetadataAnnotations) WithArrayOfValues(values []string) *CreatePlanAssignmentRequestRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CreatePlanAssignmentRequestRequest_FieldSubPathArrayOfValues)
}

type CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestMetadataGeneration struct{}

func (CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestMetadataGeneration) FieldPath() *CreatePlanAssignmentRequestRequest_FieldSubPath {
	return &CreatePlanAssignmentRequestRequest_FieldSubPath{
		selector: CreatePlanAssignmentRequestRequest_FieldPathSelectorPlanAssignmentRequest,
		subPath:  plan_assignment_request.NewPlanAssignmentRequestFieldPathBuilder().Metadata().Generation().FieldPath(),
	}
}

func (s CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestMetadataGeneration) WithValue(value int64) *CreatePlanAssignmentRequestRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*CreatePlanAssignmentRequestRequest_FieldSubPathValue)
}

func (s CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestMetadataGeneration) WithArrayOfValues(values []int64) *CreatePlanAssignmentRequestRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CreatePlanAssignmentRequestRequest_FieldSubPathArrayOfValues)
}

type CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestMetadataResourceVersion struct{}

func (CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestMetadataResourceVersion) FieldPath() *CreatePlanAssignmentRequestRequest_FieldSubPath {
	return &CreatePlanAssignmentRequestRequest_FieldSubPath{
		selector: CreatePlanAssignmentRequestRequest_FieldPathSelectorPlanAssignmentRequest,
		subPath:  plan_assignment_request.NewPlanAssignmentRequestFieldPathBuilder().Metadata().ResourceVersion().FieldPath(),
	}
}

func (s CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestMetadataResourceVersion) WithValue(value string) *CreatePlanAssignmentRequestRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*CreatePlanAssignmentRequestRequest_FieldSubPathValue)
}

func (s CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestMetadataResourceVersion) WithArrayOfValues(values []string) *CreatePlanAssignmentRequestRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CreatePlanAssignmentRequestRequest_FieldSubPathArrayOfValues)
}

type CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestMetadataOwnerReferences struct{}

func (CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestMetadataOwnerReferences) FieldPath() *CreatePlanAssignmentRequestRequest_FieldSubPath {
	return &CreatePlanAssignmentRequestRequest_FieldSubPath{
		selector: CreatePlanAssignmentRequestRequest_FieldPathSelectorPlanAssignmentRequest,
		subPath:  plan_assignment_request.NewPlanAssignmentRequestFieldPathBuilder().Metadata().OwnerReferences().FieldPath(),
	}
}

func (s CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestMetadataOwnerReferences) WithValue(value []*ntt_meta.OwnerReference) *CreatePlanAssignmentRequestRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*CreatePlanAssignmentRequestRequest_FieldSubPathValue)
}

func (s CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestMetadataOwnerReferences) WithArrayOfValues(values [][]*ntt_meta.OwnerReference) *CreatePlanAssignmentRequestRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CreatePlanAssignmentRequestRequest_FieldSubPathArrayOfValues)
}

func (s CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestMetadataOwnerReferences) WithItemValue(value *ntt_meta.OwnerReference) *CreatePlanAssignmentRequestRequest_FieldSubPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*CreatePlanAssignmentRequestRequest_FieldSubPathArrayItemValue)
}

func (CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestMetadataOwnerReferences) Kind() CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestMetadataOwnerReferencesKind {
	return CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestMetadataOwnerReferencesKind{}
}

func (CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestMetadataOwnerReferences) Version() CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestMetadataOwnerReferencesVersion {
	return CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestMetadataOwnerReferencesVersion{}
}

func (CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestMetadataOwnerReferences) Name() CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestMetadataOwnerReferencesName {
	return CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestMetadataOwnerReferencesName{}
}

func (CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestMetadataOwnerReferences) Region() CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestMetadataOwnerReferencesRegion {
	return CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestMetadataOwnerReferencesRegion{}
}

func (CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestMetadataOwnerReferences) Controller() CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestMetadataOwnerReferencesController {
	return CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestMetadataOwnerReferencesController{}
}

func (CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestMetadataOwnerReferences) BlockOwnerDeletion() CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestMetadataOwnerReferencesBlockOwnerDeletion {
	return CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestMetadataOwnerReferencesBlockOwnerDeletion{}
}

func (CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestMetadataOwnerReferences) RequiresOwnerReference() CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestMetadataOwnerReferencesRequiresOwnerReference {
	return CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestMetadataOwnerReferencesRequiresOwnerReference{}
}

type CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestMetadataOwnerReferencesKind struct{}

func (CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestMetadataOwnerReferencesKind) FieldPath() *CreatePlanAssignmentRequestRequest_FieldSubPath {
	return &CreatePlanAssignmentRequestRequest_FieldSubPath{
		selector: CreatePlanAssignmentRequestRequest_FieldPathSelectorPlanAssignmentRequest,
		subPath:  plan_assignment_request.NewPlanAssignmentRequestFieldPathBuilder().Metadata().OwnerReferences().Kind().FieldPath(),
	}
}

func (s CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestMetadataOwnerReferencesKind) WithValue(value string) *CreatePlanAssignmentRequestRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*CreatePlanAssignmentRequestRequest_FieldSubPathValue)
}

func (s CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestMetadataOwnerReferencesKind) WithArrayOfValues(values []string) *CreatePlanAssignmentRequestRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CreatePlanAssignmentRequestRequest_FieldSubPathArrayOfValues)
}

type CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestMetadataOwnerReferencesVersion struct{}

func (CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestMetadataOwnerReferencesVersion) FieldPath() *CreatePlanAssignmentRequestRequest_FieldSubPath {
	return &CreatePlanAssignmentRequestRequest_FieldSubPath{
		selector: CreatePlanAssignmentRequestRequest_FieldPathSelectorPlanAssignmentRequest,
		subPath:  plan_assignment_request.NewPlanAssignmentRequestFieldPathBuilder().Metadata().OwnerReferences().Version().FieldPath(),
	}
}

func (s CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestMetadataOwnerReferencesVersion) WithValue(value string) *CreatePlanAssignmentRequestRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*CreatePlanAssignmentRequestRequest_FieldSubPathValue)
}

func (s CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestMetadataOwnerReferencesVersion) WithArrayOfValues(values []string) *CreatePlanAssignmentRequestRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CreatePlanAssignmentRequestRequest_FieldSubPathArrayOfValues)
}

type CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestMetadataOwnerReferencesName struct{}

func (CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestMetadataOwnerReferencesName) FieldPath() *CreatePlanAssignmentRequestRequest_FieldSubPath {
	return &CreatePlanAssignmentRequestRequest_FieldSubPath{
		selector: CreatePlanAssignmentRequestRequest_FieldPathSelectorPlanAssignmentRequest,
		subPath:  plan_assignment_request.NewPlanAssignmentRequestFieldPathBuilder().Metadata().OwnerReferences().Name().FieldPath(),
	}
}

func (s CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestMetadataOwnerReferencesName) WithValue(value string) *CreatePlanAssignmentRequestRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*CreatePlanAssignmentRequestRequest_FieldSubPathValue)
}

func (s CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestMetadataOwnerReferencesName) WithArrayOfValues(values []string) *CreatePlanAssignmentRequestRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CreatePlanAssignmentRequestRequest_FieldSubPathArrayOfValues)
}

type CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestMetadataOwnerReferencesRegion struct{}

func (CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestMetadataOwnerReferencesRegion) FieldPath() *CreatePlanAssignmentRequestRequest_FieldSubPath {
	return &CreatePlanAssignmentRequestRequest_FieldSubPath{
		selector: CreatePlanAssignmentRequestRequest_FieldPathSelectorPlanAssignmentRequest,
		subPath:  plan_assignment_request.NewPlanAssignmentRequestFieldPathBuilder().Metadata().OwnerReferences().Region().FieldPath(),
	}
}

func (s CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestMetadataOwnerReferencesRegion) WithValue(value string) *CreatePlanAssignmentRequestRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*CreatePlanAssignmentRequestRequest_FieldSubPathValue)
}

func (s CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestMetadataOwnerReferencesRegion) WithArrayOfValues(values []string) *CreatePlanAssignmentRequestRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CreatePlanAssignmentRequestRequest_FieldSubPathArrayOfValues)
}

type CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestMetadataOwnerReferencesController struct{}

func (CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestMetadataOwnerReferencesController) FieldPath() *CreatePlanAssignmentRequestRequest_FieldSubPath {
	return &CreatePlanAssignmentRequestRequest_FieldSubPath{
		selector: CreatePlanAssignmentRequestRequest_FieldPathSelectorPlanAssignmentRequest,
		subPath:  plan_assignment_request.NewPlanAssignmentRequestFieldPathBuilder().Metadata().OwnerReferences().Controller().FieldPath(),
	}
}

func (s CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestMetadataOwnerReferencesController) WithValue(value bool) *CreatePlanAssignmentRequestRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*CreatePlanAssignmentRequestRequest_FieldSubPathValue)
}

func (s CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestMetadataOwnerReferencesController) WithArrayOfValues(values []bool) *CreatePlanAssignmentRequestRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CreatePlanAssignmentRequestRequest_FieldSubPathArrayOfValues)
}

type CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestMetadataOwnerReferencesBlockOwnerDeletion struct{}

func (CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestMetadataOwnerReferencesBlockOwnerDeletion) FieldPath() *CreatePlanAssignmentRequestRequest_FieldSubPath {
	return &CreatePlanAssignmentRequestRequest_FieldSubPath{
		selector: CreatePlanAssignmentRequestRequest_FieldPathSelectorPlanAssignmentRequest,
		subPath:  plan_assignment_request.NewPlanAssignmentRequestFieldPathBuilder().Metadata().OwnerReferences().BlockOwnerDeletion().FieldPath(),
	}
}

func (s CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestMetadataOwnerReferencesBlockOwnerDeletion) WithValue(value bool) *CreatePlanAssignmentRequestRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*CreatePlanAssignmentRequestRequest_FieldSubPathValue)
}

func (s CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestMetadataOwnerReferencesBlockOwnerDeletion) WithArrayOfValues(values []bool) *CreatePlanAssignmentRequestRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CreatePlanAssignmentRequestRequest_FieldSubPathArrayOfValues)
}

type CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestMetadataOwnerReferencesRequiresOwnerReference struct{}

func (CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestMetadataOwnerReferencesRequiresOwnerReference) FieldPath() *CreatePlanAssignmentRequestRequest_FieldSubPath {
	return &CreatePlanAssignmentRequestRequest_FieldSubPath{
		selector: CreatePlanAssignmentRequestRequest_FieldPathSelectorPlanAssignmentRequest,
		subPath:  plan_assignment_request.NewPlanAssignmentRequestFieldPathBuilder().Metadata().OwnerReferences().RequiresOwnerReference().FieldPath(),
	}
}

func (s CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestMetadataOwnerReferencesRequiresOwnerReference) WithValue(value bool) *CreatePlanAssignmentRequestRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*CreatePlanAssignmentRequestRequest_FieldSubPathValue)
}

func (s CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestMetadataOwnerReferencesRequiresOwnerReference) WithArrayOfValues(values []bool) *CreatePlanAssignmentRequestRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CreatePlanAssignmentRequestRequest_FieldSubPathArrayOfValues)
}

type CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestMetadataShards struct{}

func (CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestMetadataShards) FieldPath() *CreatePlanAssignmentRequestRequest_FieldSubPath {
	return &CreatePlanAssignmentRequestRequest_FieldSubPath{
		selector: CreatePlanAssignmentRequestRequest_FieldPathSelectorPlanAssignmentRequest,
		subPath:  plan_assignment_request.NewPlanAssignmentRequestFieldPathBuilder().Metadata().Shards().FieldPath(),
	}
}

func (s CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestMetadataShards) WithValue(value map[string]int64) *CreatePlanAssignmentRequestRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*CreatePlanAssignmentRequestRequest_FieldSubPathValue)
}

func (s CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestMetadataShards) WithArrayOfValues(values []map[string]int64) *CreatePlanAssignmentRequestRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CreatePlanAssignmentRequestRequest_FieldSubPathArrayOfValues)
}

func (CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestMetadataShards) WithKey(key string) CreatePlanAssignmentRequestRequestMapPathSelectorPlanAssignmentRequestMetadataShards {
	return CreatePlanAssignmentRequestRequestMapPathSelectorPlanAssignmentRequestMetadataShards{key: key}
}

type CreatePlanAssignmentRequestRequestMapPathSelectorPlanAssignmentRequestMetadataShards struct {
	key string
}

func (s CreatePlanAssignmentRequestRequestMapPathSelectorPlanAssignmentRequestMetadataShards) FieldPath() *CreatePlanAssignmentRequestRequest_FieldSubPath {
	return &CreatePlanAssignmentRequestRequest_FieldSubPath{
		selector: CreatePlanAssignmentRequestRequest_FieldPathSelectorPlanAssignmentRequest,
		subPath:  plan_assignment_request.NewPlanAssignmentRequestFieldPathBuilder().Metadata().Shards().WithKey(s.key).FieldPath(),
	}
}

func (s CreatePlanAssignmentRequestRequestMapPathSelectorPlanAssignmentRequestMetadataShards) WithValue(value int64) *CreatePlanAssignmentRequestRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*CreatePlanAssignmentRequestRequest_FieldSubPathValue)
}

func (s CreatePlanAssignmentRequestRequestMapPathSelectorPlanAssignmentRequestMetadataShards) WithArrayOfValues(values []int64) *CreatePlanAssignmentRequestRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CreatePlanAssignmentRequestRequest_FieldSubPathArrayOfValues)
}

type CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestMetadataSyncing struct{}

func (CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestMetadataSyncing) FieldPath() *CreatePlanAssignmentRequestRequest_FieldSubPath {
	return &CreatePlanAssignmentRequestRequest_FieldSubPath{
		selector: CreatePlanAssignmentRequestRequest_FieldPathSelectorPlanAssignmentRequest,
		subPath:  plan_assignment_request.NewPlanAssignmentRequestFieldPathBuilder().Metadata().Syncing().FieldPath(),
	}
}

func (s CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestMetadataSyncing) WithValue(value *ntt_meta.SyncingMeta) *CreatePlanAssignmentRequestRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*CreatePlanAssignmentRequestRequest_FieldSubPathValue)
}

func (s CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestMetadataSyncing) WithArrayOfValues(values []*ntt_meta.SyncingMeta) *CreatePlanAssignmentRequestRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CreatePlanAssignmentRequestRequest_FieldSubPathArrayOfValues)
}

func (CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestMetadataSyncing) OwningRegion() CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestMetadataSyncingOwningRegion {
	return CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestMetadataSyncingOwningRegion{}
}

func (CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestMetadataSyncing) Regions() CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestMetadataSyncingRegions {
	return CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestMetadataSyncingRegions{}
}

type CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestMetadataSyncingOwningRegion struct{}

func (CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestMetadataSyncingOwningRegion) FieldPath() *CreatePlanAssignmentRequestRequest_FieldSubPath {
	return &CreatePlanAssignmentRequestRequest_FieldSubPath{
		selector: CreatePlanAssignmentRequestRequest_FieldPathSelectorPlanAssignmentRequest,
		subPath:  plan_assignment_request.NewPlanAssignmentRequestFieldPathBuilder().Metadata().Syncing().OwningRegion().FieldPath(),
	}
}

func (s CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestMetadataSyncingOwningRegion) WithValue(value string) *CreatePlanAssignmentRequestRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*CreatePlanAssignmentRequestRequest_FieldSubPathValue)
}

func (s CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestMetadataSyncingOwningRegion) WithArrayOfValues(values []string) *CreatePlanAssignmentRequestRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CreatePlanAssignmentRequestRequest_FieldSubPathArrayOfValues)
}

type CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestMetadataSyncingRegions struct{}

func (CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestMetadataSyncingRegions) FieldPath() *CreatePlanAssignmentRequestRequest_FieldSubPath {
	return &CreatePlanAssignmentRequestRequest_FieldSubPath{
		selector: CreatePlanAssignmentRequestRequest_FieldPathSelectorPlanAssignmentRequest,
		subPath:  plan_assignment_request.NewPlanAssignmentRequestFieldPathBuilder().Metadata().Syncing().Regions().FieldPath(),
	}
}

func (s CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestMetadataSyncingRegions) WithValue(value []string) *CreatePlanAssignmentRequestRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*CreatePlanAssignmentRequestRequest_FieldSubPathValue)
}

func (s CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestMetadataSyncingRegions) WithArrayOfValues(values [][]string) *CreatePlanAssignmentRequestRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CreatePlanAssignmentRequestRequest_FieldSubPathArrayOfValues)
}

func (s CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestMetadataSyncingRegions) WithItemValue(value string) *CreatePlanAssignmentRequestRequest_FieldSubPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*CreatePlanAssignmentRequestRequest_FieldSubPathArrayItemValue)
}

type CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestMetadataLifecycle struct{}

func (CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestMetadataLifecycle) FieldPath() *CreatePlanAssignmentRequestRequest_FieldSubPath {
	return &CreatePlanAssignmentRequestRequest_FieldSubPath{
		selector: CreatePlanAssignmentRequestRequest_FieldPathSelectorPlanAssignmentRequest,
		subPath:  plan_assignment_request.NewPlanAssignmentRequestFieldPathBuilder().Metadata().Lifecycle().FieldPath(),
	}
}

func (s CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestMetadataLifecycle) WithValue(value *ntt_meta.Lifecycle) *CreatePlanAssignmentRequestRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*CreatePlanAssignmentRequestRequest_FieldSubPathValue)
}

func (s CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestMetadataLifecycle) WithArrayOfValues(values []*ntt_meta.Lifecycle) *CreatePlanAssignmentRequestRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CreatePlanAssignmentRequestRequest_FieldSubPathArrayOfValues)
}

func (CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestMetadataLifecycle) State() CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestMetadataLifecycleState {
	return CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestMetadataLifecycleState{}
}

func (CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestMetadataLifecycle) BlockDeletion() CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestMetadataLifecycleBlockDeletion {
	return CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestMetadataLifecycleBlockDeletion{}
}

type CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestMetadataLifecycleState struct{}

func (CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestMetadataLifecycleState) FieldPath() *CreatePlanAssignmentRequestRequest_FieldSubPath {
	return &CreatePlanAssignmentRequestRequest_FieldSubPath{
		selector: CreatePlanAssignmentRequestRequest_FieldPathSelectorPlanAssignmentRequest,
		subPath:  plan_assignment_request.NewPlanAssignmentRequestFieldPathBuilder().Metadata().Lifecycle().State().FieldPath(),
	}
}

func (s CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestMetadataLifecycleState) WithValue(value ntt_meta.Lifecycle_State) *CreatePlanAssignmentRequestRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*CreatePlanAssignmentRequestRequest_FieldSubPathValue)
}

func (s CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestMetadataLifecycleState) WithArrayOfValues(values []ntt_meta.Lifecycle_State) *CreatePlanAssignmentRequestRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CreatePlanAssignmentRequestRequest_FieldSubPathArrayOfValues)
}

type CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestMetadataLifecycleBlockDeletion struct{}

func (CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestMetadataLifecycleBlockDeletion) FieldPath() *CreatePlanAssignmentRequestRequest_FieldSubPath {
	return &CreatePlanAssignmentRequestRequest_FieldSubPath{
		selector: CreatePlanAssignmentRequestRequest_FieldPathSelectorPlanAssignmentRequest,
		subPath:  plan_assignment_request.NewPlanAssignmentRequestFieldPathBuilder().Metadata().Lifecycle().BlockDeletion().FieldPath(),
	}
}

func (s CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestMetadataLifecycleBlockDeletion) WithValue(value bool) *CreatePlanAssignmentRequestRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*CreatePlanAssignmentRequestRequest_FieldSubPathValue)
}

func (s CreatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestMetadataLifecycleBlockDeletion) WithArrayOfValues(values []bool) *CreatePlanAssignmentRequestRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CreatePlanAssignmentRequestRequest_FieldSubPathArrayOfValues)
}

type UpdatePlanAssignmentRequestRequestFieldPathBuilder struct{}

func NewUpdatePlanAssignmentRequestRequestFieldPathBuilder() UpdatePlanAssignmentRequestRequestFieldPathBuilder {
	return UpdatePlanAssignmentRequestRequestFieldPathBuilder{}
}
func (UpdatePlanAssignmentRequestRequestFieldPathBuilder) PlanAssignmentRequest() UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequest {
	return UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequest{}
}
func (UpdatePlanAssignmentRequestRequestFieldPathBuilder) UpdateMask() UpdatePlanAssignmentRequestRequestPathSelectorUpdateMask {
	return UpdatePlanAssignmentRequestRequestPathSelectorUpdateMask{}
}
func (UpdatePlanAssignmentRequestRequestFieldPathBuilder) Cas() UpdatePlanAssignmentRequestRequestPathSelectorCas {
	return UpdatePlanAssignmentRequestRequestPathSelectorCas{}
}
func (UpdatePlanAssignmentRequestRequestFieldPathBuilder) AllowMissing() UpdatePlanAssignmentRequestRequestPathSelectorAllowMissing {
	return UpdatePlanAssignmentRequestRequestPathSelectorAllowMissing{}
}

type UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequest struct{}

func (UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequest) FieldPath() *UpdatePlanAssignmentRequestRequest_FieldTerminalPath {
	return &UpdatePlanAssignmentRequestRequest_FieldTerminalPath{selector: UpdatePlanAssignmentRequestRequest_FieldPathSelectorPlanAssignmentRequest}
}

func (s UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequest) WithValue(value *plan_assignment_request.PlanAssignmentRequest) *UpdatePlanAssignmentRequestRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*UpdatePlanAssignmentRequestRequest_FieldTerminalPathValue)
}

func (s UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequest) WithArrayOfValues(values []*plan_assignment_request.PlanAssignmentRequest) *UpdatePlanAssignmentRequestRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdatePlanAssignmentRequestRequest_FieldTerminalPathArrayOfValues)
}

func (UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequest) WithSubPath(subPath plan_assignment_request.PlanAssignmentRequest_FieldPath) *UpdatePlanAssignmentRequestRequest_FieldSubPath {
	return &UpdatePlanAssignmentRequestRequest_FieldSubPath{selector: UpdatePlanAssignmentRequestRequest_FieldPathSelectorPlanAssignmentRequest, subPath: subPath}
}

func (s UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequest) WithSubValue(subPathValue plan_assignment_request.PlanAssignmentRequest_FieldPathValue) *UpdatePlanAssignmentRequestRequest_FieldSubPathValue {
	return &UpdatePlanAssignmentRequestRequest_FieldSubPathValue{UpdatePlanAssignmentRequestRequest_FieldPath: s.WithSubPath(subPathValue), subPathValue: subPathValue}
}

func (s UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequest) WithSubArrayOfValues(subPathArrayOfValues plan_assignment_request.PlanAssignmentRequest_FieldPathArrayOfValues) *UpdatePlanAssignmentRequestRequest_FieldSubPathArrayOfValues {
	return &UpdatePlanAssignmentRequestRequest_FieldSubPathArrayOfValues{UpdatePlanAssignmentRequestRequest_FieldPath: s.WithSubPath(subPathArrayOfValues), subPathArrayOfValues: subPathArrayOfValues}
}

func (s UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequest) WithSubArrayItemValue(subPathArrayItemValue plan_assignment_request.PlanAssignmentRequest_FieldPathArrayItemValue) *UpdatePlanAssignmentRequestRequest_FieldSubPathArrayItemValue {
	return &UpdatePlanAssignmentRequestRequest_FieldSubPathArrayItemValue{UpdatePlanAssignmentRequestRequest_FieldPath: s.WithSubPath(subPathArrayItemValue), subPathItemValue: subPathArrayItemValue}
}

func (UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequest) Name() UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestName {
	return UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestName{}
}

func (UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequest) Request() UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestRequest {
	return UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestRequest{}
}

func (UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequest) Service() UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestService {
	return UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestService{}
}

func (UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequest) Approver() UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestApprover {
	return UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestApprover{}
}

func (UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequest) Status() UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestStatus {
	return UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestStatus{}
}

func (UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequest) Metadata() UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestMetadata {
	return UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestMetadata{}
}

type UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestName struct{}

func (UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestName) FieldPath() *UpdatePlanAssignmentRequestRequest_FieldSubPath {
	return &UpdatePlanAssignmentRequestRequest_FieldSubPath{
		selector: UpdatePlanAssignmentRequestRequest_FieldPathSelectorPlanAssignmentRequest,
		subPath:  plan_assignment_request.NewPlanAssignmentRequestFieldPathBuilder().Name().FieldPath(),
	}
}

func (s UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestName) WithValue(value *plan_assignment_request.Name) *UpdatePlanAssignmentRequestRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdatePlanAssignmentRequestRequest_FieldSubPathValue)
}

func (s UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestName) WithArrayOfValues(values []*plan_assignment_request.Name) *UpdatePlanAssignmentRequestRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdatePlanAssignmentRequestRequest_FieldSubPathArrayOfValues)
}

type UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestRequest struct{}

func (UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestRequest) FieldPath() *UpdatePlanAssignmentRequestRequest_FieldSubPath {
	return &UpdatePlanAssignmentRequestRequest_FieldSubPath{
		selector: UpdatePlanAssignmentRequestRequest_FieldPathSelectorPlanAssignmentRequest,
		subPath:  plan_assignment_request.NewPlanAssignmentRequestFieldPathBuilder().Request().FieldPath(),
	}
}

func (s UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestRequest) WithValue(value *plan_assignment_request.PlanAssignmentRequest_Request) *UpdatePlanAssignmentRequestRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdatePlanAssignmentRequestRequest_FieldSubPathValue)
}

func (s UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestRequest) WithArrayOfValues(values []*plan_assignment_request.PlanAssignmentRequest_Request) *UpdatePlanAssignmentRequestRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdatePlanAssignmentRequestRequest_FieldSubPathArrayOfValues)
}

func (UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestRequest) Assign() UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestRequestAssign {
	return UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestRequestAssign{}
}

func (UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestRequest) Extend() UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestRequestExtend {
	return UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestRequestExtend{}
}

func (UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestRequest) Redistribute() UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestRequestRedistribute {
	return UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestRequestRedistribute{}
}

func (UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestRequest) Unassign() UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestRequestUnassign {
	return UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestRequestUnassign{}
}

type UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestRequestAssign struct{}

func (UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestRequestAssign) FieldPath() *UpdatePlanAssignmentRequestRequest_FieldSubPath {
	return &UpdatePlanAssignmentRequestRequest_FieldSubPath{
		selector: UpdatePlanAssignmentRequestRequest_FieldPathSelectorPlanAssignmentRequest,
		subPath:  plan_assignment_request.NewPlanAssignmentRequestFieldPathBuilder().Request().Assign().FieldPath(),
	}
}

func (s UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestRequestAssign) WithValue(value *plan_assignment_request.PlanAssignmentRequest_Request_Assign) *UpdatePlanAssignmentRequestRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdatePlanAssignmentRequestRequest_FieldSubPathValue)
}

func (s UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestRequestAssign) WithArrayOfValues(values []*plan_assignment_request.PlanAssignmentRequest_Request_Assign) *UpdatePlanAssignmentRequestRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdatePlanAssignmentRequestRequest_FieldSubPathArrayOfValues)
}

func (UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestRequestAssign) Plan() UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestRequestAssignPlan {
	return UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestRequestAssignPlan{}
}

func (UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestRequestAssign) Extensions() UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestRequestAssignExtensions {
	return UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestRequestAssignExtensions{}
}

func (UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestRequestAssign) RegionalDistributions() UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestRequestAssignRegionalDistributions {
	return UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestRequestAssignRegionalDistributions{}
}

type UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestRequestAssignPlan struct{}

func (UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestRequestAssignPlan) FieldPath() *UpdatePlanAssignmentRequestRequest_FieldSubPath {
	return &UpdatePlanAssignmentRequestRequest_FieldSubPath{
		selector: UpdatePlanAssignmentRequestRequest_FieldPathSelectorPlanAssignmentRequest,
		subPath:  plan_assignment_request.NewPlanAssignmentRequestFieldPathBuilder().Request().Assign().Plan().FieldPath(),
	}
}

func (s UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestRequestAssignPlan) WithValue(value *plan.Reference) *UpdatePlanAssignmentRequestRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdatePlanAssignmentRequestRequest_FieldSubPathValue)
}

func (s UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestRequestAssignPlan) WithArrayOfValues(values []*plan.Reference) *UpdatePlanAssignmentRequestRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdatePlanAssignmentRequestRequest_FieldSubPathArrayOfValues)
}

type UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestRequestAssignExtensions struct{}

func (UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestRequestAssignExtensions) FieldPath() *UpdatePlanAssignmentRequestRequest_FieldSubPath {
	return &UpdatePlanAssignmentRequestRequest_FieldSubPath{
		selector: UpdatePlanAssignmentRequestRequest_FieldPathSelectorPlanAssignmentRequest,
		subPath:  plan_assignment_request.NewPlanAssignmentRequestFieldPathBuilder().Request().Assign().Extensions().FieldPath(),
	}
}

func (s UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestRequestAssignExtensions) WithValue(value []*common.Allowance) *UpdatePlanAssignmentRequestRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdatePlanAssignmentRequestRequest_FieldSubPathValue)
}

func (s UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestRequestAssignExtensions) WithArrayOfValues(values [][]*common.Allowance) *UpdatePlanAssignmentRequestRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdatePlanAssignmentRequestRequest_FieldSubPathArrayOfValues)
}

func (s UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestRequestAssignExtensions) WithItemValue(value *common.Allowance) *UpdatePlanAssignmentRequestRequest_FieldSubPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*UpdatePlanAssignmentRequestRequest_FieldSubPathArrayItemValue)
}

func (UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestRequestAssignExtensions) Resource() UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestRequestAssignExtensionsResource {
	return UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestRequestAssignExtensionsResource{}
}

func (UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestRequestAssignExtensions) Value() UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestRequestAssignExtensionsValue {
	return UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestRequestAssignExtensionsValue{}
}

type UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestRequestAssignExtensionsResource struct{}

func (UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestRequestAssignExtensionsResource) FieldPath() *UpdatePlanAssignmentRequestRequest_FieldSubPath {
	return &UpdatePlanAssignmentRequestRequest_FieldSubPath{
		selector: UpdatePlanAssignmentRequestRequest_FieldPathSelectorPlanAssignmentRequest,
		subPath:  plan_assignment_request.NewPlanAssignmentRequestFieldPathBuilder().Request().Assign().Extensions().Resource().FieldPath(),
	}
}

func (s UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestRequestAssignExtensionsResource) WithValue(value *meta_resource.Reference) *UpdatePlanAssignmentRequestRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdatePlanAssignmentRequestRequest_FieldSubPathValue)
}

func (s UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestRequestAssignExtensionsResource) WithArrayOfValues(values []*meta_resource.Reference) *UpdatePlanAssignmentRequestRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdatePlanAssignmentRequestRequest_FieldSubPathArrayOfValues)
}

type UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestRequestAssignExtensionsValue struct{}

func (UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestRequestAssignExtensionsValue) FieldPath() *UpdatePlanAssignmentRequestRequest_FieldSubPath {
	return &UpdatePlanAssignmentRequestRequest_FieldSubPath{
		selector: UpdatePlanAssignmentRequestRequest_FieldPathSelectorPlanAssignmentRequest,
		subPath:  plan_assignment_request.NewPlanAssignmentRequestFieldPathBuilder().Request().Assign().Extensions().Value().FieldPath(),
	}
}

func (s UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestRequestAssignExtensionsValue) WithValue(value int64) *UpdatePlanAssignmentRequestRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdatePlanAssignmentRequestRequest_FieldSubPathValue)
}

func (s UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestRequestAssignExtensionsValue) WithArrayOfValues(values []int64) *UpdatePlanAssignmentRequestRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdatePlanAssignmentRequestRequest_FieldSubPathArrayOfValues)
}

type UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestRequestAssignRegionalDistributions struct{}

func (UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestRequestAssignRegionalDistributions) FieldPath() *UpdatePlanAssignmentRequestRequest_FieldSubPath {
	return &UpdatePlanAssignmentRequestRequest_FieldSubPath{
		selector: UpdatePlanAssignmentRequestRequest_FieldPathSelectorPlanAssignmentRequest,
		subPath:  plan_assignment_request.NewPlanAssignmentRequestFieldPathBuilder().Request().Assign().RegionalDistributions().FieldPath(),
	}
}

func (s UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestRequestAssignRegionalDistributions) WithValue(value []*common.RegionalDistribution) *UpdatePlanAssignmentRequestRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdatePlanAssignmentRequestRequest_FieldSubPathValue)
}

func (s UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestRequestAssignRegionalDistributions) WithArrayOfValues(values [][]*common.RegionalDistribution) *UpdatePlanAssignmentRequestRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdatePlanAssignmentRequestRequest_FieldSubPathArrayOfValues)
}

func (s UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestRequestAssignRegionalDistributions) WithItemValue(value *common.RegionalDistribution) *UpdatePlanAssignmentRequestRequest_FieldSubPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*UpdatePlanAssignmentRequestRequest_FieldSubPathArrayItemValue)
}

func (UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestRequestAssignRegionalDistributions) Resource() UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestRequestAssignRegionalDistributionsResource {
	return UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestRequestAssignRegionalDistributionsResource{}
}

func (UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestRequestAssignRegionalDistributions) LimitsByRegion() UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestRequestAssignRegionalDistributionsLimitsByRegion {
	return UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestRequestAssignRegionalDistributionsLimitsByRegion{}
}

type UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestRequestAssignRegionalDistributionsResource struct{}

func (UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestRequestAssignRegionalDistributionsResource) FieldPath() *UpdatePlanAssignmentRequestRequest_FieldSubPath {
	return &UpdatePlanAssignmentRequestRequest_FieldSubPath{
		selector: UpdatePlanAssignmentRequestRequest_FieldPathSelectorPlanAssignmentRequest,
		subPath:  plan_assignment_request.NewPlanAssignmentRequestFieldPathBuilder().Request().Assign().RegionalDistributions().Resource().FieldPath(),
	}
}

func (s UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestRequestAssignRegionalDistributionsResource) WithValue(value *meta_resource.Reference) *UpdatePlanAssignmentRequestRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdatePlanAssignmentRequestRequest_FieldSubPathValue)
}

func (s UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestRequestAssignRegionalDistributionsResource) WithArrayOfValues(values []*meta_resource.Reference) *UpdatePlanAssignmentRequestRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdatePlanAssignmentRequestRequest_FieldSubPathArrayOfValues)
}

type UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestRequestAssignRegionalDistributionsLimitsByRegion struct{}

func (UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestRequestAssignRegionalDistributionsLimitsByRegion) FieldPath() *UpdatePlanAssignmentRequestRequest_FieldSubPath {
	return &UpdatePlanAssignmentRequestRequest_FieldSubPath{
		selector: UpdatePlanAssignmentRequestRequest_FieldPathSelectorPlanAssignmentRequest,
		subPath:  plan_assignment_request.NewPlanAssignmentRequestFieldPathBuilder().Request().Assign().RegionalDistributions().LimitsByRegion().FieldPath(),
	}
}

func (s UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestRequestAssignRegionalDistributionsLimitsByRegion) WithValue(value map[string]int64) *UpdatePlanAssignmentRequestRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdatePlanAssignmentRequestRequest_FieldSubPathValue)
}

func (s UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestRequestAssignRegionalDistributionsLimitsByRegion) WithArrayOfValues(values []map[string]int64) *UpdatePlanAssignmentRequestRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdatePlanAssignmentRequestRequest_FieldSubPathArrayOfValues)
}

func (UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestRequestAssignRegionalDistributionsLimitsByRegion) WithKey(key string) UpdatePlanAssignmentRequestRequestMapPathSelectorPlanAssignmentRequestRequestAssignRegionalDistributionsLimitsByRegion {
	return UpdatePlanAssignmentRequestRequestMapPathSelectorPlanAssignmentRequestRequestAssignRegionalDistributionsLimitsByRegion{key: key}
}

type UpdatePlanAssignmentRequestRequestMapPathSelectorPlanAssignmentRequestRequestAssignRegionalDistributionsLimitsByRegion struct {
	key string
}

func (s UpdatePlanAssignmentRequestRequestMapPathSelectorPlanAssignmentRequestRequestAssignRegionalDistributionsLimitsByRegion) FieldPath() *UpdatePlanAssignmentRequestRequest_FieldSubPath {
	return &UpdatePlanAssignmentRequestRequest_FieldSubPath{
		selector: UpdatePlanAssignmentRequestRequest_FieldPathSelectorPlanAssignmentRequest,
		subPath:  plan_assignment_request.NewPlanAssignmentRequestFieldPathBuilder().Request().Assign().RegionalDistributions().LimitsByRegion().WithKey(s.key).FieldPath(),
	}
}

func (s UpdatePlanAssignmentRequestRequestMapPathSelectorPlanAssignmentRequestRequestAssignRegionalDistributionsLimitsByRegion) WithValue(value int64) *UpdatePlanAssignmentRequestRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdatePlanAssignmentRequestRequest_FieldSubPathValue)
}

func (s UpdatePlanAssignmentRequestRequestMapPathSelectorPlanAssignmentRequestRequestAssignRegionalDistributionsLimitsByRegion) WithArrayOfValues(values []int64) *UpdatePlanAssignmentRequestRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdatePlanAssignmentRequestRequest_FieldSubPathArrayOfValues)
}

type UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestRequestExtend struct{}

func (UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestRequestExtend) FieldPath() *UpdatePlanAssignmentRequestRequest_FieldSubPath {
	return &UpdatePlanAssignmentRequestRequest_FieldSubPath{
		selector: UpdatePlanAssignmentRequestRequest_FieldPathSelectorPlanAssignmentRequest,
		subPath:  plan_assignment_request.NewPlanAssignmentRequestFieldPathBuilder().Request().Extend().FieldPath(),
	}
}

func (s UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestRequestExtend) WithValue(value *plan_assignment_request.PlanAssignmentRequest_Request_Extend) *UpdatePlanAssignmentRequestRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdatePlanAssignmentRequestRequest_FieldSubPathValue)
}

func (s UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestRequestExtend) WithArrayOfValues(values []*plan_assignment_request.PlanAssignmentRequest_Request_Extend) *UpdatePlanAssignmentRequestRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdatePlanAssignmentRequestRequest_FieldSubPathArrayOfValues)
}

func (UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestRequestExtend) Assignment() UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestRequestExtendAssignment {
	return UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestRequestExtendAssignment{}
}

func (UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestRequestExtend) Additions() UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestRequestExtendAdditions {
	return UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestRequestExtendAdditions{}
}

func (UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestRequestExtend) RegionalDistributions() UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestRequestExtendRegionalDistributions {
	return UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestRequestExtendRegionalDistributions{}
}

type UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestRequestExtendAssignment struct{}

func (UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestRequestExtendAssignment) FieldPath() *UpdatePlanAssignmentRequestRequest_FieldSubPath {
	return &UpdatePlanAssignmentRequestRequest_FieldSubPath{
		selector: UpdatePlanAssignmentRequestRequest_FieldPathSelectorPlanAssignmentRequest,
		subPath:  plan_assignment_request.NewPlanAssignmentRequestFieldPathBuilder().Request().Extend().Assignment().FieldPath(),
	}
}

func (s UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestRequestExtendAssignment) WithValue(value *plan_assignment.Reference) *UpdatePlanAssignmentRequestRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdatePlanAssignmentRequestRequest_FieldSubPathValue)
}

func (s UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestRequestExtendAssignment) WithArrayOfValues(values []*plan_assignment.Reference) *UpdatePlanAssignmentRequestRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdatePlanAssignmentRequestRequest_FieldSubPathArrayOfValues)
}

type UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestRequestExtendAdditions struct{}

func (UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestRequestExtendAdditions) FieldPath() *UpdatePlanAssignmentRequestRequest_FieldSubPath {
	return &UpdatePlanAssignmentRequestRequest_FieldSubPath{
		selector: UpdatePlanAssignmentRequestRequest_FieldPathSelectorPlanAssignmentRequest,
		subPath:  plan_assignment_request.NewPlanAssignmentRequestFieldPathBuilder().Request().Extend().Additions().FieldPath(),
	}
}

func (s UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestRequestExtendAdditions) WithValue(value []*common.Allowance) *UpdatePlanAssignmentRequestRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdatePlanAssignmentRequestRequest_FieldSubPathValue)
}

func (s UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestRequestExtendAdditions) WithArrayOfValues(values [][]*common.Allowance) *UpdatePlanAssignmentRequestRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdatePlanAssignmentRequestRequest_FieldSubPathArrayOfValues)
}

func (s UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestRequestExtendAdditions) WithItemValue(value *common.Allowance) *UpdatePlanAssignmentRequestRequest_FieldSubPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*UpdatePlanAssignmentRequestRequest_FieldSubPathArrayItemValue)
}

func (UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestRequestExtendAdditions) Resource() UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestRequestExtendAdditionsResource {
	return UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestRequestExtendAdditionsResource{}
}

func (UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestRequestExtendAdditions) Value() UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestRequestExtendAdditionsValue {
	return UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestRequestExtendAdditionsValue{}
}

type UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestRequestExtendAdditionsResource struct{}

func (UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestRequestExtendAdditionsResource) FieldPath() *UpdatePlanAssignmentRequestRequest_FieldSubPath {
	return &UpdatePlanAssignmentRequestRequest_FieldSubPath{
		selector: UpdatePlanAssignmentRequestRequest_FieldPathSelectorPlanAssignmentRequest,
		subPath:  plan_assignment_request.NewPlanAssignmentRequestFieldPathBuilder().Request().Extend().Additions().Resource().FieldPath(),
	}
}

func (s UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestRequestExtendAdditionsResource) WithValue(value *meta_resource.Reference) *UpdatePlanAssignmentRequestRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdatePlanAssignmentRequestRequest_FieldSubPathValue)
}

func (s UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestRequestExtendAdditionsResource) WithArrayOfValues(values []*meta_resource.Reference) *UpdatePlanAssignmentRequestRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdatePlanAssignmentRequestRequest_FieldSubPathArrayOfValues)
}

type UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestRequestExtendAdditionsValue struct{}

func (UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestRequestExtendAdditionsValue) FieldPath() *UpdatePlanAssignmentRequestRequest_FieldSubPath {
	return &UpdatePlanAssignmentRequestRequest_FieldSubPath{
		selector: UpdatePlanAssignmentRequestRequest_FieldPathSelectorPlanAssignmentRequest,
		subPath:  plan_assignment_request.NewPlanAssignmentRequestFieldPathBuilder().Request().Extend().Additions().Value().FieldPath(),
	}
}

func (s UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestRequestExtendAdditionsValue) WithValue(value int64) *UpdatePlanAssignmentRequestRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdatePlanAssignmentRequestRequest_FieldSubPathValue)
}

func (s UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestRequestExtendAdditionsValue) WithArrayOfValues(values []int64) *UpdatePlanAssignmentRequestRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdatePlanAssignmentRequestRequest_FieldSubPathArrayOfValues)
}

type UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestRequestExtendRegionalDistributions struct{}

func (UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestRequestExtendRegionalDistributions) FieldPath() *UpdatePlanAssignmentRequestRequest_FieldSubPath {
	return &UpdatePlanAssignmentRequestRequest_FieldSubPath{
		selector: UpdatePlanAssignmentRequestRequest_FieldPathSelectorPlanAssignmentRequest,
		subPath:  plan_assignment_request.NewPlanAssignmentRequestFieldPathBuilder().Request().Extend().RegionalDistributions().FieldPath(),
	}
}

func (s UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestRequestExtendRegionalDistributions) WithValue(value []*common.RegionalDistribution) *UpdatePlanAssignmentRequestRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdatePlanAssignmentRequestRequest_FieldSubPathValue)
}

func (s UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestRequestExtendRegionalDistributions) WithArrayOfValues(values [][]*common.RegionalDistribution) *UpdatePlanAssignmentRequestRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdatePlanAssignmentRequestRequest_FieldSubPathArrayOfValues)
}

func (s UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestRequestExtendRegionalDistributions) WithItemValue(value *common.RegionalDistribution) *UpdatePlanAssignmentRequestRequest_FieldSubPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*UpdatePlanAssignmentRequestRequest_FieldSubPathArrayItemValue)
}

func (UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestRequestExtendRegionalDistributions) Resource() UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestRequestExtendRegionalDistributionsResource {
	return UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestRequestExtendRegionalDistributionsResource{}
}

func (UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestRequestExtendRegionalDistributions) LimitsByRegion() UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestRequestExtendRegionalDistributionsLimitsByRegion {
	return UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestRequestExtendRegionalDistributionsLimitsByRegion{}
}

type UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestRequestExtendRegionalDistributionsResource struct{}

func (UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestRequestExtendRegionalDistributionsResource) FieldPath() *UpdatePlanAssignmentRequestRequest_FieldSubPath {
	return &UpdatePlanAssignmentRequestRequest_FieldSubPath{
		selector: UpdatePlanAssignmentRequestRequest_FieldPathSelectorPlanAssignmentRequest,
		subPath:  plan_assignment_request.NewPlanAssignmentRequestFieldPathBuilder().Request().Extend().RegionalDistributions().Resource().FieldPath(),
	}
}

func (s UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestRequestExtendRegionalDistributionsResource) WithValue(value *meta_resource.Reference) *UpdatePlanAssignmentRequestRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdatePlanAssignmentRequestRequest_FieldSubPathValue)
}

func (s UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestRequestExtendRegionalDistributionsResource) WithArrayOfValues(values []*meta_resource.Reference) *UpdatePlanAssignmentRequestRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdatePlanAssignmentRequestRequest_FieldSubPathArrayOfValues)
}

type UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestRequestExtendRegionalDistributionsLimitsByRegion struct{}

func (UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestRequestExtendRegionalDistributionsLimitsByRegion) FieldPath() *UpdatePlanAssignmentRequestRequest_FieldSubPath {
	return &UpdatePlanAssignmentRequestRequest_FieldSubPath{
		selector: UpdatePlanAssignmentRequestRequest_FieldPathSelectorPlanAssignmentRequest,
		subPath:  plan_assignment_request.NewPlanAssignmentRequestFieldPathBuilder().Request().Extend().RegionalDistributions().LimitsByRegion().FieldPath(),
	}
}

func (s UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestRequestExtendRegionalDistributionsLimitsByRegion) WithValue(value map[string]int64) *UpdatePlanAssignmentRequestRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdatePlanAssignmentRequestRequest_FieldSubPathValue)
}

func (s UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestRequestExtendRegionalDistributionsLimitsByRegion) WithArrayOfValues(values []map[string]int64) *UpdatePlanAssignmentRequestRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdatePlanAssignmentRequestRequest_FieldSubPathArrayOfValues)
}

func (UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestRequestExtendRegionalDistributionsLimitsByRegion) WithKey(key string) UpdatePlanAssignmentRequestRequestMapPathSelectorPlanAssignmentRequestRequestExtendRegionalDistributionsLimitsByRegion {
	return UpdatePlanAssignmentRequestRequestMapPathSelectorPlanAssignmentRequestRequestExtendRegionalDistributionsLimitsByRegion{key: key}
}

type UpdatePlanAssignmentRequestRequestMapPathSelectorPlanAssignmentRequestRequestExtendRegionalDistributionsLimitsByRegion struct {
	key string
}

func (s UpdatePlanAssignmentRequestRequestMapPathSelectorPlanAssignmentRequestRequestExtendRegionalDistributionsLimitsByRegion) FieldPath() *UpdatePlanAssignmentRequestRequest_FieldSubPath {
	return &UpdatePlanAssignmentRequestRequest_FieldSubPath{
		selector: UpdatePlanAssignmentRequestRequest_FieldPathSelectorPlanAssignmentRequest,
		subPath:  plan_assignment_request.NewPlanAssignmentRequestFieldPathBuilder().Request().Extend().RegionalDistributions().LimitsByRegion().WithKey(s.key).FieldPath(),
	}
}

func (s UpdatePlanAssignmentRequestRequestMapPathSelectorPlanAssignmentRequestRequestExtendRegionalDistributionsLimitsByRegion) WithValue(value int64) *UpdatePlanAssignmentRequestRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdatePlanAssignmentRequestRequest_FieldSubPathValue)
}

func (s UpdatePlanAssignmentRequestRequestMapPathSelectorPlanAssignmentRequestRequestExtendRegionalDistributionsLimitsByRegion) WithArrayOfValues(values []int64) *UpdatePlanAssignmentRequestRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdatePlanAssignmentRequestRequest_FieldSubPathArrayOfValues)
}

type UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestRequestRedistribute struct{}

func (UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestRequestRedistribute) FieldPath() *UpdatePlanAssignmentRequestRequest_FieldSubPath {
	return &UpdatePlanAssignmentRequestRequest_FieldSubPath{
		selector: UpdatePlanAssignmentRequestRequest_FieldPathSelectorPlanAssignmentRequest,
		subPath:  plan_assignment_request.NewPlanAssignmentRequestFieldPathBuilder().Request().Redistribute().FieldPath(),
	}
}

func (s UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestRequestRedistribute) WithValue(value *plan_assignment_request.PlanAssignmentRequest_Request_Redistribute) *UpdatePlanAssignmentRequestRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdatePlanAssignmentRequestRequest_FieldSubPathValue)
}

func (s UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestRequestRedistribute) WithArrayOfValues(values []*plan_assignment_request.PlanAssignmentRequest_Request_Redistribute) *UpdatePlanAssignmentRequestRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdatePlanAssignmentRequestRequest_FieldSubPathArrayOfValues)
}

func (UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestRequestRedistribute) Assignment() UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestRequestRedistributeAssignment {
	return UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestRequestRedistributeAssignment{}
}

func (UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestRequestRedistribute) RegionalDistributions() UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestRequestRedistributeRegionalDistributions {
	return UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestRequestRedistributeRegionalDistributions{}
}

type UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestRequestRedistributeAssignment struct{}

func (UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestRequestRedistributeAssignment) FieldPath() *UpdatePlanAssignmentRequestRequest_FieldSubPath {
	return &UpdatePlanAssignmentRequestRequest_FieldSubPath{
		selector: UpdatePlanAssignmentRequestRequest_FieldPathSelectorPlanAssignmentRequest,
		subPath:  plan_assignment_request.NewPlanAssignmentRequestFieldPathBuilder().Request().Redistribute().Assignment().FieldPath(),
	}
}

func (s UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestRequestRedistributeAssignment) WithValue(value *plan_assignment.Reference) *UpdatePlanAssignmentRequestRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdatePlanAssignmentRequestRequest_FieldSubPathValue)
}

func (s UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestRequestRedistributeAssignment) WithArrayOfValues(values []*plan_assignment.Reference) *UpdatePlanAssignmentRequestRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdatePlanAssignmentRequestRequest_FieldSubPathArrayOfValues)
}

type UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestRequestRedistributeRegionalDistributions struct{}

func (UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestRequestRedistributeRegionalDistributions) FieldPath() *UpdatePlanAssignmentRequestRequest_FieldSubPath {
	return &UpdatePlanAssignmentRequestRequest_FieldSubPath{
		selector: UpdatePlanAssignmentRequestRequest_FieldPathSelectorPlanAssignmentRequest,
		subPath:  plan_assignment_request.NewPlanAssignmentRequestFieldPathBuilder().Request().Redistribute().RegionalDistributions().FieldPath(),
	}
}

func (s UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestRequestRedistributeRegionalDistributions) WithValue(value []*common.RegionalDistribution) *UpdatePlanAssignmentRequestRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdatePlanAssignmentRequestRequest_FieldSubPathValue)
}

func (s UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestRequestRedistributeRegionalDistributions) WithArrayOfValues(values [][]*common.RegionalDistribution) *UpdatePlanAssignmentRequestRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdatePlanAssignmentRequestRequest_FieldSubPathArrayOfValues)
}

func (s UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestRequestRedistributeRegionalDistributions) WithItemValue(value *common.RegionalDistribution) *UpdatePlanAssignmentRequestRequest_FieldSubPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*UpdatePlanAssignmentRequestRequest_FieldSubPathArrayItemValue)
}

func (UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestRequestRedistributeRegionalDistributions) Resource() UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestRequestRedistributeRegionalDistributionsResource {
	return UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestRequestRedistributeRegionalDistributionsResource{}
}

func (UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestRequestRedistributeRegionalDistributions) LimitsByRegion() UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestRequestRedistributeRegionalDistributionsLimitsByRegion {
	return UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestRequestRedistributeRegionalDistributionsLimitsByRegion{}
}

type UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestRequestRedistributeRegionalDistributionsResource struct{}

func (UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestRequestRedistributeRegionalDistributionsResource) FieldPath() *UpdatePlanAssignmentRequestRequest_FieldSubPath {
	return &UpdatePlanAssignmentRequestRequest_FieldSubPath{
		selector: UpdatePlanAssignmentRequestRequest_FieldPathSelectorPlanAssignmentRequest,
		subPath:  plan_assignment_request.NewPlanAssignmentRequestFieldPathBuilder().Request().Redistribute().RegionalDistributions().Resource().FieldPath(),
	}
}

func (s UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestRequestRedistributeRegionalDistributionsResource) WithValue(value *meta_resource.Reference) *UpdatePlanAssignmentRequestRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdatePlanAssignmentRequestRequest_FieldSubPathValue)
}

func (s UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestRequestRedistributeRegionalDistributionsResource) WithArrayOfValues(values []*meta_resource.Reference) *UpdatePlanAssignmentRequestRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdatePlanAssignmentRequestRequest_FieldSubPathArrayOfValues)
}

type UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestRequestRedistributeRegionalDistributionsLimitsByRegion struct{}

func (UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestRequestRedistributeRegionalDistributionsLimitsByRegion) FieldPath() *UpdatePlanAssignmentRequestRequest_FieldSubPath {
	return &UpdatePlanAssignmentRequestRequest_FieldSubPath{
		selector: UpdatePlanAssignmentRequestRequest_FieldPathSelectorPlanAssignmentRequest,
		subPath:  plan_assignment_request.NewPlanAssignmentRequestFieldPathBuilder().Request().Redistribute().RegionalDistributions().LimitsByRegion().FieldPath(),
	}
}

func (s UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestRequestRedistributeRegionalDistributionsLimitsByRegion) WithValue(value map[string]int64) *UpdatePlanAssignmentRequestRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdatePlanAssignmentRequestRequest_FieldSubPathValue)
}

func (s UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestRequestRedistributeRegionalDistributionsLimitsByRegion) WithArrayOfValues(values []map[string]int64) *UpdatePlanAssignmentRequestRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdatePlanAssignmentRequestRequest_FieldSubPathArrayOfValues)
}

func (UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestRequestRedistributeRegionalDistributionsLimitsByRegion) WithKey(key string) UpdatePlanAssignmentRequestRequestMapPathSelectorPlanAssignmentRequestRequestRedistributeRegionalDistributionsLimitsByRegion {
	return UpdatePlanAssignmentRequestRequestMapPathSelectorPlanAssignmentRequestRequestRedistributeRegionalDistributionsLimitsByRegion{key: key}
}

type UpdatePlanAssignmentRequestRequestMapPathSelectorPlanAssignmentRequestRequestRedistributeRegionalDistributionsLimitsByRegion struct {
	key string
}

func (s UpdatePlanAssignmentRequestRequestMapPathSelectorPlanAssignmentRequestRequestRedistributeRegionalDistributionsLimitsByRegion) FieldPath() *UpdatePlanAssignmentRequestRequest_FieldSubPath {
	return &UpdatePlanAssignmentRequestRequest_FieldSubPath{
		selector: UpdatePlanAssignmentRequestRequest_FieldPathSelectorPlanAssignmentRequest,
		subPath:  plan_assignment_request.NewPlanAssignmentRequestFieldPathBuilder().Request().Redistribute().RegionalDistributions().LimitsByRegion().WithKey(s.key).FieldPath(),
	}
}

func (s UpdatePlanAssignmentRequestRequestMapPathSelectorPlanAssignmentRequestRequestRedistributeRegionalDistributionsLimitsByRegion) WithValue(value int64) *UpdatePlanAssignmentRequestRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdatePlanAssignmentRequestRequest_FieldSubPathValue)
}

func (s UpdatePlanAssignmentRequestRequestMapPathSelectorPlanAssignmentRequestRequestRedistributeRegionalDistributionsLimitsByRegion) WithArrayOfValues(values []int64) *UpdatePlanAssignmentRequestRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdatePlanAssignmentRequestRequest_FieldSubPathArrayOfValues)
}

type UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestRequestUnassign struct{}

func (UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestRequestUnassign) FieldPath() *UpdatePlanAssignmentRequestRequest_FieldSubPath {
	return &UpdatePlanAssignmentRequestRequest_FieldSubPath{
		selector: UpdatePlanAssignmentRequestRequest_FieldPathSelectorPlanAssignmentRequest,
		subPath:  plan_assignment_request.NewPlanAssignmentRequestFieldPathBuilder().Request().Unassign().FieldPath(),
	}
}

func (s UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestRequestUnassign) WithValue(value *plan_assignment_request.PlanAssignmentRequest_Request_Unassign) *UpdatePlanAssignmentRequestRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdatePlanAssignmentRequestRequest_FieldSubPathValue)
}

func (s UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestRequestUnassign) WithArrayOfValues(values []*plan_assignment_request.PlanAssignmentRequest_Request_Unassign) *UpdatePlanAssignmentRequestRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdatePlanAssignmentRequestRequest_FieldSubPathArrayOfValues)
}

func (UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestRequestUnassign) Assignment() UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestRequestUnassignAssignment {
	return UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestRequestUnassignAssignment{}
}

type UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestRequestUnassignAssignment struct{}

func (UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestRequestUnassignAssignment) FieldPath() *UpdatePlanAssignmentRequestRequest_FieldSubPath {
	return &UpdatePlanAssignmentRequestRequest_FieldSubPath{
		selector: UpdatePlanAssignmentRequestRequest_FieldPathSelectorPlanAssignmentRequest,
		subPath:  plan_assignment_request.NewPlanAssignmentRequestFieldPathBuilder().Request().Unassign().Assignment().FieldPath(),
	}
}

func (s UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestRequestUnassignAssignment) WithValue(value *plan_assignment.Reference) *UpdatePlanAssignmentRequestRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdatePlanAssignmentRequestRequest_FieldSubPathValue)
}

func (s UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestRequestUnassignAssignment) WithArrayOfValues(values []*plan_assignment.Reference) *UpdatePlanAssignmentRequestRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdatePlanAssignmentRequestRequest_FieldSubPathArrayOfValues)
}

type UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestService struct{}

func (UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestService) FieldPath() *UpdatePlanAssignmentRequestRequest_FieldSubPath {
	return &UpdatePlanAssignmentRequestRequest_FieldSubPath{
		selector: UpdatePlanAssignmentRequestRequest_FieldPathSelectorPlanAssignmentRequest,
		subPath:  plan_assignment_request.NewPlanAssignmentRequestFieldPathBuilder().Service().FieldPath(),
	}
}

func (s UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestService) WithValue(value *meta_service.Reference) *UpdatePlanAssignmentRequestRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdatePlanAssignmentRequestRequest_FieldSubPathValue)
}

func (s UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestService) WithArrayOfValues(values []*meta_service.Reference) *UpdatePlanAssignmentRequestRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdatePlanAssignmentRequestRequest_FieldSubPathArrayOfValues)
}

type UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestApprover struct{}

func (UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestApprover) FieldPath() *UpdatePlanAssignmentRequestRequest_FieldSubPath {
	return &UpdatePlanAssignmentRequestRequest_FieldSubPath{
		selector: UpdatePlanAssignmentRequestRequest_FieldPathSelectorPlanAssignmentRequest,
		subPath:  plan_assignment_request.NewPlanAssignmentRequestFieldPathBuilder().Approver().FieldPath(),
	}
}

func (s UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestApprover) WithValue(value *iam_organization.Reference) *UpdatePlanAssignmentRequestRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdatePlanAssignmentRequestRequest_FieldSubPathValue)
}

func (s UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestApprover) WithArrayOfValues(values []*iam_organization.Reference) *UpdatePlanAssignmentRequestRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdatePlanAssignmentRequestRequest_FieldSubPathArrayOfValues)
}

type UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestStatus struct{}

func (UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestStatus) FieldPath() *UpdatePlanAssignmentRequestRequest_FieldSubPath {
	return &UpdatePlanAssignmentRequestRequest_FieldSubPath{
		selector: UpdatePlanAssignmentRequestRequest_FieldPathSelectorPlanAssignmentRequest,
		subPath:  plan_assignment_request.NewPlanAssignmentRequestFieldPathBuilder().Status().FieldPath(),
	}
}

func (s UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestStatus) WithValue(value *plan_assignment_request.PlanAssignmentRequest_Status) *UpdatePlanAssignmentRequestRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdatePlanAssignmentRequestRequest_FieldSubPathValue)
}

func (s UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestStatus) WithArrayOfValues(values []*plan_assignment_request.PlanAssignmentRequest_Status) *UpdatePlanAssignmentRequestRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdatePlanAssignmentRequestRequest_FieldSubPathArrayOfValues)
}

func (UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestStatus) Conclusion() UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestStatusConclusion {
	return UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestStatusConclusion{}
}

func (UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestStatus) Reason() UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestStatusReason {
	return UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestStatusReason{}
}

type UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestStatusConclusion struct{}

func (UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestStatusConclusion) FieldPath() *UpdatePlanAssignmentRequestRequest_FieldSubPath {
	return &UpdatePlanAssignmentRequestRequest_FieldSubPath{
		selector: UpdatePlanAssignmentRequestRequest_FieldPathSelectorPlanAssignmentRequest,
		subPath:  plan_assignment_request.NewPlanAssignmentRequestFieldPathBuilder().Status().Conclusion().FieldPath(),
	}
}

func (s UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestStatusConclusion) WithValue(value plan_assignment_request.PlanAssignmentRequest_Status_Conclusion) *UpdatePlanAssignmentRequestRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdatePlanAssignmentRequestRequest_FieldSubPathValue)
}

func (s UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestStatusConclusion) WithArrayOfValues(values []plan_assignment_request.PlanAssignmentRequest_Status_Conclusion) *UpdatePlanAssignmentRequestRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdatePlanAssignmentRequestRequest_FieldSubPathArrayOfValues)
}

type UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestStatusReason struct{}

func (UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestStatusReason) FieldPath() *UpdatePlanAssignmentRequestRequest_FieldSubPath {
	return &UpdatePlanAssignmentRequestRequest_FieldSubPath{
		selector: UpdatePlanAssignmentRequestRequest_FieldPathSelectorPlanAssignmentRequest,
		subPath:  plan_assignment_request.NewPlanAssignmentRequestFieldPathBuilder().Status().Reason().FieldPath(),
	}
}

func (s UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestStatusReason) WithValue(value string) *UpdatePlanAssignmentRequestRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdatePlanAssignmentRequestRequest_FieldSubPathValue)
}

func (s UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestStatusReason) WithArrayOfValues(values []string) *UpdatePlanAssignmentRequestRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdatePlanAssignmentRequestRequest_FieldSubPathArrayOfValues)
}

type UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestMetadata struct{}

func (UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestMetadata) FieldPath() *UpdatePlanAssignmentRequestRequest_FieldSubPath {
	return &UpdatePlanAssignmentRequestRequest_FieldSubPath{
		selector: UpdatePlanAssignmentRequestRequest_FieldPathSelectorPlanAssignmentRequest,
		subPath:  plan_assignment_request.NewPlanAssignmentRequestFieldPathBuilder().Metadata().FieldPath(),
	}
}

func (s UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestMetadata) WithValue(value *ntt_meta.Meta) *UpdatePlanAssignmentRequestRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdatePlanAssignmentRequestRequest_FieldSubPathValue)
}

func (s UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestMetadata) WithArrayOfValues(values []*ntt_meta.Meta) *UpdatePlanAssignmentRequestRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdatePlanAssignmentRequestRequest_FieldSubPathArrayOfValues)
}

func (UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestMetadata) CreateTime() UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestMetadataCreateTime {
	return UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestMetadataCreateTime{}
}

func (UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestMetadata) UpdateTime() UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestMetadataUpdateTime {
	return UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestMetadataUpdateTime{}
}

func (UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestMetadata) DeleteTime() UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestMetadataDeleteTime {
	return UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestMetadataDeleteTime{}
}

func (UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestMetadata) Uuid() UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestMetadataUuid {
	return UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestMetadataUuid{}
}

func (UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestMetadata) Tags() UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestMetadataTags {
	return UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestMetadataTags{}
}

func (UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestMetadata) Labels() UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestMetadataLabels {
	return UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestMetadataLabels{}
}

func (UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestMetadata) Annotations() UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestMetadataAnnotations {
	return UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestMetadataAnnotations{}
}

func (UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestMetadata) Generation() UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestMetadataGeneration {
	return UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestMetadataGeneration{}
}

func (UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestMetadata) ResourceVersion() UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestMetadataResourceVersion {
	return UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestMetadataResourceVersion{}
}

func (UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestMetadata) OwnerReferences() UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestMetadataOwnerReferences {
	return UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestMetadataOwnerReferences{}
}

func (UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestMetadata) Shards() UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestMetadataShards {
	return UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestMetadataShards{}
}

func (UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestMetadata) Syncing() UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestMetadataSyncing {
	return UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestMetadataSyncing{}
}

func (UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestMetadata) Lifecycle() UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestMetadataLifecycle {
	return UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestMetadataLifecycle{}
}

type UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestMetadataCreateTime struct{}

func (UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestMetadataCreateTime) FieldPath() *UpdatePlanAssignmentRequestRequest_FieldSubPath {
	return &UpdatePlanAssignmentRequestRequest_FieldSubPath{
		selector: UpdatePlanAssignmentRequestRequest_FieldPathSelectorPlanAssignmentRequest,
		subPath:  plan_assignment_request.NewPlanAssignmentRequestFieldPathBuilder().Metadata().CreateTime().FieldPath(),
	}
}

func (s UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestMetadataCreateTime) WithValue(value *timestamp.Timestamp) *UpdatePlanAssignmentRequestRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdatePlanAssignmentRequestRequest_FieldSubPathValue)
}

func (s UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestMetadataCreateTime) WithArrayOfValues(values []*timestamp.Timestamp) *UpdatePlanAssignmentRequestRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdatePlanAssignmentRequestRequest_FieldSubPathArrayOfValues)
}

type UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestMetadataUpdateTime struct{}

func (UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestMetadataUpdateTime) FieldPath() *UpdatePlanAssignmentRequestRequest_FieldSubPath {
	return &UpdatePlanAssignmentRequestRequest_FieldSubPath{
		selector: UpdatePlanAssignmentRequestRequest_FieldPathSelectorPlanAssignmentRequest,
		subPath:  plan_assignment_request.NewPlanAssignmentRequestFieldPathBuilder().Metadata().UpdateTime().FieldPath(),
	}
}

func (s UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestMetadataUpdateTime) WithValue(value *timestamp.Timestamp) *UpdatePlanAssignmentRequestRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdatePlanAssignmentRequestRequest_FieldSubPathValue)
}

func (s UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestMetadataUpdateTime) WithArrayOfValues(values []*timestamp.Timestamp) *UpdatePlanAssignmentRequestRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdatePlanAssignmentRequestRequest_FieldSubPathArrayOfValues)
}

type UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestMetadataDeleteTime struct{}

func (UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestMetadataDeleteTime) FieldPath() *UpdatePlanAssignmentRequestRequest_FieldSubPath {
	return &UpdatePlanAssignmentRequestRequest_FieldSubPath{
		selector: UpdatePlanAssignmentRequestRequest_FieldPathSelectorPlanAssignmentRequest,
		subPath:  plan_assignment_request.NewPlanAssignmentRequestFieldPathBuilder().Metadata().DeleteTime().FieldPath(),
	}
}

func (s UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestMetadataDeleteTime) WithValue(value *timestamp.Timestamp) *UpdatePlanAssignmentRequestRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdatePlanAssignmentRequestRequest_FieldSubPathValue)
}

func (s UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestMetadataDeleteTime) WithArrayOfValues(values []*timestamp.Timestamp) *UpdatePlanAssignmentRequestRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdatePlanAssignmentRequestRequest_FieldSubPathArrayOfValues)
}

type UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestMetadataUuid struct{}

func (UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestMetadataUuid) FieldPath() *UpdatePlanAssignmentRequestRequest_FieldSubPath {
	return &UpdatePlanAssignmentRequestRequest_FieldSubPath{
		selector: UpdatePlanAssignmentRequestRequest_FieldPathSelectorPlanAssignmentRequest,
		subPath:  plan_assignment_request.NewPlanAssignmentRequestFieldPathBuilder().Metadata().Uuid().FieldPath(),
	}
}

func (s UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestMetadataUuid) WithValue(value string) *UpdatePlanAssignmentRequestRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdatePlanAssignmentRequestRequest_FieldSubPathValue)
}

func (s UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestMetadataUuid) WithArrayOfValues(values []string) *UpdatePlanAssignmentRequestRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdatePlanAssignmentRequestRequest_FieldSubPathArrayOfValues)
}

type UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestMetadataTags struct{}

func (UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestMetadataTags) FieldPath() *UpdatePlanAssignmentRequestRequest_FieldSubPath {
	return &UpdatePlanAssignmentRequestRequest_FieldSubPath{
		selector: UpdatePlanAssignmentRequestRequest_FieldPathSelectorPlanAssignmentRequest,
		subPath:  plan_assignment_request.NewPlanAssignmentRequestFieldPathBuilder().Metadata().Tags().FieldPath(),
	}
}

func (s UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestMetadataTags) WithValue(value []string) *UpdatePlanAssignmentRequestRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdatePlanAssignmentRequestRequest_FieldSubPathValue)
}

func (s UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestMetadataTags) WithArrayOfValues(values [][]string) *UpdatePlanAssignmentRequestRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdatePlanAssignmentRequestRequest_FieldSubPathArrayOfValues)
}

func (s UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestMetadataTags) WithItemValue(value string) *UpdatePlanAssignmentRequestRequest_FieldSubPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*UpdatePlanAssignmentRequestRequest_FieldSubPathArrayItemValue)
}

type UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestMetadataLabels struct{}

func (UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestMetadataLabels) FieldPath() *UpdatePlanAssignmentRequestRequest_FieldSubPath {
	return &UpdatePlanAssignmentRequestRequest_FieldSubPath{
		selector: UpdatePlanAssignmentRequestRequest_FieldPathSelectorPlanAssignmentRequest,
		subPath:  plan_assignment_request.NewPlanAssignmentRequestFieldPathBuilder().Metadata().Labels().FieldPath(),
	}
}

func (s UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestMetadataLabels) WithValue(value map[string]string) *UpdatePlanAssignmentRequestRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdatePlanAssignmentRequestRequest_FieldSubPathValue)
}

func (s UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestMetadataLabels) WithArrayOfValues(values []map[string]string) *UpdatePlanAssignmentRequestRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdatePlanAssignmentRequestRequest_FieldSubPathArrayOfValues)
}

func (UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestMetadataLabels) WithKey(key string) UpdatePlanAssignmentRequestRequestMapPathSelectorPlanAssignmentRequestMetadataLabels {
	return UpdatePlanAssignmentRequestRequestMapPathSelectorPlanAssignmentRequestMetadataLabels{key: key}
}

type UpdatePlanAssignmentRequestRequestMapPathSelectorPlanAssignmentRequestMetadataLabels struct {
	key string
}

func (s UpdatePlanAssignmentRequestRequestMapPathSelectorPlanAssignmentRequestMetadataLabels) FieldPath() *UpdatePlanAssignmentRequestRequest_FieldSubPath {
	return &UpdatePlanAssignmentRequestRequest_FieldSubPath{
		selector: UpdatePlanAssignmentRequestRequest_FieldPathSelectorPlanAssignmentRequest,
		subPath:  plan_assignment_request.NewPlanAssignmentRequestFieldPathBuilder().Metadata().Labels().WithKey(s.key).FieldPath(),
	}
}

func (s UpdatePlanAssignmentRequestRequestMapPathSelectorPlanAssignmentRequestMetadataLabels) WithValue(value string) *UpdatePlanAssignmentRequestRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdatePlanAssignmentRequestRequest_FieldSubPathValue)
}

func (s UpdatePlanAssignmentRequestRequestMapPathSelectorPlanAssignmentRequestMetadataLabels) WithArrayOfValues(values []string) *UpdatePlanAssignmentRequestRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdatePlanAssignmentRequestRequest_FieldSubPathArrayOfValues)
}

type UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestMetadataAnnotations struct{}

func (UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestMetadataAnnotations) FieldPath() *UpdatePlanAssignmentRequestRequest_FieldSubPath {
	return &UpdatePlanAssignmentRequestRequest_FieldSubPath{
		selector: UpdatePlanAssignmentRequestRequest_FieldPathSelectorPlanAssignmentRequest,
		subPath:  plan_assignment_request.NewPlanAssignmentRequestFieldPathBuilder().Metadata().Annotations().FieldPath(),
	}
}

func (s UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestMetadataAnnotations) WithValue(value map[string]string) *UpdatePlanAssignmentRequestRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdatePlanAssignmentRequestRequest_FieldSubPathValue)
}

func (s UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestMetadataAnnotations) WithArrayOfValues(values []map[string]string) *UpdatePlanAssignmentRequestRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdatePlanAssignmentRequestRequest_FieldSubPathArrayOfValues)
}

func (UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestMetadataAnnotations) WithKey(key string) UpdatePlanAssignmentRequestRequestMapPathSelectorPlanAssignmentRequestMetadataAnnotations {
	return UpdatePlanAssignmentRequestRequestMapPathSelectorPlanAssignmentRequestMetadataAnnotations{key: key}
}

type UpdatePlanAssignmentRequestRequestMapPathSelectorPlanAssignmentRequestMetadataAnnotations struct {
	key string
}

func (s UpdatePlanAssignmentRequestRequestMapPathSelectorPlanAssignmentRequestMetadataAnnotations) FieldPath() *UpdatePlanAssignmentRequestRequest_FieldSubPath {
	return &UpdatePlanAssignmentRequestRequest_FieldSubPath{
		selector: UpdatePlanAssignmentRequestRequest_FieldPathSelectorPlanAssignmentRequest,
		subPath:  plan_assignment_request.NewPlanAssignmentRequestFieldPathBuilder().Metadata().Annotations().WithKey(s.key).FieldPath(),
	}
}

func (s UpdatePlanAssignmentRequestRequestMapPathSelectorPlanAssignmentRequestMetadataAnnotations) WithValue(value string) *UpdatePlanAssignmentRequestRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdatePlanAssignmentRequestRequest_FieldSubPathValue)
}

func (s UpdatePlanAssignmentRequestRequestMapPathSelectorPlanAssignmentRequestMetadataAnnotations) WithArrayOfValues(values []string) *UpdatePlanAssignmentRequestRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdatePlanAssignmentRequestRequest_FieldSubPathArrayOfValues)
}

type UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestMetadataGeneration struct{}

func (UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestMetadataGeneration) FieldPath() *UpdatePlanAssignmentRequestRequest_FieldSubPath {
	return &UpdatePlanAssignmentRequestRequest_FieldSubPath{
		selector: UpdatePlanAssignmentRequestRequest_FieldPathSelectorPlanAssignmentRequest,
		subPath:  plan_assignment_request.NewPlanAssignmentRequestFieldPathBuilder().Metadata().Generation().FieldPath(),
	}
}

func (s UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestMetadataGeneration) WithValue(value int64) *UpdatePlanAssignmentRequestRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdatePlanAssignmentRequestRequest_FieldSubPathValue)
}

func (s UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestMetadataGeneration) WithArrayOfValues(values []int64) *UpdatePlanAssignmentRequestRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdatePlanAssignmentRequestRequest_FieldSubPathArrayOfValues)
}

type UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestMetadataResourceVersion struct{}

func (UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestMetadataResourceVersion) FieldPath() *UpdatePlanAssignmentRequestRequest_FieldSubPath {
	return &UpdatePlanAssignmentRequestRequest_FieldSubPath{
		selector: UpdatePlanAssignmentRequestRequest_FieldPathSelectorPlanAssignmentRequest,
		subPath:  plan_assignment_request.NewPlanAssignmentRequestFieldPathBuilder().Metadata().ResourceVersion().FieldPath(),
	}
}

func (s UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestMetadataResourceVersion) WithValue(value string) *UpdatePlanAssignmentRequestRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdatePlanAssignmentRequestRequest_FieldSubPathValue)
}

func (s UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestMetadataResourceVersion) WithArrayOfValues(values []string) *UpdatePlanAssignmentRequestRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdatePlanAssignmentRequestRequest_FieldSubPathArrayOfValues)
}

type UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestMetadataOwnerReferences struct{}

func (UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestMetadataOwnerReferences) FieldPath() *UpdatePlanAssignmentRequestRequest_FieldSubPath {
	return &UpdatePlanAssignmentRequestRequest_FieldSubPath{
		selector: UpdatePlanAssignmentRequestRequest_FieldPathSelectorPlanAssignmentRequest,
		subPath:  plan_assignment_request.NewPlanAssignmentRequestFieldPathBuilder().Metadata().OwnerReferences().FieldPath(),
	}
}

func (s UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestMetadataOwnerReferences) WithValue(value []*ntt_meta.OwnerReference) *UpdatePlanAssignmentRequestRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdatePlanAssignmentRequestRequest_FieldSubPathValue)
}

func (s UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestMetadataOwnerReferences) WithArrayOfValues(values [][]*ntt_meta.OwnerReference) *UpdatePlanAssignmentRequestRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdatePlanAssignmentRequestRequest_FieldSubPathArrayOfValues)
}

func (s UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestMetadataOwnerReferences) WithItemValue(value *ntt_meta.OwnerReference) *UpdatePlanAssignmentRequestRequest_FieldSubPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*UpdatePlanAssignmentRequestRequest_FieldSubPathArrayItemValue)
}

func (UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestMetadataOwnerReferences) Kind() UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestMetadataOwnerReferencesKind {
	return UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestMetadataOwnerReferencesKind{}
}

func (UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestMetadataOwnerReferences) Version() UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestMetadataOwnerReferencesVersion {
	return UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestMetadataOwnerReferencesVersion{}
}

func (UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestMetadataOwnerReferences) Name() UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestMetadataOwnerReferencesName {
	return UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestMetadataOwnerReferencesName{}
}

func (UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestMetadataOwnerReferences) Region() UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestMetadataOwnerReferencesRegion {
	return UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestMetadataOwnerReferencesRegion{}
}

func (UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestMetadataOwnerReferences) Controller() UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestMetadataOwnerReferencesController {
	return UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestMetadataOwnerReferencesController{}
}

func (UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestMetadataOwnerReferences) BlockOwnerDeletion() UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestMetadataOwnerReferencesBlockOwnerDeletion {
	return UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestMetadataOwnerReferencesBlockOwnerDeletion{}
}

func (UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestMetadataOwnerReferences) RequiresOwnerReference() UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestMetadataOwnerReferencesRequiresOwnerReference {
	return UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestMetadataOwnerReferencesRequiresOwnerReference{}
}

type UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestMetadataOwnerReferencesKind struct{}

func (UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestMetadataOwnerReferencesKind) FieldPath() *UpdatePlanAssignmentRequestRequest_FieldSubPath {
	return &UpdatePlanAssignmentRequestRequest_FieldSubPath{
		selector: UpdatePlanAssignmentRequestRequest_FieldPathSelectorPlanAssignmentRequest,
		subPath:  plan_assignment_request.NewPlanAssignmentRequestFieldPathBuilder().Metadata().OwnerReferences().Kind().FieldPath(),
	}
}

func (s UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestMetadataOwnerReferencesKind) WithValue(value string) *UpdatePlanAssignmentRequestRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdatePlanAssignmentRequestRequest_FieldSubPathValue)
}

func (s UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestMetadataOwnerReferencesKind) WithArrayOfValues(values []string) *UpdatePlanAssignmentRequestRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdatePlanAssignmentRequestRequest_FieldSubPathArrayOfValues)
}

type UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestMetadataOwnerReferencesVersion struct{}

func (UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestMetadataOwnerReferencesVersion) FieldPath() *UpdatePlanAssignmentRequestRequest_FieldSubPath {
	return &UpdatePlanAssignmentRequestRequest_FieldSubPath{
		selector: UpdatePlanAssignmentRequestRequest_FieldPathSelectorPlanAssignmentRequest,
		subPath:  plan_assignment_request.NewPlanAssignmentRequestFieldPathBuilder().Metadata().OwnerReferences().Version().FieldPath(),
	}
}

func (s UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestMetadataOwnerReferencesVersion) WithValue(value string) *UpdatePlanAssignmentRequestRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdatePlanAssignmentRequestRequest_FieldSubPathValue)
}

func (s UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestMetadataOwnerReferencesVersion) WithArrayOfValues(values []string) *UpdatePlanAssignmentRequestRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdatePlanAssignmentRequestRequest_FieldSubPathArrayOfValues)
}

type UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestMetadataOwnerReferencesName struct{}

func (UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestMetadataOwnerReferencesName) FieldPath() *UpdatePlanAssignmentRequestRequest_FieldSubPath {
	return &UpdatePlanAssignmentRequestRequest_FieldSubPath{
		selector: UpdatePlanAssignmentRequestRequest_FieldPathSelectorPlanAssignmentRequest,
		subPath:  plan_assignment_request.NewPlanAssignmentRequestFieldPathBuilder().Metadata().OwnerReferences().Name().FieldPath(),
	}
}

func (s UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestMetadataOwnerReferencesName) WithValue(value string) *UpdatePlanAssignmentRequestRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdatePlanAssignmentRequestRequest_FieldSubPathValue)
}

func (s UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestMetadataOwnerReferencesName) WithArrayOfValues(values []string) *UpdatePlanAssignmentRequestRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdatePlanAssignmentRequestRequest_FieldSubPathArrayOfValues)
}

type UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestMetadataOwnerReferencesRegion struct{}

func (UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestMetadataOwnerReferencesRegion) FieldPath() *UpdatePlanAssignmentRequestRequest_FieldSubPath {
	return &UpdatePlanAssignmentRequestRequest_FieldSubPath{
		selector: UpdatePlanAssignmentRequestRequest_FieldPathSelectorPlanAssignmentRequest,
		subPath:  plan_assignment_request.NewPlanAssignmentRequestFieldPathBuilder().Metadata().OwnerReferences().Region().FieldPath(),
	}
}

func (s UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestMetadataOwnerReferencesRegion) WithValue(value string) *UpdatePlanAssignmentRequestRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdatePlanAssignmentRequestRequest_FieldSubPathValue)
}

func (s UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestMetadataOwnerReferencesRegion) WithArrayOfValues(values []string) *UpdatePlanAssignmentRequestRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdatePlanAssignmentRequestRequest_FieldSubPathArrayOfValues)
}

type UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestMetadataOwnerReferencesController struct{}

func (UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestMetadataOwnerReferencesController) FieldPath() *UpdatePlanAssignmentRequestRequest_FieldSubPath {
	return &UpdatePlanAssignmentRequestRequest_FieldSubPath{
		selector: UpdatePlanAssignmentRequestRequest_FieldPathSelectorPlanAssignmentRequest,
		subPath:  plan_assignment_request.NewPlanAssignmentRequestFieldPathBuilder().Metadata().OwnerReferences().Controller().FieldPath(),
	}
}

func (s UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestMetadataOwnerReferencesController) WithValue(value bool) *UpdatePlanAssignmentRequestRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdatePlanAssignmentRequestRequest_FieldSubPathValue)
}

func (s UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestMetadataOwnerReferencesController) WithArrayOfValues(values []bool) *UpdatePlanAssignmentRequestRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdatePlanAssignmentRequestRequest_FieldSubPathArrayOfValues)
}

type UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestMetadataOwnerReferencesBlockOwnerDeletion struct{}

func (UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestMetadataOwnerReferencesBlockOwnerDeletion) FieldPath() *UpdatePlanAssignmentRequestRequest_FieldSubPath {
	return &UpdatePlanAssignmentRequestRequest_FieldSubPath{
		selector: UpdatePlanAssignmentRequestRequest_FieldPathSelectorPlanAssignmentRequest,
		subPath:  plan_assignment_request.NewPlanAssignmentRequestFieldPathBuilder().Metadata().OwnerReferences().BlockOwnerDeletion().FieldPath(),
	}
}

func (s UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestMetadataOwnerReferencesBlockOwnerDeletion) WithValue(value bool) *UpdatePlanAssignmentRequestRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdatePlanAssignmentRequestRequest_FieldSubPathValue)
}

func (s UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestMetadataOwnerReferencesBlockOwnerDeletion) WithArrayOfValues(values []bool) *UpdatePlanAssignmentRequestRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdatePlanAssignmentRequestRequest_FieldSubPathArrayOfValues)
}

type UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestMetadataOwnerReferencesRequiresOwnerReference struct{}

func (UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestMetadataOwnerReferencesRequiresOwnerReference) FieldPath() *UpdatePlanAssignmentRequestRequest_FieldSubPath {
	return &UpdatePlanAssignmentRequestRequest_FieldSubPath{
		selector: UpdatePlanAssignmentRequestRequest_FieldPathSelectorPlanAssignmentRequest,
		subPath:  plan_assignment_request.NewPlanAssignmentRequestFieldPathBuilder().Metadata().OwnerReferences().RequiresOwnerReference().FieldPath(),
	}
}

func (s UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestMetadataOwnerReferencesRequiresOwnerReference) WithValue(value bool) *UpdatePlanAssignmentRequestRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdatePlanAssignmentRequestRequest_FieldSubPathValue)
}

func (s UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestMetadataOwnerReferencesRequiresOwnerReference) WithArrayOfValues(values []bool) *UpdatePlanAssignmentRequestRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdatePlanAssignmentRequestRequest_FieldSubPathArrayOfValues)
}

type UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestMetadataShards struct{}

func (UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestMetadataShards) FieldPath() *UpdatePlanAssignmentRequestRequest_FieldSubPath {
	return &UpdatePlanAssignmentRequestRequest_FieldSubPath{
		selector: UpdatePlanAssignmentRequestRequest_FieldPathSelectorPlanAssignmentRequest,
		subPath:  plan_assignment_request.NewPlanAssignmentRequestFieldPathBuilder().Metadata().Shards().FieldPath(),
	}
}

func (s UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestMetadataShards) WithValue(value map[string]int64) *UpdatePlanAssignmentRequestRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdatePlanAssignmentRequestRequest_FieldSubPathValue)
}

func (s UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestMetadataShards) WithArrayOfValues(values []map[string]int64) *UpdatePlanAssignmentRequestRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdatePlanAssignmentRequestRequest_FieldSubPathArrayOfValues)
}

func (UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestMetadataShards) WithKey(key string) UpdatePlanAssignmentRequestRequestMapPathSelectorPlanAssignmentRequestMetadataShards {
	return UpdatePlanAssignmentRequestRequestMapPathSelectorPlanAssignmentRequestMetadataShards{key: key}
}

type UpdatePlanAssignmentRequestRequestMapPathSelectorPlanAssignmentRequestMetadataShards struct {
	key string
}

func (s UpdatePlanAssignmentRequestRequestMapPathSelectorPlanAssignmentRequestMetadataShards) FieldPath() *UpdatePlanAssignmentRequestRequest_FieldSubPath {
	return &UpdatePlanAssignmentRequestRequest_FieldSubPath{
		selector: UpdatePlanAssignmentRequestRequest_FieldPathSelectorPlanAssignmentRequest,
		subPath:  plan_assignment_request.NewPlanAssignmentRequestFieldPathBuilder().Metadata().Shards().WithKey(s.key).FieldPath(),
	}
}

func (s UpdatePlanAssignmentRequestRequestMapPathSelectorPlanAssignmentRequestMetadataShards) WithValue(value int64) *UpdatePlanAssignmentRequestRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdatePlanAssignmentRequestRequest_FieldSubPathValue)
}

func (s UpdatePlanAssignmentRequestRequestMapPathSelectorPlanAssignmentRequestMetadataShards) WithArrayOfValues(values []int64) *UpdatePlanAssignmentRequestRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdatePlanAssignmentRequestRequest_FieldSubPathArrayOfValues)
}

type UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestMetadataSyncing struct{}

func (UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestMetadataSyncing) FieldPath() *UpdatePlanAssignmentRequestRequest_FieldSubPath {
	return &UpdatePlanAssignmentRequestRequest_FieldSubPath{
		selector: UpdatePlanAssignmentRequestRequest_FieldPathSelectorPlanAssignmentRequest,
		subPath:  plan_assignment_request.NewPlanAssignmentRequestFieldPathBuilder().Metadata().Syncing().FieldPath(),
	}
}

func (s UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestMetadataSyncing) WithValue(value *ntt_meta.SyncingMeta) *UpdatePlanAssignmentRequestRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdatePlanAssignmentRequestRequest_FieldSubPathValue)
}

func (s UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestMetadataSyncing) WithArrayOfValues(values []*ntt_meta.SyncingMeta) *UpdatePlanAssignmentRequestRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdatePlanAssignmentRequestRequest_FieldSubPathArrayOfValues)
}

func (UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestMetadataSyncing) OwningRegion() UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestMetadataSyncingOwningRegion {
	return UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestMetadataSyncingOwningRegion{}
}

func (UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestMetadataSyncing) Regions() UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestMetadataSyncingRegions {
	return UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestMetadataSyncingRegions{}
}

type UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestMetadataSyncingOwningRegion struct{}

func (UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestMetadataSyncingOwningRegion) FieldPath() *UpdatePlanAssignmentRequestRequest_FieldSubPath {
	return &UpdatePlanAssignmentRequestRequest_FieldSubPath{
		selector: UpdatePlanAssignmentRequestRequest_FieldPathSelectorPlanAssignmentRequest,
		subPath:  plan_assignment_request.NewPlanAssignmentRequestFieldPathBuilder().Metadata().Syncing().OwningRegion().FieldPath(),
	}
}

func (s UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestMetadataSyncingOwningRegion) WithValue(value string) *UpdatePlanAssignmentRequestRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdatePlanAssignmentRequestRequest_FieldSubPathValue)
}

func (s UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestMetadataSyncingOwningRegion) WithArrayOfValues(values []string) *UpdatePlanAssignmentRequestRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdatePlanAssignmentRequestRequest_FieldSubPathArrayOfValues)
}

type UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestMetadataSyncingRegions struct{}

func (UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestMetadataSyncingRegions) FieldPath() *UpdatePlanAssignmentRequestRequest_FieldSubPath {
	return &UpdatePlanAssignmentRequestRequest_FieldSubPath{
		selector: UpdatePlanAssignmentRequestRequest_FieldPathSelectorPlanAssignmentRequest,
		subPath:  plan_assignment_request.NewPlanAssignmentRequestFieldPathBuilder().Metadata().Syncing().Regions().FieldPath(),
	}
}

func (s UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestMetadataSyncingRegions) WithValue(value []string) *UpdatePlanAssignmentRequestRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdatePlanAssignmentRequestRequest_FieldSubPathValue)
}

func (s UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestMetadataSyncingRegions) WithArrayOfValues(values [][]string) *UpdatePlanAssignmentRequestRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdatePlanAssignmentRequestRequest_FieldSubPathArrayOfValues)
}

func (s UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestMetadataSyncingRegions) WithItemValue(value string) *UpdatePlanAssignmentRequestRequest_FieldSubPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*UpdatePlanAssignmentRequestRequest_FieldSubPathArrayItemValue)
}

type UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestMetadataLifecycle struct{}

func (UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestMetadataLifecycle) FieldPath() *UpdatePlanAssignmentRequestRequest_FieldSubPath {
	return &UpdatePlanAssignmentRequestRequest_FieldSubPath{
		selector: UpdatePlanAssignmentRequestRequest_FieldPathSelectorPlanAssignmentRequest,
		subPath:  plan_assignment_request.NewPlanAssignmentRequestFieldPathBuilder().Metadata().Lifecycle().FieldPath(),
	}
}

func (s UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestMetadataLifecycle) WithValue(value *ntt_meta.Lifecycle) *UpdatePlanAssignmentRequestRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdatePlanAssignmentRequestRequest_FieldSubPathValue)
}

func (s UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestMetadataLifecycle) WithArrayOfValues(values []*ntt_meta.Lifecycle) *UpdatePlanAssignmentRequestRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdatePlanAssignmentRequestRequest_FieldSubPathArrayOfValues)
}

func (UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestMetadataLifecycle) State() UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestMetadataLifecycleState {
	return UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestMetadataLifecycleState{}
}

func (UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestMetadataLifecycle) BlockDeletion() UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestMetadataLifecycleBlockDeletion {
	return UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestMetadataLifecycleBlockDeletion{}
}

type UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestMetadataLifecycleState struct{}

func (UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestMetadataLifecycleState) FieldPath() *UpdatePlanAssignmentRequestRequest_FieldSubPath {
	return &UpdatePlanAssignmentRequestRequest_FieldSubPath{
		selector: UpdatePlanAssignmentRequestRequest_FieldPathSelectorPlanAssignmentRequest,
		subPath:  plan_assignment_request.NewPlanAssignmentRequestFieldPathBuilder().Metadata().Lifecycle().State().FieldPath(),
	}
}

func (s UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestMetadataLifecycleState) WithValue(value ntt_meta.Lifecycle_State) *UpdatePlanAssignmentRequestRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdatePlanAssignmentRequestRequest_FieldSubPathValue)
}

func (s UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestMetadataLifecycleState) WithArrayOfValues(values []ntt_meta.Lifecycle_State) *UpdatePlanAssignmentRequestRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdatePlanAssignmentRequestRequest_FieldSubPathArrayOfValues)
}

type UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestMetadataLifecycleBlockDeletion struct{}

func (UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestMetadataLifecycleBlockDeletion) FieldPath() *UpdatePlanAssignmentRequestRequest_FieldSubPath {
	return &UpdatePlanAssignmentRequestRequest_FieldSubPath{
		selector: UpdatePlanAssignmentRequestRequest_FieldPathSelectorPlanAssignmentRequest,
		subPath:  plan_assignment_request.NewPlanAssignmentRequestFieldPathBuilder().Metadata().Lifecycle().BlockDeletion().FieldPath(),
	}
}

func (s UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestMetadataLifecycleBlockDeletion) WithValue(value bool) *UpdatePlanAssignmentRequestRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdatePlanAssignmentRequestRequest_FieldSubPathValue)
}

func (s UpdatePlanAssignmentRequestRequestPathSelectorPlanAssignmentRequestMetadataLifecycleBlockDeletion) WithArrayOfValues(values []bool) *UpdatePlanAssignmentRequestRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdatePlanAssignmentRequestRequest_FieldSubPathArrayOfValues)
}

type UpdatePlanAssignmentRequestRequestPathSelectorUpdateMask struct{}

func (UpdatePlanAssignmentRequestRequestPathSelectorUpdateMask) FieldPath() *UpdatePlanAssignmentRequestRequest_FieldTerminalPath {
	return &UpdatePlanAssignmentRequestRequest_FieldTerminalPath{selector: UpdatePlanAssignmentRequestRequest_FieldPathSelectorUpdateMask}
}

func (s UpdatePlanAssignmentRequestRequestPathSelectorUpdateMask) WithValue(value *plan_assignment_request.PlanAssignmentRequest_FieldMask) *UpdatePlanAssignmentRequestRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*UpdatePlanAssignmentRequestRequest_FieldTerminalPathValue)
}

func (s UpdatePlanAssignmentRequestRequestPathSelectorUpdateMask) WithArrayOfValues(values []*plan_assignment_request.PlanAssignmentRequest_FieldMask) *UpdatePlanAssignmentRequestRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdatePlanAssignmentRequestRequest_FieldTerminalPathArrayOfValues)
}

type UpdatePlanAssignmentRequestRequestPathSelectorCas struct{}

func (UpdatePlanAssignmentRequestRequestPathSelectorCas) FieldPath() *UpdatePlanAssignmentRequestRequest_FieldTerminalPath {
	return &UpdatePlanAssignmentRequestRequest_FieldTerminalPath{selector: UpdatePlanAssignmentRequestRequest_FieldPathSelectorCas}
}

func (s UpdatePlanAssignmentRequestRequestPathSelectorCas) WithValue(value *UpdatePlanAssignmentRequestRequest_CAS) *UpdatePlanAssignmentRequestRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*UpdatePlanAssignmentRequestRequest_FieldTerminalPathValue)
}

func (s UpdatePlanAssignmentRequestRequestPathSelectorCas) WithArrayOfValues(values []*UpdatePlanAssignmentRequestRequest_CAS) *UpdatePlanAssignmentRequestRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdatePlanAssignmentRequestRequest_FieldTerminalPathArrayOfValues)
}

func (UpdatePlanAssignmentRequestRequestPathSelectorCas) WithSubPath(subPath UpdatePlanAssignmentRequestRequestCAS_FieldPath) *UpdatePlanAssignmentRequestRequest_FieldSubPath {
	return &UpdatePlanAssignmentRequestRequest_FieldSubPath{selector: UpdatePlanAssignmentRequestRequest_FieldPathSelectorCas, subPath: subPath}
}

func (s UpdatePlanAssignmentRequestRequestPathSelectorCas) WithSubValue(subPathValue UpdatePlanAssignmentRequestRequestCAS_FieldPathValue) *UpdatePlanAssignmentRequestRequest_FieldSubPathValue {
	return &UpdatePlanAssignmentRequestRequest_FieldSubPathValue{UpdatePlanAssignmentRequestRequest_FieldPath: s.WithSubPath(subPathValue), subPathValue: subPathValue}
}

func (s UpdatePlanAssignmentRequestRequestPathSelectorCas) WithSubArrayOfValues(subPathArrayOfValues UpdatePlanAssignmentRequestRequestCAS_FieldPathArrayOfValues) *UpdatePlanAssignmentRequestRequest_FieldSubPathArrayOfValues {
	return &UpdatePlanAssignmentRequestRequest_FieldSubPathArrayOfValues{UpdatePlanAssignmentRequestRequest_FieldPath: s.WithSubPath(subPathArrayOfValues), subPathArrayOfValues: subPathArrayOfValues}
}

func (s UpdatePlanAssignmentRequestRequestPathSelectorCas) WithSubArrayItemValue(subPathArrayItemValue UpdatePlanAssignmentRequestRequestCAS_FieldPathArrayItemValue) *UpdatePlanAssignmentRequestRequest_FieldSubPathArrayItemValue {
	return &UpdatePlanAssignmentRequestRequest_FieldSubPathArrayItemValue{UpdatePlanAssignmentRequestRequest_FieldPath: s.WithSubPath(subPathArrayItemValue), subPathItemValue: subPathArrayItemValue}
}

func (UpdatePlanAssignmentRequestRequestPathSelectorCas) ConditionalState() UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalState {
	return UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalState{}
}

func (UpdatePlanAssignmentRequestRequestPathSelectorCas) FieldMask() UpdatePlanAssignmentRequestRequestPathSelectorCasFieldMask {
	return UpdatePlanAssignmentRequestRequestPathSelectorCasFieldMask{}
}

type UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalState struct{}

func (UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalState) FieldPath() *UpdatePlanAssignmentRequestRequest_FieldSubPath {
	return &UpdatePlanAssignmentRequestRequest_FieldSubPath{
		selector: UpdatePlanAssignmentRequestRequest_FieldPathSelectorCas,
		subPath:  NewUpdatePlanAssignmentRequestRequestCASFieldPathBuilder().ConditionalState().FieldPath(),
	}
}

func (s UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalState) WithValue(value *plan_assignment_request.PlanAssignmentRequest) *UpdatePlanAssignmentRequestRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdatePlanAssignmentRequestRequest_FieldSubPathValue)
}

func (s UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalState) WithArrayOfValues(values []*plan_assignment_request.PlanAssignmentRequest) *UpdatePlanAssignmentRequestRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdatePlanAssignmentRequestRequest_FieldSubPathArrayOfValues)
}

func (UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalState) Name() UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalStateName {
	return UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalStateName{}
}

func (UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalState) Request() UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalStateRequest {
	return UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalStateRequest{}
}

func (UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalState) Service() UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalStateService {
	return UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalStateService{}
}

func (UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalState) Approver() UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalStateApprover {
	return UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalStateApprover{}
}

func (UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalState) Status() UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalStateStatus {
	return UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalStateStatus{}
}

func (UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalState) Metadata() UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalStateMetadata {
	return UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalStateMetadata{}
}

type UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalStateName struct{}

func (UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalStateName) FieldPath() *UpdatePlanAssignmentRequestRequest_FieldSubPath {
	return &UpdatePlanAssignmentRequestRequest_FieldSubPath{
		selector: UpdatePlanAssignmentRequestRequest_FieldPathSelectorCas,
		subPath:  NewUpdatePlanAssignmentRequestRequestCASFieldPathBuilder().ConditionalState().Name().FieldPath(),
	}
}

func (s UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalStateName) WithValue(value *plan_assignment_request.Name) *UpdatePlanAssignmentRequestRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdatePlanAssignmentRequestRequest_FieldSubPathValue)
}

func (s UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalStateName) WithArrayOfValues(values []*plan_assignment_request.Name) *UpdatePlanAssignmentRequestRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdatePlanAssignmentRequestRequest_FieldSubPathArrayOfValues)
}

type UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalStateRequest struct{}

func (UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalStateRequest) FieldPath() *UpdatePlanAssignmentRequestRequest_FieldSubPath {
	return &UpdatePlanAssignmentRequestRequest_FieldSubPath{
		selector: UpdatePlanAssignmentRequestRequest_FieldPathSelectorCas,
		subPath:  NewUpdatePlanAssignmentRequestRequestCASFieldPathBuilder().ConditionalState().Request().FieldPath(),
	}
}

func (s UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalStateRequest) WithValue(value *plan_assignment_request.PlanAssignmentRequest_Request) *UpdatePlanAssignmentRequestRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdatePlanAssignmentRequestRequest_FieldSubPathValue)
}

func (s UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalStateRequest) WithArrayOfValues(values []*plan_assignment_request.PlanAssignmentRequest_Request) *UpdatePlanAssignmentRequestRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdatePlanAssignmentRequestRequest_FieldSubPathArrayOfValues)
}

func (UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalStateRequest) Assign() UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalStateRequestAssign {
	return UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalStateRequestAssign{}
}

func (UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalStateRequest) Extend() UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalStateRequestExtend {
	return UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalStateRequestExtend{}
}

func (UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalStateRequest) Redistribute() UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalStateRequestRedistribute {
	return UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalStateRequestRedistribute{}
}

func (UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalStateRequest) Unassign() UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalStateRequestUnassign {
	return UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalStateRequestUnassign{}
}

type UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalStateRequestAssign struct{}

func (UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalStateRequestAssign) FieldPath() *UpdatePlanAssignmentRequestRequest_FieldSubPath {
	return &UpdatePlanAssignmentRequestRequest_FieldSubPath{
		selector: UpdatePlanAssignmentRequestRequest_FieldPathSelectorCas,
		subPath:  NewUpdatePlanAssignmentRequestRequestCASFieldPathBuilder().ConditionalState().Request().Assign().FieldPath(),
	}
}

func (s UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalStateRequestAssign) WithValue(value *plan_assignment_request.PlanAssignmentRequest_Request_Assign) *UpdatePlanAssignmentRequestRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdatePlanAssignmentRequestRequest_FieldSubPathValue)
}

func (s UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalStateRequestAssign) WithArrayOfValues(values []*plan_assignment_request.PlanAssignmentRequest_Request_Assign) *UpdatePlanAssignmentRequestRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdatePlanAssignmentRequestRequest_FieldSubPathArrayOfValues)
}

func (UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalStateRequestAssign) Plan() UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalStateRequestAssignPlan {
	return UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalStateRequestAssignPlan{}
}

func (UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalStateRequestAssign) Extensions() UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalStateRequestAssignExtensions {
	return UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalStateRequestAssignExtensions{}
}

func (UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalStateRequestAssign) RegionalDistributions() UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalStateRequestAssignRegionalDistributions {
	return UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalStateRequestAssignRegionalDistributions{}
}

type UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalStateRequestAssignPlan struct{}

func (UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalStateRequestAssignPlan) FieldPath() *UpdatePlanAssignmentRequestRequest_FieldSubPath {
	return &UpdatePlanAssignmentRequestRequest_FieldSubPath{
		selector: UpdatePlanAssignmentRequestRequest_FieldPathSelectorCas,
		subPath:  NewUpdatePlanAssignmentRequestRequestCASFieldPathBuilder().ConditionalState().Request().Assign().Plan().FieldPath(),
	}
}

func (s UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalStateRequestAssignPlan) WithValue(value *plan.Reference) *UpdatePlanAssignmentRequestRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdatePlanAssignmentRequestRequest_FieldSubPathValue)
}

func (s UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalStateRequestAssignPlan) WithArrayOfValues(values []*plan.Reference) *UpdatePlanAssignmentRequestRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdatePlanAssignmentRequestRequest_FieldSubPathArrayOfValues)
}

type UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalStateRequestAssignExtensions struct{}

func (UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalStateRequestAssignExtensions) FieldPath() *UpdatePlanAssignmentRequestRequest_FieldSubPath {
	return &UpdatePlanAssignmentRequestRequest_FieldSubPath{
		selector: UpdatePlanAssignmentRequestRequest_FieldPathSelectorCas,
		subPath:  NewUpdatePlanAssignmentRequestRequestCASFieldPathBuilder().ConditionalState().Request().Assign().Extensions().FieldPath(),
	}
}

func (s UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalStateRequestAssignExtensions) WithValue(value []*common.Allowance) *UpdatePlanAssignmentRequestRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdatePlanAssignmentRequestRequest_FieldSubPathValue)
}

func (s UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalStateRequestAssignExtensions) WithArrayOfValues(values [][]*common.Allowance) *UpdatePlanAssignmentRequestRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdatePlanAssignmentRequestRequest_FieldSubPathArrayOfValues)
}

func (s UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalStateRequestAssignExtensions) WithItemValue(value *common.Allowance) *UpdatePlanAssignmentRequestRequest_FieldSubPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*UpdatePlanAssignmentRequestRequest_FieldSubPathArrayItemValue)
}

func (UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalStateRequestAssignExtensions) Resource() UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalStateRequestAssignExtensionsResource {
	return UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalStateRequestAssignExtensionsResource{}
}

func (UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalStateRequestAssignExtensions) Value() UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalStateRequestAssignExtensionsValue {
	return UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalStateRequestAssignExtensionsValue{}
}

type UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalStateRequestAssignExtensionsResource struct{}

func (UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalStateRequestAssignExtensionsResource) FieldPath() *UpdatePlanAssignmentRequestRequest_FieldSubPath {
	return &UpdatePlanAssignmentRequestRequest_FieldSubPath{
		selector: UpdatePlanAssignmentRequestRequest_FieldPathSelectorCas,
		subPath:  NewUpdatePlanAssignmentRequestRequestCASFieldPathBuilder().ConditionalState().Request().Assign().Extensions().Resource().FieldPath(),
	}
}

func (s UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalStateRequestAssignExtensionsResource) WithValue(value *meta_resource.Reference) *UpdatePlanAssignmentRequestRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdatePlanAssignmentRequestRequest_FieldSubPathValue)
}

func (s UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalStateRequestAssignExtensionsResource) WithArrayOfValues(values []*meta_resource.Reference) *UpdatePlanAssignmentRequestRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdatePlanAssignmentRequestRequest_FieldSubPathArrayOfValues)
}

type UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalStateRequestAssignExtensionsValue struct{}

func (UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalStateRequestAssignExtensionsValue) FieldPath() *UpdatePlanAssignmentRequestRequest_FieldSubPath {
	return &UpdatePlanAssignmentRequestRequest_FieldSubPath{
		selector: UpdatePlanAssignmentRequestRequest_FieldPathSelectorCas,
		subPath:  NewUpdatePlanAssignmentRequestRequestCASFieldPathBuilder().ConditionalState().Request().Assign().Extensions().Value().FieldPath(),
	}
}

func (s UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalStateRequestAssignExtensionsValue) WithValue(value int64) *UpdatePlanAssignmentRequestRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdatePlanAssignmentRequestRequest_FieldSubPathValue)
}

func (s UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalStateRequestAssignExtensionsValue) WithArrayOfValues(values []int64) *UpdatePlanAssignmentRequestRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdatePlanAssignmentRequestRequest_FieldSubPathArrayOfValues)
}

type UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalStateRequestAssignRegionalDistributions struct{}

func (UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalStateRequestAssignRegionalDistributions) FieldPath() *UpdatePlanAssignmentRequestRequest_FieldSubPath {
	return &UpdatePlanAssignmentRequestRequest_FieldSubPath{
		selector: UpdatePlanAssignmentRequestRequest_FieldPathSelectorCas,
		subPath:  NewUpdatePlanAssignmentRequestRequestCASFieldPathBuilder().ConditionalState().Request().Assign().RegionalDistributions().FieldPath(),
	}
}

func (s UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalStateRequestAssignRegionalDistributions) WithValue(value []*common.RegionalDistribution) *UpdatePlanAssignmentRequestRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdatePlanAssignmentRequestRequest_FieldSubPathValue)
}

func (s UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalStateRequestAssignRegionalDistributions) WithArrayOfValues(values [][]*common.RegionalDistribution) *UpdatePlanAssignmentRequestRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdatePlanAssignmentRequestRequest_FieldSubPathArrayOfValues)
}

func (s UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalStateRequestAssignRegionalDistributions) WithItemValue(value *common.RegionalDistribution) *UpdatePlanAssignmentRequestRequest_FieldSubPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*UpdatePlanAssignmentRequestRequest_FieldSubPathArrayItemValue)
}

func (UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalStateRequestAssignRegionalDistributions) Resource() UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalStateRequestAssignRegionalDistributionsResource {
	return UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalStateRequestAssignRegionalDistributionsResource{}
}

func (UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalStateRequestAssignRegionalDistributions) LimitsByRegion() UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalStateRequestAssignRegionalDistributionsLimitsByRegion {
	return UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalStateRequestAssignRegionalDistributionsLimitsByRegion{}
}

type UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalStateRequestAssignRegionalDistributionsResource struct{}

func (UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalStateRequestAssignRegionalDistributionsResource) FieldPath() *UpdatePlanAssignmentRequestRequest_FieldSubPath {
	return &UpdatePlanAssignmentRequestRequest_FieldSubPath{
		selector: UpdatePlanAssignmentRequestRequest_FieldPathSelectorCas,
		subPath:  NewUpdatePlanAssignmentRequestRequestCASFieldPathBuilder().ConditionalState().Request().Assign().RegionalDistributions().Resource().FieldPath(),
	}
}

func (s UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalStateRequestAssignRegionalDistributionsResource) WithValue(value *meta_resource.Reference) *UpdatePlanAssignmentRequestRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdatePlanAssignmentRequestRequest_FieldSubPathValue)
}

func (s UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalStateRequestAssignRegionalDistributionsResource) WithArrayOfValues(values []*meta_resource.Reference) *UpdatePlanAssignmentRequestRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdatePlanAssignmentRequestRequest_FieldSubPathArrayOfValues)
}

type UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalStateRequestAssignRegionalDistributionsLimitsByRegion struct{}

func (UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalStateRequestAssignRegionalDistributionsLimitsByRegion) FieldPath() *UpdatePlanAssignmentRequestRequest_FieldSubPath {
	return &UpdatePlanAssignmentRequestRequest_FieldSubPath{
		selector: UpdatePlanAssignmentRequestRequest_FieldPathSelectorCas,
		subPath:  NewUpdatePlanAssignmentRequestRequestCASFieldPathBuilder().ConditionalState().Request().Assign().RegionalDistributions().LimitsByRegion().FieldPath(),
	}
}

func (s UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalStateRequestAssignRegionalDistributionsLimitsByRegion) WithValue(value map[string]int64) *UpdatePlanAssignmentRequestRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdatePlanAssignmentRequestRequest_FieldSubPathValue)
}

func (s UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalStateRequestAssignRegionalDistributionsLimitsByRegion) WithArrayOfValues(values []map[string]int64) *UpdatePlanAssignmentRequestRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdatePlanAssignmentRequestRequest_FieldSubPathArrayOfValues)
}

func (UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalStateRequestAssignRegionalDistributionsLimitsByRegion) WithKey(key string) UpdatePlanAssignmentRequestRequestMapPathSelectorCasConditionalStateRequestAssignRegionalDistributionsLimitsByRegion {
	return UpdatePlanAssignmentRequestRequestMapPathSelectorCasConditionalStateRequestAssignRegionalDistributionsLimitsByRegion{key: key}
}

type UpdatePlanAssignmentRequestRequestMapPathSelectorCasConditionalStateRequestAssignRegionalDistributionsLimitsByRegion struct {
	key string
}

func (s UpdatePlanAssignmentRequestRequestMapPathSelectorCasConditionalStateRequestAssignRegionalDistributionsLimitsByRegion) FieldPath() *UpdatePlanAssignmentRequestRequest_FieldSubPath {
	return &UpdatePlanAssignmentRequestRequest_FieldSubPath{
		selector: UpdatePlanAssignmentRequestRequest_FieldPathSelectorCas,
		subPath:  NewUpdatePlanAssignmentRequestRequestCASFieldPathBuilder().ConditionalState().Request().Assign().RegionalDistributions().LimitsByRegion().WithKey(s.key).FieldPath(),
	}
}

func (s UpdatePlanAssignmentRequestRequestMapPathSelectorCasConditionalStateRequestAssignRegionalDistributionsLimitsByRegion) WithValue(value int64) *UpdatePlanAssignmentRequestRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdatePlanAssignmentRequestRequest_FieldSubPathValue)
}

func (s UpdatePlanAssignmentRequestRequestMapPathSelectorCasConditionalStateRequestAssignRegionalDistributionsLimitsByRegion) WithArrayOfValues(values []int64) *UpdatePlanAssignmentRequestRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdatePlanAssignmentRequestRequest_FieldSubPathArrayOfValues)
}

type UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalStateRequestExtend struct{}

func (UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalStateRequestExtend) FieldPath() *UpdatePlanAssignmentRequestRequest_FieldSubPath {
	return &UpdatePlanAssignmentRequestRequest_FieldSubPath{
		selector: UpdatePlanAssignmentRequestRequest_FieldPathSelectorCas,
		subPath:  NewUpdatePlanAssignmentRequestRequestCASFieldPathBuilder().ConditionalState().Request().Extend().FieldPath(),
	}
}

func (s UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalStateRequestExtend) WithValue(value *plan_assignment_request.PlanAssignmentRequest_Request_Extend) *UpdatePlanAssignmentRequestRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdatePlanAssignmentRequestRequest_FieldSubPathValue)
}

func (s UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalStateRequestExtend) WithArrayOfValues(values []*plan_assignment_request.PlanAssignmentRequest_Request_Extend) *UpdatePlanAssignmentRequestRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdatePlanAssignmentRequestRequest_FieldSubPathArrayOfValues)
}

func (UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalStateRequestExtend) Assignment() UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalStateRequestExtendAssignment {
	return UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalStateRequestExtendAssignment{}
}

func (UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalStateRequestExtend) Additions() UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalStateRequestExtendAdditions {
	return UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalStateRequestExtendAdditions{}
}

func (UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalStateRequestExtend) RegionalDistributions() UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalStateRequestExtendRegionalDistributions {
	return UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalStateRequestExtendRegionalDistributions{}
}

type UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalStateRequestExtendAssignment struct{}

func (UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalStateRequestExtendAssignment) FieldPath() *UpdatePlanAssignmentRequestRequest_FieldSubPath {
	return &UpdatePlanAssignmentRequestRequest_FieldSubPath{
		selector: UpdatePlanAssignmentRequestRequest_FieldPathSelectorCas,
		subPath:  NewUpdatePlanAssignmentRequestRequestCASFieldPathBuilder().ConditionalState().Request().Extend().Assignment().FieldPath(),
	}
}

func (s UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalStateRequestExtendAssignment) WithValue(value *plan_assignment.Reference) *UpdatePlanAssignmentRequestRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdatePlanAssignmentRequestRequest_FieldSubPathValue)
}

func (s UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalStateRequestExtendAssignment) WithArrayOfValues(values []*plan_assignment.Reference) *UpdatePlanAssignmentRequestRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdatePlanAssignmentRequestRequest_FieldSubPathArrayOfValues)
}

type UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalStateRequestExtendAdditions struct{}

func (UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalStateRequestExtendAdditions) FieldPath() *UpdatePlanAssignmentRequestRequest_FieldSubPath {
	return &UpdatePlanAssignmentRequestRequest_FieldSubPath{
		selector: UpdatePlanAssignmentRequestRequest_FieldPathSelectorCas,
		subPath:  NewUpdatePlanAssignmentRequestRequestCASFieldPathBuilder().ConditionalState().Request().Extend().Additions().FieldPath(),
	}
}

func (s UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalStateRequestExtendAdditions) WithValue(value []*common.Allowance) *UpdatePlanAssignmentRequestRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdatePlanAssignmentRequestRequest_FieldSubPathValue)
}

func (s UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalStateRequestExtendAdditions) WithArrayOfValues(values [][]*common.Allowance) *UpdatePlanAssignmentRequestRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdatePlanAssignmentRequestRequest_FieldSubPathArrayOfValues)
}

func (s UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalStateRequestExtendAdditions) WithItemValue(value *common.Allowance) *UpdatePlanAssignmentRequestRequest_FieldSubPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*UpdatePlanAssignmentRequestRequest_FieldSubPathArrayItemValue)
}

func (UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalStateRequestExtendAdditions) Resource() UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalStateRequestExtendAdditionsResource {
	return UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalStateRequestExtendAdditionsResource{}
}

func (UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalStateRequestExtendAdditions) Value() UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalStateRequestExtendAdditionsValue {
	return UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalStateRequestExtendAdditionsValue{}
}

type UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalStateRequestExtendAdditionsResource struct{}

func (UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalStateRequestExtendAdditionsResource) FieldPath() *UpdatePlanAssignmentRequestRequest_FieldSubPath {
	return &UpdatePlanAssignmentRequestRequest_FieldSubPath{
		selector: UpdatePlanAssignmentRequestRequest_FieldPathSelectorCas,
		subPath:  NewUpdatePlanAssignmentRequestRequestCASFieldPathBuilder().ConditionalState().Request().Extend().Additions().Resource().FieldPath(),
	}
}

func (s UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalStateRequestExtendAdditionsResource) WithValue(value *meta_resource.Reference) *UpdatePlanAssignmentRequestRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdatePlanAssignmentRequestRequest_FieldSubPathValue)
}

func (s UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalStateRequestExtendAdditionsResource) WithArrayOfValues(values []*meta_resource.Reference) *UpdatePlanAssignmentRequestRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdatePlanAssignmentRequestRequest_FieldSubPathArrayOfValues)
}

type UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalStateRequestExtendAdditionsValue struct{}

func (UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalStateRequestExtendAdditionsValue) FieldPath() *UpdatePlanAssignmentRequestRequest_FieldSubPath {
	return &UpdatePlanAssignmentRequestRequest_FieldSubPath{
		selector: UpdatePlanAssignmentRequestRequest_FieldPathSelectorCas,
		subPath:  NewUpdatePlanAssignmentRequestRequestCASFieldPathBuilder().ConditionalState().Request().Extend().Additions().Value().FieldPath(),
	}
}

func (s UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalStateRequestExtendAdditionsValue) WithValue(value int64) *UpdatePlanAssignmentRequestRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdatePlanAssignmentRequestRequest_FieldSubPathValue)
}

func (s UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalStateRequestExtendAdditionsValue) WithArrayOfValues(values []int64) *UpdatePlanAssignmentRequestRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdatePlanAssignmentRequestRequest_FieldSubPathArrayOfValues)
}

type UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalStateRequestExtendRegionalDistributions struct{}

func (UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalStateRequestExtendRegionalDistributions) FieldPath() *UpdatePlanAssignmentRequestRequest_FieldSubPath {
	return &UpdatePlanAssignmentRequestRequest_FieldSubPath{
		selector: UpdatePlanAssignmentRequestRequest_FieldPathSelectorCas,
		subPath:  NewUpdatePlanAssignmentRequestRequestCASFieldPathBuilder().ConditionalState().Request().Extend().RegionalDistributions().FieldPath(),
	}
}

func (s UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalStateRequestExtendRegionalDistributions) WithValue(value []*common.RegionalDistribution) *UpdatePlanAssignmentRequestRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdatePlanAssignmentRequestRequest_FieldSubPathValue)
}

func (s UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalStateRequestExtendRegionalDistributions) WithArrayOfValues(values [][]*common.RegionalDistribution) *UpdatePlanAssignmentRequestRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdatePlanAssignmentRequestRequest_FieldSubPathArrayOfValues)
}

func (s UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalStateRequestExtendRegionalDistributions) WithItemValue(value *common.RegionalDistribution) *UpdatePlanAssignmentRequestRequest_FieldSubPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*UpdatePlanAssignmentRequestRequest_FieldSubPathArrayItemValue)
}

func (UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalStateRequestExtendRegionalDistributions) Resource() UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalStateRequestExtendRegionalDistributionsResource {
	return UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalStateRequestExtendRegionalDistributionsResource{}
}

func (UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalStateRequestExtendRegionalDistributions) LimitsByRegion() UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalStateRequestExtendRegionalDistributionsLimitsByRegion {
	return UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalStateRequestExtendRegionalDistributionsLimitsByRegion{}
}

type UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalStateRequestExtendRegionalDistributionsResource struct{}

func (UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalStateRequestExtendRegionalDistributionsResource) FieldPath() *UpdatePlanAssignmentRequestRequest_FieldSubPath {
	return &UpdatePlanAssignmentRequestRequest_FieldSubPath{
		selector: UpdatePlanAssignmentRequestRequest_FieldPathSelectorCas,
		subPath:  NewUpdatePlanAssignmentRequestRequestCASFieldPathBuilder().ConditionalState().Request().Extend().RegionalDistributions().Resource().FieldPath(),
	}
}

func (s UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalStateRequestExtendRegionalDistributionsResource) WithValue(value *meta_resource.Reference) *UpdatePlanAssignmentRequestRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdatePlanAssignmentRequestRequest_FieldSubPathValue)
}

func (s UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalStateRequestExtendRegionalDistributionsResource) WithArrayOfValues(values []*meta_resource.Reference) *UpdatePlanAssignmentRequestRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdatePlanAssignmentRequestRequest_FieldSubPathArrayOfValues)
}

type UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalStateRequestExtendRegionalDistributionsLimitsByRegion struct{}

func (UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalStateRequestExtendRegionalDistributionsLimitsByRegion) FieldPath() *UpdatePlanAssignmentRequestRequest_FieldSubPath {
	return &UpdatePlanAssignmentRequestRequest_FieldSubPath{
		selector: UpdatePlanAssignmentRequestRequest_FieldPathSelectorCas,
		subPath:  NewUpdatePlanAssignmentRequestRequestCASFieldPathBuilder().ConditionalState().Request().Extend().RegionalDistributions().LimitsByRegion().FieldPath(),
	}
}

func (s UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalStateRequestExtendRegionalDistributionsLimitsByRegion) WithValue(value map[string]int64) *UpdatePlanAssignmentRequestRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdatePlanAssignmentRequestRequest_FieldSubPathValue)
}

func (s UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalStateRequestExtendRegionalDistributionsLimitsByRegion) WithArrayOfValues(values []map[string]int64) *UpdatePlanAssignmentRequestRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdatePlanAssignmentRequestRequest_FieldSubPathArrayOfValues)
}

func (UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalStateRequestExtendRegionalDistributionsLimitsByRegion) WithKey(key string) UpdatePlanAssignmentRequestRequestMapPathSelectorCasConditionalStateRequestExtendRegionalDistributionsLimitsByRegion {
	return UpdatePlanAssignmentRequestRequestMapPathSelectorCasConditionalStateRequestExtendRegionalDistributionsLimitsByRegion{key: key}
}

type UpdatePlanAssignmentRequestRequestMapPathSelectorCasConditionalStateRequestExtendRegionalDistributionsLimitsByRegion struct {
	key string
}

func (s UpdatePlanAssignmentRequestRequestMapPathSelectorCasConditionalStateRequestExtendRegionalDistributionsLimitsByRegion) FieldPath() *UpdatePlanAssignmentRequestRequest_FieldSubPath {
	return &UpdatePlanAssignmentRequestRequest_FieldSubPath{
		selector: UpdatePlanAssignmentRequestRequest_FieldPathSelectorCas,
		subPath:  NewUpdatePlanAssignmentRequestRequestCASFieldPathBuilder().ConditionalState().Request().Extend().RegionalDistributions().LimitsByRegion().WithKey(s.key).FieldPath(),
	}
}

func (s UpdatePlanAssignmentRequestRequestMapPathSelectorCasConditionalStateRequestExtendRegionalDistributionsLimitsByRegion) WithValue(value int64) *UpdatePlanAssignmentRequestRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdatePlanAssignmentRequestRequest_FieldSubPathValue)
}

func (s UpdatePlanAssignmentRequestRequestMapPathSelectorCasConditionalStateRequestExtendRegionalDistributionsLimitsByRegion) WithArrayOfValues(values []int64) *UpdatePlanAssignmentRequestRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdatePlanAssignmentRequestRequest_FieldSubPathArrayOfValues)
}

type UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalStateRequestRedistribute struct{}

func (UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalStateRequestRedistribute) FieldPath() *UpdatePlanAssignmentRequestRequest_FieldSubPath {
	return &UpdatePlanAssignmentRequestRequest_FieldSubPath{
		selector: UpdatePlanAssignmentRequestRequest_FieldPathSelectorCas,
		subPath:  NewUpdatePlanAssignmentRequestRequestCASFieldPathBuilder().ConditionalState().Request().Redistribute().FieldPath(),
	}
}

func (s UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalStateRequestRedistribute) WithValue(value *plan_assignment_request.PlanAssignmentRequest_Request_Redistribute) *UpdatePlanAssignmentRequestRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdatePlanAssignmentRequestRequest_FieldSubPathValue)
}

func (s UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalStateRequestRedistribute) WithArrayOfValues(values []*plan_assignment_request.PlanAssignmentRequest_Request_Redistribute) *UpdatePlanAssignmentRequestRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdatePlanAssignmentRequestRequest_FieldSubPathArrayOfValues)
}

func (UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalStateRequestRedistribute) Assignment() UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalStateRequestRedistributeAssignment {
	return UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalStateRequestRedistributeAssignment{}
}

func (UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalStateRequestRedistribute) RegionalDistributions() UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalStateRequestRedistributeRegionalDistributions {
	return UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalStateRequestRedistributeRegionalDistributions{}
}

type UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalStateRequestRedistributeAssignment struct{}

func (UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalStateRequestRedistributeAssignment) FieldPath() *UpdatePlanAssignmentRequestRequest_FieldSubPath {
	return &UpdatePlanAssignmentRequestRequest_FieldSubPath{
		selector: UpdatePlanAssignmentRequestRequest_FieldPathSelectorCas,
		subPath:  NewUpdatePlanAssignmentRequestRequestCASFieldPathBuilder().ConditionalState().Request().Redistribute().Assignment().FieldPath(),
	}
}

func (s UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalStateRequestRedistributeAssignment) WithValue(value *plan_assignment.Reference) *UpdatePlanAssignmentRequestRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdatePlanAssignmentRequestRequest_FieldSubPathValue)
}

func (s UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalStateRequestRedistributeAssignment) WithArrayOfValues(values []*plan_assignment.Reference) *UpdatePlanAssignmentRequestRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdatePlanAssignmentRequestRequest_FieldSubPathArrayOfValues)
}

type UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalStateRequestRedistributeRegionalDistributions struct{}

func (UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalStateRequestRedistributeRegionalDistributions) FieldPath() *UpdatePlanAssignmentRequestRequest_FieldSubPath {
	return &UpdatePlanAssignmentRequestRequest_FieldSubPath{
		selector: UpdatePlanAssignmentRequestRequest_FieldPathSelectorCas,
		subPath:  NewUpdatePlanAssignmentRequestRequestCASFieldPathBuilder().ConditionalState().Request().Redistribute().RegionalDistributions().FieldPath(),
	}
}

func (s UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalStateRequestRedistributeRegionalDistributions) WithValue(value []*common.RegionalDistribution) *UpdatePlanAssignmentRequestRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdatePlanAssignmentRequestRequest_FieldSubPathValue)
}

func (s UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalStateRequestRedistributeRegionalDistributions) WithArrayOfValues(values [][]*common.RegionalDistribution) *UpdatePlanAssignmentRequestRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdatePlanAssignmentRequestRequest_FieldSubPathArrayOfValues)
}

func (s UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalStateRequestRedistributeRegionalDistributions) WithItemValue(value *common.RegionalDistribution) *UpdatePlanAssignmentRequestRequest_FieldSubPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*UpdatePlanAssignmentRequestRequest_FieldSubPathArrayItemValue)
}

func (UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalStateRequestRedistributeRegionalDistributions) Resource() UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalStateRequestRedistributeRegionalDistributionsResource {
	return UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalStateRequestRedistributeRegionalDistributionsResource{}
}

func (UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalStateRequestRedistributeRegionalDistributions) LimitsByRegion() UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalStateRequestRedistributeRegionalDistributionsLimitsByRegion {
	return UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalStateRequestRedistributeRegionalDistributionsLimitsByRegion{}
}

type UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalStateRequestRedistributeRegionalDistributionsResource struct{}

func (UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalStateRequestRedistributeRegionalDistributionsResource) FieldPath() *UpdatePlanAssignmentRequestRequest_FieldSubPath {
	return &UpdatePlanAssignmentRequestRequest_FieldSubPath{
		selector: UpdatePlanAssignmentRequestRequest_FieldPathSelectorCas,
		subPath:  NewUpdatePlanAssignmentRequestRequestCASFieldPathBuilder().ConditionalState().Request().Redistribute().RegionalDistributions().Resource().FieldPath(),
	}
}

func (s UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalStateRequestRedistributeRegionalDistributionsResource) WithValue(value *meta_resource.Reference) *UpdatePlanAssignmentRequestRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdatePlanAssignmentRequestRequest_FieldSubPathValue)
}

func (s UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalStateRequestRedistributeRegionalDistributionsResource) WithArrayOfValues(values []*meta_resource.Reference) *UpdatePlanAssignmentRequestRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdatePlanAssignmentRequestRequest_FieldSubPathArrayOfValues)
}

type UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalStateRequestRedistributeRegionalDistributionsLimitsByRegion struct{}

func (UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalStateRequestRedistributeRegionalDistributionsLimitsByRegion) FieldPath() *UpdatePlanAssignmentRequestRequest_FieldSubPath {
	return &UpdatePlanAssignmentRequestRequest_FieldSubPath{
		selector: UpdatePlanAssignmentRequestRequest_FieldPathSelectorCas,
		subPath:  NewUpdatePlanAssignmentRequestRequestCASFieldPathBuilder().ConditionalState().Request().Redistribute().RegionalDistributions().LimitsByRegion().FieldPath(),
	}
}

func (s UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalStateRequestRedistributeRegionalDistributionsLimitsByRegion) WithValue(value map[string]int64) *UpdatePlanAssignmentRequestRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdatePlanAssignmentRequestRequest_FieldSubPathValue)
}

func (s UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalStateRequestRedistributeRegionalDistributionsLimitsByRegion) WithArrayOfValues(values []map[string]int64) *UpdatePlanAssignmentRequestRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdatePlanAssignmentRequestRequest_FieldSubPathArrayOfValues)
}

func (UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalStateRequestRedistributeRegionalDistributionsLimitsByRegion) WithKey(key string) UpdatePlanAssignmentRequestRequestMapPathSelectorCasConditionalStateRequestRedistributeRegionalDistributionsLimitsByRegion {
	return UpdatePlanAssignmentRequestRequestMapPathSelectorCasConditionalStateRequestRedistributeRegionalDistributionsLimitsByRegion{key: key}
}

type UpdatePlanAssignmentRequestRequestMapPathSelectorCasConditionalStateRequestRedistributeRegionalDistributionsLimitsByRegion struct {
	key string
}

func (s UpdatePlanAssignmentRequestRequestMapPathSelectorCasConditionalStateRequestRedistributeRegionalDistributionsLimitsByRegion) FieldPath() *UpdatePlanAssignmentRequestRequest_FieldSubPath {
	return &UpdatePlanAssignmentRequestRequest_FieldSubPath{
		selector: UpdatePlanAssignmentRequestRequest_FieldPathSelectorCas,
		subPath:  NewUpdatePlanAssignmentRequestRequestCASFieldPathBuilder().ConditionalState().Request().Redistribute().RegionalDistributions().LimitsByRegion().WithKey(s.key).FieldPath(),
	}
}

func (s UpdatePlanAssignmentRequestRequestMapPathSelectorCasConditionalStateRequestRedistributeRegionalDistributionsLimitsByRegion) WithValue(value int64) *UpdatePlanAssignmentRequestRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdatePlanAssignmentRequestRequest_FieldSubPathValue)
}

func (s UpdatePlanAssignmentRequestRequestMapPathSelectorCasConditionalStateRequestRedistributeRegionalDistributionsLimitsByRegion) WithArrayOfValues(values []int64) *UpdatePlanAssignmentRequestRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdatePlanAssignmentRequestRequest_FieldSubPathArrayOfValues)
}

type UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalStateRequestUnassign struct{}

func (UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalStateRequestUnassign) FieldPath() *UpdatePlanAssignmentRequestRequest_FieldSubPath {
	return &UpdatePlanAssignmentRequestRequest_FieldSubPath{
		selector: UpdatePlanAssignmentRequestRequest_FieldPathSelectorCas,
		subPath:  NewUpdatePlanAssignmentRequestRequestCASFieldPathBuilder().ConditionalState().Request().Unassign().FieldPath(),
	}
}

func (s UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalStateRequestUnassign) WithValue(value *plan_assignment_request.PlanAssignmentRequest_Request_Unassign) *UpdatePlanAssignmentRequestRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdatePlanAssignmentRequestRequest_FieldSubPathValue)
}

func (s UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalStateRequestUnassign) WithArrayOfValues(values []*plan_assignment_request.PlanAssignmentRequest_Request_Unassign) *UpdatePlanAssignmentRequestRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdatePlanAssignmentRequestRequest_FieldSubPathArrayOfValues)
}

func (UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalStateRequestUnassign) Assignment() UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalStateRequestUnassignAssignment {
	return UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalStateRequestUnassignAssignment{}
}

type UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalStateRequestUnassignAssignment struct{}

func (UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalStateRequestUnassignAssignment) FieldPath() *UpdatePlanAssignmentRequestRequest_FieldSubPath {
	return &UpdatePlanAssignmentRequestRequest_FieldSubPath{
		selector: UpdatePlanAssignmentRequestRequest_FieldPathSelectorCas,
		subPath:  NewUpdatePlanAssignmentRequestRequestCASFieldPathBuilder().ConditionalState().Request().Unassign().Assignment().FieldPath(),
	}
}

func (s UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalStateRequestUnassignAssignment) WithValue(value *plan_assignment.Reference) *UpdatePlanAssignmentRequestRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdatePlanAssignmentRequestRequest_FieldSubPathValue)
}

func (s UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalStateRequestUnassignAssignment) WithArrayOfValues(values []*plan_assignment.Reference) *UpdatePlanAssignmentRequestRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdatePlanAssignmentRequestRequest_FieldSubPathArrayOfValues)
}

type UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalStateService struct{}

func (UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalStateService) FieldPath() *UpdatePlanAssignmentRequestRequest_FieldSubPath {
	return &UpdatePlanAssignmentRequestRequest_FieldSubPath{
		selector: UpdatePlanAssignmentRequestRequest_FieldPathSelectorCas,
		subPath:  NewUpdatePlanAssignmentRequestRequestCASFieldPathBuilder().ConditionalState().Service().FieldPath(),
	}
}

func (s UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalStateService) WithValue(value *meta_service.Reference) *UpdatePlanAssignmentRequestRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdatePlanAssignmentRequestRequest_FieldSubPathValue)
}

func (s UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalStateService) WithArrayOfValues(values []*meta_service.Reference) *UpdatePlanAssignmentRequestRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdatePlanAssignmentRequestRequest_FieldSubPathArrayOfValues)
}

type UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalStateApprover struct{}

func (UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalStateApprover) FieldPath() *UpdatePlanAssignmentRequestRequest_FieldSubPath {
	return &UpdatePlanAssignmentRequestRequest_FieldSubPath{
		selector: UpdatePlanAssignmentRequestRequest_FieldPathSelectorCas,
		subPath:  NewUpdatePlanAssignmentRequestRequestCASFieldPathBuilder().ConditionalState().Approver().FieldPath(),
	}
}

func (s UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalStateApprover) WithValue(value *iam_organization.Reference) *UpdatePlanAssignmentRequestRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdatePlanAssignmentRequestRequest_FieldSubPathValue)
}

func (s UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalStateApprover) WithArrayOfValues(values []*iam_organization.Reference) *UpdatePlanAssignmentRequestRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdatePlanAssignmentRequestRequest_FieldSubPathArrayOfValues)
}

type UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalStateStatus struct{}

func (UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalStateStatus) FieldPath() *UpdatePlanAssignmentRequestRequest_FieldSubPath {
	return &UpdatePlanAssignmentRequestRequest_FieldSubPath{
		selector: UpdatePlanAssignmentRequestRequest_FieldPathSelectorCas,
		subPath:  NewUpdatePlanAssignmentRequestRequestCASFieldPathBuilder().ConditionalState().Status().FieldPath(),
	}
}

func (s UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalStateStatus) WithValue(value *plan_assignment_request.PlanAssignmentRequest_Status) *UpdatePlanAssignmentRequestRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdatePlanAssignmentRequestRequest_FieldSubPathValue)
}

func (s UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalStateStatus) WithArrayOfValues(values []*plan_assignment_request.PlanAssignmentRequest_Status) *UpdatePlanAssignmentRequestRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdatePlanAssignmentRequestRequest_FieldSubPathArrayOfValues)
}

func (UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalStateStatus) Conclusion() UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalStateStatusConclusion {
	return UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalStateStatusConclusion{}
}

func (UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalStateStatus) Reason() UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalStateStatusReason {
	return UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalStateStatusReason{}
}

type UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalStateStatusConclusion struct{}

func (UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalStateStatusConclusion) FieldPath() *UpdatePlanAssignmentRequestRequest_FieldSubPath {
	return &UpdatePlanAssignmentRequestRequest_FieldSubPath{
		selector: UpdatePlanAssignmentRequestRequest_FieldPathSelectorCas,
		subPath:  NewUpdatePlanAssignmentRequestRequestCASFieldPathBuilder().ConditionalState().Status().Conclusion().FieldPath(),
	}
}

func (s UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalStateStatusConclusion) WithValue(value plan_assignment_request.PlanAssignmentRequest_Status_Conclusion) *UpdatePlanAssignmentRequestRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdatePlanAssignmentRequestRequest_FieldSubPathValue)
}

func (s UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalStateStatusConclusion) WithArrayOfValues(values []plan_assignment_request.PlanAssignmentRequest_Status_Conclusion) *UpdatePlanAssignmentRequestRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdatePlanAssignmentRequestRequest_FieldSubPathArrayOfValues)
}

type UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalStateStatusReason struct{}

func (UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalStateStatusReason) FieldPath() *UpdatePlanAssignmentRequestRequest_FieldSubPath {
	return &UpdatePlanAssignmentRequestRequest_FieldSubPath{
		selector: UpdatePlanAssignmentRequestRequest_FieldPathSelectorCas,
		subPath:  NewUpdatePlanAssignmentRequestRequestCASFieldPathBuilder().ConditionalState().Status().Reason().FieldPath(),
	}
}

func (s UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalStateStatusReason) WithValue(value string) *UpdatePlanAssignmentRequestRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdatePlanAssignmentRequestRequest_FieldSubPathValue)
}

func (s UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalStateStatusReason) WithArrayOfValues(values []string) *UpdatePlanAssignmentRequestRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdatePlanAssignmentRequestRequest_FieldSubPathArrayOfValues)
}

type UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalStateMetadata struct{}

func (UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalStateMetadata) FieldPath() *UpdatePlanAssignmentRequestRequest_FieldSubPath {
	return &UpdatePlanAssignmentRequestRequest_FieldSubPath{
		selector: UpdatePlanAssignmentRequestRequest_FieldPathSelectorCas,
		subPath:  NewUpdatePlanAssignmentRequestRequestCASFieldPathBuilder().ConditionalState().Metadata().FieldPath(),
	}
}

func (s UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalStateMetadata) WithValue(value *ntt_meta.Meta) *UpdatePlanAssignmentRequestRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdatePlanAssignmentRequestRequest_FieldSubPathValue)
}

func (s UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalStateMetadata) WithArrayOfValues(values []*ntt_meta.Meta) *UpdatePlanAssignmentRequestRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdatePlanAssignmentRequestRequest_FieldSubPathArrayOfValues)
}

func (UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalStateMetadata) CreateTime() UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalStateMetadataCreateTime {
	return UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalStateMetadataCreateTime{}
}

func (UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalStateMetadata) UpdateTime() UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalStateMetadataUpdateTime {
	return UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalStateMetadataUpdateTime{}
}

func (UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalStateMetadata) DeleteTime() UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalStateMetadataDeleteTime {
	return UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalStateMetadataDeleteTime{}
}

func (UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalStateMetadata) Uuid() UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalStateMetadataUuid {
	return UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalStateMetadataUuid{}
}

func (UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalStateMetadata) Tags() UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalStateMetadataTags {
	return UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalStateMetadataTags{}
}

func (UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalStateMetadata) Labels() UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalStateMetadataLabels {
	return UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalStateMetadataLabels{}
}

func (UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalStateMetadata) Annotations() UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalStateMetadataAnnotations {
	return UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalStateMetadataAnnotations{}
}

func (UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalStateMetadata) Generation() UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalStateMetadataGeneration {
	return UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalStateMetadataGeneration{}
}

func (UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalStateMetadata) ResourceVersion() UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalStateMetadataResourceVersion {
	return UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalStateMetadataResourceVersion{}
}

func (UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalStateMetadata) OwnerReferences() UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalStateMetadataOwnerReferences {
	return UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalStateMetadataOwnerReferences{}
}

func (UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalStateMetadata) Shards() UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalStateMetadataShards {
	return UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalStateMetadataShards{}
}

func (UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalStateMetadata) Syncing() UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalStateMetadataSyncing {
	return UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalStateMetadataSyncing{}
}

func (UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalStateMetadata) Lifecycle() UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalStateMetadataLifecycle {
	return UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalStateMetadataLifecycle{}
}

type UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalStateMetadataCreateTime struct{}

func (UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalStateMetadataCreateTime) FieldPath() *UpdatePlanAssignmentRequestRequest_FieldSubPath {
	return &UpdatePlanAssignmentRequestRequest_FieldSubPath{
		selector: UpdatePlanAssignmentRequestRequest_FieldPathSelectorCas,
		subPath:  NewUpdatePlanAssignmentRequestRequestCASFieldPathBuilder().ConditionalState().Metadata().CreateTime().FieldPath(),
	}
}

func (s UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalStateMetadataCreateTime) WithValue(value *timestamp.Timestamp) *UpdatePlanAssignmentRequestRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdatePlanAssignmentRequestRequest_FieldSubPathValue)
}

func (s UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalStateMetadataCreateTime) WithArrayOfValues(values []*timestamp.Timestamp) *UpdatePlanAssignmentRequestRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdatePlanAssignmentRequestRequest_FieldSubPathArrayOfValues)
}

type UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalStateMetadataUpdateTime struct{}

func (UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalStateMetadataUpdateTime) FieldPath() *UpdatePlanAssignmentRequestRequest_FieldSubPath {
	return &UpdatePlanAssignmentRequestRequest_FieldSubPath{
		selector: UpdatePlanAssignmentRequestRequest_FieldPathSelectorCas,
		subPath:  NewUpdatePlanAssignmentRequestRequestCASFieldPathBuilder().ConditionalState().Metadata().UpdateTime().FieldPath(),
	}
}

func (s UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalStateMetadataUpdateTime) WithValue(value *timestamp.Timestamp) *UpdatePlanAssignmentRequestRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdatePlanAssignmentRequestRequest_FieldSubPathValue)
}

func (s UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalStateMetadataUpdateTime) WithArrayOfValues(values []*timestamp.Timestamp) *UpdatePlanAssignmentRequestRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdatePlanAssignmentRequestRequest_FieldSubPathArrayOfValues)
}

type UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalStateMetadataDeleteTime struct{}

func (UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalStateMetadataDeleteTime) FieldPath() *UpdatePlanAssignmentRequestRequest_FieldSubPath {
	return &UpdatePlanAssignmentRequestRequest_FieldSubPath{
		selector: UpdatePlanAssignmentRequestRequest_FieldPathSelectorCas,
		subPath:  NewUpdatePlanAssignmentRequestRequestCASFieldPathBuilder().ConditionalState().Metadata().DeleteTime().FieldPath(),
	}
}

func (s UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalStateMetadataDeleteTime) WithValue(value *timestamp.Timestamp) *UpdatePlanAssignmentRequestRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdatePlanAssignmentRequestRequest_FieldSubPathValue)
}

func (s UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalStateMetadataDeleteTime) WithArrayOfValues(values []*timestamp.Timestamp) *UpdatePlanAssignmentRequestRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdatePlanAssignmentRequestRequest_FieldSubPathArrayOfValues)
}

type UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalStateMetadataUuid struct{}

func (UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalStateMetadataUuid) FieldPath() *UpdatePlanAssignmentRequestRequest_FieldSubPath {
	return &UpdatePlanAssignmentRequestRequest_FieldSubPath{
		selector: UpdatePlanAssignmentRequestRequest_FieldPathSelectorCas,
		subPath:  NewUpdatePlanAssignmentRequestRequestCASFieldPathBuilder().ConditionalState().Metadata().Uuid().FieldPath(),
	}
}

func (s UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalStateMetadataUuid) WithValue(value string) *UpdatePlanAssignmentRequestRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdatePlanAssignmentRequestRequest_FieldSubPathValue)
}

func (s UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalStateMetadataUuid) WithArrayOfValues(values []string) *UpdatePlanAssignmentRequestRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdatePlanAssignmentRequestRequest_FieldSubPathArrayOfValues)
}

type UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalStateMetadataTags struct{}

func (UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalStateMetadataTags) FieldPath() *UpdatePlanAssignmentRequestRequest_FieldSubPath {
	return &UpdatePlanAssignmentRequestRequest_FieldSubPath{
		selector: UpdatePlanAssignmentRequestRequest_FieldPathSelectorCas,
		subPath:  NewUpdatePlanAssignmentRequestRequestCASFieldPathBuilder().ConditionalState().Metadata().Tags().FieldPath(),
	}
}

func (s UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalStateMetadataTags) WithValue(value []string) *UpdatePlanAssignmentRequestRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdatePlanAssignmentRequestRequest_FieldSubPathValue)
}

func (s UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalStateMetadataTags) WithArrayOfValues(values [][]string) *UpdatePlanAssignmentRequestRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdatePlanAssignmentRequestRequest_FieldSubPathArrayOfValues)
}

func (s UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalStateMetadataTags) WithItemValue(value string) *UpdatePlanAssignmentRequestRequest_FieldSubPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*UpdatePlanAssignmentRequestRequest_FieldSubPathArrayItemValue)
}

type UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalStateMetadataLabels struct{}

func (UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalStateMetadataLabels) FieldPath() *UpdatePlanAssignmentRequestRequest_FieldSubPath {
	return &UpdatePlanAssignmentRequestRequest_FieldSubPath{
		selector: UpdatePlanAssignmentRequestRequest_FieldPathSelectorCas,
		subPath:  NewUpdatePlanAssignmentRequestRequestCASFieldPathBuilder().ConditionalState().Metadata().Labels().FieldPath(),
	}
}

func (s UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalStateMetadataLabels) WithValue(value map[string]string) *UpdatePlanAssignmentRequestRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdatePlanAssignmentRequestRequest_FieldSubPathValue)
}

func (s UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalStateMetadataLabels) WithArrayOfValues(values []map[string]string) *UpdatePlanAssignmentRequestRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdatePlanAssignmentRequestRequest_FieldSubPathArrayOfValues)
}

func (UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalStateMetadataLabels) WithKey(key string) UpdatePlanAssignmentRequestRequestMapPathSelectorCasConditionalStateMetadataLabels {
	return UpdatePlanAssignmentRequestRequestMapPathSelectorCasConditionalStateMetadataLabels{key: key}
}

type UpdatePlanAssignmentRequestRequestMapPathSelectorCasConditionalStateMetadataLabels struct {
	key string
}

func (s UpdatePlanAssignmentRequestRequestMapPathSelectorCasConditionalStateMetadataLabels) FieldPath() *UpdatePlanAssignmentRequestRequest_FieldSubPath {
	return &UpdatePlanAssignmentRequestRequest_FieldSubPath{
		selector: UpdatePlanAssignmentRequestRequest_FieldPathSelectorCas,
		subPath:  NewUpdatePlanAssignmentRequestRequestCASFieldPathBuilder().ConditionalState().Metadata().Labels().WithKey(s.key).FieldPath(),
	}
}

func (s UpdatePlanAssignmentRequestRequestMapPathSelectorCasConditionalStateMetadataLabels) WithValue(value string) *UpdatePlanAssignmentRequestRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdatePlanAssignmentRequestRequest_FieldSubPathValue)
}

func (s UpdatePlanAssignmentRequestRequestMapPathSelectorCasConditionalStateMetadataLabels) WithArrayOfValues(values []string) *UpdatePlanAssignmentRequestRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdatePlanAssignmentRequestRequest_FieldSubPathArrayOfValues)
}

type UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalStateMetadataAnnotations struct{}

func (UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalStateMetadataAnnotations) FieldPath() *UpdatePlanAssignmentRequestRequest_FieldSubPath {
	return &UpdatePlanAssignmentRequestRequest_FieldSubPath{
		selector: UpdatePlanAssignmentRequestRequest_FieldPathSelectorCas,
		subPath:  NewUpdatePlanAssignmentRequestRequestCASFieldPathBuilder().ConditionalState().Metadata().Annotations().FieldPath(),
	}
}

func (s UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalStateMetadataAnnotations) WithValue(value map[string]string) *UpdatePlanAssignmentRequestRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdatePlanAssignmentRequestRequest_FieldSubPathValue)
}

func (s UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalStateMetadataAnnotations) WithArrayOfValues(values []map[string]string) *UpdatePlanAssignmentRequestRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdatePlanAssignmentRequestRequest_FieldSubPathArrayOfValues)
}

func (UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalStateMetadataAnnotations) WithKey(key string) UpdatePlanAssignmentRequestRequestMapPathSelectorCasConditionalStateMetadataAnnotations {
	return UpdatePlanAssignmentRequestRequestMapPathSelectorCasConditionalStateMetadataAnnotations{key: key}
}

type UpdatePlanAssignmentRequestRequestMapPathSelectorCasConditionalStateMetadataAnnotations struct {
	key string
}

func (s UpdatePlanAssignmentRequestRequestMapPathSelectorCasConditionalStateMetadataAnnotations) FieldPath() *UpdatePlanAssignmentRequestRequest_FieldSubPath {
	return &UpdatePlanAssignmentRequestRequest_FieldSubPath{
		selector: UpdatePlanAssignmentRequestRequest_FieldPathSelectorCas,
		subPath:  NewUpdatePlanAssignmentRequestRequestCASFieldPathBuilder().ConditionalState().Metadata().Annotations().WithKey(s.key).FieldPath(),
	}
}

func (s UpdatePlanAssignmentRequestRequestMapPathSelectorCasConditionalStateMetadataAnnotations) WithValue(value string) *UpdatePlanAssignmentRequestRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdatePlanAssignmentRequestRequest_FieldSubPathValue)
}

func (s UpdatePlanAssignmentRequestRequestMapPathSelectorCasConditionalStateMetadataAnnotations) WithArrayOfValues(values []string) *UpdatePlanAssignmentRequestRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdatePlanAssignmentRequestRequest_FieldSubPathArrayOfValues)
}

type UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalStateMetadataGeneration struct{}

func (UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalStateMetadataGeneration) FieldPath() *UpdatePlanAssignmentRequestRequest_FieldSubPath {
	return &UpdatePlanAssignmentRequestRequest_FieldSubPath{
		selector: UpdatePlanAssignmentRequestRequest_FieldPathSelectorCas,
		subPath:  NewUpdatePlanAssignmentRequestRequestCASFieldPathBuilder().ConditionalState().Metadata().Generation().FieldPath(),
	}
}

func (s UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalStateMetadataGeneration) WithValue(value int64) *UpdatePlanAssignmentRequestRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdatePlanAssignmentRequestRequest_FieldSubPathValue)
}

func (s UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalStateMetadataGeneration) WithArrayOfValues(values []int64) *UpdatePlanAssignmentRequestRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdatePlanAssignmentRequestRequest_FieldSubPathArrayOfValues)
}

type UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalStateMetadataResourceVersion struct{}

func (UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalStateMetadataResourceVersion) FieldPath() *UpdatePlanAssignmentRequestRequest_FieldSubPath {
	return &UpdatePlanAssignmentRequestRequest_FieldSubPath{
		selector: UpdatePlanAssignmentRequestRequest_FieldPathSelectorCas,
		subPath:  NewUpdatePlanAssignmentRequestRequestCASFieldPathBuilder().ConditionalState().Metadata().ResourceVersion().FieldPath(),
	}
}

func (s UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalStateMetadataResourceVersion) WithValue(value string) *UpdatePlanAssignmentRequestRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdatePlanAssignmentRequestRequest_FieldSubPathValue)
}

func (s UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalStateMetadataResourceVersion) WithArrayOfValues(values []string) *UpdatePlanAssignmentRequestRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdatePlanAssignmentRequestRequest_FieldSubPathArrayOfValues)
}

type UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalStateMetadataOwnerReferences struct{}

func (UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalStateMetadataOwnerReferences) FieldPath() *UpdatePlanAssignmentRequestRequest_FieldSubPath {
	return &UpdatePlanAssignmentRequestRequest_FieldSubPath{
		selector: UpdatePlanAssignmentRequestRequest_FieldPathSelectorCas,
		subPath:  NewUpdatePlanAssignmentRequestRequestCASFieldPathBuilder().ConditionalState().Metadata().OwnerReferences().FieldPath(),
	}
}

func (s UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalStateMetadataOwnerReferences) WithValue(value []*ntt_meta.OwnerReference) *UpdatePlanAssignmentRequestRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdatePlanAssignmentRequestRequest_FieldSubPathValue)
}

func (s UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalStateMetadataOwnerReferences) WithArrayOfValues(values [][]*ntt_meta.OwnerReference) *UpdatePlanAssignmentRequestRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdatePlanAssignmentRequestRequest_FieldSubPathArrayOfValues)
}

func (s UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalStateMetadataOwnerReferences) WithItemValue(value *ntt_meta.OwnerReference) *UpdatePlanAssignmentRequestRequest_FieldSubPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*UpdatePlanAssignmentRequestRequest_FieldSubPathArrayItemValue)
}

func (UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalStateMetadataOwnerReferences) Kind() UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalStateMetadataOwnerReferencesKind {
	return UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalStateMetadataOwnerReferencesKind{}
}

func (UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalStateMetadataOwnerReferences) Version() UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalStateMetadataOwnerReferencesVersion {
	return UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalStateMetadataOwnerReferencesVersion{}
}

func (UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalStateMetadataOwnerReferences) Name() UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalStateMetadataOwnerReferencesName {
	return UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalStateMetadataOwnerReferencesName{}
}

func (UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalStateMetadataOwnerReferences) Region() UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalStateMetadataOwnerReferencesRegion {
	return UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalStateMetadataOwnerReferencesRegion{}
}

func (UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalStateMetadataOwnerReferences) Controller() UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalStateMetadataOwnerReferencesController {
	return UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalStateMetadataOwnerReferencesController{}
}

func (UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalStateMetadataOwnerReferences) BlockOwnerDeletion() UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalStateMetadataOwnerReferencesBlockOwnerDeletion {
	return UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalStateMetadataOwnerReferencesBlockOwnerDeletion{}
}

func (UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalStateMetadataOwnerReferences) RequiresOwnerReference() UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalStateMetadataOwnerReferencesRequiresOwnerReference {
	return UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalStateMetadataOwnerReferencesRequiresOwnerReference{}
}

type UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalStateMetadataOwnerReferencesKind struct{}

func (UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalStateMetadataOwnerReferencesKind) FieldPath() *UpdatePlanAssignmentRequestRequest_FieldSubPath {
	return &UpdatePlanAssignmentRequestRequest_FieldSubPath{
		selector: UpdatePlanAssignmentRequestRequest_FieldPathSelectorCas,
		subPath:  NewUpdatePlanAssignmentRequestRequestCASFieldPathBuilder().ConditionalState().Metadata().OwnerReferences().Kind().FieldPath(),
	}
}

func (s UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalStateMetadataOwnerReferencesKind) WithValue(value string) *UpdatePlanAssignmentRequestRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdatePlanAssignmentRequestRequest_FieldSubPathValue)
}

func (s UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalStateMetadataOwnerReferencesKind) WithArrayOfValues(values []string) *UpdatePlanAssignmentRequestRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdatePlanAssignmentRequestRequest_FieldSubPathArrayOfValues)
}

type UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalStateMetadataOwnerReferencesVersion struct{}

func (UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalStateMetadataOwnerReferencesVersion) FieldPath() *UpdatePlanAssignmentRequestRequest_FieldSubPath {
	return &UpdatePlanAssignmentRequestRequest_FieldSubPath{
		selector: UpdatePlanAssignmentRequestRequest_FieldPathSelectorCas,
		subPath:  NewUpdatePlanAssignmentRequestRequestCASFieldPathBuilder().ConditionalState().Metadata().OwnerReferences().Version().FieldPath(),
	}
}

func (s UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalStateMetadataOwnerReferencesVersion) WithValue(value string) *UpdatePlanAssignmentRequestRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdatePlanAssignmentRequestRequest_FieldSubPathValue)
}

func (s UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalStateMetadataOwnerReferencesVersion) WithArrayOfValues(values []string) *UpdatePlanAssignmentRequestRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdatePlanAssignmentRequestRequest_FieldSubPathArrayOfValues)
}

type UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalStateMetadataOwnerReferencesName struct{}

func (UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalStateMetadataOwnerReferencesName) FieldPath() *UpdatePlanAssignmentRequestRequest_FieldSubPath {
	return &UpdatePlanAssignmentRequestRequest_FieldSubPath{
		selector: UpdatePlanAssignmentRequestRequest_FieldPathSelectorCas,
		subPath:  NewUpdatePlanAssignmentRequestRequestCASFieldPathBuilder().ConditionalState().Metadata().OwnerReferences().Name().FieldPath(),
	}
}

func (s UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalStateMetadataOwnerReferencesName) WithValue(value string) *UpdatePlanAssignmentRequestRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdatePlanAssignmentRequestRequest_FieldSubPathValue)
}

func (s UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalStateMetadataOwnerReferencesName) WithArrayOfValues(values []string) *UpdatePlanAssignmentRequestRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdatePlanAssignmentRequestRequest_FieldSubPathArrayOfValues)
}

type UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalStateMetadataOwnerReferencesRegion struct{}

func (UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalStateMetadataOwnerReferencesRegion) FieldPath() *UpdatePlanAssignmentRequestRequest_FieldSubPath {
	return &UpdatePlanAssignmentRequestRequest_FieldSubPath{
		selector: UpdatePlanAssignmentRequestRequest_FieldPathSelectorCas,
		subPath:  NewUpdatePlanAssignmentRequestRequestCASFieldPathBuilder().ConditionalState().Metadata().OwnerReferences().Region().FieldPath(),
	}
}

func (s UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalStateMetadataOwnerReferencesRegion) WithValue(value string) *UpdatePlanAssignmentRequestRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdatePlanAssignmentRequestRequest_FieldSubPathValue)
}

func (s UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalStateMetadataOwnerReferencesRegion) WithArrayOfValues(values []string) *UpdatePlanAssignmentRequestRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdatePlanAssignmentRequestRequest_FieldSubPathArrayOfValues)
}

type UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalStateMetadataOwnerReferencesController struct{}

func (UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalStateMetadataOwnerReferencesController) FieldPath() *UpdatePlanAssignmentRequestRequest_FieldSubPath {
	return &UpdatePlanAssignmentRequestRequest_FieldSubPath{
		selector: UpdatePlanAssignmentRequestRequest_FieldPathSelectorCas,
		subPath:  NewUpdatePlanAssignmentRequestRequestCASFieldPathBuilder().ConditionalState().Metadata().OwnerReferences().Controller().FieldPath(),
	}
}

func (s UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalStateMetadataOwnerReferencesController) WithValue(value bool) *UpdatePlanAssignmentRequestRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdatePlanAssignmentRequestRequest_FieldSubPathValue)
}

func (s UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalStateMetadataOwnerReferencesController) WithArrayOfValues(values []bool) *UpdatePlanAssignmentRequestRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdatePlanAssignmentRequestRequest_FieldSubPathArrayOfValues)
}

type UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalStateMetadataOwnerReferencesBlockOwnerDeletion struct{}

func (UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalStateMetadataOwnerReferencesBlockOwnerDeletion) FieldPath() *UpdatePlanAssignmentRequestRequest_FieldSubPath {
	return &UpdatePlanAssignmentRequestRequest_FieldSubPath{
		selector: UpdatePlanAssignmentRequestRequest_FieldPathSelectorCas,
		subPath:  NewUpdatePlanAssignmentRequestRequestCASFieldPathBuilder().ConditionalState().Metadata().OwnerReferences().BlockOwnerDeletion().FieldPath(),
	}
}

func (s UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalStateMetadataOwnerReferencesBlockOwnerDeletion) WithValue(value bool) *UpdatePlanAssignmentRequestRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdatePlanAssignmentRequestRequest_FieldSubPathValue)
}

func (s UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalStateMetadataOwnerReferencesBlockOwnerDeletion) WithArrayOfValues(values []bool) *UpdatePlanAssignmentRequestRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdatePlanAssignmentRequestRequest_FieldSubPathArrayOfValues)
}

type UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalStateMetadataOwnerReferencesRequiresOwnerReference struct{}

func (UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalStateMetadataOwnerReferencesRequiresOwnerReference) FieldPath() *UpdatePlanAssignmentRequestRequest_FieldSubPath {
	return &UpdatePlanAssignmentRequestRequest_FieldSubPath{
		selector: UpdatePlanAssignmentRequestRequest_FieldPathSelectorCas,
		subPath:  NewUpdatePlanAssignmentRequestRequestCASFieldPathBuilder().ConditionalState().Metadata().OwnerReferences().RequiresOwnerReference().FieldPath(),
	}
}

func (s UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalStateMetadataOwnerReferencesRequiresOwnerReference) WithValue(value bool) *UpdatePlanAssignmentRequestRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdatePlanAssignmentRequestRequest_FieldSubPathValue)
}

func (s UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalStateMetadataOwnerReferencesRequiresOwnerReference) WithArrayOfValues(values []bool) *UpdatePlanAssignmentRequestRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdatePlanAssignmentRequestRequest_FieldSubPathArrayOfValues)
}

type UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalStateMetadataShards struct{}

func (UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalStateMetadataShards) FieldPath() *UpdatePlanAssignmentRequestRequest_FieldSubPath {
	return &UpdatePlanAssignmentRequestRequest_FieldSubPath{
		selector: UpdatePlanAssignmentRequestRequest_FieldPathSelectorCas,
		subPath:  NewUpdatePlanAssignmentRequestRequestCASFieldPathBuilder().ConditionalState().Metadata().Shards().FieldPath(),
	}
}

func (s UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalStateMetadataShards) WithValue(value map[string]int64) *UpdatePlanAssignmentRequestRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdatePlanAssignmentRequestRequest_FieldSubPathValue)
}

func (s UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalStateMetadataShards) WithArrayOfValues(values []map[string]int64) *UpdatePlanAssignmentRequestRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdatePlanAssignmentRequestRequest_FieldSubPathArrayOfValues)
}

func (UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalStateMetadataShards) WithKey(key string) UpdatePlanAssignmentRequestRequestMapPathSelectorCasConditionalStateMetadataShards {
	return UpdatePlanAssignmentRequestRequestMapPathSelectorCasConditionalStateMetadataShards{key: key}
}

type UpdatePlanAssignmentRequestRequestMapPathSelectorCasConditionalStateMetadataShards struct {
	key string
}

func (s UpdatePlanAssignmentRequestRequestMapPathSelectorCasConditionalStateMetadataShards) FieldPath() *UpdatePlanAssignmentRequestRequest_FieldSubPath {
	return &UpdatePlanAssignmentRequestRequest_FieldSubPath{
		selector: UpdatePlanAssignmentRequestRequest_FieldPathSelectorCas,
		subPath:  NewUpdatePlanAssignmentRequestRequestCASFieldPathBuilder().ConditionalState().Metadata().Shards().WithKey(s.key).FieldPath(),
	}
}

func (s UpdatePlanAssignmentRequestRequestMapPathSelectorCasConditionalStateMetadataShards) WithValue(value int64) *UpdatePlanAssignmentRequestRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdatePlanAssignmentRequestRequest_FieldSubPathValue)
}

func (s UpdatePlanAssignmentRequestRequestMapPathSelectorCasConditionalStateMetadataShards) WithArrayOfValues(values []int64) *UpdatePlanAssignmentRequestRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdatePlanAssignmentRequestRequest_FieldSubPathArrayOfValues)
}

type UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalStateMetadataSyncing struct{}

func (UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalStateMetadataSyncing) FieldPath() *UpdatePlanAssignmentRequestRequest_FieldSubPath {
	return &UpdatePlanAssignmentRequestRequest_FieldSubPath{
		selector: UpdatePlanAssignmentRequestRequest_FieldPathSelectorCas,
		subPath:  NewUpdatePlanAssignmentRequestRequestCASFieldPathBuilder().ConditionalState().Metadata().Syncing().FieldPath(),
	}
}

func (s UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalStateMetadataSyncing) WithValue(value *ntt_meta.SyncingMeta) *UpdatePlanAssignmentRequestRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdatePlanAssignmentRequestRequest_FieldSubPathValue)
}

func (s UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalStateMetadataSyncing) WithArrayOfValues(values []*ntt_meta.SyncingMeta) *UpdatePlanAssignmentRequestRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdatePlanAssignmentRequestRequest_FieldSubPathArrayOfValues)
}

func (UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalStateMetadataSyncing) OwningRegion() UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalStateMetadataSyncingOwningRegion {
	return UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalStateMetadataSyncingOwningRegion{}
}

func (UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalStateMetadataSyncing) Regions() UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalStateMetadataSyncingRegions {
	return UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalStateMetadataSyncingRegions{}
}

type UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalStateMetadataSyncingOwningRegion struct{}

func (UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalStateMetadataSyncingOwningRegion) FieldPath() *UpdatePlanAssignmentRequestRequest_FieldSubPath {
	return &UpdatePlanAssignmentRequestRequest_FieldSubPath{
		selector: UpdatePlanAssignmentRequestRequest_FieldPathSelectorCas,
		subPath:  NewUpdatePlanAssignmentRequestRequestCASFieldPathBuilder().ConditionalState().Metadata().Syncing().OwningRegion().FieldPath(),
	}
}

func (s UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalStateMetadataSyncingOwningRegion) WithValue(value string) *UpdatePlanAssignmentRequestRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdatePlanAssignmentRequestRequest_FieldSubPathValue)
}

func (s UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalStateMetadataSyncingOwningRegion) WithArrayOfValues(values []string) *UpdatePlanAssignmentRequestRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdatePlanAssignmentRequestRequest_FieldSubPathArrayOfValues)
}

type UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalStateMetadataSyncingRegions struct{}

func (UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalStateMetadataSyncingRegions) FieldPath() *UpdatePlanAssignmentRequestRequest_FieldSubPath {
	return &UpdatePlanAssignmentRequestRequest_FieldSubPath{
		selector: UpdatePlanAssignmentRequestRequest_FieldPathSelectorCas,
		subPath:  NewUpdatePlanAssignmentRequestRequestCASFieldPathBuilder().ConditionalState().Metadata().Syncing().Regions().FieldPath(),
	}
}

func (s UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalStateMetadataSyncingRegions) WithValue(value []string) *UpdatePlanAssignmentRequestRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdatePlanAssignmentRequestRequest_FieldSubPathValue)
}

func (s UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalStateMetadataSyncingRegions) WithArrayOfValues(values [][]string) *UpdatePlanAssignmentRequestRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdatePlanAssignmentRequestRequest_FieldSubPathArrayOfValues)
}

func (s UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalStateMetadataSyncingRegions) WithItemValue(value string) *UpdatePlanAssignmentRequestRequest_FieldSubPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*UpdatePlanAssignmentRequestRequest_FieldSubPathArrayItemValue)
}

type UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalStateMetadataLifecycle struct{}

func (UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalStateMetadataLifecycle) FieldPath() *UpdatePlanAssignmentRequestRequest_FieldSubPath {
	return &UpdatePlanAssignmentRequestRequest_FieldSubPath{
		selector: UpdatePlanAssignmentRequestRequest_FieldPathSelectorCas,
		subPath:  NewUpdatePlanAssignmentRequestRequestCASFieldPathBuilder().ConditionalState().Metadata().Lifecycle().FieldPath(),
	}
}

func (s UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalStateMetadataLifecycle) WithValue(value *ntt_meta.Lifecycle) *UpdatePlanAssignmentRequestRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdatePlanAssignmentRequestRequest_FieldSubPathValue)
}

func (s UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalStateMetadataLifecycle) WithArrayOfValues(values []*ntt_meta.Lifecycle) *UpdatePlanAssignmentRequestRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdatePlanAssignmentRequestRequest_FieldSubPathArrayOfValues)
}

func (UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalStateMetadataLifecycle) State() UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalStateMetadataLifecycleState {
	return UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalStateMetadataLifecycleState{}
}

func (UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalStateMetadataLifecycle) BlockDeletion() UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalStateMetadataLifecycleBlockDeletion {
	return UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalStateMetadataLifecycleBlockDeletion{}
}

type UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalStateMetadataLifecycleState struct{}

func (UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalStateMetadataLifecycleState) FieldPath() *UpdatePlanAssignmentRequestRequest_FieldSubPath {
	return &UpdatePlanAssignmentRequestRequest_FieldSubPath{
		selector: UpdatePlanAssignmentRequestRequest_FieldPathSelectorCas,
		subPath:  NewUpdatePlanAssignmentRequestRequestCASFieldPathBuilder().ConditionalState().Metadata().Lifecycle().State().FieldPath(),
	}
}

func (s UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalStateMetadataLifecycleState) WithValue(value ntt_meta.Lifecycle_State) *UpdatePlanAssignmentRequestRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdatePlanAssignmentRequestRequest_FieldSubPathValue)
}

func (s UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalStateMetadataLifecycleState) WithArrayOfValues(values []ntt_meta.Lifecycle_State) *UpdatePlanAssignmentRequestRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdatePlanAssignmentRequestRequest_FieldSubPathArrayOfValues)
}

type UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalStateMetadataLifecycleBlockDeletion struct{}

func (UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalStateMetadataLifecycleBlockDeletion) FieldPath() *UpdatePlanAssignmentRequestRequest_FieldSubPath {
	return &UpdatePlanAssignmentRequestRequest_FieldSubPath{
		selector: UpdatePlanAssignmentRequestRequest_FieldPathSelectorCas,
		subPath:  NewUpdatePlanAssignmentRequestRequestCASFieldPathBuilder().ConditionalState().Metadata().Lifecycle().BlockDeletion().FieldPath(),
	}
}

func (s UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalStateMetadataLifecycleBlockDeletion) WithValue(value bool) *UpdatePlanAssignmentRequestRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdatePlanAssignmentRequestRequest_FieldSubPathValue)
}

func (s UpdatePlanAssignmentRequestRequestPathSelectorCasConditionalStateMetadataLifecycleBlockDeletion) WithArrayOfValues(values []bool) *UpdatePlanAssignmentRequestRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdatePlanAssignmentRequestRequest_FieldSubPathArrayOfValues)
}

type UpdatePlanAssignmentRequestRequestPathSelectorCasFieldMask struct{}

func (UpdatePlanAssignmentRequestRequestPathSelectorCasFieldMask) FieldPath() *UpdatePlanAssignmentRequestRequest_FieldSubPath {
	return &UpdatePlanAssignmentRequestRequest_FieldSubPath{
		selector: UpdatePlanAssignmentRequestRequest_FieldPathSelectorCas,
		subPath:  NewUpdatePlanAssignmentRequestRequestCASFieldPathBuilder().FieldMask().FieldPath(),
	}
}

func (s UpdatePlanAssignmentRequestRequestPathSelectorCasFieldMask) WithValue(value *plan_assignment_request.PlanAssignmentRequest_FieldMask) *UpdatePlanAssignmentRequestRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdatePlanAssignmentRequestRequest_FieldSubPathValue)
}

func (s UpdatePlanAssignmentRequestRequestPathSelectorCasFieldMask) WithArrayOfValues(values []*plan_assignment_request.PlanAssignmentRequest_FieldMask) *UpdatePlanAssignmentRequestRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdatePlanAssignmentRequestRequest_FieldSubPathArrayOfValues)
}

type UpdatePlanAssignmentRequestRequestPathSelectorAllowMissing struct{}

func (UpdatePlanAssignmentRequestRequestPathSelectorAllowMissing) FieldPath() *UpdatePlanAssignmentRequestRequest_FieldTerminalPath {
	return &UpdatePlanAssignmentRequestRequest_FieldTerminalPath{selector: UpdatePlanAssignmentRequestRequest_FieldPathSelectorAllowMissing}
}

func (s UpdatePlanAssignmentRequestRequestPathSelectorAllowMissing) WithValue(value bool) *UpdatePlanAssignmentRequestRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*UpdatePlanAssignmentRequestRequest_FieldTerminalPathValue)
}

func (s UpdatePlanAssignmentRequestRequestPathSelectorAllowMissing) WithArrayOfValues(values []bool) *UpdatePlanAssignmentRequestRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdatePlanAssignmentRequestRequest_FieldTerminalPathArrayOfValues)
}

type UpdatePlanAssignmentRequestRequestCASFieldPathBuilder struct{}

func NewUpdatePlanAssignmentRequestRequestCASFieldPathBuilder() UpdatePlanAssignmentRequestRequestCASFieldPathBuilder {
	return UpdatePlanAssignmentRequestRequestCASFieldPathBuilder{}
}
func (UpdatePlanAssignmentRequestRequestCASFieldPathBuilder) ConditionalState() UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalState {
	return UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalState{}
}
func (UpdatePlanAssignmentRequestRequestCASFieldPathBuilder) FieldMask() UpdatePlanAssignmentRequestRequest_CASPathSelectorFieldMask {
	return UpdatePlanAssignmentRequestRequest_CASPathSelectorFieldMask{}
}

type UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalState struct{}

func (UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalState) FieldPath() *UpdatePlanAssignmentRequestRequestCAS_FieldTerminalPath {
	return &UpdatePlanAssignmentRequestRequestCAS_FieldTerminalPath{selector: UpdatePlanAssignmentRequestRequestCAS_FieldPathSelectorConditionalState}
}

func (s UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalState) WithValue(value *plan_assignment_request.PlanAssignmentRequest) *UpdatePlanAssignmentRequestRequestCAS_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*UpdatePlanAssignmentRequestRequestCAS_FieldTerminalPathValue)
}

func (s UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalState) WithArrayOfValues(values []*plan_assignment_request.PlanAssignmentRequest) *UpdatePlanAssignmentRequestRequestCAS_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdatePlanAssignmentRequestRequestCAS_FieldTerminalPathArrayOfValues)
}

func (UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalState) WithSubPath(subPath plan_assignment_request.PlanAssignmentRequest_FieldPath) *UpdatePlanAssignmentRequestRequestCAS_FieldSubPath {
	return &UpdatePlanAssignmentRequestRequestCAS_FieldSubPath{selector: UpdatePlanAssignmentRequestRequestCAS_FieldPathSelectorConditionalState, subPath: subPath}
}

func (s UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalState) WithSubValue(subPathValue plan_assignment_request.PlanAssignmentRequest_FieldPathValue) *UpdatePlanAssignmentRequestRequestCAS_FieldSubPathValue {
	return &UpdatePlanAssignmentRequestRequestCAS_FieldSubPathValue{UpdatePlanAssignmentRequestRequestCAS_FieldPath: s.WithSubPath(subPathValue), subPathValue: subPathValue}
}

func (s UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalState) WithSubArrayOfValues(subPathArrayOfValues plan_assignment_request.PlanAssignmentRequest_FieldPathArrayOfValues) *UpdatePlanAssignmentRequestRequestCAS_FieldSubPathArrayOfValues {
	return &UpdatePlanAssignmentRequestRequestCAS_FieldSubPathArrayOfValues{UpdatePlanAssignmentRequestRequestCAS_FieldPath: s.WithSubPath(subPathArrayOfValues), subPathArrayOfValues: subPathArrayOfValues}
}

func (s UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalState) WithSubArrayItemValue(subPathArrayItemValue plan_assignment_request.PlanAssignmentRequest_FieldPathArrayItemValue) *UpdatePlanAssignmentRequestRequestCAS_FieldSubPathArrayItemValue {
	return &UpdatePlanAssignmentRequestRequestCAS_FieldSubPathArrayItemValue{UpdatePlanAssignmentRequestRequestCAS_FieldPath: s.WithSubPath(subPathArrayItemValue), subPathItemValue: subPathArrayItemValue}
}

func (UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalState) Name() UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalStateName {
	return UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalStateName{}
}

func (UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalState) Request() UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalStateRequest {
	return UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalStateRequest{}
}

func (UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalState) Service() UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalStateService {
	return UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalStateService{}
}

func (UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalState) Approver() UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalStateApprover {
	return UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalStateApprover{}
}

func (UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalState) Status() UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalStateStatus {
	return UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalStateStatus{}
}

func (UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalState) Metadata() UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalStateMetadata {
	return UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalStateMetadata{}
}

type UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalStateName struct{}

func (UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalStateName) FieldPath() *UpdatePlanAssignmentRequestRequestCAS_FieldSubPath {
	return &UpdatePlanAssignmentRequestRequestCAS_FieldSubPath{
		selector: UpdatePlanAssignmentRequestRequestCAS_FieldPathSelectorConditionalState,
		subPath:  plan_assignment_request.NewPlanAssignmentRequestFieldPathBuilder().Name().FieldPath(),
	}
}

func (s UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalStateName) WithValue(value *plan_assignment_request.Name) *UpdatePlanAssignmentRequestRequestCAS_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdatePlanAssignmentRequestRequestCAS_FieldSubPathValue)
}

func (s UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalStateName) WithArrayOfValues(values []*plan_assignment_request.Name) *UpdatePlanAssignmentRequestRequestCAS_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdatePlanAssignmentRequestRequestCAS_FieldSubPathArrayOfValues)
}

type UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalStateRequest struct{}

func (UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalStateRequest) FieldPath() *UpdatePlanAssignmentRequestRequestCAS_FieldSubPath {
	return &UpdatePlanAssignmentRequestRequestCAS_FieldSubPath{
		selector: UpdatePlanAssignmentRequestRequestCAS_FieldPathSelectorConditionalState,
		subPath:  plan_assignment_request.NewPlanAssignmentRequestFieldPathBuilder().Request().FieldPath(),
	}
}

func (s UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalStateRequest) WithValue(value *plan_assignment_request.PlanAssignmentRequest_Request) *UpdatePlanAssignmentRequestRequestCAS_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdatePlanAssignmentRequestRequestCAS_FieldSubPathValue)
}

func (s UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalStateRequest) WithArrayOfValues(values []*plan_assignment_request.PlanAssignmentRequest_Request) *UpdatePlanAssignmentRequestRequestCAS_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdatePlanAssignmentRequestRequestCAS_FieldSubPathArrayOfValues)
}

func (UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalStateRequest) Assign() UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalStateRequestAssign {
	return UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalStateRequestAssign{}
}

func (UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalStateRequest) Extend() UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalStateRequestExtend {
	return UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalStateRequestExtend{}
}

func (UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalStateRequest) Redistribute() UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalStateRequestRedistribute {
	return UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalStateRequestRedistribute{}
}

func (UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalStateRequest) Unassign() UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalStateRequestUnassign {
	return UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalStateRequestUnassign{}
}

type UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalStateRequestAssign struct{}

func (UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalStateRequestAssign) FieldPath() *UpdatePlanAssignmentRequestRequestCAS_FieldSubPath {
	return &UpdatePlanAssignmentRequestRequestCAS_FieldSubPath{
		selector: UpdatePlanAssignmentRequestRequestCAS_FieldPathSelectorConditionalState,
		subPath:  plan_assignment_request.NewPlanAssignmentRequestFieldPathBuilder().Request().Assign().FieldPath(),
	}
}

func (s UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalStateRequestAssign) WithValue(value *plan_assignment_request.PlanAssignmentRequest_Request_Assign) *UpdatePlanAssignmentRequestRequestCAS_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdatePlanAssignmentRequestRequestCAS_FieldSubPathValue)
}

func (s UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalStateRequestAssign) WithArrayOfValues(values []*plan_assignment_request.PlanAssignmentRequest_Request_Assign) *UpdatePlanAssignmentRequestRequestCAS_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdatePlanAssignmentRequestRequestCAS_FieldSubPathArrayOfValues)
}

func (UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalStateRequestAssign) Plan() UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalStateRequestAssignPlan {
	return UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalStateRequestAssignPlan{}
}

func (UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalStateRequestAssign) Extensions() UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalStateRequestAssignExtensions {
	return UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalStateRequestAssignExtensions{}
}

func (UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalStateRequestAssign) RegionalDistributions() UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalStateRequestAssignRegionalDistributions {
	return UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalStateRequestAssignRegionalDistributions{}
}

type UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalStateRequestAssignPlan struct{}

func (UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalStateRequestAssignPlan) FieldPath() *UpdatePlanAssignmentRequestRequestCAS_FieldSubPath {
	return &UpdatePlanAssignmentRequestRequestCAS_FieldSubPath{
		selector: UpdatePlanAssignmentRequestRequestCAS_FieldPathSelectorConditionalState,
		subPath:  plan_assignment_request.NewPlanAssignmentRequestFieldPathBuilder().Request().Assign().Plan().FieldPath(),
	}
}

func (s UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalStateRequestAssignPlan) WithValue(value *plan.Reference) *UpdatePlanAssignmentRequestRequestCAS_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdatePlanAssignmentRequestRequestCAS_FieldSubPathValue)
}

func (s UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalStateRequestAssignPlan) WithArrayOfValues(values []*plan.Reference) *UpdatePlanAssignmentRequestRequestCAS_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdatePlanAssignmentRequestRequestCAS_FieldSubPathArrayOfValues)
}

type UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalStateRequestAssignExtensions struct{}

func (UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalStateRequestAssignExtensions) FieldPath() *UpdatePlanAssignmentRequestRequestCAS_FieldSubPath {
	return &UpdatePlanAssignmentRequestRequestCAS_FieldSubPath{
		selector: UpdatePlanAssignmentRequestRequestCAS_FieldPathSelectorConditionalState,
		subPath:  plan_assignment_request.NewPlanAssignmentRequestFieldPathBuilder().Request().Assign().Extensions().FieldPath(),
	}
}

func (s UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalStateRequestAssignExtensions) WithValue(value []*common.Allowance) *UpdatePlanAssignmentRequestRequestCAS_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdatePlanAssignmentRequestRequestCAS_FieldSubPathValue)
}

func (s UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalStateRequestAssignExtensions) WithArrayOfValues(values [][]*common.Allowance) *UpdatePlanAssignmentRequestRequestCAS_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdatePlanAssignmentRequestRequestCAS_FieldSubPathArrayOfValues)
}

func (s UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalStateRequestAssignExtensions) WithItemValue(value *common.Allowance) *UpdatePlanAssignmentRequestRequestCAS_FieldSubPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*UpdatePlanAssignmentRequestRequestCAS_FieldSubPathArrayItemValue)
}

func (UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalStateRequestAssignExtensions) Resource() UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalStateRequestAssignExtensionsResource {
	return UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalStateRequestAssignExtensionsResource{}
}

func (UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalStateRequestAssignExtensions) Value() UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalStateRequestAssignExtensionsValue {
	return UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalStateRequestAssignExtensionsValue{}
}

type UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalStateRequestAssignExtensionsResource struct{}

func (UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalStateRequestAssignExtensionsResource) FieldPath() *UpdatePlanAssignmentRequestRequestCAS_FieldSubPath {
	return &UpdatePlanAssignmentRequestRequestCAS_FieldSubPath{
		selector: UpdatePlanAssignmentRequestRequestCAS_FieldPathSelectorConditionalState,
		subPath:  plan_assignment_request.NewPlanAssignmentRequestFieldPathBuilder().Request().Assign().Extensions().Resource().FieldPath(),
	}
}

func (s UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalStateRequestAssignExtensionsResource) WithValue(value *meta_resource.Reference) *UpdatePlanAssignmentRequestRequestCAS_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdatePlanAssignmentRequestRequestCAS_FieldSubPathValue)
}

func (s UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalStateRequestAssignExtensionsResource) WithArrayOfValues(values []*meta_resource.Reference) *UpdatePlanAssignmentRequestRequestCAS_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdatePlanAssignmentRequestRequestCAS_FieldSubPathArrayOfValues)
}

type UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalStateRequestAssignExtensionsValue struct{}

func (UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalStateRequestAssignExtensionsValue) FieldPath() *UpdatePlanAssignmentRequestRequestCAS_FieldSubPath {
	return &UpdatePlanAssignmentRequestRequestCAS_FieldSubPath{
		selector: UpdatePlanAssignmentRequestRequestCAS_FieldPathSelectorConditionalState,
		subPath:  plan_assignment_request.NewPlanAssignmentRequestFieldPathBuilder().Request().Assign().Extensions().Value().FieldPath(),
	}
}

func (s UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalStateRequestAssignExtensionsValue) WithValue(value int64) *UpdatePlanAssignmentRequestRequestCAS_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdatePlanAssignmentRequestRequestCAS_FieldSubPathValue)
}

func (s UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalStateRequestAssignExtensionsValue) WithArrayOfValues(values []int64) *UpdatePlanAssignmentRequestRequestCAS_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdatePlanAssignmentRequestRequestCAS_FieldSubPathArrayOfValues)
}

type UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalStateRequestAssignRegionalDistributions struct{}

func (UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalStateRequestAssignRegionalDistributions) FieldPath() *UpdatePlanAssignmentRequestRequestCAS_FieldSubPath {
	return &UpdatePlanAssignmentRequestRequestCAS_FieldSubPath{
		selector: UpdatePlanAssignmentRequestRequestCAS_FieldPathSelectorConditionalState,
		subPath:  plan_assignment_request.NewPlanAssignmentRequestFieldPathBuilder().Request().Assign().RegionalDistributions().FieldPath(),
	}
}

func (s UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalStateRequestAssignRegionalDistributions) WithValue(value []*common.RegionalDistribution) *UpdatePlanAssignmentRequestRequestCAS_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdatePlanAssignmentRequestRequestCAS_FieldSubPathValue)
}

func (s UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalStateRequestAssignRegionalDistributions) WithArrayOfValues(values [][]*common.RegionalDistribution) *UpdatePlanAssignmentRequestRequestCAS_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdatePlanAssignmentRequestRequestCAS_FieldSubPathArrayOfValues)
}

func (s UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalStateRequestAssignRegionalDistributions) WithItemValue(value *common.RegionalDistribution) *UpdatePlanAssignmentRequestRequestCAS_FieldSubPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*UpdatePlanAssignmentRequestRequestCAS_FieldSubPathArrayItemValue)
}

func (UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalStateRequestAssignRegionalDistributions) Resource() UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalStateRequestAssignRegionalDistributionsResource {
	return UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalStateRequestAssignRegionalDistributionsResource{}
}

func (UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalStateRequestAssignRegionalDistributions) LimitsByRegion() UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalStateRequestAssignRegionalDistributionsLimitsByRegion {
	return UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalStateRequestAssignRegionalDistributionsLimitsByRegion{}
}

type UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalStateRequestAssignRegionalDistributionsResource struct{}

func (UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalStateRequestAssignRegionalDistributionsResource) FieldPath() *UpdatePlanAssignmentRequestRequestCAS_FieldSubPath {
	return &UpdatePlanAssignmentRequestRequestCAS_FieldSubPath{
		selector: UpdatePlanAssignmentRequestRequestCAS_FieldPathSelectorConditionalState,
		subPath:  plan_assignment_request.NewPlanAssignmentRequestFieldPathBuilder().Request().Assign().RegionalDistributions().Resource().FieldPath(),
	}
}

func (s UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalStateRequestAssignRegionalDistributionsResource) WithValue(value *meta_resource.Reference) *UpdatePlanAssignmentRequestRequestCAS_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdatePlanAssignmentRequestRequestCAS_FieldSubPathValue)
}

func (s UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalStateRequestAssignRegionalDistributionsResource) WithArrayOfValues(values []*meta_resource.Reference) *UpdatePlanAssignmentRequestRequestCAS_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdatePlanAssignmentRequestRequestCAS_FieldSubPathArrayOfValues)
}

type UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalStateRequestAssignRegionalDistributionsLimitsByRegion struct{}

func (UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalStateRequestAssignRegionalDistributionsLimitsByRegion) FieldPath() *UpdatePlanAssignmentRequestRequestCAS_FieldSubPath {
	return &UpdatePlanAssignmentRequestRequestCAS_FieldSubPath{
		selector: UpdatePlanAssignmentRequestRequestCAS_FieldPathSelectorConditionalState,
		subPath:  plan_assignment_request.NewPlanAssignmentRequestFieldPathBuilder().Request().Assign().RegionalDistributions().LimitsByRegion().FieldPath(),
	}
}

func (s UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalStateRequestAssignRegionalDistributionsLimitsByRegion) WithValue(value map[string]int64) *UpdatePlanAssignmentRequestRequestCAS_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdatePlanAssignmentRequestRequestCAS_FieldSubPathValue)
}

func (s UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalStateRequestAssignRegionalDistributionsLimitsByRegion) WithArrayOfValues(values []map[string]int64) *UpdatePlanAssignmentRequestRequestCAS_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdatePlanAssignmentRequestRequestCAS_FieldSubPathArrayOfValues)
}

func (UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalStateRequestAssignRegionalDistributionsLimitsByRegion) WithKey(key string) UpdatePlanAssignmentRequestRequest_CASMapPathSelectorConditionalStateRequestAssignRegionalDistributionsLimitsByRegion {
	return UpdatePlanAssignmentRequestRequest_CASMapPathSelectorConditionalStateRequestAssignRegionalDistributionsLimitsByRegion{key: key}
}

type UpdatePlanAssignmentRequestRequest_CASMapPathSelectorConditionalStateRequestAssignRegionalDistributionsLimitsByRegion struct {
	key string
}

func (s UpdatePlanAssignmentRequestRequest_CASMapPathSelectorConditionalStateRequestAssignRegionalDistributionsLimitsByRegion) FieldPath() *UpdatePlanAssignmentRequestRequestCAS_FieldSubPath {
	return &UpdatePlanAssignmentRequestRequestCAS_FieldSubPath{
		selector: UpdatePlanAssignmentRequestRequestCAS_FieldPathSelectorConditionalState,
		subPath:  plan_assignment_request.NewPlanAssignmentRequestFieldPathBuilder().Request().Assign().RegionalDistributions().LimitsByRegion().WithKey(s.key).FieldPath(),
	}
}

func (s UpdatePlanAssignmentRequestRequest_CASMapPathSelectorConditionalStateRequestAssignRegionalDistributionsLimitsByRegion) WithValue(value int64) *UpdatePlanAssignmentRequestRequestCAS_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdatePlanAssignmentRequestRequestCAS_FieldSubPathValue)
}

func (s UpdatePlanAssignmentRequestRequest_CASMapPathSelectorConditionalStateRequestAssignRegionalDistributionsLimitsByRegion) WithArrayOfValues(values []int64) *UpdatePlanAssignmentRequestRequestCAS_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdatePlanAssignmentRequestRequestCAS_FieldSubPathArrayOfValues)
}

type UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalStateRequestExtend struct{}

func (UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalStateRequestExtend) FieldPath() *UpdatePlanAssignmentRequestRequestCAS_FieldSubPath {
	return &UpdatePlanAssignmentRequestRequestCAS_FieldSubPath{
		selector: UpdatePlanAssignmentRequestRequestCAS_FieldPathSelectorConditionalState,
		subPath:  plan_assignment_request.NewPlanAssignmentRequestFieldPathBuilder().Request().Extend().FieldPath(),
	}
}

func (s UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalStateRequestExtend) WithValue(value *plan_assignment_request.PlanAssignmentRequest_Request_Extend) *UpdatePlanAssignmentRequestRequestCAS_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdatePlanAssignmentRequestRequestCAS_FieldSubPathValue)
}

func (s UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalStateRequestExtend) WithArrayOfValues(values []*plan_assignment_request.PlanAssignmentRequest_Request_Extend) *UpdatePlanAssignmentRequestRequestCAS_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdatePlanAssignmentRequestRequestCAS_FieldSubPathArrayOfValues)
}

func (UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalStateRequestExtend) Assignment() UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalStateRequestExtendAssignment {
	return UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalStateRequestExtendAssignment{}
}

func (UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalStateRequestExtend) Additions() UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalStateRequestExtendAdditions {
	return UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalStateRequestExtendAdditions{}
}

func (UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalStateRequestExtend) RegionalDistributions() UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalStateRequestExtendRegionalDistributions {
	return UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalStateRequestExtendRegionalDistributions{}
}

type UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalStateRequestExtendAssignment struct{}

func (UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalStateRequestExtendAssignment) FieldPath() *UpdatePlanAssignmentRequestRequestCAS_FieldSubPath {
	return &UpdatePlanAssignmentRequestRequestCAS_FieldSubPath{
		selector: UpdatePlanAssignmentRequestRequestCAS_FieldPathSelectorConditionalState,
		subPath:  plan_assignment_request.NewPlanAssignmentRequestFieldPathBuilder().Request().Extend().Assignment().FieldPath(),
	}
}

func (s UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalStateRequestExtendAssignment) WithValue(value *plan_assignment.Reference) *UpdatePlanAssignmentRequestRequestCAS_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdatePlanAssignmentRequestRequestCAS_FieldSubPathValue)
}

func (s UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalStateRequestExtendAssignment) WithArrayOfValues(values []*plan_assignment.Reference) *UpdatePlanAssignmentRequestRequestCAS_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdatePlanAssignmentRequestRequestCAS_FieldSubPathArrayOfValues)
}

type UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalStateRequestExtendAdditions struct{}

func (UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalStateRequestExtendAdditions) FieldPath() *UpdatePlanAssignmentRequestRequestCAS_FieldSubPath {
	return &UpdatePlanAssignmentRequestRequestCAS_FieldSubPath{
		selector: UpdatePlanAssignmentRequestRequestCAS_FieldPathSelectorConditionalState,
		subPath:  plan_assignment_request.NewPlanAssignmentRequestFieldPathBuilder().Request().Extend().Additions().FieldPath(),
	}
}

func (s UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalStateRequestExtendAdditions) WithValue(value []*common.Allowance) *UpdatePlanAssignmentRequestRequestCAS_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdatePlanAssignmentRequestRequestCAS_FieldSubPathValue)
}

func (s UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalStateRequestExtendAdditions) WithArrayOfValues(values [][]*common.Allowance) *UpdatePlanAssignmentRequestRequestCAS_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdatePlanAssignmentRequestRequestCAS_FieldSubPathArrayOfValues)
}

func (s UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalStateRequestExtendAdditions) WithItemValue(value *common.Allowance) *UpdatePlanAssignmentRequestRequestCAS_FieldSubPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*UpdatePlanAssignmentRequestRequestCAS_FieldSubPathArrayItemValue)
}

func (UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalStateRequestExtendAdditions) Resource() UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalStateRequestExtendAdditionsResource {
	return UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalStateRequestExtendAdditionsResource{}
}

func (UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalStateRequestExtendAdditions) Value() UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalStateRequestExtendAdditionsValue {
	return UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalStateRequestExtendAdditionsValue{}
}

type UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalStateRequestExtendAdditionsResource struct{}

func (UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalStateRequestExtendAdditionsResource) FieldPath() *UpdatePlanAssignmentRequestRequestCAS_FieldSubPath {
	return &UpdatePlanAssignmentRequestRequestCAS_FieldSubPath{
		selector: UpdatePlanAssignmentRequestRequestCAS_FieldPathSelectorConditionalState,
		subPath:  plan_assignment_request.NewPlanAssignmentRequestFieldPathBuilder().Request().Extend().Additions().Resource().FieldPath(),
	}
}

func (s UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalStateRequestExtendAdditionsResource) WithValue(value *meta_resource.Reference) *UpdatePlanAssignmentRequestRequestCAS_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdatePlanAssignmentRequestRequestCAS_FieldSubPathValue)
}

func (s UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalStateRequestExtendAdditionsResource) WithArrayOfValues(values []*meta_resource.Reference) *UpdatePlanAssignmentRequestRequestCAS_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdatePlanAssignmentRequestRequestCAS_FieldSubPathArrayOfValues)
}

type UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalStateRequestExtendAdditionsValue struct{}

func (UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalStateRequestExtendAdditionsValue) FieldPath() *UpdatePlanAssignmentRequestRequestCAS_FieldSubPath {
	return &UpdatePlanAssignmentRequestRequestCAS_FieldSubPath{
		selector: UpdatePlanAssignmentRequestRequestCAS_FieldPathSelectorConditionalState,
		subPath:  plan_assignment_request.NewPlanAssignmentRequestFieldPathBuilder().Request().Extend().Additions().Value().FieldPath(),
	}
}

func (s UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalStateRequestExtendAdditionsValue) WithValue(value int64) *UpdatePlanAssignmentRequestRequestCAS_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdatePlanAssignmentRequestRequestCAS_FieldSubPathValue)
}

func (s UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalStateRequestExtendAdditionsValue) WithArrayOfValues(values []int64) *UpdatePlanAssignmentRequestRequestCAS_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdatePlanAssignmentRequestRequestCAS_FieldSubPathArrayOfValues)
}

type UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalStateRequestExtendRegionalDistributions struct{}

func (UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalStateRequestExtendRegionalDistributions) FieldPath() *UpdatePlanAssignmentRequestRequestCAS_FieldSubPath {
	return &UpdatePlanAssignmentRequestRequestCAS_FieldSubPath{
		selector: UpdatePlanAssignmentRequestRequestCAS_FieldPathSelectorConditionalState,
		subPath:  plan_assignment_request.NewPlanAssignmentRequestFieldPathBuilder().Request().Extend().RegionalDistributions().FieldPath(),
	}
}

func (s UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalStateRequestExtendRegionalDistributions) WithValue(value []*common.RegionalDistribution) *UpdatePlanAssignmentRequestRequestCAS_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdatePlanAssignmentRequestRequestCAS_FieldSubPathValue)
}

func (s UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalStateRequestExtendRegionalDistributions) WithArrayOfValues(values [][]*common.RegionalDistribution) *UpdatePlanAssignmentRequestRequestCAS_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdatePlanAssignmentRequestRequestCAS_FieldSubPathArrayOfValues)
}

func (s UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalStateRequestExtendRegionalDistributions) WithItemValue(value *common.RegionalDistribution) *UpdatePlanAssignmentRequestRequestCAS_FieldSubPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*UpdatePlanAssignmentRequestRequestCAS_FieldSubPathArrayItemValue)
}

func (UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalStateRequestExtendRegionalDistributions) Resource() UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalStateRequestExtendRegionalDistributionsResource {
	return UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalStateRequestExtendRegionalDistributionsResource{}
}

func (UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalStateRequestExtendRegionalDistributions) LimitsByRegion() UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalStateRequestExtendRegionalDistributionsLimitsByRegion {
	return UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalStateRequestExtendRegionalDistributionsLimitsByRegion{}
}

type UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalStateRequestExtendRegionalDistributionsResource struct{}

func (UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalStateRequestExtendRegionalDistributionsResource) FieldPath() *UpdatePlanAssignmentRequestRequestCAS_FieldSubPath {
	return &UpdatePlanAssignmentRequestRequestCAS_FieldSubPath{
		selector: UpdatePlanAssignmentRequestRequestCAS_FieldPathSelectorConditionalState,
		subPath:  plan_assignment_request.NewPlanAssignmentRequestFieldPathBuilder().Request().Extend().RegionalDistributions().Resource().FieldPath(),
	}
}

func (s UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalStateRequestExtendRegionalDistributionsResource) WithValue(value *meta_resource.Reference) *UpdatePlanAssignmentRequestRequestCAS_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdatePlanAssignmentRequestRequestCAS_FieldSubPathValue)
}

func (s UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalStateRequestExtendRegionalDistributionsResource) WithArrayOfValues(values []*meta_resource.Reference) *UpdatePlanAssignmentRequestRequestCAS_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdatePlanAssignmentRequestRequestCAS_FieldSubPathArrayOfValues)
}

type UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalStateRequestExtendRegionalDistributionsLimitsByRegion struct{}

func (UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalStateRequestExtendRegionalDistributionsLimitsByRegion) FieldPath() *UpdatePlanAssignmentRequestRequestCAS_FieldSubPath {
	return &UpdatePlanAssignmentRequestRequestCAS_FieldSubPath{
		selector: UpdatePlanAssignmentRequestRequestCAS_FieldPathSelectorConditionalState,
		subPath:  plan_assignment_request.NewPlanAssignmentRequestFieldPathBuilder().Request().Extend().RegionalDistributions().LimitsByRegion().FieldPath(),
	}
}

func (s UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalStateRequestExtendRegionalDistributionsLimitsByRegion) WithValue(value map[string]int64) *UpdatePlanAssignmentRequestRequestCAS_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdatePlanAssignmentRequestRequestCAS_FieldSubPathValue)
}

func (s UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalStateRequestExtendRegionalDistributionsLimitsByRegion) WithArrayOfValues(values []map[string]int64) *UpdatePlanAssignmentRequestRequestCAS_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdatePlanAssignmentRequestRequestCAS_FieldSubPathArrayOfValues)
}

func (UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalStateRequestExtendRegionalDistributionsLimitsByRegion) WithKey(key string) UpdatePlanAssignmentRequestRequest_CASMapPathSelectorConditionalStateRequestExtendRegionalDistributionsLimitsByRegion {
	return UpdatePlanAssignmentRequestRequest_CASMapPathSelectorConditionalStateRequestExtendRegionalDistributionsLimitsByRegion{key: key}
}

type UpdatePlanAssignmentRequestRequest_CASMapPathSelectorConditionalStateRequestExtendRegionalDistributionsLimitsByRegion struct {
	key string
}

func (s UpdatePlanAssignmentRequestRequest_CASMapPathSelectorConditionalStateRequestExtendRegionalDistributionsLimitsByRegion) FieldPath() *UpdatePlanAssignmentRequestRequestCAS_FieldSubPath {
	return &UpdatePlanAssignmentRequestRequestCAS_FieldSubPath{
		selector: UpdatePlanAssignmentRequestRequestCAS_FieldPathSelectorConditionalState,
		subPath:  plan_assignment_request.NewPlanAssignmentRequestFieldPathBuilder().Request().Extend().RegionalDistributions().LimitsByRegion().WithKey(s.key).FieldPath(),
	}
}

func (s UpdatePlanAssignmentRequestRequest_CASMapPathSelectorConditionalStateRequestExtendRegionalDistributionsLimitsByRegion) WithValue(value int64) *UpdatePlanAssignmentRequestRequestCAS_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdatePlanAssignmentRequestRequestCAS_FieldSubPathValue)
}

func (s UpdatePlanAssignmentRequestRequest_CASMapPathSelectorConditionalStateRequestExtendRegionalDistributionsLimitsByRegion) WithArrayOfValues(values []int64) *UpdatePlanAssignmentRequestRequestCAS_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdatePlanAssignmentRequestRequestCAS_FieldSubPathArrayOfValues)
}

type UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalStateRequestRedistribute struct{}

func (UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalStateRequestRedistribute) FieldPath() *UpdatePlanAssignmentRequestRequestCAS_FieldSubPath {
	return &UpdatePlanAssignmentRequestRequestCAS_FieldSubPath{
		selector: UpdatePlanAssignmentRequestRequestCAS_FieldPathSelectorConditionalState,
		subPath:  plan_assignment_request.NewPlanAssignmentRequestFieldPathBuilder().Request().Redistribute().FieldPath(),
	}
}

func (s UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalStateRequestRedistribute) WithValue(value *plan_assignment_request.PlanAssignmentRequest_Request_Redistribute) *UpdatePlanAssignmentRequestRequestCAS_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdatePlanAssignmentRequestRequestCAS_FieldSubPathValue)
}

func (s UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalStateRequestRedistribute) WithArrayOfValues(values []*plan_assignment_request.PlanAssignmentRequest_Request_Redistribute) *UpdatePlanAssignmentRequestRequestCAS_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdatePlanAssignmentRequestRequestCAS_FieldSubPathArrayOfValues)
}

func (UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalStateRequestRedistribute) Assignment() UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalStateRequestRedistributeAssignment {
	return UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalStateRequestRedistributeAssignment{}
}

func (UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalStateRequestRedistribute) RegionalDistributions() UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalStateRequestRedistributeRegionalDistributions {
	return UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalStateRequestRedistributeRegionalDistributions{}
}

type UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalStateRequestRedistributeAssignment struct{}

func (UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalStateRequestRedistributeAssignment) FieldPath() *UpdatePlanAssignmentRequestRequestCAS_FieldSubPath {
	return &UpdatePlanAssignmentRequestRequestCAS_FieldSubPath{
		selector: UpdatePlanAssignmentRequestRequestCAS_FieldPathSelectorConditionalState,
		subPath:  plan_assignment_request.NewPlanAssignmentRequestFieldPathBuilder().Request().Redistribute().Assignment().FieldPath(),
	}
}

func (s UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalStateRequestRedistributeAssignment) WithValue(value *plan_assignment.Reference) *UpdatePlanAssignmentRequestRequestCAS_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdatePlanAssignmentRequestRequestCAS_FieldSubPathValue)
}

func (s UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalStateRequestRedistributeAssignment) WithArrayOfValues(values []*plan_assignment.Reference) *UpdatePlanAssignmentRequestRequestCAS_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdatePlanAssignmentRequestRequestCAS_FieldSubPathArrayOfValues)
}

type UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalStateRequestRedistributeRegionalDistributions struct{}

func (UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalStateRequestRedistributeRegionalDistributions) FieldPath() *UpdatePlanAssignmentRequestRequestCAS_FieldSubPath {
	return &UpdatePlanAssignmentRequestRequestCAS_FieldSubPath{
		selector: UpdatePlanAssignmentRequestRequestCAS_FieldPathSelectorConditionalState,
		subPath:  plan_assignment_request.NewPlanAssignmentRequestFieldPathBuilder().Request().Redistribute().RegionalDistributions().FieldPath(),
	}
}

func (s UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalStateRequestRedistributeRegionalDistributions) WithValue(value []*common.RegionalDistribution) *UpdatePlanAssignmentRequestRequestCAS_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdatePlanAssignmentRequestRequestCAS_FieldSubPathValue)
}

func (s UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalStateRequestRedistributeRegionalDistributions) WithArrayOfValues(values [][]*common.RegionalDistribution) *UpdatePlanAssignmentRequestRequestCAS_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdatePlanAssignmentRequestRequestCAS_FieldSubPathArrayOfValues)
}

func (s UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalStateRequestRedistributeRegionalDistributions) WithItemValue(value *common.RegionalDistribution) *UpdatePlanAssignmentRequestRequestCAS_FieldSubPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*UpdatePlanAssignmentRequestRequestCAS_FieldSubPathArrayItemValue)
}

func (UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalStateRequestRedistributeRegionalDistributions) Resource() UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalStateRequestRedistributeRegionalDistributionsResource {
	return UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalStateRequestRedistributeRegionalDistributionsResource{}
}

func (UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalStateRequestRedistributeRegionalDistributions) LimitsByRegion() UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalStateRequestRedistributeRegionalDistributionsLimitsByRegion {
	return UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalStateRequestRedistributeRegionalDistributionsLimitsByRegion{}
}

type UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalStateRequestRedistributeRegionalDistributionsResource struct{}

func (UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalStateRequestRedistributeRegionalDistributionsResource) FieldPath() *UpdatePlanAssignmentRequestRequestCAS_FieldSubPath {
	return &UpdatePlanAssignmentRequestRequestCAS_FieldSubPath{
		selector: UpdatePlanAssignmentRequestRequestCAS_FieldPathSelectorConditionalState,
		subPath:  plan_assignment_request.NewPlanAssignmentRequestFieldPathBuilder().Request().Redistribute().RegionalDistributions().Resource().FieldPath(),
	}
}

func (s UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalStateRequestRedistributeRegionalDistributionsResource) WithValue(value *meta_resource.Reference) *UpdatePlanAssignmentRequestRequestCAS_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdatePlanAssignmentRequestRequestCAS_FieldSubPathValue)
}

func (s UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalStateRequestRedistributeRegionalDistributionsResource) WithArrayOfValues(values []*meta_resource.Reference) *UpdatePlanAssignmentRequestRequestCAS_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdatePlanAssignmentRequestRequestCAS_FieldSubPathArrayOfValues)
}

type UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalStateRequestRedistributeRegionalDistributionsLimitsByRegion struct{}

func (UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalStateRequestRedistributeRegionalDistributionsLimitsByRegion) FieldPath() *UpdatePlanAssignmentRequestRequestCAS_FieldSubPath {
	return &UpdatePlanAssignmentRequestRequestCAS_FieldSubPath{
		selector: UpdatePlanAssignmentRequestRequestCAS_FieldPathSelectorConditionalState,
		subPath:  plan_assignment_request.NewPlanAssignmentRequestFieldPathBuilder().Request().Redistribute().RegionalDistributions().LimitsByRegion().FieldPath(),
	}
}

func (s UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalStateRequestRedistributeRegionalDistributionsLimitsByRegion) WithValue(value map[string]int64) *UpdatePlanAssignmentRequestRequestCAS_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdatePlanAssignmentRequestRequestCAS_FieldSubPathValue)
}

func (s UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalStateRequestRedistributeRegionalDistributionsLimitsByRegion) WithArrayOfValues(values []map[string]int64) *UpdatePlanAssignmentRequestRequestCAS_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdatePlanAssignmentRequestRequestCAS_FieldSubPathArrayOfValues)
}

func (UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalStateRequestRedistributeRegionalDistributionsLimitsByRegion) WithKey(key string) UpdatePlanAssignmentRequestRequest_CASMapPathSelectorConditionalStateRequestRedistributeRegionalDistributionsLimitsByRegion {
	return UpdatePlanAssignmentRequestRequest_CASMapPathSelectorConditionalStateRequestRedistributeRegionalDistributionsLimitsByRegion{key: key}
}

type UpdatePlanAssignmentRequestRequest_CASMapPathSelectorConditionalStateRequestRedistributeRegionalDistributionsLimitsByRegion struct {
	key string
}

func (s UpdatePlanAssignmentRequestRequest_CASMapPathSelectorConditionalStateRequestRedistributeRegionalDistributionsLimitsByRegion) FieldPath() *UpdatePlanAssignmentRequestRequestCAS_FieldSubPath {
	return &UpdatePlanAssignmentRequestRequestCAS_FieldSubPath{
		selector: UpdatePlanAssignmentRequestRequestCAS_FieldPathSelectorConditionalState,
		subPath:  plan_assignment_request.NewPlanAssignmentRequestFieldPathBuilder().Request().Redistribute().RegionalDistributions().LimitsByRegion().WithKey(s.key).FieldPath(),
	}
}

func (s UpdatePlanAssignmentRequestRequest_CASMapPathSelectorConditionalStateRequestRedistributeRegionalDistributionsLimitsByRegion) WithValue(value int64) *UpdatePlanAssignmentRequestRequestCAS_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdatePlanAssignmentRequestRequestCAS_FieldSubPathValue)
}

func (s UpdatePlanAssignmentRequestRequest_CASMapPathSelectorConditionalStateRequestRedistributeRegionalDistributionsLimitsByRegion) WithArrayOfValues(values []int64) *UpdatePlanAssignmentRequestRequestCAS_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdatePlanAssignmentRequestRequestCAS_FieldSubPathArrayOfValues)
}

type UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalStateRequestUnassign struct{}

func (UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalStateRequestUnassign) FieldPath() *UpdatePlanAssignmentRequestRequestCAS_FieldSubPath {
	return &UpdatePlanAssignmentRequestRequestCAS_FieldSubPath{
		selector: UpdatePlanAssignmentRequestRequestCAS_FieldPathSelectorConditionalState,
		subPath:  plan_assignment_request.NewPlanAssignmentRequestFieldPathBuilder().Request().Unassign().FieldPath(),
	}
}

func (s UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalStateRequestUnassign) WithValue(value *plan_assignment_request.PlanAssignmentRequest_Request_Unassign) *UpdatePlanAssignmentRequestRequestCAS_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdatePlanAssignmentRequestRequestCAS_FieldSubPathValue)
}

func (s UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalStateRequestUnassign) WithArrayOfValues(values []*plan_assignment_request.PlanAssignmentRequest_Request_Unassign) *UpdatePlanAssignmentRequestRequestCAS_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdatePlanAssignmentRequestRequestCAS_FieldSubPathArrayOfValues)
}

func (UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalStateRequestUnassign) Assignment() UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalStateRequestUnassignAssignment {
	return UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalStateRequestUnassignAssignment{}
}

type UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalStateRequestUnassignAssignment struct{}

func (UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalStateRequestUnassignAssignment) FieldPath() *UpdatePlanAssignmentRequestRequestCAS_FieldSubPath {
	return &UpdatePlanAssignmentRequestRequestCAS_FieldSubPath{
		selector: UpdatePlanAssignmentRequestRequestCAS_FieldPathSelectorConditionalState,
		subPath:  plan_assignment_request.NewPlanAssignmentRequestFieldPathBuilder().Request().Unassign().Assignment().FieldPath(),
	}
}

func (s UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalStateRequestUnassignAssignment) WithValue(value *plan_assignment.Reference) *UpdatePlanAssignmentRequestRequestCAS_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdatePlanAssignmentRequestRequestCAS_FieldSubPathValue)
}

func (s UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalStateRequestUnassignAssignment) WithArrayOfValues(values []*plan_assignment.Reference) *UpdatePlanAssignmentRequestRequestCAS_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdatePlanAssignmentRequestRequestCAS_FieldSubPathArrayOfValues)
}

type UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalStateService struct{}

func (UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalStateService) FieldPath() *UpdatePlanAssignmentRequestRequestCAS_FieldSubPath {
	return &UpdatePlanAssignmentRequestRequestCAS_FieldSubPath{
		selector: UpdatePlanAssignmentRequestRequestCAS_FieldPathSelectorConditionalState,
		subPath:  plan_assignment_request.NewPlanAssignmentRequestFieldPathBuilder().Service().FieldPath(),
	}
}

func (s UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalStateService) WithValue(value *meta_service.Reference) *UpdatePlanAssignmentRequestRequestCAS_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdatePlanAssignmentRequestRequestCAS_FieldSubPathValue)
}

func (s UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalStateService) WithArrayOfValues(values []*meta_service.Reference) *UpdatePlanAssignmentRequestRequestCAS_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdatePlanAssignmentRequestRequestCAS_FieldSubPathArrayOfValues)
}

type UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalStateApprover struct{}

func (UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalStateApprover) FieldPath() *UpdatePlanAssignmentRequestRequestCAS_FieldSubPath {
	return &UpdatePlanAssignmentRequestRequestCAS_FieldSubPath{
		selector: UpdatePlanAssignmentRequestRequestCAS_FieldPathSelectorConditionalState,
		subPath:  plan_assignment_request.NewPlanAssignmentRequestFieldPathBuilder().Approver().FieldPath(),
	}
}

func (s UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalStateApprover) WithValue(value *iam_organization.Reference) *UpdatePlanAssignmentRequestRequestCAS_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdatePlanAssignmentRequestRequestCAS_FieldSubPathValue)
}

func (s UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalStateApprover) WithArrayOfValues(values []*iam_organization.Reference) *UpdatePlanAssignmentRequestRequestCAS_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdatePlanAssignmentRequestRequestCAS_FieldSubPathArrayOfValues)
}

type UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalStateStatus struct{}

func (UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalStateStatus) FieldPath() *UpdatePlanAssignmentRequestRequestCAS_FieldSubPath {
	return &UpdatePlanAssignmentRequestRequestCAS_FieldSubPath{
		selector: UpdatePlanAssignmentRequestRequestCAS_FieldPathSelectorConditionalState,
		subPath:  plan_assignment_request.NewPlanAssignmentRequestFieldPathBuilder().Status().FieldPath(),
	}
}

func (s UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalStateStatus) WithValue(value *plan_assignment_request.PlanAssignmentRequest_Status) *UpdatePlanAssignmentRequestRequestCAS_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdatePlanAssignmentRequestRequestCAS_FieldSubPathValue)
}

func (s UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalStateStatus) WithArrayOfValues(values []*plan_assignment_request.PlanAssignmentRequest_Status) *UpdatePlanAssignmentRequestRequestCAS_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdatePlanAssignmentRequestRequestCAS_FieldSubPathArrayOfValues)
}

func (UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalStateStatus) Conclusion() UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalStateStatusConclusion {
	return UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalStateStatusConclusion{}
}

func (UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalStateStatus) Reason() UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalStateStatusReason {
	return UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalStateStatusReason{}
}

type UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalStateStatusConclusion struct{}

func (UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalStateStatusConclusion) FieldPath() *UpdatePlanAssignmentRequestRequestCAS_FieldSubPath {
	return &UpdatePlanAssignmentRequestRequestCAS_FieldSubPath{
		selector: UpdatePlanAssignmentRequestRequestCAS_FieldPathSelectorConditionalState,
		subPath:  plan_assignment_request.NewPlanAssignmentRequestFieldPathBuilder().Status().Conclusion().FieldPath(),
	}
}

func (s UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalStateStatusConclusion) WithValue(value plan_assignment_request.PlanAssignmentRequest_Status_Conclusion) *UpdatePlanAssignmentRequestRequestCAS_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdatePlanAssignmentRequestRequestCAS_FieldSubPathValue)
}

func (s UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalStateStatusConclusion) WithArrayOfValues(values []plan_assignment_request.PlanAssignmentRequest_Status_Conclusion) *UpdatePlanAssignmentRequestRequestCAS_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdatePlanAssignmentRequestRequestCAS_FieldSubPathArrayOfValues)
}

type UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalStateStatusReason struct{}

func (UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalStateStatusReason) FieldPath() *UpdatePlanAssignmentRequestRequestCAS_FieldSubPath {
	return &UpdatePlanAssignmentRequestRequestCAS_FieldSubPath{
		selector: UpdatePlanAssignmentRequestRequestCAS_FieldPathSelectorConditionalState,
		subPath:  plan_assignment_request.NewPlanAssignmentRequestFieldPathBuilder().Status().Reason().FieldPath(),
	}
}

func (s UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalStateStatusReason) WithValue(value string) *UpdatePlanAssignmentRequestRequestCAS_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdatePlanAssignmentRequestRequestCAS_FieldSubPathValue)
}

func (s UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalStateStatusReason) WithArrayOfValues(values []string) *UpdatePlanAssignmentRequestRequestCAS_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdatePlanAssignmentRequestRequestCAS_FieldSubPathArrayOfValues)
}

type UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalStateMetadata struct{}

func (UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalStateMetadata) FieldPath() *UpdatePlanAssignmentRequestRequestCAS_FieldSubPath {
	return &UpdatePlanAssignmentRequestRequestCAS_FieldSubPath{
		selector: UpdatePlanAssignmentRequestRequestCAS_FieldPathSelectorConditionalState,
		subPath:  plan_assignment_request.NewPlanAssignmentRequestFieldPathBuilder().Metadata().FieldPath(),
	}
}

func (s UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalStateMetadata) WithValue(value *ntt_meta.Meta) *UpdatePlanAssignmentRequestRequestCAS_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdatePlanAssignmentRequestRequestCAS_FieldSubPathValue)
}

func (s UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalStateMetadata) WithArrayOfValues(values []*ntt_meta.Meta) *UpdatePlanAssignmentRequestRequestCAS_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdatePlanAssignmentRequestRequestCAS_FieldSubPathArrayOfValues)
}

func (UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalStateMetadata) CreateTime() UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalStateMetadataCreateTime {
	return UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalStateMetadataCreateTime{}
}

func (UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalStateMetadata) UpdateTime() UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalStateMetadataUpdateTime {
	return UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalStateMetadataUpdateTime{}
}

func (UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalStateMetadata) DeleteTime() UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalStateMetadataDeleteTime {
	return UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalStateMetadataDeleteTime{}
}

func (UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalStateMetadata) Uuid() UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalStateMetadataUuid {
	return UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalStateMetadataUuid{}
}

func (UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalStateMetadata) Tags() UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalStateMetadataTags {
	return UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalStateMetadataTags{}
}

func (UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalStateMetadata) Labels() UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalStateMetadataLabels {
	return UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalStateMetadataLabels{}
}

func (UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalStateMetadata) Annotations() UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalStateMetadataAnnotations {
	return UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalStateMetadataAnnotations{}
}

func (UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalStateMetadata) Generation() UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalStateMetadataGeneration {
	return UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalStateMetadataGeneration{}
}

func (UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalStateMetadata) ResourceVersion() UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalStateMetadataResourceVersion {
	return UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalStateMetadataResourceVersion{}
}

func (UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalStateMetadata) OwnerReferences() UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalStateMetadataOwnerReferences {
	return UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalStateMetadataOwnerReferences{}
}

func (UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalStateMetadata) Shards() UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalStateMetadataShards {
	return UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalStateMetadataShards{}
}

func (UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalStateMetadata) Syncing() UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalStateMetadataSyncing {
	return UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalStateMetadataSyncing{}
}

func (UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalStateMetadata) Lifecycle() UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalStateMetadataLifecycle {
	return UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalStateMetadataLifecycle{}
}

type UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalStateMetadataCreateTime struct{}

func (UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalStateMetadataCreateTime) FieldPath() *UpdatePlanAssignmentRequestRequestCAS_FieldSubPath {
	return &UpdatePlanAssignmentRequestRequestCAS_FieldSubPath{
		selector: UpdatePlanAssignmentRequestRequestCAS_FieldPathSelectorConditionalState,
		subPath:  plan_assignment_request.NewPlanAssignmentRequestFieldPathBuilder().Metadata().CreateTime().FieldPath(),
	}
}

func (s UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalStateMetadataCreateTime) WithValue(value *timestamp.Timestamp) *UpdatePlanAssignmentRequestRequestCAS_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdatePlanAssignmentRequestRequestCAS_FieldSubPathValue)
}

func (s UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalStateMetadataCreateTime) WithArrayOfValues(values []*timestamp.Timestamp) *UpdatePlanAssignmentRequestRequestCAS_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdatePlanAssignmentRequestRequestCAS_FieldSubPathArrayOfValues)
}

type UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalStateMetadataUpdateTime struct{}

func (UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalStateMetadataUpdateTime) FieldPath() *UpdatePlanAssignmentRequestRequestCAS_FieldSubPath {
	return &UpdatePlanAssignmentRequestRequestCAS_FieldSubPath{
		selector: UpdatePlanAssignmentRequestRequestCAS_FieldPathSelectorConditionalState,
		subPath:  plan_assignment_request.NewPlanAssignmentRequestFieldPathBuilder().Metadata().UpdateTime().FieldPath(),
	}
}

func (s UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalStateMetadataUpdateTime) WithValue(value *timestamp.Timestamp) *UpdatePlanAssignmentRequestRequestCAS_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdatePlanAssignmentRequestRequestCAS_FieldSubPathValue)
}

func (s UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalStateMetadataUpdateTime) WithArrayOfValues(values []*timestamp.Timestamp) *UpdatePlanAssignmentRequestRequestCAS_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdatePlanAssignmentRequestRequestCAS_FieldSubPathArrayOfValues)
}

type UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalStateMetadataDeleteTime struct{}

func (UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalStateMetadataDeleteTime) FieldPath() *UpdatePlanAssignmentRequestRequestCAS_FieldSubPath {
	return &UpdatePlanAssignmentRequestRequestCAS_FieldSubPath{
		selector: UpdatePlanAssignmentRequestRequestCAS_FieldPathSelectorConditionalState,
		subPath:  plan_assignment_request.NewPlanAssignmentRequestFieldPathBuilder().Metadata().DeleteTime().FieldPath(),
	}
}

func (s UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalStateMetadataDeleteTime) WithValue(value *timestamp.Timestamp) *UpdatePlanAssignmentRequestRequestCAS_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdatePlanAssignmentRequestRequestCAS_FieldSubPathValue)
}

func (s UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalStateMetadataDeleteTime) WithArrayOfValues(values []*timestamp.Timestamp) *UpdatePlanAssignmentRequestRequestCAS_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdatePlanAssignmentRequestRequestCAS_FieldSubPathArrayOfValues)
}

type UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalStateMetadataUuid struct{}

func (UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalStateMetadataUuid) FieldPath() *UpdatePlanAssignmentRequestRequestCAS_FieldSubPath {
	return &UpdatePlanAssignmentRequestRequestCAS_FieldSubPath{
		selector: UpdatePlanAssignmentRequestRequestCAS_FieldPathSelectorConditionalState,
		subPath:  plan_assignment_request.NewPlanAssignmentRequestFieldPathBuilder().Metadata().Uuid().FieldPath(),
	}
}

func (s UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalStateMetadataUuid) WithValue(value string) *UpdatePlanAssignmentRequestRequestCAS_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdatePlanAssignmentRequestRequestCAS_FieldSubPathValue)
}

func (s UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalStateMetadataUuid) WithArrayOfValues(values []string) *UpdatePlanAssignmentRequestRequestCAS_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdatePlanAssignmentRequestRequestCAS_FieldSubPathArrayOfValues)
}

type UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalStateMetadataTags struct{}

func (UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalStateMetadataTags) FieldPath() *UpdatePlanAssignmentRequestRequestCAS_FieldSubPath {
	return &UpdatePlanAssignmentRequestRequestCAS_FieldSubPath{
		selector: UpdatePlanAssignmentRequestRequestCAS_FieldPathSelectorConditionalState,
		subPath:  plan_assignment_request.NewPlanAssignmentRequestFieldPathBuilder().Metadata().Tags().FieldPath(),
	}
}

func (s UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalStateMetadataTags) WithValue(value []string) *UpdatePlanAssignmentRequestRequestCAS_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdatePlanAssignmentRequestRequestCAS_FieldSubPathValue)
}

func (s UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalStateMetadataTags) WithArrayOfValues(values [][]string) *UpdatePlanAssignmentRequestRequestCAS_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdatePlanAssignmentRequestRequestCAS_FieldSubPathArrayOfValues)
}

func (s UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalStateMetadataTags) WithItemValue(value string) *UpdatePlanAssignmentRequestRequestCAS_FieldSubPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*UpdatePlanAssignmentRequestRequestCAS_FieldSubPathArrayItemValue)
}

type UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalStateMetadataLabels struct{}

func (UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalStateMetadataLabels) FieldPath() *UpdatePlanAssignmentRequestRequestCAS_FieldSubPath {
	return &UpdatePlanAssignmentRequestRequestCAS_FieldSubPath{
		selector: UpdatePlanAssignmentRequestRequestCAS_FieldPathSelectorConditionalState,
		subPath:  plan_assignment_request.NewPlanAssignmentRequestFieldPathBuilder().Metadata().Labels().FieldPath(),
	}
}

func (s UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalStateMetadataLabels) WithValue(value map[string]string) *UpdatePlanAssignmentRequestRequestCAS_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdatePlanAssignmentRequestRequestCAS_FieldSubPathValue)
}

func (s UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalStateMetadataLabels) WithArrayOfValues(values []map[string]string) *UpdatePlanAssignmentRequestRequestCAS_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdatePlanAssignmentRequestRequestCAS_FieldSubPathArrayOfValues)
}

func (UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalStateMetadataLabels) WithKey(key string) UpdatePlanAssignmentRequestRequest_CASMapPathSelectorConditionalStateMetadataLabels {
	return UpdatePlanAssignmentRequestRequest_CASMapPathSelectorConditionalStateMetadataLabels{key: key}
}

type UpdatePlanAssignmentRequestRequest_CASMapPathSelectorConditionalStateMetadataLabels struct {
	key string
}

func (s UpdatePlanAssignmentRequestRequest_CASMapPathSelectorConditionalStateMetadataLabels) FieldPath() *UpdatePlanAssignmentRequestRequestCAS_FieldSubPath {
	return &UpdatePlanAssignmentRequestRequestCAS_FieldSubPath{
		selector: UpdatePlanAssignmentRequestRequestCAS_FieldPathSelectorConditionalState,
		subPath:  plan_assignment_request.NewPlanAssignmentRequestFieldPathBuilder().Metadata().Labels().WithKey(s.key).FieldPath(),
	}
}

func (s UpdatePlanAssignmentRequestRequest_CASMapPathSelectorConditionalStateMetadataLabels) WithValue(value string) *UpdatePlanAssignmentRequestRequestCAS_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdatePlanAssignmentRequestRequestCAS_FieldSubPathValue)
}

func (s UpdatePlanAssignmentRequestRequest_CASMapPathSelectorConditionalStateMetadataLabels) WithArrayOfValues(values []string) *UpdatePlanAssignmentRequestRequestCAS_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdatePlanAssignmentRequestRequestCAS_FieldSubPathArrayOfValues)
}

type UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalStateMetadataAnnotations struct{}

func (UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalStateMetadataAnnotations) FieldPath() *UpdatePlanAssignmentRequestRequestCAS_FieldSubPath {
	return &UpdatePlanAssignmentRequestRequestCAS_FieldSubPath{
		selector: UpdatePlanAssignmentRequestRequestCAS_FieldPathSelectorConditionalState,
		subPath:  plan_assignment_request.NewPlanAssignmentRequestFieldPathBuilder().Metadata().Annotations().FieldPath(),
	}
}

func (s UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalStateMetadataAnnotations) WithValue(value map[string]string) *UpdatePlanAssignmentRequestRequestCAS_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdatePlanAssignmentRequestRequestCAS_FieldSubPathValue)
}

func (s UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalStateMetadataAnnotations) WithArrayOfValues(values []map[string]string) *UpdatePlanAssignmentRequestRequestCAS_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdatePlanAssignmentRequestRequestCAS_FieldSubPathArrayOfValues)
}

func (UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalStateMetadataAnnotations) WithKey(key string) UpdatePlanAssignmentRequestRequest_CASMapPathSelectorConditionalStateMetadataAnnotations {
	return UpdatePlanAssignmentRequestRequest_CASMapPathSelectorConditionalStateMetadataAnnotations{key: key}
}

type UpdatePlanAssignmentRequestRequest_CASMapPathSelectorConditionalStateMetadataAnnotations struct {
	key string
}

func (s UpdatePlanAssignmentRequestRequest_CASMapPathSelectorConditionalStateMetadataAnnotations) FieldPath() *UpdatePlanAssignmentRequestRequestCAS_FieldSubPath {
	return &UpdatePlanAssignmentRequestRequestCAS_FieldSubPath{
		selector: UpdatePlanAssignmentRequestRequestCAS_FieldPathSelectorConditionalState,
		subPath:  plan_assignment_request.NewPlanAssignmentRequestFieldPathBuilder().Metadata().Annotations().WithKey(s.key).FieldPath(),
	}
}

func (s UpdatePlanAssignmentRequestRequest_CASMapPathSelectorConditionalStateMetadataAnnotations) WithValue(value string) *UpdatePlanAssignmentRequestRequestCAS_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdatePlanAssignmentRequestRequestCAS_FieldSubPathValue)
}

func (s UpdatePlanAssignmentRequestRequest_CASMapPathSelectorConditionalStateMetadataAnnotations) WithArrayOfValues(values []string) *UpdatePlanAssignmentRequestRequestCAS_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdatePlanAssignmentRequestRequestCAS_FieldSubPathArrayOfValues)
}

type UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalStateMetadataGeneration struct{}

func (UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalStateMetadataGeneration) FieldPath() *UpdatePlanAssignmentRequestRequestCAS_FieldSubPath {
	return &UpdatePlanAssignmentRequestRequestCAS_FieldSubPath{
		selector: UpdatePlanAssignmentRequestRequestCAS_FieldPathSelectorConditionalState,
		subPath:  plan_assignment_request.NewPlanAssignmentRequestFieldPathBuilder().Metadata().Generation().FieldPath(),
	}
}

func (s UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalStateMetadataGeneration) WithValue(value int64) *UpdatePlanAssignmentRequestRequestCAS_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdatePlanAssignmentRequestRequestCAS_FieldSubPathValue)
}

func (s UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalStateMetadataGeneration) WithArrayOfValues(values []int64) *UpdatePlanAssignmentRequestRequestCAS_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdatePlanAssignmentRequestRequestCAS_FieldSubPathArrayOfValues)
}

type UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalStateMetadataResourceVersion struct{}

func (UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalStateMetadataResourceVersion) FieldPath() *UpdatePlanAssignmentRequestRequestCAS_FieldSubPath {
	return &UpdatePlanAssignmentRequestRequestCAS_FieldSubPath{
		selector: UpdatePlanAssignmentRequestRequestCAS_FieldPathSelectorConditionalState,
		subPath:  plan_assignment_request.NewPlanAssignmentRequestFieldPathBuilder().Metadata().ResourceVersion().FieldPath(),
	}
}

func (s UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalStateMetadataResourceVersion) WithValue(value string) *UpdatePlanAssignmentRequestRequestCAS_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdatePlanAssignmentRequestRequestCAS_FieldSubPathValue)
}

func (s UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalStateMetadataResourceVersion) WithArrayOfValues(values []string) *UpdatePlanAssignmentRequestRequestCAS_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdatePlanAssignmentRequestRequestCAS_FieldSubPathArrayOfValues)
}

type UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalStateMetadataOwnerReferences struct{}

func (UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalStateMetadataOwnerReferences) FieldPath() *UpdatePlanAssignmentRequestRequestCAS_FieldSubPath {
	return &UpdatePlanAssignmentRequestRequestCAS_FieldSubPath{
		selector: UpdatePlanAssignmentRequestRequestCAS_FieldPathSelectorConditionalState,
		subPath:  plan_assignment_request.NewPlanAssignmentRequestFieldPathBuilder().Metadata().OwnerReferences().FieldPath(),
	}
}

func (s UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalStateMetadataOwnerReferences) WithValue(value []*ntt_meta.OwnerReference) *UpdatePlanAssignmentRequestRequestCAS_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdatePlanAssignmentRequestRequestCAS_FieldSubPathValue)
}

func (s UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalStateMetadataOwnerReferences) WithArrayOfValues(values [][]*ntt_meta.OwnerReference) *UpdatePlanAssignmentRequestRequestCAS_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdatePlanAssignmentRequestRequestCAS_FieldSubPathArrayOfValues)
}

func (s UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalStateMetadataOwnerReferences) WithItemValue(value *ntt_meta.OwnerReference) *UpdatePlanAssignmentRequestRequestCAS_FieldSubPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*UpdatePlanAssignmentRequestRequestCAS_FieldSubPathArrayItemValue)
}

func (UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalStateMetadataOwnerReferences) Kind() UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalStateMetadataOwnerReferencesKind {
	return UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalStateMetadataOwnerReferencesKind{}
}

func (UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalStateMetadataOwnerReferences) Version() UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalStateMetadataOwnerReferencesVersion {
	return UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalStateMetadataOwnerReferencesVersion{}
}

func (UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalStateMetadataOwnerReferences) Name() UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalStateMetadataOwnerReferencesName {
	return UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalStateMetadataOwnerReferencesName{}
}

func (UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalStateMetadataOwnerReferences) Region() UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalStateMetadataOwnerReferencesRegion {
	return UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalStateMetadataOwnerReferencesRegion{}
}

func (UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalStateMetadataOwnerReferences) Controller() UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalStateMetadataOwnerReferencesController {
	return UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalStateMetadataOwnerReferencesController{}
}

func (UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalStateMetadataOwnerReferences) BlockOwnerDeletion() UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalStateMetadataOwnerReferencesBlockOwnerDeletion {
	return UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalStateMetadataOwnerReferencesBlockOwnerDeletion{}
}

func (UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalStateMetadataOwnerReferences) RequiresOwnerReference() UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalStateMetadataOwnerReferencesRequiresOwnerReference {
	return UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalStateMetadataOwnerReferencesRequiresOwnerReference{}
}

type UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalStateMetadataOwnerReferencesKind struct{}

func (UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalStateMetadataOwnerReferencesKind) FieldPath() *UpdatePlanAssignmentRequestRequestCAS_FieldSubPath {
	return &UpdatePlanAssignmentRequestRequestCAS_FieldSubPath{
		selector: UpdatePlanAssignmentRequestRequestCAS_FieldPathSelectorConditionalState,
		subPath:  plan_assignment_request.NewPlanAssignmentRequestFieldPathBuilder().Metadata().OwnerReferences().Kind().FieldPath(),
	}
}

func (s UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalStateMetadataOwnerReferencesKind) WithValue(value string) *UpdatePlanAssignmentRequestRequestCAS_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdatePlanAssignmentRequestRequestCAS_FieldSubPathValue)
}

func (s UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalStateMetadataOwnerReferencesKind) WithArrayOfValues(values []string) *UpdatePlanAssignmentRequestRequestCAS_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdatePlanAssignmentRequestRequestCAS_FieldSubPathArrayOfValues)
}

type UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalStateMetadataOwnerReferencesVersion struct{}

func (UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalStateMetadataOwnerReferencesVersion) FieldPath() *UpdatePlanAssignmentRequestRequestCAS_FieldSubPath {
	return &UpdatePlanAssignmentRequestRequestCAS_FieldSubPath{
		selector: UpdatePlanAssignmentRequestRequestCAS_FieldPathSelectorConditionalState,
		subPath:  plan_assignment_request.NewPlanAssignmentRequestFieldPathBuilder().Metadata().OwnerReferences().Version().FieldPath(),
	}
}

func (s UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalStateMetadataOwnerReferencesVersion) WithValue(value string) *UpdatePlanAssignmentRequestRequestCAS_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdatePlanAssignmentRequestRequestCAS_FieldSubPathValue)
}

func (s UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalStateMetadataOwnerReferencesVersion) WithArrayOfValues(values []string) *UpdatePlanAssignmentRequestRequestCAS_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdatePlanAssignmentRequestRequestCAS_FieldSubPathArrayOfValues)
}

type UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalStateMetadataOwnerReferencesName struct{}

func (UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalStateMetadataOwnerReferencesName) FieldPath() *UpdatePlanAssignmentRequestRequestCAS_FieldSubPath {
	return &UpdatePlanAssignmentRequestRequestCAS_FieldSubPath{
		selector: UpdatePlanAssignmentRequestRequestCAS_FieldPathSelectorConditionalState,
		subPath:  plan_assignment_request.NewPlanAssignmentRequestFieldPathBuilder().Metadata().OwnerReferences().Name().FieldPath(),
	}
}

func (s UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalStateMetadataOwnerReferencesName) WithValue(value string) *UpdatePlanAssignmentRequestRequestCAS_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdatePlanAssignmentRequestRequestCAS_FieldSubPathValue)
}

func (s UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalStateMetadataOwnerReferencesName) WithArrayOfValues(values []string) *UpdatePlanAssignmentRequestRequestCAS_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdatePlanAssignmentRequestRequestCAS_FieldSubPathArrayOfValues)
}

type UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalStateMetadataOwnerReferencesRegion struct{}

func (UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalStateMetadataOwnerReferencesRegion) FieldPath() *UpdatePlanAssignmentRequestRequestCAS_FieldSubPath {
	return &UpdatePlanAssignmentRequestRequestCAS_FieldSubPath{
		selector: UpdatePlanAssignmentRequestRequestCAS_FieldPathSelectorConditionalState,
		subPath:  plan_assignment_request.NewPlanAssignmentRequestFieldPathBuilder().Metadata().OwnerReferences().Region().FieldPath(),
	}
}

func (s UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalStateMetadataOwnerReferencesRegion) WithValue(value string) *UpdatePlanAssignmentRequestRequestCAS_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdatePlanAssignmentRequestRequestCAS_FieldSubPathValue)
}

func (s UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalStateMetadataOwnerReferencesRegion) WithArrayOfValues(values []string) *UpdatePlanAssignmentRequestRequestCAS_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdatePlanAssignmentRequestRequestCAS_FieldSubPathArrayOfValues)
}

type UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalStateMetadataOwnerReferencesController struct{}

func (UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalStateMetadataOwnerReferencesController) FieldPath() *UpdatePlanAssignmentRequestRequestCAS_FieldSubPath {
	return &UpdatePlanAssignmentRequestRequestCAS_FieldSubPath{
		selector: UpdatePlanAssignmentRequestRequestCAS_FieldPathSelectorConditionalState,
		subPath:  plan_assignment_request.NewPlanAssignmentRequestFieldPathBuilder().Metadata().OwnerReferences().Controller().FieldPath(),
	}
}

func (s UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalStateMetadataOwnerReferencesController) WithValue(value bool) *UpdatePlanAssignmentRequestRequestCAS_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdatePlanAssignmentRequestRequestCAS_FieldSubPathValue)
}

func (s UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalStateMetadataOwnerReferencesController) WithArrayOfValues(values []bool) *UpdatePlanAssignmentRequestRequestCAS_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdatePlanAssignmentRequestRequestCAS_FieldSubPathArrayOfValues)
}

type UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalStateMetadataOwnerReferencesBlockOwnerDeletion struct{}

func (UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalStateMetadataOwnerReferencesBlockOwnerDeletion) FieldPath() *UpdatePlanAssignmentRequestRequestCAS_FieldSubPath {
	return &UpdatePlanAssignmentRequestRequestCAS_FieldSubPath{
		selector: UpdatePlanAssignmentRequestRequestCAS_FieldPathSelectorConditionalState,
		subPath:  plan_assignment_request.NewPlanAssignmentRequestFieldPathBuilder().Metadata().OwnerReferences().BlockOwnerDeletion().FieldPath(),
	}
}

func (s UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalStateMetadataOwnerReferencesBlockOwnerDeletion) WithValue(value bool) *UpdatePlanAssignmentRequestRequestCAS_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdatePlanAssignmentRequestRequestCAS_FieldSubPathValue)
}

func (s UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalStateMetadataOwnerReferencesBlockOwnerDeletion) WithArrayOfValues(values []bool) *UpdatePlanAssignmentRequestRequestCAS_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdatePlanAssignmentRequestRequestCAS_FieldSubPathArrayOfValues)
}

type UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalStateMetadataOwnerReferencesRequiresOwnerReference struct{}

func (UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalStateMetadataOwnerReferencesRequiresOwnerReference) FieldPath() *UpdatePlanAssignmentRequestRequestCAS_FieldSubPath {
	return &UpdatePlanAssignmentRequestRequestCAS_FieldSubPath{
		selector: UpdatePlanAssignmentRequestRequestCAS_FieldPathSelectorConditionalState,
		subPath:  plan_assignment_request.NewPlanAssignmentRequestFieldPathBuilder().Metadata().OwnerReferences().RequiresOwnerReference().FieldPath(),
	}
}

func (s UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalStateMetadataOwnerReferencesRequiresOwnerReference) WithValue(value bool) *UpdatePlanAssignmentRequestRequestCAS_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdatePlanAssignmentRequestRequestCAS_FieldSubPathValue)
}

func (s UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalStateMetadataOwnerReferencesRequiresOwnerReference) WithArrayOfValues(values []bool) *UpdatePlanAssignmentRequestRequestCAS_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdatePlanAssignmentRequestRequestCAS_FieldSubPathArrayOfValues)
}

type UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalStateMetadataShards struct{}

func (UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalStateMetadataShards) FieldPath() *UpdatePlanAssignmentRequestRequestCAS_FieldSubPath {
	return &UpdatePlanAssignmentRequestRequestCAS_FieldSubPath{
		selector: UpdatePlanAssignmentRequestRequestCAS_FieldPathSelectorConditionalState,
		subPath:  plan_assignment_request.NewPlanAssignmentRequestFieldPathBuilder().Metadata().Shards().FieldPath(),
	}
}

func (s UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalStateMetadataShards) WithValue(value map[string]int64) *UpdatePlanAssignmentRequestRequestCAS_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdatePlanAssignmentRequestRequestCAS_FieldSubPathValue)
}

func (s UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalStateMetadataShards) WithArrayOfValues(values []map[string]int64) *UpdatePlanAssignmentRequestRequestCAS_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdatePlanAssignmentRequestRequestCAS_FieldSubPathArrayOfValues)
}

func (UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalStateMetadataShards) WithKey(key string) UpdatePlanAssignmentRequestRequest_CASMapPathSelectorConditionalStateMetadataShards {
	return UpdatePlanAssignmentRequestRequest_CASMapPathSelectorConditionalStateMetadataShards{key: key}
}

type UpdatePlanAssignmentRequestRequest_CASMapPathSelectorConditionalStateMetadataShards struct {
	key string
}

func (s UpdatePlanAssignmentRequestRequest_CASMapPathSelectorConditionalStateMetadataShards) FieldPath() *UpdatePlanAssignmentRequestRequestCAS_FieldSubPath {
	return &UpdatePlanAssignmentRequestRequestCAS_FieldSubPath{
		selector: UpdatePlanAssignmentRequestRequestCAS_FieldPathSelectorConditionalState,
		subPath:  plan_assignment_request.NewPlanAssignmentRequestFieldPathBuilder().Metadata().Shards().WithKey(s.key).FieldPath(),
	}
}

func (s UpdatePlanAssignmentRequestRequest_CASMapPathSelectorConditionalStateMetadataShards) WithValue(value int64) *UpdatePlanAssignmentRequestRequestCAS_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdatePlanAssignmentRequestRequestCAS_FieldSubPathValue)
}

func (s UpdatePlanAssignmentRequestRequest_CASMapPathSelectorConditionalStateMetadataShards) WithArrayOfValues(values []int64) *UpdatePlanAssignmentRequestRequestCAS_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdatePlanAssignmentRequestRequestCAS_FieldSubPathArrayOfValues)
}

type UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalStateMetadataSyncing struct{}

func (UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalStateMetadataSyncing) FieldPath() *UpdatePlanAssignmentRequestRequestCAS_FieldSubPath {
	return &UpdatePlanAssignmentRequestRequestCAS_FieldSubPath{
		selector: UpdatePlanAssignmentRequestRequestCAS_FieldPathSelectorConditionalState,
		subPath:  plan_assignment_request.NewPlanAssignmentRequestFieldPathBuilder().Metadata().Syncing().FieldPath(),
	}
}

func (s UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalStateMetadataSyncing) WithValue(value *ntt_meta.SyncingMeta) *UpdatePlanAssignmentRequestRequestCAS_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdatePlanAssignmentRequestRequestCAS_FieldSubPathValue)
}

func (s UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalStateMetadataSyncing) WithArrayOfValues(values []*ntt_meta.SyncingMeta) *UpdatePlanAssignmentRequestRequestCAS_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdatePlanAssignmentRequestRequestCAS_FieldSubPathArrayOfValues)
}

func (UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalStateMetadataSyncing) OwningRegion() UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalStateMetadataSyncingOwningRegion {
	return UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalStateMetadataSyncingOwningRegion{}
}

func (UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalStateMetadataSyncing) Regions() UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalStateMetadataSyncingRegions {
	return UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalStateMetadataSyncingRegions{}
}

type UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalStateMetadataSyncingOwningRegion struct{}

func (UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalStateMetadataSyncingOwningRegion) FieldPath() *UpdatePlanAssignmentRequestRequestCAS_FieldSubPath {
	return &UpdatePlanAssignmentRequestRequestCAS_FieldSubPath{
		selector: UpdatePlanAssignmentRequestRequestCAS_FieldPathSelectorConditionalState,
		subPath:  plan_assignment_request.NewPlanAssignmentRequestFieldPathBuilder().Metadata().Syncing().OwningRegion().FieldPath(),
	}
}

func (s UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalStateMetadataSyncingOwningRegion) WithValue(value string) *UpdatePlanAssignmentRequestRequestCAS_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdatePlanAssignmentRequestRequestCAS_FieldSubPathValue)
}

func (s UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalStateMetadataSyncingOwningRegion) WithArrayOfValues(values []string) *UpdatePlanAssignmentRequestRequestCAS_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdatePlanAssignmentRequestRequestCAS_FieldSubPathArrayOfValues)
}

type UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalStateMetadataSyncingRegions struct{}

func (UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalStateMetadataSyncingRegions) FieldPath() *UpdatePlanAssignmentRequestRequestCAS_FieldSubPath {
	return &UpdatePlanAssignmentRequestRequestCAS_FieldSubPath{
		selector: UpdatePlanAssignmentRequestRequestCAS_FieldPathSelectorConditionalState,
		subPath:  plan_assignment_request.NewPlanAssignmentRequestFieldPathBuilder().Metadata().Syncing().Regions().FieldPath(),
	}
}

func (s UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalStateMetadataSyncingRegions) WithValue(value []string) *UpdatePlanAssignmentRequestRequestCAS_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdatePlanAssignmentRequestRequestCAS_FieldSubPathValue)
}

func (s UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalStateMetadataSyncingRegions) WithArrayOfValues(values [][]string) *UpdatePlanAssignmentRequestRequestCAS_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdatePlanAssignmentRequestRequestCAS_FieldSubPathArrayOfValues)
}

func (s UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalStateMetadataSyncingRegions) WithItemValue(value string) *UpdatePlanAssignmentRequestRequestCAS_FieldSubPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*UpdatePlanAssignmentRequestRequestCAS_FieldSubPathArrayItemValue)
}

type UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalStateMetadataLifecycle struct{}

func (UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalStateMetadataLifecycle) FieldPath() *UpdatePlanAssignmentRequestRequestCAS_FieldSubPath {
	return &UpdatePlanAssignmentRequestRequestCAS_FieldSubPath{
		selector: UpdatePlanAssignmentRequestRequestCAS_FieldPathSelectorConditionalState,
		subPath:  plan_assignment_request.NewPlanAssignmentRequestFieldPathBuilder().Metadata().Lifecycle().FieldPath(),
	}
}

func (s UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalStateMetadataLifecycle) WithValue(value *ntt_meta.Lifecycle) *UpdatePlanAssignmentRequestRequestCAS_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdatePlanAssignmentRequestRequestCAS_FieldSubPathValue)
}

func (s UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalStateMetadataLifecycle) WithArrayOfValues(values []*ntt_meta.Lifecycle) *UpdatePlanAssignmentRequestRequestCAS_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdatePlanAssignmentRequestRequestCAS_FieldSubPathArrayOfValues)
}

func (UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalStateMetadataLifecycle) State() UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalStateMetadataLifecycleState {
	return UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalStateMetadataLifecycleState{}
}

func (UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalStateMetadataLifecycle) BlockDeletion() UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalStateMetadataLifecycleBlockDeletion {
	return UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalStateMetadataLifecycleBlockDeletion{}
}

type UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalStateMetadataLifecycleState struct{}

func (UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalStateMetadataLifecycleState) FieldPath() *UpdatePlanAssignmentRequestRequestCAS_FieldSubPath {
	return &UpdatePlanAssignmentRequestRequestCAS_FieldSubPath{
		selector: UpdatePlanAssignmentRequestRequestCAS_FieldPathSelectorConditionalState,
		subPath:  plan_assignment_request.NewPlanAssignmentRequestFieldPathBuilder().Metadata().Lifecycle().State().FieldPath(),
	}
}

func (s UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalStateMetadataLifecycleState) WithValue(value ntt_meta.Lifecycle_State) *UpdatePlanAssignmentRequestRequestCAS_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdatePlanAssignmentRequestRequestCAS_FieldSubPathValue)
}

func (s UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalStateMetadataLifecycleState) WithArrayOfValues(values []ntt_meta.Lifecycle_State) *UpdatePlanAssignmentRequestRequestCAS_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdatePlanAssignmentRequestRequestCAS_FieldSubPathArrayOfValues)
}

type UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalStateMetadataLifecycleBlockDeletion struct{}

func (UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalStateMetadataLifecycleBlockDeletion) FieldPath() *UpdatePlanAssignmentRequestRequestCAS_FieldSubPath {
	return &UpdatePlanAssignmentRequestRequestCAS_FieldSubPath{
		selector: UpdatePlanAssignmentRequestRequestCAS_FieldPathSelectorConditionalState,
		subPath:  plan_assignment_request.NewPlanAssignmentRequestFieldPathBuilder().Metadata().Lifecycle().BlockDeletion().FieldPath(),
	}
}

func (s UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalStateMetadataLifecycleBlockDeletion) WithValue(value bool) *UpdatePlanAssignmentRequestRequestCAS_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdatePlanAssignmentRequestRequestCAS_FieldSubPathValue)
}

func (s UpdatePlanAssignmentRequestRequest_CASPathSelectorConditionalStateMetadataLifecycleBlockDeletion) WithArrayOfValues(values []bool) *UpdatePlanAssignmentRequestRequestCAS_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdatePlanAssignmentRequestRequestCAS_FieldSubPathArrayOfValues)
}

type UpdatePlanAssignmentRequestRequest_CASPathSelectorFieldMask struct{}

func (UpdatePlanAssignmentRequestRequest_CASPathSelectorFieldMask) FieldPath() *UpdatePlanAssignmentRequestRequestCAS_FieldTerminalPath {
	return &UpdatePlanAssignmentRequestRequestCAS_FieldTerminalPath{selector: UpdatePlanAssignmentRequestRequestCAS_FieldPathSelectorFieldMask}
}

func (s UpdatePlanAssignmentRequestRequest_CASPathSelectorFieldMask) WithValue(value *plan_assignment_request.PlanAssignmentRequest_FieldMask) *UpdatePlanAssignmentRequestRequestCAS_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*UpdatePlanAssignmentRequestRequestCAS_FieldTerminalPathValue)
}

func (s UpdatePlanAssignmentRequestRequest_CASPathSelectorFieldMask) WithArrayOfValues(values []*plan_assignment_request.PlanAssignmentRequest_FieldMask) *UpdatePlanAssignmentRequestRequestCAS_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdatePlanAssignmentRequestRequestCAS_FieldTerminalPathArrayOfValues)
}

type DeletePlanAssignmentRequestRequestFieldPathBuilder struct{}

func NewDeletePlanAssignmentRequestRequestFieldPathBuilder() DeletePlanAssignmentRequestRequestFieldPathBuilder {
	return DeletePlanAssignmentRequestRequestFieldPathBuilder{}
}
func (DeletePlanAssignmentRequestRequestFieldPathBuilder) Name() DeletePlanAssignmentRequestRequestPathSelectorName {
	return DeletePlanAssignmentRequestRequestPathSelectorName{}
}

type DeletePlanAssignmentRequestRequestPathSelectorName struct{}

func (DeletePlanAssignmentRequestRequestPathSelectorName) FieldPath() *DeletePlanAssignmentRequestRequest_FieldTerminalPath {
	return &DeletePlanAssignmentRequestRequest_FieldTerminalPath{selector: DeletePlanAssignmentRequestRequest_FieldPathSelectorName}
}

func (s DeletePlanAssignmentRequestRequestPathSelectorName) WithValue(value *plan_assignment_request.Reference) *DeletePlanAssignmentRequestRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*DeletePlanAssignmentRequestRequest_FieldTerminalPathValue)
}

func (s DeletePlanAssignmentRequestRequestPathSelectorName) WithArrayOfValues(values []*plan_assignment_request.Reference) *DeletePlanAssignmentRequestRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*DeletePlanAssignmentRequestRequest_FieldTerminalPathArrayOfValues)
}
