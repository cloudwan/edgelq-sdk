// Code generated by protoc-gen-goten-object
// File: edgelq/limits/proto/v1alpha2/plan_assignment_request_custom.proto
// DO NOT EDIT!!!

package plan_assignment_request_client

// proto imports
import (
	ntt_meta "github.com/cloudwan/edgelq-sdk/common/types/meta"
	multi_region_policy "github.com/cloudwan/edgelq-sdk/common/types/multi_region_policy"
	iam_organization "github.com/cloudwan/edgelq-sdk/iam/resources/v1alpha2/organization"
	iam_project "github.com/cloudwan/edgelq-sdk/iam/resources/v1alpha2/project"
	accepted_plan "github.com/cloudwan/edgelq-sdk/limits/resources/v1alpha2/accepted_plan"
	common "github.com/cloudwan/edgelq-sdk/limits/resources/v1alpha2/common"
	plan "github.com/cloudwan/edgelq-sdk/limits/resources/v1alpha2/plan"
	plan_assignment "github.com/cloudwan/edgelq-sdk/limits/resources/v1alpha2/plan_assignment"
	plan_assignment_request "github.com/cloudwan/edgelq-sdk/limits/resources/v1alpha2/plan_assignment_request"
	meta_resource "github.com/cloudwan/edgelq-sdk/meta/resources/v1alpha2/resource"
	meta_service "github.com/cloudwan/edgelq-sdk/meta/resources/v1alpha2/service"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
)

// make sure we're using proto imports
var (
	_ = &ntt_meta.Meta{}
	_ = &multi_region_policy.MultiRegionPolicy{}
	_ = &iam_organization.Organization{}
	_ = &iam_project.Project{}
	_ = &accepted_plan.AcceptedPlan{}
	_ = &common.Allowance{}
	_ = &plan.Plan{}
	_ = &plan_assignment.PlanAssignment{}
	_ = &plan_assignment_request.PlanAssignmentRequest{}
	_ = &meta_resource.Resource{}
	_ = &meta_service.Service{}
	_ = &timestamp.Timestamp{}
)

type AcceptPlanAssignmentRequestFieldPathBuilder struct{}

func NewAcceptPlanAssignmentRequestFieldPathBuilder() AcceptPlanAssignmentRequestFieldPathBuilder {
	return AcceptPlanAssignmentRequestFieldPathBuilder{}
}
func (AcceptPlanAssignmentRequestFieldPathBuilder) Name() AcceptPlanAssignmentRequestPathSelectorName {
	return AcceptPlanAssignmentRequestPathSelectorName{}
}
func (AcceptPlanAssignmentRequestFieldPathBuilder) Approver() AcceptPlanAssignmentRequestPathSelectorApprover {
	return AcceptPlanAssignmentRequestPathSelectorApprover{}
}

type AcceptPlanAssignmentRequestPathSelectorName struct{}

func (AcceptPlanAssignmentRequestPathSelectorName) FieldPath() *AcceptPlanAssignmentRequest_FieldTerminalPath {
	return &AcceptPlanAssignmentRequest_FieldTerminalPath{selector: AcceptPlanAssignmentRequest_FieldPathSelectorName}
}

func (s AcceptPlanAssignmentRequestPathSelectorName) WithValue(value *plan_assignment_request.Reference) *AcceptPlanAssignmentRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*AcceptPlanAssignmentRequest_FieldTerminalPathValue)
}

func (s AcceptPlanAssignmentRequestPathSelectorName) WithArrayOfValues(values []*plan_assignment_request.Reference) *AcceptPlanAssignmentRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*AcceptPlanAssignmentRequest_FieldTerminalPathArrayOfValues)
}

type AcceptPlanAssignmentRequestPathSelectorApprover struct{}

func (AcceptPlanAssignmentRequestPathSelectorApprover) FieldPath() *AcceptPlanAssignmentRequest_FieldTerminalPath {
	return &AcceptPlanAssignmentRequest_FieldTerminalPath{selector: AcceptPlanAssignmentRequest_FieldPathSelectorApprover}
}

func (s AcceptPlanAssignmentRequestPathSelectorApprover) WithValue(value *iam_organization.Reference) *AcceptPlanAssignmentRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*AcceptPlanAssignmentRequest_FieldTerminalPathValue)
}

func (s AcceptPlanAssignmentRequestPathSelectorApprover) WithArrayOfValues(values []*iam_organization.Reference) *AcceptPlanAssignmentRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*AcceptPlanAssignmentRequest_FieldTerminalPathArrayOfValues)
}

type AcceptPlanAssignmentResponseFieldPathBuilder struct{}

func NewAcceptPlanAssignmentResponseFieldPathBuilder() AcceptPlanAssignmentResponseFieldPathBuilder {
	return AcceptPlanAssignmentResponseFieldPathBuilder{}
}
func (AcceptPlanAssignmentResponseFieldPathBuilder) AcceptedPlan() AcceptPlanAssignmentResponsePathSelectorAcceptedPlan {
	return AcceptPlanAssignmentResponsePathSelectorAcceptedPlan{}
}

type AcceptPlanAssignmentResponsePathSelectorAcceptedPlan struct{}

func (AcceptPlanAssignmentResponsePathSelectorAcceptedPlan) FieldPath() *AcceptPlanAssignmentResponse_FieldTerminalPath {
	return &AcceptPlanAssignmentResponse_FieldTerminalPath{selector: AcceptPlanAssignmentResponse_FieldPathSelectorAcceptedPlan}
}

func (s AcceptPlanAssignmentResponsePathSelectorAcceptedPlan) WithValue(value *accepted_plan.AcceptedPlan) *AcceptPlanAssignmentResponse_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*AcceptPlanAssignmentResponse_FieldTerminalPathValue)
}

func (s AcceptPlanAssignmentResponsePathSelectorAcceptedPlan) WithArrayOfValues(values []*accepted_plan.AcceptedPlan) *AcceptPlanAssignmentResponse_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*AcceptPlanAssignmentResponse_FieldTerminalPathArrayOfValues)
}

func (AcceptPlanAssignmentResponsePathSelectorAcceptedPlan) WithSubPath(subPath accepted_plan.AcceptedPlan_FieldPath) *AcceptPlanAssignmentResponse_FieldSubPath {
	return &AcceptPlanAssignmentResponse_FieldSubPath{selector: AcceptPlanAssignmentResponse_FieldPathSelectorAcceptedPlan, subPath: subPath}
}

func (s AcceptPlanAssignmentResponsePathSelectorAcceptedPlan) WithSubValue(subPathValue accepted_plan.AcceptedPlan_FieldPathValue) *AcceptPlanAssignmentResponse_FieldSubPathValue {
	return &AcceptPlanAssignmentResponse_FieldSubPathValue{AcceptPlanAssignmentResponse_FieldPath: s.WithSubPath(subPathValue), subPathValue: subPathValue}
}

func (s AcceptPlanAssignmentResponsePathSelectorAcceptedPlan) WithSubArrayOfValues(subPathArrayOfValues accepted_plan.AcceptedPlan_FieldPathArrayOfValues) *AcceptPlanAssignmentResponse_FieldSubPathArrayOfValues {
	return &AcceptPlanAssignmentResponse_FieldSubPathArrayOfValues{AcceptPlanAssignmentResponse_FieldPath: s.WithSubPath(subPathArrayOfValues), subPathArrayOfValues: subPathArrayOfValues}
}

func (s AcceptPlanAssignmentResponsePathSelectorAcceptedPlan) WithSubArrayItemValue(subPathArrayItemValue accepted_plan.AcceptedPlan_FieldPathArrayItemValue) *AcceptPlanAssignmentResponse_FieldSubPathArrayItemValue {
	return &AcceptPlanAssignmentResponse_FieldSubPathArrayItemValue{AcceptPlanAssignmentResponse_FieldPath: s.WithSubPath(subPathArrayItemValue), subPathItemValue: subPathArrayItemValue}
}

func (AcceptPlanAssignmentResponsePathSelectorAcceptedPlan) Name() AcceptPlanAssignmentResponsePathSelectorAcceptedPlanName {
	return AcceptPlanAssignmentResponsePathSelectorAcceptedPlanName{}
}

func (AcceptPlanAssignmentResponsePathSelectorAcceptedPlan) Plan() AcceptPlanAssignmentResponsePathSelectorAcceptedPlanPlan {
	return AcceptPlanAssignmentResponsePathSelectorAcceptedPlanPlan{}
}

func (AcceptPlanAssignmentResponsePathSelectorAcceptedPlan) Service() AcceptPlanAssignmentResponsePathSelectorAcceptedPlanService {
	return AcceptPlanAssignmentResponsePathSelectorAcceptedPlanService{}
}

func (AcceptPlanAssignmentResponsePathSelectorAcceptedPlan) Extensions() AcceptPlanAssignmentResponsePathSelectorAcceptedPlanExtensions {
	return AcceptPlanAssignmentResponsePathSelectorAcceptedPlanExtensions{}
}

func (AcceptPlanAssignmentResponsePathSelectorAcceptedPlan) RegionalDistributions() AcceptPlanAssignmentResponsePathSelectorAcceptedPlanRegionalDistributions {
	return AcceptPlanAssignmentResponsePathSelectorAcceptedPlanRegionalDistributions{}
}

func (AcceptPlanAssignmentResponsePathSelectorAcceptedPlan) Assignee() AcceptPlanAssignmentResponsePathSelectorAcceptedPlanAssignee {
	return AcceptPlanAssignmentResponsePathSelectorAcceptedPlanAssignee{}
}

func (AcceptPlanAssignmentResponsePathSelectorAcceptedPlan) Metadata() AcceptPlanAssignmentResponsePathSelectorAcceptedPlanMetadata {
	return AcceptPlanAssignmentResponsePathSelectorAcceptedPlanMetadata{}
}

type AcceptPlanAssignmentResponsePathSelectorAcceptedPlanName struct{}

func (AcceptPlanAssignmentResponsePathSelectorAcceptedPlanName) FieldPath() *AcceptPlanAssignmentResponse_FieldSubPath {
	return &AcceptPlanAssignmentResponse_FieldSubPath{
		selector: AcceptPlanAssignmentResponse_FieldPathSelectorAcceptedPlan,
		subPath:  accepted_plan.NewAcceptedPlanFieldPathBuilder().Name().FieldPath(),
	}
}

func (s AcceptPlanAssignmentResponsePathSelectorAcceptedPlanName) WithValue(value *accepted_plan.Name) *AcceptPlanAssignmentResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*AcceptPlanAssignmentResponse_FieldSubPathValue)
}

func (s AcceptPlanAssignmentResponsePathSelectorAcceptedPlanName) WithArrayOfValues(values []*accepted_plan.Name) *AcceptPlanAssignmentResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*AcceptPlanAssignmentResponse_FieldSubPathArrayOfValues)
}

type AcceptPlanAssignmentResponsePathSelectorAcceptedPlanPlan struct{}

func (AcceptPlanAssignmentResponsePathSelectorAcceptedPlanPlan) FieldPath() *AcceptPlanAssignmentResponse_FieldSubPath {
	return &AcceptPlanAssignmentResponse_FieldSubPath{
		selector: AcceptPlanAssignmentResponse_FieldPathSelectorAcceptedPlan,
		subPath:  accepted_plan.NewAcceptedPlanFieldPathBuilder().Plan().FieldPath(),
	}
}

func (s AcceptPlanAssignmentResponsePathSelectorAcceptedPlanPlan) WithValue(value *plan.Reference) *AcceptPlanAssignmentResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*AcceptPlanAssignmentResponse_FieldSubPathValue)
}

func (s AcceptPlanAssignmentResponsePathSelectorAcceptedPlanPlan) WithArrayOfValues(values []*plan.Reference) *AcceptPlanAssignmentResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*AcceptPlanAssignmentResponse_FieldSubPathArrayOfValues)
}

type AcceptPlanAssignmentResponsePathSelectorAcceptedPlanService struct{}

func (AcceptPlanAssignmentResponsePathSelectorAcceptedPlanService) FieldPath() *AcceptPlanAssignmentResponse_FieldSubPath {
	return &AcceptPlanAssignmentResponse_FieldSubPath{
		selector: AcceptPlanAssignmentResponse_FieldPathSelectorAcceptedPlan,
		subPath:  accepted_plan.NewAcceptedPlanFieldPathBuilder().Service().FieldPath(),
	}
}

func (s AcceptPlanAssignmentResponsePathSelectorAcceptedPlanService) WithValue(value *meta_service.Reference) *AcceptPlanAssignmentResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*AcceptPlanAssignmentResponse_FieldSubPathValue)
}

func (s AcceptPlanAssignmentResponsePathSelectorAcceptedPlanService) WithArrayOfValues(values []*meta_service.Reference) *AcceptPlanAssignmentResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*AcceptPlanAssignmentResponse_FieldSubPathArrayOfValues)
}

type AcceptPlanAssignmentResponsePathSelectorAcceptedPlanExtensions struct{}

func (AcceptPlanAssignmentResponsePathSelectorAcceptedPlanExtensions) FieldPath() *AcceptPlanAssignmentResponse_FieldSubPath {
	return &AcceptPlanAssignmentResponse_FieldSubPath{
		selector: AcceptPlanAssignmentResponse_FieldPathSelectorAcceptedPlan,
		subPath:  accepted_plan.NewAcceptedPlanFieldPathBuilder().Extensions().FieldPath(),
	}
}

func (s AcceptPlanAssignmentResponsePathSelectorAcceptedPlanExtensions) WithValue(value []*common.Allowance) *AcceptPlanAssignmentResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*AcceptPlanAssignmentResponse_FieldSubPathValue)
}

func (s AcceptPlanAssignmentResponsePathSelectorAcceptedPlanExtensions) WithArrayOfValues(values [][]*common.Allowance) *AcceptPlanAssignmentResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*AcceptPlanAssignmentResponse_FieldSubPathArrayOfValues)
}

func (s AcceptPlanAssignmentResponsePathSelectorAcceptedPlanExtensions) WithItemValue(value *common.Allowance) *AcceptPlanAssignmentResponse_FieldSubPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*AcceptPlanAssignmentResponse_FieldSubPathArrayItemValue)
}

func (AcceptPlanAssignmentResponsePathSelectorAcceptedPlanExtensions) Resource() AcceptPlanAssignmentResponsePathSelectorAcceptedPlanExtensionsResource {
	return AcceptPlanAssignmentResponsePathSelectorAcceptedPlanExtensionsResource{}
}

func (AcceptPlanAssignmentResponsePathSelectorAcceptedPlanExtensions) Value() AcceptPlanAssignmentResponsePathSelectorAcceptedPlanExtensionsValue {
	return AcceptPlanAssignmentResponsePathSelectorAcceptedPlanExtensionsValue{}
}

type AcceptPlanAssignmentResponsePathSelectorAcceptedPlanExtensionsResource struct{}

func (AcceptPlanAssignmentResponsePathSelectorAcceptedPlanExtensionsResource) FieldPath() *AcceptPlanAssignmentResponse_FieldSubPath {
	return &AcceptPlanAssignmentResponse_FieldSubPath{
		selector: AcceptPlanAssignmentResponse_FieldPathSelectorAcceptedPlan,
		subPath:  accepted_plan.NewAcceptedPlanFieldPathBuilder().Extensions().Resource().FieldPath(),
	}
}

func (s AcceptPlanAssignmentResponsePathSelectorAcceptedPlanExtensionsResource) WithValue(value *meta_resource.Reference) *AcceptPlanAssignmentResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*AcceptPlanAssignmentResponse_FieldSubPathValue)
}

func (s AcceptPlanAssignmentResponsePathSelectorAcceptedPlanExtensionsResource) WithArrayOfValues(values []*meta_resource.Reference) *AcceptPlanAssignmentResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*AcceptPlanAssignmentResponse_FieldSubPathArrayOfValues)
}

type AcceptPlanAssignmentResponsePathSelectorAcceptedPlanExtensionsValue struct{}

func (AcceptPlanAssignmentResponsePathSelectorAcceptedPlanExtensionsValue) FieldPath() *AcceptPlanAssignmentResponse_FieldSubPath {
	return &AcceptPlanAssignmentResponse_FieldSubPath{
		selector: AcceptPlanAssignmentResponse_FieldPathSelectorAcceptedPlan,
		subPath:  accepted_plan.NewAcceptedPlanFieldPathBuilder().Extensions().Value().FieldPath(),
	}
}

func (s AcceptPlanAssignmentResponsePathSelectorAcceptedPlanExtensionsValue) WithValue(value int64) *AcceptPlanAssignmentResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*AcceptPlanAssignmentResponse_FieldSubPathValue)
}

func (s AcceptPlanAssignmentResponsePathSelectorAcceptedPlanExtensionsValue) WithArrayOfValues(values []int64) *AcceptPlanAssignmentResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*AcceptPlanAssignmentResponse_FieldSubPathArrayOfValues)
}

type AcceptPlanAssignmentResponsePathSelectorAcceptedPlanRegionalDistributions struct{}

func (AcceptPlanAssignmentResponsePathSelectorAcceptedPlanRegionalDistributions) FieldPath() *AcceptPlanAssignmentResponse_FieldSubPath {
	return &AcceptPlanAssignmentResponse_FieldSubPath{
		selector: AcceptPlanAssignmentResponse_FieldPathSelectorAcceptedPlan,
		subPath:  accepted_plan.NewAcceptedPlanFieldPathBuilder().RegionalDistributions().FieldPath(),
	}
}

func (s AcceptPlanAssignmentResponsePathSelectorAcceptedPlanRegionalDistributions) WithValue(value []*common.RegionalDistribution) *AcceptPlanAssignmentResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*AcceptPlanAssignmentResponse_FieldSubPathValue)
}

func (s AcceptPlanAssignmentResponsePathSelectorAcceptedPlanRegionalDistributions) WithArrayOfValues(values [][]*common.RegionalDistribution) *AcceptPlanAssignmentResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*AcceptPlanAssignmentResponse_FieldSubPathArrayOfValues)
}

func (s AcceptPlanAssignmentResponsePathSelectorAcceptedPlanRegionalDistributions) WithItemValue(value *common.RegionalDistribution) *AcceptPlanAssignmentResponse_FieldSubPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*AcceptPlanAssignmentResponse_FieldSubPathArrayItemValue)
}

func (AcceptPlanAssignmentResponsePathSelectorAcceptedPlanRegionalDistributions) Resource() AcceptPlanAssignmentResponsePathSelectorAcceptedPlanRegionalDistributionsResource {
	return AcceptPlanAssignmentResponsePathSelectorAcceptedPlanRegionalDistributionsResource{}
}

func (AcceptPlanAssignmentResponsePathSelectorAcceptedPlanRegionalDistributions) LimitsByRegion() AcceptPlanAssignmentResponsePathSelectorAcceptedPlanRegionalDistributionsLimitsByRegion {
	return AcceptPlanAssignmentResponsePathSelectorAcceptedPlanRegionalDistributionsLimitsByRegion{}
}

type AcceptPlanAssignmentResponsePathSelectorAcceptedPlanRegionalDistributionsResource struct{}

func (AcceptPlanAssignmentResponsePathSelectorAcceptedPlanRegionalDistributionsResource) FieldPath() *AcceptPlanAssignmentResponse_FieldSubPath {
	return &AcceptPlanAssignmentResponse_FieldSubPath{
		selector: AcceptPlanAssignmentResponse_FieldPathSelectorAcceptedPlan,
		subPath:  accepted_plan.NewAcceptedPlanFieldPathBuilder().RegionalDistributions().Resource().FieldPath(),
	}
}

func (s AcceptPlanAssignmentResponsePathSelectorAcceptedPlanRegionalDistributionsResource) WithValue(value *meta_resource.Reference) *AcceptPlanAssignmentResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*AcceptPlanAssignmentResponse_FieldSubPathValue)
}

func (s AcceptPlanAssignmentResponsePathSelectorAcceptedPlanRegionalDistributionsResource) WithArrayOfValues(values []*meta_resource.Reference) *AcceptPlanAssignmentResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*AcceptPlanAssignmentResponse_FieldSubPathArrayOfValues)
}

type AcceptPlanAssignmentResponsePathSelectorAcceptedPlanRegionalDistributionsLimitsByRegion struct{}

func (AcceptPlanAssignmentResponsePathSelectorAcceptedPlanRegionalDistributionsLimitsByRegion) FieldPath() *AcceptPlanAssignmentResponse_FieldSubPath {
	return &AcceptPlanAssignmentResponse_FieldSubPath{
		selector: AcceptPlanAssignmentResponse_FieldPathSelectorAcceptedPlan,
		subPath:  accepted_plan.NewAcceptedPlanFieldPathBuilder().RegionalDistributions().LimitsByRegion().FieldPath(),
	}
}

func (s AcceptPlanAssignmentResponsePathSelectorAcceptedPlanRegionalDistributionsLimitsByRegion) WithValue(value map[string]int64) *AcceptPlanAssignmentResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*AcceptPlanAssignmentResponse_FieldSubPathValue)
}

func (s AcceptPlanAssignmentResponsePathSelectorAcceptedPlanRegionalDistributionsLimitsByRegion) WithArrayOfValues(values []map[string]int64) *AcceptPlanAssignmentResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*AcceptPlanAssignmentResponse_FieldSubPathArrayOfValues)
}

func (AcceptPlanAssignmentResponsePathSelectorAcceptedPlanRegionalDistributionsLimitsByRegion) WithKey(key string) AcceptPlanAssignmentResponseMapPathSelectorAcceptedPlanRegionalDistributionsLimitsByRegion {
	return AcceptPlanAssignmentResponseMapPathSelectorAcceptedPlanRegionalDistributionsLimitsByRegion{key: key}
}

type AcceptPlanAssignmentResponseMapPathSelectorAcceptedPlanRegionalDistributionsLimitsByRegion struct {
	key string
}

func (s AcceptPlanAssignmentResponseMapPathSelectorAcceptedPlanRegionalDistributionsLimitsByRegion) FieldPath() *AcceptPlanAssignmentResponse_FieldSubPath {
	return &AcceptPlanAssignmentResponse_FieldSubPath{
		selector: AcceptPlanAssignmentResponse_FieldPathSelectorAcceptedPlan,
		subPath:  accepted_plan.NewAcceptedPlanFieldPathBuilder().RegionalDistributions().LimitsByRegion().WithKey(s.key).FieldPath(),
	}
}

func (s AcceptPlanAssignmentResponseMapPathSelectorAcceptedPlanRegionalDistributionsLimitsByRegion) WithValue(value int64) *AcceptPlanAssignmentResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*AcceptPlanAssignmentResponse_FieldSubPathValue)
}

func (s AcceptPlanAssignmentResponseMapPathSelectorAcceptedPlanRegionalDistributionsLimitsByRegion) WithArrayOfValues(values []int64) *AcceptPlanAssignmentResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*AcceptPlanAssignmentResponse_FieldSubPathArrayOfValues)
}

type AcceptPlanAssignmentResponsePathSelectorAcceptedPlanAssignee struct{}

func (AcceptPlanAssignmentResponsePathSelectorAcceptedPlanAssignee) FieldPath() *AcceptPlanAssignmentResponse_FieldSubPath {
	return &AcceptPlanAssignmentResponse_FieldSubPath{
		selector: AcceptPlanAssignmentResponse_FieldPathSelectorAcceptedPlan,
		subPath:  accepted_plan.NewAcceptedPlanFieldPathBuilder().Assignee().FieldPath(),
	}
}

func (s AcceptPlanAssignmentResponsePathSelectorAcceptedPlanAssignee) WithValue(value *accepted_plan.AcceptedPlan_Assignee) *AcceptPlanAssignmentResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*AcceptPlanAssignmentResponse_FieldSubPathValue)
}

func (s AcceptPlanAssignmentResponsePathSelectorAcceptedPlanAssignee) WithArrayOfValues(values []*accepted_plan.AcceptedPlan_Assignee) *AcceptPlanAssignmentResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*AcceptPlanAssignmentResponse_FieldSubPathArrayOfValues)
}

func (AcceptPlanAssignmentResponsePathSelectorAcceptedPlanAssignee) ProjectAssignee() AcceptPlanAssignmentResponsePathSelectorAcceptedPlanAssigneeProjectAssignee {
	return AcceptPlanAssignmentResponsePathSelectorAcceptedPlanAssigneeProjectAssignee{}
}

func (AcceptPlanAssignmentResponsePathSelectorAcceptedPlanAssignee) OrganizationAssignee() AcceptPlanAssignmentResponsePathSelectorAcceptedPlanAssigneeOrganizationAssignee {
	return AcceptPlanAssignmentResponsePathSelectorAcceptedPlanAssigneeOrganizationAssignee{}
}

func (AcceptPlanAssignmentResponsePathSelectorAcceptedPlanAssignee) SystemAssignee() AcceptPlanAssignmentResponsePathSelectorAcceptedPlanAssigneeSystemAssignee {
	return AcceptPlanAssignmentResponsePathSelectorAcceptedPlanAssigneeSystemAssignee{}
}

type AcceptPlanAssignmentResponsePathSelectorAcceptedPlanAssigneeProjectAssignee struct{}

func (AcceptPlanAssignmentResponsePathSelectorAcceptedPlanAssigneeProjectAssignee) FieldPath() *AcceptPlanAssignmentResponse_FieldSubPath {
	return &AcceptPlanAssignmentResponse_FieldSubPath{
		selector: AcceptPlanAssignmentResponse_FieldPathSelectorAcceptedPlan,
		subPath:  accepted_plan.NewAcceptedPlanFieldPathBuilder().Assignee().ProjectAssignee().FieldPath(),
	}
}

func (s AcceptPlanAssignmentResponsePathSelectorAcceptedPlanAssigneeProjectAssignee) WithValue(value *iam_project.Reference) *AcceptPlanAssignmentResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*AcceptPlanAssignmentResponse_FieldSubPathValue)
}

func (s AcceptPlanAssignmentResponsePathSelectorAcceptedPlanAssigneeProjectAssignee) WithArrayOfValues(values []*iam_project.Reference) *AcceptPlanAssignmentResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*AcceptPlanAssignmentResponse_FieldSubPathArrayOfValues)
}

type AcceptPlanAssignmentResponsePathSelectorAcceptedPlanAssigneeOrganizationAssignee struct{}

func (AcceptPlanAssignmentResponsePathSelectorAcceptedPlanAssigneeOrganizationAssignee) FieldPath() *AcceptPlanAssignmentResponse_FieldSubPath {
	return &AcceptPlanAssignmentResponse_FieldSubPath{
		selector: AcceptPlanAssignmentResponse_FieldPathSelectorAcceptedPlan,
		subPath:  accepted_plan.NewAcceptedPlanFieldPathBuilder().Assignee().OrganizationAssignee().FieldPath(),
	}
}

func (s AcceptPlanAssignmentResponsePathSelectorAcceptedPlanAssigneeOrganizationAssignee) WithValue(value *iam_organization.Reference) *AcceptPlanAssignmentResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*AcceptPlanAssignmentResponse_FieldSubPathValue)
}

func (s AcceptPlanAssignmentResponsePathSelectorAcceptedPlanAssigneeOrganizationAssignee) WithArrayOfValues(values []*iam_organization.Reference) *AcceptPlanAssignmentResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*AcceptPlanAssignmentResponse_FieldSubPathArrayOfValues)
}

type AcceptPlanAssignmentResponsePathSelectorAcceptedPlanAssigneeSystemAssignee struct{}

func (AcceptPlanAssignmentResponsePathSelectorAcceptedPlanAssigneeSystemAssignee) FieldPath() *AcceptPlanAssignmentResponse_FieldSubPath {
	return &AcceptPlanAssignmentResponse_FieldSubPath{
		selector: AcceptPlanAssignmentResponse_FieldPathSelectorAcceptedPlan,
		subPath:  accepted_plan.NewAcceptedPlanFieldPathBuilder().Assignee().SystemAssignee().FieldPath(),
	}
}

func (s AcceptPlanAssignmentResponsePathSelectorAcceptedPlanAssigneeSystemAssignee) WithValue(value bool) *AcceptPlanAssignmentResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*AcceptPlanAssignmentResponse_FieldSubPathValue)
}

func (s AcceptPlanAssignmentResponsePathSelectorAcceptedPlanAssigneeSystemAssignee) WithArrayOfValues(values []bool) *AcceptPlanAssignmentResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*AcceptPlanAssignmentResponse_FieldSubPathArrayOfValues)
}

type AcceptPlanAssignmentResponsePathSelectorAcceptedPlanMetadata struct{}

func (AcceptPlanAssignmentResponsePathSelectorAcceptedPlanMetadata) FieldPath() *AcceptPlanAssignmentResponse_FieldSubPath {
	return &AcceptPlanAssignmentResponse_FieldSubPath{
		selector: AcceptPlanAssignmentResponse_FieldPathSelectorAcceptedPlan,
		subPath:  accepted_plan.NewAcceptedPlanFieldPathBuilder().Metadata().FieldPath(),
	}
}

func (s AcceptPlanAssignmentResponsePathSelectorAcceptedPlanMetadata) WithValue(value *ntt_meta.Meta) *AcceptPlanAssignmentResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*AcceptPlanAssignmentResponse_FieldSubPathValue)
}

func (s AcceptPlanAssignmentResponsePathSelectorAcceptedPlanMetadata) WithArrayOfValues(values []*ntt_meta.Meta) *AcceptPlanAssignmentResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*AcceptPlanAssignmentResponse_FieldSubPathArrayOfValues)
}

func (AcceptPlanAssignmentResponsePathSelectorAcceptedPlanMetadata) CreateTime() AcceptPlanAssignmentResponsePathSelectorAcceptedPlanMetadataCreateTime {
	return AcceptPlanAssignmentResponsePathSelectorAcceptedPlanMetadataCreateTime{}
}

func (AcceptPlanAssignmentResponsePathSelectorAcceptedPlanMetadata) UpdateTime() AcceptPlanAssignmentResponsePathSelectorAcceptedPlanMetadataUpdateTime {
	return AcceptPlanAssignmentResponsePathSelectorAcceptedPlanMetadataUpdateTime{}
}

func (AcceptPlanAssignmentResponsePathSelectorAcceptedPlanMetadata) Uuid() AcceptPlanAssignmentResponsePathSelectorAcceptedPlanMetadataUuid {
	return AcceptPlanAssignmentResponsePathSelectorAcceptedPlanMetadataUuid{}
}

func (AcceptPlanAssignmentResponsePathSelectorAcceptedPlanMetadata) Tags() AcceptPlanAssignmentResponsePathSelectorAcceptedPlanMetadataTags {
	return AcceptPlanAssignmentResponsePathSelectorAcceptedPlanMetadataTags{}
}

func (AcceptPlanAssignmentResponsePathSelectorAcceptedPlanMetadata) Labels() AcceptPlanAssignmentResponsePathSelectorAcceptedPlanMetadataLabels {
	return AcceptPlanAssignmentResponsePathSelectorAcceptedPlanMetadataLabels{}
}

func (AcceptPlanAssignmentResponsePathSelectorAcceptedPlanMetadata) Annotations() AcceptPlanAssignmentResponsePathSelectorAcceptedPlanMetadataAnnotations {
	return AcceptPlanAssignmentResponsePathSelectorAcceptedPlanMetadataAnnotations{}
}

func (AcceptPlanAssignmentResponsePathSelectorAcceptedPlanMetadata) Generation() AcceptPlanAssignmentResponsePathSelectorAcceptedPlanMetadataGeneration {
	return AcceptPlanAssignmentResponsePathSelectorAcceptedPlanMetadataGeneration{}
}

func (AcceptPlanAssignmentResponsePathSelectorAcceptedPlanMetadata) ResourceVersion() AcceptPlanAssignmentResponsePathSelectorAcceptedPlanMetadataResourceVersion {
	return AcceptPlanAssignmentResponsePathSelectorAcceptedPlanMetadataResourceVersion{}
}

func (AcceptPlanAssignmentResponsePathSelectorAcceptedPlanMetadata) OwnerReferences() AcceptPlanAssignmentResponsePathSelectorAcceptedPlanMetadataOwnerReferences {
	return AcceptPlanAssignmentResponsePathSelectorAcceptedPlanMetadataOwnerReferences{}
}

func (AcceptPlanAssignmentResponsePathSelectorAcceptedPlanMetadata) Shards() AcceptPlanAssignmentResponsePathSelectorAcceptedPlanMetadataShards {
	return AcceptPlanAssignmentResponsePathSelectorAcceptedPlanMetadataShards{}
}

func (AcceptPlanAssignmentResponsePathSelectorAcceptedPlanMetadata) Syncing() AcceptPlanAssignmentResponsePathSelectorAcceptedPlanMetadataSyncing {
	return AcceptPlanAssignmentResponsePathSelectorAcceptedPlanMetadataSyncing{}
}

type AcceptPlanAssignmentResponsePathSelectorAcceptedPlanMetadataCreateTime struct{}

func (AcceptPlanAssignmentResponsePathSelectorAcceptedPlanMetadataCreateTime) FieldPath() *AcceptPlanAssignmentResponse_FieldSubPath {
	return &AcceptPlanAssignmentResponse_FieldSubPath{
		selector: AcceptPlanAssignmentResponse_FieldPathSelectorAcceptedPlan,
		subPath:  accepted_plan.NewAcceptedPlanFieldPathBuilder().Metadata().CreateTime().FieldPath(),
	}
}

func (s AcceptPlanAssignmentResponsePathSelectorAcceptedPlanMetadataCreateTime) WithValue(value *timestamp.Timestamp) *AcceptPlanAssignmentResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*AcceptPlanAssignmentResponse_FieldSubPathValue)
}

func (s AcceptPlanAssignmentResponsePathSelectorAcceptedPlanMetadataCreateTime) WithArrayOfValues(values []*timestamp.Timestamp) *AcceptPlanAssignmentResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*AcceptPlanAssignmentResponse_FieldSubPathArrayOfValues)
}

type AcceptPlanAssignmentResponsePathSelectorAcceptedPlanMetadataUpdateTime struct{}

func (AcceptPlanAssignmentResponsePathSelectorAcceptedPlanMetadataUpdateTime) FieldPath() *AcceptPlanAssignmentResponse_FieldSubPath {
	return &AcceptPlanAssignmentResponse_FieldSubPath{
		selector: AcceptPlanAssignmentResponse_FieldPathSelectorAcceptedPlan,
		subPath:  accepted_plan.NewAcceptedPlanFieldPathBuilder().Metadata().UpdateTime().FieldPath(),
	}
}

func (s AcceptPlanAssignmentResponsePathSelectorAcceptedPlanMetadataUpdateTime) WithValue(value *timestamp.Timestamp) *AcceptPlanAssignmentResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*AcceptPlanAssignmentResponse_FieldSubPathValue)
}

func (s AcceptPlanAssignmentResponsePathSelectorAcceptedPlanMetadataUpdateTime) WithArrayOfValues(values []*timestamp.Timestamp) *AcceptPlanAssignmentResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*AcceptPlanAssignmentResponse_FieldSubPathArrayOfValues)
}

type AcceptPlanAssignmentResponsePathSelectorAcceptedPlanMetadataUuid struct{}

func (AcceptPlanAssignmentResponsePathSelectorAcceptedPlanMetadataUuid) FieldPath() *AcceptPlanAssignmentResponse_FieldSubPath {
	return &AcceptPlanAssignmentResponse_FieldSubPath{
		selector: AcceptPlanAssignmentResponse_FieldPathSelectorAcceptedPlan,
		subPath:  accepted_plan.NewAcceptedPlanFieldPathBuilder().Metadata().Uuid().FieldPath(),
	}
}

func (s AcceptPlanAssignmentResponsePathSelectorAcceptedPlanMetadataUuid) WithValue(value string) *AcceptPlanAssignmentResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*AcceptPlanAssignmentResponse_FieldSubPathValue)
}

func (s AcceptPlanAssignmentResponsePathSelectorAcceptedPlanMetadataUuid) WithArrayOfValues(values []string) *AcceptPlanAssignmentResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*AcceptPlanAssignmentResponse_FieldSubPathArrayOfValues)
}

type AcceptPlanAssignmentResponsePathSelectorAcceptedPlanMetadataTags struct{}

func (AcceptPlanAssignmentResponsePathSelectorAcceptedPlanMetadataTags) FieldPath() *AcceptPlanAssignmentResponse_FieldSubPath {
	return &AcceptPlanAssignmentResponse_FieldSubPath{
		selector: AcceptPlanAssignmentResponse_FieldPathSelectorAcceptedPlan,
		subPath:  accepted_plan.NewAcceptedPlanFieldPathBuilder().Metadata().Tags().FieldPath(),
	}
}

func (s AcceptPlanAssignmentResponsePathSelectorAcceptedPlanMetadataTags) WithValue(value []string) *AcceptPlanAssignmentResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*AcceptPlanAssignmentResponse_FieldSubPathValue)
}

func (s AcceptPlanAssignmentResponsePathSelectorAcceptedPlanMetadataTags) WithArrayOfValues(values [][]string) *AcceptPlanAssignmentResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*AcceptPlanAssignmentResponse_FieldSubPathArrayOfValues)
}

func (s AcceptPlanAssignmentResponsePathSelectorAcceptedPlanMetadataTags) WithItemValue(value string) *AcceptPlanAssignmentResponse_FieldSubPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*AcceptPlanAssignmentResponse_FieldSubPathArrayItemValue)
}

type AcceptPlanAssignmentResponsePathSelectorAcceptedPlanMetadataLabels struct{}

func (AcceptPlanAssignmentResponsePathSelectorAcceptedPlanMetadataLabels) FieldPath() *AcceptPlanAssignmentResponse_FieldSubPath {
	return &AcceptPlanAssignmentResponse_FieldSubPath{
		selector: AcceptPlanAssignmentResponse_FieldPathSelectorAcceptedPlan,
		subPath:  accepted_plan.NewAcceptedPlanFieldPathBuilder().Metadata().Labels().FieldPath(),
	}
}

func (s AcceptPlanAssignmentResponsePathSelectorAcceptedPlanMetadataLabels) WithValue(value map[string]string) *AcceptPlanAssignmentResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*AcceptPlanAssignmentResponse_FieldSubPathValue)
}

func (s AcceptPlanAssignmentResponsePathSelectorAcceptedPlanMetadataLabels) WithArrayOfValues(values []map[string]string) *AcceptPlanAssignmentResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*AcceptPlanAssignmentResponse_FieldSubPathArrayOfValues)
}

func (AcceptPlanAssignmentResponsePathSelectorAcceptedPlanMetadataLabels) WithKey(key string) AcceptPlanAssignmentResponseMapPathSelectorAcceptedPlanMetadataLabels {
	return AcceptPlanAssignmentResponseMapPathSelectorAcceptedPlanMetadataLabels{key: key}
}

type AcceptPlanAssignmentResponseMapPathSelectorAcceptedPlanMetadataLabels struct {
	key string
}

func (s AcceptPlanAssignmentResponseMapPathSelectorAcceptedPlanMetadataLabels) FieldPath() *AcceptPlanAssignmentResponse_FieldSubPath {
	return &AcceptPlanAssignmentResponse_FieldSubPath{
		selector: AcceptPlanAssignmentResponse_FieldPathSelectorAcceptedPlan,
		subPath:  accepted_plan.NewAcceptedPlanFieldPathBuilder().Metadata().Labels().WithKey(s.key).FieldPath(),
	}
}

func (s AcceptPlanAssignmentResponseMapPathSelectorAcceptedPlanMetadataLabels) WithValue(value string) *AcceptPlanAssignmentResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*AcceptPlanAssignmentResponse_FieldSubPathValue)
}

func (s AcceptPlanAssignmentResponseMapPathSelectorAcceptedPlanMetadataLabels) WithArrayOfValues(values []string) *AcceptPlanAssignmentResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*AcceptPlanAssignmentResponse_FieldSubPathArrayOfValues)
}

type AcceptPlanAssignmentResponsePathSelectorAcceptedPlanMetadataAnnotations struct{}

func (AcceptPlanAssignmentResponsePathSelectorAcceptedPlanMetadataAnnotations) FieldPath() *AcceptPlanAssignmentResponse_FieldSubPath {
	return &AcceptPlanAssignmentResponse_FieldSubPath{
		selector: AcceptPlanAssignmentResponse_FieldPathSelectorAcceptedPlan,
		subPath:  accepted_plan.NewAcceptedPlanFieldPathBuilder().Metadata().Annotations().FieldPath(),
	}
}

func (s AcceptPlanAssignmentResponsePathSelectorAcceptedPlanMetadataAnnotations) WithValue(value map[string]string) *AcceptPlanAssignmentResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*AcceptPlanAssignmentResponse_FieldSubPathValue)
}

func (s AcceptPlanAssignmentResponsePathSelectorAcceptedPlanMetadataAnnotations) WithArrayOfValues(values []map[string]string) *AcceptPlanAssignmentResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*AcceptPlanAssignmentResponse_FieldSubPathArrayOfValues)
}

func (AcceptPlanAssignmentResponsePathSelectorAcceptedPlanMetadataAnnotations) WithKey(key string) AcceptPlanAssignmentResponseMapPathSelectorAcceptedPlanMetadataAnnotations {
	return AcceptPlanAssignmentResponseMapPathSelectorAcceptedPlanMetadataAnnotations{key: key}
}

type AcceptPlanAssignmentResponseMapPathSelectorAcceptedPlanMetadataAnnotations struct {
	key string
}

func (s AcceptPlanAssignmentResponseMapPathSelectorAcceptedPlanMetadataAnnotations) FieldPath() *AcceptPlanAssignmentResponse_FieldSubPath {
	return &AcceptPlanAssignmentResponse_FieldSubPath{
		selector: AcceptPlanAssignmentResponse_FieldPathSelectorAcceptedPlan,
		subPath:  accepted_plan.NewAcceptedPlanFieldPathBuilder().Metadata().Annotations().WithKey(s.key).FieldPath(),
	}
}

func (s AcceptPlanAssignmentResponseMapPathSelectorAcceptedPlanMetadataAnnotations) WithValue(value string) *AcceptPlanAssignmentResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*AcceptPlanAssignmentResponse_FieldSubPathValue)
}

func (s AcceptPlanAssignmentResponseMapPathSelectorAcceptedPlanMetadataAnnotations) WithArrayOfValues(values []string) *AcceptPlanAssignmentResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*AcceptPlanAssignmentResponse_FieldSubPathArrayOfValues)
}

type AcceptPlanAssignmentResponsePathSelectorAcceptedPlanMetadataGeneration struct{}

func (AcceptPlanAssignmentResponsePathSelectorAcceptedPlanMetadataGeneration) FieldPath() *AcceptPlanAssignmentResponse_FieldSubPath {
	return &AcceptPlanAssignmentResponse_FieldSubPath{
		selector: AcceptPlanAssignmentResponse_FieldPathSelectorAcceptedPlan,
		subPath:  accepted_plan.NewAcceptedPlanFieldPathBuilder().Metadata().Generation().FieldPath(),
	}
}

func (s AcceptPlanAssignmentResponsePathSelectorAcceptedPlanMetadataGeneration) WithValue(value int64) *AcceptPlanAssignmentResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*AcceptPlanAssignmentResponse_FieldSubPathValue)
}

func (s AcceptPlanAssignmentResponsePathSelectorAcceptedPlanMetadataGeneration) WithArrayOfValues(values []int64) *AcceptPlanAssignmentResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*AcceptPlanAssignmentResponse_FieldSubPathArrayOfValues)
}

type AcceptPlanAssignmentResponsePathSelectorAcceptedPlanMetadataResourceVersion struct{}

func (AcceptPlanAssignmentResponsePathSelectorAcceptedPlanMetadataResourceVersion) FieldPath() *AcceptPlanAssignmentResponse_FieldSubPath {
	return &AcceptPlanAssignmentResponse_FieldSubPath{
		selector: AcceptPlanAssignmentResponse_FieldPathSelectorAcceptedPlan,
		subPath:  accepted_plan.NewAcceptedPlanFieldPathBuilder().Metadata().ResourceVersion().FieldPath(),
	}
}

func (s AcceptPlanAssignmentResponsePathSelectorAcceptedPlanMetadataResourceVersion) WithValue(value string) *AcceptPlanAssignmentResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*AcceptPlanAssignmentResponse_FieldSubPathValue)
}

func (s AcceptPlanAssignmentResponsePathSelectorAcceptedPlanMetadataResourceVersion) WithArrayOfValues(values []string) *AcceptPlanAssignmentResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*AcceptPlanAssignmentResponse_FieldSubPathArrayOfValues)
}

type AcceptPlanAssignmentResponsePathSelectorAcceptedPlanMetadataOwnerReferences struct{}

func (AcceptPlanAssignmentResponsePathSelectorAcceptedPlanMetadataOwnerReferences) FieldPath() *AcceptPlanAssignmentResponse_FieldSubPath {
	return &AcceptPlanAssignmentResponse_FieldSubPath{
		selector: AcceptPlanAssignmentResponse_FieldPathSelectorAcceptedPlan,
		subPath:  accepted_plan.NewAcceptedPlanFieldPathBuilder().Metadata().OwnerReferences().FieldPath(),
	}
}

func (s AcceptPlanAssignmentResponsePathSelectorAcceptedPlanMetadataOwnerReferences) WithValue(value []*ntt_meta.OwnerReference) *AcceptPlanAssignmentResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*AcceptPlanAssignmentResponse_FieldSubPathValue)
}

func (s AcceptPlanAssignmentResponsePathSelectorAcceptedPlanMetadataOwnerReferences) WithArrayOfValues(values [][]*ntt_meta.OwnerReference) *AcceptPlanAssignmentResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*AcceptPlanAssignmentResponse_FieldSubPathArrayOfValues)
}

func (s AcceptPlanAssignmentResponsePathSelectorAcceptedPlanMetadataOwnerReferences) WithItemValue(value *ntt_meta.OwnerReference) *AcceptPlanAssignmentResponse_FieldSubPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*AcceptPlanAssignmentResponse_FieldSubPathArrayItemValue)
}

func (AcceptPlanAssignmentResponsePathSelectorAcceptedPlanMetadataOwnerReferences) ApiVersion() AcceptPlanAssignmentResponsePathSelectorAcceptedPlanMetadataOwnerReferencesApiVersion {
	return AcceptPlanAssignmentResponsePathSelectorAcceptedPlanMetadataOwnerReferencesApiVersion{}
}

func (AcceptPlanAssignmentResponsePathSelectorAcceptedPlanMetadataOwnerReferences) Kind() AcceptPlanAssignmentResponsePathSelectorAcceptedPlanMetadataOwnerReferencesKind {
	return AcceptPlanAssignmentResponsePathSelectorAcceptedPlanMetadataOwnerReferencesKind{}
}

func (AcceptPlanAssignmentResponsePathSelectorAcceptedPlanMetadataOwnerReferences) Name() AcceptPlanAssignmentResponsePathSelectorAcceptedPlanMetadataOwnerReferencesName {
	return AcceptPlanAssignmentResponsePathSelectorAcceptedPlanMetadataOwnerReferencesName{}
}

func (AcceptPlanAssignmentResponsePathSelectorAcceptedPlanMetadataOwnerReferences) Uid() AcceptPlanAssignmentResponsePathSelectorAcceptedPlanMetadataOwnerReferencesUid {
	return AcceptPlanAssignmentResponsePathSelectorAcceptedPlanMetadataOwnerReferencesUid{}
}

func (AcceptPlanAssignmentResponsePathSelectorAcceptedPlanMetadataOwnerReferences) Controller() AcceptPlanAssignmentResponsePathSelectorAcceptedPlanMetadataOwnerReferencesController {
	return AcceptPlanAssignmentResponsePathSelectorAcceptedPlanMetadataOwnerReferencesController{}
}

func (AcceptPlanAssignmentResponsePathSelectorAcceptedPlanMetadataOwnerReferences) BlockOwnerDeletion() AcceptPlanAssignmentResponsePathSelectorAcceptedPlanMetadataOwnerReferencesBlockOwnerDeletion {
	return AcceptPlanAssignmentResponsePathSelectorAcceptedPlanMetadataOwnerReferencesBlockOwnerDeletion{}
}

type AcceptPlanAssignmentResponsePathSelectorAcceptedPlanMetadataOwnerReferencesApiVersion struct{}

func (AcceptPlanAssignmentResponsePathSelectorAcceptedPlanMetadataOwnerReferencesApiVersion) FieldPath() *AcceptPlanAssignmentResponse_FieldSubPath {
	return &AcceptPlanAssignmentResponse_FieldSubPath{
		selector: AcceptPlanAssignmentResponse_FieldPathSelectorAcceptedPlan,
		subPath:  accepted_plan.NewAcceptedPlanFieldPathBuilder().Metadata().OwnerReferences().ApiVersion().FieldPath(),
	}
}

func (s AcceptPlanAssignmentResponsePathSelectorAcceptedPlanMetadataOwnerReferencesApiVersion) WithValue(value string) *AcceptPlanAssignmentResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*AcceptPlanAssignmentResponse_FieldSubPathValue)
}

func (s AcceptPlanAssignmentResponsePathSelectorAcceptedPlanMetadataOwnerReferencesApiVersion) WithArrayOfValues(values []string) *AcceptPlanAssignmentResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*AcceptPlanAssignmentResponse_FieldSubPathArrayOfValues)
}

type AcceptPlanAssignmentResponsePathSelectorAcceptedPlanMetadataOwnerReferencesKind struct{}

func (AcceptPlanAssignmentResponsePathSelectorAcceptedPlanMetadataOwnerReferencesKind) FieldPath() *AcceptPlanAssignmentResponse_FieldSubPath {
	return &AcceptPlanAssignmentResponse_FieldSubPath{
		selector: AcceptPlanAssignmentResponse_FieldPathSelectorAcceptedPlan,
		subPath:  accepted_plan.NewAcceptedPlanFieldPathBuilder().Metadata().OwnerReferences().Kind().FieldPath(),
	}
}

func (s AcceptPlanAssignmentResponsePathSelectorAcceptedPlanMetadataOwnerReferencesKind) WithValue(value string) *AcceptPlanAssignmentResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*AcceptPlanAssignmentResponse_FieldSubPathValue)
}

func (s AcceptPlanAssignmentResponsePathSelectorAcceptedPlanMetadataOwnerReferencesKind) WithArrayOfValues(values []string) *AcceptPlanAssignmentResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*AcceptPlanAssignmentResponse_FieldSubPathArrayOfValues)
}

type AcceptPlanAssignmentResponsePathSelectorAcceptedPlanMetadataOwnerReferencesName struct{}

func (AcceptPlanAssignmentResponsePathSelectorAcceptedPlanMetadataOwnerReferencesName) FieldPath() *AcceptPlanAssignmentResponse_FieldSubPath {
	return &AcceptPlanAssignmentResponse_FieldSubPath{
		selector: AcceptPlanAssignmentResponse_FieldPathSelectorAcceptedPlan,
		subPath:  accepted_plan.NewAcceptedPlanFieldPathBuilder().Metadata().OwnerReferences().Name().FieldPath(),
	}
}

func (s AcceptPlanAssignmentResponsePathSelectorAcceptedPlanMetadataOwnerReferencesName) WithValue(value string) *AcceptPlanAssignmentResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*AcceptPlanAssignmentResponse_FieldSubPathValue)
}

func (s AcceptPlanAssignmentResponsePathSelectorAcceptedPlanMetadataOwnerReferencesName) WithArrayOfValues(values []string) *AcceptPlanAssignmentResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*AcceptPlanAssignmentResponse_FieldSubPathArrayOfValues)
}

type AcceptPlanAssignmentResponsePathSelectorAcceptedPlanMetadataOwnerReferencesUid struct{}

func (AcceptPlanAssignmentResponsePathSelectorAcceptedPlanMetadataOwnerReferencesUid) FieldPath() *AcceptPlanAssignmentResponse_FieldSubPath {
	return &AcceptPlanAssignmentResponse_FieldSubPath{
		selector: AcceptPlanAssignmentResponse_FieldPathSelectorAcceptedPlan,
		subPath:  accepted_plan.NewAcceptedPlanFieldPathBuilder().Metadata().OwnerReferences().Uid().FieldPath(),
	}
}

func (s AcceptPlanAssignmentResponsePathSelectorAcceptedPlanMetadataOwnerReferencesUid) WithValue(value string) *AcceptPlanAssignmentResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*AcceptPlanAssignmentResponse_FieldSubPathValue)
}

func (s AcceptPlanAssignmentResponsePathSelectorAcceptedPlanMetadataOwnerReferencesUid) WithArrayOfValues(values []string) *AcceptPlanAssignmentResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*AcceptPlanAssignmentResponse_FieldSubPathArrayOfValues)
}

type AcceptPlanAssignmentResponsePathSelectorAcceptedPlanMetadataOwnerReferencesController struct{}

func (AcceptPlanAssignmentResponsePathSelectorAcceptedPlanMetadataOwnerReferencesController) FieldPath() *AcceptPlanAssignmentResponse_FieldSubPath {
	return &AcceptPlanAssignmentResponse_FieldSubPath{
		selector: AcceptPlanAssignmentResponse_FieldPathSelectorAcceptedPlan,
		subPath:  accepted_plan.NewAcceptedPlanFieldPathBuilder().Metadata().OwnerReferences().Controller().FieldPath(),
	}
}

func (s AcceptPlanAssignmentResponsePathSelectorAcceptedPlanMetadataOwnerReferencesController) WithValue(value bool) *AcceptPlanAssignmentResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*AcceptPlanAssignmentResponse_FieldSubPathValue)
}

func (s AcceptPlanAssignmentResponsePathSelectorAcceptedPlanMetadataOwnerReferencesController) WithArrayOfValues(values []bool) *AcceptPlanAssignmentResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*AcceptPlanAssignmentResponse_FieldSubPathArrayOfValues)
}

type AcceptPlanAssignmentResponsePathSelectorAcceptedPlanMetadataOwnerReferencesBlockOwnerDeletion struct{}

func (AcceptPlanAssignmentResponsePathSelectorAcceptedPlanMetadataOwnerReferencesBlockOwnerDeletion) FieldPath() *AcceptPlanAssignmentResponse_FieldSubPath {
	return &AcceptPlanAssignmentResponse_FieldSubPath{
		selector: AcceptPlanAssignmentResponse_FieldPathSelectorAcceptedPlan,
		subPath:  accepted_plan.NewAcceptedPlanFieldPathBuilder().Metadata().OwnerReferences().BlockOwnerDeletion().FieldPath(),
	}
}

func (s AcceptPlanAssignmentResponsePathSelectorAcceptedPlanMetadataOwnerReferencesBlockOwnerDeletion) WithValue(value bool) *AcceptPlanAssignmentResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*AcceptPlanAssignmentResponse_FieldSubPathValue)
}

func (s AcceptPlanAssignmentResponsePathSelectorAcceptedPlanMetadataOwnerReferencesBlockOwnerDeletion) WithArrayOfValues(values []bool) *AcceptPlanAssignmentResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*AcceptPlanAssignmentResponse_FieldSubPathArrayOfValues)
}

type AcceptPlanAssignmentResponsePathSelectorAcceptedPlanMetadataShards struct{}

func (AcceptPlanAssignmentResponsePathSelectorAcceptedPlanMetadataShards) FieldPath() *AcceptPlanAssignmentResponse_FieldSubPath {
	return &AcceptPlanAssignmentResponse_FieldSubPath{
		selector: AcceptPlanAssignmentResponse_FieldPathSelectorAcceptedPlan,
		subPath:  accepted_plan.NewAcceptedPlanFieldPathBuilder().Metadata().Shards().FieldPath(),
	}
}

func (s AcceptPlanAssignmentResponsePathSelectorAcceptedPlanMetadataShards) WithValue(value map[string]int64) *AcceptPlanAssignmentResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*AcceptPlanAssignmentResponse_FieldSubPathValue)
}

func (s AcceptPlanAssignmentResponsePathSelectorAcceptedPlanMetadataShards) WithArrayOfValues(values []map[string]int64) *AcceptPlanAssignmentResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*AcceptPlanAssignmentResponse_FieldSubPathArrayOfValues)
}

func (AcceptPlanAssignmentResponsePathSelectorAcceptedPlanMetadataShards) WithKey(key string) AcceptPlanAssignmentResponseMapPathSelectorAcceptedPlanMetadataShards {
	return AcceptPlanAssignmentResponseMapPathSelectorAcceptedPlanMetadataShards{key: key}
}

type AcceptPlanAssignmentResponseMapPathSelectorAcceptedPlanMetadataShards struct {
	key string
}

func (s AcceptPlanAssignmentResponseMapPathSelectorAcceptedPlanMetadataShards) FieldPath() *AcceptPlanAssignmentResponse_FieldSubPath {
	return &AcceptPlanAssignmentResponse_FieldSubPath{
		selector: AcceptPlanAssignmentResponse_FieldPathSelectorAcceptedPlan,
		subPath:  accepted_plan.NewAcceptedPlanFieldPathBuilder().Metadata().Shards().WithKey(s.key).FieldPath(),
	}
}

func (s AcceptPlanAssignmentResponseMapPathSelectorAcceptedPlanMetadataShards) WithValue(value int64) *AcceptPlanAssignmentResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*AcceptPlanAssignmentResponse_FieldSubPathValue)
}

func (s AcceptPlanAssignmentResponseMapPathSelectorAcceptedPlanMetadataShards) WithArrayOfValues(values []int64) *AcceptPlanAssignmentResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*AcceptPlanAssignmentResponse_FieldSubPathArrayOfValues)
}

type AcceptPlanAssignmentResponsePathSelectorAcceptedPlanMetadataSyncing struct{}

func (AcceptPlanAssignmentResponsePathSelectorAcceptedPlanMetadataSyncing) FieldPath() *AcceptPlanAssignmentResponse_FieldSubPath {
	return &AcceptPlanAssignmentResponse_FieldSubPath{
		selector: AcceptPlanAssignmentResponse_FieldPathSelectorAcceptedPlan,
		subPath:  accepted_plan.NewAcceptedPlanFieldPathBuilder().Metadata().Syncing().FieldPath(),
	}
}

func (s AcceptPlanAssignmentResponsePathSelectorAcceptedPlanMetadataSyncing) WithValue(value *ntt_meta.SyncingMeta) *AcceptPlanAssignmentResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*AcceptPlanAssignmentResponse_FieldSubPathValue)
}

func (s AcceptPlanAssignmentResponsePathSelectorAcceptedPlanMetadataSyncing) WithArrayOfValues(values []*ntt_meta.SyncingMeta) *AcceptPlanAssignmentResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*AcceptPlanAssignmentResponse_FieldSubPathArrayOfValues)
}

func (AcceptPlanAssignmentResponsePathSelectorAcceptedPlanMetadataSyncing) OwningRegion() AcceptPlanAssignmentResponsePathSelectorAcceptedPlanMetadataSyncingOwningRegion {
	return AcceptPlanAssignmentResponsePathSelectorAcceptedPlanMetadataSyncingOwningRegion{}
}

func (AcceptPlanAssignmentResponsePathSelectorAcceptedPlanMetadataSyncing) Regions() AcceptPlanAssignmentResponsePathSelectorAcceptedPlanMetadataSyncingRegions {
	return AcceptPlanAssignmentResponsePathSelectorAcceptedPlanMetadataSyncingRegions{}
}

type AcceptPlanAssignmentResponsePathSelectorAcceptedPlanMetadataSyncingOwningRegion struct{}

func (AcceptPlanAssignmentResponsePathSelectorAcceptedPlanMetadataSyncingOwningRegion) FieldPath() *AcceptPlanAssignmentResponse_FieldSubPath {
	return &AcceptPlanAssignmentResponse_FieldSubPath{
		selector: AcceptPlanAssignmentResponse_FieldPathSelectorAcceptedPlan,
		subPath:  accepted_plan.NewAcceptedPlanFieldPathBuilder().Metadata().Syncing().OwningRegion().FieldPath(),
	}
}

func (s AcceptPlanAssignmentResponsePathSelectorAcceptedPlanMetadataSyncingOwningRegion) WithValue(value string) *AcceptPlanAssignmentResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*AcceptPlanAssignmentResponse_FieldSubPathValue)
}

func (s AcceptPlanAssignmentResponsePathSelectorAcceptedPlanMetadataSyncingOwningRegion) WithArrayOfValues(values []string) *AcceptPlanAssignmentResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*AcceptPlanAssignmentResponse_FieldSubPathArrayOfValues)
}

type AcceptPlanAssignmentResponsePathSelectorAcceptedPlanMetadataSyncingRegions struct{}

func (AcceptPlanAssignmentResponsePathSelectorAcceptedPlanMetadataSyncingRegions) FieldPath() *AcceptPlanAssignmentResponse_FieldSubPath {
	return &AcceptPlanAssignmentResponse_FieldSubPath{
		selector: AcceptPlanAssignmentResponse_FieldPathSelectorAcceptedPlan,
		subPath:  accepted_plan.NewAcceptedPlanFieldPathBuilder().Metadata().Syncing().Regions().FieldPath(),
	}
}

func (s AcceptPlanAssignmentResponsePathSelectorAcceptedPlanMetadataSyncingRegions) WithValue(value []string) *AcceptPlanAssignmentResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*AcceptPlanAssignmentResponse_FieldSubPathValue)
}

func (s AcceptPlanAssignmentResponsePathSelectorAcceptedPlanMetadataSyncingRegions) WithArrayOfValues(values [][]string) *AcceptPlanAssignmentResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*AcceptPlanAssignmentResponse_FieldSubPathArrayOfValues)
}

func (s AcceptPlanAssignmentResponsePathSelectorAcceptedPlanMetadataSyncingRegions) WithItemValue(value string) *AcceptPlanAssignmentResponse_FieldSubPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*AcceptPlanAssignmentResponse_FieldSubPathArrayItemValue)
}

type DeclinePlanAssignmentRequestFieldPathBuilder struct{}

func NewDeclinePlanAssignmentRequestFieldPathBuilder() DeclinePlanAssignmentRequestFieldPathBuilder {
	return DeclinePlanAssignmentRequestFieldPathBuilder{}
}
func (DeclinePlanAssignmentRequestFieldPathBuilder) Name() DeclinePlanAssignmentRequestPathSelectorName {
	return DeclinePlanAssignmentRequestPathSelectorName{}
}
func (DeclinePlanAssignmentRequestFieldPathBuilder) Approver() DeclinePlanAssignmentRequestPathSelectorApprover {
	return DeclinePlanAssignmentRequestPathSelectorApprover{}
}
func (DeclinePlanAssignmentRequestFieldPathBuilder) Reason() DeclinePlanAssignmentRequestPathSelectorReason {
	return DeclinePlanAssignmentRequestPathSelectorReason{}
}

type DeclinePlanAssignmentRequestPathSelectorName struct{}

func (DeclinePlanAssignmentRequestPathSelectorName) FieldPath() *DeclinePlanAssignmentRequest_FieldTerminalPath {
	return &DeclinePlanAssignmentRequest_FieldTerminalPath{selector: DeclinePlanAssignmentRequest_FieldPathSelectorName}
}

func (s DeclinePlanAssignmentRequestPathSelectorName) WithValue(value *plan_assignment_request.Reference) *DeclinePlanAssignmentRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*DeclinePlanAssignmentRequest_FieldTerminalPathValue)
}

func (s DeclinePlanAssignmentRequestPathSelectorName) WithArrayOfValues(values []*plan_assignment_request.Reference) *DeclinePlanAssignmentRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*DeclinePlanAssignmentRequest_FieldTerminalPathArrayOfValues)
}

type DeclinePlanAssignmentRequestPathSelectorApprover struct{}

func (DeclinePlanAssignmentRequestPathSelectorApprover) FieldPath() *DeclinePlanAssignmentRequest_FieldTerminalPath {
	return &DeclinePlanAssignmentRequest_FieldTerminalPath{selector: DeclinePlanAssignmentRequest_FieldPathSelectorApprover}
}

func (s DeclinePlanAssignmentRequestPathSelectorApprover) WithValue(value *iam_organization.Reference) *DeclinePlanAssignmentRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*DeclinePlanAssignmentRequest_FieldTerminalPathValue)
}

func (s DeclinePlanAssignmentRequestPathSelectorApprover) WithArrayOfValues(values []*iam_organization.Reference) *DeclinePlanAssignmentRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*DeclinePlanAssignmentRequest_FieldTerminalPathArrayOfValues)
}

type DeclinePlanAssignmentRequestPathSelectorReason struct{}

func (DeclinePlanAssignmentRequestPathSelectorReason) FieldPath() *DeclinePlanAssignmentRequest_FieldTerminalPath {
	return &DeclinePlanAssignmentRequest_FieldTerminalPath{selector: DeclinePlanAssignmentRequest_FieldPathSelectorReason}
}

func (s DeclinePlanAssignmentRequestPathSelectorReason) WithValue(value string) *DeclinePlanAssignmentRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*DeclinePlanAssignmentRequest_FieldTerminalPathValue)
}

func (s DeclinePlanAssignmentRequestPathSelectorReason) WithArrayOfValues(values []string) *DeclinePlanAssignmentRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*DeclinePlanAssignmentRequest_FieldTerminalPathArrayOfValues)
}

type DeclinePlanAssignmentResponseFieldPathBuilder struct{}

func NewDeclinePlanAssignmentResponseFieldPathBuilder() DeclinePlanAssignmentResponseFieldPathBuilder {
	return DeclinePlanAssignmentResponseFieldPathBuilder{}
}
