// Code generated by protoc-gen-goten-access
// Service: AI
// DO NOT EDIT!!!

package ai_access

import (
	gotenresource "github.com/cloudwan/goten-sdk/runtime/resource"

	chat_model_access "github.com/cloudwan/edgelq-sdk/ai/access/v1/chat_model"
	document_access "github.com/cloudwan/edgelq-sdk/ai/access/v1/document"
	search_db_access "github.com/cloudwan/edgelq-sdk/ai/access/v1/search_db"
	search_index_access "github.com/cloudwan/edgelq-sdk/ai/access/v1/search_index"
	ai_client "github.com/cloudwan/edgelq-sdk/ai/client/v1/ai"
	chat_model "github.com/cloudwan/edgelq-sdk/ai/resources/v1/chat_model"
	document "github.com/cloudwan/edgelq-sdk/ai/resources/v1/document"
	search_db "github.com/cloudwan/edgelq-sdk/ai/resources/v1/search_db"
	search_index "github.com/cloudwan/edgelq-sdk/ai/resources/v1/search_index"
)

type AIApiAccess interface {
	gotenresource.Access

	chat_model.ChatModelAccess
	document.DocumentAccess
	search_db.SearchDbAccess
	search_index.SearchIndexAccess
}

type apiAIAccess struct {
	gotenresource.Access

	chat_model.ChatModelAccess
	document.DocumentAccess
	search_db.SearchDbAccess
	search_index.SearchIndexAccess
}

func NewApiAccess(client ai_client.AIClient) AIApiAccess {

	chatModelAccess := chat_model_access.NewApiChatModelAccess(client)
	documentAccess := document_access.NewApiDocumentAccess(client)
	searchDbAccess := search_db_access.NewApiSearchDbAccess(client)
	searchIndexAccess := search_index_access.NewApiSearchIndexAccess(client)

	return &apiAIAccess{
		Access: gotenresource.NewCompositeAccess(

			chat_model.AsAnyCastAccess(chatModelAccess),
			document.AsAnyCastAccess(documentAccess),
			search_db.AsAnyCastAccess(searchDbAccess),
			search_index.AsAnyCastAccess(searchIndexAccess),
		),

		ChatModelAccess:   chatModelAccess,
		DocumentAccess:    documentAccess,
		SearchDbAccess:    searchDbAccess,
		SearchIndexAccess: searchIndexAccess,
	}
}
