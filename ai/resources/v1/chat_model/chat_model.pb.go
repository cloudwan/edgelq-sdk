// Code generated by protoc-gen-goten-go
// File: edgelq/ai/proto/v1/chat_model.proto
// DO NOT EDIT!!!

package chat_model

import (
	"fmt"
	"reflect"
	"sync"

	"google.golang.org/protobuf/encoding/protojson"
	"google.golang.org/protobuf/proto"
	preflect "google.golang.org/protobuf/reflect/protoreflect"
	"google.golang.org/protobuf/runtime/protoimpl"
)

// proto imports
import (
	iam_project "github.com/cloudwan/edgelq-sdk/iam/resources/v1/project"
	secrets_secret "github.com/cloudwan/edgelq-sdk/secrets/resources/v1/secret"
	meta "github.com/cloudwan/goten-sdk/types/meta"
)

// Reference imports to suppress errors if they are not otherwise used.
var (
	_ = fmt.Errorf
	_ = reflect.Method{}
	_ = sync.Once{}

	_ = protojson.MarshalOptions{}
	_ = proto.MarshalOptions{}
	_ = preflect.Value{}
	_ = protoimpl.DescBuilder{}
)

// make sure we're using proto imports
var (
	_ = &iam_project.Project{}
	_ = &secrets_secret.Secret{}
	_ = &meta.Meta{}
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// ChatModel Resource represents deployment of an AI chat model.
type ChatModel struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
	// Name of ChatModel
	// When creating a new instance, this field is optional and if not provided,
	// it will be generated automatically. Last ID segment must conform to the
	// following regex: [a-z][a-z0-9\\-]{0,28}[a-z0-9]
	Name *Name `protobuf:"bytes,1,opt,customtype=Name,name=name,proto3" json:"name,omitempty"`
	// Metadata is an object with information like create, update and delete time
	// (for async deleted resources), has user labels/annotations, sharding
	// information, multi-region syncing information and may have non-schema
	// owners (useful for taking ownership of resources belonging to lower level
	// services by higher ones).
	Metadata *meta.Meta `protobuf:"bytes,2,opt,name=metadata,proto3" json:"metadata,omitempty"`
	// Types that are valid to be assigned to ModelType:
	//	*ChatModel_AzureOpenAi_
	ModelType isChatModel_ModelType `protobuf_oneof:"ModelType"`
}

func (m *ChatModel) Reset() {
	*m = ChatModel{}
	if protoimpl.UnsafeEnabled {
		mi := &edgelq_ai_proto_v1_chat_model_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(m))
		ms.StoreMessageInfo(mi)
	}
}

func (m *ChatModel) String() string {
	return protoimpl.X.MessageStringOf(m)
}

func (*ChatModel) ProtoMessage() {}

func (m *ChatModel) ProtoReflect() preflect.Message {
	mi := &edgelq_ai_proto_v1_chat_model_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && m != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(m))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(m)
}

func (*ChatModel) GotenMessage() {}

// Deprecated, Use ChatModel.ProtoReflect.Descriptor instead.
func (*ChatModel) Descriptor() ([]byte, []int) {
	return edgelq_ai_proto_v1_chat_model_proto_rawDescGZIP(), []int{0}
}

func (m *ChatModel) Unmarshal(b []byte) error {
	return proto.Unmarshal(b, m)
}

func (m *ChatModel) Marshal() ([]byte, error) {
	return proto.Marshal(m)
}

func (m *ChatModel) MarshalJSON() ([]byte, error) {
	return protojson.MarshalOptions{}.Marshal(m)
}

func (m *ChatModel) UnmarshalJSON(data []byte) error {
	return protojson.Unmarshal(data, m)
}

type isChatModel_ModelType interface {
	isChatModel_ModelType()
}

type ChatModel_AzureOpenAi_ struct {
	AzureOpenAi *ChatModel_AzureOpenAi `protobuf:"bytes,3,opt,name=azure_open_ai,json=azureOpenAi,proto3,oneof"`
}

func (*ChatModel_AzureOpenAi_) isChatModel_ModelType() {}
func (m *ChatModel) GetName() *Name {
	if m != nil {
		return m.Name
	}
	return nil
}

func (m *ChatModel) GetMetadata() *meta.Meta {
	if m != nil {
		return m.Metadata
	}
	return nil
}

func (m *ChatModel) GetModelType() isChatModel_ModelType {
	if m != nil {
		return m.ModelType
	}
	return nil
}
func (m *ChatModel) GetAzureOpenAi() *ChatModel_AzureOpenAi {
	if x, ok := m.GetModelType().(*ChatModel_AzureOpenAi_); ok {
		return x.AzureOpenAi
	}
	return nil
}
func (m *ChatModel) SetName(fv *Name) {
	if m == nil {
		panic(fmt.Errorf("can't set %s on nil %s", "Name", "ChatModel"))
	}
	m.Name = fv
}

func (m *ChatModel) SetMetadata(fv *meta.Meta) {
	if m == nil {
		panic(fmt.Errorf("can't set %s on nil %s", "Metadata", "ChatModel"))
	}
	m.Metadata = fv
}

func (m *ChatModel) SetModelType(ofv isChatModel_ModelType) {
	if m == nil {
		panic(fmt.Errorf("can't set %s on nil %s", "isChatModel_ModelType", "ChatModel"))
	}
	m.ModelType = ofv
}
func (m *ChatModel) SetAzureOpenAi(fv *ChatModel_AzureOpenAi) {
	m.SetModelType(&ChatModel_AzureOpenAi_{AzureOpenAi: fv})
}

type ChatModel_AzureOpenAi struct {
	state                    protoimpl.MessageState
	sizeCache                protoimpl.SizeCache
	unknownFields            protoimpl.UnknownFields
	Endpoint                 string                    `protobuf:"bytes,1,opt,name=endpoint,proto3" json:"endpoint,omitempty"`
	ApiKey                   *secrets_secret.Reference `protobuf:"bytes,2,opt,customtype=Reference,name=api_key,json=apiKey,proto3" json:"api_key,omitempty"`
	ModelName                string                    `protobuf:"bytes,3,opt,name=model_name,json=modelName,proto3" json:"model_name,omitempty"`
	NativeAzureApiCompatible bool                      `protobuf:"varint,4,opt,name=native_azure_api_compatible,json=nativeAzureApiCompatible,proto3" json:"native_azure_api_compatible,omitempty"`
}

func (m *ChatModel_AzureOpenAi) Reset() {
	*m = ChatModel_AzureOpenAi{}
	if protoimpl.UnsafeEnabled {
		mi := &edgelq_ai_proto_v1_chat_model_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(m))
		ms.StoreMessageInfo(mi)
	}
}

func (m *ChatModel_AzureOpenAi) String() string {
	return protoimpl.X.MessageStringOf(m)
}

func (*ChatModel_AzureOpenAi) ProtoMessage() {}

func (m *ChatModel_AzureOpenAi) ProtoReflect() preflect.Message {
	mi := &edgelq_ai_proto_v1_chat_model_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && m != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(m))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(m)
}

func (*ChatModel_AzureOpenAi) GotenMessage() {}

// Deprecated, Use ChatModel_AzureOpenAi.ProtoReflect.Descriptor instead.
func (*ChatModel_AzureOpenAi) Descriptor() ([]byte, []int) {
	return edgelq_ai_proto_v1_chat_model_proto_rawDescGZIP(), []int{0, 0}
}

func (m *ChatModel_AzureOpenAi) Unmarshal(b []byte) error {
	return proto.Unmarshal(b, m)
}

func (m *ChatModel_AzureOpenAi) Marshal() ([]byte, error) {
	return proto.Marshal(m)
}

func (m *ChatModel_AzureOpenAi) MarshalJSON() ([]byte, error) {
	return protojson.MarshalOptions{}.Marshal(m)
}

func (m *ChatModel_AzureOpenAi) UnmarshalJSON(data []byte) error {
	return protojson.Unmarshal(data, m)
}

func (m *ChatModel_AzureOpenAi) GetEndpoint() string {
	if m != nil {
		return m.Endpoint
	}
	return ""
}

func (m *ChatModel_AzureOpenAi) GetApiKey() *secrets_secret.Reference {
	if m != nil {
		return m.ApiKey
	}
	return nil
}

func (m *ChatModel_AzureOpenAi) GetModelName() string {
	if m != nil {
		return m.ModelName
	}
	return ""
}

func (m *ChatModel_AzureOpenAi) GetNativeAzureApiCompatible() bool {
	if m != nil {
		return m.NativeAzureApiCompatible
	}
	return false
}

func (m *ChatModel_AzureOpenAi) SetEndpoint(fv string) {
	if m == nil {
		panic(fmt.Errorf("can't set %s on nil %s", "Endpoint", "ChatModel_AzureOpenAi"))
	}
	m.Endpoint = fv
}

func (m *ChatModel_AzureOpenAi) SetApiKey(fv *secrets_secret.Reference) {
	if m == nil {
		panic(fmt.Errorf("can't set %s on nil %s", "ApiKey", "ChatModel_AzureOpenAi"))
	}
	m.ApiKey = fv
}

func (m *ChatModel_AzureOpenAi) SetModelName(fv string) {
	if m == nil {
		panic(fmt.Errorf("can't set %s on nil %s", "ModelName", "ChatModel_AzureOpenAi"))
	}
	m.ModelName = fv
}

func (m *ChatModel_AzureOpenAi) SetNativeAzureApiCompatible(fv bool) {
	if m == nil {
		panic(fmt.Errorf("can't set %s on nil %s", "NativeAzureApiCompatible", "ChatModel_AzureOpenAi"))
	}
	m.NativeAzureApiCompatible = fv
}

var edgelq_ai_proto_v1_chat_model_proto preflect.FileDescriptor

var edgelq_ai_proto_v1_chat_model_proto_rawDesc = []byte{
	0x0a, 0x23, 0x65, 0x64, 0x67, 0x65, 0x6c, 0x71, 0x2f, 0x61, 0x69, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x68, 0x61, 0x74, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x09, 0x6e, 0x74, 0x74, 0x2e, 0x61, 0x69, 0x2e, 0x76, 0x31,
	0x1a, 0x19, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x72, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x20, 0x67, 0x6f, 0x74,
	0x65, 0x6e, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x76,
	0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1d, 0x67,
	0x6f, 0x74, 0x65, 0x6e, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x2f, 0x67, 0x6f, 0x74, 0x65, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x20, 0x67, 0x6f,
	0x74, 0x65, 0x6e, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f,
	0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1d,
	0x67, 0x6f, 0x74, 0x65, 0x6e, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x2f, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67,
	0x6f, 0x74, 0x65, 0x6e, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x24,
	0x67, 0x6f, 0x74, 0x65, 0x6e, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x2f, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x16, 0x67, 0x6f, 0x74, 0x65, 0x6e, 0x2f, 0x74, 0x79, 0x70, 0x65,
	0x73, 0x2f, 0x6d, 0x65, 0x74, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x8b, 0x04, 0x0a,
	0x09, 0x43, 0x68, 0x61, 0x74, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x12, 0x25, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x11, 0xb2, 0xda, 0x21, 0x0d, 0x0a, 0x0b,
	0x0a, 0x09, 0x43, 0x68, 0x61, 0x74, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x2d, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x67, 0x6f, 0x74, 0x65, 0x6e, 0x2e, 0x74, 0x79, 0x70, 0x65,
	0x73, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0x12, 0x46, 0x0a, 0x0d, 0x61, 0x7a, 0x75, 0x72, 0x65, 0x5f, 0x6f, 0x70, 0x65, 0x6e, 0x5f, 0x61,
	0x69, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x6e, 0x74, 0x74, 0x2e, 0x61, 0x69,
	0x2e, 0x76, 0x31, 0x2e, 0x43, 0x68, 0x61, 0x74, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x41, 0x7a,
	0x75, 0x72, 0x65, 0x4f, 0x70, 0x65, 0x6e, 0x41, 0x69, 0x48, 0x00, 0x52, 0x0b, 0x61, 0x7a, 0x75,
	0x72, 0x65, 0x4f, 0x70, 0x65, 0x6e, 0x41, 0x69, 0x1a, 0xc5, 0x01, 0x0a, 0x0b, 0x41, 0x7a, 0x75,
	0x72, 0x65, 0x4f, 0x70, 0x65, 0x6e, 0x41, 0x69, 0x12, 0x1a, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x70,
	0x6f, 0x69, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x65, 0x6e, 0x64, 0x70,
	0x6f, 0x69, 0x6e, 0x74, 0x12, 0x3c, 0x0a, 0x07, 0x61, 0x70, 0x69, 0x5f, 0x6b, 0x65, 0x79, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x23, 0xb2, 0xda, 0x21, 0x1f, 0x12, 0x1d, 0x0a, 0x19, 0x73,
	0x65, 0x63, 0x72, 0x65, 0x74, 0x73, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x6c, 0x71, 0x2e, 0x63, 0x6f,
	0x6d, 0x2f, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x10, 0x01, 0x52, 0x06, 0x61, 0x70, 0x69, 0x4b,
	0x65, 0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x3d, 0x0a, 0x1b, 0x6e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x61, 0x7a, 0x75, 0x72,
	0x65, 0x5f, 0x61, 0x70, 0x69, 0x5f, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x74, 0x69, 0x62, 0x6c, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x18, 0x6e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x41, 0x7a,
	0x75, 0x72, 0x65, 0x41, 0x70, 0x69, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x74, 0x69, 0x62, 0x6c, 0x65,
	0x3a, 0x8a, 0x01, 0xea, 0x41, 0x45, 0x0a, 0x17, 0x61, 0x69, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x6c,
	0x71, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x43, 0x68, 0x61, 0x74, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x12,
	0x2a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x2f, 0x7b, 0x70, 0x72, 0x6f, 0x6a, 0x65,
	0x63, 0x74, 0x7d, 0x2f, 0x63, 0x68, 0x61, 0x74, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2f, 0x7b,
	0x63, 0x68, 0x61, 0x74, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x7d, 0x92, 0xd9, 0x21, 0x32, 0x0a,
	0x0a, 0x63, 0x68, 0x61, 0x74, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x12, 0x0a, 0x63, 0x68, 0x61,
	0x74, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x1a, 0x16, 0x69, 0x61, 0x6d, 0x2e, 0x65, 0x64, 0x67,
	0x65, 0x6c, 0x71, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x38,
	0x05, 0xda, 0x94, 0x23, 0x08, 0x12, 0x06, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x42, 0x0b, 0x0a,
	0x09, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x42, 0x80, 0x02, 0xe8, 0xde, 0x21,
	0x01, 0xd2, 0xff, 0xd0, 0x02, 0x45, 0x0a, 0x10, 0x63, 0x68, 0x61, 0x74, 0x5f, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x5f, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x12, 0x31, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x77, 0x61, 0x6e, 0x2f, 0x65, 0x64,
	0x67, 0x65, 0x6c, 0x71, 0x2f, 0x61, 0x69, 0x2f, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2f, 0x76, 0x31,
	0x2f, 0x63, 0x68, 0x61, 0x74, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0xa2, 0x80, 0xd1, 0x02, 0x47,
	0x0a, 0x11, 0x63, 0x68, 0x61, 0x74, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x5f, 0x61, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x12, 0x32, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f,
	0x63, 0x6c, 0x6f, 0x75, 0x64, 0x77, 0x61, 0x6e, 0x2f, 0x65, 0x64, 0x67, 0x65, 0x6c, 0x71, 0x2f,
	0x61, 0x69, 0x2f, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x68, 0x61,
	0x74, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x0a, 0x10, 0x63, 0x6f, 0x6d, 0x2e, 0x6e, 0x74, 0x74,
	0x2e, 0x61, 0x69, 0x2e, 0x70, 0x62, 0x2e, 0x76, 0x31, 0x42, 0x0e, 0x43, 0x68, 0x61, 0x74, 0x4d,
	0x6f, 0x64, 0x65, 0x6c, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x40, 0x67, 0x69, 0x74,
	0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x77, 0x61, 0x6e,
	0x2f, 0x65, 0x64, 0x67, 0x65, 0x6c, 0x71, 0x2f, 0x61, 0x69, 0x2f, 0x72, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x73, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x68, 0x61, 0x74, 0x5f, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x3b, 0x63, 0x68, 0x61, 0x74, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	edgelq_ai_proto_v1_chat_model_proto_rawDescOnce sync.Once
	edgelq_ai_proto_v1_chat_model_proto_rawDescData = edgelq_ai_proto_v1_chat_model_proto_rawDesc
)

func edgelq_ai_proto_v1_chat_model_proto_rawDescGZIP() []byte {
	edgelq_ai_proto_v1_chat_model_proto_rawDescOnce.Do(func() {
		edgelq_ai_proto_v1_chat_model_proto_rawDescData = protoimpl.X.CompressGZIP(edgelq_ai_proto_v1_chat_model_proto_rawDescData)
	})
	return edgelq_ai_proto_v1_chat_model_proto_rawDescData
}

var edgelq_ai_proto_v1_chat_model_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var edgelq_ai_proto_v1_chat_model_proto_goTypes = []interface{}{
	(*ChatModel)(nil),             // 0: ntt.ai.v1.ChatModel
	(*ChatModel_AzureOpenAi)(nil), // 1: ntt.ai.v1.ChatModel.AzureOpenAi
	(*meta.Meta)(nil),             // 2: goten.types.Meta
}
var edgelq_ai_proto_v1_chat_model_proto_depIdxs = []int32{
	2, // 0: ntt.ai.v1.ChatModel.metadata:type_name -> goten.types.Meta
	1, // 1: ntt.ai.v1.ChatModel.azure_open_ai:type_name -> ntt.ai.v1.ChatModel.AzureOpenAi
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { edgelq_ai_proto_v1_chat_model_proto_init() }
func edgelq_ai_proto_v1_chat_model_proto_init() {
	if edgelq_ai_proto_v1_chat_model_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {

		edgelq_ai_proto_v1_chat_model_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChatModel); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		edgelq_ai_proto_v1_chat_model_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChatModel_AzureOpenAi); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}

	edgelq_ai_proto_v1_chat_model_proto_msgTypes[0].OneofWrappers = []interface{}{
		(*ChatModel_AzureOpenAi_)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: edgelq_ai_proto_v1_chat_model_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           edgelq_ai_proto_v1_chat_model_proto_goTypes,
		DependencyIndexes: edgelq_ai_proto_v1_chat_model_proto_depIdxs,
		MessageInfos:      edgelq_ai_proto_v1_chat_model_proto_msgTypes,
	}.Build()
	edgelq_ai_proto_v1_chat_model_proto = out.File
	edgelq_ai_proto_v1_chat_model_proto_rawDesc = nil
	edgelq_ai_proto_v1_chat_model_proto_goTypes = nil
	edgelq_ai_proto_v1_chat_model_proto_depIdxs = nil
}
