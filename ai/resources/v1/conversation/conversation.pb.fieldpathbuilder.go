// Code generated by protoc-gen-goten-object
// File: edgelq/ai/proto/v1/conversation.proto
// DO NOT EDIT!!!

package conversation

// proto imports
import (
	common_client "github.com/cloudwan/edgelq-sdk/ai/client/v1/common"
	capability_template "github.com/cloudwan/edgelq-sdk/ai/resources/v1/capability_template"
	chat_model "github.com/cloudwan/edgelq-sdk/ai/resources/v1/chat_model"
	connector "github.com/cloudwan/edgelq-sdk/ai/resources/v1/connector"
	search_db "github.com/cloudwan/edgelq-sdk/ai/resources/v1/search_db"
	search_index "github.com/cloudwan/edgelq-sdk/ai/resources/v1/search_index"
	iam_iam_common "github.com/cloudwan/edgelq-sdk/iam/resources/v1/common"
	iam_organization "github.com/cloudwan/edgelq-sdk/iam/resources/v1/organization"
	iam_project "github.com/cloudwan/edgelq-sdk/iam/resources/v1/project"
	iam_user "github.com/cloudwan/edgelq-sdk/iam/resources/v1/user"
	secrets_project "github.com/cloudwan/edgelq-sdk/secrets/resources/v1/project"
	secrets_secret "github.com/cloudwan/edgelq-sdk/secrets/resources/v1/secret"
	meta_common "github.com/cloudwan/goten-sdk/meta-service/resources/v1/common"
	meta_service "github.com/cloudwan/goten-sdk/meta-service/resources/v1/service"
	meta "github.com/cloudwan/goten-sdk/types/meta"
	multi_region_policy "github.com/cloudwan/goten-sdk/types/multi_region_policy"
	money "google.golang.org/genproto/googleapis/type/money"
	durationpb "google.golang.org/protobuf/types/known/durationpb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
)

// make sure we're using proto imports
var (
	_ = &capability_template.CapabilityTemplate{}
	_ = &chat_model.ChatModel{}
	_ = &common_client.Message{}
	_ = &connector.Connector{}
	_ = &search_db.SearchDb{}
	_ = &search_index.SearchIndex{}
	_ = &iam_iam_common.PCR{}
	_ = &iam_organization.Organization{}
	_ = &iam_project.Project{}
	_ = &iam_user.User{}
	_ = &secrets_project.Project{}
	_ = &secrets_secret.Secret{}
	_ = &durationpb.Duration{}
	_ = &timestamppb.Timestamp{}
	_ = &money.Money{}
	_ = &meta_common.LabelledDomain{}
	_ = &meta_service.Service{}
	_ = &meta.Meta{}
	_ = &multi_region_policy.MultiRegionPolicy{}
)

type ConversationFieldPathBuilder struct{}

func NewConversationFieldPathBuilder() ConversationFieldPathBuilder {
	return ConversationFieldPathBuilder{}
}
func (ConversationFieldPathBuilder) Name() ConversationPathSelectorName {
	return ConversationPathSelectorName{}
}
func (ConversationFieldPathBuilder) Metadata() ConversationPathSelectorMetadata {
	return ConversationPathSelectorMetadata{}
}
func (ConversationFieldPathBuilder) Title() ConversationPathSelectorTitle {
	return ConversationPathSelectorTitle{}
}
func (ConversationFieldPathBuilder) Archived() ConversationPathSelectorArchived {
	return ConversationPathSelectorArchived{}
}
func (ConversationFieldPathBuilder) IsPrivate() ConversationPathSelectorIsPrivate {
	return ConversationPathSelectorIsPrivate{}
}
func (ConversationFieldPathBuilder) LastActivityTime() ConversationPathSelectorLastActivityTime {
	return ConversationPathSelectorLastActivityTime{}
}
func (ConversationFieldPathBuilder) Turns() ConversationPathSelectorTurns {
	return ConversationPathSelectorTurns{}
}
func (ConversationFieldPathBuilder) UsageByModel() ConversationPathSelectorUsageByModel {
	return ConversationPathSelectorUsageByModel{}
}
func (ConversationFieldPathBuilder) FailedTurns() ConversationPathSelectorFailedTurns {
	return ConversationPathSelectorFailedTurns{}
}

type ConversationPathSelectorName struct{}

func (ConversationPathSelectorName) FieldPath() *Conversation_FieldTerminalPath {
	return &Conversation_FieldTerminalPath{selector: Conversation_FieldPathSelectorName}
}

func (s ConversationPathSelectorName) WithValue(value *Name) *Conversation_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*Conversation_FieldTerminalPathValue)
}

func (s ConversationPathSelectorName) WithArrayOfValues(values []*Name) *Conversation_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*Conversation_FieldTerminalPathArrayOfValues)
}

type ConversationPathSelectorMetadata struct{}

func (ConversationPathSelectorMetadata) FieldPath() *Conversation_FieldTerminalPath {
	return &Conversation_FieldTerminalPath{selector: Conversation_FieldPathSelectorMetadata}
}

func (s ConversationPathSelectorMetadata) WithValue(value *meta.Meta) *Conversation_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*Conversation_FieldTerminalPathValue)
}

func (s ConversationPathSelectorMetadata) WithArrayOfValues(values []*meta.Meta) *Conversation_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*Conversation_FieldTerminalPathArrayOfValues)
}

func (ConversationPathSelectorMetadata) WithSubPath(subPath meta.Meta_FieldPath) *Conversation_FieldSubPath {
	return &Conversation_FieldSubPath{selector: Conversation_FieldPathSelectorMetadata, subPath: subPath}
}

func (s ConversationPathSelectorMetadata) WithSubValue(subPathValue meta.Meta_FieldPathValue) *Conversation_FieldSubPathValue {
	return &Conversation_FieldSubPathValue{Conversation_FieldPath: s.WithSubPath(subPathValue), subPathValue: subPathValue}
}

func (s ConversationPathSelectorMetadata) WithSubArrayOfValues(subPathArrayOfValues meta.Meta_FieldPathArrayOfValues) *Conversation_FieldSubPathArrayOfValues {
	return &Conversation_FieldSubPathArrayOfValues{Conversation_FieldPath: s.WithSubPath(subPathArrayOfValues), subPathArrayOfValues: subPathArrayOfValues}
}

func (s ConversationPathSelectorMetadata) WithSubArrayItemValue(subPathArrayItemValue meta.Meta_FieldPathArrayItemValue) *Conversation_FieldSubPathArrayItemValue {
	return &Conversation_FieldSubPathArrayItemValue{Conversation_FieldPath: s.WithSubPath(subPathArrayItemValue), subPathItemValue: subPathArrayItemValue}
}

func (ConversationPathSelectorMetadata) CreateTime() ConversationPathSelectorMetadataCreateTime {
	return ConversationPathSelectorMetadataCreateTime{}
}

func (ConversationPathSelectorMetadata) UpdateTime() ConversationPathSelectorMetadataUpdateTime {
	return ConversationPathSelectorMetadataUpdateTime{}
}

func (ConversationPathSelectorMetadata) DeleteTime() ConversationPathSelectorMetadataDeleteTime {
	return ConversationPathSelectorMetadataDeleteTime{}
}

func (ConversationPathSelectorMetadata) Uuid() ConversationPathSelectorMetadataUuid {
	return ConversationPathSelectorMetadataUuid{}
}

func (ConversationPathSelectorMetadata) Tags() ConversationPathSelectorMetadataTags {
	return ConversationPathSelectorMetadataTags{}
}

func (ConversationPathSelectorMetadata) Labels() ConversationPathSelectorMetadataLabels {
	return ConversationPathSelectorMetadataLabels{}
}

func (ConversationPathSelectorMetadata) Annotations() ConversationPathSelectorMetadataAnnotations {
	return ConversationPathSelectorMetadataAnnotations{}
}

func (ConversationPathSelectorMetadata) Generation() ConversationPathSelectorMetadataGeneration {
	return ConversationPathSelectorMetadataGeneration{}
}

func (ConversationPathSelectorMetadata) ResourceVersion() ConversationPathSelectorMetadataResourceVersion {
	return ConversationPathSelectorMetadataResourceVersion{}
}

func (ConversationPathSelectorMetadata) OwnerReferences() ConversationPathSelectorMetadataOwnerReferences {
	return ConversationPathSelectorMetadataOwnerReferences{}
}

func (ConversationPathSelectorMetadata) Shards() ConversationPathSelectorMetadataShards {
	return ConversationPathSelectorMetadataShards{}
}

func (ConversationPathSelectorMetadata) Syncing() ConversationPathSelectorMetadataSyncing {
	return ConversationPathSelectorMetadataSyncing{}
}

func (ConversationPathSelectorMetadata) Lifecycle() ConversationPathSelectorMetadataLifecycle {
	return ConversationPathSelectorMetadataLifecycle{}
}

func (ConversationPathSelectorMetadata) Services() ConversationPathSelectorMetadataServices {
	return ConversationPathSelectorMetadataServices{}
}

type ConversationPathSelectorMetadataCreateTime struct{}

func (ConversationPathSelectorMetadataCreateTime) FieldPath() *Conversation_FieldSubPath {
	return &Conversation_FieldSubPath{
		selector: Conversation_FieldPathSelectorMetadata,
		subPath:  meta.NewMetaFieldPathBuilder().CreateTime().FieldPath(),
	}
}

func (s ConversationPathSelectorMetadataCreateTime) WithValue(value *timestamppb.Timestamp) *Conversation_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*Conversation_FieldSubPathValue)
}

func (s ConversationPathSelectorMetadataCreateTime) WithArrayOfValues(values []*timestamppb.Timestamp) *Conversation_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*Conversation_FieldSubPathArrayOfValues)
}

type ConversationPathSelectorMetadataUpdateTime struct{}

func (ConversationPathSelectorMetadataUpdateTime) FieldPath() *Conversation_FieldSubPath {
	return &Conversation_FieldSubPath{
		selector: Conversation_FieldPathSelectorMetadata,
		subPath:  meta.NewMetaFieldPathBuilder().UpdateTime().FieldPath(),
	}
}

func (s ConversationPathSelectorMetadataUpdateTime) WithValue(value *timestamppb.Timestamp) *Conversation_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*Conversation_FieldSubPathValue)
}

func (s ConversationPathSelectorMetadataUpdateTime) WithArrayOfValues(values []*timestamppb.Timestamp) *Conversation_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*Conversation_FieldSubPathArrayOfValues)
}

type ConversationPathSelectorMetadataDeleteTime struct{}

func (ConversationPathSelectorMetadataDeleteTime) FieldPath() *Conversation_FieldSubPath {
	return &Conversation_FieldSubPath{
		selector: Conversation_FieldPathSelectorMetadata,
		subPath:  meta.NewMetaFieldPathBuilder().DeleteTime().FieldPath(),
	}
}

func (s ConversationPathSelectorMetadataDeleteTime) WithValue(value *timestamppb.Timestamp) *Conversation_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*Conversation_FieldSubPathValue)
}

func (s ConversationPathSelectorMetadataDeleteTime) WithArrayOfValues(values []*timestamppb.Timestamp) *Conversation_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*Conversation_FieldSubPathArrayOfValues)
}

type ConversationPathSelectorMetadataUuid struct{}

func (ConversationPathSelectorMetadataUuid) FieldPath() *Conversation_FieldSubPath {
	return &Conversation_FieldSubPath{
		selector: Conversation_FieldPathSelectorMetadata,
		subPath:  meta.NewMetaFieldPathBuilder().Uuid().FieldPath(),
	}
}

func (s ConversationPathSelectorMetadataUuid) WithValue(value string) *Conversation_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*Conversation_FieldSubPathValue)
}

func (s ConversationPathSelectorMetadataUuid) WithArrayOfValues(values []string) *Conversation_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*Conversation_FieldSubPathArrayOfValues)
}

type ConversationPathSelectorMetadataTags struct{}

func (ConversationPathSelectorMetadataTags) FieldPath() *Conversation_FieldSubPath {
	return &Conversation_FieldSubPath{
		selector: Conversation_FieldPathSelectorMetadata,
		subPath:  meta.NewMetaFieldPathBuilder().Tags().FieldPath(),
	}
}

func (s ConversationPathSelectorMetadataTags) WithValue(value []string) *Conversation_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*Conversation_FieldSubPathValue)
}

func (s ConversationPathSelectorMetadataTags) WithArrayOfValues(values [][]string) *Conversation_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*Conversation_FieldSubPathArrayOfValues)
}

func (s ConversationPathSelectorMetadataTags) WithItemValue(value string) *Conversation_FieldSubPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*Conversation_FieldSubPathArrayItemValue)
}

type ConversationPathSelectorMetadataLabels struct{}

func (ConversationPathSelectorMetadataLabels) FieldPath() *Conversation_FieldSubPath {
	return &Conversation_FieldSubPath{
		selector: Conversation_FieldPathSelectorMetadata,
		subPath:  meta.NewMetaFieldPathBuilder().Labels().FieldPath(),
	}
}

func (s ConversationPathSelectorMetadataLabels) WithValue(value map[string]string) *Conversation_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*Conversation_FieldSubPathValue)
}

func (s ConversationPathSelectorMetadataLabels) WithArrayOfValues(values []map[string]string) *Conversation_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*Conversation_FieldSubPathArrayOfValues)
}

func (ConversationPathSelectorMetadataLabels) WithKey(key string) ConversationMapPathSelectorMetadataLabels {
	return ConversationMapPathSelectorMetadataLabels{key: key}
}

type ConversationMapPathSelectorMetadataLabels struct {
	key string
}

func (s ConversationMapPathSelectorMetadataLabels) FieldPath() *Conversation_FieldSubPath {
	return &Conversation_FieldSubPath{
		selector: Conversation_FieldPathSelectorMetadata,
		subPath:  meta.NewMetaFieldPathBuilder().Labels().WithKey(s.key).FieldPath(),
	}
}

func (s ConversationMapPathSelectorMetadataLabels) WithValue(value string) *Conversation_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*Conversation_FieldSubPathValue)
}

func (s ConversationMapPathSelectorMetadataLabels) WithArrayOfValues(values []string) *Conversation_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*Conversation_FieldSubPathArrayOfValues)
}

type ConversationPathSelectorMetadataAnnotations struct{}

func (ConversationPathSelectorMetadataAnnotations) FieldPath() *Conversation_FieldSubPath {
	return &Conversation_FieldSubPath{
		selector: Conversation_FieldPathSelectorMetadata,
		subPath:  meta.NewMetaFieldPathBuilder().Annotations().FieldPath(),
	}
}

func (s ConversationPathSelectorMetadataAnnotations) WithValue(value map[string]string) *Conversation_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*Conversation_FieldSubPathValue)
}

func (s ConversationPathSelectorMetadataAnnotations) WithArrayOfValues(values []map[string]string) *Conversation_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*Conversation_FieldSubPathArrayOfValues)
}

func (ConversationPathSelectorMetadataAnnotations) WithKey(key string) ConversationMapPathSelectorMetadataAnnotations {
	return ConversationMapPathSelectorMetadataAnnotations{key: key}
}

type ConversationMapPathSelectorMetadataAnnotations struct {
	key string
}

func (s ConversationMapPathSelectorMetadataAnnotations) FieldPath() *Conversation_FieldSubPath {
	return &Conversation_FieldSubPath{
		selector: Conversation_FieldPathSelectorMetadata,
		subPath:  meta.NewMetaFieldPathBuilder().Annotations().WithKey(s.key).FieldPath(),
	}
}

func (s ConversationMapPathSelectorMetadataAnnotations) WithValue(value string) *Conversation_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*Conversation_FieldSubPathValue)
}

func (s ConversationMapPathSelectorMetadataAnnotations) WithArrayOfValues(values []string) *Conversation_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*Conversation_FieldSubPathArrayOfValues)
}

type ConversationPathSelectorMetadataGeneration struct{}

func (ConversationPathSelectorMetadataGeneration) FieldPath() *Conversation_FieldSubPath {
	return &Conversation_FieldSubPath{
		selector: Conversation_FieldPathSelectorMetadata,
		subPath:  meta.NewMetaFieldPathBuilder().Generation().FieldPath(),
	}
}

func (s ConversationPathSelectorMetadataGeneration) WithValue(value int64) *Conversation_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*Conversation_FieldSubPathValue)
}

func (s ConversationPathSelectorMetadataGeneration) WithArrayOfValues(values []int64) *Conversation_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*Conversation_FieldSubPathArrayOfValues)
}

type ConversationPathSelectorMetadataResourceVersion struct{}

func (ConversationPathSelectorMetadataResourceVersion) FieldPath() *Conversation_FieldSubPath {
	return &Conversation_FieldSubPath{
		selector: Conversation_FieldPathSelectorMetadata,
		subPath:  meta.NewMetaFieldPathBuilder().ResourceVersion().FieldPath(),
	}
}

func (s ConversationPathSelectorMetadataResourceVersion) WithValue(value string) *Conversation_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*Conversation_FieldSubPathValue)
}

func (s ConversationPathSelectorMetadataResourceVersion) WithArrayOfValues(values []string) *Conversation_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*Conversation_FieldSubPathArrayOfValues)
}

type ConversationPathSelectorMetadataOwnerReferences struct{}

func (ConversationPathSelectorMetadataOwnerReferences) FieldPath() *Conversation_FieldSubPath {
	return &Conversation_FieldSubPath{
		selector: Conversation_FieldPathSelectorMetadata,
		subPath:  meta.NewMetaFieldPathBuilder().OwnerReferences().FieldPath(),
	}
}

func (s ConversationPathSelectorMetadataOwnerReferences) WithValue(value []*meta.OwnerReference) *Conversation_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*Conversation_FieldSubPathValue)
}

func (s ConversationPathSelectorMetadataOwnerReferences) WithArrayOfValues(values [][]*meta.OwnerReference) *Conversation_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*Conversation_FieldSubPathArrayOfValues)
}

func (s ConversationPathSelectorMetadataOwnerReferences) WithItemValue(value *meta.OwnerReference) *Conversation_FieldSubPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*Conversation_FieldSubPathArrayItemValue)
}

func (ConversationPathSelectorMetadataOwnerReferences) Kind() ConversationPathSelectorMetadataOwnerReferencesKind {
	return ConversationPathSelectorMetadataOwnerReferencesKind{}
}

func (ConversationPathSelectorMetadataOwnerReferences) Version() ConversationPathSelectorMetadataOwnerReferencesVersion {
	return ConversationPathSelectorMetadataOwnerReferencesVersion{}
}

func (ConversationPathSelectorMetadataOwnerReferences) Name() ConversationPathSelectorMetadataOwnerReferencesName {
	return ConversationPathSelectorMetadataOwnerReferencesName{}
}

func (ConversationPathSelectorMetadataOwnerReferences) Region() ConversationPathSelectorMetadataOwnerReferencesRegion {
	return ConversationPathSelectorMetadataOwnerReferencesRegion{}
}

func (ConversationPathSelectorMetadataOwnerReferences) Controller() ConversationPathSelectorMetadataOwnerReferencesController {
	return ConversationPathSelectorMetadataOwnerReferencesController{}
}

func (ConversationPathSelectorMetadataOwnerReferences) RequiresOwnerReference() ConversationPathSelectorMetadataOwnerReferencesRequiresOwnerReference {
	return ConversationPathSelectorMetadataOwnerReferencesRequiresOwnerReference{}
}

func (ConversationPathSelectorMetadataOwnerReferences) UnsetOnDelete() ConversationPathSelectorMetadataOwnerReferencesUnsetOnDelete {
	return ConversationPathSelectorMetadataOwnerReferencesUnsetOnDelete{}
}

type ConversationPathSelectorMetadataOwnerReferencesKind struct{}

func (ConversationPathSelectorMetadataOwnerReferencesKind) FieldPath() *Conversation_FieldSubPath {
	return &Conversation_FieldSubPath{
		selector: Conversation_FieldPathSelectorMetadata,
		subPath:  meta.NewMetaFieldPathBuilder().OwnerReferences().Kind().FieldPath(),
	}
}

func (s ConversationPathSelectorMetadataOwnerReferencesKind) WithValue(value string) *Conversation_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*Conversation_FieldSubPathValue)
}

func (s ConversationPathSelectorMetadataOwnerReferencesKind) WithArrayOfValues(values []string) *Conversation_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*Conversation_FieldSubPathArrayOfValues)
}

type ConversationPathSelectorMetadataOwnerReferencesVersion struct{}

func (ConversationPathSelectorMetadataOwnerReferencesVersion) FieldPath() *Conversation_FieldSubPath {
	return &Conversation_FieldSubPath{
		selector: Conversation_FieldPathSelectorMetadata,
		subPath:  meta.NewMetaFieldPathBuilder().OwnerReferences().Version().FieldPath(),
	}
}

func (s ConversationPathSelectorMetadataOwnerReferencesVersion) WithValue(value string) *Conversation_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*Conversation_FieldSubPathValue)
}

func (s ConversationPathSelectorMetadataOwnerReferencesVersion) WithArrayOfValues(values []string) *Conversation_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*Conversation_FieldSubPathArrayOfValues)
}

type ConversationPathSelectorMetadataOwnerReferencesName struct{}

func (ConversationPathSelectorMetadataOwnerReferencesName) FieldPath() *Conversation_FieldSubPath {
	return &Conversation_FieldSubPath{
		selector: Conversation_FieldPathSelectorMetadata,
		subPath:  meta.NewMetaFieldPathBuilder().OwnerReferences().Name().FieldPath(),
	}
}

func (s ConversationPathSelectorMetadataOwnerReferencesName) WithValue(value string) *Conversation_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*Conversation_FieldSubPathValue)
}

func (s ConversationPathSelectorMetadataOwnerReferencesName) WithArrayOfValues(values []string) *Conversation_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*Conversation_FieldSubPathArrayOfValues)
}

type ConversationPathSelectorMetadataOwnerReferencesRegion struct{}

func (ConversationPathSelectorMetadataOwnerReferencesRegion) FieldPath() *Conversation_FieldSubPath {
	return &Conversation_FieldSubPath{
		selector: Conversation_FieldPathSelectorMetadata,
		subPath:  meta.NewMetaFieldPathBuilder().OwnerReferences().Region().FieldPath(),
	}
}

func (s ConversationPathSelectorMetadataOwnerReferencesRegion) WithValue(value string) *Conversation_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*Conversation_FieldSubPathValue)
}

func (s ConversationPathSelectorMetadataOwnerReferencesRegion) WithArrayOfValues(values []string) *Conversation_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*Conversation_FieldSubPathArrayOfValues)
}

type ConversationPathSelectorMetadataOwnerReferencesController struct{}

func (ConversationPathSelectorMetadataOwnerReferencesController) FieldPath() *Conversation_FieldSubPath {
	return &Conversation_FieldSubPath{
		selector: Conversation_FieldPathSelectorMetadata,
		subPath:  meta.NewMetaFieldPathBuilder().OwnerReferences().Controller().FieldPath(),
	}
}

func (s ConversationPathSelectorMetadataOwnerReferencesController) WithValue(value bool) *Conversation_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*Conversation_FieldSubPathValue)
}

func (s ConversationPathSelectorMetadataOwnerReferencesController) WithArrayOfValues(values []bool) *Conversation_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*Conversation_FieldSubPathArrayOfValues)
}

type ConversationPathSelectorMetadataOwnerReferencesRequiresOwnerReference struct{}

func (ConversationPathSelectorMetadataOwnerReferencesRequiresOwnerReference) FieldPath() *Conversation_FieldSubPath {
	return &Conversation_FieldSubPath{
		selector: Conversation_FieldPathSelectorMetadata,
		subPath:  meta.NewMetaFieldPathBuilder().OwnerReferences().RequiresOwnerReference().FieldPath(),
	}
}

func (s ConversationPathSelectorMetadataOwnerReferencesRequiresOwnerReference) WithValue(value bool) *Conversation_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*Conversation_FieldSubPathValue)
}

func (s ConversationPathSelectorMetadataOwnerReferencesRequiresOwnerReference) WithArrayOfValues(values []bool) *Conversation_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*Conversation_FieldSubPathArrayOfValues)
}

type ConversationPathSelectorMetadataOwnerReferencesUnsetOnDelete struct{}

func (ConversationPathSelectorMetadataOwnerReferencesUnsetOnDelete) FieldPath() *Conversation_FieldSubPath {
	return &Conversation_FieldSubPath{
		selector: Conversation_FieldPathSelectorMetadata,
		subPath:  meta.NewMetaFieldPathBuilder().OwnerReferences().UnsetOnDelete().FieldPath(),
	}
}

func (s ConversationPathSelectorMetadataOwnerReferencesUnsetOnDelete) WithValue(value bool) *Conversation_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*Conversation_FieldSubPathValue)
}

func (s ConversationPathSelectorMetadataOwnerReferencesUnsetOnDelete) WithArrayOfValues(values []bool) *Conversation_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*Conversation_FieldSubPathArrayOfValues)
}

type ConversationPathSelectorMetadataShards struct{}

func (ConversationPathSelectorMetadataShards) FieldPath() *Conversation_FieldSubPath {
	return &Conversation_FieldSubPath{
		selector: Conversation_FieldPathSelectorMetadata,
		subPath:  meta.NewMetaFieldPathBuilder().Shards().FieldPath(),
	}
}

func (s ConversationPathSelectorMetadataShards) WithValue(value map[string]int64) *Conversation_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*Conversation_FieldSubPathValue)
}

func (s ConversationPathSelectorMetadataShards) WithArrayOfValues(values []map[string]int64) *Conversation_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*Conversation_FieldSubPathArrayOfValues)
}

func (ConversationPathSelectorMetadataShards) WithKey(key string) ConversationMapPathSelectorMetadataShards {
	return ConversationMapPathSelectorMetadataShards{key: key}
}

type ConversationMapPathSelectorMetadataShards struct {
	key string
}

func (s ConversationMapPathSelectorMetadataShards) FieldPath() *Conversation_FieldSubPath {
	return &Conversation_FieldSubPath{
		selector: Conversation_FieldPathSelectorMetadata,
		subPath:  meta.NewMetaFieldPathBuilder().Shards().WithKey(s.key).FieldPath(),
	}
}

func (s ConversationMapPathSelectorMetadataShards) WithValue(value int64) *Conversation_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*Conversation_FieldSubPathValue)
}

func (s ConversationMapPathSelectorMetadataShards) WithArrayOfValues(values []int64) *Conversation_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*Conversation_FieldSubPathArrayOfValues)
}

type ConversationPathSelectorMetadataSyncing struct{}

func (ConversationPathSelectorMetadataSyncing) FieldPath() *Conversation_FieldSubPath {
	return &Conversation_FieldSubPath{
		selector: Conversation_FieldPathSelectorMetadata,
		subPath:  meta.NewMetaFieldPathBuilder().Syncing().FieldPath(),
	}
}

func (s ConversationPathSelectorMetadataSyncing) WithValue(value *meta.SyncingMeta) *Conversation_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*Conversation_FieldSubPathValue)
}

func (s ConversationPathSelectorMetadataSyncing) WithArrayOfValues(values []*meta.SyncingMeta) *Conversation_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*Conversation_FieldSubPathArrayOfValues)
}

func (ConversationPathSelectorMetadataSyncing) OwningRegion() ConversationPathSelectorMetadataSyncingOwningRegion {
	return ConversationPathSelectorMetadataSyncingOwningRegion{}
}

func (ConversationPathSelectorMetadataSyncing) Regions() ConversationPathSelectorMetadataSyncingRegions {
	return ConversationPathSelectorMetadataSyncingRegions{}
}

type ConversationPathSelectorMetadataSyncingOwningRegion struct{}

func (ConversationPathSelectorMetadataSyncingOwningRegion) FieldPath() *Conversation_FieldSubPath {
	return &Conversation_FieldSubPath{
		selector: Conversation_FieldPathSelectorMetadata,
		subPath:  meta.NewMetaFieldPathBuilder().Syncing().OwningRegion().FieldPath(),
	}
}

func (s ConversationPathSelectorMetadataSyncingOwningRegion) WithValue(value string) *Conversation_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*Conversation_FieldSubPathValue)
}

func (s ConversationPathSelectorMetadataSyncingOwningRegion) WithArrayOfValues(values []string) *Conversation_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*Conversation_FieldSubPathArrayOfValues)
}

type ConversationPathSelectorMetadataSyncingRegions struct{}

func (ConversationPathSelectorMetadataSyncingRegions) FieldPath() *Conversation_FieldSubPath {
	return &Conversation_FieldSubPath{
		selector: Conversation_FieldPathSelectorMetadata,
		subPath:  meta.NewMetaFieldPathBuilder().Syncing().Regions().FieldPath(),
	}
}

func (s ConversationPathSelectorMetadataSyncingRegions) WithValue(value []string) *Conversation_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*Conversation_FieldSubPathValue)
}

func (s ConversationPathSelectorMetadataSyncingRegions) WithArrayOfValues(values [][]string) *Conversation_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*Conversation_FieldSubPathArrayOfValues)
}

func (s ConversationPathSelectorMetadataSyncingRegions) WithItemValue(value string) *Conversation_FieldSubPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*Conversation_FieldSubPathArrayItemValue)
}

type ConversationPathSelectorMetadataLifecycle struct{}

func (ConversationPathSelectorMetadataLifecycle) FieldPath() *Conversation_FieldSubPath {
	return &Conversation_FieldSubPath{
		selector: Conversation_FieldPathSelectorMetadata,
		subPath:  meta.NewMetaFieldPathBuilder().Lifecycle().FieldPath(),
	}
}

func (s ConversationPathSelectorMetadataLifecycle) WithValue(value *meta.Lifecycle) *Conversation_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*Conversation_FieldSubPathValue)
}

func (s ConversationPathSelectorMetadataLifecycle) WithArrayOfValues(values []*meta.Lifecycle) *Conversation_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*Conversation_FieldSubPathArrayOfValues)
}

func (ConversationPathSelectorMetadataLifecycle) State() ConversationPathSelectorMetadataLifecycleState {
	return ConversationPathSelectorMetadataLifecycleState{}
}

func (ConversationPathSelectorMetadataLifecycle) BlockDeletion() ConversationPathSelectorMetadataLifecycleBlockDeletion {
	return ConversationPathSelectorMetadataLifecycleBlockDeletion{}
}

type ConversationPathSelectorMetadataLifecycleState struct{}

func (ConversationPathSelectorMetadataLifecycleState) FieldPath() *Conversation_FieldSubPath {
	return &Conversation_FieldSubPath{
		selector: Conversation_FieldPathSelectorMetadata,
		subPath:  meta.NewMetaFieldPathBuilder().Lifecycle().State().FieldPath(),
	}
}

func (s ConversationPathSelectorMetadataLifecycleState) WithValue(value meta.Lifecycle_State) *Conversation_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*Conversation_FieldSubPathValue)
}

func (s ConversationPathSelectorMetadataLifecycleState) WithArrayOfValues(values []meta.Lifecycle_State) *Conversation_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*Conversation_FieldSubPathArrayOfValues)
}

type ConversationPathSelectorMetadataLifecycleBlockDeletion struct{}

func (ConversationPathSelectorMetadataLifecycleBlockDeletion) FieldPath() *Conversation_FieldSubPath {
	return &Conversation_FieldSubPath{
		selector: Conversation_FieldPathSelectorMetadata,
		subPath:  meta.NewMetaFieldPathBuilder().Lifecycle().BlockDeletion().FieldPath(),
	}
}

func (s ConversationPathSelectorMetadataLifecycleBlockDeletion) WithValue(value bool) *Conversation_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*Conversation_FieldSubPathValue)
}

func (s ConversationPathSelectorMetadataLifecycleBlockDeletion) WithArrayOfValues(values []bool) *Conversation_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*Conversation_FieldSubPathArrayOfValues)
}

type ConversationPathSelectorMetadataServices struct{}

func (ConversationPathSelectorMetadataServices) FieldPath() *Conversation_FieldSubPath {
	return &Conversation_FieldSubPath{
		selector: Conversation_FieldPathSelectorMetadata,
		subPath:  meta.NewMetaFieldPathBuilder().Services().FieldPath(),
	}
}

func (s ConversationPathSelectorMetadataServices) WithValue(value *meta.ServicesInfo) *Conversation_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*Conversation_FieldSubPathValue)
}

func (s ConversationPathSelectorMetadataServices) WithArrayOfValues(values []*meta.ServicesInfo) *Conversation_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*Conversation_FieldSubPathArrayOfValues)
}

func (ConversationPathSelectorMetadataServices) OwningService() ConversationPathSelectorMetadataServicesOwningService {
	return ConversationPathSelectorMetadataServicesOwningService{}
}

func (ConversationPathSelectorMetadataServices) AllowedServices() ConversationPathSelectorMetadataServicesAllowedServices {
	return ConversationPathSelectorMetadataServicesAllowedServices{}
}

type ConversationPathSelectorMetadataServicesOwningService struct{}

func (ConversationPathSelectorMetadataServicesOwningService) FieldPath() *Conversation_FieldSubPath {
	return &Conversation_FieldSubPath{
		selector: Conversation_FieldPathSelectorMetadata,
		subPath:  meta.NewMetaFieldPathBuilder().Services().OwningService().FieldPath(),
	}
}

func (s ConversationPathSelectorMetadataServicesOwningService) WithValue(value string) *Conversation_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*Conversation_FieldSubPathValue)
}

func (s ConversationPathSelectorMetadataServicesOwningService) WithArrayOfValues(values []string) *Conversation_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*Conversation_FieldSubPathArrayOfValues)
}

type ConversationPathSelectorMetadataServicesAllowedServices struct{}

func (ConversationPathSelectorMetadataServicesAllowedServices) FieldPath() *Conversation_FieldSubPath {
	return &Conversation_FieldSubPath{
		selector: Conversation_FieldPathSelectorMetadata,
		subPath:  meta.NewMetaFieldPathBuilder().Services().AllowedServices().FieldPath(),
	}
}

func (s ConversationPathSelectorMetadataServicesAllowedServices) WithValue(value []string) *Conversation_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*Conversation_FieldSubPathValue)
}

func (s ConversationPathSelectorMetadataServicesAllowedServices) WithArrayOfValues(values [][]string) *Conversation_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*Conversation_FieldSubPathArrayOfValues)
}

func (s ConversationPathSelectorMetadataServicesAllowedServices) WithItemValue(value string) *Conversation_FieldSubPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*Conversation_FieldSubPathArrayItemValue)
}

type ConversationPathSelectorTitle struct{}

func (ConversationPathSelectorTitle) FieldPath() *Conversation_FieldTerminalPath {
	return &Conversation_FieldTerminalPath{selector: Conversation_FieldPathSelectorTitle}
}

func (s ConversationPathSelectorTitle) WithValue(value string) *Conversation_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*Conversation_FieldTerminalPathValue)
}

func (s ConversationPathSelectorTitle) WithArrayOfValues(values []string) *Conversation_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*Conversation_FieldTerminalPathArrayOfValues)
}

type ConversationPathSelectorArchived struct{}

func (ConversationPathSelectorArchived) FieldPath() *Conversation_FieldTerminalPath {
	return &Conversation_FieldTerminalPath{selector: Conversation_FieldPathSelectorArchived}
}

func (s ConversationPathSelectorArchived) WithValue(value bool) *Conversation_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*Conversation_FieldTerminalPathValue)
}

func (s ConversationPathSelectorArchived) WithArrayOfValues(values []bool) *Conversation_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*Conversation_FieldTerminalPathArrayOfValues)
}

type ConversationPathSelectorIsPrivate struct{}

func (ConversationPathSelectorIsPrivate) FieldPath() *Conversation_FieldTerminalPath {
	return &Conversation_FieldTerminalPath{selector: Conversation_FieldPathSelectorIsPrivate}
}

func (s ConversationPathSelectorIsPrivate) WithValue(value bool) *Conversation_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*Conversation_FieldTerminalPathValue)
}

func (s ConversationPathSelectorIsPrivate) WithArrayOfValues(values []bool) *Conversation_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*Conversation_FieldTerminalPathArrayOfValues)
}

type ConversationPathSelectorLastActivityTime struct{}

func (ConversationPathSelectorLastActivityTime) FieldPath() *Conversation_FieldTerminalPath {
	return &Conversation_FieldTerminalPath{selector: Conversation_FieldPathSelectorLastActivityTime}
}

func (s ConversationPathSelectorLastActivityTime) WithValue(value *timestamppb.Timestamp) *Conversation_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*Conversation_FieldTerminalPathValue)
}

func (s ConversationPathSelectorLastActivityTime) WithArrayOfValues(values []*timestamppb.Timestamp) *Conversation_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*Conversation_FieldTerminalPathArrayOfValues)
}

type ConversationPathSelectorTurns struct{}

func (ConversationPathSelectorTurns) FieldPath() *Conversation_FieldTerminalPath {
	return &Conversation_FieldTerminalPath{selector: Conversation_FieldPathSelectorTurns}
}

func (s ConversationPathSelectorTurns) WithValue(value []*ConversationTurn) *Conversation_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*Conversation_FieldTerminalPathValue)
}

func (s ConversationPathSelectorTurns) WithArrayOfValues(values [][]*ConversationTurn) *Conversation_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*Conversation_FieldTerminalPathArrayOfValues)
}

func (s ConversationPathSelectorTurns) WithItemValue(value *ConversationTurn) *Conversation_FieldTerminalPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*Conversation_FieldTerminalPathArrayItemValue)
}
func (ConversationPathSelectorTurns) WithSubPath(subPath ConversationTurn_FieldPath) *Conversation_FieldSubPath {
	return &Conversation_FieldSubPath{selector: Conversation_FieldPathSelectorTurns, subPath: subPath}
}

func (s ConversationPathSelectorTurns) WithSubValue(subPathValue ConversationTurn_FieldPathValue) *Conversation_FieldSubPathValue {
	return &Conversation_FieldSubPathValue{Conversation_FieldPath: s.WithSubPath(subPathValue), subPathValue: subPathValue}
}

func (s ConversationPathSelectorTurns) WithSubArrayOfValues(subPathArrayOfValues ConversationTurn_FieldPathArrayOfValues) *Conversation_FieldSubPathArrayOfValues {
	return &Conversation_FieldSubPathArrayOfValues{Conversation_FieldPath: s.WithSubPath(subPathArrayOfValues), subPathArrayOfValues: subPathArrayOfValues}
}

func (s ConversationPathSelectorTurns) WithSubArrayItemValue(subPathArrayItemValue ConversationTurn_FieldPathArrayItemValue) *Conversation_FieldSubPathArrayItemValue {
	return &Conversation_FieldSubPathArrayItemValue{Conversation_FieldPath: s.WithSubPath(subPathArrayItemValue), subPathItemValue: subPathArrayItemValue}
}

func (ConversationPathSelectorTurns) TurnNumber() ConversationPathSelectorTurnsTurnNumber {
	return ConversationPathSelectorTurnsTurnNumber{}
}

func (ConversationPathSelectorTurns) Timestamp() ConversationPathSelectorTurnsTimestamp {
	return ConversationPathSelectorTurnsTimestamp{}
}

func (ConversationPathSelectorTurns) Messages() ConversationPathSelectorTurnsMessages {
	return ConversationPathSelectorTurnsMessages{}
}

func (ConversationPathSelectorTurns) Config() ConversationPathSelectorTurnsConfig {
	return ConversationPathSelectorTurnsConfig{}
}

func (ConversationPathSelectorTurns) Usage() ConversationPathSelectorTurnsUsage {
	return ConversationPathSelectorTurnsUsage{}
}

func (ConversationPathSelectorTurns) StopReason() ConversationPathSelectorTurnsStopReason {
	return ConversationPathSelectorTurnsStopReason{}
}

func (ConversationPathSelectorTurns) Duration() ConversationPathSelectorTurnsDuration {
	return ConversationPathSelectorTurnsDuration{}
}

func (ConversationPathSelectorTurns) AvailableTools() ConversationPathSelectorTurnsAvailableTools {
	return ConversationPathSelectorTurnsAvailableTools{}
}

type ConversationPathSelectorTurnsTurnNumber struct{}

func (ConversationPathSelectorTurnsTurnNumber) FieldPath() *Conversation_FieldSubPath {
	return &Conversation_FieldSubPath{
		selector: Conversation_FieldPathSelectorTurns,
		subPath:  NewConversationTurnFieldPathBuilder().TurnNumber().FieldPath(),
	}
}

func (s ConversationPathSelectorTurnsTurnNumber) WithValue(value int32) *Conversation_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*Conversation_FieldSubPathValue)
}

func (s ConversationPathSelectorTurnsTurnNumber) WithArrayOfValues(values []int32) *Conversation_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*Conversation_FieldSubPathArrayOfValues)
}

type ConversationPathSelectorTurnsTimestamp struct{}

func (ConversationPathSelectorTurnsTimestamp) FieldPath() *Conversation_FieldSubPath {
	return &Conversation_FieldSubPath{
		selector: Conversation_FieldPathSelectorTurns,
		subPath:  NewConversationTurnFieldPathBuilder().Timestamp().FieldPath(),
	}
}

func (s ConversationPathSelectorTurnsTimestamp) WithValue(value *timestamppb.Timestamp) *Conversation_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*Conversation_FieldSubPathValue)
}

func (s ConversationPathSelectorTurnsTimestamp) WithArrayOfValues(values []*timestamppb.Timestamp) *Conversation_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*Conversation_FieldSubPathArrayOfValues)
}

type ConversationPathSelectorTurnsMessages struct{}

func (ConversationPathSelectorTurnsMessages) FieldPath() *Conversation_FieldSubPath {
	return &Conversation_FieldSubPath{
		selector: Conversation_FieldPathSelectorTurns,
		subPath:  NewConversationTurnFieldPathBuilder().Messages().FieldPath(),
	}
}

func (s ConversationPathSelectorTurnsMessages) WithValue(value []*common_client.Message) *Conversation_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*Conversation_FieldSubPathValue)
}

func (s ConversationPathSelectorTurnsMessages) WithArrayOfValues(values [][]*common_client.Message) *Conversation_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*Conversation_FieldSubPathArrayOfValues)
}

func (s ConversationPathSelectorTurnsMessages) WithItemValue(value *common_client.Message) *Conversation_FieldSubPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*Conversation_FieldSubPathArrayItemValue)
}

type ConversationPathSelectorTurnsConfig struct{}

func (ConversationPathSelectorTurnsConfig) FieldPath() *Conversation_FieldSubPath {
	return &Conversation_FieldSubPath{
		selector: Conversation_FieldPathSelectorTurns,
		subPath:  NewConversationTurnFieldPathBuilder().Config().FieldPath(),
	}
}

func (s ConversationPathSelectorTurnsConfig) WithValue(value *TurnConfig) *Conversation_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*Conversation_FieldSubPathValue)
}

func (s ConversationPathSelectorTurnsConfig) WithArrayOfValues(values []*TurnConfig) *Conversation_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*Conversation_FieldSubPathArrayOfValues)
}

func (ConversationPathSelectorTurnsConfig) Model() ConversationPathSelectorTurnsConfigModel {
	return ConversationPathSelectorTurnsConfigModel{}
}

func (ConversationPathSelectorTurnsConfig) ModelUsed() ConversationPathSelectorTurnsConfigModelUsed {
	return ConversationPathSelectorTurnsConfigModelUsed{}
}

func (ConversationPathSelectorTurnsConfig) Temperature() ConversationPathSelectorTurnsConfigTemperature {
	return ConversationPathSelectorTurnsConfigTemperature{}
}

func (ConversationPathSelectorTurnsConfig) MaxTokens() ConversationPathSelectorTurnsConfigMaxTokens {
	return ConversationPathSelectorTurnsConfigMaxTokens{}
}

func (ConversationPathSelectorTurnsConfig) ReasoningLevel() ConversationPathSelectorTurnsConfigReasoningLevel {
	return ConversationPathSelectorTurnsConfigReasoningLevel{}
}

func (ConversationPathSelectorTurnsConfig) CapabilityTemplate() ConversationPathSelectorTurnsConfigCapabilityTemplate {
	return ConversationPathSelectorTurnsConfigCapabilityTemplate{}
}

func (ConversationPathSelectorTurnsConfig) Connectors() ConversationPathSelectorTurnsConfigConnectors {
	return ConversationPathSelectorTurnsConfigConnectors{}
}

type ConversationPathSelectorTurnsConfigModel struct{}

func (ConversationPathSelectorTurnsConfigModel) FieldPath() *Conversation_FieldSubPath {
	return &Conversation_FieldSubPath{
		selector: Conversation_FieldPathSelectorTurns,
		subPath:  NewConversationTurnFieldPathBuilder().Config().Model().FieldPath(),
	}
}

func (s ConversationPathSelectorTurnsConfigModel) WithValue(value *chat_model.Name) *Conversation_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*Conversation_FieldSubPathValue)
}

func (s ConversationPathSelectorTurnsConfigModel) WithArrayOfValues(values []*chat_model.Name) *Conversation_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*Conversation_FieldSubPathArrayOfValues)
}

type ConversationPathSelectorTurnsConfigModelUsed struct{}

func (ConversationPathSelectorTurnsConfigModelUsed) FieldPath() *Conversation_FieldSubPath {
	return &Conversation_FieldSubPath{
		selector: Conversation_FieldPathSelectorTurns,
		subPath:  NewConversationTurnFieldPathBuilder().Config().ModelUsed().FieldPath(),
	}
}

func (s ConversationPathSelectorTurnsConfigModelUsed) WithValue(value string) *Conversation_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*Conversation_FieldSubPathValue)
}

func (s ConversationPathSelectorTurnsConfigModelUsed) WithArrayOfValues(values []string) *Conversation_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*Conversation_FieldSubPathArrayOfValues)
}

type ConversationPathSelectorTurnsConfigTemperature struct{}

func (ConversationPathSelectorTurnsConfigTemperature) FieldPath() *Conversation_FieldSubPath {
	return &Conversation_FieldSubPath{
		selector: Conversation_FieldPathSelectorTurns,
		subPath:  NewConversationTurnFieldPathBuilder().Config().Temperature().FieldPath(),
	}
}

func (s ConversationPathSelectorTurnsConfigTemperature) WithValue(value float32) *Conversation_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*Conversation_FieldSubPathValue)
}

func (s ConversationPathSelectorTurnsConfigTemperature) WithArrayOfValues(values []float32) *Conversation_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*Conversation_FieldSubPathArrayOfValues)
}

type ConversationPathSelectorTurnsConfigMaxTokens struct{}

func (ConversationPathSelectorTurnsConfigMaxTokens) FieldPath() *Conversation_FieldSubPath {
	return &Conversation_FieldSubPath{
		selector: Conversation_FieldPathSelectorTurns,
		subPath:  NewConversationTurnFieldPathBuilder().Config().MaxTokens().FieldPath(),
	}
}

func (s ConversationPathSelectorTurnsConfigMaxTokens) WithValue(value int32) *Conversation_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*Conversation_FieldSubPathValue)
}

func (s ConversationPathSelectorTurnsConfigMaxTokens) WithArrayOfValues(values []int32) *Conversation_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*Conversation_FieldSubPathArrayOfValues)
}

type ConversationPathSelectorTurnsConfigReasoningLevel struct{}

func (ConversationPathSelectorTurnsConfigReasoningLevel) FieldPath() *Conversation_FieldSubPath {
	return &Conversation_FieldSubPath{
		selector: Conversation_FieldPathSelectorTurns,
		subPath:  NewConversationTurnFieldPathBuilder().Config().ReasoningLevel().FieldPath(),
	}
}

func (s ConversationPathSelectorTurnsConfigReasoningLevel) WithValue(value common_client.ReasoningLevel) *Conversation_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*Conversation_FieldSubPathValue)
}

func (s ConversationPathSelectorTurnsConfigReasoningLevel) WithArrayOfValues(values []common_client.ReasoningLevel) *Conversation_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*Conversation_FieldSubPathArrayOfValues)
}

type ConversationPathSelectorTurnsConfigCapabilityTemplate struct{}

func (ConversationPathSelectorTurnsConfigCapabilityTemplate) FieldPath() *Conversation_FieldSubPath {
	return &Conversation_FieldSubPath{
		selector: Conversation_FieldPathSelectorTurns,
		subPath:  NewConversationTurnFieldPathBuilder().Config().CapabilityTemplate().FieldPath(),
	}
}

func (s ConversationPathSelectorTurnsConfigCapabilityTemplate) WithValue(value *capability_template.Name) *Conversation_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*Conversation_FieldSubPathValue)
}

func (s ConversationPathSelectorTurnsConfigCapabilityTemplate) WithArrayOfValues(values []*capability_template.Name) *Conversation_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*Conversation_FieldSubPathArrayOfValues)
}

type ConversationPathSelectorTurnsConfigConnectors struct{}

func (ConversationPathSelectorTurnsConfigConnectors) FieldPath() *Conversation_FieldSubPath {
	return &Conversation_FieldSubPath{
		selector: Conversation_FieldPathSelectorTurns,
		subPath:  NewConversationTurnFieldPathBuilder().Config().Connectors().FieldPath(),
	}
}

func (s ConversationPathSelectorTurnsConfigConnectors) WithValue(value *common_client.ConnectorsList) *Conversation_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*Conversation_FieldSubPathValue)
}

func (s ConversationPathSelectorTurnsConfigConnectors) WithArrayOfValues(values []*common_client.ConnectorsList) *Conversation_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*Conversation_FieldSubPathArrayOfValues)
}

type ConversationPathSelectorTurnsUsage struct{}

func (ConversationPathSelectorTurnsUsage) FieldPath() *Conversation_FieldSubPath {
	return &Conversation_FieldSubPath{
		selector: Conversation_FieldPathSelectorTurns,
		subPath:  NewConversationTurnFieldPathBuilder().Usage().FieldPath(),
	}
}

func (s ConversationPathSelectorTurnsUsage) WithValue(value *common_client.TokenUsage) *Conversation_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*Conversation_FieldSubPathValue)
}

func (s ConversationPathSelectorTurnsUsage) WithArrayOfValues(values []*common_client.TokenUsage) *Conversation_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*Conversation_FieldSubPathArrayOfValues)
}

type ConversationPathSelectorTurnsStopReason struct{}

func (ConversationPathSelectorTurnsStopReason) FieldPath() *Conversation_FieldSubPath {
	return &Conversation_FieldSubPath{
		selector: Conversation_FieldPathSelectorTurns,
		subPath:  NewConversationTurnFieldPathBuilder().StopReason().FieldPath(),
	}
}

func (s ConversationPathSelectorTurnsStopReason) WithValue(value common_client.StopReason) *Conversation_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*Conversation_FieldSubPathValue)
}

func (s ConversationPathSelectorTurnsStopReason) WithArrayOfValues(values []common_client.StopReason) *Conversation_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*Conversation_FieldSubPathArrayOfValues)
}

type ConversationPathSelectorTurnsDuration struct{}

func (ConversationPathSelectorTurnsDuration) FieldPath() *Conversation_FieldSubPath {
	return &Conversation_FieldSubPath{
		selector: Conversation_FieldPathSelectorTurns,
		subPath:  NewConversationTurnFieldPathBuilder().Duration().FieldPath(),
	}
}

func (s ConversationPathSelectorTurnsDuration) WithValue(value *durationpb.Duration) *Conversation_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*Conversation_FieldSubPathValue)
}

func (s ConversationPathSelectorTurnsDuration) WithArrayOfValues(values []*durationpb.Duration) *Conversation_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*Conversation_FieldSubPathArrayOfValues)
}

type ConversationPathSelectorTurnsAvailableTools struct{}

func (ConversationPathSelectorTurnsAvailableTools) FieldPath() *Conversation_FieldSubPath {
	return &Conversation_FieldSubPath{
		selector: Conversation_FieldPathSelectorTurns,
		subPath:  NewConversationTurnFieldPathBuilder().AvailableTools().FieldPath(),
	}
}

func (s ConversationPathSelectorTurnsAvailableTools) WithValue(value []string) *Conversation_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*Conversation_FieldSubPathValue)
}

func (s ConversationPathSelectorTurnsAvailableTools) WithArrayOfValues(values [][]string) *Conversation_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*Conversation_FieldSubPathArrayOfValues)
}

func (s ConversationPathSelectorTurnsAvailableTools) WithItemValue(value string) *Conversation_FieldSubPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*Conversation_FieldSubPathArrayItemValue)
}

type ConversationPathSelectorUsageByModel struct{}

func (ConversationPathSelectorUsageByModel) FieldPath() *Conversation_FieldTerminalPath {
	return &Conversation_FieldTerminalPath{selector: Conversation_FieldPathSelectorUsageByModel}
}

func (s ConversationPathSelectorUsageByModel) WithValue(value map[string]*ModelUsageStats) *Conversation_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*Conversation_FieldTerminalPathValue)
}

func (s ConversationPathSelectorUsageByModel) WithArrayOfValues(values []map[string]*ModelUsageStats) *Conversation_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*Conversation_FieldTerminalPathArrayOfValues)
}

func (ConversationPathSelectorUsageByModel) WithKey(key string) ConversationMapPathSelectorUsageByModel {
	return ConversationMapPathSelectorUsageByModel{key: key}
}

type ConversationMapPathSelectorUsageByModel struct {
	key string
}

func (s ConversationMapPathSelectorUsageByModel) FieldPath() *Conversation_FieldPathMap {
	return &Conversation_FieldPathMap{selector: Conversation_FieldPathSelectorUsageByModel, key: s.key}
}

func (s ConversationMapPathSelectorUsageByModel) WithValue(value *ModelUsageStats) *Conversation_FieldPathMapValue {
	return s.FieldPath().WithIValue(value).(*Conversation_FieldPathMapValue)
}

func (s ConversationMapPathSelectorUsageByModel) WithArrayOfValues(values []*ModelUsageStats) *Conversation_FieldPathMapArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*Conversation_FieldPathMapArrayOfValues)
}

type ConversationPathSelectorFailedTurns struct{}

func (ConversationPathSelectorFailedTurns) FieldPath() *Conversation_FieldTerminalPath {
	return &Conversation_FieldTerminalPath{selector: Conversation_FieldPathSelectorFailedTurns}
}

func (s ConversationPathSelectorFailedTurns) WithValue(value []*ConversationTurn) *Conversation_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*Conversation_FieldTerminalPathValue)
}

func (s ConversationPathSelectorFailedTurns) WithArrayOfValues(values [][]*ConversationTurn) *Conversation_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*Conversation_FieldTerminalPathArrayOfValues)
}

func (s ConversationPathSelectorFailedTurns) WithItemValue(value *ConversationTurn) *Conversation_FieldTerminalPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*Conversation_FieldTerminalPathArrayItemValue)
}
func (ConversationPathSelectorFailedTurns) WithSubPath(subPath ConversationTurn_FieldPath) *Conversation_FieldSubPath {
	return &Conversation_FieldSubPath{selector: Conversation_FieldPathSelectorFailedTurns, subPath: subPath}
}

func (s ConversationPathSelectorFailedTurns) WithSubValue(subPathValue ConversationTurn_FieldPathValue) *Conversation_FieldSubPathValue {
	return &Conversation_FieldSubPathValue{Conversation_FieldPath: s.WithSubPath(subPathValue), subPathValue: subPathValue}
}

func (s ConversationPathSelectorFailedTurns) WithSubArrayOfValues(subPathArrayOfValues ConversationTurn_FieldPathArrayOfValues) *Conversation_FieldSubPathArrayOfValues {
	return &Conversation_FieldSubPathArrayOfValues{Conversation_FieldPath: s.WithSubPath(subPathArrayOfValues), subPathArrayOfValues: subPathArrayOfValues}
}

func (s ConversationPathSelectorFailedTurns) WithSubArrayItemValue(subPathArrayItemValue ConversationTurn_FieldPathArrayItemValue) *Conversation_FieldSubPathArrayItemValue {
	return &Conversation_FieldSubPathArrayItemValue{Conversation_FieldPath: s.WithSubPath(subPathArrayItemValue), subPathItemValue: subPathArrayItemValue}
}

func (ConversationPathSelectorFailedTurns) TurnNumber() ConversationPathSelectorFailedTurnsTurnNumber {
	return ConversationPathSelectorFailedTurnsTurnNumber{}
}

func (ConversationPathSelectorFailedTurns) Timestamp() ConversationPathSelectorFailedTurnsTimestamp {
	return ConversationPathSelectorFailedTurnsTimestamp{}
}

func (ConversationPathSelectorFailedTurns) Messages() ConversationPathSelectorFailedTurnsMessages {
	return ConversationPathSelectorFailedTurnsMessages{}
}

func (ConversationPathSelectorFailedTurns) Config() ConversationPathSelectorFailedTurnsConfig {
	return ConversationPathSelectorFailedTurnsConfig{}
}

func (ConversationPathSelectorFailedTurns) Usage() ConversationPathSelectorFailedTurnsUsage {
	return ConversationPathSelectorFailedTurnsUsage{}
}

func (ConversationPathSelectorFailedTurns) StopReason() ConversationPathSelectorFailedTurnsStopReason {
	return ConversationPathSelectorFailedTurnsStopReason{}
}

func (ConversationPathSelectorFailedTurns) Duration() ConversationPathSelectorFailedTurnsDuration {
	return ConversationPathSelectorFailedTurnsDuration{}
}

func (ConversationPathSelectorFailedTurns) AvailableTools() ConversationPathSelectorFailedTurnsAvailableTools {
	return ConversationPathSelectorFailedTurnsAvailableTools{}
}

type ConversationPathSelectorFailedTurnsTurnNumber struct{}

func (ConversationPathSelectorFailedTurnsTurnNumber) FieldPath() *Conversation_FieldSubPath {
	return &Conversation_FieldSubPath{
		selector: Conversation_FieldPathSelectorFailedTurns,
		subPath:  NewConversationTurnFieldPathBuilder().TurnNumber().FieldPath(),
	}
}

func (s ConversationPathSelectorFailedTurnsTurnNumber) WithValue(value int32) *Conversation_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*Conversation_FieldSubPathValue)
}

func (s ConversationPathSelectorFailedTurnsTurnNumber) WithArrayOfValues(values []int32) *Conversation_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*Conversation_FieldSubPathArrayOfValues)
}

type ConversationPathSelectorFailedTurnsTimestamp struct{}

func (ConversationPathSelectorFailedTurnsTimestamp) FieldPath() *Conversation_FieldSubPath {
	return &Conversation_FieldSubPath{
		selector: Conversation_FieldPathSelectorFailedTurns,
		subPath:  NewConversationTurnFieldPathBuilder().Timestamp().FieldPath(),
	}
}

func (s ConversationPathSelectorFailedTurnsTimestamp) WithValue(value *timestamppb.Timestamp) *Conversation_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*Conversation_FieldSubPathValue)
}

func (s ConversationPathSelectorFailedTurnsTimestamp) WithArrayOfValues(values []*timestamppb.Timestamp) *Conversation_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*Conversation_FieldSubPathArrayOfValues)
}

type ConversationPathSelectorFailedTurnsMessages struct{}

func (ConversationPathSelectorFailedTurnsMessages) FieldPath() *Conversation_FieldSubPath {
	return &Conversation_FieldSubPath{
		selector: Conversation_FieldPathSelectorFailedTurns,
		subPath:  NewConversationTurnFieldPathBuilder().Messages().FieldPath(),
	}
}

func (s ConversationPathSelectorFailedTurnsMessages) WithValue(value []*common_client.Message) *Conversation_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*Conversation_FieldSubPathValue)
}

func (s ConversationPathSelectorFailedTurnsMessages) WithArrayOfValues(values [][]*common_client.Message) *Conversation_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*Conversation_FieldSubPathArrayOfValues)
}

func (s ConversationPathSelectorFailedTurnsMessages) WithItemValue(value *common_client.Message) *Conversation_FieldSubPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*Conversation_FieldSubPathArrayItemValue)
}

type ConversationPathSelectorFailedTurnsConfig struct{}

func (ConversationPathSelectorFailedTurnsConfig) FieldPath() *Conversation_FieldSubPath {
	return &Conversation_FieldSubPath{
		selector: Conversation_FieldPathSelectorFailedTurns,
		subPath:  NewConversationTurnFieldPathBuilder().Config().FieldPath(),
	}
}

func (s ConversationPathSelectorFailedTurnsConfig) WithValue(value *TurnConfig) *Conversation_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*Conversation_FieldSubPathValue)
}

func (s ConversationPathSelectorFailedTurnsConfig) WithArrayOfValues(values []*TurnConfig) *Conversation_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*Conversation_FieldSubPathArrayOfValues)
}

func (ConversationPathSelectorFailedTurnsConfig) Model() ConversationPathSelectorFailedTurnsConfigModel {
	return ConversationPathSelectorFailedTurnsConfigModel{}
}

func (ConversationPathSelectorFailedTurnsConfig) ModelUsed() ConversationPathSelectorFailedTurnsConfigModelUsed {
	return ConversationPathSelectorFailedTurnsConfigModelUsed{}
}

func (ConversationPathSelectorFailedTurnsConfig) Temperature() ConversationPathSelectorFailedTurnsConfigTemperature {
	return ConversationPathSelectorFailedTurnsConfigTemperature{}
}

func (ConversationPathSelectorFailedTurnsConfig) MaxTokens() ConversationPathSelectorFailedTurnsConfigMaxTokens {
	return ConversationPathSelectorFailedTurnsConfigMaxTokens{}
}

func (ConversationPathSelectorFailedTurnsConfig) ReasoningLevel() ConversationPathSelectorFailedTurnsConfigReasoningLevel {
	return ConversationPathSelectorFailedTurnsConfigReasoningLevel{}
}

func (ConversationPathSelectorFailedTurnsConfig) CapabilityTemplate() ConversationPathSelectorFailedTurnsConfigCapabilityTemplate {
	return ConversationPathSelectorFailedTurnsConfigCapabilityTemplate{}
}

func (ConversationPathSelectorFailedTurnsConfig) Connectors() ConversationPathSelectorFailedTurnsConfigConnectors {
	return ConversationPathSelectorFailedTurnsConfigConnectors{}
}

type ConversationPathSelectorFailedTurnsConfigModel struct{}

func (ConversationPathSelectorFailedTurnsConfigModel) FieldPath() *Conversation_FieldSubPath {
	return &Conversation_FieldSubPath{
		selector: Conversation_FieldPathSelectorFailedTurns,
		subPath:  NewConversationTurnFieldPathBuilder().Config().Model().FieldPath(),
	}
}

func (s ConversationPathSelectorFailedTurnsConfigModel) WithValue(value *chat_model.Name) *Conversation_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*Conversation_FieldSubPathValue)
}

func (s ConversationPathSelectorFailedTurnsConfigModel) WithArrayOfValues(values []*chat_model.Name) *Conversation_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*Conversation_FieldSubPathArrayOfValues)
}

type ConversationPathSelectorFailedTurnsConfigModelUsed struct{}

func (ConversationPathSelectorFailedTurnsConfigModelUsed) FieldPath() *Conversation_FieldSubPath {
	return &Conversation_FieldSubPath{
		selector: Conversation_FieldPathSelectorFailedTurns,
		subPath:  NewConversationTurnFieldPathBuilder().Config().ModelUsed().FieldPath(),
	}
}

func (s ConversationPathSelectorFailedTurnsConfigModelUsed) WithValue(value string) *Conversation_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*Conversation_FieldSubPathValue)
}

func (s ConversationPathSelectorFailedTurnsConfigModelUsed) WithArrayOfValues(values []string) *Conversation_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*Conversation_FieldSubPathArrayOfValues)
}

type ConversationPathSelectorFailedTurnsConfigTemperature struct{}

func (ConversationPathSelectorFailedTurnsConfigTemperature) FieldPath() *Conversation_FieldSubPath {
	return &Conversation_FieldSubPath{
		selector: Conversation_FieldPathSelectorFailedTurns,
		subPath:  NewConversationTurnFieldPathBuilder().Config().Temperature().FieldPath(),
	}
}

func (s ConversationPathSelectorFailedTurnsConfigTemperature) WithValue(value float32) *Conversation_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*Conversation_FieldSubPathValue)
}

func (s ConversationPathSelectorFailedTurnsConfigTemperature) WithArrayOfValues(values []float32) *Conversation_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*Conversation_FieldSubPathArrayOfValues)
}

type ConversationPathSelectorFailedTurnsConfigMaxTokens struct{}

func (ConversationPathSelectorFailedTurnsConfigMaxTokens) FieldPath() *Conversation_FieldSubPath {
	return &Conversation_FieldSubPath{
		selector: Conversation_FieldPathSelectorFailedTurns,
		subPath:  NewConversationTurnFieldPathBuilder().Config().MaxTokens().FieldPath(),
	}
}

func (s ConversationPathSelectorFailedTurnsConfigMaxTokens) WithValue(value int32) *Conversation_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*Conversation_FieldSubPathValue)
}

func (s ConversationPathSelectorFailedTurnsConfigMaxTokens) WithArrayOfValues(values []int32) *Conversation_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*Conversation_FieldSubPathArrayOfValues)
}

type ConversationPathSelectorFailedTurnsConfigReasoningLevel struct{}

func (ConversationPathSelectorFailedTurnsConfigReasoningLevel) FieldPath() *Conversation_FieldSubPath {
	return &Conversation_FieldSubPath{
		selector: Conversation_FieldPathSelectorFailedTurns,
		subPath:  NewConversationTurnFieldPathBuilder().Config().ReasoningLevel().FieldPath(),
	}
}

func (s ConversationPathSelectorFailedTurnsConfigReasoningLevel) WithValue(value common_client.ReasoningLevel) *Conversation_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*Conversation_FieldSubPathValue)
}

func (s ConversationPathSelectorFailedTurnsConfigReasoningLevel) WithArrayOfValues(values []common_client.ReasoningLevel) *Conversation_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*Conversation_FieldSubPathArrayOfValues)
}

type ConversationPathSelectorFailedTurnsConfigCapabilityTemplate struct{}

func (ConversationPathSelectorFailedTurnsConfigCapabilityTemplate) FieldPath() *Conversation_FieldSubPath {
	return &Conversation_FieldSubPath{
		selector: Conversation_FieldPathSelectorFailedTurns,
		subPath:  NewConversationTurnFieldPathBuilder().Config().CapabilityTemplate().FieldPath(),
	}
}

func (s ConversationPathSelectorFailedTurnsConfigCapabilityTemplate) WithValue(value *capability_template.Name) *Conversation_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*Conversation_FieldSubPathValue)
}

func (s ConversationPathSelectorFailedTurnsConfigCapabilityTemplate) WithArrayOfValues(values []*capability_template.Name) *Conversation_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*Conversation_FieldSubPathArrayOfValues)
}

type ConversationPathSelectorFailedTurnsConfigConnectors struct{}

func (ConversationPathSelectorFailedTurnsConfigConnectors) FieldPath() *Conversation_FieldSubPath {
	return &Conversation_FieldSubPath{
		selector: Conversation_FieldPathSelectorFailedTurns,
		subPath:  NewConversationTurnFieldPathBuilder().Config().Connectors().FieldPath(),
	}
}

func (s ConversationPathSelectorFailedTurnsConfigConnectors) WithValue(value *common_client.ConnectorsList) *Conversation_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*Conversation_FieldSubPathValue)
}

func (s ConversationPathSelectorFailedTurnsConfigConnectors) WithArrayOfValues(values []*common_client.ConnectorsList) *Conversation_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*Conversation_FieldSubPathArrayOfValues)
}

type ConversationPathSelectorFailedTurnsUsage struct{}

func (ConversationPathSelectorFailedTurnsUsage) FieldPath() *Conversation_FieldSubPath {
	return &Conversation_FieldSubPath{
		selector: Conversation_FieldPathSelectorFailedTurns,
		subPath:  NewConversationTurnFieldPathBuilder().Usage().FieldPath(),
	}
}

func (s ConversationPathSelectorFailedTurnsUsage) WithValue(value *common_client.TokenUsage) *Conversation_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*Conversation_FieldSubPathValue)
}

func (s ConversationPathSelectorFailedTurnsUsage) WithArrayOfValues(values []*common_client.TokenUsage) *Conversation_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*Conversation_FieldSubPathArrayOfValues)
}

type ConversationPathSelectorFailedTurnsStopReason struct{}

func (ConversationPathSelectorFailedTurnsStopReason) FieldPath() *Conversation_FieldSubPath {
	return &Conversation_FieldSubPath{
		selector: Conversation_FieldPathSelectorFailedTurns,
		subPath:  NewConversationTurnFieldPathBuilder().StopReason().FieldPath(),
	}
}

func (s ConversationPathSelectorFailedTurnsStopReason) WithValue(value common_client.StopReason) *Conversation_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*Conversation_FieldSubPathValue)
}

func (s ConversationPathSelectorFailedTurnsStopReason) WithArrayOfValues(values []common_client.StopReason) *Conversation_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*Conversation_FieldSubPathArrayOfValues)
}

type ConversationPathSelectorFailedTurnsDuration struct{}

func (ConversationPathSelectorFailedTurnsDuration) FieldPath() *Conversation_FieldSubPath {
	return &Conversation_FieldSubPath{
		selector: Conversation_FieldPathSelectorFailedTurns,
		subPath:  NewConversationTurnFieldPathBuilder().Duration().FieldPath(),
	}
}

func (s ConversationPathSelectorFailedTurnsDuration) WithValue(value *durationpb.Duration) *Conversation_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*Conversation_FieldSubPathValue)
}

func (s ConversationPathSelectorFailedTurnsDuration) WithArrayOfValues(values []*durationpb.Duration) *Conversation_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*Conversation_FieldSubPathArrayOfValues)
}

type ConversationPathSelectorFailedTurnsAvailableTools struct{}

func (ConversationPathSelectorFailedTurnsAvailableTools) FieldPath() *Conversation_FieldSubPath {
	return &Conversation_FieldSubPath{
		selector: Conversation_FieldPathSelectorFailedTurns,
		subPath:  NewConversationTurnFieldPathBuilder().AvailableTools().FieldPath(),
	}
}

func (s ConversationPathSelectorFailedTurnsAvailableTools) WithValue(value []string) *Conversation_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*Conversation_FieldSubPathValue)
}

func (s ConversationPathSelectorFailedTurnsAvailableTools) WithArrayOfValues(values [][]string) *Conversation_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*Conversation_FieldSubPathArrayOfValues)
}

func (s ConversationPathSelectorFailedTurnsAvailableTools) WithItemValue(value string) *Conversation_FieldSubPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*Conversation_FieldSubPathArrayItemValue)
}

type ConversationTurnFieldPathBuilder struct{}

func NewConversationTurnFieldPathBuilder() ConversationTurnFieldPathBuilder {
	return ConversationTurnFieldPathBuilder{}
}
func (ConversationTurnFieldPathBuilder) TurnNumber() ConversationTurnPathSelectorTurnNumber {
	return ConversationTurnPathSelectorTurnNumber{}
}
func (ConversationTurnFieldPathBuilder) Timestamp() ConversationTurnPathSelectorTimestamp {
	return ConversationTurnPathSelectorTimestamp{}
}
func (ConversationTurnFieldPathBuilder) Messages() ConversationTurnPathSelectorMessages {
	return ConversationTurnPathSelectorMessages{}
}
func (ConversationTurnFieldPathBuilder) Config() ConversationTurnPathSelectorConfig {
	return ConversationTurnPathSelectorConfig{}
}
func (ConversationTurnFieldPathBuilder) Usage() ConversationTurnPathSelectorUsage {
	return ConversationTurnPathSelectorUsage{}
}
func (ConversationTurnFieldPathBuilder) StopReason() ConversationTurnPathSelectorStopReason {
	return ConversationTurnPathSelectorStopReason{}
}
func (ConversationTurnFieldPathBuilder) Duration() ConversationTurnPathSelectorDuration {
	return ConversationTurnPathSelectorDuration{}
}
func (ConversationTurnFieldPathBuilder) AvailableTools() ConversationTurnPathSelectorAvailableTools {
	return ConversationTurnPathSelectorAvailableTools{}
}

type ConversationTurnPathSelectorTurnNumber struct{}

func (ConversationTurnPathSelectorTurnNumber) FieldPath() *ConversationTurn_FieldTerminalPath {
	return &ConversationTurn_FieldTerminalPath{selector: ConversationTurn_FieldPathSelectorTurnNumber}
}

func (s ConversationTurnPathSelectorTurnNumber) WithValue(value int32) *ConversationTurn_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*ConversationTurn_FieldTerminalPathValue)
}

func (s ConversationTurnPathSelectorTurnNumber) WithArrayOfValues(values []int32) *ConversationTurn_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ConversationTurn_FieldTerminalPathArrayOfValues)
}

type ConversationTurnPathSelectorTimestamp struct{}

func (ConversationTurnPathSelectorTimestamp) FieldPath() *ConversationTurn_FieldTerminalPath {
	return &ConversationTurn_FieldTerminalPath{selector: ConversationTurn_FieldPathSelectorTimestamp}
}

func (s ConversationTurnPathSelectorTimestamp) WithValue(value *timestamppb.Timestamp) *ConversationTurn_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*ConversationTurn_FieldTerminalPathValue)
}

func (s ConversationTurnPathSelectorTimestamp) WithArrayOfValues(values []*timestamppb.Timestamp) *ConversationTurn_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ConversationTurn_FieldTerminalPathArrayOfValues)
}

type ConversationTurnPathSelectorMessages struct{}

func (ConversationTurnPathSelectorMessages) FieldPath() *ConversationTurn_FieldTerminalPath {
	return &ConversationTurn_FieldTerminalPath{selector: ConversationTurn_FieldPathSelectorMessages}
}

func (s ConversationTurnPathSelectorMessages) WithValue(value []*common_client.Message) *ConversationTurn_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*ConversationTurn_FieldTerminalPathValue)
}

func (s ConversationTurnPathSelectorMessages) WithArrayOfValues(values [][]*common_client.Message) *ConversationTurn_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ConversationTurn_FieldTerminalPathArrayOfValues)
}

func (s ConversationTurnPathSelectorMessages) WithItemValue(value *common_client.Message) *ConversationTurn_FieldTerminalPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*ConversationTurn_FieldTerminalPathArrayItemValue)
}

type ConversationTurnPathSelectorConfig struct{}

func (ConversationTurnPathSelectorConfig) FieldPath() *ConversationTurn_FieldTerminalPath {
	return &ConversationTurn_FieldTerminalPath{selector: ConversationTurn_FieldPathSelectorConfig}
}

func (s ConversationTurnPathSelectorConfig) WithValue(value *TurnConfig) *ConversationTurn_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*ConversationTurn_FieldTerminalPathValue)
}

func (s ConversationTurnPathSelectorConfig) WithArrayOfValues(values []*TurnConfig) *ConversationTurn_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ConversationTurn_FieldTerminalPathArrayOfValues)
}

func (ConversationTurnPathSelectorConfig) WithSubPath(subPath TurnConfig_FieldPath) *ConversationTurn_FieldSubPath {
	return &ConversationTurn_FieldSubPath{selector: ConversationTurn_FieldPathSelectorConfig, subPath: subPath}
}

func (s ConversationTurnPathSelectorConfig) WithSubValue(subPathValue TurnConfig_FieldPathValue) *ConversationTurn_FieldSubPathValue {
	return &ConversationTurn_FieldSubPathValue{ConversationTurn_FieldPath: s.WithSubPath(subPathValue), subPathValue: subPathValue}
}

func (s ConversationTurnPathSelectorConfig) WithSubArrayOfValues(subPathArrayOfValues TurnConfig_FieldPathArrayOfValues) *ConversationTurn_FieldSubPathArrayOfValues {
	return &ConversationTurn_FieldSubPathArrayOfValues{ConversationTurn_FieldPath: s.WithSubPath(subPathArrayOfValues), subPathArrayOfValues: subPathArrayOfValues}
}

func (s ConversationTurnPathSelectorConfig) WithSubArrayItemValue(subPathArrayItemValue TurnConfig_FieldPathArrayItemValue) *ConversationTurn_FieldSubPathArrayItemValue {
	return &ConversationTurn_FieldSubPathArrayItemValue{ConversationTurn_FieldPath: s.WithSubPath(subPathArrayItemValue), subPathItemValue: subPathArrayItemValue}
}

func (ConversationTurnPathSelectorConfig) Model() ConversationTurnPathSelectorConfigModel {
	return ConversationTurnPathSelectorConfigModel{}
}

func (ConversationTurnPathSelectorConfig) ModelUsed() ConversationTurnPathSelectorConfigModelUsed {
	return ConversationTurnPathSelectorConfigModelUsed{}
}

func (ConversationTurnPathSelectorConfig) Temperature() ConversationTurnPathSelectorConfigTemperature {
	return ConversationTurnPathSelectorConfigTemperature{}
}

func (ConversationTurnPathSelectorConfig) MaxTokens() ConversationTurnPathSelectorConfigMaxTokens {
	return ConversationTurnPathSelectorConfigMaxTokens{}
}

func (ConversationTurnPathSelectorConfig) ReasoningLevel() ConversationTurnPathSelectorConfigReasoningLevel {
	return ConversationTurnPathSelectorConfigReasoningLevel{}
}

func (ConversationTurnPathSelectorConfig) CapabilityTemplate() ConversationTurnPathSelectorConfigCapabilityTemplate {
	return ConversationTurnPathSelectorConfigCapabilityTemplate{}
}

func (ConversationTurnPathSelectorConfig) Connectors() ConversationTurnPathSelectorConfigConnectors {
	return ConversationTurnPathSelectorConfigConnectors{}
}

type ConversationTurnPathSelectorConfigModel struct{}

func (ConversationTurnPathSelectorConfigModel) FieldPath() *ConversationTurn_FieldSubPath {
	return &ConversationTurn_FieldSubPath{
		selector: ConversationTurn_FieldPathSelectorConfig,
		subPath:  NewTurnConfigFieldPathBuilder().Model().FieldPath(),
	}
}

func (s ConversationTurnPathSelectorConfigModel) WithValue(value *chat_model.Name) *ConversationTurn_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ConversationTurn_FieldSubPathValue)
}

func (s ConversationTurnPathSelectorConfigModel) WithArrayOfValues(values []*chat_model.Name) *ConversationTurn_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ConversationTurn_FieldSubPathArrayOfValues)
}

type ConversationTurnPathSelectorConfigModelUsed struct{}

func (ConversationTurnPathSelectorConfigModelUsed) FieldPath() *ConversationTurn_FieldSubPath {
	return &ConversationTurn_FieldSubPath{
		selector: ConversationTurn_FieldPathSelectorConfig,
		subPath:  NewTurnConfigFieldPathBuilder().ModelUsed().FieldPath(),
	}
}

func (s ConversationTurnPathSelectorConfigModelUsed) WithValue(value string) *ConversationTurn_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ConversationTurn_FieldSubPathValue)
}

func (s ConversationTurnPathSelectorConfigModelUsed) WithArrayOfValues(values []string) *ConversationTurn_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ConversationTurn_FieldSubPathArrayOfValues)
}

type ConversationTurnPathSelectorConfigTemperature struct{}

func (ConversationTurnPathSelectorConfigTemperature) FieldPath() *ConversationTurn_FieldSubPath {
	return &ConversationTurn_FieldSubPath{
		selector: ConversationTurn_FieldPathSelectorConfig,
		subPath:  NewTurnConfigFieldPathBuilder().Temperature().FieldPath(),
	}
}

func (s ConversationTurnPathSelectorConfigTemperature) WithValue(value float32) *ConversationTurn_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ConversationTurn_FieldSubPathValue)
}

func (s ConversationTurnPathSelectorConfigTemperature) WithArrayOfValues(values []float32) *ConversationTurn_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ConversationTurn_FieldSubPathArrayOfValues)
}

type ConversationTurnPathSelectorConfigMaxTokens struct{}

func (ConversationTurnPathSelectorConfigMaxTokens) FieldPath() *ConversationTurn_FieldSubPath {
	return &ConversationTurn_FieldSubPath{
		selector: ConversationTurn_FieldPathSelectorConfig,
		subPath:  NewTurnConfigFieldPathBuilder().MaxTokens().FieldPath(),
	}
}

func (s ConversationTurnPathSelectorConfigMaxTokens) WithValue(value int32) *ConversationTurn_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ConversationTurn_FieldSubPathValue)
}

func (s ConversationTurnPathSelectorConfigMaxTokens) WithArrayOfValues(values []int32) *ConversationTurn_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ConversationTurn_FieldSubPathArrayOfValues)
}

type ConversationTurnPathSelectorConfigReasoningLevel struct{}

func (ConversationTurnPathSelectorConfigReasoningLevel) FieldPath() *ConversationTurn_FieldSubPath {
	return &ConversationTurn_FieldSubPath{
		selector: ConversationTurn_FieldPathSelectorConfig,
		subPath:  NewTurnConfigFieldPathBuilder().ReasoningLevel().FieldPath(),
	}
}

func (s ConversationTurnPathSelectorConfigReasoningLevel) WithValue(value common_client.ReasoningLevel) *ConversationTurn_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ConversationTurn_FieldSubPathValue)
}

func (s ConversationTurnPathSelectorConfigReasoningLevel) WithArrayOfValues(values []common_client.ReasoningLevel) *ConversationTurn_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ConversationTurn_FieldSubPathArrayOfValues)
}

type ConversationTurnPathSelectorConfigCapabilityTemplate struct{}

func (ConversationTurnPathSelectorConfigCapabilityTemplate) FieldPath() *ConversationTurn_FieldSubPath {
	return &ConversationTurn_FieldSubPath{
		selector: ConversationTurn_FieldPathSelectorConfig,
		subPath:  NewTurnConfigFieldPathBuilder().CapabilityTemplate().FieldPath(),
	}
}

func (s ConversationTurnPathSelectorConfigCapabilityTemplate) WithValue(value *capability_template.Name) *ConversationTurn_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ConversationTurn_FieldSubPathValue)
}

func (s ConversationTurnPathSelectorConfigCapabilityTemplate) WithArrayOfValues(values []*capability_template.Name) *ConversationTurn_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ConversationTurn_FieldSubPathArrayOfValues)
}

type ConversationTurnPathSelectorConfigConnectors struct{}

func (ConversationTurnPathSelectorConfigConnectors) FieldPath() *ConversationTurn_FieldSubPath {
	return &ConversationTurn_FieldSubPath{
		selector: ConversationTurn_FieldPathSelectorConfig,
		subPath:  NewTurnConfigFieldPathBuilder().Connectors().FieldPath(),
	}
}

func (s ConversationTurnPathSelectorConfigConnectors) WithValue(value *common_client.ConnectorsList) *ConversationTurn_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ConversationTurn_FieldSubPathValue)
}

func (s ConversationTurnPathSelectorConfigConnectors) WithArrayOfValues(values []*common_client.ConnectorsList) *ConversationTurn_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ConversationTurn_FieldSubPathArrayOfValues)
}

type ConversationTurnPathSelectorUsage struct{}

func (ConversationTurnPathSelectorUsage) FieldPath() *ConversationTurn_FieldTerminalPath {
	return &ConversationTurn_FieldTerminalPath{selector: ConversationTurn_FieldPathSelectorUsage}
}

func (s ConversationTurnPathSelectorUsage) WithValue(value *common_client.TokenUsage) *ConversationTurn_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*ConversationTurn_FieldTerminalPathValue)
}

func (s ConversationTurnPathSelectorUsage) WithArrayOfValues(values []*common_client.TokenUsage) *ConversationTurn_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ConversationTurn_FieldTerminalPathArrayOfValues)
}

type ConversationTurnPathSelectorStopReason struct{}

func (ConversationTurnPathSelectorStopReason) FieldPath() *ConversationTurn_FieldTerminalPath {
	return &ConversationTurn_FieldTerminalPath{selector: ConversationTurn_FieldPathSelectorStopReason}
}

func (s ConversationTurnPathSelectorStopReason) WithValue(value common_client.StopReason) *ConversationTurn_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*ConversationTurn_FieldTerminalPathValue)
}

func (s ConversationTurnPathSelectorStopReason) WithArrayOfValues(values []common_client.StopReason) *ConversationTurn_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ConversationTurn_FieldTerminalPathArrayOfValues)
}

type ConversationTurnPathSelectorDuration struct{}

func (ConversationTurnPathSelectorDuration) FieldPath() *ConversationTurn_FieldTerminalPath {
	return &ConversationTurn_FieldTerminalPath{selector: ConversationTurn_FieldPathSelectorDuration}
}

func (s ConversationTurnPathSelectorDuration) WithValue(value *durationpb.Duration) *ConversationTurn_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*ConversationTurn_FieldTerminalPathValue)
}

func (s ConversationTurnPathSelectorDuration) WithArrayOfValues(values []*durationpb.Duration) *ConversationTurn_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ConversationTurn_FieldTerminalPathArrayOfValues)
}

type ConversationTurnPathSelectorAvailableTools struct{}

func (ConversationTurnPathSelectorAvailableTools) FieldPath() *ConversationTurn_FieldTerminalPath {
	return &ConversationTurn_FieldTerminalPath{selector: ConversationTurn_FieldPathSelectorAvailableTools}
}

func (s ConversationTurnPathSelectorAvailableTools) WithValue(value []string) *ConversationTurn_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*ConversationTurn_FieldTerminalPathValue)
}

func (s ConversationTurnPathSelectorAvailableTools) WithArrayOfValues(values [][]string) *ConversationTurn_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ConversationTurn_FieldTerminalPathArrayOfValues)
}

func (s ConversationTurnPathSelectorAvailableTools) WithItemValue(value string) *ConversationTurn_FieldTerminalPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*ConversationTurn_FieldTerminalPathArrayItemValue)
}

type TurnConfigFieldPathBuilder struct{}

func NewTurnConfigFieldPathBuilder() TurnConfigFieldPathBuilder {
	return TurnConfigFieldPathBuilder{}
}
func (TurnConfigFieldPathBuilder) Model() TurnConfigPathSelectorModel {
	return TurnConfigPathSelectorModel{}
}
func (TurnConfigFieldPathBuilder) ModelUsed() TurnConfigPathSelectorModelUsed {
	return TurnConfigPathSelectorModelUsed{}
}
func (TurnConfigFieldPathBuilder) Temperature() TurnConfigPathSelectorTemperature {
	return TurnConfigPathSelectorTemperature{}
}
func (TurnConfigFieldPathBuilder) MaxTokens() TurnConfigPathSelectorMaxTokens {
	return TurnConfigPathSelectorMaxTokens{}
}
func (TurnConfigFieldPathBuilder) ReasoningLevel() TurnConfigPathSelectorReasoningLevel {
	return TurnConfigPathSelectorReasoningLevel{}
}
func (TurnConfigFieldPathBuilder) CapabilityTemplate() TurnConfigPathSelectorCapabilityTemplate {
	return TurnConfigPathSelectorCapabilityTemplate{}
}
func (TurnConfigFieldPathBuilder) Connectors() TurnConfigPathSelectorConnectors {
	return TurnConfigPathSelectorConnectors{}
}

type TurnConfigPathSelectorModel struct{}

func (TurnConfigPathSelectorModel) FieldPath() *TurnConfig_FieldTerminalPath {
	return &TurnConfig_FieldTerminalPath{selector: TurnConfig_FieldPathSelectorModel}
}

func (s TurnConfigPathSelectorModel) WithValue(value *chat_model.Name) *TurnConfig_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*TurnConfig_FieldTerminalPathValue)
}

func (s TurnConfigPathSelectorModel) WithArrayOfValues(values []*chat_model.Name) *TurnConfig_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*TurnConfig_FieldTerminalPathArrayOfValues)
}

type TurnConfigPathSelectorModelUsed struct{}

func (TurnConfigPathSelectorModelUsed) FieldPath() *TurnConfig_FieldTerminalPath {
	return &TurnConfig_FieldTerminalPath{selector: TurnConfig_FieldPathSelectorModelUsed}
}

func (s TurnConfigPathSelectorModelUsed) WithValue(value string) *TurnConfig_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*TurnConfig_FieldTerminalPathValue)
}

func (s TurnConfigPathSelectorModelUsed) WithArrayOfValues(values []string) *TurnConfig_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*TurnConfig_FieldTerminalPathArrayOfValues)
}

type TurnConfigPathSelectorTemperature struct{}

func (TurnConfigPathSelectorTemperature) FieldPath() *TurnConfig_FieldTerminalPath {
	return &TurnConfig_FieldTerminalPath{selector: TurnConfig_FieldPathSelectorTemperature}
}

func (s TurnConfigPathSelectorTemperature) WithValue(value float32) *TurnConfig_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*TurnConfig_FieldTerminalPathValue)
}

func (s TurnConfigPathSelectorTemperature) WithArrayOfValues(values []float32) *TurnConfig_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*TurnConfig_FieldTerminalPathArrayOfValues)
}

type TurnConfigPathSelectorMaxTokens struct{}

func (TurnConfigPathSelectorMaxTokens) FieldPath() *TurnConfig_FieldTerminalPath {
	return &TurnConfig_FieldTerminalPath{selector: TurnConfig_FieldPathSelectorMaxTokens}
}

func (s TurnConfigPathSelectorMaxTokens) WithValue(value int32) *TurnConfig_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*TurnConfig_FieldTerminalPathValue)
}

func (s TurnConfigPathSelectorMaxTokens) WithArrayOfValues(values []int32) *TurnConfig_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*TurnConfig_FieldTerminalPathArrayOfValues)
}

type TurnConfigPathSelectorReasoningLevel struct{}

func (TurnConfigPathSelectorReasoningLevel) FieldPath() *TurnConfig_FieldTerminalPath {
	return &TurnConfig_FieldTerminalPath{selector: TurnConfig_FieldPathSelectorReasoningLevel}
}

func (s TurnConfigPathSelectorReasoningLevel) WithValue(value common_client.ReasoningLevel) *TurnConfig_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*TurnConfig_FieldTerminalPathValue)
}

func (s TurnConfigPathSelectorReasoningLevel) WithArrayOfValues(values []common_client.ReasoningLevel) *TurnConfig_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*TurnConfig_FieldTerminalPathArrayOfValues)
}

type TurnConfigPathSelectorCapabilityTemplate struct{}

func (TurnConfigPathSelectorCapabilityTemplate) FieldPath() *TurnConfig_FieldTerminalPath {
	return &TurnConfig_FieldTerminalPath{selector: TurnConfig_FieldPathSelectorCapabilityTemplate}
}

func (s TurnConfigPathSelectorCapabilityTemplate) WithValue(value *capability_template.Name) *TurnConfig_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*TurnConfig_FieldTerminalPathValue)
}

func (s TurnConfigPathSelectorCapabilityTemplate) WithArrayOfValues(values []*capability_template.Name) *TurnConfig_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*TurnConfig_FieldTerminalPathArrayOfValues)
}

type TurnConfigPathSelectorConnectors struct{}

func (TurnConfigPathSelectorConnectors) FieldPath() *TurnConfig_FieldTerminalPath {
	return &TurnConfig_FieldTerminalPath{selector: TurnConfig_FieldPathSelectorConnectors}
}

func (s TurnConfigPathSelectorConnectors) WithValue(value *common_client.ConnectorsList) *TurnConfig_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*TurnConfig_FieldTerminalPathValue)
}

func (s TurnConfigPathSelectorConnectors) WithArrayOfValues(values []*common_client.ConnectorsList) *TurnConfig_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*TurnConfig_FieldTerminalPathArrayOfValues)
}

type ModelUsageStatsFieldPathBuilder struct{}

func NewModelUsageStatsFieldPathBuilder() ModelUsageStatsFieldPathBuilder {
	return ModelUsageStatsFieldPathBuilder{}
}
func (ModelUsageStatsFieldPathBuilder) TurnCount() ModelUsageStatsPathSelectorTurnCount {
	return ModelUsageStatsPathSelectorTurnCount{}
}
func (ModelUsageStatsFieldPathBuilder) AggregatedUsage() ModelUsageStatsPathSelectorAggregatedUsage {
	return ModelUsageStatsPathSelectorAggregatedUsage{}
}

type ModelUsageStatsPathSelectorTurnCount struct{}

func (ModelUsageStatsPathSelectorTurnCount) FieldPath() *ModelUsageStats_FieldTerminalPath {
	return &ModelUsageStats_FieldTerminalPath{selector: ModelUsageStats_FieldPathSelectorTurnCount}
}

func (s ModelUsageStatsPathSelectorTurnCount) WithValue(value int32) *ModelUsageStats_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*ModelUsageStats_FieldTerminalPathValue)
}

func (s ModelUsageStatsPathSelectorTurnCount) WithArrayOfValues(values []int32) *ModelUsageStats_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ModelUsageStats_FieldTerminalPathArrayOfValues)
}

type ModelUsageStatsPathSelectorAggregatedUsage struct{}

func (ModelUsageStatsPathSelectorAggregatedUsage) FieldPath() *ModelUsageStats_FieldTerminalPath {
	return &ModelUsageStats_FieldTerminalPath{selector: ModelUsageStats_FieldPathSelectorAggregatedUsage}
}

func (s ModelUsageStatsPathSelectorAggregatedUsage) WithValue(value *common_client.TokenUsage) *ModelUsageStats_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*ModelUsageStats_FieldTerminalPathValue)
}

func (s ModelUsageStatsPathSelectorAggregatedUsage) WithArrayOfValues(values []*common_client.TokenUsage) *ModelUsageStats_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ModelUsageStats_FieldTerminalPathArrayOfValues)
}
