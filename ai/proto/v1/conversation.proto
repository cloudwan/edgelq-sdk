syntax = "proto3";

package ntt.ai.v1;

import "edgelq-sdk/ai/proto/v1/common.proto";
import "google/api/resource.proto";
import "google/protobuf/duration.proto";
import "google/protobuf/timestamp.proto";
import "goten-sdk/types/meta.proto";

option go_package = "github.com/cloudwan/edgelq-sdk/ai/resources/v1/conversation;conversation";
option java_multiple_files = true;
option java_outer_classname = "ConversationProto";
option java_package = "com.ntt.ai.pb.v1";

// Conversation Resource
message Conversation {
  option (google.api.resource) = {
    type : "ai.edgelq.com/Conversation"
    pattern : "projects/{project}/conversations/{conversation}"
    pattern : "users/{user}/conversations/{conversation}"
  };

  // Name of Conversation
  // When creating a new instance, this field is optional and if not provided,
  // it will be generated automatically. Last ID segment must conform to the
  // following regex: [a-z][a-z0-9\\-]{0,28}[a-z0-9]
  string name = 1;

  // Metadata is an object with information like create, update and delete time
  // (for async deleted resources), has user labels/annotations, sharding
  // information, multi-region syncing information and may have non-schema
  // owners (useful for taking ownership of resources belonging to lower level
  // services by higher ones).
  goten.types.Meta metadata = 2;

  // Display title for the conversation
  string title = 3;

  // Whether the conversation has been archived
  bool archived = 4;

  // Privacy level - if true, only visible to creator
  // Private conversations are only accessible to the user who created them
  // Shared (non-private) conversations are visible to all project members
  bool is_private = 10;

  // Timestamp of the last activity
  google.protobuf.Timestamp last_activity_time = 5;

  // Core conversation data - sequence of turns (each turn = one CreateResponse
  // API call)
  repeated ConversationTurn turns = 6;

  // Aggregate statistics by model (for easy analytics/billing)
  map<string, ModelUsageStats> usage_by_model = 7;

  // Failed turns - stored separately for audit/debugging
  // These turns ended with STOP_REASON_ERROR and should not be replayed
  repeated ConversationTurn failed_turns = 11;
}

// Represents one CreateResponse API call
message ConversationTurn {
  // Sequential turn number (0-indexed)
  int32 turn_number = 1;

  // When this turn started
  google.protobuf.Timestamp timestamp = 2;

  // Messages added in THIS turn only (not full history)
  // Typically: [user_msg, assistant_msg] or [tool_result_msg, assistant_msg]
  repeated Message messages = 3;

  // Configuration used for this specific API call
  TurnConfig config = 4;

  // Token usage for this specific turn
  TokenUsage usage = 5;

  // How this turn ended
  StopReason stop_reason = 6;

  // Duration of the API call
  google.protobuf.Duration duration = 7;

  // Tool names that were available in this turn
  repeated string available_tools = 8;
}

// Configuration snapshot for a single turn
message TurnConfig {
  // Model selection
  string model = 1;

  // Actual model ID from ResponseStarted
  string model_used = 2;

  // Parameters
  float temperature = 3;

  int32 max_tokens = 4;

  ReasoningLevel reasoning_level = 5;

  // Server tools configuration for this turn
  oneof server_tools_config {
    string capability_template = 6;

    ConnectorsList connectors = 7;
  }
}

// Per-model usage statistics
message ModelUsageStats {
  int32 turn_count = 1;

  // Aggregated token usage for this model (sum of all turns)
  TokenUsage aggregated_usage = 2;
}
