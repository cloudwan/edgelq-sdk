// Code generated by protoc-gen-goten-client
// API: ToolsService
// DO NOT EDIT!!!

package tools_client

import (
	"google.golang.org/protobuf/proto"

	gotenclient "github.com/cloudwan/goten-sdk/runtime/client"
	gotenresource "github.com/cloudwan/goten-sdk/runtime/resource"
)

// proto imports
import ()

// Reference imports to suppress errors if they are not otherwise used.
var (
	_ = new(proto.Message)
	_ = new(gotenclient.MethodDescriptor)
	_ = gotenresource.WildcardId
)

// make sure we're using proto imports
var ()

var (
	descriptorsInitialized bool
	toolsServiceDescriptor *ToolsServiceDescriptor
	executeToolsDescriptor *ExecuteToolsDescriptor
)

type ExecuteToolsDescriptor struct{}

type ExecuteToolsDescriptorClientMsgHandle struct{}

type ExecuteToolsDescriptorServerMsgHandle struct{}

func (d *ExecuteToolsDescriptor) NewEmptyClientMsg() proto.Message {
	return &ExecuteToolsRequest{}
}

func (d *ExecuteToolsDescriptor) NewEmptyServerMsg() proto.Message {
	return &ExecuteToolsResponse{}
}

func (d *ExecuteToolsDescriptor) IsUnary() bool {
	return true
}

func (d *ExecuteToolsDescriptor) IsClientStream() bool {
	return false
}

func (d *ExecuteToolsDescriptor) IsServerStream() bool {
	return false
}

func (d *ExecuteToolsDescriptor) IsCollection() bool {
	return false
}

func (d *ExecuteToolsDescriptor) IsPlural() bool {
	return false
}

func (d *ExecuteToolsDescriptor) HasResource() bool {
	return false
}

func (d *ExecuteToolsDescriptor) RequestHasResourceBody() bool {
	return false
}

func (d *ExecuteToolsDescriptor) GetVerb() string {
	return "executeTools"
}

func (d *ExecuteToolsDescriptor) GetMethodName() string {
	return "ExecuteTools"
}

func (d *ExecuteToolsDescriptor) GetFullMethodName() string {
	return "/ntt.ai.v1.ToolsService/ExecuteTools"
}

func (d *ExecuteToolsDescriptor) GetProtoPkgName() string {
	return "ntt.ai.v1"
}

func (d *ExecuteToolsDescriptor) GetApiName() string {
	return "ToolsService"
}

func (d *ExecuteToolsDescriptor) GetServiceDomain() string {
	return "ai.edgelq.com"
}

func (d *ExecuteToolsDescriptor) GetServiceVersion() string {
	return "v1"
}

func (d *ExecuteToolsDescriptor) GetApiDescriptor() gotenclient.ApiDescriptor {
	return toolsServiceDescriptor
}

func (d *ExecuteToolsDescriptor) GetResourceDescriptor() gotenresource.Descriptor {
	return nil
}

func (d *ExecuteToolsDescriptor) GetClientMsgReflectHandle() gotenclient.MethodMsgHandle {
	return &ExecuteToolsDescriptorClientMsgHandle{}
}

func (d *ExecuteToolsDescriptor) GetServerMsgReflectHandle() gotenclient.MethodMsgHandle {
	return &ExecuteToolsDescriptorServerMsgHandle{}
}

func (h *ExecuteToolsDescriptorClientMsgHandle) ExtractResourceName(msg proto.Message) gotenresource.Name {
	return nil
}

func (h *ExecuteToolsDescriptorClientMsgHandle) ExtractResourceNames(msg proto.Message) gotenresource.NameList {
	return nil
}

func (h *ExecuteToolsDescriptorClientMsgHandle) ExtractCollectionName(msg proto.Message) gotenresource.Name {
	return nil
}

func (h *ExecuteToolsDescriptorClientMsgHandle) ExtractResourceBody(msg proto.Message) gotenresource.Resource {
	return nil
}

func (h *ExecuteToolsDescriptorClientMsgHandle) ExtractResourceBodies(msg proto.Message) gotenresource.ResourceList {
	return nil
}

func (h *ExecuteToolsDescriptorServerMsgHandle) ExtractResourceName(msg proto.Message) gotenresource.Name {
	return nil
}

func (h *ExecuteToolsDescriptorServerMsgHandle) ExtractResourceNames(msg proto.Message) gotenresource.NameList {
	return nil
}

func (h *ExecuteToolsDescriptorServerMsgHandle) ExtractCollectionName(msg proto.Message) gotenresource.Name {
	return nil
}

func (h *ExecuteToolsDescriptorServerMsgHandle) ExtractResourceBody(msg proto.Message) gotenresource.Resource {
	return nil
}

func (h *ExecuteToolsDescriptorServerMsgHandle) ExtractResourceBodies(msg proto.Message) gotenresource.ResourceList {
	return nil
}

func GetExecuteToolsDescriptor() *ExecuteToolsDescriptor {
	return executeToolsDescriptor
}

type ToolsServiceDescriptor struct{}

func (d *ToolsServiceDescriptor) AllMethodDescriptors() []gotenclient.MethodDescriptor {
	return []gotenclient.MethodDescriptor{
		executeToolsDescriptor,
	}
}

func (d *ToolsServiceDescriptor) GetFullAPIName() string {
	return "/ntt.ai.v1.ToolsService"
}

func (d *ToolsServiceDescriptor) GetProtoPkgName() string {
	return "ntt.ai.v1"
}

func (d *ToolsServiceDescriptor) GetApiName() string {
	return "ToolsService"
}

func (d *ToolsServiceDescriptor) GetServiceDomain() string {
	return "ai.edgelq.com"
}

func (d *ToolsServiceDescriptor) GetServiceVersion() string {
	return "v1"
}

func GetToolsServiceDescriptor() *ToolsServiceDescriptor {
	return toolsServiceDescriptor
}

func initDescriptors() {
	toolsServiceDescriptor = &ToolsServiceDescriptor{}
	executeToolsDescriptor = &ExecuteToolsDescriptor{}
	gotenclient.GetRegistry().RegisterApiDescriptor(toolsServiceDescriptor)
	gotenclient.GetRegistry().RegisterMethodDescriptor(executeToolsDescriptor)
}

func init() {
	if !descriptorsInitialized {
		initDescriptors()
		descriptorsInitialized = true
	}
}
