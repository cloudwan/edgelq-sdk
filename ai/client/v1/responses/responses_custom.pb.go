// Code generated by protoc-gen-goten-go
// File: edgelq/ai/proto/v1/responses_custom.proto
// DO NOT EDIT!!!

package responses_client

import (
	"fmt"
	"reflect"
	"sync"

	"google.golang.org/protobuf/encoding/protojson"
	"google.golang.org/protobuf/proto"
	preflect "google.golang.org/protobuf/reflect/protoreflect"
	"google.golang.org/protobuf/runtime/protoimpl"
)

// proto imports
import (
	common_client "github.com/cloudwan/edgelq-sdk/ai/client/v1/common"
	capability_template "github.com/cloudwan/edgelq-sdk/ai/resources/v1/capability_template"
	chat_model "github.com/cloudwan/edgelq-sdk/ai/resources/v1/chat_model"
	conversation "github.com/cloudwan/edgelq-sdk/ai/resources/v1/conversation"
	iam_project "github.com/cloudwan/edgelq-sdk/iam/resources/v1/project"
	iam_user "github.com/cloudwan/edgelq-sdk/iam/resources/v1/user"
)

// Reference imports to suppress errors if they are not otherwise used.
var (
	_ = fmt.Errorf
	_ = reflect.Method{}
	_ = sync.Once{}

	_ = protojson.MarshalOptions{}
	_ = proto.MarshalOptions{}
	_ = preflect.Value{}
	_ = protoimpl.DescBuilder{}
)

// make sure we're using proto imports
var (
	_ = &capability_template.CapabilityTemplate{}
	_ = &chat_model.ChatModel{}
	_ = &common_client.Message{}
	_ = &conversation.Conversation{}
	_ = &iam_project.Project{}
	_ = &iam_user.User{}
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Client â†’ Server messages
type CreateResponseRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
	CreateRequest *CreateRequest `protobuf:"bytes,1,opt,name=create_request,json=createRequest,proto3" json:"create_request,omitempty"`
}

func (m *CreateResponseRequest) Reset() {
	*m = CreateResponseRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &edgelq_ai_proto_v1_responses_custom_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(m))
		ms.StoreMessageInfo(mi)
	}
}

func (m *CreateResponseRequest) String() string {
	return protoimpl.X.MessageStringOf(m)
}

func (*CreateResponseRequest) ProtoMessage() {}

func (m *CreateResponseRequest) ProtoReflect() preflect.Message {
	mi := &edgelq_ai_proto_v1_responses_custom_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && m != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(m))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(m)
}

func (*CreateResponseRequest) GotenMessage() {}

// Deprecated, Use CreateResponseRequest.ProtoReflect.Descriptor instead.
func (*CreateResponseRequest) Descriptor() ([]byte, []int) {
	return edgelq_ai_proto_v1_responses_custom_proto_rawDescGZIP(), []int{0}
}

func (m *CreateResponseRequest) Unmarshal(b []byte) error {
	return proto.Unmarshal(b, m)
}

func (m *CreateResponseRequest) Marshal() ([]byte, error) {
	return proto.Marshal(m)
}

func (m *CreateResponseRequest) MarshalJSON() ([]byte, error) {
	return protojson.MarshalOptions{}.Marshal(m)
}

func (m *CreateResponseRequest) UnmarshalJSON(data []byte) error {
	return protojson.Unmarshal(data, m)
}

func (m *CreateResponseRequest) GetCreateRequest() *CreateRequest {
	if m != nil {
		return m.CreateRequest
	}
	return nil
}

func (m *CreateResponseRequest) SetCreateRequest(fv *CreateRequest) {
	if m == nil {
		panic(fmt.Errorf("can't set %s on nil %s", "CreateRequest", "CreateResponseRequest"))
	}
	m.CreateRequest = fv
}

type CreateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
	// The conversation
	Messages []*common_client.Message `protobuf:"bytes,1,rep,name=messages,proto3" json:"messages,omitempty"`
	// Model selection
	Model *chat_model.Name `protobuf:"bytes,2,opt,customtype=Name,name=model,proto3" json:"model,omitempty"`
	// Client explicitly declares its tools
	ClientTools []*common_client.ToolDefinition `protobuf:"bytes,4,rep,name=client_tools,json=clientTools,proto3" json:"client_tools,omitempty"`
	// Standard LLM params
	MaxTokens   int32   `protobuf:"varint,7,opt,name=max_tokens,json=maxTokens,proto3" json:"max_tokens,omitempty"`
	Temperature float32 `protobuf:"fixed32,8,opt,name=temperature,proto3" json:"temperature,omitempty"`
	// Optional: reference to existing conversation
	ConversationName *conversation.Name `protobuf:"bytes,9,opt,customtype=Name,name=conversation_name,json=conversationName,proto3" json:"conversation_name,omitempty"`
	// Scope for authorization and tracking. Can be project, organization, or
	// empty. Format: "projects/{project}", "organizations/{org}", or ""
	Parent string `protobuf:"bytes,12,opt,name=parent,proto3" json:"parent,omitempty"`
	// Requested reasoning level (optional, capped by template max)
	ReasoningLevel common_client.ReasoningLevel `protobuf:"varint,13,opt,name=reasoning_level,json=reasoningLevel,proto3,enum=ntt.ai.v1.ReasoningLevel" json:"reasoning_level,omitempty"`
	// Override to disable Anthropic prompt caching for this request
	DisableInputTokenCache bool `protobuf:"varint,14,opt,name=disable_input_token_cache,json=disableInputTokenCache,proto3" json:"disable_input_token_cache,omitempty"`
	// Optional prompt variables passed by the client for template rendering
	// Used by capability templates' system_prompt_append when variables use
	// request_key source Server applies automatic sanitization:
	// - Max 8KB per value, 64KB total
	// - Control characters stripped (except \n and \t)
	// - Values are treated as untrusted user input
	PromptVariables map[string]string `protobuf:"bytes,15,rep,name=prompt_variables,json=promptVariables,proto3" json:"prompt_variables,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// Server-side tool configuration - choose one:
	//
	// Types that are valid to be assigned to ServerToolsConfig:
	//	*CreateRequest_CapabilityTemplate
	//	*CreateRequest_Connectors
	ServerToolsConfig isCreateRequest_ServerToolsConfig `protobuf_oneof:"server_tools_config"`
}

func (m *CreateRequest) Reset() {
	*m = CreateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &edgelq_ai_proto_v1_responses_custom_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(m))
		ms.StoreMessageInfo(mi)
	}
}

func (m *CreateRequest) String() string {
	return protoimpl.X.MessageStringOf(m)
}

func (*CreateRequest) ProtoMessage() {}

func (m *CreateRequest) ProtoReflect() preflect.Message {
	mi := &edgelq_ai_proto_v1_responses_custom_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && m != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(m))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(m)
}

func (*CreateRequest) GotenMessage() {}

// Deprecated, Use CreateRequest.ProtoReflect.Descriptor instead.
func (*CreateRequest) Descriptor() ([]byte, []int) {
	return edgelq_ai_proto_v1_responses_custom_proto_rawDescGZIP(), []int{1}
}

func (m *CreateRequest) Unmarshal(b []byte) error {
	return proto.Unmarshal(b, m)
}

func (m *CreateRequest) Marshal() ([]byte, error) {
	return proto.Marshal(m)
}

func (m *CreateRequest) MarshalJSON() ([]byte, error) {
	return protojson.MarshalOptions{}.Marshal(m)
}

func (m *CreateRequest) UnmarshalJSON(data []byte) error {
	return protojson.Unmarshal(data, m)
}

type isCreateRequest_ServerToolsConfig interface {
	isCreateRequest_ServerToolsConfig()
}

type CreateRequest_CapabilityTemplate struct {
	// Option 1: Use a pre-configured capability template
	CapabilityTemplate *capability_template.Name `protobuf:"bytes,5,opt,customtype=Name,name=capability_template,json=capabilityTemplate,proto3,oneof"`
}
type CreateRequest_Connectors struct {
	// Option 2: Directly specify connectors
	Connectors *common_client.ConnectorsList `protobuf:"bytes,6,opt,name=connectors,proto3,oneof"`
}

func (*CreateRequest_CapabilityTemplate) isCreateRequest_ServerToolsConfig() {}
func (*CreateRequest_Connectors) isCreateRequest_ServerToolsConfig()         {}
func (m *CreateRequest) GetMessages() []*common_client.Message {
	if m != nil {
		return m.Messages
	}
	return nil
}

func (m *CreateRequest) GetModel() *chat_model.Name {
	if m != nil {
		return m.Model
	}
	return nil
}

func (m *CreateRequest) GetClientTools() []*common_client.ToolDefinition {
	if m != nil {
		return m.ClientTools
	}
	return nil
}

func (m *CreateRequest) GetMaxTokens() int32 {
	if m != nil {
		return m.MaxTokens
	}
	return int32(0)
}

func (m *CreateRequest) GetTemperature() float32 {
	if m != nil {
		return m.Temperature
	}
	return float32(0)
}

func (m *CreateRequest) GetConversationName() *conversation.Name {
	if m != nil {
		return m.ConversationName
	}
	return nil
}

func (m *CreateRequest) GetParent() string {
	if m != nil {
		return m.Parent
	}
	return ""
}

func (m *CreateRequest) GetReasoningLevel() common_client.ReasoningLevel {
	if m != nil {
		return m.ReasoningLevel
	}
	return common_client.ReasoningLevel_REASONING_LEVEL_DEFAULT
}

func (m *CreateRequest) GetDisableInputTokenCache() bool {
	if m != nil {
		return m.DisableInputTokenCache
	}
	return false
}

func (m *CreateRequest) GetPromptVariables() map[string]string {
	if m != nil {
		return m.PromptVariables
	}
	return nil
}

func (m *CreateRequest) GetServerToolsConfig() isCreateRequest_ServerToolsConfig {
	if m != nil {
		return m.ServerToolsConfig
	}
	return nil
}
func (m *CreateRequest) GetCapabilityTemplate() *capability_template.Name {
	if x, ok := m.GetServerToolsConfig().(*CreateRequest_CapabilityTemplate); ok {
		return x.CapabilityTemplate
	}
	return nil
}
func (m *CreateRequest) GetConnectors() *common_client.ConnectorsList {
	if x, ok := m.GetServerToolsConfig().(*CreateRequest_Connectors); ok {
		return x.Connectors
	}
	return nil
}
func (m *CreateRequest) SetMessages(fv []*common_client.Message) {
	if m == nil {
		panic(fmt.Errorf("can't set %s on nil %s", "Messages", "CreateRequest"))
	}
	m.Messages = fv
}

func (m *CreateRequest) SetModel(fv *chat_model.Name) {
	if m == nil {
		panic(fmt.Errorf("can't set %s on nil %s", "Model", "CreateRequest"))
	}
	m.Model = fv
}

func (m *CreateRequest) SetClientTools(fv []*common_client.ToolDefinition) {
	if m == nil {
		panic(fmt.Errorf("can't set %s on nil %s", "ClientTools", "CreateRequest"))
	}
	m.ClientTools = fv
}

func (m *CreateRequest) SetMaxTokens(fv int32) {
	if m == nil {
		panic(fmt.Errorf("can't set %s on nil %s", "MaxTokens", "CreateRequest"))
	}
	m.MaxTokens = fv
}

func (m *CreateRequest) SetTemperature(fv float32) {
	if m == nil {
		panic(fmt.Errorf("can't set %s on nil %s", "Temperature", "CreateRequest"))
	}
	m.Temperature = fv
}

func (m *CreateRequest) SetConversationName(fv *conversation.Name) {
	if m == nil {
		panic(fmt.Errorf("can't set %s on nil %s", "ConversationName", "CreateRequest"))
	}
	m.ConversationName = fv
}

func (m *CreateRequest) SetParent(fv string) {
	if m == nil {
		panic(fmt.Errorf("can't set %s on nil %s", "Parent", "CreateRequest"))
	}
	m.Parent = fv
}

func (m *CreateRequest) SetReasoningLevel(fv common_client.ReasoningLevel) {
	if m == nil {
		panic(fmt.Errorf("can't set %s on nil %s", "ReasoningLevel", "CreateRequest"))
	}
	m.ReasoningLevel = fv
}

func (m *CreateRequest) SetDisableInputTokenCache(fv bool) {
	if m == nil {
		panic(fmt.Errorf("can't set %s on nil %s", "DisableInputTokenCache", "CreateRequest"))
	}
	m.DisableInputTokenCache = fv
}

func (m *CreateRequest) SetPromptVariables(fv map[string]string) {
	if m == nil {
		panic(fmt.Errorf("can't set %s on nil %s", "PromptVariables", "CreateRequest"))
	}
	m.PromptVariables = fv
}

func (m *CreateRequest) SetServerToolsConfig(ofv isCreateRequest_ServerToolsConfig) {
	if m == nil {
		panic(fmt.Errorf("can't set %s on nil %s", "isCreateRequest_ServerToolsConfig", "CreateRequest"))
	}
	m.ServerToolsConfig = ofv
}
func (m *CreateRequest) SetCapabilityTemplate(fv *capability_template.Name) {
	m.SetServerToolsConfig(&CreateRequest_CapabilityTemplate{CapabilityTemplate: fv})
}
func (m *CreateRequest) SetConnectors(fv *common_client.ConnectorsList) {
	m.SetServerToolsConfig(&CreateRequest_Connectors{Connectors: fv})
}

// Server â†’ Client messages
type CreateResponseResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
	// Types that are valid to be assigned to Event:
	//	*CreateResponseResult_ResponseStarted
	//	*CreateResponseResult_ContentDelta
	//	*CreateResponseResult_ContentDone
	//	*CreateResponseResult_ThinkingDelta
	//	*CreateResponseResult_ThinkingDone
	//	*CreateResponseResult_ToolCalls
	//	*CreateResponseResult_ResponseComplete
	//	*CreateResponseResult_Error
	//	*CreateResponseResult_CitationDelta
	Event isCreateResponseResult_Event `protobuf_oneof:"event"`
}

func (m *CreateResponseResult) Reset() {
	*m = CreateResponseResult{}
	if protoimpl.UnsafeEnabled {
		mi := &edgelq_ai_proto_v1_responses_custom_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(m))
		ms.StoreMessageInfo(mi)
	}
}

func (m *CreateResponseResult) String() string {
	return protoimpl.X.MessageStringOf(m)
}

func (*CreateResponseResult) ProtoMessage() {}

func (m *CreateResponseResult) ProtoReflect() preflect.Message {
	mi := &edgelq_ai_proto_v1_responses_custom_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && m != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(m))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(m)
}

func (*CreateResponseResult) GotenMessage() {}

// Deprecated, Use CreateResponseResult.ProtoReflect.Descriptor instead.
func (*CreateResponseResult) Descriptor() ([]byte, []int) {
	return edgelq_ai_proto_v1_responses_custom_proto_rawDescGZIP(), []int{2}
}

func (m *CreateResponseResult) Unmarshal(b []byte) error {
	return proto.Unmarshal(b, m)
}

func (m *CreateResponseResult) Marshal() ([]byte, error) {
	return proto.Marshal(m)
}

func (m *CreateResponseResult) MarshalJSON() ([]byte, error) {
	return protojson.MarshalOptions{}.Marshal(m)
}

func (m *CreateResponseResult) UnmarshalJSON(data []byte) error {
	return protojson.Unmarshal(data, m)
}

type isCreateResponseResult_Event interface {
	isCreateResponseResult_Event()
}

type CreateResponseResult_ResponseStarted struct {
	ResponseStarted *ResponseStarted `protobuf:"bytes,1,opt,name=response_started,json=responseStarted,proto3,oneof"`
}
type CreateResponseResult_ContentDelta struct {
	ContentDelta *ContentDelta `protobuf:"bytes,2,opt,name=content_delta,json=contentDelta,proto3,oneof"`
}
type CreateResponseResult_ContentDone struct {
	ContentDone *ContentDone `protobuf:"bytes,3,opt,name=content_done,json=contentDone,proto3,oneof"`
}
type CreateResponseResult_ThinkingDelta struct {
	ThinkingDelta *ThinkingDelta `protobuf:"bytes,4,opt,name=thinking_delta,json=thinkingDelta,proto3,oneof"`
}
type CreateResponseResult_ThinkingDone struct {
	ThinkingDone *ThinkingDone `protobuf:"bytes,5,opt,name=thinking_done,json=thinkingDone,proto3,oneof"`
}
type CreateResponseResult_ToolCalls struct {
	ToolCalls *common_client.ToolCalls `protobuf:"bytes,6,opt,name=tool_calls,json=toolCalls,proto3,oneof"`
}
type CreateResponseResult_ResponseComplete struct {
	ResponseComplete *ResponseComplete `protobuf:"bytes,7,opt,name=response_complete,json=responseComplete,proto3,oneof"`
}
type CreateResponseResult_Error struct {
	Error *Error `protobuf:"bytes,8,opt,name=error,proto3,oneof"`
}
type CreateResponseResult_CitationDelta struct {
	CitationDelta *CitationDelta `protobuf:"bytes,9,opt,name=citation_delta,json=citationDelta,proto3,oneof"`
}

func (*CreateResponseResult_ResponseStarted) isCreateResponseResult_Event()  {}
func (*CreateResponseResult_ContentDelta) isCreateResponseResult_Event()     {}
func (*CreateResponseResult_ContentDone) isCreateResponseResult_Event()      {}
func (*CreateResponseResult_ThinkingDelta) isCreateResponseResult_Event()    {}
func (*CreateResponseResult_ThinkingDone) isCreateResponseResult_Event()     {}
func (*CreateResponseResult_ToolCalls) isCreateResponseResult_Event()        {}
func (*CreateResponseResult_ResponseComplete) isCreateResponseResult_Event() {}
func (*CreateResponseResult_Error) isCreateResponseResult_Event()            {}
func (*CreateResponseResult_CitationDelta) isCreateResponseResult_Event()    {}
func (m *CreateResponseResult) GetEvent() isCreateResponseResult_Event {
	if m != nil {
		return m.Event
	}
	return nil
}
func (m *CreateResponseResult) GetResponseStarted() *ResponseStarted {
	if x, ok := m.GetEvent().(*CreateResponseResult_ResponseStarted); ok {
		return x.ResponseStarted
	}
	return nil
}
func (m *CreateResponseResult) GetContentDelta() *ContentDelta {
	if x, ok := m.GetEvent().(*CreateResponseResult_ContentDelta); ok {
		return x.ContentDelta
	}
	return nil
}
func (m *CreateResponseResult) GetContentDone() *ContentDone {
	if x, ok := m.GetEvent().(*CreateResponseResult_ContentDone); ok {
		return x.ContentDone
	}
	return nil
}
func (m *CreateResponseResult) GetThinkingDelta() *ThinkingDelta {
	if x, ok := m.GetEvent().(*CreateResponseResult_ThinkingDelta); ok {
		return x.ThinkingDelta
	}
	return nil
}
func (m *CreateResponseResult) GetThinkingDone() *ThinkingDone {
	if x, ok := m.GetEvent().(*CreateResponseResult_ThinkingDone); ok {
		return x.ThinkingDone
	}
	return nil
}
func (m *CreateResponseResult) GetToolCalls() *common_client.ToolCalls {
	if x, ok := m.GetEvent().(*CreateResponseResult_ToolCalls); ok {
		return x.ToolCalls
	}
	return nil
}
func (m *CreateResponseResult) GetResponseComplete() *ResponseComplete {
	if x, ok := m.GetEvent().(*CreateResponseResult_ResponseComplete); ok {
		return x.ResponseComplete
	}
	return nil
}
func (m *CreateResponseResult) GetError() *Error {
	if x, ok := m.GetEvent().(*CreateResponseResult_Error); ok {
		return x.Error
	}
	return nil
}
func (m *CreateResponseResult) GetCitationDelta() *CitationDelta {
	if x, ok := m.GetEvent().(*CreateResponseResult_CitationDelta); ok {
		return x.CitationDelta
	}
	return nil
}
func (m *CreateResponseResult) SetEvent(ofv isCreateResponseResult_Event) {
	if m == nil {
		panic(fmt.Errorf("can't set %s on nil %s", "isCreateResponseResult_Event", "CreateResponseResult"))
	}
	m.Event = ofv
}
func (m *CreateResponseResult) SetResponseStarted(fv *ResponseStarted) {
	m.SetEvent(&CreateResponseResult_ResponseStarted{ResponseStarted: fv})
}
func (m *CreateResponseResult) SetContentDelta(fv *ContentDelta) {
	m.SetEvent(&CreateResponseResult_ContentDelta{ContentDelta: fv})
}
func (m *CreateResponseResult) SetContentDone(fv *ContentDone) {
	m.SetEvent(&CreateResponseResult_ContentDone{ContentDone: fv})
}
func (m *CreateResponseResult) SetThinkingDelta(fv *ThinkingDelta) {
	m.SetEvent(&CreateResponseResult_ThinkingDelta{ThinkingDelta: fv})
}
func (m *CreateResponseResult) SetThinkingDone(fv *ThinkingDone) {
	m.SetEvent(&CreateResponseResult_ThinkingDone{ThinkingDone: fv})
}
func (m *CreateResponseResult) SetToolCalls(fv *common_client.ToolCalls) {
	m.SetEvent(&CreateResponseResult_ToolCalls{ToolCalls: fv})
}
func (m *CreateResponseResult) SetResponseComplete(fv *ResponseComplete) {
	m.SetEvent(&CreateResponseResult_ResponseComplete{ResponseComplete: fv})
}
func (m *CreateResponseResult) SetError(fv *Error) {
	m.SetEvent(&CreateResponseResult_Error{Error: fv})
}
func (m *CreateResponseResult) SetCitationDelta(fv *CitationDelta) {
	m.SetEvent(&CreateResponseResult_CitationDelta{CitationDelta: fv})
}

type ResponseStarted struct {
	state            protoimpl.MessageState
	sizeCache        protoimpl.SizeCache
	unknownFields    protoimpl.UnknownFields
	ConversationName string             `protobuf:"bytes,1,opt,name=conversation_name,json=conversationName,proto3" json:"conversation_name,omitempty"`
	ModelUsed        string             `protobuf:"bytes,2,opt,name=model_used,json=modelUsed,proto3" json:"model_used,omitempty"`
	AvailableTools   []*ToolInfo        `protobuf:"bytes,3,rep,name=available_tools,json=availableTools,proto3" json:"available_tools,omitempty"`
	Capabilities     *ModelCapabilities `protobuf:"bytes,4,opt,name=capabilities,proto3" json:"capabilities,omitempty"`
}

func (m *ResponseStarted) Reset() {
	*m = ResponseStarted{}
	if protoimpl.UnsafeEnabled {
		mi := &edgelq_ai_proto_v1_responses_custom_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(m))
		ms.StoreMessageInfo(mi)
	}
}

func (m *ResponseStarted) String() string {
	return protoimpl.X.MessageStringOf(m)
}

func (*ResponseStarted) ProtoMessage() {}

func (m *ResponseStarted) ProtoReflect() preflect.Message {
	mi := &edgelq_ai_proto_v1_responses_custom_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && m != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(m))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(m)
}

func (*ResponseStarted) GotenMessage() {}

// Deprecated, Use ResponseStarted.ProtoReflect.Descriptor instead.
func (*ResponseStarted) Descriptor() ([]byte, []int) {
	return edgelq_ai_proto_v1_responses_custom_proto_rawDescGZIP(), []int{3}
}

func (m *ResponseStarted) Unmarshal(b []byte) error {
	return proto.Unmarshal(b, m)
}

func (m *ResponseStarted) Marshal() ([]byte, error) {
	return proto.Marshal(m)
}

func (m *ResponseStarted) MarshalJSON() ([]byte, error) {
	return protojson.MarshalOptions{}.Marshal(m)
}

func (m *ResponseStarted) UnmarshalJSON(data []byte) error {
	return protojson.Unmarshal(data, m)
}

func (m *ResponseStarted) GetConversationName() string {
	if m != nil {
		return m.ConversationName
	}
	return ""
}

func (m *ResponseStarted) GetModelUsed() string {
	if m != nil {
		return m.ModelUsed
	}
	return ""
}

func (m *ResponseStarted) GetAvailableTools() []*ToolInfo {
	if m != nil {
		return m.AvailableTools
	}
	return nil
}

func (m *ResponseStarted) GetCapabilities() *ModelCapabilities {
	if m != nil {
		return m.Capabilities
	}
	return nil
}

func (m *ResponseStarted) SetConversationName(fv string) {
	if m == nil {
		panic(fmt.Errorf("can't set %s on nil %s", "ConversationName", "ResponseStarted"))
	}
	m.ConversationName = fv
}

func (m *ResponseStarted) SetModelUsed(fv string) {
	if m == nil {
		panic(fmt.Errorf("can't set %s on nil %s", "ModelUsed", "ResponseStarted"))
	}
	m.ModelUsed = fv
}

func (m *ResponseStarted) SetAvailableTools(fv []*ToolInfo) {
	if m == nil {
		panic(fmt.Errorf("can't set %s on nil %s", "AvailableTools", "ResponseStarted"))
	}
	m.AvailableTools = fv
}

func (m *ResponseStarted) SetCapabilities(fv *ModelCapabilities) {
	if m == nil {
		panic(fmt.Errorf("can't set %s on nil %s", "Capabilities", "ResponseStarted"))
	}
	m.Capabilities = fv
}

type ToolInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
	Name          string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Tool source information
	//
	// Types that are valid to be assigned to Source:
	//	*ToolInfo_Client
	//	*ToolInfo_Connector
	//	*ToolInfo_Internal
	Source isToolInfo_Source `protobuf_oneof:"source"`
}

func (m *ToolInfo) Reset() {
	*m = ToolInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &edgelq_ai_proto_v1_responses_custom_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(m))
		ms.StoreMessageInfo(mi)
	}
}

func (m *ToolInfo) String() string {
	return protoimpl.X.MessageStringOf(m)
}

func (*ToolInfo) ProtoMessage() {}

func (m *ToolInfo) ProtoReflect() preflect.Message {
	mi := &edgelq_ai_proto_v1_responses_custom_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && m != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(m))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(m)
}

func (*ToolInfo) GotenMessage() {}

// Deprecated, Use ToolInfo.ProtoReflect.Descriptor instead.
func (*ToolInfo) Descriptor() ([]byte, []int) {
	return edgelq_ai_proto_v1_responses_custom_proto_rawDescGZIP(), []int{4}
}

func (m *ToolInfo) Unmarshal(b []byte) error {
	return proto.Unmarshal(b, m)
}

func (m *ToolInfo) Marshal() ([]byte, error) {
	return proto.Marshal(m)
}

func (m *ToolInfo) MarshalJSON() ([]byte, error) {
	return protojson.MarshalOptions{}.Marshal(m)
}

func (m *ToolInfo) UnmarshalJSON(data []byte) error {
	return protojson.Unmarshal(data, m)
}

type isToolInfo_Source interface {
	isToolInfo_Source()
}

type ToolInfo_Client struct {
	Client *common_client.ClientToolSource `protobuf:"bytes,2,opt,name=client,proto3,oneof"`
}
type ToolInfo_Connector struct {
	Connector *common_client.ConnectorToolSource `protobuf:"bytes,3,opt,name=connector,proto3,oneof"`
}
type ToolInfo_Internal struct {
	Internal *common_client.InternalToolSource `protobuf:"bytes,4,opt,name=internal,proto3,oneof"`
}

func (*ToolInfo_Client) isToolInfo_Source()    {}
func (*ToolInfo_Connector) isToolInfo_Source() {}
func (*ToolInfo_Internal) isToolInfo_Source()  {}
func (m *ToolInfo) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ToolInfo) GetSource() isToolInfo_Source {
	if m != nil {
		return m.Source
	}
	return nil
}
func (m *ToolInfo) GetClient() *common_client.ClientToolSource {
	if x, ok := m.GetSource().(*ToolInfo_Client); ok {
		return x.Client
	}
	return nil
}
func (m *ToolInfo) GetConnector() *common_client.ConnectorToolSource {
	if x, ok := m.GetSource().(*ToolInfo_Connector); ok {
		return x.Connector
	}
	return nil
}
func (m *ToolInfo) GetInternal() *common_client.InternalToolSource {
	if x, ok := m.GetSource().(*ToolInfo_Internal); ok {
		return x.Internal
	}
	return nil
}
func (m *ToolInfo) SetName(fv string) {
	if m == nil {
		panic(fmt.Errorf("can't set %s on nil %s", "Name", "ToolInfo"))
	}
	m.Name = fv
}

func (m *ToolInfo) SetSource(ofv isToolInfo_Source) {
	if m == nil {
		panic(fmt.Errorf("can't set %s on nil %s", "isToolInfo_Source", "ToolInfo"))
	}
	m.Source = ofv
}
func (m *ToolInfo) SetClient(fv *common_client.ClientToolSource) {
	m.SetSource(&ToolInfo_Client{Client: fv})
}
func (m *ToolInfo) SetConnector(fv *common_client.ConnectorToolSource) {
	m.SetSource(&ToolInfo_Connector{Connector: fv})
}
func (m *ToolInfo) SetInternal(fv *common_client.InternalToolSource) {
	m.SetSource(&ToolInfo_Internal{Internal: fv})
}

type ModelCapabilities struct {
	state               protoimpl.MessageState
	sizeCache           protoimpl.SizeCache
	unknownFields       protoimpl.UnknownFields
	ContextWindow       int32    `protobuf:"varint,1,opt,name=context_window,json=contextWindow,proto3" json:"context_window,omitempty"`
	MaxOutputTokens     int32    `protobuf:"varint,2,opt,name=max_output_tokens,json=maxOutputTokens,proto3" json:"max_output_tokens,omitempty"`
	SupportsTools       bool     `protobuf:"varint,3,opt,name=supports_tools,json=supportsTools,proto3" json:"supports_tools,omitempty"`
	SupportsThinking    bool     `protobuf:"varint,4,opt,name=supports_thinking,json=supportsThinking,proto3" json:"supports_thinking,omitempty"`
	SupportedModalities []string `protobuf:"bytes,5,rep,name=supported_modalities,json=supportedModalities,proto3" json:"supported_modalities,omitempty"`
}

func (m *ModelCapabilities) Reset() {
	*m = ModelCapabilities{}
	if protoimpl.UnsafeEnabled {
		mi := &edgelq_ai_proto_v1_responses_custom_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(m))
		ms.StoreMessageInfo(mi)
	}
}

func (m *ModelCapabilities) String() string {
	return protoimpl.X.MessageStringOf(m)
}

func (*ModelCapabilities) ProtoMessage() {}

func (m *ModelCapabilities) ProtoReflect() preflect.Message {
	mi := &edgelq_ai_proto_v1_responses_custom_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && m != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(m))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(m)
}

func (*ModelCapabilities) GotenMessage() {}

// Deprecated, Use ModelCapabilities.ProtoReflect.Descriptor instead.
func (*ModelCapabilities) Descriptor() ([]byte, []int) {
	return edgelq_ai_proto_v1_responses_custom_proto_rawDescGZIP(), []int{5}
}

func (m *ModelCapabilities) Unmarshal(b []byte) error {
	return proto.Unmarshal(b, m)
}

func (m *ModelCapabilities) Marshal() ([]byte, error) {
	return proto.Marshal(m)
}

func (m *ModelCapabilities) MarshalJSON() ([]byte, error) {
	return protojson.MarshalOptions{}.Marshal(m)
}

func (m *ModelCapabilities) UnmarshalJSON(data []byte) error {
	return protojson.Unmarshal(data, m)
}

func (m *ModelCapabilities) GetContextWindow() int32 {
	if m != nil {
		return m.ContextWindow
	}
	return int32(0)
}

func (m *ModelCapabilities) GetMaxOutputTokens() int32 {
	if m != nil {
		return m.MaxOutputTokens
	}
	return int32(0)
}

func (m *ModelCapabilities) GetSupportsTools() bool {
	if m != nil {
		return m.SupportsTools
	}
	return false
}

func (m *ModelCapabilities) GetSupportsThinking() bool {
	if m != nil {
		return m.SupportsThinking
	}
	return false
}

func (m *ModelCapabilities) GetSupportedModalities() []string {
	if m != nil {
		return m.SupportedModalities
	}
	return nil
}

func (m *ModelCapabilities) SetContextWindow(fv int32) {
	if m == nil {
		panic(fmt.Errorf("can't set %s on nil %s", "ContextWindow", "ModelCapabilities"))
	}
	m.ContextWindow = fv
}

func (m *ModelCapabilities) SetMaxOutputTokens(fv int32) {
	if m == nil {
		panic(fmt.Errorf("can't set %s on nil %s", "MaxOutputTokens", "ModelCapabilities"))
	}
	m.MaxOutputTokens = fv
}

func (m *ModelCapabilities) SetSupportsTools(fv bool) {
	if m == nil {
		panic(fmt.Errorf("can't set %s on nil %s", "SupportsTools", "ModelCapabilities"))
	}
	m.SupportsTools = fv
}

func (m *ModelCapabilities) SetSupportsThinking(fv bool) {
	if m == nil {
		panic(fmt.Errorf("can't set %s on nil %s", "SupportsThinking", "ModelCapabilities"))
	}
	m.SupportsThinking = fv
}

func (m *ModelCapabilities) SetSupportedModalities(fv []string) {
	if m == nil {
		panic(fmt.Errorf("can't set %s on nil %s", "SupportedModalities", "ModelCapabilities"))
	}
	m.SupportedModalities = fv
}

type ContentDelta struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
	Text          string `protobuf:"bytes,1,opt,name=text,proto3" json:"text,omitempty"`
}

func (m *ContentDelta) Reset() {
	*m = ContentDelta{}
	if protoimpl.UnsafeEnabled {
		mi := &edgelq_ai_proto_v1_responses_custom_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(m))
		ms.StoreMessageInfo(mi)
	}
}

func (m *ContentDelta) String() string {
	return protoimpl.X.MessageStringOf(m)
}

func (*ContentDelta) ProtoMessage() {}

func (m *ContentDelta) ProtoReflect() preflect.Message {
	mi := &edgelq_ai_proto_v1_responses_custom_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && m != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(m))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(m)
}

func (*ContentDelta) GotenMessage() {}

// Deprecated, Use ContentDelta.ProtoReflect.Descriptor instead.
func (*ContentDelta) Descriptor() ([]byte, []int) {
	return edgelq_ai_proto_v1_responses_custom_proto_rawDescGZIP(), []int{6}
}

func (m *ContentDelta) Unmarshal(b []byte) error {
	return proto.Unmarshal(b, m)
}

func (m *ContentDelta) Marshal() ([]byte, error) {
	return proto.Marshal(m)
}

func (m *ContentDelta) MarshalJSON() ([]byte, error) {
	return protojson.MarshalOptions{}.Marshal(m)
}

func (m *ContentDelta) UnmarshalJSON(data []byte) error {
	return protojson.Unmarshal(data, m)
}

func (m *ContentDelta) GetText() string {
	if m != nil {
		return m.Text
	}
	return ""
}

func (m *ContentDelta) SetText(fv string) {
	if m == nil {
		panic(fmt.Errorf("can't set %s on nil %s", "Text", "ContentDelta"))
	}
	m.Text = fv
}

type ContentDone struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
	Text          string `protobuf:"bytes,1,opt,name=text,proto3" json:"text,omitempty"`
}

func (m *ContentDone) Reset() {
	*m = ContentDone{}
	if protoimpl.UnsafeEnabled {
		mi := &edgelq_ai_proto_v1_responses_custom_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(m))
		ms.StoreMessageInfo(mi)
	}
}

func (m *ContentDone) String() string {
	return protoimpl.X.MessageStringOf(m)
}

func (*ContentDone) ProtoMessage() {}

func (m *ContentDone) ProtoReflect() preflect.Message {
	mi := &edgelq_ai_proto_v1_responses_custom_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && m != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(m))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(m)
}

func (*ContentDone) GotenMessage() {}

// Deprecated, Use ContentDone.ProtoReflect.Descriptor instead.
func (*ContentDone) Descriptor() ([]byte, []int) {
	return edgelq_ai_proto_v1_responses_custom_proto_rawDescGZIP(), []int{7}
}

func (m *ContentDone) Unmarshal(b []byte) error {
	return proto.Unmarshal(b, m)
}

func (m *ContentDone) Marshal() ([]byte, error) {
	return proto.Marshal(m)
}

func (m *ContentDone) MarshalJSON() ([]byte, error) {
	return protojson.MarshalOptions{}.Marshal(m)
}

func (m *ContentDone) UnmarshalJSON(data []byte) error {
	return protojson.Unmarshal(data, m)
}

func (m *ContentDone) GetText() string {
	if m != nil {
		return m.Text
	}
	return ""
}

func (m *ContentDone) SetText(fv string) {
	if m == nil {
		panic(fmt.Errorf("can't set %s on nil %s", "Text", "ContentDone"))
	}
	m.Text = fv
}

type ThinkingDelta struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
	Text          string `protobuf:"bytes,1,opt,name=text,proto3" json:"text,omitempty"`
}

func (m *ThinkingDelta) Reset() {
	*m = ThinkingDelta{}
	if protoimpl.UnsafeEnabled {
		mi := &edgelq_ai_proto_v1_responses_custom_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(m))
		ms.StoreMessageInfo(mi)
	}
}

func (m *ThinkingDelta) String() string {
	return protoimpl.X.MessageStringOf(m)
}

func (*ThinkingDelta) ProtoMessage() {}

func (m *ThinkingDelta) ProtoReflect() preflect.Message {
	mi := &edgelq_ai_proto_v1_responses_custom_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && m != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(m))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(m)
}

func (*ThinkingDelta) GotenMessage() {}

// Deprecated, Use ThinkingDelta.ProtoReflect.Descriptor instead.
func (*ThinkingDelta) Descriptor() ([]byte, []int) {
	return edgelq_ai_proto_v1_responses_custom_proto_rawDescGZIP(), []int{8}
}

func (m *ThinkingDelta) Unmarshal(b []byte) error {
	return proto.Unmarshal(b, m)
}

func (m *ThinkingDelta) Marshal() ([]byte, error) {
	return proto.Marshal(m)
}

func (m *ThinkingDelta) MarshalJSON() ([]byte, error) {
	return protojson.MarshalOptions{}.Marshal(m)
}

func (m *ThinkingDelta) UnmarshalJSON(data []byte) error {
	return protojson.Unmarshal(data, m)
}

func (m *ThinkingDelta) GetText() string {
	if m != nil {
		return m.Text
	}
	return ""
}

func (m *ThinkingDelta) SetText(fv string) {
	if m == nil {
		panic(fmt.Errorf("can't set %s on nil %s", "Text", "ThinkingDelta"))
	}
	m.Text = fv
}

type ThinkingDone struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
	Text          string `protobuf:"bytes,1,opt,name=text,proto3" json:"text,omitempty"`
	Signature     string `protobuf:"bytes,2,opt,name=signature,proto3" json:"signature,omitempty"`
}

func (m *ThinkingDone) Reset() {
	*m = ThinkingDone{}
	if protoimpl.UnsafeEnabled {
		mi := &edgelq_ai_proto_v1_responses_custom_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(m))
		ms.StoreMessageInfo(mi)
	}
}

func (m *ThinkingDone) String() string {
	return protoimpl.X.MessageStringOf(m)
}

func (*ThinkingDone) ProtoMessage() {}

func (m *ThinkingDone) ProtoReflect() preflect.Message {
	mi := &edgelq_ai_proto_v1_responses_custom_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && m != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(m))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(m)
}

func (*ThinkingDone) GotenMessage() {}

// Deprecated, Use ThinkingDone.ProtoReflect.Descriptor instead.
func (*ThinkingDone) Descriptor() ([]byte, []int) {
	return edgelq_ai_proto_v1_responses_custom_proto_rawDescGZIP(), []int{9}
}

func (m *ThinkingDone) Unmarshal(b []byte) error {
	return proto.Unmarshal(b, m)
}

func (m *ThinkingDone) Marshal() ([]byte, error) {
	return proto.Marshal(m)
}

func (m *ThinkingDone) MarshalJSON() ([]byte, error) {
	return protojson.MarshalOptions{}.Marshal(m)
}

func (m *ThinkingDone) UnmarshalJSON(data []byte) error {
	return protojson.Unmarshal(data, m)
}

func (m *ThinkingDone) GetText() string {
	if m != nil {
		return m.Text
	}
	return ""
}

func (m *ThinkingDone) GetSignature() string {
	if m != nil {
		return m.Signature
	}
	return ""
}

func (m *ThinkingDone) SetText(fv string) {
	if m == nil {
		panic(fmt.Errorf("can't set %s on nil %s", "Text", "ThinkingDone"))
	}
	m.Text = fv
}

func (m *ThinkingDone) SetSignature(fv string) {
	if m == nil {
		panic(fmt.Errorf("can't set %s on nil %s", "Signature", "ThinkingDone"))
	}
	m.Signature = fv
}

type CitationDelta struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
	// Citation from common.proto
	Citation *common_client.Citation `protobuf:"bytes,1,opt,name=citation,proto3" json:"citation,omitempty"`
}

func (m *CitationDelta) Reset() {
	*m = CitationDelta{}
	if protoimpl.UnsafeEnabled {
		mi := &edgelq_ai_proto_v1_responses_custom_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(m))
		ms.StoreMessageInfo(mi)
	}
}

func (m *CitationDelta) String() string {
	return protoimpl.X.MessageStringOf(m)
}

func (*CitationDelta) ProtoMessage() {}

func (m *CitationDelta) ProtoReflect() preflect.Message {
	mi := &edgelq_ai_proto_v1_responses_custom_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && m != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(m))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(m)
}

func (*CitationDelta) GotenMessage() {}

// Deprecated, Use CitationDelta.ProtoReflect.Descriptor instead.
func (*CitationDelta) Descriptor() ([]byte, []int) {
	return edgelq_ai_proto_v1_responses_custom_proto_rawDescGZIP(), []int{10}
}

func (m *CitationDelta) Unmarshal(b []byte) error {
	return proto.Unmarshal(b, m)
}

func (m *CitationDelta) Marshal() ([]byte, error) {
	return proto.Marshal(m)
}

func (m *CitationDelta) MarshalJSON() ([]byte, error) {
	return protojson.MarshalOptions{}.Marshal(m)
}

func (m *CitationDelta) UnmarshalJSON(data []byte) error {
	return protojson.Unmarshal(data, m)
}

func (m *CitationDelta) GetCitation() *common_client.Citation {
	if m != nil {
		return m.Citation
	}
	return nil
}

func (m *CitationDelta) SetCitation(fv *common_client.Citation) {
	if m == nil {
		panic(fmt.Errorf("can't set %s on nil %s", "Citation", "CitationDelta"))
	}
	m.Citation = fv
}

type ResponseComplete struct {
	state               protoimpl.MessageState
	sizeCache           protoimpl.SizeCache
	unknownFields       protoimpl.UnknownFields
	RequiresToolResults bool                      `protobuf:"varint,1,opt,name=requires_tool_results,json=requiresToolResults,proto3" json:"requires_tool_results,omitempty"`
	StopReason          common_client.StopReason  `protobuf:"varint,2,opt,name=stop_reason,json=stopReason,proto3,enum=ntt.ai.v1.StopReason" json:"stop_reason,omitempty"`
	Usage               *common_client.TokenUsage `protobuf:"bytes,3,opt,name=usage,proto3" json:"usage,omitempty"`
	// Cumulative usage across entire conversation (aggregates all turns)
	// Only set for conversation requests, not set for non-conversation requests
	CumulativeUsage *common_client.TokenUsage `protobuf:"bytes,4,opt,name=cumulative_usage,json=cumulativeUsage,proto3" json:"cumulative_usage,omitempty"`
}

func (m *ResponseComplete) Reset() {
	*m = ResponseComplete{}
	if protoimpl.UnsafeEnabled {
		mi := &edgelq_ai_proto_v1_responses_custom_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(m))
		ms.StoreMessageInfo(mi)
	}
}

func (m *ResponseComplete) String() string {
	return protoimpl.X.MessageStringOf(m)
}

func (*ResponseComplete) ProtoMessage() {}

func (m *ResponseComplete) ProtoReflect() preflect.Message {
	mi := &edgelq_ai_proto_v1_responses_custom_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && m != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(m))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(m)
}

func (*ResponseComplete) GotenMessage() {}

// Deprecated, Use ResponseComplete.ProtoReflect.Descriptor instead.
func (*ResponseComplete) Descriptor() ([]byte, []int) {
	return edgelq_ai_proto_v1_responses_custom_proto_rawDescGZIP(), []int{11}
}

func (m *ResponseComplete) Unmarshal(b []byte) error {
	return proto.Unmarshal(b, m)
}

func (m *ResponseComplete) Marshal() ([]byte, error) {
	return proto.Marshal(m)
}

func (m *ResponseComplete) MarshalJSON() ([]byte, error) {
	return protojson.MarshalOptions{}.Marshal(m)
}

func (m *ResponseComplete) UnmarshalJSON(data []byte) error {
	return protojson.Unmarshal(data, m)
}

func (m *ResponseComplete) GetRequiresToolResults() bool {
	if m != nil {
		return m.RequiresToolResults
	}
	return false
}

func (m *ResponseComplete) GetStopReason() common_client.StopReason {
	if m != nil {
		return m.StopReason
	}
	return common_client.StopReason_STOP_REASON_UNSPECIFIED
}

func (m *ResponseComplete) GetUsage() *common_client.TokenUsage {
	if m != nil {
		return m.Usage
	}
	return nil
}

func (m *ResponseComplete) GetCumulativeUsage() *common_client.TokenUsage {
	if m != nil {
		return m.CumulativeUsage
	}
	return nil
}

func (m *ResponseComplete) SetRequiresToolResults(fv bool) {
	if m == nil {
		panic(fmt.Errorf("can't set %s on nil %s", "RequiresToolResults", "ResponseComplete"))
	}
	m.RequiresToolResults = fv
}

func (m *ResponseComplete) SetStopReason(fv common_client.StopReason) {
	if m == nil {
		panic(fmt.Errorf("can't set %s on nil %s", "StopReason", "ResponseComplete"))
	}
	m.StopReason = fv
}

func (m *ResponseComplete) SetUsage(fv *common_client.TokenUsage) {
	if m == nil {
		panic(fmt.Errorf("can't set %s on nil %s", "Usage", "ResponseComplete"))
	}
	m.Usage = fv
}

func (m *ResponseComplete) SetCumulativeUsage(fv *common_client.TokenUsage) {
	if m == nil {
		panic(fmt.Errorf("can't set %s on nil %s", "CumulativeUsage", "ResponseComplete"))
	}
	m.CumulativeUsage = fv
}

type Error struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
	Code          string `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
	Message       string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (m *Error) Reset() {
	*m = Error{}
	if protoimpl.UnsafeEnabled {
		mi := &edgelq_ai_proto_v1_responses_custom_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(m))
		ms.StoreMessageInfo(mi)
	}
}

func (m *Error) String() string {
	return protoimpl.X.MessageStringOf(m)
}

func (*Error) ProtoMessage() {}

func (m *Error) ProtoReflect() preflect.Message {
	mi := &edgelq_ai_proto_v1_responses_custom_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && m != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(m))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(m)
}

func (*Error) GotenMessage() {}

// Deprecated, Use Error.ProtoReflect.Descriptor instead.
func (*Error) Descriptor() ([]byte, []int) {
	return edgelq_ai_proto_v1_responses_custom_proto_rawDescGZIP(), []int{12}
}

func (m *Error) Unmarshal(b []byte) error {
	return proto.Unmarshal(b, m)
}

func (m *Error) Marshal() ([]byte, error) {
	return proto.Marshal(m)
}

func (m *Error) MarshalJSON() ([]byte, error) {
	return protojson.MarshalOptions{}.Marshal(m)
}

func (m *Error) UnmarshalJSON(data []byte) error {
	return protojson.Unmarshal(data, m)
}

func (m *Error) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

func (m *Error) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *Error) SetCode(fv string) {
	if m == nil {
		panic(fmt.Errorf("can't set %s on nil %s", "Code", "Error"))
	}
	m.Code = fv
}

func (m *Error) SetMessage(fv string) {
	if m == nil {
		panic(fmt.Errorf("can't set %s on nil %s", "Message", "Error"))
	}
	m.Message = fv
}

var edgelq_ai_proto_v1_responses_custom_proto preflect.FileDescriptor

var edgelq_ai_proto_v1_responses_custom_proto_rawDesc = []byte{
	0x0a, 0x29, 0x65, 0x64, 0x67, 0x65, 0x6c, 0x71, 0x2f, 0x61, 0x69, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2f, 0x76, 0x31, 0x2f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x73, 0x5f, 0x63,
	0x75, 0x73, 0x74, 0x6f, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x09, 0x6e, 0x74, 0x74,
	0x2e, 0x61, 0x69, 0x2e, 0x76, 0x31, 0x1a, 0x1e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x20, 0x67, 0x6f, 0x74, 0x65, 0x6e, 0x2f, 0x61, 0x6e,
	0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61,
	0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1d, 0x67, 0x6f, 0x74, 0x65, 0x6e, 0x2f,
	0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x67, 0x6f, 0x74, 0x65,
	0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x74, 0x65, 0x6e, 0x2f, 0x61,
	0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x24, 0x67, 0x6f, 0x74, 0x65, 0x6e, 0x2f,
	0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x6d, 0x75, 0x6c, 0x74,
	0x69, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f,
	0x65, 0x64, 0x67, 0x65, 0x6c, 0x71, 0x2f, 0x61, 0x69, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f,
	0x76, 0x31, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22,
	0x58, 0x0a, 0x15, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3f, 0x0a, 0x0e, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x18, 0x2e, 0x6e, 0x74, 0x74, 0x2e, 0x61, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x0d, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x94, 0x06, 0x0a, 0x0d, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2e, 0x0a, 0x08, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e,
	0x6e, 0x74, 0x74, 0x2e, 0x61, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x52, 0x08, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x12, 0x27, 0x0a, 0x05, 0x6d,
	0x6f, 0x64, 0x65, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x11, 0xb2, 0xda, 0x21, 0x0d,
	0x0a, 0x0b, 0x0a, 0x09, 0x43, 0x68, 0x61, 0x74, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x52, 0x05, 0x6d,
	0x6f, 0x64, 0x65, 0x6c, 0x12, 0x3c, 0x0a, 0x0c, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x74,
	0x6f, 0x6f, 0x6c, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x6e, 0x74, 0x74,
	0x2e, 0x61, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x6f, 0x6f, 0x6c, 0x44, 0x65, 0x66, 0x69, 0x6e,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0b, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x6f,
	0x6c, 0x73, 0x12, 0x4d, 0x0a, 0x13, 0x63, 0x61, 0x70, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79,
	0x5f, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x1a, 0xb2, 0xda, 0x21, 0x16, 0x0a, 0x14, 0x0a, 0x12, 0x43, 0x61, 0x70, 0x61, 0x62, 0x69, 0x6c,
	0x69, 0x74, 0x79, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x48, 0x00, 0x52, 0x12, 0x63,
	0x61, 0x70, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74,
	0x65, 0x12, 0x3b, 0x0a, 0x0a, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x73, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x6e, 0x74, 0x74, 0x2e, 0x61, 0x69, 0x2e, 0x76,
	0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x73, 0x4c, 0x69, 0x73, 0x74,
	0x48, 0x00, 0x52, 0x0a, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x73, 0x12, 0x1d,
	0x0a, 0x0a, 0x6d, 0x61, 0x78, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x09, 0x6d, 0x61, 0x78, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x12, 0x20, 0x0a,
	0x0b, 0x74, 0x65, 0x6d, 0x70, 0x65, 0x72, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x02, 0x52, 0x0b, 0x74, 0x65, 0x6d, 0x70, 0x65, 0x72, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12,
	0x41, 0x0a, 0x11, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x42, 0x14, 0xb2, 0xda, 0x21, 0x10,
	0x0a, 0x0e, 0x0a, 0x0c, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x10, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x0c, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x12, 0x42, 0x0a, 0x0f, 0x72, 0x65,
	0x61, 0x73, 0x6f, 0x6e, 0x69, 0x6e, 0x67, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x0d, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x19, 0x2e, 0x6e, 0x74, 0x74, 0x2e, 0x61, 0x69, 0x2e, 0x76, 0x31, 0x2e,
	0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x69, 0x6e, 0x67, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x52, 0x0e,
	0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x69, 0x6e, 0x67, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x39,
	0x0a, 0x19, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x5f,
	0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x63, 0x61, 0x63, 0x68, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x16, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x54,
	0x6f, 0x6b, 0x65, 0x6e, 0x43, 0x61, 0x63, 0x68, 0x65, 0x12, 0x58, 0x0a, 0x10, 0x70, 0x72, 0x6f,
	0x6d, 0x70, 0x74, 0x5f, 0x76, 0x61, 0x72, 0x69, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x18, 0x0f, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x6e, 0x74, 0x74, 0x2e, 0x61, 0x69, 0x2e, 0x76, 0x31, 0x2e,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x50, 0x72,
	0x6f, 0x6d, 0x70, 0x74, 0x56, 0x61, 0x72, 0x69, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x52, 0x0f, 0x70, 0x72, 0x6f, 0x6d, 0x70, 0x74, 0x56, 0x61, 0x72, 0x69, 0x61, 0x62,
	0x6c, 0x65, 0x73, 0x1a, 0x42, 0x0a, 0x14, 0x50, 0x72, 0x6f, 0x6d, 0x70, 0x74, 0x56, 0x61, 0x72,
	0x69, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b,
	0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x42, 0x15, 0x0a, 0x13, 0x73, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x5f, 0x74, 0x6f, 0x6f, 0x6c, 0x73, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x4a, 0x04,
	0x08, 0x03, 0x10, 0x04, 0x4a, 0x04, 0x08, 0x0a, 0x10, 0x0b, 0x4a, 0x04, 0x08, 0x0b, 0x10, 0x0c,
	0x22, 0xd8, 0x04, 0x0a, 0x14, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x47, 0x0a, 0x10, 0x72, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x65, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x6e, 0x74, 0x74, 0x2e, 0x61, 0x69, 0x2e, 0x76, 0x31, 0x2e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x53, 0x74, 0x61, 0x72, 0x74, 0x65, 0x64, 0x48,
	0x00, 0x52, 0x0f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x53, 0x74, 0x61, 0x72, 0x74,
	0x65, 0x64, 0x12, 0x3e, 0x0a, 0x0d, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x5f, 0x64, 0x65,
	0x6c, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x6e, 0x74, 0x74, 0x2e,
	0x61, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x44, 0x65, 0x6c,
	0x74, 0x61, 0x48, 0x00, 0x52, 0x0c, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x44, 0x65, 0x6c,
	0x74, 0x61, 0x12, 0x3b, 0x0a, 0x0c, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x5f, 0x64, 0x6f,
	0x6e, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x6e, 0x74, 0x74, 0x2e, 0x61,
	0x69, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x44, 0x6f, 0x6e, 0x65,
	0x48, 0x00, 0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x44, 0x6f, 0x6e, 0x65, 0x12,
	0x41, 0x0a, 0x0e, 0x74, 0x68, 0x69, 0x6e, 0x6b, 0x69, 0x6e, 0x67, 0x5f, 0x64, 0x65, 0x6c, 0x74,
	0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6e, 0x74, 0x74, 0x2e, 0x61, 0x69,
	0x2e, 0x76, 0x31, 0x2e, 0x54, 0x68, 0x69, 0x6e, 0x6b, 0x69, 0x6e, 0x67, 0x44, 0x65, 0x6c, 0x74,
	0x61, 0x48, 0x00, 0x52, 0x0d, 0x74, 0x68, 0x69, 0x6e, 0x6b, 0x69, 0x6e, 0x67, 0x44, 0x65, 0x6c,
	0x74, 0x61, 0x12, 0x3e, 0x0a, 0x0d, 0x74, 0x68, 0x69, 0x6e, 0x6b, 0x69, 0x6e, 0x67, 0x5f, 0x64,
	0x6f, 0x6e, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x6e, 0x74, 0x74, 0x2e,
	0x61, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x68, 0x69, 0x6e, 0x6b, 0x69, 0x6e, 0x67, 0x44, 0x6f,
	0x6e, 0x65, 0x48, 0x00, 0x52, 0x0c, 0x74, 0x68, 0x69, 0x6e, 0x6b, 0x69, 0x6e, 0x67, 0x44, 0x6f,
	0x6e, 0x65, 0x12, 0x35, 0x0a, 0x0a, 0x74, 0x6f, 0x6f, 0x6c, 0x5f, 0x63, 0x61, 0x6c, 0x6c, 0x73,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x6e, 0x74, 0x74, 0x2e, 0x61, 0x69, 0x2e,
	0x76, 0x31, 0x2e, 0x54, 0x6f, 0x6f, 0x6c, 0x43, 0x61, 0x6c, 0x6c, 0x73, 0x48, 0x00, 0x52, 0x09,
	0x74, 0x6f, 0x6f, 0x6c, 0x43, 0x61, 0x6c, 0x6c, 0x73, 0x12, 0x4a, 0x0a, 0x11, 0x72, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x6e, 0x74, 0x74, 0x2e, 0x61, 0x69, 0x2e, 0x76, 0x31,
	0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74,
	0x65, 0x48, 0x00, 0x52, 0x10, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x43, 0x6f, 0x6d,
	0x70, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x28, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x6e, 0x74, 0x74, 0x2e, 0x61, 0x69, 0x2e, 0x76, 0x31,
	0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x48, 0x00, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12,
	0x41, 0x0a, 0x0e, 0x63, 0x69, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x64, 0x65, 0x6c, 0x74,
	0x61, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6e, 0x74, 0x74, 0x2e, 0x61, 0x69,
	0x2e, 0x76, 0x31, 0x2e, 0x43, 0x69, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x6c, 0x74,
	0x61, 0x48, 0x00, 0x52, 0x0d, 0x63, 0x69, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x6c,
	0x74, 0x61, 0x42, 0x07, 0x0a, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x22, 0xdd, 0x01, 0x0a, 0x0f,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x53, 0x74, 0x61, 0x72, 0x74, 0x65, 0x64, 0x12,
	0x2b, 0x0a, 0x11, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x63, 0x6f, 0x6e, 0x76,
	0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a,
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x5f, 0x75, 0x73, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x55, 0x73, 0x65, 0x64, 0x12, 0x3c, 0x0a, 0x0f, 0x61,
	0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x74, 0x6f, 0x6f, 0x6c, 0x73, 0x18, 0x03,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6e, 0x74, 0x74, 0x2e, 0x61, 0x69, 0x2e, 0x76, 0x31,
	0x2e, 0x54, 0x6f, 0x6f, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0e, 0x61, 0x76, 0x61, 0x69, 0x6c,
	0x61, 0x62, 0x6c, 0x65, 0x54, 0x6f, 0x6f, 0x6c, 0x73, 0x12, 0x40, 0x0a, 0x0c, 0x63, 0x61, 0x70,
	0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x69, 0x65, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1c, 0x2e, 0x6e, 0x74, 0x74, 0x2e, 0x61, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x6f, 0x64, 0x65,
	0x6c, 0x43, 0x61, 0x70, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x69, 0x65, 0x73, 0x52, 0x0c, 0x63,
	0x61, 0x70, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x69, 0x65, 0x73, 0x22, 0xdc, 0x01, 0x0a, 0x08,
	0x54, 0x6f, 0x6f, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x35, 0x0a, 0x06,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x6e,
	0x74, 0x74, 0x2e, 0x61, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54,
	0x6f, 0x6f, 0x6c, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x48, 0x00, 0x52, 0x06, 0x63, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x12, 0x3e, 0x0a, 0x09, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x6e, 0x74, 0x74, 0x2e, 0x61, 0x69, 0x2e,
	0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x54, 0x6f, 0x6f, 0x6c,
	0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x48, 0x00, 0x52, 0x09, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63,
	0x74, 0x6f, 0x72, 0x12, 0x3b, 0x0a, 0x08, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x6e, 0x74, 0x74, 0x2e, 0x61, 0x69, 0x2e, 0x76,
	0x31, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x54, 0x6f, 0x6f, 0x6c, 0x53, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x48, 0x00, 0x52, 0x08, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c,
	0x42, 0x08, 0x0a, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x22, 0xed, 0x01, 0x0a, 0x11, 0x4d,
	0x6f, 0x64, 0x65, 0x6c, 0x43, 0x61, 0x70, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x69, 0x65, 0x73,
	0x12, 0x25, 0x0a, 0x0e, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x5f, 0x77, 0x69, 0x6e, 0x64,
	0x6f, 0x77, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78,
	0x74, 0x57, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x12, 0x2a, 0x0a, 0x11, 0x6d, 0x61, 0x78, 0x5f, 0x6f,
	0x75, 0x74, 0x70, 0x75, 0x74, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0f, 0x6d, 0x61, 0x78, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x54, 0x6f, 0x6b,
	0x65, 0x6e, 0x73, 0x12, 0x25, 0x0a, 0x0e, 0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x5f,
	0x74, 0x6f, 0x6f, 0x6c, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x73, 0x75, 0x70,
	0x70, 0x6f, 0x72, 0x74, 0x73, 0x54, 0x6f, 0x6f, 0x6c, 0x73, 0x12, 0x2b, 0x0a, 0x11, 0x73, 0x75,
	0x70, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x5f, 0x74, 0x68, 0x69, 0x6e, 0x6b, 0x69, 0x6e, 0x67, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x10, 0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x54,
	0x68, 0x69, 0x6e, 0x6b, 0x69, 0x6e, 0x67, 0x12, 0x31, 0x0a, 0x14, 0x73, 0x75, 0x70, 0x70, 0x6f,
	0x72, 0x74, 0x65, 0x64, 0x5f, 0x6d, 0x6f, 0x64, 0x61, 0x6c, 0x69, 0x74, 0x69, 0x65, 0x73, 0x18,
	0x05, 0x20, 0x03, 0x28, 0x09, 0x52, 0x13, 0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x64,
	0x4d, 0x6f, 0x64, 0x61, 0x6c, 0x69, 0x74, 0x69, 0x65, 0x73, 0x22, 0x22, 0x0a, 0x0c, 0x43, 0x6f,
	0x6e, 0x74, 0x65, 0x6e, 0x74, 0x44, 0x65, 0x6c, 0x74, 0x61, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x65,
	0x78, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x65, 0x78, 0x74, 0x22, 0x21,
	0x0a, 0x0b, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x44, 0x6f, 0x6e, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x74, 0x65, 0x78, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x65, 0x78,
	0x74, 0x22, 0x23, 0x0a, 0x0d, 0x54, 0x68, 0x69, 0x6e, 0x6b, 0x69, 0x6e, 0x67, 0x44, 0x65, 0x6c,
	0x74, 0x61, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x65, 0x78, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x74, 0x65, 0x78, 0x74, 0x22, 0x40, 0x0a, 0x0c, 0x54, 0x68, 0x69, 0x6e, 0x6b, 0x69,
	0x6e, 0x67, 0x44, 0x6f, 0x6e, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x65, 0x78, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x65, 0x78, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x69,
	0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73,
	0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x22, 0x40, 0x0a, 0x0d, 0x43, 0x69, 0x74, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x6c, 0x74, 0x61, 0x12, 0x2f, 0x0a, 0x08, 0x63, 0x69, 0x74,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6e, 0x74,
	0x74, 0x2e, 0x61, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x69, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x08, 0x63, 0x69, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xed, 0x01, 0x0a, 0x10, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x12,
	0x32, 0x0a, 0x15, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x73, 0x5f, 0x74, 0x6f, 0x6f, 0x6c,
	0x5f, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x13,
	0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x73, 0x54, 0x6f, 0x6f, 0x6c, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x73, 0x12, 0x36, 0x0a, 0x0b, 0x73, 0x74, 0x6f, 0x70, 0x5f, 0x72, 0x65, 0x61, 0x73,
	0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x15, 0x2e, 0x6e, 0x74, 0x74, 0x2e, 0x61,
	0x69, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x6f, 0x70, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x52,
	0x0a, 0x73, 0x74, 0x6f, 0x70, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x2b, 0x0a, 0x05, 0x75,
	0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x6e, 0x74, 0x74,
	0x2e, 0x61, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x55, 0x73, 0x61, 0x67,
	0x65, 0x52, 0x05, 0x75, 0x73, 0x61, 0x67, 0x65, 0x12, 0x40, 0x0a, 0x10, 0x63, 0x75, 0x6d, 0x75,
	0x6c, 0x61, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x75, 0x73, 0x61, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x15, 0x2e, 0x6e, 0x74, 0x74, 0x2e, 0x61, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x54,
	0x6f, 0x6b, 0x65, 0x6e, 0x55, 0x73, 0x61, 0x67, 0x65, 0x52, 0x0f, 0x63, 0x75, 0x6d, 0x75, 0x6c,
	0x61, 0x74, 0x69, 0x76, 0x65, 0x55, 0x73, 0x61, 0x67, 0x65, 0x22, 0x35, 0x0a, 0x05, 0x45, 0x72,
	0x72, 0x6f, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x42, 0x72, 0xe8, 0xde, 0x21, 0x00, 0x0a, 0x10, 0x63, 0x6f, 0x6d, 0x2e, 0x6e, 0x74, 0x74,
	0x2e, 0x61, 0x69, 0x2e, 0x70, 0x62, 0x2e, 0x76, 0x31, 0x42, 0x14, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x73, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50,
	0x00, 0x5a, 0x42, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x6c,
	0x6f, 0x75, 0x64, 0x77, 0x61, 0x6e, 0x2f, 0x65, 0x64, 0x67, 0x65, 0x6c, 0x71, 0x2f, 0x61, 0x69,
	0x2f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2f, 0x76, 0x31, 0x2f, 0x72, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x73, 0x3b, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x73, 0x5f, 0x63,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	edgelq_ai_proto_v1_responses_custom_proto_rawDescOnce sync.Once
	edgelq_ai_proto_v1_responses_custom_proto_rawDescData = edgelq_ai_proto_v1_responses_custom_proto_rawDesc
)

func edgelq_ai_proto_v1_responses_custom_proto_rawDescGZIP() []byte {
	edgelq_ai_proto_v1_responses_custom_proto_rawDescOnce.Do(func() {
		edgelq_ai_proto_v1_responses_custom_proto_rawDescData = protoimpl.X.CompressGZIP(edgelq_ai_proto_v1_responses_custom_proto_rawDescData)
	})
	return edgelq_ai_proto_v1_responses_custom_proto_rawDescData
}

var edgelq_ai_proto_v1_responses_custom_proto_msgTypes = make([]protoimpl.MessageInfo, 14)
var edgelq_ai_proto_v1_responses_custom_proto_goTypes = []interface{}{
	(*CreateResponseRequest)(nil),             // 0: ntt.ai.v1.CreateResponseRequest
	(*CreateRequest)(nil),                     // 1: ntt.ai.v1.CreateRequest
	(*CreateResponseResult)(nil),              // 2: ntt.ai.v1.CreateResponseResult
	(*ResponseStarted)(nil),                   // 3: ntt.ai.v1.ResponseStarted
	(*ToolInfo)(nil),                          // 4: ntt.ai.v1.ToolInfo
	(*ModelCapabilities)(nil),                 // 5: ntt.ai.v1.ModelCapabilities
	(*ContentDelta)(nil),                      // 6: ntt.ai.v1.ContentDelta
	(*ContentDone)(nil),                       // 7: ntt.ai.v1.ContentDone
	(*ThinkingDelta)(nil),                     // 8: ntt.ai.v1.ThinkingDelta
	(*ThinkingDone)(nil),                      // 9: ntt.ai.v1.ThinkingDone
	(*CitationDelta)(nil),                     // 10: ntt.ai.v1.CitationDelta
	(*ResponseComplete)(nil),                  // 11: ntt.ai.v1.ResponseComplete
	(*Error)(nil),                             // 12: ntt.ai.v1.Error
	nil,                                       // 13: ntt.ai.v1.CreateRequest.PromptVariablesEntry
	(*common_client.Message)(nil),             // 14: ntt.ai.v1.Message
	(*common_client.ToolDefinition)(nil),      // 15: ntt.ai.v1.ToolDefinition
	(*common_client.ConnectorsList)(nil),      // 16: ntt.ai.v1.ConnectorsList
	(common_client.ReasoningLevel)(0),         // 17: ntt.ai.v1.ReasoningLevel
	(*common_client.ToolCalls)(nil),           // 18: ntt.ai.v1.ToolCalls
	(*common_client.ClientToolSource)(nil),    // 19: ntt.ai.v1.ClientToolSource
	(*common_client.ConnectorToolSource)(nil), // 20: ntt.ai.v1.ConnectorToolSource
	(*common_client.InternalToolSource)(nil),  // 21: ntt.ai.v1.InternalToolSource
	(*common_client.Citation)(nil),            // 22: ntt.ai.v1.Citation
	(common_client.StopReason)(0),             // 23: ntt.ai.v1.StopReason
	(*common_client.TokenUsage)(nil),          // 24: ntt.ai.v1.TokenUsage
}
var edgelq_ai_proto_v1_responses_custom_proto_depIdxs = []int32{
	1,  // 0: ntt.ai.v1.CreateResponseRequest.create_request:type_name -> ntt.ai.v1.CreateRequest
	14, // 1: ntt.ai.v1.CreateRequest.messages:type_name -> ntt.ai.v1.Message
	15, // 2: ntt.ai.v1.CreateRequest.client_tools:type_name -> ntt.ai.v1.ToolDefinition
	16, // 3: ntt.ai.v1.CreateRequest.connectors:type_name -> ntt.ai.v1.ConnectorsList
	17, // 4: ntt.ai.v1.CreateRequest.reasoning_level:type_name -> ntt.ai.v1.ReasoningLevel
	13, // 5: ntt.ai.v1.CreateRequest.prompt_variables:type_name -> ntt.ai.v1.CreateRequest.PromptVariablesEntry
	3,  // 6: ntt.ai.v1.CreateResponseResult.response_started:type_name -> ntt.ai.v1.ResponseStarted
	6,  // 7: ntt.ai.v1.CreateResponseResult.content_delta:type_name -> ntt.ai.v1.ContentDelta
	7,  // 8: ntt.ai.v1.CreateResponseResult.content_done:type_name -> ntt.ai.v1.ContentDone
	8,  // 9: ntt.ai.v1.CreateResponseResult.thinking_delta:type_name -> ntt.ai.v1.ThinkingDelta
	9,  // 10: ntt.ai.v1.CreateResponseResult.thinking_done:type_name -> ntt.ai.v1.ThinkingDone
	18, // 11: ntt.ai.v1.CreateResponseResult.tool_calls:type_name -> ntt.ai.v1.ToolCalls
	11, // 12: ntt.ai.v1.CreateResponseResult.response_complete:type_name -> ntt.ai.v1.ResponseComplete
	12, // 13: ntt.ai.v1.CreateResponseResult.error:type_name -> ntt.ai.v1.Error
	10, // 14: ntt.ai.v1.CreateResponseResult.citation_delta:type_name -> ntt.ai.v1.CitationDelta
	4,  // 15: ntt.ai.v1.ResponseStarted.available_tools:type_name -> ntt.ai.v1.ToolInfo
	5,  // 16: ntt.ai.v1.ResponseStarted.capabilities:type_name -> ntt.ai.v1.ModelCapabilities
	19, // 17: ntt.ai.v1.ToolInfo.client:type_name -> ntt.ai.v1.ClientToolSource
	20, // 18: ntt.ai.v1.ToolInfo.connector:type_name -> ntt.ai.v1.ConnectorToolSource
	21, // 19: ntt.ai.v1.ToolInfo.internal:type_name -> ntt.ai.v1.InternalToolSource
	22, // 20: ntt.ai.v1.CitationDelta.citation:type_name -> ntt.ai.v1.Citation
	23, // 21: ntt.ai.v1.ResponseComplete.stop_reason:type_name -> ntt.ai.v1.StopReason
	24, // 22: ntt.ai.v1.ResponseComplete.usage:type_name -> ntt.ai.v1.TokenUsage
	24, // 23: ntt.ai.v1.ResponseComplete.cumulative_usage:type_name -> ntt.ai.v1.TokenUsage
	24, // [24:24] is the sub-list for method output_type
	24, // [24:24] is the sub-list for method input_type
	24, // [24:24] is the sub-list for extension type_name
	24, // [24:24] is the sub-list for extension extendee
	0,  // [0:24] is the sub-list for field type_name
}

func init() { edgelq_ai_proto_v1_responses_custom_proto_init() }
func edgelq_ai_proto_v1_responses_custom_proto_init() {
	if edgelq_ai_proto_v1_responses_custom_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {

		edgelq_ai_proto_v1_responses_custom_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateResponseRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		edgelq_ai_proto_v1_responses_custom_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		edgelq_ai_proto_v1_responses_custom_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateResponseResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		edgelq_ai_proto_v1_responses_custom_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResponseStarted); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		edgelq_ai_proto_v1_responses_custom_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ToolInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		edgelq_ai_proto_v1_responses_custom_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModelCapabilities); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		edgelq_ai_proto_v1_responses_custom_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ContentDelta); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		edgelq_ai_proto_v1_responses_custom_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ContentDone); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		edgelq_ai_proto_v1_responses_custom_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ThinkingDelta); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		edgelq_ai_proto_v1_responses_custom_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ThinkingDone); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		edgelq_ai_proto_v1_responses_custom_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CitationDelta); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		edgelq_ai_proto_v1_responses_custom_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResponseComplete); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		edgelq_ai_proto_v1_responses_custom_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Error); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}

	edgelq_ai_proto_v1_responses_custom_proto_msgTypes[1].OneofWrappers = []interface{}{
		(*CreateRequest_CapabilityTemplate)(nil),
		(*CreateRequest_Connectors)(nil),
	}
	edgelq_ai_proto_v1_responses_custom_proto_msgTypes[2].OneofWrappers = []interface{}{
		(*CreateResponseResult_ResponseStarted)(nil),
		(*CreateResponseResult_ContentDelta)(nil),
		(*CreateResponseResult_ContentDone)(nil),
		(*CreateResponseResult_ThinkingDelta)(nil),
		(*CreateResponseResult_ThinkingDone)(nil),
		(*CreateResponseResult_ToolCalls)(nil),
		(*CreateResponseResult_ResponseComplete)(nil),
		(*CreateResponseResult_Error)(nil),
		(*CreateResponseResult_CitationDelta)(nil),
	}
	edgelq_ai_proto_v1_responses_custom_proto_msgTypes[4].OneofWrappers = []interface{}{
		(*ToolInfo_Client)(nil),
		(*ToolInfo_Connector)(nil),
		(*ToolInfo_Internal)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: edgelq_ai_proto_v1_responses_custom_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   14,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           edgelq_ai_proto_v1_responses_custom_proto_goTypes,
		DependencyIndexes: edgelq_ai_proto_v1_responses_custom_proto_depIdxs,
		MessageInfos:      edgelq_ai_proto_v1_responses_custom_proto_msgTypes,
	}.Build()
	edgelq_ai_proto_v1_responses_custom_proto = out.File
	edgelq_ai_proto_v1_responses_custom_proto_rawDesc = nil
	edgelq_ai_proto_v1_responses_custom_proto_goTypes = nil
	edgelq_ai_proto_v1_responses_custom_proto_depIdxs = nil
}
