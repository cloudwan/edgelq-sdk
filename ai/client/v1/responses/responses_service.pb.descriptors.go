// Code generated by protoc-gen-goten-client
// API: ResponsesService
// DO NOT EDIT!!!

package responses_client

import (
	"google.golang.org/protobuf/proto"

	gotenclient "github.com/cloudwan/goten-sdk/runtime/client"
	gotenresource "github.com/cloudwan/goten-sdk/runtime/resource"
)

// proto imports
import ()

// Reference imports to suppress errors if they are not otherwise used.
var (
	_ = new(proto.Message)
	_ = new(gotenclient.MethodDescriptor)
	_ = gotenresource.WildcardId
)

// make sure we're using proto imports
var ()

var (
	descriptorsInitialized     bool
	responsesServiceDescriptor *ResponsesServiceDescriptor
	createResponseDescriptor   *CreateResponseDescriptor
)

type CreateResponseDescriptor struct{}

type CreateResponseDescriptorClientMsgHandle struct{}

type CreateResponseDescriptorServerMsgHandle struct{}

func (d *CreateResponseDescriptor) NewEmptyClientMsg() proto.Message {
	return &CreateResponseRequest{}
}

func (d *CreateResponseDescriptor) NewEmptyServerMsg() proto.Message {
	return &CreateResponseResult{}
}

func (d *CreateResponseDescriptor) IsUnary() bool {
	return false
}

func (d *CreateResponseDescriptor) IsClientStream() bool {
	return false
}

func (d *CreateResponseDescriptor) IsServerStream() bool {
	return true
}

func (d *CreateResponseDescriptor) IsCollection() bool {
	return false
}

func (d *CreateResponseDescriptor) IsPlural() bool {
	return false
}

func (d *CreateResponseDescriptor) HasResource() bool {
	return false
}

func (d *CreateResponseDescriptor) RequestHasResourceBody() bool {
	return false
}

func (d *CreateResponseDescriptor) GetVerb() string {
	return "createResponse"
}

func (d *CreateResponseDescriptor) GetMethodName() string {
	return "CreateResponse"
}

func (d *CreateResponseDescriptor) GetFullMethodName() string {
	return "/ntt.ai.v1.ResponsesService/CreateResponse"
}

func (d *CreateResponseDescriptor) GetProtoPkgName() string {
	return "ntt.ai.v1"
}

func (d *CreateResponseDescriptor) GetApiName() string {
	return "ResponsesService"
}

func (d *CreateResponseDescriptor) GetServiceDomain() string {
	return "ai.edgelq.com"
}

func (d *CreateResponseDescriptor) GetServiceVersion() string {
	return "v1"
}

func (d *CreateResponseDescriptor) GetApiDescriptor() gotenclient.ApiDescriptor {
	return responsesServiceDescriptor
}

func (d *CreateResponseDescriptor) GetResourceDescriptor() gotenresource.Descriptor {
	return nil
}

func (d *CreateResponseDescriptor) GetClientMsgReflectHandle() gotenclient.MethodMsgHandle {
	return &CreateResponseDescriptorClientMsgHandle{}
}

func (d *CreateResponseDescriptor) GetServerMsgReflectHandle() gotenclient.MethodMsgHandle {
	return &CreateResponseDescriptorServerMsgHandle{}
}

func (h *CreateResponseDescriptorClientMsgHandle) ExtractResourceName(msg proto.Message) gotenresource.Name {
	return nil
}

func (h *CreateResponseDescriptorClientMsgHandle) ExtractResourceNames(msg proto.Message) gotenresource.NameList {
	return nil
}

func (h *CreateResponseDescriptorClientMsgHandle) ExtractCollectionName(msg proto.Message) gotenresource.Name {
	return nil
}

func (h *CreateResponseDescriptorClientMsgHandle) ExtractResourceBody(msg proto.Message) gotenresource.Resource {
	return nil
}

func (h *CreateResponseDescriptorClientMsgHandle) ExtractResourceBodies(msg proto.Message) gotenresource.ResourceList {
	return nil
}

func (h *CreateResponseDescriptorServerMsgHandle) ExtractResourceName(msg proto.Message) gotenresource.Name {
	return nil
}

func (h *CreateResponseDescriptorServerMsgHandle) ExtractResourceNames(msg proto.Message) gotenresource.NameList {
	return nil
}

func (h *CreateResponseDescriptorServerMsgHandle) ExtractCollectionName(msg proto.Message) gotenresource.Name {
	return nil
}

func (h *CreateResponseDescriptorServerMsgHandle) ExtractResourceBody(msg proto.Message) gotenresource.Resource {
	return nil
}

func (h *CreateResponseDescriptorServerMsgHandle) ExtractResourceBodies(msg proto.Message) gotenresource.ResourceList {
	return nil
}

func GetCreateResponseDescriptor() *CreateResponseDescriptor {
	return createResponseDescriptor
}

type ResponsesServiceDescriptor struct{}

func (d *ResponsesServiceDescriptor) AllMethodDescriptors() []gotenclient.MethodDescriptor {
	return []gotenclient.MethodDescriptor{
		createResponseDescriptor,
	}
}

func (d *ResponsesServiceDescriptor) GetFullAPIName() string {
	return "/ntt.ai.v1.ResponsesService"
}

func (d *ResponsesServiceDescriptor) GetProtoPkgName() string {
	return "ntt.ai.v1"
}

func (d *ResponsesServiceDescriptor) GetApiName() string {
	return "ResponsesService"
}

func (d *ResponsesServiceDescriptor) GetServiceDomain() string {
	return "ai.edgelq.com"
}

func (d *ResponsesServiceDescriptor) GetServiceVersion() string {
	return "v1"
}

func GetResponsesServiceDescriptor() *ResponsesServiceDescriptor {
	return responsesServiceDescriptor
}

func initDescriptors() {
	responsesServiceDescriptor = &ResponsesServiceDescriptor{}
	createResponseDescriptor = &CreateResponseDescriptor{}
	gotenclient.GetRegistry().RegisterApiDescriptor(responsesServiceDescriptor)
	gotenclient.GetRegistry().RegisterMethodDescriptor(createResponseDescriptor)
}

func init() {
	if !descriptorsInitialized {
		initDescriptors()
		descriptorsInitialized = true
	}
}
