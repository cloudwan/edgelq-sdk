// Code generated by protoc-gen-goten-go
// File: edgelq/ai/proto/v1/common.proto
// DO NOT EDIT!!!

package common_client

import (
	"fmt"
	"reflect"
	"sync"

	"google.golang.org/protobuf/encoding/protojson"
	"google.golang.org/protobuf/proto"
	preflect "google.golang.org/protobuf/reflect/protoreflect"
	"google.golang.org/protobuf/runtime/protoimpl"
)

// proto imports
import ()

// Reference imports to suppress errors if they are not otherwise used.
var (
	_ = fmt.Errorf
	_ = reflect.Method{}
	_ = sync.Once{}

	_ = protojson.MarshalOptions{}
	_ = proto.MarshalOptions{}
	_ = preflect.Value{}
	_ = protoimpl.DescBuilder{}
)

// make sure we're using proto imports
var ()

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Content channel type
type ContentChannel int32

const (
	ContentChannel_CONTENT_CHANNEL_UNSPECIFIED ContentChannel = 0
	ContentChannel_CONTENT_CHANNEL_CONTENT     ContentChannel = 1
	ContentChannel_CONTENT_CHANNEL_THINKING    ContentChannel = 2
)

var (
	ContentChannel_name = map[int32]string{
		0: "CONTENT_CHANNEL_UNSPECIFIED",
		1: "CONTENT_CHANNEL_CONTENT",
		2: "CONTENT_CHANNEL_THINKING",
	}

	ContentChannel_value = map[string]int32{
		"CONTENT_CHANNEL_UNSPECIFIED": 0,
		"CONTENT_CHANNEL_CONTENT":     1,
		"CONTENT_CHANNEL_THINKING":    2,
	}
)

func (x ContentChannel) Enum() *ContentChannel {
	p := new(ContentChannel)
	*p = x
	return p
}

func (x ContentChannel) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), preflect.EnumNumber(x))
}

func (ContentChannel) Descriptor() preflect.EnumDescriptor {
	return edgelq_ai_proto_v1_common_proto_enumTypes[0].Descriptor()
}

func (ContentChannel) Type() preflect.EnumType {
	return &edgelq_ai_proto_v1_common_proto_enumTypes[0]
}

func (x ContentChannel) Number() preflect.EnumNumber {
	return preflect.EnumNumber(x)
}

// Deprecated, Use ContentChannel.ProtoReflect.Descriptor instead.
func (ContentChannel) EnumDescriptor() ([]byte, []int) {
	return edgelq_ai_proto_v1_common_proto_rawDescGZIP(), []int{0}
}

// LLM/Provider specific errors
type LLMError int32

const (
	LLMError_LLM_ERROR_UNSPECIFIED LLMError = 0
	LLMError_LLM_RATE_LIMIT        LLMError = 1
	LLMError_LLM_CONTENT_FILTER    LLMError = 2
	LLMError_LLM_PROVIDER_ERROR    LLMError = 3
	LLMError_LLM_TOOL_ERROR        LLMError = 4
)

var (
	LLMError_name = map[int32]string{
		0: "LLM_ERROR_UNSPECIFIED",
		1: "LLM_RATE_LIMIT",
		2: "LLM_CONTENT_FILTER",
		3: "LLM_PROVIDER_ERROR",
		4: "LLM_TOOL_ERROR",
	}

	LLMError_value = map[string]int32{
		"LLM_ERROR_UNSPECIFIED": 0,
		"LLM_RATE_LIMIT":        1,
		"LLM_CONTENT_FILTER":    2,
		"LLM_PROVIDER_ERROR":    3,
		"LLM_TOOL_ERROR":        4,
	}
)

func (x LLMError) Enum() *LLMError {
	p := new(LLMError)
	*p = x
	return p
}

func (x LLMError) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), preflect.EnumNumber(x))
}

func (LLMError) Descriptor() preflect.EnumDescriptor {
	return edgelq_ai_proto_v1_common_proto_enumTypes[1].Descriptor()
}

func (LLMError) Type() preflect.EnumType {
	return &edgelq_ai_proto_v1_common_proto_enumTypes[1]
}

func (x LLMError) Number() preflect.EnumNumber {
	return preflect.EnumNumber(x)
}

// Deprecated, Use LLMError.ProtoReflect.Descriptor instead.
func (LLMError) EnumDescriptor() ([]byte, []int) {
	return edgelq_ai_proto_v1_common_proto_rawDescGZIP(), []int{1}
}

// Reasoning/thinking level for AI models
type ReasoningLevel int32

const (
	ReasoningLevel_REASONING_LEVEL_DEFAULT ReasoningLevel = 0
	ReasoningLevel_REASONING_LEVEL_LOW     ReasoningLevel = 1
	ReasoningLevel_REASONING_LEVEL_MEDIUM  ReasoningLevel = 2
	ReasoningLevel_REASONING_LEVEL_HIGH    ReasoningLevel = 3
)

var (
	ReasoningLevel_name = map[int32]string{
		0: "REASONING_LEVEL_DEFAULT",
		1: "REASONING_LEVEL_LOW",
		2: "REASONING_LEVEL_MEDIUM",
		3: "REASONING_LEVEL_HIGH",
	}

	ReasoningLevel_value = map[string]int32{
		"REASONING_LEVEL_DEFAULT": 0,
		"REASONING_LEVEL_LOW":     1,
		"REASONING_LEVEL_MEDIUM":  2,
		"REASONING_LEVEL_HIGH":    3,
	}
)

func (x ReasoningLevel) Enum() *ReasoningLevel {
	p := new(ReasoningLevel)
	*p = x
	return p
}

func (x ReasoningLevel) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), preflect.EnumNumber(x))
}

func (ReasoningLevel) Descriptor() preflect.EnumDescriptor {
	return edgelq_ai_proto_v1_common_proto_enumTypes[2].Descriptor()
}

func (ReasoningLevel) Type() preflect.EnumType {
	return &edgelq_ai_proto_v1_common_proto_enumTypes[2]
}

func (x ReasoningLevel) Number() preflect.EnumNumber {
	return preflect.EnumNumber(x)
}

// Deprecated, Use ReasoningLevel.ProtoReflect.Descriptor instead.
func (ReasoningLevel) EnumDescriptor() ([]byte, []int) {
	return edgelq_ai_proto_v1_common_proto_rawDescGZIP(), []int{2}
}

// Message structure for conversations
type Message struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
	Role          string         `protobuf:"bytes,1,opt,name=role,proto3" json:"role,omitempty"`
	Parts         []*ContentPart `protobuf:"bytes,2,rep,name=parts,proto3" json:"parts,omitempty"`
}

func (m *Message) Reset() {
	*m = Message{}
	if protoimpl.UnsafeEnabled {
		mi := &edgelq_ai_proto_v1_common_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(m))
		ms.StoreMessageInfo(mi)
	}
}

func (m *Message) String() string {
	return protoimpl.X.MessageStringOf(m)
}

func (*Message) ProtoMessage() {}

func (m *Message) ProtoReflect() preflect.Message {
	mi := &edgelq_ai_proto_v1_common_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && m != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(m))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(m)
}

func (*Message) GotenMessage() {}

// Deprecated, Use Message.ProtoReflect.Descriptor instead.
func (*Message) Descriptor() ([]byte, []int) {
	return edgelq_ai_proto_v1_common_proto_rawDescGZIP(), []int{0}
}

func (m *Message) Unmarshal(b []byte) error {
	return proto.Unmarshal(b, m)
}

func (m *Message) Marshal() ([]byte, error) {
	return proto.Marshal(m)
}

func (m *Message) MarshalJSON() ([]byte, error) {
	return protojson.MarshalOptions{}.Marshal(m)
}

func (m *Message) UnmarshalJSON(data []byte) error {
	return protojson.Unmarshal(data, m)
}

func (m *Message) GetRole() string {
	if m != nil {
		return m.Role
	}
	return ""
}

func (m *Message) GetParts() []*ContentPart {
	if m != nil {
		return m.Parts
	}
	return nil
}

func (m *Message) SetRole(fv string) {
	if m == nil {
		panic(fmt.Errorf("can't set %s on nil %s", "Role", "Message"))
	}
	m.Role = fv
}

func (m *Message) SetParts(fv []*ContentPart) {
	if m == nil {
		panic(fmt.Errorf("can't set %s on nil %s", "Parts", "Message"))
	}
	m.Parts = fv
}

// Multimodal content part
type ContentPart struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
	// Types that are valid to be assigned to Content:
	//	*ContentPart_Text
	//	*ContentPart_Image
	//	*ContentPart_Audio
	//	*ContentPart_File
	//	*ContentPart_ToolCall
	//	*ContentPart_ToolResult
	//	*ContentPart_Thinking
	Content isContentPart_Content `protobuf_oneof:"content"`
}

func (m *ContentPart) Reset() {
	*m = ContentPart{}
	if protoimpl.UnsafeEnabled {
		mi := &edgelq_ai_proto_v1_common_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(m))
		ms.StoreMessageInfo(mi)
	}
}

func (m *ContentPart) String() string {
	return protoimpl.X.MessageStringOf(m)
}

func (*ContentPart) ProtoMessage() {}

func (m *ContentPart) ProtoReflect() preflect.Message {
	mi := &edgelq_ai_proto_v1_common_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && m != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(m))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(m)
}

func (*ContentPart) GotenMessage() {}

// Deprecated, Use ContentPart.ProtoReflect.Descriptor instead.
func (*ContentPart) Descriptor() ([]byte, []int) {
	return edgelq_ai_proto_v1_common_proto_rawDescGZIP(), []int{1}
}

func (m *ContentPart) Unmarshal(b []byte) error {
	return proto.Unmarshal(b, m)
}

func (m *ContentPart) Marshal() ([]byte, error) {
	return proto.Marshal(m)
}

func (m *ContentPart) MarshalJSON() ([]byte, error) {
	return protojson.MarshalOptions{}.Marshal(m)
}

func (m *ContentPart) UnmarshalJSON(data []byte) error {
	return protojson.Unmarshal(data, m)
}

type isContentPart_Content interface {
	isContentPart_Content()
}

type ContentPart_Text struct {
	Text *TextContent `protobuf:"bytes,1,opt,name=text,proto3,oneof"`
}
type ContentPart_Image struct {
	Image *ImageContent `protobuf:"bytes,2,opt,name=image,proto3,oneof"`
}
type ContentPart_Audio struct {
	Audio *AudioContent `protobuf:"bytes,3,opt,name=audio,proto3,oneof"`
}
type ContentPart_File struct {
	File *FileContent `protobuf:"bytes,4,opt,name=file,proto3,oneof"`
}
type ContentPart_ToolCall struct {
	ToolCall *ToolCallContent `protobuf:"bytes,5,opt,name=tool_call,json=toolCall,proto3,oneof"`
}
type ContentPart_ToolResult struct {
	ToolResult *ToolResultContent `protobuf:"bytes,6,opt,name=tool_result,json=toolResult,proto3,oneof"`
}
type ContentPart_Thinking struct {
	Thinking *ThinkingContent `protobuf:"bytes,7,opt,name=thinking,proto3,oneof"`
}

func (*ContentPart_Text) isContentPart_Content()       {}
func (*ContentPart_Image) isContentPart_Content()      {}
func (*ContentPart_Audio) isContentPart_Content()      {}
func (*ContentPart_File) isContentPart_Content()       {}
func (*ContentPart_ToolCall) isContentPart_Content()   {}
func (*ContentPart_ToolResult) isContentPart_Content() {}
func (*ContentPart_Thinking) isContentPart_Content()   {}
func (m *ContentPart) GetContent() isContentPart_Content {
	if m != nil {
		return m.Content
	}
	return nil
}
func (m *ContentPart) GetText() *TextContent {
	if x, ok := m.GetContent().(*ContentPart_Text); ok {
		return x.Text
	}
	return nil
}
func (m *ContentPart) GetImage() *ImageContent {
	if x, ok := m.GetContent().(*ContentPart_Image); ok {
		return x.Image
	}
	return nil
}
func (m *ContentPart) GetAudio() *AudioContent {
	if x, ok := m.GetContent().(*ContentPart_Audio); ok {
		return x.Audio
	}
	return nil
}
func (m *ContentPart) GetFile() *FileContent {
	if x, ok := m.GetContent().(*ContentPart_File); ok {
		return x.File
	}
	return nil
}
func (m *ContentPart) GetToolCall() *ToolCallContent {
	if x, ok := m.GetContent().(*ContentPart_ToolCall); ok {
		return x.ToolCall
	}
	return nil
}
func (m *ContentPart) GetToolResult() *ToolResultContent {
	if x, ok := m.GetContent().(*ContentPart_ToolResult); ok {
		return x.ToolResult
	}
	return nil
}
func (m *ContentPart) GetThinking() *ThinkingContent {
	if x, ok := m.GetContent().(*ContentPart_Thinking); ok {
		return x.Thinking
	}
	return nil
}
func (m *ContentPart) SetContent(ofv isContentPart_Content) {
	if m == nil {
		panic(fmt.Errorf("can't set %s on nil %s", "isContentPart_Content", "ContentPart"))
	}
	m.Content = ofv
}
func (m *ContentPart) SetText(fv *TextContent) {
	m.SetContent(&ContentPart_Text{Text: fv})
}
func (m *ContentPart) SetImage(fv *ImageContent) {
	m.SetContent(&ContentPart_Image{Image: fv})
}
func (m *ContentPart) SetAudio(fv *AudioContent) {
	m.SetContent(&ContentPart_Audio{Audio: fv})
}
func (m *ContentPart) SetFile(fv *FileContent) {
	m.SetContent(&ContentPart_File{File: fv})
}
func (m *ContentPart) SetToolCall(fv *ToolCallContent) {
	m.SetContent(&ContentPart_ToolCall{ToolCall: fv})
}
func (m *ContentPart) SetToolResult(fv *ToolResultContent) {
	m.SetContent(&ContentPart_ToolResult{ToolResult: fv})
}
func (m *ContentPart) SetThinking(fv *ThinkingContent) {
	m.SetContent(&ContentPart_Thinking{Thinking: fv})
}

type TextContent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
	Text          string `protobuf:"bytes,1,opt,name=text,proto3" json:"text,omitempty"`
}

func (m *TextContent) Reset() {
	*m = TextContent{}
	if protoimpl.UnsafeEnabled {
		mi := &edgelq_ai_proto_v1_common_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(m))
		ms.StoreMessageInfo(mi)
	}
}

func (m *TextContent) String() string {
	return protoimpl.X.MessageStringOf(m)
}

func (*TextContent) ProtoMessage() {}

func (m *TextContent) ProtoReflect() preflect.Message {
	mi := &edgelq_ai_proto_v1_common_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && m != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(m))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(m)
}

func (*TextContent) GotenMessage() {}

// Deprecated, Use TextContent.ProtoReflect.Descriptor instead.
func (*TextContent) Descriptor() ([]byte, []int) {
	return edgelq_ai_proto_v1_common_proto_rawDescGZIP(), []int{2}
}

func (m *TextContent) Unmarshal(b []byte) error {
	return proto.Unmarshal(b, m)
}

func (m *TextContent) Marshal() ([]byte, error) {
	return proto.Marshal(m)
}

func (m *TextContent) MarshalJSON() ([]byte, error) {
	return protojson.MarshalOptions{}.Marshal(m)
}

func (m *TextContent) UnmarshalJSON(data []byte) error {
	return protojson.Unmarshal(data, m)
}

func (m *TextContent) GetText() string {
	if m != nil {
		return m.Text
	}
	return ""
}

func (m *TextContent) SetText(fv string) {
	if m == nil {
		panic(fmt.Errorf("can't set %s on nil %s", "Text", "TextContent"))
	}
	m.Text = fv
}

type ImageContent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
	MimeType      string `protobuf:"bytes,3,opt,name=mime_type,json=mimeType,proto3" json:"mime_type,omitempty"`
	// Types that are valid to be assigned to Source:
	//	*ImageContent_Url
	//	*ImageContent_Data
	Source isImageContent_Source `protobuf_oneof:"source"`
}

func (m *ImageContent) Reset() {
	*m = ImageContent{}
	if protoimpl.UnsafeEnabled {
		mi := &edgelq_ai_proto_v1_common_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(m))
		ms.StoreMessageInfo(mi)
	}
}

func (m *ImageContent) String() string {
	return protoimpl.X.MessageStringOf(m)
}

func (*ImageContent) ProtoMessage() {}

func (m *ImageContent) ProtoReflect() preflect.Message {
	mi := &edgelq_ai_proto_v1_common_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && m != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(m))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(m)
}

func (*ImageContent) GotenMessage() {}

// Deprecated, Use ImageContent.ProtoReflect.Descriptor instead.
func (*ImageContent) Descriptor() ([]byte, []int) {
	return edgelq_ai_proto_v1_common_proto_rawDescGZIP(), []int{3}
}

func (m *ImageContent) Unmarshal(b []byte) error {
	return proto.Unmarshal(b, m)
}

func (m *ImageContent) Marshal() ([]byte, error) {
	return proto.Marshal(m)
}

func (m *ImageContent) MarshalJSON() ([]byte, error) {
	return protojson.MarshalOptions{}.Marshal(m)
}

func (m *ImageContent) UnmarshalJSON(data []byte) error {
	return protojson.Unmarshal(data, m)
}

type isImageContent_Source interface {
	isImageContent_Source()
}

type ImageContent_Url struct {
	Url string `protobuf:"bytes,1,opt,name=url,proto3,oneof"`
}
type ImageContent_Data struct {
	Data []byte `protobuf:"bytes,2,opt,name=data,proto3,oneof"`
}

func (*ImageContent_Url) isImageContent_Source()  {}
func (*ImageContent_Data) isImageContent_Source() {}
func (m *ImageContent) GetMimeType() string {
	if m != nil {
		return m.MimeType
	}
	return ""
}

func (m *ImageContent) GetSource() isImageContent_Source {
	if m != nil {
		return m.Source
	}
	return nil
}
func (m *ImageContent) GetUrl() string {
	if x, ok := m.GetSource().(*ImageContent_Url); ok {
		return x.Url
	}
	return ""
}
func (m *ImageContent) GetData() []byte {
	if x, ok := m.GetSource().(*ImageContent_Data); ok {
		return x.Data
	}
	return nil
}
func (m *ImageContent) SetMimeType(fv string) {
	if m == nil {
		panic(fmt.Errorf("can't set %s on nil %s", "MimeType", "ImageContent"))
	}
	m.MimeType = fv
}

func (m *ImageContent) SetSource(ofv isImageContent_Source) {
	if m == nil {
		panic(fmt.Errorf("can't set %s on nil %s", "isImageContent_Source", "ImageContent"))
	}
	m.Source = ofv
}
func (m *ImageContent) SetUrl(fv string) {
	m.SetSource(&ImageContent_Url{Url: fv})
}
func (m *ImageContent) SetData(fv []byte) {
	m.SetSource(&ImageContent_Data{Data: fv})
}

type AudioContent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
	MimeType      string `protobuf:"bytes,3,opt,name=mime_type,json=mimeType,proto3" json:"mime_type,omitempty"`
	// Types that are valid to be assigned to Source:
	//	*AudioContent_Url
	//	*AudioContent_Data
	Source isAudioContent_Source `protobuf_oneof:"source"`
}

func (m *AudioContent) Reset() {
	*m = AudioContent{}
	if protoimpl.UnsafeEnabled {
		mi := &edgelq_ai_proto_v1_common_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(m))
		ms.StoreMessageInfo(mi)
	}
}

func (m *AudioContent) String() string {
	return protoimpl.X.MessageStringOf(m)
}

func (*AudioContent) ProtoMessage() {}

func (m *AudioContent) ProtoReflect() preflect.Message {
	mi := &edgelq_ai_proto_v1_common_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && m != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(m))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(m)
}

func (*AudioContent) GotenMessage() {}

// Deprecated, Use AudioContent.ProtoReflect.Descriptor instead.
func (*AudioContent) Descriptor() ([]byte, []int) {
	return edgelq_ai_proto_v1_common_proto_rawDescGZIP(), []int{4}
}

func (m *AudioContent) Unmarshal(b []byte) error {
	return proto.Unmarshal(b, m)
}

func (m *AudioContent) Marshal() ([]byte, error) {
	return proto.Marshal(m)
}

func (m *AudioContent) MarshalJSON() ([]byte, error) {
	return protojson.MarshalOptions{}.Marshal(m)
}

func (m *AudioContent) UnmarshalJSON(data []byte) error {
	return protojson.Unmarshal(data, m)
}

type isAudioContent_Source interface {
	isAudioContent_Source()
}

type AudioContent_Url struct {
	Url string `protobuf:"bytes,1,opt,name=url,proto3,oneof"`
}
type AudioContent_Data struct {
	Data []byte `protobuf:"bytes,2,opt,name=data,proto3,oneof"`
}

func (*AudioContent_Url) isAudioContent_Source()  {}
func (*AudioContent_Data) isAudioContent_Source() {}
func (m *AudioContent) GetMimeType() string {
	if m != nil {
		return m.MimeType
	}
	return ""
}

func (m *AudioContent) GetSource() isAudioContent_Source {
	if m != nil {
		return m.Source
	}
	return nil
}
func (m *AudioContent) GetUrl() string {
	if x, ok := m.GetSource().(*AudioContent_Url); ok {
		return x.Url
	}
	return ""
}
func (m *AudioContent) GetData() []byte {
	if x, ok := m.GetSource().(*AudioContent_Data); ok {
		return x.Data
	}
	return nil
}
func (m *AudioContent) SetMimeType(fv string) {
	if m == nil {
		panic(fmt.Errorf("can't set %s on nil %s", "MimeType", "AudioContent"))
	}
	m.MimeType = fv
}

func (m *AudioContent) SetSource(ofv isAudioContent_Source) {
	if m == nil {
		panic(fmt.Errorf("can't set %s on nil %s", "isAudioContent_Source", "AudioContent"))
	}
	m.Source = ofv
}
func (m *AudioContent) SetUrl(fv string) {
	m.SetSource(&AudioContent_Url{Url: fv})
}
func (m *AudioContent) SetData(fv []byte) {
	m.SetSource(&AudioContent_Data{Data: fv})
}

type FileContent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
	Name          string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	MimeType      string `protobuf:"bytes,2,opt,name=mime_type,json=mimeType,proto3" json:"mime_type,omitempty"`
	// Types that are valid to be assigned to Source:
	//	*FileContent_Url
	//	*FileContent_Data
	Source isFileContent_Source `protobuf_oneof:"source"`
}

func (m *FileContent) Reset() {
	*m = FileContent{}
	if protoimpl.UnsafeEnabled {
		mi := &edgelq_ai_proto_v1_common_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(m))
		ms.StoreMessageInfo(mi)
	}
}

func (m *FileContent) String() string {
	return protoimpl.X.MessageStringOf(m)
}

func (*FileContent) ProtoMessage() {}

func (m *FileContent) ProtoReflect() preflect.Message {
	mi := &edgelq_ai_proto_v1_common_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && m != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(m))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(m)
}

func (*FileContent) GotenMessage() {}

// Deprecated, Use FileContent.ProtoReflect.Descriptor instead.
func (*FileContent) Descriptor() ([]byte, []int) {
	return edgelq_ai_proto_v1_common_proto_rawDescGZIP(), []int{5}
}

func (m *FileContent) Unmarshal(b []byte) error {
	return proto.Unmarshal(b, m)
}

func (m *FileContent) Marshal() ([]byte, error) {
	return proto.Marshal(m)
}

func (m *FileContent) MarshalJSON() ([]byte, error) {
	return protojson.MarshalOptions{}.Marshal(m)
}

func (m *FileContent) UnmarshalJSON(data []byte) error {
	return protojson.Unmarshal(data, m)
}

type isFileContent_Source interface {
	isFileContent_Source()
}

type FileContent_Url struct {
	Url string `protobuf:"bytes,3,opt,name=url,proto3,oneof"`
}
type FileContent_Data struct {
	Data []byte `protobuf:"bytes,4,opt,name=data,proto3,oneof"`
}

func (*FileContent_Url) isFileContent_Source()  {}
func (*FileContent_Data) isFileContent_Source() {}
func (m *FileContent) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *FileContent) GetMimeType() string {
	if m != nil {
		return m.MimeType
	}
	return ""
}

func (m *FileContent) GetSource() isFileContent_Source {
	if m != nil {
		return m.Source
	}
	return nil
}
func (m *FileContent) GetUrl() string {
	if x, ok := m.GetSource().(*FileContent_Url); ok {
		return x.Url
	}
	return ""
}
func (m *FileContent) GetData() []byte {
	if x, ok := m.GetSource().(*FileContent_Data); ok {
		return x.Data
	}
	return nil
}
func (m *FileContent) SetName(fv string) {
	if m == nil {
		panic(fmt.Errorf("can't set %s on nil %s", "Name", "FileContent"))
	}
	m.Name = fv
}

func (m *FileContent) SetMimeType(fv string) {
	if m == nil {
		panic(fmt.Errorf("can't set %s on nil %s", "MimeType", "FileContent"))
	}
	m.MimeType = fv
}

func (m *FileContent) SetSource(ofv isFileContent_Source) {
	if m == nil {
		panic(fmt.Errorf("can't set %s on nil %s", "isFileContent_Source", "FileContent"))
	}
	m.Source = ofv
}
func (m *FileContent) SetUrl(fv string) {
	m.SetSource(&FileContent_Url{Url: fv})
}
func (m *FileContent) SetData(fv []byte) {
	m.SetSource(&FileContent_Data{Data: fv})
}

type ToolCallContent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
	Id            string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name          string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Input         string `protobuf:"bytes,3,opt,name=input,proto3" json:"input,omitempty"`
}

func (m *ToolCallContent) Reset() {
	*m = ToolCallContent{}
	if protoimpl.UnsafeEnabled {
		mi := &edgelq_ai_proto_v1_common_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(m))
		ms.StoreMessageInfo(mi)
	}
}

func (m *ToolCallContent) String() string {
	return protoimpl.X.MessageStringOf(m)
}

func (*ToolCallContent) ProtoMessage() {}

func (m *ToolCallContent) ProtoReflect() preflect.Message {
	mi := &edgelq_ai_proto_v1_common_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && m != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(m))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(m)
}

func (*ToolCallContent) GotenMessage() {}

// Deprecated, Use ToolCallContent.ProtoReflect.Descriptor instead.
func (*ToolCallContent) Descriptor() ([]byte, []int) {
	return edgelq_ai_proto_v1_common_proto_rawDescGZIP(), []int{6}
}

func (m *ToolCallContent) Unmarshal(b []byte) error {
	return proto.Unmarshal(b, m)
}

func (m *ToolCallContent) Marshal() ([]byte, error) {
	return proto.Marshal(m)
}

func (m *ToolCallContent) MarshalJSON() ([]byte, error) {
	return protojson.MarshalOptions{}.Marshal(m)
}

func (m *ToolCallContent) UnmarshalJSON(data []byte) error {
	return protojson.Unmarshal(data, m)
}

func (m *ToolCallContent) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *ToolCallContent) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ToolCallContent) GetInput() string {
	if m != nil {
		return m.Input
	}
	return ""
}

func (m *ToolCallContent) SetId(fv string) {
	if m == nil {
		panic(fmt.Errorf("can't set %s on nil %s", "Id", "ToolCallContent"))
	}
	m.Id = fv
}

func (m *ToolCallContent) SetName(fv string) {
	if m == nil {
		panic(fmt.Errorf("can't set %s on nil %s", "Name", "ToolCallContent"))
	}
	m.Name = fv
}

func (m *ToolCallContent) SetInput(fv string) {
	if m == nil {
		panic(fmt.Errorf("can't set %s on nil %s", "Input", "ToolCallContent"))
	}
	m.Input = fv
}

type ToolResultContent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
	ToolCallId    string `protobuf:"bytes,1,opt,name=tool_call_id,json=toolCallId,proto3" json:"tool_call_id,omitempty"`
	// Types that are valid to be assigned to Result:
	//	*ToolResultContent_Content
	//	*ToolResultContent_Error
	Result isToolResultContent_Result `protobuf_oneof:"result"`
}

func (m *ToolResultContent) Reset() {
	*m = ToolResultContent{}
	if protoimpl.UnsafeEnabled {
		mi := &edgelq_ai_proto_v1_common_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(m))
		ms.StoreMessageInfo(mi)
	}
}

func (m *ToolResultContent) String() string {
	return protoimpl.X.MessageStringOf(m)
}

func (*ToolResultContent) ProtoMessage() {}

func (m *ToolResultContent) ProtoReflect() preflect.Message {
	mi := &edgelq_ai_proto_v1_common_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && m != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(m))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(m)
}

func (*ToolResultContent) GotenMessage() {}

// Deprecated, Use ToolResultContent.ProtoReflect.Descriptor instead.
func (*ToolResultContent) Descriptor() ([]byte, []int) {
	return edgelq_ai_proto_v1_common_proto_rawDescGZIP(), []int{7}
}

func (m *ToolResultContent) Unmarshal(b []byte) error {
	return proto.Unmarshal(b, m)
}

func (m *ToolResultContent) Marshal() ([]byte, error) {
	return proto.Marshal(m)
}

func (m *ToolResultContent) MarshalJSON() ([]byte, error) {
	return protojson.MarshalOptions{}.Marshal(m)
}

func (m *ToolResultContent) UnmarshalJSON(data []byte) error {
	return protojson.Unmarshal(data, m)
}

type isToolResultContent_Result interface {
	isToolResultContent_Result()
}

type ToolResultContent_Content struct {
	Content string `protobuf:"bytes,2,opt,name=content,proto3,oneof"`
}
type ToolResultContent_Error struct {
	Error string `protobuf:"bytes,3,opt,name=error,proto3,oneof"`
}

func (*ToolResultContent_Content) isToolResultContent_Result() {}
func (*ToolResultContent_Error) isToolResultContent_Result()   {}
func (m *ToolResultContent) GetToolCallId() string {
	if m != nil {
		return m.ToolCallId
	}
	return ""
}

func (m *ToolResultContent) GetResult() isToolResultContent_Result {
	if m != nil {
		return m.Result
	}
	return nil
}
func (m *ToolResultContent) GetContent() string {
	if x, ok := m.GetResult().(*ToolResultContent_Content); ok {
		return x.Content
	}
	return ""
}
func (m *ToolResultContent) GetError() string {
	if x, ok := m.GetResult().(*ToolResultContent_Error); ok {
		return x.Error
	}
	return ""
}
func (m *ToolResultContent) SetToolCallId(fv string) {
	if m == nil {
		panic(fmt.Errorf("can't set %s on nil %s", "ToolCallId", "ToolResultContent"))
	}
	m.ToolCallId = fv
}

func (m *ToolResultContent) SetResult(ofv isToolResultContent_Result) {
	if m == nil {
		panic(fmt.Errorf("can't set %s on nil %s", "isToolResultContent_Result", "ToolResultContent"))
	}
	m.Result = ofv
}
func (m *ToolResultContent) SetContent(fv string) {
	m.SetResult(&ToolResultContent_Content{Content: fv})
}
func (m *ToolResultContent) SetError(fv string) {
	m.SetResult(&ToolResultContent_Error{Error: fv})
}

// Thinking/reasoning content with optional signature
type ThinkingContent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
	Text          string `protobuf:"bytes,1,opt,name=text,proto3" json:"text,omitempty"`
	Signature     string `protobuf:"bytes,2,opt,name=signature,proto3" json:"signature,omitempty"`
}

func (m *ThinkingContent) Reset() {
	*m = ThinkingContent{}
	if protoimpl.UnsafeEnabled {
		mi := &edgelq_ai_proto_v1_common_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(m))
		ms.StoreMessageInfo(mi)
	}
}

func (m *ThinkingContent) String() string {
	return protoimpl.X.MessageStringOf(m)
}

func (*ThinkingContent) ProtoMessage() {}

func (m *ThinkingContent) ProtoReflect() preflect.Message {
	mi := &edgelq_ai_proto_v1_common_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && m != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(m))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(m)
}

func (*ThinkingContent) GotenMessage() {}

// Deprecated, Use ThinkingContent.ProtoReflect.Descriptor instead.
func (*ThinkingContent) Descriptor() ([]byte, []int) {
	return edgelq_ai_proto_v1_common_proto_rawDescGZIP(), []int{8}
}

func (m *ThinkingContent) Unmarshal(b []byte) error {
	return proto.Unmarshal(b, m)
}

func (m *ThinkingContent) Marshal() ([]byte, error) {
	return proto.Marshal(m)
}

func (m *ThinkingContent) MarshalJSON() ([]byte, error) {
	return protojson.MarshalOptions{}.Marshal(m)
}

func (m *ThinkingContent) UnmarshalJSON(data []byte) error {
	return protojson.Unmarshal(data, m)
}

func (m *ThinkingContent) GetText() string {
	if m != nil {
		return m.Text
	}
	return ""
}

func (m *ThinkingContent) GetSignature() string {
	if m != nil {
		return m.Signature
	}
	return ""
}

func (m *ThinkingContent) SetText(fv string) {
	if m == nil {
		panic(fmt.Errorf("can't set %s on nil %s", "Text", "ThinkingContent"))
	}
	m.Text = fv
}

func (m *ThinkingContent) SetSignature(fv string) {
	if m == nil {
		panic(fmt.Errorf("can't set %s on nil %s", "Signature", "ThinkingContent"))
	}
	m.Signature = fv
}

// Token usage information
type TokenUsage struct {
	state            protoimpl.MessageState
	sizeCache        protoimpl.SizeCache
	unknownFields    protoimpl.UnknownFields
	PromptTokens     int32 `protobuf:"varint,1,opt,name=prompt_tokens,json=promptTokens,proto3" json:"prompt_tokens,omitempty"`
	CompletionTokens int32 `protobuf:"varint,2,opt,name=completion_tokens,json=completionTokens,proto3" json:"completion_tokens,omitempty"`
	TotalTokens      int32 `protobuf:"varint,3,opt,name=total_tokens,json=totalTokens,proto3" json:"total_tokens,omitempty"`
	// Optional detailed token breakdown
	Details *TokenUsageDetails `protobuf:"bytes,4,opt,name=details,proto3" json:"details,omitempty"`
}

func (m *TokenUsage) Reset() {
	*m = TokenUsage{}
	if protoimpl.UnsafeEnabled {
		mi := &edgelq_ai_proto_v1_common_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(m))
		ms.StoreMessageInfo(mi)
	}
}

func (m *TokenUsage) String() string {
	return protoimpl.X.MessageStringOf(m)
}

func (*TokenUsage) ProtoMessage() {}

func (m *TokenUsage) ProtoReflect() preflect.Message {
	mi := &edgelq_ai_proto_v1_common_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && m != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(m))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(m)
}

func (*TokenUsage) GotenMessage() {}

// Deprecated, Use TokenUsage.ProtoReflect.Descriptor instead.
func (*TokenUsage) Descriptor() ([]byte, []int) {
	return edgelq_ai_proto_v1_common_proto_rawDescGZIP(), []int{9}
}

func (m *TokenUsage) Unmarshal(b []byte) error {
	return proto.Unmarshal(b, m)
}

func (m *TokenUsage) Marshal() ([]byte, error) {
	return proto.Marshal(m)
}

func (m *TokenUsage) MarshalJSON() ([]byte, error) {
	return protojson.MarshalOptions{}.Marshal(m)
}

func (m *TokenUsage) UnmarshalJSON(data []byte) error {
	return protojson.Unmarshal(data, m)
}

func (m *TokenUsage) GetPromptTokens() int32 {
	if m != nil {
		return m.PromptTokens
	}
	return int32(0)
}

func (m *TokenUsage) GetCompletionTokens() int32 {
	if m != nil {
		return m.CompletionTokens
	}
	return int32(0)
}

func (m *TokenUsage) GetTotalTokens() int32 {
	if m != nil {
		return m.TotalTokens
	}
	return int32(0)
}

func (m *TokenUsage) GetDetails() *TokenUsageDetails {
	if m != nil {
		return m.Details
	}
	return nil
}

func (m *TokenUsage) SetPromptTokens(fv int32) {
	if m == nil {
		panic(fmt.Errorf("can't set %s on nil %s", "PromptTokens", "TokenUsage"))
	}
	m.PromptTokens = fv
}

func (m *TokenUsage) SetCompletionTokens(fv int32) {
	if m == nil {
		panic(fmt.Errorf("can't set %s on nil %s", "CompletionTokens", "TokenUsage"))
	}
	m.CompletionTokens = fv
}

func (m *TokenUsage) SetTotalTokens(fv int32) {
	if m == nil {
		panic(fmt.Errorf("can't set %s on nil %s", "TotalTokens", "TokenUsage"))
	}
	m.TotalTokens = fv
}

func (m *TokenUsage) SetDetails(fv *TokenUsageDetails) {
	if m == nil {
		panic(fmt.Errorf("can't set %s on nil %s", "Details", "TokenUsage"))
	}
	m.Details = fv
}

// Detailed breakdown of token usage
type TokenUsageDetails struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
	// Reasoning/thinking tokens (o1, o3, Claude thinking mode)
	ReasoningTokens int32 `protobuf:"varint,1,opt,name=reasoning_tokens,json=reasoningTokens,proto3" json:"reasoning_tokens,omitempty"`
	// Cached tokens (from prompt cache)
	CachedTokens int32 `protobuf:"varint,2,opt,name=cached_tokens,json=cachedTokens,proto3" json:"cached_tokens,omitempty"`
	// Audio tokens (for multimodal models)
	AudioInputTokens  int32 `protobuf:"varint,3,opt,name=audio_input_tokens,json=audioInputTokens,proto3" json:"audio_input_tokens,omitempty"`
	AudioOutputTokens int32 `protobuf:"varint,4,opt,name=audio_output_tokens,json=audioOutputTokens,proto3" json:"audio_output_tokens,omitempty"`
	// Cache creation tokens (Anthropic)
	CacheCreationInputTokens int32 `protobuf:"varint,5,opt,name=cache_creation_input_tokens,json=cacheCreationInputTokens,proto3" json:"cache_creation_input_tokens,omitempty"`
	CacheReadInputTokens     int32 `protobuf:"varint,6,opt,name=cache_read_input_tokens,json=cacheReadInputTokens,proto3" json:"cache_read_input_tokens,omitempty"`
	// Predicted output tokens (OpenAI)
	AcceptedPredictionTokens int32 `protobuf:"varint,7,opt,name=accepted_prediction_tokens,json=acceptedPredictionTokens,proto3" json:"accepted_prediction_tokens,omitempty"`
	RejectedPredictionTokens int32 `protobuf:"varint,8,opt,name=rejected_prediction_tokens,json=rejectedPredictionTokens,proto3" json:"rejected_prediction_tokens,omitempty"`
}

func (m *TokenUsageDetails) Reset() {
	*m = TokenUsageDetails{}
	if protoimpl.UnsafeEnabled {
		mi := &edgelq_ai_proto_v1_common_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(m))
		ms.StoreMessageInfo(mi)
	}
}

func (m *TokenUsageDetails) String() string {
	return protoimpl.X.MessageStringOf(m)
}

func (*TokenUsageDetails) ProtoMessage() {}

func (m *TokenUsageDetails) ProtoReflect() preflect.Message {
	mi := &edgelq_ai_proto_v1_common_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && m != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(m))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(m)
}

func (*TokenUsageDetails) GotenMessage() {}

// Deprecated, Use TokenUsageDetails.ProtoReflect.Descriptor instead.
func (*TokenUsageDetails) Descriptor() ([]byte, []int) {
	return edgelq_ai_proto_v1_common_proto_rawDescGZIP(), []int{10}
}

func (m *TokenUsageDetails) Unmarshal(b []byte) error {
	return proto.Unmarshal(b, m)
}

func (m *TokenUsageDetails) Marshal() ([]byte, error) {
	return proto.Marshal(m)
}

func (m *TokenUsageDetails) MarshalJSON() ([]byte, error) {
	return protojson.MarshalOptions{}.Marshal(m)
}

func (m *TokenUsageDetails) UnmarshalJSON(data []byte) error {
	return protojson.Unmarshal(data, m)
}

func (m *TokenUsageDetails) GetReasoningTokens() int32 {
	if m != nil {
		return m.ReasoningTokens
	}
	return int32(0)
}

func (m *TokenUsageDetails) GetCachedTokens() int32 {
	if m != nil {
		return m.CachedTokens
	}
	return int32(0)
}

func (m *TokenUsageDetails) GetAudioInputTokens() int32 {
	if m != nil {
		return m.AudioInputTokens
	}
	return int32(0)
}

func (m *TokenUsageDetails) GetAudioOutputTokens() int32 {
	if m != nil {
		return m.AudioOutputTokens
	}
	return int32(0)
}

func (m *TokenUsageDetails) GetCacheCreationInputTokens() int32 {
	if m != nil {
		return m.CacheCreationInputTokens
	}
	return int32(0)
}

func (m *TokenUsageDetails) GetCacheReadInputTokens() int32 {
	if m != nil {
		return m.CacheReadInputTokens
	}
	return int32(0)
}

func (m *TokenUsageDetails) GetAcceptedPredictionTokens() int32 {
	if m != nil {
		return m.AcceptedPredictionTokens
	}
	return int32(0)
}

func (m *TokenUsageDetails) GetRejectedPredictionTokens() int32 {
	if m != nil {
		return m.RejectedPredictionTokens
	}
	return int32(0)
}

func (m *TokenUsageDetails) SetReasoningTokens(fv int32) {
	if m == nil {
		panic(fmt.Errorf("can't set %s on nil %s", "ReasoningTokens", "TokenUsageDetails"))
	}
	m.ReasoningTokens = fv
}

func (m *TokenUsageDetails) SetCachedTokens(fv int32) {
	if m == nil {
		panic(fmt.Errorf("can't set %s on nil %s", "CachedTokens", "TokenUsageDetails"))
	}
	m.CachedTokens = fv
}

func (m *TokenUsageDetails) SetAudioInputTokens(fv int32) {
	if m == nil {
		panic(fmt.Errorf("can't set %s on nil %s", "AudioInputTokens", "TokenUsageDetails"))
	}
	m.AudioInputTokens = fv
}

func (m *TokenUsageDetails) SetAudioOutputTokens(fv int32) {
	if m == nil {
		panic(fmt.Errorf("can't set %s on nil %s", "AudioOutputTokens", "TokenUsageDetails"))
	}
	m.AudioOutputTokens = fv
}

func (m *TokenUsageDetails) SetCacheCreationInputTokens(fv int32) {
	if m == nil {
		panic(fmt.Errorf("can't set %s on nil %s", "CacheCreationInputTokens", "TokenUsageDetails"))
	}
	m.CacheCreationInputTokens = fv
}

func (m *TokenUsageDetails) SetCacheReadInputTokens(fv int32) {
	if m == nil {
		panic(fmt.Errorf("can't set %s on nil %s", "CacheReadInputTokens", "TokenUsageDetails"))
	}
	m.CacheReadInputTokens = fv
}

func (m *TokenUsageDetails) SetAcceptedPredictionTokens(fv int32) {
	if m == nil {
		panic(fmt.Errorf("can't set %s on nil %s", "AcceptedPredictionTokens", "TokenUsageDetails"))
	}
	m.AcceptedPredictionTokens = fv
}

func (m *TokenUsageDetails) SetRejectedPredictionTokens(fv int32) {
	if m == nil {
		panic(fmt.Errorf("can't set %s on nil %s", "RejectedPredictionTokens", "TokenUsageDetails"))
	}
	m.RejectedPredictionTokens = fv
}

// Payload for data with media type
type Payload struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
	MediaType     string `protobuf:"bytes,3,opt,name=media_type,json=mediaType,proto3" json:"media_type,omitempty"`
	// Types that are valid to be assigned to Body:
	//	*Payload_Json
	//	*Payload_Data
	Body isPayload_Body `protobuf_oneof:"body"`
}

func (m *Payload) Reset() {
	*m = Payload{}
	if protoimpl.UnsafeEnabled {
		mi := &edgelq_ai_proto_v1_common_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(m))
		ms.StoreMessageInfo(mi)
	}
}

func (m *Payload) String() string {
	return protoimpl.X.MessageStringOf(m)
}

func (*Payload) ProtoMessage() {}

func (m *Payload) ProtoReflect() preflect.Message {
	mi := &edgelq_ai_proto_v1_common_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && m != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(m))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(m)
}

func (*Payload) GotenMessage() {}

// Deprecated, Use Payload.ProtoReflect.Descriptor instead.
func (*Payload) Descriptor() ([]byte, []int) {
	return edgelq_ai_proto_v1_common_proto_rawDescGZIP(), []int{11}
}

func (m *Payload) Unmarshal(b []byte) error {
	return proto.Unmarshal(b, m)
}

func (m *Payload) Marshal() ([]byte, error) {
	return proto.Marshal(m)
}

func (m *Payload) MarshalJSON() ([]byte, error) {
	return protojson.MarshalOptions{}.Marshal(m)
}

func (m *Payload) UnmarshalJSON(data []byte) error {
	return protojson.Unmarshal(data, m)
}

type isPayload_Body interface {
	isPayload_Body()
}

type Payload_Json struct {
	Json string `protobuf:"bytes,1,opt,name=json,proto3,oneof"`
}
type Payload_Data struct {
	Data []byte `protobuf:"bytes,2,opt,name=data,proto3,oneof"`
}

func (*Payload_Json) isPayload_Body() {}
func (*Payload_Data) isPayload_Body() {}
func (m *Payload) GetMediaType() string {
	if m != nil {
		return m.MediaType
	}
	return ""
}

func (m *Payload) GetBody() isPayload_Body {
	if m != nil {
		return m.Body
	}
	return nil
}
func (m *Payload) GetJson() string {
	if x, ok := m.GetBody().(*Payload_Json); ok {
		return x.Json
	}
	return ""
}
func (m *Payload) GetData() []byte {
	if x, ok := m.GetBody().(*Payload_Data); ok {
		return x.Data
	}
	return nil
}
func (m *Payload) SetMediaType(fv string) {
	if m == nil {
		panic(fmt.Errorf("can't set %s on nil %s", "MediaType", "Payload"))
	}
	m.MediaType = fv
}

func (m *Payload) SetBody(ofv isPayload_Body) {
	if m == nil {
		panic(fmt.Errorf("can't set %s on nil %s", "isPayload_Body", "Payload"))
	}
	m.Body = ofv
}
func (m *Payload) SetJson(fv string) {
	m.SetBody(&Payload_Json{Json: fv})
}
func (m *Payload) SetData(fv []byte) {
	m.SetBody(&Payload_Data{Data: fv})
}

// Tool definition
type ToolDefinition struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
	Name          string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Description   string `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	InputSchema   string `protobuf:"bytes,3,opt,name=input_schema,json=inputSchema,proto3" json:"input_schema,omitempty"`
	Provider      string `protobuf:"bytes,4,opt,name=provider,proto3" json:"provider,omitempty"`
}

func (m *ToolDefinition) Reset() {
	*m = ToolDefinition{}
	if protoimpl.UnsafeEnabled {
		mi := &edgelq_ai_proto_v1_common_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(m))
		ms.StoreMessageInfo(mi)
	}
}

func (m *ToolDefinition) String() string {
	return protoimpl.X.MessageStringOf(m)
}

func (*ToolDefinition) ProtoMessage() {}

func (m *ToolDefinition) ProtoReflect() preflect.Message {
	mi := &edgelq_ai_proto_v1_common_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && m != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(m))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(m)
}

func (*ToolDefinition) GotenMessage() {}

// Deprecated, Use ToolDefinition.ProtoReflect.Descriptor instead.
func (*ToolDefinition) Descriptor() ([]byte, []int) {
	return edgelq_ai_proto_v1_common_proto_rawDescGZIP(), []int{12}
}

func (m *ToolDefinition) Unmarshal(b []byte) error {
	return proto.Unmarshal(b, m)
}

func (m *ToolDefinition) Marshal() ([]byte, error) {
	return proto.Marshal(m)
}

func (m *ToolDefinition) MarshalJSON() ([]byte, error) {
	return protojson.MarshalOptions{}.Marshal(m)
}

func (m *ToolDefinition) UnmarshalJSON(data []byte) error {
	return protojson.Unmarshal(data, m)
}

func (m *ToolDefinition) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ToolDefinition) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *ToolDefinition) GetInputSchema() string {
	if m != nil {
		return m.InputSchema
	}
	return ""
}

func (m *ToolDefinition) GetProvider() string {
	if m != nil {
		return m.Provider
	}
	return ""
}

func (m *ToolDefinition) SetName(fv string) {
	if m == nil {
		panic(fmt.Errorf("can't set %s on nil %s", "Name", "ToolDefinition"))
	}
	m.Name = fv
}

func (m *ToolDefinition) SetDescription(fv string) {
	if m == nil {
		panic(fmt.Errorf("can't set %s on nil %s", "Description", "ToolDefinition"))
	}
	m.Description = fv
}

func (m *ToolDefinition) SetInputSchema(fv string) {
	if m == nil {
		panic(fmt.Errorf("can't set %s on nil %s", "InputSchema", "ToolDefinition"))
	}
	m.InputSchema = fv
}

func (m *ToolDefinition) SetProvider(fv string) {
	if m == nil {
		panic(fmt.Errorf("can't set %s on nil %s", "Provider", "ToolDefinition"))
	}
	m.Provider = fv
}

// Tool call for execution
type ToolCall struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
	Id            string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name          string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Arguments     string `protobuf:"bytes,3,opt,name=arguments,proto3" json:"arguments,omitempty"`
}

func (m *ToolCall) Reset() {
	*m = ToolCall{}
	if protoimpl.UnsafeEnabled {
		mi := &edgelq_ai_proto_v1_common_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(m))
		ms.StoreMessageInfo(mi)
	}
}

func (m *ToolCall) String() string {
	return protoimpl.X.MessageStringOf(m)
}

func (*ToolCall) ProtoMessage() {}

func (m *ToolCall) ProtoReflect() preflect.Message {
	mi := &edgelq_ai_proto_v1_common_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && m != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(m))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(m)
}

func (*ToolCall) GotenMessage() {}

// Deprecated, Use ToolCall.ProtoReflect.Descriptor instead.
func (*ToolCall) Descriptor() ([]byte, []int) {
	return edgelq_ai_proto_v1_common_proto_rawDescGZIP(), []int{13}
}

func (m *ToolCall) Unmarshal(b []byte) error {
	return proto.Unmarshal(b, m)
}

func (m *ToolCall) Marshal() ([]byte, error) {
	return proto.Marshal(m)
}

func (m *ToolCall) MarshalJSON() ([]byte, error) {
	return protojson.MarshalOptions{}.Marshal(m)
}

func (m *ToolCall) UnmarshalJSON(data []byte) error {
	return protojson.Unmarshal(data, m)
}

func (m *ToolCall) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *ToolCall) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ToolCall) GetArguments() string {
	if m != nil {
		return m.Arguments
	}
	return ""
}

func (m *ToolCall) SetId(fv string) {
	if m == nil {
		panic(fmt.Errorf("can't set %s on nil %s", "Id", "ToolCall"))
	}
	m.Id = fv
}

func (m *ToolCall) SetName(fv string) {
	if m == nil {
		panic(fmt.Errorf("can't set %s on nil %s", "Name", "ToolCall"))
	}
	m.Name = fv
}

func (m *ToolCall) SetArguments(fv string) {
	if m == nil {
		panic(fmt.Errorf("can't set %s on nil %s", "Arguments", "ToolCall"))
	}
	m.Arguments = fv
}

// Tool response
type ToolResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
	ToolCallId    string `protobuf:"bytes,1,opt,name=tool_call_id,json=toolCallId,proto3" json:"tool_call_id,omitempty"`
	Tool          string `protobuf:"bytes,2,opt,name=tool,proto3" json:"tool,omitempty"`
	// Types that are valid to be assigned to Result:
	//	*ToolResponse_Output
	//	*ToolResponse_Error
	Result isToolResponse_Result `protobuf_oneof:"result"`
}

func (m *ToolResponse) Reset() {
	*m = ToolResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &edgelq_ai_proto_v1_common_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(m))
		ms.StoreMessageInfo(mi)
	}
}

func (m *ToolResponse) String() string {
	return protoimpl.X.MessageStringOf(m)
}

func (*ToolResponse) ProtoMessage() {}

func (m *ToolResponse) ProtoReflect() preflect.Message {
	mi := &edgelq_ai_proto_v1_common_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && m != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(m))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(m)
}

func (*ToolResponse) GotenMessage() {}

// Deprecated, Use ToolResponse.ProtoReflect.Descriptor instead.
func (*ToolResponse) Descriptor() ([]byte, []int) {
	return edgelq_ai_proto_v1_common_proto_rawDescGZIP(), []int{14}
}

func (m *ToolResponse) Unmarshal(b []byte) error {
	return proto.Unmarshal(b, m)
}

func (m *ToolResponse) Marshal() ([]byte, error) {
	return proto.Marshal(m)
}

func (m *ToolResponse) MarshalJSON() ([]byte, error) {
	return protojson.MarshalOptions{}.Marshal(m)
}

func (m *ToolResponse) UnmarshalJSON(data []byte) error {
	return protojson.Unmarshal(data, m)
}

type isToolResponse_Result interface {
	isToolResponse_Result()
}

type ToolResponse_Output struct {
	Output *Payload `protobuf:"bytes,3,opt,name=output,proto3,oneof"`
}
type ToolResponse_Error struct {
	Error string `protobuf:"bytes,4,opt,name=error,proto3,oneof"`
}

func (*ToolResponse_Output) isToolResponse_Result() {}
func (*ToolResponse_Error) isToolResponse_Result()  {}
func (m *ToolResponse) GetToolCallId() string {
	if m != nil {
		return m.ToolCallId
	}
	return ""
}

func (m *ToolResponse) GetTool() string {
	if m != nil {
		return m.Tool
	}
	return ""
}

func (m *ToolResponse) GetResult() isToolResponse_Result {
	if m != nil {
		return m.Result
	}
	return nil
}
func (m *ToolResponse) GetOutput() *Payload {
	if x, ok := m.GetResult().(*ToolResponse_Output); ok {
		return x.Output
	}
	return nil
}
func (m *ToolResponse) GetError() string {
	if x, ok := m.GetResult().(*ToolResponse_Error); ok {
		return x.Error
	}
	return ""
}
func (m *ToolResponse) SetToolCallId(fv string) {
	if m == nil {
		panic(fmt.Errorf("can't set %s on nil %s", "ToolCallId", "ToolResponse"))
	}
	m.ToolCallId = fv
}

func (m *ToolResponse) SetTool(fv string) {
	if m == nil {
		panic(fmt.Errorf("can't set %s on nil %s", "Tool", "ToolResponse"))
	}
	m.Tool = fv
}

func (m *ToolResponse) SetResult(ofv isToolResponse_Result) {
	if m == nil {
		panic(fmt.Errorf("can't set %s on nil %s", "isToolResponse_Result", "ToolResponse"))
	}
	m.Result = ofv
}
func (m *ToolResponse) SetOutput(fv *Payload) {
	m.SetResult(&ToolResponse_Output{Output: fv})
}
func (m *ToolResponse) SetError(fv string) {
	m.SetResult(&ToolResponse_Error{Error: fv})
}

// Tool calls container
type ToolCalls struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
	Calls         []*ToolCall `protobuf:"bytes,1,rep,name=calls,proto3" json:"calls,omitempty"`
}

func (m *ToolCalls) Reset() {
	*m = ToolCalls{}
	if protoimpl.UnsafeEnabled {
		mi := &edgelq_ai_proto_v1_common_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(m))
		ms.StoreMessageInfo(mi)
	}
}

func (m *ToolCalls) String() string {
	return protoimpl.X.MessageStringOf(m)
}

func (*ToolCalls) ProtoMessage() {}

func (m *ToolCalls) ProtoReflect() preflect.Message {
	mi := &edgelq_ai_proto_v1_common_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && m != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(m))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(m)
}

func (*ToolCalls) GotenMessage() {}

// Deprecated, Use ToolCalls.ProtoReflect.Descriptor instead.
func (*ToolCalls) Descriptor() ([]byte, []int) {
	return edgelq_ai_proto_v1_common_proto_rawDescGZIP(), []int{15}
}

func (m *ToolCalls) Unmarshal(b []byte) error {
	return proto.Unmarshal(b, m)
}

func (m *ToolCalls) Marshal() ([]byte, error) {
	return proto.Marshal(m)
}

func (m *ToolCalls) MarshalJSON() ([]byte, error) {
	return protojson.MarshalOptions{}.Marshal(m)
}

func (m *ToolCalls) UnmarshalJSON(data []byte) error {
	return protojson.Unmarshal(data, m)
}

func (m *ToolCalls) GetCalls() []*ToolCall {
	if m != nil {
		return m.Calls
	}
	return nil
}

func (m *ToolCalls) SetCalls(fv []*ToolCall) {
	if m == nil {
		panic(fmt.Errorf("can't set %s on nil %s", "Calls", "ToolCalls"))
	}
	m.Calls = fv
}

// Citation - reference to source material (provider-agnostic)
type Citation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
	// Text reference in AI response (which part is cited)
	StartIndex int64  `protobuf:"varint,1,opt,name=start_index,json=startIndex,proto3" json:"start_index,omitempty"`
	EndIndex   int64  `protobuf:"varint,2,opt,name=end_index,json=endIndex,proto3" json:"end_index,omitempty"`
	Text       string `protobuf:"bytes,3,opt,name=text,proto3" json:"text,omitempty"`
	// Source information
	Source *CitationSource `protobuf:"bytes,4,opt,name=source,proto3" json:"source,omitempty"`
}

func (m *Citation) Reset() {
	*m = Citation{}
	if protoimpl.UnsafeEnabled {
		mi := &edgelq_ai_proto_v1_common_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(m))
		ms.StoreMessageInfo(mi)
	}
}

func (m *Citation) String() string {
	return protoimpl.X.MessageStringOf(m)
}

func (*Citation) ProtoMessage() {}

func (m *Citation) ProtoReflect() preflect.Message {
	mi := &edgelq_ai_proto_v1_common_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && m != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(m))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(m)
}

func (*Citation) GotenMessage() {}

// Deprecated, Use Citation.ProtoReflect.Descriptor instead.
func (*Citation) Descriptor() ([]byte, []int) {
	return edgelq_ai_proto_v1_common_proto_rawDescGZIP(), []int{16}
}

func (m *Citation) Unmarshal(b []byte) error {
	return proto.Unmarshal(b, m)
}

func (m *Citation) Marshal() ([]byte, error) {
	return proto.Marshal(m)
}

func (m *Citation) MarshalJSON() ([]byte, error) {
	return protojson.MarshalOptions{}.Marshal(m)
}

func (m *Citation) UnmarshalJSON(data []byte) error {
	return protojson.Unmarshal(data, m)
}

func (m *Citation) GetStartIndex() int64 {
	if m != nil {
		return m.StartIndex
	}
	return int64(0)
}

func (m *Citation) GetEndIndex() int64 {
	if m != nil {
		return m.EndIndex
	}
	return int64(0)
}

func (m *Citation) GetText() string {
	if m != nil {
		return m.Text
	}
	return ""
}

func (m *Citation) GetSource() *CitationSource {
	if m != nil {
		return m.Source
	}
	return nil
}

func (m *Citation) SetStartIndex(fv int64) {
	if m == nil {
		panic(fmt.Errorf("can't set %s on nil %s", "StartIndex", "Citation"))
	}
	m.StartIndex = fv
}

func (m *Citation) SetEndIndex(fv int64) {
	if m == nil {
		panic(fmt.Errorf("can't set %s on nil %s", "EndIndex", "Citation"))
	}
	m.EndIndex = fv
}

func (m *Citation) SetText(fv string) {
	if m == nil {
		panic(fmt.Errorf("can't set %s on nil %s", "Text", "Citation"))
	}
	m.Text = fv
}

func (m *Citation) SetSource(fv *CitationSource) {
	if m == nil {
		panic(fmt.Errorf("can't set %s on nil %s", "Source", "Citation"))
	}
	m.Source = fv
}

// Citation source information
type CitationSource struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
	// Core fields (all providers)
	Title      string `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	Id         string `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	QuotedText string `protobuf:"bytes,3,opt,name=quoted_text,json=quotedText,proto3" json:"quoted_text,omitempty"`
	// Generic metadata (extensible for any provider-specific data)
	Metadata map[string]string `protobuf:"bytes,10,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// Location in source (flexible for all provider types)
	//
	// Types that are valid to be assigned to Location:
	//	*CitationSource_CharRange
	//	*CitationSource_Page
	//	*CitationSource_Url
	Location isCitationSource_Location `protobuf_oneof:"location"`
}

func (m *CitationSource) Reset() {
	*m = CitationSource{}
	if protoimpl.UnsafeEnabled {
		mi := &edgelq_ai_proto_v1_common_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(m))
		ms.StoreMessageInfo(mi)
	}
}

func (m *CitationSource) String() string {
	return protoimpl.X.MessageStringOf(m)
}

func (*CitationSource) ProtoMessage() {}

func (m *CitationSource) ProtoReflect() preflect.Message {
	mi := &edgelq_ai_proto_v1_common_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && m != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(m))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(m)
}

func (*CitationSource) GotenMessage() {}

// Deprecated, Use CitationSource.ProtoReflect.Descriptor instead.
func (*CitationSource) Descriptor() ([]byte, []int) {
	return edgelq_ai_proto_v1_common_proto_rawDescGZIP(), []int{17}
}

func (m *CitationSource) Unmarshal(b []byte) error {
	return proto.Unmarshal(b, m)
}

func (m *CitationSource) Marshal() ([]byte, error) {
	return proto.Marshal(m)
}

func (m *CitationSource) MarshalJSON() ([]byte, error) {
	return protojson.MarshalOptions{}.Marshal(m)
}

func (m *CitationSource) UnmarshalJSON(data []byte) error {
	return protojson.Unmarshal(data, m)
}

type isCitationSource_Location interface {
	isCitationSource_Location()
}

type CitationSource_CharRange struct {
	CharRange *CharacterRange `protobuf:"bytes,4,opt,name=char_range,json=charRange,proto3,oneof"`
}
type CitationSource_Page struct {
	Page *PageReference `protobuf:"bytes,5,opt,name=page,proto3,oneof"`
}
type CitationSource_Url struct {
	Url *URLReference `protobuf:"bytes,6,opt,name=url,proto3,oneof"`
}

func (*CitationSource_CharRange) isCitationSource_Location() {}
func (*CitationSource_Page) isCitationSource_Location()      {}
func (*CitationSource_Url) isCitationSource_Location()       {}
func (m *CitationSource) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *CitationSource) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *CitationSource) GetQuotedText() string {
	if m != nil {
		return m.QuotedText
	}
	return ""
}

func (m *CitationSource) GetMetadata() map[string]string {
	if m != nil {
		return m.Metadata
	}
	return nil
}

func (m *CitationSource) GetLocation() isCitationSource_Location {
	if m != nil {
		return m.Location
	}
	return nil
}
func (m *CitationSource) GetCharRange() *CharacterRange {
	if x, ok := m.GetLocation().(*CitationSource_CharRange); ok {
		return x.CharRange
	}
	return nil
}
func (m *CitationSource) GetPage() *PageReference {
	if x, ok := m.GetLocation().(*CitationSource_Page); ok {
		return x.Page
	}
	return nil
}
func (m *CitationSource) GetUrl() *URLReference {
	if x, ok := m.GetLocation().(*CitationSource_Url); ok {
		return x.Url
	}
	return nil
}
func (m *CitationSource) SetTitle(fv string) {
	if m == nil {
		panic(fmt.Errorf("can't set %s on nil %s", "Title", "CitationSource"))
	}
	m.Title = fv
}

func (m *CitationSource) SetId(fv string) {
	if m == nil {
		panic(fmt.Errorf("can't set %s on nil %s", "Id", "CitationSource"))
	}
	m.Id = fv
}

func (m *CitationSource) SetQuotedText(fv string) {
	if m == nil {
		panic(fmt.Errorf("can't set %s on nil %s", "QuotedText", "CitationSource"))
	}
	m.QuotedText = fv
}

func (m *CitationSource) SetMetadata(fv map[string]string) {
	if m == nil {
		panic(fmt.Errorf("can't set %s on nil %s", "Metadata", "CitationSource"))
	}
	m.Metadata = fv
}

func (m *CitationSource) SetLocation(ofv isCitationSource_Location) {
	if m == nil {
		panic(fmt.Errorf("can't set %s on nil %s", "isCitationSource_Location", "CitationSource"))
	}
	m.Location = ofv
}
func (m *CitationSource) SetCharRange(fv *CharacterRange) {
	m.SetLocation(&CitationSource_CharRange{CharRange: fv})
}
func (m *CitationSource) SetPage(fv *PageReference) {
	m.SetLocation(&CitationSource_Page{Page: fv})
}
func (m *CitationSource) SetUrl(fv *URLReference) {
	m.SetLocation(&CitationSource_Url{Url: fv})
}

// Character range in source document
type CharacterRange struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
	Start         int64 `protobuf:"varint,1,opt,name=start,proto3" json:"start,omitempty"`
	End           int64 `protobuf:"varint,2,opt,name=end,proto3" json:"end,omitempty"`
}

func (m *CharacterRange) Reset() {
	*m = CharacterRange{}
	if protoimpl.UnsafeEnabled {
		mi := &edgelq_ai_proto_v1_common_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(m))
		ms.StoreMessageInfo(mi)
	}
}

func (m *CharacterRange) String() string {
	return protoimpl.X.MessageStringOf(m)
}

func (*CharacterRange) ProtoMessage() {}

func (m *CharacterRange) ProtoReflect() preflect.Message {
	mi := &edgelq_ai_proto_v1_common_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && m != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(m))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(m)
}

func (*CharacterRange) GotenMessage() {}

// Deprecated, Use CharacterRange.ProtoReflect.Descriptor instead.
func (*CharacterRange) Descriptor() ([]byte, []int) {
	return edgelq_ai_proto_v1_common_proto_rawDescGZIP(), []int{18}
}

func (m *CharacterRange) Unmarshal(b []byte) error {
	return proto.Unmarshal(b, m)
}

func (m *CharacterRange) Marshal() ([]byte, error) {
	return proto.Marshal(m)
}

func (m *CharacterRange) MarshalJSON() ([]byte, error) {
	return protojson.MarshalOptions{}.Marshal(m)
}

func (m *CharacterRange) UnmarshalJSON(data []byte) error {
	return protojson.Unmarshal(data, m)
}

func (m *CharacterRange) GetStart() int64 {
	if m != nil {
		return m.Start
	}
	return int64(0)
}

func (m *CharacterRange) GetEnd() int64 {
	if m != nil {
		return m.End
	}
	return int64(0)
}

func (m *CharacterRange) SetStart(fv int64) {
	if m == nil {
		panic(fmt.Errorf("can't set %s on nil %s", "Start", "CharacterRange"))
	}
	m.Start = fv
}

func (m *CharacterRange) SetEnd(fv int64) {
	if m == nil {
		panic(fmt.Errorf("can't set %s on nil %s", "End", "CharacterRange"))
	}
	m.End = fv
}

// Page reference in source document
type PageReference struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
	PageNumber    int32 `protobuf:"varint,1,opt,name=page_number,json=pageNumber,proto3" json:"page_number,omitempty"`
}

func (m *PageReference) Reset() {
	*m = PageReference{}
	if protoimpl.UnsafeEnabled {
		mi := &edgelq_ai_proto_v1_common_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(m))
		ms.StoreMessageInfo(mi)
	}
}

func (m *PageReference) String() string {
	return protoimpl.X.MessageStringOf(m)
}

func (*PageReference) ProtoMessage() {}

func (m *PageReference) ProtoReflect() preflect.Message {
	mi := &edgelq_ai_proto_v1_common_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && m != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(m))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(m)
}

func (*PageReference) GotenMessage() {}

// Deprecated, Use PageReference.ProtoReflect.Descriptor instead.
func (*PageReference) Descriptor() ([]byte, []int) {
	return edgelq_ai_proto_v1_common_proto_rawDescGZIP(), []int{19}
}

func (m *PageReference) Unmarshal(b []byte) error {
	return proto.Unmarshal(b, m)
}

func (m *PageReference) Marshal() ([]byte, error) {
	return proto.Marshal(m)
}

func (m *PageReference) MarshalJSON() ([]byte, error) {
	return protojson.MarshalOptions{}.Marshal(m)
}

func (m *PageReference) UnmarshalJSON(data []byte) error {
	return protojson.Unmarshal(data, m)
}

func (m *PageReference) GetPageNumber() int32 {
	if m != nil {
		return m.PageNumber
	}
	return int32(0)
}

func (m *PageReference) SetPageNumber(fv int32) {
	if m == nil {
		panic(fmt.Errorf("can't set %s on nil %s", "PageNumber", "PageReference"))
	}
	m.PageNumber = fv
}

// URL reference
type URLReference struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
	Url           string `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
	Filepath      string `protobuf:"bytes,2,opt,name=filepath,proto3" json:"filepath,omitempty"`
}

func (m *URLReference) Reset() {
	*m = URLReference{}
	if protoimpl.UnsafeEnabled {
		mi := &edgelq_ai_proto_v1_common_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(m))
		ms.StoreMessageInfo(mi)
	}
}

func (m *URLReference) String() string {
	return protoimpl.X.MessageStringOf(m)
}

func (*URLReference) ProtoMessage() {}

func (m *URLReference) ProtoReflect() preflect.Message {
	mi := &edgelq_ai_proto_v1_common_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && m != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(m))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(m)
}

func (*URLReference) GotenMessage() {}

// Deprecated, Use URLReference.ProtoReflect.Descriptor instead.
func (*URLReference) Descriptor() ([]byte, []int) {
	return edgelq_ai_proto_v1_common_proto_rawDescGZIP(), []int{20}
}

func (m *URLReference) Unmarshal(b []byte) error {
	return proto.Unmarshal(b, m)
}

func (m *URLReference) Marshal() ([]byte, error) {
	return proto.Marshal(m)
}

func (m *URLReference) MarshalJSON() ([]byte, error) {
	return protojson.MarshalOptions{}.Marshal(m)
}

func (m *URLReference) UnmarshalJSON(data []byte) error {
	return protojson.Unmarshal(data, m)
}

func (m *URLReference) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

func (m *URLReference) GetFilepath() string {
	if m != nil {
		return m.Filepath
	}
	return ""
}

func (m *URLReference) SetUrl(fv string) {
	if m == nil {
		panic(fmt.Errorf("can't set %s on nil %s", "Url", "URLReference"))
	}
	m.Url = fv
}

func (m *URLReference) SetFilepath(fv string) {
	if m == nil {
		panic(fmt.Errorf("can't set %s on nil %s", "Filepath", "URLReference"))
	}
	m.Filepath = fv
}

var edgelq_ai_proto_v1_common_proto preflect.FileDescriptor

var edgelq_ai_proto_v1_common_proto_rawDesc = []byte{
	0x0a, 0x1f, 0x65, 0x64, 0x67, 0x65, 0x6c, 0x71, 0x2f, 0x61, 0x69, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x09, 0x6e, 0x74, 0x74, 0x2e, 0x61, 0x69, 0x2e, 0x76, 0x31, 0x1a, 0x1e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x64, 0x75,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x20, 0x67,
	0x6f, 0x74, 0x65, 0x6e, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x1d, 0x67, 0x6f, 0x74, 0x65, 0x6e, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x2f, 0x67, 0x6f, 0x74, 0x65, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x4b,
	0x0a, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x6f, 0x6c,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x12, 0x2c, 0x0a,
	0x05, 0x70, 0x61, 0x72, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x6e,
	0x74, 0x74, 0x2e, 0x61, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74,
	0x50, 0x61, 0x72, 0x74, 0x52, 0x05, 0x70, 0x61, 0x72, 0x74, 0x73, 0x22, 0x8c, 0x03, 0x0a, 0x0b,
	0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x50, 0x61, 0x72, 0x74, 0x12, 0x2c, 0x0a, 0x04, 0x74,
	0x65, 0x78, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x6e, 0x74, 0x74, 0x2e,
	0x61, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x65, 0x78, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x48, 0x00, 0x52, 0x04, 0x74, 0x65, 0x78, 0x74, 0x12, 0x2f, 0x0a, 0x05, 0x69, 0x6d, 0x61,
	0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x6e, 0x74, 0x74, 0x2e, 0x61,
	0x69, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x48, 0x00, 0x52, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x2f, 0x0a, 0x05, 0x61, 0x75,
	0x64, 0x69, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x6e, 0x74, 0x74, 0x2e,
	0x61, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x75, 0x64, 0x69, 0x6f, 0x43, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x48, 0x00, 0x52, 0x05, 0x61, 0x75, 0x64, 0x69, 0x6f, 0x12, 0x2c, 0x0a, 0x04, 0x66,
	0x69, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x6e, 0x74, 0x74, 0x2e,
	0x61, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x48, 0x00, 0x52, 0x04, 0x66, 0x69, 0x6c, 0x65, 0x12, 0x39, 0x0a, 0x09, 0x74, 0x6f, 0x6f,
	0x6c, 0x5f, 0x63, 0x61, 0x6c, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x6e,
	0x74, 0x74, 0x2e, 0x61, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x6f, 0x6f, 0x6c, 0x43, 0x61, 0x6c,
	0x6c, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x48, 0x00, 0x52, 0x08, 0x74, 0x6f, 0x6f, 0x6c,
	0x43, 0x61, 0x6c, 0x6c, 0x12, 0x3f, 0x0a, 0x0b, 0x74, 0x6f, 0x6f, 0x6c, 0x5f, 0x72, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x6e, 0x74, 0x74, 0x2e,
	0x61, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x6f, 0x6f, 0x6c, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x48, 0x00, 0x52, 0x0a, 0x74, 0x6f, 0x6f, 0x6c, 0x52,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x38, 0x0a, 0x08, 0x74, 0x68, 0x69, 0x6e, 0x6b, 0x69, 0x6e,
	0x67, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x6e, 0x74, 0x74, 0x2e, 0x61, 0x69,
	0x2e, 0x76, 0x31, 0x2e, 0x54, 0x68, 0x69, 0x6e, 0x6b, 0x69, 0x6e, 0x67, 0x43, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x48, 0x00, 0x52, 0x08, 0x74, 0x68, 0x69, 0x6e, 0x6b, 0x69, 0x6e, 0x67, 0x42,
	0x09, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x22, 0x21, 0x0a, 0x0b, 0x54, 0x65,
	0x78, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x65, 0x78,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x65, 0x78, 0x74, 0x22, 0x5f, 0x0a,
	0x0c, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x12, 0x0a,
	0x03, 0x75, 0x72, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x03, 0x75, 0x72,
	0x6c, 0x12, 0x14, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x48,
	0x00, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x69, 0x6d, 0x65, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6d, 0x69, 0x6d, 0x65,
	0x54, 0x79, 0x70, 0x65, 0x42, 0x08, 0x0a, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x22, 0x5f,
	0x0a, 0x0c, 0x41, 0x75, 0x64, 0x69, 0x6f, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x12,
	0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x03, 0x75,
	0x72, 0x6c, 0x12, 0x14, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c,
	0x48, 0x00, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x69, 0x6d, 0x65,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6d, 0x69, 0x6d,
	0x65, 0x54, 0x79, 0x70, 0x65, 0x42, 0x08, 0x0a, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x22,
	0x72, 0x0a, 0x0b, 0x46, 0x69, 0x6c, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x69, 0x6d, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6d, 0x69, 0x6d, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x12, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x03,
	0x75, 0x72, 0x6c, 0x12, 0x14, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0c, 0x48, 0x00, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x42, 0x08, 0x0a, 0x06, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x22, 0x4b, 0x0a, 0x0f, 0x54, 0x6f, 0x6f, 0x6c, 0x43, 0x61, 0x6c, 0x6c, 0x43,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6e,
	0x70, 0x75, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x69, 0x6e, 0x70, 0x75, 0x74,
	0x22, 0x73, 0x0a, 0x11, 0x54, 0x6f, 0x6f, 0x6c, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x43, 0x6f,
	0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x20, 0x0a, 0x0c, 0x74, 0x6f, 0x6f, 0x6c, 0x5f, 0x63, 0x61,
	0x6c, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x74, 0x6f, 0x6f,
	0x6c, 0x43, 0x61, 0x6c, 0x6c, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x12, 0x16, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x00, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x42, 0x08, 0x0a, 0x06, 0x72,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x43, 0x0a, 0x0f, 0x54, 0x68, 0x69, 0x6e, 0x6b, 0x69, 0x6e,
	0x67, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x65, 0x78, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x65, 0x78, 0x74, 0x12, 0x1c, 0x0a, 0x09,
	0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x22, 0xb9, 0x01, 0x0a, 0x0a, 0x54,
	0x6f, 0x6b, 0x65, 0x6e, 0x55, 0x73, 0x61, 0x67, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x70, 0x72, 0x6f,
	0x6d, 0x70, 0x74, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0c, 0x70, 0x72, 0x6f, 0x6d, 0x70, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x12, 0x2b,
	0x0a, 0x11, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x6f, 0x6b,
	0x65, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x10, 0x63, 0x6f, 0x6d, 0x70, 0x6c,
	0x65, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x12, 0x36,
	0x0a, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1c, 0x2e, 0x6e, 0x74, 0x74, 0x2e, 0x61, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x6f, 0x6b, 0x65,
	0x6e, 0x55, 0x73, 0x61, 0x67, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x07, 0x64,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x22, 0xb3, 0x03, 0x0a, 0x11, 0x54, 0x6f, 0x6b, 0x65, 0x6e,
	0x55, 0x73, 0x61, 0x67, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x29, 0x0a, 0x10,
	0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x69, 0x6e, 0x67, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x73,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0f, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x69, 0x6e,
	0x67, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x61, 0x63, 0x68, 0x65,
	0x64, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c,
	0x63, 0x61, 0x63, 0x68, 0x65, 0x64, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x12, 0x2c, 0x0a, 0x12,
	0x61, 0x75, 0x64, 0x69, 0x6f, 0x5f, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x5f, 0x74, 0x6f, 0x6b, 0x65,
	0x6e, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x10, 0x61, 0x75, 0x64, 0x69, 0x6f, 0x49,
	0x6e, 0x70, 0x75, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x12, 0x2e, 0x0a, 0x13, 0x61, 0x75,
	0x64, 0x69, 0x6f, 0x5f, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e,
	0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x11, 0x61, 0x75, 0x64, 0x69, 0x6f, 0x4f, 0x75,
	0x74, 0x70, 0x75, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x12, 0x3d, 0x0a, 0x1b, 0x63, 0x61,
	0x63, 0x68, 0x65, 0x5f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x6e, 0x70,
	0x75, 0x74, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x18, 0x63, 0x61, 0x63, 0x68, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e,
	0x70, 0x75, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x12, 0x35, 0x0a, 0x17, 0x63, 0x61, 0x63,
	0x68, 0x65, 0x5f, 0x72, 0x65, 0x61, 0x64, 0x5f, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x5f, 0x74, 0x6f,
	0x6b, 0x65, 0x6e, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x14, 0x63, 0x61, 0x63, 0x68,
	0x65, 0x52, 0x65, 0x61, 0x64, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x73,
	0x12, 0x3c, 0x0a, 0x1a, 0x61, 0x63, 0x63, 0x65, 0x70, 0x74, 0x65, 0x64, 0x5f, 0x70, 0x72, 0x65,
	0x64, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x18, 0x61, 0x63, 0x63, 0x65, 0x70, 0x74, 0x65, 0x64, 0x50, 0x72,
	0x65, 0x64, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x12, 0x3c,
	0x0a, 0x1a, 0x72, 0x65, 0x6a, 0x65, 0x63, 0x74, 0x65, 0x64, 0x5f, 0x70, 0x72, 0x65, 0x64, 0x69,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x18, 0x72, 0x65, 0x6a, 0x65, 0x63, 0x74, 0x65, 0x64, 0x50, 0x72, 0x65, 0x64,
	0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x22, 0x5c, 0x0a, 0x07,
	0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x14, 0x0a, 0x04, 0x6a, 0x73, 0x6f, 0x6e, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x04, 0x6a, 0x73, 0x6f, 0x6e, 0x12, 0x14, 0x0a,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x48, 0x00, 0x52, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x12, 0x1d, 0x0a, 0x0a, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x54, 0x79,
	0x70, 0x65, 0x42, 0x06, 0x0a, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x22, 0x85, 0x01, 0x0a, 0x0e, 0x54,
	0x6f, 0x6f, 0x6c, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x21, 0x0a, 0x0c, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x5f, 0x73, 0x63, 0x68,
	0x65, 0x6d, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x69, 0x6e, 0x70, 0x75, 0x74,
	0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64,
	0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64,
	0x65, 0x72, 0x22, 0x4c, 0x0a, 0x08, 0x54, 0x6f, 0x6f, 0x6c, 0x43, 0x61, 0x6c, 0x6c, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x72, 0x67, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x72, 0x67, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x73,
	0x22, 0x94, 0x01, 0x0a, 0x0c, 0x54, 0x6f, 0x6f, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x20, 0x0a, 0x0c, 0x74, 0x6f, 0x6f, 0x6c, 0x5f, 0x63, 0x61, 0x6c, 0x6c, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x74, 0x6f, 0x6f, 0x6c, 0x43, 0x61, 0x6c,
	0x6c, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x6f, 0x6f, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x74, 0x6f, 0x6f, 0x6c, 0x12, 0x2c, 0x0a, 0x06, 0x6f, 0x75, 0x74, 0x70, 0x75,
	0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6e, 0x74, 0x74, 0x2e, 0x61, 0x69,
	0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x48, 0x00, 0x52, 0x06, 0x6f,
	0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x16, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x42, 0x08, 0x0a,
	0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x36, 0x0a, 0x09, 0x54, 0x6f, 0x6f, 0x6c, 0x43,
	0x61, 0x6c, 0x6c, 0x73, 0x12, 0x29, 0x0a, 0x05, 0x63, 0x61, 0x6c, 0x6c, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6e, 0x74, 0x74, 0x2e, 0x61, 0x69, 0x2e, 0x76, 0x31, 0x2e,
	0x54, 0x6f, 0x6f, 0x6c, 0x43, 0x61, 0x6c, 0x6c, 0x52, 0x05, 0x63, 0x61, 0x6c, 0x6c, 0x73, 0x22,
	0x8f, 0x01, 0x0a, 0x08, 0x43, 0x69, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1f, 0x0a, 0x0b,
	0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x1b, 0x0a,
	0x09, 0x65, 0x6e, 0x64, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x08, 0x65, 0x6e, 0x64, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x65,
	0x78, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x65, 0x78, 0x74, 0x12, 0x31,
	0x0a, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19,
	0x2e, 0x6e, 0x74, 0x74, 0x2e, 0x61, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x69, 0x74, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x22, 0xfe, 0x02, 0x0a, 0x0e, 0x43, 0x69, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x71, 0x75,
	0x6f, 0x74, 0x65, 0x64, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x71, 0x75, 0x6f, 0x74, 0x65, 0x64, 0x54, 0x65, 0x78, 0x74, 0x12, 0x3a, 0x0a, 0x0a, 0x63,
	0x68, 0x61, 0x72, 0x5f, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x19, 0x2e, 0x6e, 0x74, 0x74, 0x2e, 0x61, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x68, 0x61, 0x72,
	0x61, 0x63, 0x74, 0x65, 0x72, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x48, 0x00, 0x52, 0x09, 0x63, 0x68,
	0x61, 0x72, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x2e, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6e, 0x74, 0x74, 0x2e, 0x61, 0x69, 0x2e, 0x76,
	0x31, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x48,
	0x00, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x2b, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x6e, 0x74, 0x74, 0x2e, 0x61, 0x69, 0x2e, 0x76, 0x31,
	0x2e, 0x55, 0x52, 0x4c, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x48, 0x00, 0x52,
	0x03, 0x75, 0x72, 0x6c, 0x12, 0x43, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x6e, 0x74, 0x74, 0x2e, 0x61, 0x69, 0x2e,
	0x76, 0x31, 0x2e, 0x43, 0x69, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52,
	0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x1a, 0x3b, 0x0a, 0x0d, 0x4d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x42, 0x0a, 0x0a, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x22, 0x38, 0x0a, 0x0e, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x52,
	0x61, 0x6e, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x65, 0x6e,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x65, 0x6e, 0x64, 0x22, 0x30, 0x0a, 0x0d,
	0x50, 0x61, 0x67, 0x65, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x1f, 0x0a,
	0x0b, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0a, 0x70, 0x61, 0x67, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x22, 0x3c,
	0x0a, 0x0c, 0x55, 0x52, 0x4c, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x10,
	0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c,
	0x12, 0x1a, 0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x70, 0x61, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x70, 0x61, 0x74, 0x68, 0x2a, 0x6c, 0x0a, 0x0e,
	0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x12, 0x1f,
	0x0a, 0x1b, 0x43, 0x4f, 0x4e, 0x54, 0x45, 0x4e, 0x54, 0x5f, 0x43, 0x48, 0x41, 0x4e, 0x4e, 0x45,
	0x4c, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12,
	0x1b, 0x0a, 0x17, 0x43, 0x4f, 0x4e, 0x54, 0x45, 0x4e, 0x54, 0x5f, 0x43, 0x48, 0x41, 0x4e, 0x4e,
	0x45, 0x4c, 0x5f, 0x43, 0x4f, 0x4e, 0x54, 0x45, 0x4e, 0x54, 0x10, 0x01, 0x12, 0x1c, 0x0a, 0x18,
	0x43, 0x4f, 0x4e, 0x54, 0x45, 0x4e, 0x54, 0x5f, 0x43, 0x48, 0x41, 0x4e, 0x4e, 0x45, 0x4c, 0x5f,
	0x54, 0x48, 0x49, 0x4e, 0x4b, 0x49, 0x4e, 0x47, 0x10, 0x02, 0x2a, 0x7d, 0x0a, 0x08, 0x4c, 0x4c,
	0x4d, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x19, 0x0a, 0x15, 0x4c, 0x4c, 0x4d, 0x5f, 0x45, 0x52,
	0x52, 0x4f, 0x52, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10,
	0x00, 0x12, 0x12, 0x0a, 0x0e, 0x4c, 0x4c, 0x4d, 0x5f, 0x52, 0x41, 0x54, 0x45, 0x5f, 0x4c, 0x49,
	0x4d, 0x49, 0x54, 0x10, 0x01, 0x12, 0x16, 0x0a, 0x12, 0x4c, 0x4c, 0x4d, 0x5f, 0x43, 0x4f, 0x4e,
	0x54, 0x45, 0x4e, 0x54, 0x5f, 0x46, 0x49, 0x4c, 0x54, 0x45, 0x52, 0x10, 0x02, 0x12, 0x16, 0x0a,
	0x12, 0x4c, 0x4c, 0x4d, 0x5f, 0x50, 0x52, 0x4f, 0x56, 0x49, 0x44, 0x45, 0x52, 0x5f, 0x45, 0x52,
	0x52, 0x4f, 0x52, 0x10, 0x03, 0x12, 0x12, 0x0a, 0x0e, 0x4c, 0x4c, 0x4d, 0x5f, 0x54, 0x4f, 0x4f,
	0x4c, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x04, 0x2a, 0x7c, 0x0a, 0x0e, 0x52, 0x65, 0x61,
	0x73, 0x6f, 0x6e, 0x69, 0x6e, 0x67, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x1b, 0x0a, 0x17, 0x52,
	0x45, 0x41, 0x53, 0x4f, 0x4e, 0x49, 0x4e, 0x47, 0x5f, 0x4c, 0x45, 0x56, 0x45, 0x4c, 0x5f, 0x44,
	0x45, 0x46, 0x41, 0x55, 0x4c, 0x54, 0x10, 0x00, 0x12, 0x17, 0x0a, 0x13, 0x52, 0x45, 0x41, 0x53,
	0x4f, 0x4e, 0x49, 0x4e, 0x47, 0x5f, 0x4c, 0x45, 0x56, 0x45, 0x4c, 0x5f, 0x4c, 0x4f, 0x57, 0x10,
	0x01, 0x12, 0x1a, 0x0a, 0x16, 0x52, 0x45, 0x41, 0x53, 0x4f, 0x4e, 0x49, 0x4e, 0x47, 0x5f, 0x4c,
	0x45, 0x56, 0x45, 0x4c, 0x5f, 0x4d, 0x45, 0x44, 0x49, 0x55, 0x4d, 0x10, 0x02, 0x12, 0x18, 0x0a,
	0x14, 0x52, 0x45, 0x41, 0x53, 0x4f, 0x4e, 0x49, 0x4e, 0x47, 0x5f, 0x4c, 0x45, 0x56, 0x45, 0x4c,
	0x5f, 0x48, 0x49, 0x47, 0x48, 0x10, 0x03, 0x42, 0x63, 0xe8, 0xde, 0x21, 0x00, 0x0a, 0x10, 0x63,
	0x6f, 0x6d, 0x2e, 0x6e, 0x74, 0x74, 0x2e, 0x61, 0x69, 0x2e, 0x70, 0x62, 0x2e, 0x76, 0x31, 0x42,
	0x0b, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x00, 0x5a, 0x3c,
	0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x6c, 0x6f, 0x75, 0x64,
	0x77, 0x61, 0x6e, 0x2f, 0x65, 0x64, 0x67, 0x65, 0x6c, 0x71, 0x2f, 0x61, 0x69, 0x2f, 0x63, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x3b, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x5f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	edgelq_ai_proto_v1_common_proto_rawDescOnce sync.Once
	edgelq_ai_proto_v1_common_proto_rawDescData = edgelq_ai_proto_v1_common_proto_rawDesc
)

func edgelq_ai_proto_v1_common_proto_rawDescGZIP() []byte {
	edgelq_ai_proto_v1_common_proto_rawDescOnce.Do(func() {
		edgelq_ai_proto_v1_common_proto_rawDescData = protoimpl.X.CompressGZIP(edgelq_ai_proto_v1_common_proto_rawDescData)
	})
	return edgelq_ai_proto_v1_common_proto_rawDescData
}

var edgelq_ai_proto_v1_common_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var edgelq_ai_proto_v1_common_proto_msgTypes = make([]protoimpl.MessageInfo, 22)
var edgelq_ai_proto_v1_common_proto_goTypes = []interface{}{
	(ContentChannel)(0),       // 0: ntt.ai.v1.ContentChannel
	(LLMError)(0),             // 1: ntt.ai.v1.LLMError
	(ReasoningLevel)(0),       // 2: ntt.ai.v1.ReasoningLevel
	(*Message)(nil),           // 3: ntt.ai.v1.Message
	(*ContentPart)(nil),       // 4: ntt.ai.v1.ContentPart
	(*TextContent)(nil),       // 5: ntt.ai.v1.TextContent
	(*ImageContent)(nil),      // 6: ntt.ai.v1.ImageContent
	(*AudioContent)(nil),      // 7: ntt.ai.v1.AudioContent
	(*FileContent)(nil),       // 8: ntt.ai.v1.FileContent
	(*ToolCallContent)(nil),   // 9: ntt.ai.v1.ToolCallContent
	(*ToolResultContent)(nil), // 10: ntt.ai.v1.ToolResultContent
	(*ThinkingContent)(nil),   // 11: ntt.ai.v1.ThinkingContent
	(*TokenUsage)(nil),        // 12: ntt.ai.v1.TokenUsage
	(*TokenUsageDetails)(nil), // 13: ntt.ai.v1.TokenUsageDetails
	(*Payload)(nil),           // 14: ntt.ai.v1.Payload
	(*ToolDefinition)(nil),    // 15: ntt.ai.v1.ToolDefinition
	(*ToolCall)(nil),          // 16: ntt.ai.v1.ToolCall
	(*ToolResponse)(nil),      // 17: ntt.ai.v1.ToolResponse
	(*ToolCalls)(nil),         // 18: ntt.ai.v1.ToolCalls
	(*Citation)(nil),          // 19: ntt.ai.v1.Citation
	(*CitationSource)(nil),    // 20: ntt.ai.v1.CitationSource
	(*CharacterRange)(nil),    // 21: ntt.ai.v1.CharacterRange
	(*PageReference)(nil),     // 22: ntt.ai.v1.PageReference
	(*URLReference)(nil),      // 23: ntt.ai.v1.URLReference
	nil,                       // 24: ntt.ai.v1.CitationSource.MetadataEntry
}
var edgelq_ai_proto_v1_common_proto_depIdxs = []int32{
	4,  // 0: ntt.ai.v1.Message.parts:type_name -> ntt.ai.v1.ContentPart
	5,  // 1: ntt.ai.v1.ContentPart.text:type_name -> ntt.ai.v1.TextContent
	6,  // 2: ntt.ai.v1.ContentPart.image:type_name -> ntt.ai.v1.ImageContent
	7,  // 3: ntt.ai.v1.ContentPart.audio:type_name -> ntt.ai.v1.AudioContent
	8,  // 4: ntt.ai.v1.ContentPart.file:type_name -> ntt.ai.v1.FileContent
	9,  // 5: ntt.ai.v1.ContentPart.tool_call:type_name -> ntt.ai.v1.ToolCallContent
	10, // 6: ntt.ai.v1.ContentPart.tool_result:type_name -> ntt.ai.v1.ToolResultContent
	11, // 7: ntt.ai.v1.ContentPart.thinking:type_name -> ntt.ai.v1.ThinkingContent
	13, // 8: ntt.ai.v1.TokenUsage.details:type_name -> ntt.ai.v1.TokenUsageDetails
	14, // 9: ntt.ai.v1.ToolResponse.output:type_name -> ntt.ai.v1.Payload
	16, // 10: ntt.ai.v1.ToolCalls.calls:type_name -> ntt.ai.v1.ToolCall
	20, // 11: ntt.ai.v1.Citation.source:type_name -> ntt.ai.v1.CitationSource
	21, // 12: ntt.ai.v1.CitationSource.char_range:type_name -> ntt.ai.v1.CharacterRange
	22, // 13: ntt.ai.v1.CitationSource.page:type_name -> ntt.ai.v1.PageReference
	23, // 14: ntt.ai.v1.CitationSource.url:type_name -> ntt.ai.v1.URLReference
	24, // 15: ntt.ai.v1.CitationSource.metadata:type_name -> ntt.ai.v1.CitationSource.MetadataEntry
	16, // [16:16] is the sub-list for method output_type
	16, // [16:16] is the sub-list for method input_type
	16, // [16:16] is the sub-list for extension type_name
	16, // [16:16] is the sub-list for extension extendee
	0,  // [0:16] is the sub-list for field type_name
}

func init() { edgelq_ai_proto_v1_common_proto_init() }
func edgelq_ai_proto_v1_common_proto_init() {
	if edgelq_ai_proto_v1_common_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {

		edgelq_ai_proto_v1_common_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Message); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		edgelq_ai_proto_v1_common_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ContentPart); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		edgelq_ai_proto_v1_common_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TextContent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		edgelq_ai_proto_v1_common_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ImageContent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		edgelq_ai_proto_v1_common_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AudioContent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		edgelq_ai_proto_v1_common_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FileContent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		edgelq_ai_proto_v1_common_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ToolCallContent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		edgelq_ai_proto_v1_common_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ToolResultContent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		edgelq_ai_proto_v1_common_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ThinkingContent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		edgelq_ai_proto_v1_common_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TokenUsage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		edgelq_ai_proto_v1_common_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TokenUsageDetails); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		edgelq_ai_proto_v1_common_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Payload); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		edgelq_ai_proto_v1_common_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ToolDefinition); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		edgelq_ai_proto_v1_common_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ToolCall); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		edgelq_ai_proto_v1_common_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ToolResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		edgelq_ai_proto_v1_common_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ToolCalls); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		edgelq_ai_proto_v1_common_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Citation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		edgelq_ai_proto_v1_common_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CitationSource); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		edgelq_ai_proto_v1_common_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CharacterRange); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		edgelq_ai_proto_v1_common_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PageReference); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		edgelq_ai_proto_v1_common_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*URLReference); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}

	edgelq_ai_proto_v1_common_proto_msgTypes[1].OneofWrappers = []interface{}{
		(*ContentPart_Text)(nil),
		(*ContentPart_Image)(nil),
		(*ContentPart_Audio)(nil),
		(*ContentPart_File)(nil),
		(*ContentPart_ToolCall)(nil),
		(*ContentPart_ToolResult)(nil),
		(*ContentPart_Thinking)(nil),
	}
	edgelq_ai_proto_v1_common_proto_msgTypes[3].OneofWrappers = []interface{}{
		(*ImageContent_Url)(nil),
		(*ImageContent_Data)(nil),
	}
	edgelq_ai_proto_v1_common_proto_msgTypes[4].OneofWrappers = []interface{}{
		(*AudioContent_Url)(nil),
		(*AudioContent_Data)(nil),
	}
	edgelq_ai_proto_v1_common_proto_msgTypes[5].OneofWrappers = []interface{}{
		(*FileContent_Url)(nil),
		(*FileContent_Data)(nil),
	}
	edgelq_ai_proto_v1_common_proto_msgTypes[7].OneofWrappers = []interface{}{
		(*ToolResultContent_Content)(nil),
		(*ToolResultContent_Error)(nil),
	}
	edgelq_ai_proto_v1_common_proto_msgTypes[11].OneofWrappers = []interface{}{
		(*Payload_Json)(nil),
		(*Payload_Data)(nil),
	}
	edgelq_ai_proto_v1_common_proto_msgTypes[14].OneofWrappers = []interface{}{
		(*ToolResponse_Output)(nil),
		(*ToolResponse_Error)(nil),
	}
	edgelq_ai_proto_v1_common_proto_msgTypes[17].OneofWrappers = []interface{}{
		(*CitationSource_CharRange)(nil),
		(*CitationSource_Page)(nil),
		(*CitationSource_Url)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: edgelq_ai_proto_v1_common_proto_rawDesc,
			NumEnums:      3,
			NumMessages:   22,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           edgelq_ai_proto_v1_common_proto_goTypes,
		DependencyIndexes: edgelq_ai_proto_v1_common_proto_depIdxs,
		EnumInfos:         edgelq_ai_proto_v1_common_proto_enumTypes,
		MessageInfos:      edgelq_ai_proto_v1_common_proto_msgTypes,
	}.Build()
	edgelq_ai_proto_v1_common_proto = out.File
	edgelq_ai_proto_v1_common_proto_rawDesc = nil
	edgelq_ai_proto_v1_common_proto_goTypes = nil
	edgelq_ai_proto_v1_common_proto_depIdxs = nil
}
