// Code generated by protoc-gen-goten-client
// API: ChatService
// DO NOT EDIT!!!

package chat_client

import (
	"google.golang.org/protobuf/proto"

	gotenclient "github.com/cloudwan/goten-sdk/runtime/client"
	gotenresource "github.com/cloudwan/goten-sdk/runtime/resource"
)

// proto imports
import ()

// Reference imports to suppress errors if they are not otherwise used.
var (
	_ = new(proto.Message)
	_ = new(gotenclient.MethodDescriptor)
	_ = gotenresource.WildcardId
)

// make sure we're using proto imports
var ()

var (
	descriptorsInitialized bool
	chatServiceDescriptor  *ChatServiceDescriptor
	completionDescriptor   *CompletionDescriptor
)

type CompletionDescriptor struct{}

type CompletionDescriptorClientMsgHandle struct{}

type CompletionDescriptorServerMsgHandle struct{}

func (d *CompletionDescriptor) NewEmptyClientMsg() proto.Message {
	return &CompletionRequest{}
}

func (d *CompletionDescriptor) NewEmptyServerMsg() proto.Message {
	return &CompletionResponse{}
}

func (d *CompletionDescriptor) IsUnary() bool {
	return false
}

func (d *CompletionDescriptor) IsClientStream() bool {
	return true
}

func (d *CompletionDescriptor) IsServerStream() bool {
	return true
}

func (d *CompletionDescriptor) IsCollection() bool {
	return false
}

func (d *CompletionDescriptor) IsPlural() bool {
	return false
}

func (d *CompletionDescriptor) HasResource() bool {
	return false
}

func (d *CompletionDescriptor) RequestHasResourceBody() bool {
	return false
}

func (d *CompletionDescriptor) GetVerb() string {
	return "completion"
}

func (d *CompletionDescriptor) GetMethodName() string {
	return "Completion"
}

func (d *CompletionDescriptor) GetFullMethodName() string {
	return "/ntt.ai.v1.ChatService/Completion"
}

func (d *CompletionDescriptor) GetProtoPkgName() string {
	return "ntt.ai.v1"
}

func (d *CompletionDescriptor) GetApiName() string {
	return "ChatService"
}

func (d *CompletionDescriptor) GetServiceDomain() string {
	return "ai.edgelq.com"
}

func (d *CompletionDescriptor) GetServiceVersion() string {
	return "v1"
}

func (d *CompletionDescriptor) GetApiDescriptor() gotenclient.ApiDescriptor {
	return chatServiceDescriptor
}

func (d *CompletionDescriptor) GetResourceDescriptor() gotenresource.Descriptor {
	return nil
}

func (d *CompletionDescriptor) GetClientMsgReflectHandle() gotenclient.MethodMsgHandle {
	return &CompletionDescriptorClientMsgHandle{}
}

func (d *CompletionDescriptor) GetServerMsgReflectHandle() gotenclient.MethodMsgHandle {
	return &CompletionDescriptorServerMsgHandle{}
}

func (h *CompletionDescriptorClientMsgHandle) ExtractResourceName(msg proto.Message) gotenresource.Name {
	return nil
}

func (h *CompletionDescriptorClientMsgHandle) ExtractResourceNames(msg proto.Message) gotenresource.NameList {
	return nil
}

func (h *CompletionDescriptorClientMsgHandle) ExtractCollectionName(msg proto.Message) gotenresource.Name {
	return nil
}

func (h *CompletionDescriptorClientMsgHandle) ExtractResourceBody(msg proto.Message) gotenresource.Resource {
	return nil
}

func (h *CompletionDescriptorClientMsgHandle) ExtractResourceBodies(msg proto.Message) gotenresource.ResourceList {
	return nil
}

func (h *CompletionDescriptorServerMsgHandle) ExtractResourceName(msg proto.Message) gotenresource.Name {
	return nil
}

func (h *CompletionDescriptorServerMsgHandle) ExtractResourceNames(msg proto.Message) gotenresource.NameList {
	return nil
}

func (h *CompletionDescriptorServerMsgHandle) ExtractCollectionName(msg proto.Message) gotenresource.Name {
	return nil
}

func (h *CompletionDescriptorServerMsgHandle) ExtractResourceBody(msg proto.Message) gotenresource.Resource {
	return nil
}

func (h *CompletionDescriptorServerMsgHandle) ExtractResourceBodies(msg proto.Message) gotenresource.ResourceList {
	return nil
}

func GetCompletionDescriptor() *CompletionDescriptor {
	return completionDescriptor
}

type ChatServiceDescriptor struct{}

func (d *ChatServiceDescriptor) AllMethodDescriptors() []gotenclient.MethodDescriptor {
	return []gotenclient.MethodDescriptor{
		completionDescriptor,
	}
}

func (d *ChatServiceDescriptor) GetFullAPIName() string {
	return "/ntt.ai.v1.ChatService"
}

func (d *ChatServiceDescriptor) GetProtoPkgName() string {
	return "ntt.ai.v1"
}

func (d *ChatServiceDescriptor) GetApiName() string {
	return "ChatService"
}

func (d *ChatServiceDescriptor) GetServiceDomain() string {
	return "ai.edgelq.com"
}

func (d *ChatServiceDescriptor) GetServiceVersion() string {
	return "v1"
}

func GetChatServiceDescriptor() *ChatServiceDescriptor {
	return chatServiceDescriptor
}

func initDescriptors() {
	chatServiceDescriptor = &ChatServiceDescriptor{}
	completionDescriptor = &CompletionDescriptor{}
	gotenclient.GetRegistry().RegisterApiDescriptor(chatServiceDescriptor)
	gotenclient.GetRegistry().RegisterMethodDescriptor(completionDescriptor)
}

func init() {
	if !descriptorsInitialized {
		initDescriptors()
		descriptorsInitialized = true
	}
}
