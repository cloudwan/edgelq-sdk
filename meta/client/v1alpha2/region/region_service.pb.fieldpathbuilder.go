// Code generated by protoc-gen-goten-object
// File: edgelq/meta/proto/v1alpha2/region_service.proto
// DO NOT EDIT!!!

package region_client

// proto imports
import (
	ntt_meta "github.com/cloudwan/edgelq-sdk/common/types/meta"
	syncing_meta "github.com/cloudwan/edgelq-sdk/meta/multi_region/proto/syncing_meta"
	region "github.com/cloudwan/edgelq-sdk/meta/resources/v1alpha2/region"
	view "github.com/cloudwan/goten-sdk/runtime/api/view"
	watch_type "github.com/cloudwan/goten-sdk/runtime/api/watch_type"
	empty "github.com/golang/protobuf/ptypes/empty"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	field_mask "google.golang.org/genproto/protobuf/field_mask"
)

// make sure we're using proto imports
var (
	_ = &ntt_meta.Meta{}
	_ = &syncing_meta.SyncingMeta{}
	_ = &region.Region{}
	_ = &empty.Empty{}
	_ = &field_mask.FieldMask{}
	_ = &timestamp.Timestamp{}
	_ = view.View(0)
	_ = watch_type.WatchType(0)
)

type GetRegionRequestFieldPathBuilder struct{}

func NewGetRegionRequestFieldPathBuilder() GetRegionRequestFieldPathBuilder {
	return GetRegionRequestFieldPathBuilder{}
}
func (GetRegionRequestFieldPathBuilder) Name() GetRegionRequestPathSelectorName {
	return GetRegionRequestPathSelectorName{}
}
func (GetRegionRequestFieldPathBuilder) FieldMask() GetRegionRequestPathSelectorFieldMask {
	return GetRegionRequestPathSelectorFieldMask{}
}
func (GetRegionRequestFieldPathBuilder) View() GetRegionRequestPathSelectorView {
	return GetRegionRequestPathSelectorView{}
}

type GetRegionRequestPathSelectorName struct{}

func (GetRegionRequestPathSelectorName) FieldPath() *GetRegionRequest_FieldTerminalPath {
	return &GetRegionRequest_FieldTerminalPath{selector: GetRegionRequest_FieldPathSelectorName}
}

func (s GetRegionRequestPathSelectorName) WithValue(value *region.Reference) *GetRegionRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*GetRegionRequest_FieldTerminalPathValue)
}

func (s GetRegionRequestPathSelectorName) WithArrayOfValues(values []*region.Reference) *GetRegionRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*GetRegionRequest_FieldTerminalPathArrayOfValues)
}

type GetRegionRequestPathSelectorFieldMask struct{}

func (GetRegionRequestPathSelectorFieldMask) FieldPath() *GetRegionRequest_FieldTerminalPath {
	return &GetRegionRequest_FieldTerminalPath{selector: GetRegionRequest_FieldPathSelectorFieldMask}
}

func (s GetRegionRequestPathSelectorFieldMask) WithValue(value *region.Region_FieldMask) *GetRegionRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*GetRegionRequest_FieldTerminalPathValue)
}

func (s GetRegionRequestPathSelectorFieldMask) WithArrayOfValues(values []*region.Region_FieldMask) *GetRegionRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*GetRegionRequest_FieldTerminalPathArrayOfValues)
}

type GetRegionRequestPathSelectorView struct{}

func (GetRegionRequestPathSelectorView) FieldPath() *GetRegionRequest_FieldTerminalPath {
	return &GetRegionRequest_FieldTerminalPath{selector: GetRegionRequest_FieldPathSelectorView}
}

func (s GetRegionRequestPathSelectorView) WithValue(value view.View) *GetRegionRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*GetRegionRequest_FieldTerminalPathValue)
}

func (s GetRegionRequestPathSelectorView) WithArrayOfValues(values []view.View) *GetRegionRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*GetRegionRequest_FieldTerminalPathArrayOfValues)
}

type BatchGetRegionsRequestFieldPathBuilder struct{}

func NewBatchGetRegionsRequestFieldPathBuilder() BatchGetRegionsRequestFieldPathBuilder {
	return BatchGetRegionsRequestFieldPathBuilder{}
}
func (BatchGetRegionsRequestFieldPathBuilder) Names() BatchGetRegionsRequestPathSelectorNames {
	return BatchGetRegionsRequestPathSelectorNames{}
}
func (BatchGetRegionsRequestFieldPathBuilder) FieldMask() BatchGetRegionsRequestPathSelectorFieldMask {
	return BatchGetRegionsRequestPathSelectorFieldMask{}
}
func (BatchGetRegionsRequestFieldPathBuilder) View() BatchGetRegionsRequestPathSelectorView {
	return BatchGetRegionsRequestPathSelectorView{}
}

type BatchGetRegionsRequestPathSelectorNames struct{}

func (BatchGetRegionsRequestPathSelectorNames) FieldPath() *BatchGetRegionsRequest_FieldTerminalPath {
	return &BatchGetRegionsRequest_FieldTerminalPath{selector: BatchGetRegionsRequest_FieldPathSelectorNames}
}

func (s BatchGetRegionsRequestPathSelectorNames) WithValue(value []*region.Reference) *BatchGetRegionsRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetRegionsRequest_FieldTerminalPathValue)
}

func (s BatchGetRegionsRequestPathSelectorNames) WithArrayOfValues(values [][]*region.Reference) *BatchGetRegionsRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetRegionsRequest_FieldTerminalPathArrayOfValues)
}

func (s BatchGetRegionsRequestPathSelectorNames) WithItemValue(value *region.Reference) *BatchGetRegionsRequest_FieldTerminalPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*BatchGetRegionsRequest_FieldTerminalPathArrayItemValue)
}

type BatchGetRegionsRequestPathSelectorFieldMask struct{}

func (BatchGetRegionsRequestPathSelectorFieldMask) FieldPath() *BatchGetRegionsRequest_FieldTerminalPath {
	return &BatchGetRegionsRequest_FieldTerminalPath{selector: BatchGetRegionsRequest_FieldPathSelectorFieldMask}
}

func (s BatchGetRegionsRequestPathSelectorFieldMask) WithValue(value *region.Region_FieldMask) *BatchGetRegionsRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetRegionsRequest_FieldTerminalPathValue)
}

func (s BatchGetRegionsRequestPathSelectorFieldMask) WithArrayOfValues(values []*region.Region_FieldMask) *BatchGetRegionsRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetRegionsRequest_FieldTerminalPathArrayOfValues)
}

type BatchGetRegionsRequestPathSelectorView struct{}

func (BatchGetRegionsRequestPathSelectorView) FieldPath() *BatchGetRegionsRequest_FieldTerminalPath {
	return &BatchGetRegionsRequest_FieldTerminalPath{selector: BatchGetRegionsRequest_FieldPathSelectorView}
}

func (s BatchGetRegionsRequestPathSelectorView) WithValue(value view.View) *BatchGetRegionsRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetRegionsRequest_FieldTerminalPathValue)
}

func (s BatchGetRegionsRequestPathSelectorView) WithArrayOfValues(values []view.View) *BatchGetRegionsRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetRegionsRequest_FieldTerminalPathArrayOfValues)
}

type BatchGetRegionsResponseFieldPathBuilder struct{}

func NewBatchGetRegionsResponseFieldPathBuilder() BatchGetRegionsResponseFieldPathBuilder {
	return BatchGetRegionsResponseFieldPathBuilder{}
}
func (BatchGetRegionsResponseFieldPathBuilder) Regions() BatchGetRegionsResponsePathSelectorRegions {
	return BatchGetRegionsResponsePathSelectorRegions{}
}
func (BatchGetRegionsResponseFieldPathBuilder) Missing() BatchGetRegionsResponsePathSelectorMissing {
	return BatchGetRegionsResponsePathSelectorMissing{}
}

type BatchGetRegionsResponsePathSelectorRegions struct{}

func (BatchGetRegionsResponsePathSelectorRegions) FieldPath() *BatchGetRegionsResponse_FieldTerminalPath {
	return &BatchGetRegionsResponse_FieldTerminalPath{selector: BatchGetRegionsResponse_FieldPathSelectorRegions}
}

func (s BatchGetRegionsResponsePathSelectorRegions) WithValue(value []*region.Region) *BatchGetRegionsResponse_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetRegionsResponse_FieldTerminalPathValue)
}

func (s BatchGetRegionsResponsePathSelectorRegions) WithArrayOfValues(values [][]*region.Region) *BatchGetRegionsResponse_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetRegionsResponse_FieldTerminalPathArrayOfValues)
}

func (s BatchGetRegionsResponsePathSelectorRegions) WithItemValue(value *region.Region) *BatchGetRegionsResponse_FieldTerminalPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*BatchGetRegionsResponse_FieldTerminalPathArrayItemValue)
}
func (BatchGetRegionsResponsePathSelectorRegions) WithSubPath(subPath region.Region_FieldPath) *BatchGetRegionsResponse_FieldSubPath {
	return &BatchGetRegionsResponse_FieldSubPath{selector: BatchGetRegionsResponse_FieldPathSelectorRegions, subPath: subPath}
}

func (s BatchGetRegionsResponsePathSelectorRegions) WithSubValue(subPathValue region.Region_FieldPathValue) *BatchGetRegionsResponse_FieldSubPathValue {
	return &BatchGetRegionsResponse_FieldSubPathValue{BatchGetRegionsResponse_FieldPath: s.WithSubPath(subPathValue), subPathValue: subPathValue}
}

func (s BatchGetRegionsResponsePathSelectorRegions) WithSubArrayOfValues(subPathArrayOfValues region.Region_FieldPathArrayOfValues) *BatchGetRegionsResponse_FieldSubPathArrayOfValues {
	return &BatchGetRegionsResponse_FieldSubPathArrayOfValues{BatchGetRegionsResponse_FieldPath: s.WithSubPath(subPathArrayOfValues), subPathArrayOfValues: subPathArrayOfValues}
}

func (s BatchGetRegionsResponsePathSelectorRegions) WithSubArrayItemValue(subPathArrayItemValue region.Region_FieldPathArrayItemValue) *BatchGetRegionsResponse_FieldSubPathArrayItemValue {
	return &BatchGetRegionsResponse_FieldSubPathArrayItemValue{BatchGetRegionsResponse_FieldPath: s.WithSubPath(subPathArrayItemValue), subPathItemValue: subPathArrayItemValue}
}

func (BatchGetRegionsResponsePathSelectorRegions) Name() BatchGetRegionsResponsePathSelectorRegionsName {
	return BatchGetRegionsResponsePathSelectorRegionsName{}
}

func (BatchGetRegionsResponsePathSelectorRegions) Title() BatchGetRegionsResponsePathSelectorRegionsTitle {
	return BatchGetRegionsResponsePathSelectorRegionsTitle{}
}

func (BatchGetRegionsResponsePathSelectorRegions) Domain() BatchGetRegionsResponsePathSelectorRegionsDomain {
	return BatchGetRegionsResponsePathSelectorRegionsDomain{}
}

func (BatchGetRegionsResponsePathSelectorRegions) Location() BatchGetRegionsResponsePathSelectorRegionsLocation {
	return BatchGetRegionsResponsePathSelectorRegionsLocation{}
}

func (BatchGetRegionsResponsePathSelectorRegions) IsDefault() BatchGetRegionsResponsePathSelectorRegionsIsDefault {
	return BatchGetRegionsResponsePathSelectorRegionsIsDefault{}
}

func (BatchGetRegionsResponsePathSelectorRegions) ConnectivityScores() BatchGetRegionsResponsePathSelectorRegionsConnectivityScores {
	return BatchGetRegionsResponsePathSelectorRegionsConnectivityScores{}
}

func (BatchGetRegionsResponsePathSelectorRegions) Metadata() BatchGetRegionsResponsePathSelectorRegionsMetadata {
	return BatchGetRegionsResponsePathSelectorRegionsMetadata{}
}

type BatchGetRegionsResponsePathSelectorRegionsName struct{}

func (BatchGetRegionsResponsePathSelectorRegionsName) FieldPath() *BatchGetRegionsResponse_FieldSubPath {
	return &BatchGetRegionsResponse_FieldSubPath{
		selector: BatchGetRegionsResponse_FieldPathSelectorRegions,
		subPath:  region.NewRegionFieldPathBuilder().Name().FieldPath(),
	}
}

func (s BatchGetRegionsResponsePathSelectorRegionsName) WithValue(value *region.Name) *BatchGetRegionsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetRegionsResponse_FieldSubPathValue)
}

func (s BatchGetRegionsResponsePathSelectorRegionsName) WithArrayOfValues(values []*region.Name) *BatchGetRegionsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetRegionsResponse_FieldSubPathArrayOfValues)
}

type BatchGetRegionsResponsePathSelectorRegionsTitle struct{}

func (BatchGetRegionsResponsePathSelectorRegionsTitle) FieldPath() *BatchGetRegionsResponse_FieldSubPath {
	return &BatchGetRegionsResponse_FieldSubPath{
		selector: BatchGetRegionsResponse_FieldPathSelectorRegions,
		subPath:  region.NewRegionFieldPathBuilder().Title().FieldPath(),
	}
}

func (s BatchGetRegionsResponsePathSelectorRegionsTitle) WithValue(value string) *BatchGetRegionsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetRegionsResponse_FieldSubPathValue)
}

func (s BatchGetRegionsResponsePathSelectorRegionsTitle) WithArrayOfValues(values []string) *BatchGetRegionsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetRegionsResponse_FieldSubPathArrayOfValues)
}

type BatchGetRegionsResponsePathSelectorRegionsDomain struct{}

func (BatchGetRegionsResponsePathSelectorRegionsDomain) FieldPath() *BatchGetRegionsResponse_FieldSubPath {
	return &BatchGetRegionsResponse_FieldSubPath{
		selector: BatchGetRegionsResponse_FieldPathSelectorRegions,
		subPath:  region.NewRegionFieldPathBuilder().Domain().FieldPath(),
	}
}

func (s BatchGetRegionsResponsePathSelectorRegionsDomain) WithValue(value string) *BatchGetRegionsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetRegionsResponse_FieldSubPathValue)
}

func (s BatchGetRegionsResponsePathSelectorRegionsDomain) WithArrayOfValues(values []string) *BatchGetRegionsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetRegionsResponse_FieldSubPathArrayOfValues)
}

type BatchGetRegionsResponsePathSelectorRegionsLocation struct{}

func (BatchGetRegionsResponsePathSelectorRegionsLocation) FieldPath() *BatchGetRegionsResponse_FieldSubPath {
	return &BatchGetRegionsResponse_FieldSubPath{
		selector: BatchGetRegionsResponse_FieldPathSelectorRegions,
		subPath:  region.NewRegionFieldPathBuilder().Location().FieldPath(),
	}
}

func (s BatchGetRegionsResponsePathSelectorRegionsLocation) WithValue(value *region.Region_RegionLocation) *BatchGetRegionsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetRegionsResponse_FieldSubPathValue)
}

func (s BatchGetRegionsResponsePathSelectorRegionsLocation) WithArrayOfValues(values []*region.Region_RegionLocation) *BatchGetRegionsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetRegionsResponse_FieldSubPathArrayOfValues)
}

func (BatchGetRegionsResponsePathSelectorRegionsLocation) Continent() BatchGetRegionsResponsePathSelectorRegionsLocationContinent {
	return BatchGetRegionsResponsePathSelectorRegionsLocationContinent{}
}

func (BatchGetRegionsResponsePathSelectorRegionsLocation) Country() BatchGetRegionsResponsePathSelectorRegionsLocationCountry {
	return BatchGetRegionsResponsePathSelectorRegionsLocationCountry{}
}

func (BatchGetRegionsResponsePathSelectorRegionsLocation) Agglomeration() BatchGetRegionsResponsePathSelectorRegionsLocationAgglomeration {
	return BatchGetRegionsResponsePathSelectorRegionsLocationAgglomeration{}
}

func (BatchGetRegionsResponsePathSelectorRegionsLocation) City() BatchGetRegionsResponsePathSelectorRegionsLocationCity {
	return BatchGetRegionsResponsePathSelectorRegionsLocationCity{}
}

func (BatchGetRegionsResponsePathSelectorRegionsLocation) Cloud() BatchGetRegionsResponsePathSelectorRegionsLocationCloud {
	return BatchGetRegionsResponsePathSelectorRegionsLocationCloud{}
}

type BatchGetRegionsResponsePathSelectorRegionsLocationContinent struct{}

func (BatchGetRegionsResponsePathSelectorRegionsLocationContinent) FieldPath() *BatchGetRegionsResponse_FieldSubPath {
	return &BatchGetRegionsResponse_FieldSubPath{
		selector: BatchGetRegionsResponse_FieldPathSelectorRegions,
		subPath:  region.NewRegionFieldPathBuilder().Location().Continent().FieldPath(),
	}
}

func (s BatchGetRegionsResponsePathSelectorRegionsLocationContinent) WithValue(value string) *BatchGetRegionsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetRegionsResponse_FieldSubPathValue)
}

func (s BatchGetRegionsResponsePathSelectorRegionsLocationContinent) WithArrayOfValues(values []string) *BatchGetRegionsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetRegionsResponse_FieldSubPathArrayOfValues)
}

type BatchGetRegionsResponsePathSelectorRegionsLocationCountry struct{}

func (BatchGetRegionsResponsePathSelectorRegionsLocationCountry) FieldPath() *BatchGetRegionsResponse_FieldSubPath {
	return &BatchGetRegionsResponse_FieldSubPath{
		selector: BatchGetRegionsResponse_FieldPathSelectorRegions,
		subPath:  region.NewRegionFieldPathBuilder().Location().Country().FieldPath(),
	}
}

func (s BatchGetRegionsResponsePathSelectorRegionsLocationCountry) WithValue(value string) *BatchGetRegionsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetRegionsResponse_FieldSubPathValue)
}

func (s BatchGetRegionsResponsePathSelectorRegionsLocationCountry) WithArrayOfValues(values []string) *BatchGetRegionsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetRegionsResponse_FieldSubPathArrayOfValues)
}

type BatchGetRegionsResponsePathSelectorRegionsLocationAgglomeration struct{}

func (BatchGetRegionsResponsePathSelectorRegionsLocationAgglomeration) FieldPath() *BatchGetRegionsResponse_FieldSubPath {
	return &BatchGetRegionsResponse_FieldSubPath{
		selector: BatchGetRegionsResponse_FieldPathSelectorRegions,
		subPath:  region.NewRegionFieldPathBuilder().Location().Agglomeration().FieldPath(),
	}
}

func (s BatchGetRegionsResponsePathSelectorRegionsLocationAgglomeration) WithValue(value string) *BatchGetRegionsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetRegionsResponse_FieldSubPathValue)
}

func (s BatchGetRegionsResponsePathSelectorRegionsLocationAgglomeration) WithArrayOfValues(values []string) *BatchGetRegionsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetRegionsResponse_FieldSubPathArrayOfValues)
}

type BatchGetRegionsResponsePathSelectorRegionsLocationCity struct{}

func (BatchGetRegionsResponsePathSelectorRegionsLocationCity) FieldPath() *BatchGetRegionsResponse_FieldSubPath {
	return &BatchGetRegionsResponse_FieldSubPath{
		selector: BatchGetRegionsResponse_FieldPathSelectorRegions,
		subPath:  region.NewRegionFieldPathBuilder().Location().City().FieldPath(),
	}
}

func (s BatchGetRegionsResponsePathSelectorRegionsLocationCity) WithValue(value string) *BatchGetRegionsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetRegionsResponse_FieldSubPathValue)
}

func (s BatchGetRegionsResponsePathSelectorRegionsLocationCity) WithArrayOfValues(values []string) *BatchGetRegionsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetRegionsResponse_FieldSubPathArrayOfValues)
}

type BatchGetRegionsResponsePathSelectorRegionsLocationCloud struct{}

func (BatchGetRegionsResponsePathSelectorRegionsLocationCloud) FieldPath() *BatchGetRegionsResponse_FieldSubPath {
	return &BatchGetRegionsResponse_FieldSubPath{
		selector: BatchGetRegionsResponse_FieldPathSelectorRegions,
		subPath:  region.NewRegionFieldPathBuilder().Location().Cloud().FieldPath(),
	}
}

func (s BatchGetRegionsResponsePathSelectorRegionsLocationCloud) WithValue(value string) *BatchGetRegionsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetRegionsResponse_FieldSubPathValue)
}

func (s BatchGetRegionsResponsePathSelectorRegionsLocationCloud) WithArrayOfValues(values []string) *BatchGetRegionsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetRegionsResponse_FieldSubPathArrayOfValues)
}

type BatchGetRegionsResponsePathSelectorRegionsIsDefault struct{}

func (BatchGetRegionsResponsePathSelectorRegionsIsDefault) FieldPath() *BatchGetRegionsResponse_FieldSubPath {
	return &BatchGetRegionsResponse_FieldSubPath{
		selector: BatchGetRegionsResponse_FieldPathSelectorRegions,
		subPath:  region.NewRegionFieldPathBuilder().IsDefault().FieldPath(),
	}
}

func (s BatchGetRegionsResponsePathSelectorRegionsIsDefault) WithValue(value bool) *BatchGetRegionsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetRegionsResponse_FieldSubPathValue)
}

func (s BatchGetRegionsResponsePathSelectorRegionsIsDefault) WithArrayOfValues(values []bool) *BatchGetRegionsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetRegionsResponse_FieldSubPathArrayOfValues)
}

type BatchGetRegionsResponsePathSelectorRegionsConnectivityScores struct{}

func (BatchGetRegionsResponsePathSelectorRegionsConnectivityScores) FieldPath() *BatchGetRegionsResponse_FieldSubPath {
	return &BatchGetRegionsResponse_FieldSubPath{
		selector: BatchGetRegionsResponse_FieldPathSelectorRegions,
		subPath:  region.NewRegionFieldPathBuilder().ConnectivityScores().FieldPath(),
	}
}

func (s BatchGetRegionsResponsePathSelectorRegionsConnectivityScores) WithValue(value []*region.Region_RegionConnectivityPreference) *BatchGetRegionsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetRegionsResponse_FieldSubPathValue)
}

func (s BatchGetRegionsResponsePathSelectorRegionsConnectivityScores) WithArrayOfValues(values [][]*region.Region_RegionConnectivityPreference) *BatchGetRegionsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetRegionsResponse_FieldSubPathArrayOfValues)
}

func (s BatchGetRegionsResponsePathSelectorRegionsConnectivityScores) WithItemValue(value *region.Region_RegionConnectivityPreference) *BatchGetRegionsResponse_FieldSubPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*BatchGetRegionsResponse_FieldSubPathArrayItemValue)
}

func (BatchGetRegionsResponsePathSelectorRegionsConnectivityScores) Dest() BatchGetRegionsResponsePathSelectorRegionsConnectivityScoresDest {
	return BatchGetRegionsResponsePathSelectorRegionsConnectivityScoresDest{}
}

func (BatchGetRegionsResponsePathSelectorRegionsConnectivityScores) Score() BatchGetRegionsResponsePathSelectorRegionsConnectivityScoresScore {
	return BatchGetRegionsResponsePathSelectorRegionsConnectivityScoresScore{}
}

type BatchGetRegionsResponsePathSelectorRegionsConnectivityScoresDest struct{}

func (BatchGetRegionsResponsePathSelectorRegionsConnectivityScoresDest) FieldPath() *BatchGetRegionsResponse_FieldSubPath {
	return &BatchGetRegionsResponse_FieldSubPath{
		selector: BatchGetRegionsResponse_FieldPathSelectorRegions,
		subPath:  region.NewRegionFieldPathBuilder().ConnectivityScores().Dest().FieldPath(),
	}
}

func (s BatchGetRegionsResponsePathSelectorRegionsConnectivityScoresDest) WithValue(value *region.Reference) *BatchGetRegionsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetRegionsResponse_FieldSubPathValue)
}

func (s BatchGetRegionsResponsePathSelectorRegionsConnectivityScoresDest) WithArrayOfValues(values []*region.Reference) *BatchGetRegionsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetRegionsResponse_FieldSubPathArrayOfValues)
}

type BatchGetRegionsResponsePathSelectorRegionsConnectivityScoresScore struct{}

func (BatchGetRegionsResponsePathSelectorRegionsConnectivityScoresScore) FieldPath() *BatchGetRegionsResponse_FieldSubPath {
	return &BatchGetRegionsResponse_FieldSubPath{
		selector: BatchGetRegionsResponse_FieldPathSelectorRegions,
		subPath:  region.NewRegionFieldPathBuilder().ConnectivityScores().Score().FieldPath(),
	}
}

func (s BatchGetRegionsResponsePathSelectorRegionsConnectivityScoresScore) WithValue(value int32) *BatchGetRegionsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetRegionsResponse_FieldSubPathValue)
}

func (s BatchGetRegionsResponsePathSelectorRegionsConnectivityScoresScore) WithArrayOfValues(values []int32) *BatchGetRegionsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetRegionsResponse_FieldSubPathArrayOfValues)
}

type BatchGetRegionsResponsePathSelectorRegionsMetadata struct{}

func (BatchGetRegionsResponsePathSelectorRegionsMetadata) FieldPath() *BatchGetRegionsResponse_FieldSubPath {
	return &BatchGetRegionsResponse_FieldSubPath{
		selector: BatchGetRegionsResponse_FieldPathSelectorRegions,
		subPath:  region.NewRegionFieldPathBuilder().Metadata().FieldPath(),
	}
}

func (s BatchGetRegionsResponsePathSelectorRegionsMetadata) WithValue(value *ntt_meta.Meta) *BatchGetRegionsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetRegionsResponse_FieldSubPathValue)
}

func (s BatchGetRegionsResponsePathSelectorRegionsMetadata) WithArrayOfValues(values []*ntt_meta.Meta) *BatchGetRegionsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetRegionsResponse_FieldSubPathArrayOfValues)
}

func (BatchGetRegionsResponsePathSelectorRegionsMetadata) CreateTime() BatchGetRegionsResponsePathSelectorRegionsMetadataCreateTime {
	return BatchGetRegionsResponsePathSelectorRegionsMetadataCreateTime{}
}

func (BatchGetRegionsResponsePathSelectorRegionsMetadata) UpdateTime() BatchGetRegionsResponsePathSelectorRegionsMetadataUpdateTime {
	return BatchGetRegionsResponsePathSelectorRegionsMetadataUpdateTime{}
}

func (BatchGetRegionsResponsePathSelectorRegionsMetadata) Uuid() BatchGetRegionsResponsePathSelectorRegionsMetadataUuid {
	return BatchGetRegionsResponsePathSelectorRegionsMetadataUuid{}
}

func (BatchGetRegionsResponsePathSelectorRegionsMetadata) Tags() BatchGetRegionsResponsePathSelectorRegionsMetadataTags {
	return BatchGetRegionsResponsePathSelectorRegionsMetadataTags{}
}

func (BatchGetRegionsResponsePathSelectorRegionsMetadata) Labels() BatchGetRegionsResponsePathSelectorRegionsMetadataLabels {
	return BatchGetRegionsResponsePathSelectorRegionsMetadataLabels{}
}

func (BatchGetRegionsResponsePathSelectorRegionsMetadata) Annotations() BatchGetRegionsResponsePathSelectorRegionsMetadataAnnotations {
	return BatchGetRegionsResponsePathSelectorRegionsMetadataAnnotations{}
}

func (BatchGetRegionsResponsePathSelectorRegionsMetadata) Generation() BatchGetRegionsResponsePathSelectorRegionsMetadataGeneration {
	return BatchGetRegionsResponsePathSelectorRegionsMetadataGeneration{}
}

func (BatchGetRegionsResponsePathSelectorRegionsMetadata) ResourceVersion() BatchGetRegionsResponsePathSelectorRegionsMetadataResourceVersion {
	return BatchGetRegionsResponsePathSelectorRegionsMetadataResourceVersion{}
}

func (BatchGetRegionsResponsePathSelectorRegionsMetadata) OwnerReferences() BatchGetRegionsResponsePathSelectorRegionsMetadataOwnerReferences {
	return BatchGetRegionsResponsePathSelectorRegionsMetadataOwnerReferences{}
}

func (BatchGetRegionsResponsePathSelectorRegionsMetadata) Shards() BatchGetRegionsResponsePathSelectorRegionsMetadataShards {
	return BatchGetRegionsResponsePathSelectorRegionsMetadataShards{}
}

func (BatchGetRegionsResponsePathSelectorRegionsMetadata) Syncing() BatchGetRegionsResponsePathSelectorRegionsMetadataSyncing {
	return BatchGetRegionsResponsePathSelectorRegionsMetadataSyncing{}
}

type BatchGetRegionsResponsePathSelectorRegionsMetadataCreateTime struct{}

func (BatchGetRegionsResponsePathSelectorRegionsMetadataCreateTime) FieldPath() *BatchGetRegionsResponse_FieldSubPath {
	return &BatchGetRegionsResponse_FieldSubPath{
		selector: BatchGetRegionsResponse_FieldPathSelectorRegions,
		subPath:  region.NewRegionFieldPathBuilder().Metadata().CreateTime().FieldPath(),
	}
}

func (s BatchGetRegionsResponsePathSelectorRegionsMetadataCreateTime) WithValue(value *timestamp.Timestamp) *BatchGetRegionsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetRegionsResponse_FieldSubPathValue)
}

func (s BatchGetRegionsResponsePathSelectorRegionsMetadataCreateTime) WithArrayOfValues(values []*timestamp.Timestamp) *BatchGetRegionsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetRegionsResponse_FieldSubPathArrayOfValues)
}

type BatchGetRegionsResponsePathSelectorRegionsMetadataUpdateTime struct{}

func (BatchGetRegionsResponsePathSelectorRegionsMetadataUpdateTime) FieldPath() *BatchGetRegionsResponse_FieldSubPath {
	return &BatchGetRegionsResponse_FieldSubPath{
		selector: BatchGetRegionsResponse_FieldPathSelectorRegions,
		subPath:  region.NewRegionFieldPathBuilder().Metadata().UpdateTime().FieldPath(),
	}
}

func (s BatchGetRegionsResponsePathSelectorRegionsMetadataUpdateTime) WithValue(value *timestamp.Timestamp) *BatchGetRegionsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetRegionsResponse_FieldSubPathValue)
}

func (s BatchGetRegionsResponsePathSelectorRegionsMetadataUpdateTime) WithArrayOfValues(values []*timestamp.Timestamp) *BatchGetRegionsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetRegionsResponse_FieldSubPathArrayOfValues)
}

type BatchGetRegionsResponsePathSelectorRegionsMetadataUuid struct{}

func (BatchGetRegionsResponsePathSelectorRegionsMetadataUuid) FieldPath() *BatchGetRegionsResponse_FieldSubPath {
	return &BatchGetRegionsResponse_FieldSubPath{
		selector: BatchGetRegionsResponse_FieldPathSelectorRegions,
		subPath:  region.NewRegionFieldPathBuilder().Metadata().Uuid().FieldPath(),
	}
}

func (s BatchGetRegionsResponsePathSelectorRegionsMetadataUuid) WithValue(value string) *BatchGetRegionsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetRegionsResponse_FieldSubPathValue)
}

func (s BatchGetRegionsResponsePathSelectorRegionsMetadataUuid) WithArrayOfValues(values []string) *BatchGetRegionsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetRegionsResponse_FieldSubPathArrayOfValues)
}

type BatchGetRegionsResponsePathSelectorRegionsMetadataTags struct{}

func (BatchGetRegionsResponsePathSelectorRegionsMetadataTags) FieldPath() *BatchGetRegionsResponse_FieldSubPath {
	return &BatchGetRegionsResponse_FieldSubPath{
		selector: BatchGetRegionsResponse_FieldPathSelectorRegions,
		subPath:  region.NewRegionFieldPathBuilder().Metadata().Tags().FieldPath(),
	}
}

func (s BatchGetRegionsResponsePathSelectorRegionsMetadataTags) WithValue(value []string) *BatchGetRegionsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetRegionsResponse_FieldSubPathValue)
}

func (s BatchGetRegionsResponsePathSelectorRegionsMetadataTags) WithArrayOfValues(values [][]string) *BatchGetRegionsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetRegionsResponse_FieldSubPathArrayOfValues)
}

func (s BatchGetRegionsResponsePathSelectorRegionsMetadataTags) WithItemValue(value string) *BatchGetRegionsResponse_FieldSubPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*BatchGetRegionsResponse_FieldSubPathArrayItemValue)
}

type BatchGetRegionsResponsePathSelectorRegionsMetadataLabels struct{}

func (BatchGetRegionsResponsePathSelectorRegionsMetadataLabels) FieldPath() *BatchGetRegionsResponse_FieldSubPath {
	return &BatchGetRegionsResponse_FieldSubPath{
		selector: BatchGetRegionsResponse_FieldPathSelectorRegions,
		subPath:  region.NewRegionFieldPathBuilder().Metadata().Labels().FieldPath(),
	}
}

func (s BatchGetRegionsResponsePathSelectorRegionsMetadataLabels) WithValue(value map[string]string) *BatchGetRegionsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetRegionsResponse_FieldSubPathValue)
}

func (s BatchGetRegionsResponsePathSelectorRegionsMetadataLabels) WithArrayOfValues(values []map[string]string) *BatchGetRegionsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetRegionsResponse_FieldSubPathArrayOfValues)
}

func (BatchGetRegionsResponsePathSelectorRegionsMetadataLabels) WithKey(key string) BatchGetRegionsResponseMapPathSelectorRegionsMetadataLabels {
	return BatchGetRegionsResponseMapPathSelectorRegionsMetadataLabels{key: key}
}

type BatchGetRegionsResponseMapPathSelectorRegionsMetadataLabels struct {
	key string
}

func (s BatchGetRegionsResponseMapPathSelectorRegionsMetadataLabels) FieldPath() *BatchGetRegionsResponse_FieldSubPath {
	return &BatchGetRegionsResponse_FieldSubPath{
		selector: BatchGetRegionsResponse_FieldPathSelectorRegions,
		subPath:  region.NewRegionFieldPathBuilder().Metadata().Labels().WithKey(s.key).FieldPath(),
	}
}

func (s BatchGetRegionsResponseMapPathSelectorRegionsMetadataLabels) WithValue(value string) *BatchGetRegionsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetRegionsResponse_FieldSubPathValue)
}

func (s BatchGetRegionsResponseMapPathSelectorRegionsMetadataLabels) WithArrayOfValues(values []string) *BatchGetRegionsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetRegionsResponse_FieldSubPathArrayOfValues)
}

type BatchGetRegionsResponsePathSelectorRegionsMetadataAnnotations struct{}

func (BatchGetRegionsResponsePathSelectorRegionsMetadataAnnotations) FieldPath() *BatchGetRegionsResponse_FieldSubPath {
	return &BatchGetRegionsResponse_FieldSubPath{
		selector: BatchGetRegionsResponse_FieldPathSelectorRegions,
		subPath:  region.NewRegionFieldPathBuilder().Metadata().Annotations().FieldPath(),
	}
}

func (s BatchGetRegionsResponsePathSelectorRegionsMetadataAnnotations) WithValue(value map[string]string) *BatchGetRegionsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetRegionsResponse_FieldSubPathValue)
}

func (s BatchGetRegionsResponsePathSelectorRegionsMetadataAnnotations) WithArrayOfValues(values []map[string]string) *BatchGetRegionsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetRegionsResponse_FieldSubPathArrayOfValues)
}

func (BatchGetRegionsResponsePathSelectorRegionsMetadataAnnotations) WithKey(key string) BatchGetRegionsResponseMapPathSelectorRegionsMetadataAnnotations {
	return BatchGetRegionsResponseMapPathSelectorRegionsMetadataAnnotations{key: key}
}

type BatchGetRegionsResponseMapPathSelectorRegionsMetadataAnnotations struct {
	key string
}

func (s BatchGetRegionsResponseMapPathSelectorRegionsMetadataAnnotations) FieldPath() *BatchGetRegionsResponse_FieldSubPath {
	return &BatchGetRegionsResponse_FieldSubPath{
		selector: BatchGetRegionsResponse_FieldPathSelectorRegions,
		subPath:  region.NewRegionFieldPathBuilder().Metadata().Annotations().WithKey(s.key).FieldPath(),
	}
}

func (s BatchGetRegionsResponseMapPathSelectorRegionsMetadataAnnotations) WithValue(value string) *BatchGetRegionsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetRegionsResponse_FieldSubPathValue)
}

func (s BatchGetRegionsResponseMapPathSelectorRegionsMetadataAnnotations) WithArrayOfValues(values []string) *BatchGetRegionsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetRegionsResponse_FieldSubPathArrayOfValues)
}

type BatchGetRegionsResponsePathSelectorRegionsMetadataGeneration struct{}

func (BatchGetRegionsResponsePathSelectorRegionsMetadataGeneration) FieldPath() *BatchGetRegionsResponse_FieldSubPath {
	return &BatchGetRegionsResponse_FieldSubPath{
		selector: BatchGetRegionsResponse_FieldPathSelectorRegions,
		subPath:  region.NewRegionFieldPathBuilder().Metadata().Generation().FieldPath(),
	}
}

func (s BatchGetRegionsResponsePathSelectorRegionsMetadataGeneration) WithValue(value int64) *BatchGetRegionsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetRegionsResponse_FieldSubPathValue)
}

func (s BatchGetRegionsResponsePathSelectorRegionsMetadataGeneration) WithArrayOfValues(values []int64) *BatchGetRegionsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetRegionsResponse_FieldSubPathArrayOfValues)
}

type BatchGetRegionsResponsePathSelectorRegionsMetadataResourceVersion struct{}

func (BatchGetRegionsResponsePathSelectorRegionsMetadataResourceVersion) FieldPath() *BatchGetRegionsResponse_FieldSubPath {
	return &BatchGetRegionsResponse_FieldSubPath{
		selector: BatchGetRegionsResponse_FieldPathSelectorRegions,
		subPath:  region.NewRegionFieldPathBuilder().Metadata().ResourceVersion().FieldPath(),
	}
}

func (s BatchGetRegionsResponsePathSelectorRegionsMetadataResourceVersion) WithValue(value string) *BatchGetRegionsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetRegionsResponse_FieldSubPathValue)
}

func (s BatchGetRegionsResponsePathSelectorRegionsMetadataResourceVersion) WithArrayOfValues(values []string) *BatchGetRegionsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetRegionsResponse_FieldSubPathArrayOfValues)
}

type BatchGetRegionsResponsePathSelectorRegionsMetadataOwnerReferences struct{}

func (BatchGetRegionsResponsePathSelectorRegionsMetadataOwnerReferences) FieldPath() *BatchGetRegionsResponse_FieldSubPath {
	return &BatchGetRegionsResponse_FieldSubPath{
		selector: BatchGetRegionsResponse_FieldPathSelectorRegions,
		subPath:  region.NewRegionFieldPathBuilder().Metadata().OwnerReferences().FieldPath(),
	}
}

func (s BatchGetRegionsResponsePathSelectorRegionsMetadataOwnerReferences) WithValue(value []*ntt_meta.OwnerReference) *BatchGetRegionsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetRegionsResponse_FieldSubPathValue)
}

func (s BatchGetRegionsResponsePathSelectorRegionsMetadataOwnerReferences) WithArrayOfValues(values [][]*ntt_meta.OwnerReference) *BatchGetRegionsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetRegionsResponse_FieldSubPathArrayOfValues)
}

func (s BatchGetRegionsResponsePathSelectorRegionsMetadataOwnerReferences) WithItemValue(value *ntt_meta.OwnerReference) *BatchGetRegionsResponse_FieldSubPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*BatchGetRegionsResponse_FieldSubPathArrayItemValue)
}

func (BatchGetRegionsResponsePathSelectorRegionsMetadataOwnerReferences) ApiVersion() BatchGetRegionsResponsePathSelectorRegionsMetadataOwnerReferencesApiVersion {
	return BatchGetRegionsResponsePathSelectorRegionsMetadataOwnerReferencesApiVersion{}
}

func (BatchGetRegionsResponsePathSelectorRegionsMetadataOwnerReferences) Kind() BatchGetRegionsResponsePathSelectorRegionsMetadataOwnerReferencesKind {
	return BatchGetRegionsResponsePathSelectorRegionsMetadataOwnerReferencesKind{}
}

func (BatchGetRegionsResponsePathSelectorRegionsMetadataOwnerReferences) Name() BatchGetRegionsResponsePathSelectorRegionsMetadataOwnerReferencesName {
	return BatchGetRegionsResponsePathSelectorRegionsMetadataOwnerReferencesName{}
}

func (BatchGetRegionsResponsePathSelectorRegionsMetadataOwnerReferences) Uid() BatchGetRegionsResponsePathSelectorRegionsMetadataOwnerReferencesUid {
	return BatchGetRegionsResponsePathSelectorRegionsMetadataOwnerReferencesUid{}
}

func (BatchGetRegionsResponsePathSelectorRegionsMetadataOwnerReferences) Controller() BatchGetRegionsResponsePathSelectorRegionsMetadataOwnerReferencesController {
	return BatchGetRegionsResponsePathSelectorRegionsMetadataOwnerReferencesController{}
}

func (BatchGetRegionsResponsePathSelectorRegionsMetadataOwnerReferences) BlockOwnerDeletion() BatchGetRegionsResponsePathSelectorRegionsMetadataOwnerReferencesBlockOwnerDeletion {
	return BatchGetRegionsResponsePathSelectorRegionsMetadataOwnerReferencesBlockOwnerDeletion{}
}

type BatchGetRegionsResponsePathSelectorRegionsMetadataOwnerReferencesApiVersion struct{}

func (BatchGetRegionsResponsePathSelectorRegionsMetadataOwnerReferencesApiVersion) FieldPath() *BatchGetRegionsResponse_FieldSubPath {
	return &BatchGetRegionsResponse_FieldSubPath{
		selector: BatchGetRegionsResponse_FieldPathSelectorRegions,
		subPath:  region.NewRegionFieldPathBuilder().Metadata().OwnerReferences().ApiVersion().FieldPath(),
	}
}

func (s BatchGetRegionsResponsePathSelectorRegionsMetadataOwnerReferencesApiVersion) WithValue(value string) *BatchGetRegionsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetRegionsResponse_FieldSubPathValue)
}

func (s BatchGetRegionsResponsePathSelectorRegionsMetadataOwnerReferencesApiVersion) WithArrayOfValues(values []string) *BatchGetRegionsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetRegionsResponse_FieldSubPathArrayOfValues)
}

type BatchGetRegionsResponsePathSelectorRegionsMetadataOwnerReferencesKind struct{}

func (BatchGetRegionsResponsePathSelectorRegionsMetadataOwnerReferencesKind) FieldPath() *BatchGetRegionsResponse_FieldSubPath {
	return &BatchGetRegionsResponse_FieldSubPath{
		selector: BatchGetRegionsResponse_FieldPathSelectorRegions,
		subPath:  region.NewRegionFieldPathBuilder().Metadata().OwnerReferences().Kind().FieldPath(),
	}
}

func (s BatchGetRegionsResponsePathSelectorRegionsMetadataOwnerReferencesKind) WithValue(value string) *BatchGetRegionsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetRegionsResponse_FieldSubPathValue)
}

func (s BatchGetRegionsResponsePathSelectorRegionsMetadataOwnerReferencesKind) WithArrayOfValues(values []string) *BatchGetRegionsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetRegionsResponse_FieldSubPathArrayOfValues)
}

type BatchGetRegionsResponsePathSelectorRegionsMetadataOwnerReferencesName struct{}

func (BatchGetRegionsResponsePathSelectorRegionsMetadataOwnerReferencesName) FieldPath() *BatchGetRegionsResponse_FieldSubPath {
	return &BatchGetRegionsResponse_FieldSubPath{
		selector: BatchGetRegionsResponse_FieldPathSelectorRegions,
		subPath:  region.NewRegionFieldPathBuilder().Metadata().OwnerReferences().Name().FieldPath(),
	}
}

func (s BatchGetRegionsResponsePathSelectorRegionsMetadataOwnerReferencesName) WithValue(value string) *BatchGetRegionsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetRegionsResponse_FieldSubPathValue)
}

func (s BatchGetRegionsResponsePathSelectorRegionsMetadataOwnerReferencesName) WithArrayOfValues(values []string) *BatchGetRegionsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetRegionsResponse_FieldSubPathArrayOfValues)
}

type BatchGetRegionsResponsePathSelectorRegionsMetadataOwnerReferencesUid struct{}

func (BatchGetRegionsResponsePathSelectorRegionsMetadataOwnerReferencesUid) FieldPath() *BatchGetRegionsResponse_FieldSubPath {
	return &BatchGetRegionsResponse_FieldSubPath{
		selector: BatchGetRegionsResponse_FieldPathSelectorRegions,
		subPath:  region.NewRegionFieldPathBuilder().Metadata().OwnerReferences().Uid().FieldPath(),
	}
}

func (s BatchGetRegionsResponsePathSelectorRegionsMetadataOwnerReferencesUid) WithValue(value string) *BatchGetRegionsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetRegionsResponse_FieldSubPathValue)
}

func (s BatchGetRegionsResponsePathSelectorRegionsMetadataOwnerReferencesUid) WithArrayOfValues(values []string) *BatchGetRegionsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetRegionsResponse_FieldSubPathArrayOfValues)
}

type BatchGetRegionsResponsePathSelectorRegionsMetadataOwnerReferencesController struct{}

func (BatchGetRegionsResponsePathSelectorRegionsMetadataOwnerReferencesController) FieldPath() *BatchGetRegionsResponse_FieldSubPath {
	return &BatchGetRegionsResponse_FieldSubPath{
		selector: BatchGetRegionsResponse_FieldPathSelectorRegions,
		subPath:  region.NewRegionFieldPathBuilder().Metadata().OwnerReferences().Controller().FieldPath(),
	}
}

func (s BatchGetRegionsResponsePathSelectorRegionsMetadataOwnerReferencesController) WithValue(value bool) *BatchGetRegionsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetRegionsResponse_FieldSubPathValue)
}

func (s BatchGetRegionsResponsePathSelectorRegionsMetadataOwnerReferencesController) WithArrayOfValues(values []bool) *BatchGetRegionsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetRegionsResponse_FieldSubPathArrayOfValues)
}

type BatchGetRegionsResponsePathSelectorRegionsMetadataOwnerReferencesBlockOwnerDeletion struct{}

func (BatchGetRegionsResponsePathSelectorRegionsMetadataOwnerReferencesBlockOwnerDeletion) FieldPath() *BatchGetRegionsResponse_FieldSubPath {
	return &BatchGetRegionsResponse_FieldSubPath{
		selector: BatchGetRegionsResponse_FieldPathSelectorRegions,
		subPath:  region.NewRegionFieldPathBuilder().Metadata().OwnerReferences().BlockOwnerDeletion().FieldPath(),
	}
}

func (s BatchGetRegionsResponsePathSelectorRegionsMetadataOwnerReferencesBlockOwnerDeletion) WithValue(value bool) *BatchGetRegionsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetRegionsResponse_FieldSubPathValue)
}

func (s BatchGetRegionsResponsePathSelectorRegionsMetadataOwnerReferencesBlockOwnerDeletion) WithArrayOfValues(values []bool) *BatchGetRegionsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetRegionsResponse_FieldSubPathArrayOfValues)
}

type BatchGetRegionsResponsePathSelectorRegionsMetadataShards struct{}

func (BatchGetRegionsResponsePathSelectorRegionsMetadataShards) FieldPath() *BatchGetRegionsResponse_FieldSubPath {
	return &BatchGetRegionsResponse_FieldSubPath{
		selector: BatchGetRegionsResponse_FieldPathSelectorRegions,
		subPath:  region.NewRegionFieldPathBuilder().Metadata().Shards().FieldPath(),
	}
}

func (s BatchGetRegionsResponsePathSelectorRegionsMetadataShards) WithValue(value map[string]int64) *BatchGetRegionsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetRegionsResponse_FieldSubPathValue)
}

func (s BatchGetRegionsResponsePathSelectorRegionsMetadataShards) WithArrayOfValues(values []map[string]int64) *BatchGetRegionsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetRegionsResponse_FieldSubPathArrayOfValues)
}

func (BatchGetRegionsResponsePathSelectorRegionsMetadataShards) WithKey(key string) BatchGetRegionsResponseMapPathSelectorRegionsMetadataShards {
	return BatchGetRegionsResponseMapPathSelectorRegionsMetadataShards{key: key}
}

type BatchGetRegionsResponseMapPathSelectorRegionsMetadataShards struct {
	key string
}

func (s BatchGetRegionsResponseMapPathSelectorRegionsMetadataShards) FieldPath() *BatchGetRegionsResponse_FieldSubPath {
	return &BatchGetRegionsResponse_FieldSubPath{
		selector: BatchGetRegionsResponse_FieldPathSelectorRegions,
		subPath:  region.NewRegionFieldPathBuilder().Metadata().Shards().WithKey(s.key).FieldPath(),
	}
}

func (s BatchGetRegionsResponseMapPathSelectorRegionsMetadataShards) WithValue(value int64) *BatchGetRegionsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetRegionsResponse_FieldSubPathValue)
}

func (s BatchGetRegionsResponseMapPathSelectorRegionsMetadataShards) WithArrayOfValues(values []int64) *BatchGetRegionsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetRegionsResponse_FieldSubPathArrayOfValues)
}

type BatchGetRegionsResponsePathSelectorRegionsMetadataSyncing struct{}

func (BatchGetRegionsResponsePathSelectorRegionsMetadataSyncing) FieldPath() *BatchGetRegionsResponse_FieldSubPath {
	return &BatchGetRegionsResponse_FieldSubPath{
		selector: BatchGetRegionsResponse_FieldPathSelectorRegions,
		subPath:  region.NewRegionFieldPathBuilder().Metadata().Syncing().FieldPath(),
	}
}

func (s BatchGetRegionsResponsePathSelectorRegionsMetadataSyncing) WithValue(value *syncing_meta.SyncingMeta) *BatchGetRegionsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetRegionsResponse_FieldSubPathValue)
}

func (s BatchGetRegionsResponsePathSelectorRegionsMetadataSyncing) WithArrayOfValues(values []*syncing_meta.SyncingMeta) *BatchGetRegionsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetRegionsResponse_FieldSubPathArrayOfValues)
}

func (BatchGetRegionsResponsePathSelectorRegionsMetadataSyncing) OwningRegion() BatchGetRegionsResponsePathSelectorRegionsMetadataSyncingOwningRegion {
	return BatchGetRegionsResponsePathSelectorRegionsMetadataSyncingOwningRegion{}
}

func (BatchGetRegionsResponsePathSelectorRegionsMetadataSyncing) Regions() BatchGetRegionsResponsePathSelectorRegionsMetadataSyncingRegions {
	return BatchGetRegionsResponsePathSelectorRegionsMetadataSyncingRegions{}
}

type BatchGetRegionsResponsePathSelectorRegionsMetadataSyncingOwningRegion struct{}

func (BatchGetRegionsResponsePathSelectorRegionsMetadataSyncingOwningRegion) FieldPath() *BatchGetRegionsResponse_FieldSubPath {
	return &BatchGetRegionsResponse_FieldSubPath{
		selector: BatchGetRegionsResponse_FieldPathSelectorRegions,
		subPath:  region.NewRegionFieldPathBuilder().Metadata().Syncing().OwningRegion().FieldPath(),
	}
}

func (s BatchGetRegionsResponsePathSelectorRegionsMetadataSyncingOwningRegion) WithValue(value string) *BatchGetRegionsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetRegionsResponse_FieldSubPathValue)
}

func (s BatchGetRegionsResponsePathSelectorRegionsMetadataSyncingOwningRegion) WithArrayOfValues(values []string) *BatchGetRegionsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetRegionsResponse_FieldSubPathArrayOfValues)
}

type BatchGetRegionsResponsePathSelectorRegionsMetadataSyncingRegions struct{}

func (BatchGetRegionsResponsePathSelectorRegionsMetadataSyncingRegions) FieldPath() *BatchGetRegionsResponse_FieldSubPath {
	return &BatchGetRegionsResponse_FieldSubPath{
		selector: BatchGetRegionsResponse_FieldPathSelectorRegions,
		subPath:  region.NewRegionFieldPathBuilder().Metadata().Syncing().Regions().FieldPath(),
	}
}

func (s BatchGetRegionsResponsePathSelectorRegionsMetadataSyncingRegions) WithValue(value []string) *BatchGetRegionsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetRegionsResponse_FieldSubPathValue)
}

func (s BatchGetRegionsResponsePathSelectorRegionsMetadataSyncingRegions) WithArrayOfValues(values [][]string) *BatchGetRegionsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetRegionsResponse_FieldSubPathArrayOfValues)
}

func (s BatchGetRegionsResponsePathSelectorRegionsMetadataSyncingRegions) WithItemValue(value string) *BatchGetRegionsResponse_FieldSubPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*BatchGetRegionsResponse_FieldSubPathArrayItemValue)
}

type BatchGetRegionsResponsePathSelectorMissing struct{}

func (BatchGetRegionsResponsePathSelectorMissing) FieldPath() *BatchGetRegionsResponse_FieldTerminalPath {
	return &BatchGetRegionsResponse_FieldTerminalPath{selector: BatchGetRegionsResponse_FieldPathSelectorMissing}
}

func (s BatchGetRegionsResponsePathSelectorMissing) WithValue(value []*region.Reference) *BatchGetRegionsResponse_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetRegionsResponse_FieldTerminalPathValue)
}

func (s BatchGetRegionsResponsePathSelectorMissing) WithArrayOfValues(values [][]*region.Reference) *BatchGetRegionsResponse_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetRegionsResponse_FieldTerminalPathArrayOfValues)
}

func (s BatchGetRegionsResponsePathSelectorMissing) WithItemValue(value *region.Reference) *BatchGetRegionsResponse_FieldTerminalPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*BatchGetRegionsResponse_FieldTerminalPathArrayItemValue)
}

type ListRegionsRequestFieldPathBuilder struct{}

func NewListRegionsRequestFieldPathBuilder() ListRegionsRequestFieldPathBuilder {
	return ListRegionsRequestFieldPathBuilder{}
}
func (ListRegionsRequestFieldPathBuilder) PageSize() ListRegionsRequestPathSelectorPageSize {
	return ListRegionsRequestPathSelectorPageSize{}
}
func (ListRegionsRequestFieldPathBuilder) PageToken() ListRegionsRequestPathSelectorPageToken {
	return ListRegionsRequestPathSelectorPageToken{}
}
func (ListRegionsRequestFieldPathBuilder) OrderBy() ListRegionsRequestPathSelectorOrderBy {
	return ListRegionsRequestPathSelectorOrderBy{}
}
func (ListRegionsRequestFieldPathBuilder) Filter() ListRegionsRequestPathSelectorFilter {
	return ListRegionsRequestPathSelectorFilter{}
}
func (ListRegionsRequestFieldPathBuilder) FieldMask() ListRegionsRequestPathSelectorFieldMask {
	return ListRegionsRequestPathSelectorFieldMask{}
}
func (ListRegionsRequestFieldPathBuilder) View() ListRegionsRequestPathSelectorView {
	return ListRegionsRequestPathSelectorView{}
}

type ListRegionsRequestPathSelectorPageSize struct{}

func (ListRegionsRequestPathSelectorPageSize) FieldPath() *ListRegionsRequest_FieldTerminalPath {
	return &ListRegionsRequest_FieldTerminalPath{selector: ListRegionsRequest_FieldPathSelectorPageSize}
}

func (s ListRegionsRequestPathSelectorPageSize) WithValue(value int32) *ListRegionsRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*ListRegionsRequest_FieldTerminalPathValue)
}

func (s ListRegionsRequestPathSelectorPageSize) WithArrayOfValues(values []int32) *ListRegionsRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListRegionsRequest_FieldTerminalPathArrayOfValues)
}

type ListRegionsRequestPathSelectorPageToken struct{}

func (ListRegionsRequestPathSelectorPageToken) FieldPath() *ListRegionsRequest_FieldTerminalPath {
	return &ListRegionsRequest_FieldTerminalPath{selector: ListRegionsRequest_FieldPathSelectorPageToken}
}

func (s ListRegionsRequestPathSelectorPageToken) WithValue(value *region.PagerCursor) *ListRegionsRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*ListRegionsRequest_FieldTerminalPathValue)
}

func (s ListRegionsRequestPathSelectorPageToken) WithArrayOfValues(values []*region.PagerCursor) *ListRegionsRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListRegionsRequest_FieldTerminalPathArrayOfValues)
}

type ListRegionsRequestPathSelectorOrderBy struct{}

func (ListRegionsRequestPathSelectorOrderBy) FieldPath() *ListRegionsRequest_FieldTerminalPath {
	return &ListRegionsRequest_FieldTerminalPath{selector: ListRegionsRequest_FieldPathSelectorOrderBy}
}

func (s ListRegionsRequestPathSelectorOrderBy) WithValue(value *region.OrderBy) *ListRegionsRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*ListRegionsRequest_FieldTerminalPathValue)
}

func (s ListRegionsRequestPathSelectorOrderBy) WithArrayOfValues(values []*region.OrderBy) *ListRegionsRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListRegionsRequest_FieldTerminalPathArrayOfValues)
}

type ListRegionsRequestPathSelectorFilter struct{}

func (ListRegionsRequestPathSelectorFilter) FieldPath() *ListRegionsRequest_FieldTerminalPath {
	return &ListRegionsRequest_FieldTerminalPath{selector: ListRegionsRequest_FieldPathSelectorFilter}
}

func (s ListRegionsRequestPathSelectorFilter) WithValue(value *region.Filter) *ListRegionsRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*ListRegionsRequest_FieldTerminalPathValue)
}

func (s ListRegionsRequestPathSelectorFilter) WithArrayOfValues(values []*region.Filter) *ListRegionsRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListRegionsRequest_FieldTerminalPathArrayOfValues)
}

type ListRegionsRequestPathSelectorFieldMask struct{}

func (ListRegionsRequestPathSelectorFieldMask) FieldPath() *ListRegionsRequest_FieldTerminalPath {
	return &ListRegionsRequest_FieldTerminalPath{selector: ListRegionsRequest_FieldPathSelectorFieldMask}
}

func (s ListRegionsRequestPathSelectorFieldMask) WithValue(value *region.Region_FieldMask) *ListRegionsRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*ListRegionsRequest_FieldTerminalPathValue)
}

func (s ListRegionsRequestPathSelectorFieldMask) WithArrayOfValues(values []*region.Region_FieldMask) *ListRegionsRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListRegionsRequest_FieldTerminalPathArrayOfValues)
}

type ListRegionsRequestPathSelectorView struct{}

func (ListRegionsRequestPathSelectorView) FieldPath() *ListRegionsRequest_FieldTerminalPath {
	return &ListRegionsRequest_FieldTerminalPath{selector: ListRegionsRequest_FieldPathSelectorView}
}

func (s ListRegionsRequestPathSelectorView) WithValue(value view.View) *ListRegionsRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*ListRegionsRequest_FieldTerminalPathValue)
}

func (s ListRegionsRequestPathSelectorView) WithArrayOfValues(values []view.View) *ListRegionsRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListRegionsRequest_FieldTerminalPathArrayOfValues)
}

type ListRegionsResponseFieldPathBuilder struct{}

func NewListRegionsResponseFieldPathBuilder() ListRegionsResponseFieldPathBuilder {
	return ListRegionsResponseFieldPathBuilder{}
}
func (ListRegionsResponseFieldPathBuilder) Regions() ListRegionsResponsePathSelectorRegions {
	return ListRegionsResponsePathSelectorRegions{}
}
func (ListRegionsResponseFieldPathBuilder) PrevPageToken() ListRegionsResponsePathSelectorPrevPageToken {
	return ListRegionsResponsePathSelectorPrevPageToken{}
}
func (ListRegionsResponseFieldPathBuilder) NextPageToken() ListRegionsResponsePathSelectorNextPageToken {
	return ListRegionsResponsePathSelectorNextPageToken{}
}

type ListRegionsResponsePathSelectorRegions struct{}

func (ListRegionsResponsePathSelectorRegions) FieldPath() *ListRegionsResponse_FieldTerminalPath {
	return &ListRegionsResponse_FieldTerminalPath{selector: ListRegionsResponse_FieldPathSelectorRegions}
}

func (s ListRegionsResponsePathSelectorRegions) WithValue(value []*region.Region) *ListRegionsResponse_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*ListRegionsResponse_FieldTerminalPathValue)
}

func (s ListRegionsResponsePathSelectorRegions) WithArrayOfValues(values [][]*region.Region) *ListRegionsResponse_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListRegionsResponse_FieldTerminalPathArrayOfValues)
}

func (s ListRegionsResponsePathSelectorRegions) WithItemValue(value *region.Region) *ListRegionsResponse_FieldTerminalPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*ListRegionsResponse_FieldTerminalPathArrayItemValue)
}
func (ListRegionsResponsePathSelectorRegions) WithSubPath(subPath region.Region_FieldPath) *ListRegionsResponse_FieldSubPath {
	return &ListRegionsResponse_FieldSubPath{selector: ListRegionsResponse_FieldPathSelectorRegions, subPath: subPath}
}

func (s ListRegionsResponsePathSelectorRegions) WithSubValue(subPathValue region.Region_FieldPathValue) *ListRegionsResponse_FieldSubPathValue {
	return &ListRegionsResponse_FieldSubPathValue{ListRegionsResponse_FieldPath: s.WithSubPath(subPathValue), subPathValue: subPathValue}
}

func (s ListRegionsResponsePathSelectorRegions) WithSubArrayOfValues(subPathArrayOfValues region.Region_FieldPathArrayOfValues) *ListRegionsResponse_FieldSubPathArrayOfValues {
	return &ListRegionsResponse_FieldSubPathArrayOfValues{ListRegionsResponse_FieldPath: s.WithSubPath(subPathArrayOfValues), subPathArrayOfValues: subPathArrayOfValues}
}

func (s ListRegionsResponsePathSelectorRegions) WithSubArrayItemValue(subPathArrayItemValue region.Region_FieldPathArrayItemValue) *ListRegionsResponse_FieldSubPathArrayItemValue {
	return &ListRegionsResponse_FieldSubPathArrayItemValue{ListRegionsResponse_FieldPath: s.WithSubPath(subPathArrayItemValue), subPathItemValue: subPathArrayItemValue}
}

func (ListRegionsResponsePathSelectorRegions) Name() ListRegionsResponsePathSelectorRegionsName {
	return ListRegionsResponsePathSelectorRegionsName{}
}

func (ListRegionsResponsePathSelectorRegions) Title() ListRegionsResponsePathSelectorRegionsTitle {
	return ListRegionsResponsePathSelectorRegionsTitle{}
}

func (ListRegionsResponsePathSelectorRegions) Domain() ListRegionsResponsePathSelectorRegionsDomain {
	return ListRegionsResponsePathSelectorRegionsDomain{}
}

func (ListRegionsResponsePathSelectorRegions) Location() ListRegionsResponsePathSelectorRegionsLocation {
	return ListRegionsResponsePathSelectorRegionsLocation{}
}

func (ListRegionsResponsePathSelectorRegions) IsDefault() ListRegionsResponsePathSelectorRegionsIsDefault {
	return ListRegionsResponsePathSelectorRegionsIsDefault{}
}

func (ListRegionsResponsePathSelectorRegions) ConnectivityScores() ListRegionsResponsePathSelectorRegionsConnectivityScores {
	return ListRegionsResponsePathSelectorRegionsConnectivityScores{}
}

func (ListRegionsResponsePathSelectorRegions) Metadata() ListRegionsResponsePathSelectorRegionsMetadata {
	return ListRegionsResponsePathSelectorRegionsMetadata{}
}

type ListRegionsResponsePathSelectorRegionsName struct{}

func (ListRegionsResponsePathSelectorRegionsName) FieldPath() *ListRegionsResponse_FieldSubPath {
	return &ListRegionsResponse_FieldSubPath{
		selector: ListRegionsResponse_FieldPathSelectorRegions,
		subPath:  region.NewRegionFieldPathBuilder().Name().FieldPath(),
	}
}

func (s ListRegionsResponsePathSelectorRegionsName) WithValue(value *region.Name) *ListRegionsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListRegionsResponse_FieldSubPathValue)
}

func (s ListRegionsResponsePathSelectorRegionsName) WithArrayOfValues(values []*region.Name) *ListRegionsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListRegionsResponse_FieldSubPathArrayOfValues)
}

type ListRegionsResponsePathSelectorRegionsTitle struct{}

func (ListRegionsResponsePathSelectorRegionsTitle) FieldPath() *ListRegionsResponse_FieldSubPath {
	return &ListRegionsResponse_FieldSubPath{
		selector: ListRegionsResponse_FieldPathSelectorRegions,
		subPath:  region.NewRegionFieldPathBuilder().Title().FieldPath(),
	}
}

func (s ListRegionsResponsePathSelectorRegionsTitle) WithValue(value string) *ListRegionsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListRegionsResponse_FieldSubPathValue)
}

func (s ListRegionsResponsePathSelectorRegionsTitle) WithArrayOfValues(values []string) *ListRegionsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListRegionsResponse_FieldSubPathArrayOfValues)
}

type ListRegionsResponsePathSelectorRegionsDomain struct{}

func (ListRegionsResponsePathSelectorRegionsDomain) FieldPath() *ListRegionsResponse_FieldSubPath {
	return &ListRegionsResponse_FieldSubPath{
		selector: ListRegionsResponse_FieldPathSelectorRegions,
		subPath:  region.NewRegionFieldPathBuilder().Domain().FieldPath(),
	}
}

func (s ListRegionsResponsePathSelectorRegionsDomain) WithValue(value string) *ListRegionsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListRegionsResponse_FieldSubPathValue)
}

func (s ListRegionsResponsePathSelectorRegionsDomain) WithArrayOfValues(values []string) *ListRegionsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListRegionsResponse_FieldSubPathArrayOfValues)
}

type ListRegionsResponsePathSelectorRegionsLocation struct{}

func (ListRegionsResponsePathSelectorRegionsLocation) FieldPath() *ListRegionsResponse_FieldSubPath {
	return &ListRegionsResponse_FieldSubPath{
		selector: ListRegionsResponse_FieldPathSelectorRegions,
		subPath:  region.NewRegionFieldPathBuilder().Location().FieldPath(),
	}
}

func (s ListRegionsResponsePathSelectorRegionsLocation) WithValue(value *region.Region_RegionLocation) *ListRegionsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListRegionsResponse_FieldSubPathValue)
}

func (s ListRegionsResponsePathSelectorRegionsLocation) WithArrayOfValues(values []*region.Region_RegionLocation) *ListRegionsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListRegionsResponse_FieldSubPathArrayOfValues)
}

func (ListRegionsResponsePathSelectorRegionsLocation) Continent() ListRegionsResponsePathSelectorRegionsLocationContinent {
	return ListRegionsResponsePathSelectorRegionsLocationContinent{}
}

func (ListRegionsResponsePathSelectorRegionsLocation) Country() ListRegionsResponsePathSelectorRegionsLocationCountry {
	return ListRegionsResponsePathSelectorRegionsLocationCountry{}
}

func (ListRegionsResponsePathSelectorRegionsLocation) Agglomeration() ListRegionsResponsePathSelectorRegionsLocationAgglomeration {
	return ListRegionsResponsePathSelectorRegionsLocationAgglomeration{}
}

func (ListRegionsResponsePathSelectorRegionsLocation) City() ListRegionsResponsePathSelectorRegionsLocationCity {
	return ListRegionsResponsePathSelectorRegionsLocationCity{}
}

func (ListRegionsResponsePathSelectorRegionsLocation) Cloud() ListRegionsResponsePathSelectorRegionsLocationCloud {
	return ListRegionsResponsePathSelectorRegionsLocationCloud{}
}

type ListRegionsResponsePathSelectorRegionsLocationContinent struct{}

func (ListRegionsResponsePathSelectorRegionsLocationContinent) FieldPath() *ListRegionsResponse_FieldSubPath {
	return &ListRegionsResponse_FieldSubPath{
		selector: ListRegionsResponse_FieldPathSelectorRegions,
		subPath:  region.NewRegionFieldPathBuilder().Location().Continent().FieldPath(),
	}
}

func (s ListRegionsResponsePathSelectorRegionsLocationContinent) WithValue(value string) *ListRegionsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListRegionsResponse_FieldSubPathValue)
}

func (s ListRegionsResponsePathSelectorRegionsLocationContinent) WithArrayOfValues(values []string) *ListRegionsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListRegionsResponse_FieldSubPathArrayOfValues)
}

type ListRegionsResponsePathSelectorRegionsLocationCountry struct{}

func (ListRegionsResponsePathSelectorRegionsLocationCountry) FieldPath() *ListRegionsResponse_FieldSubPath {
	return &ListRegionsResponse_FieldSubPath{
		selector: ListRegionsResponse_FieldPathSelectorRegions,
		subPath:  region.NewRegionFieldPathBuilder().Location().Country().FieldPath(),
	}
}

func (s ListRegionsResponsePathSelectorRegionsLocationCountry) WithValue(value string) *ListRegionsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListRegionsResponse_FieldSubPathValue)
}

func (s ListRegionsResponsePathSelectorRegionsLocationCountry) WithArrayOfValues(values []string) *ListRegionsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListRegionsResponse_FieldSubPathArrayOfValues)
}

type ListRegionsResponsePathSelectorRegionsLocationAgglomeration struct{}

func (ListRegionsResponsePathSelectorRegionsLocationAgglomeration) FieldPath() *ListRegionsResponse_FieldSubPath {
	return &ListRegionsResponse_FieldSubPath{
		selector: ListRegionsResponse_FieldPathSelectorRegions,
		subPath:  region.NewRegionFieldPathBuilder().Location().Agglomeration().FieldPath(),
	}
}

func (s ListRegionsResponsePathSelectorRegionsLocationAgglomeration) WithValue(value string) *ListRegionsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListRegionsResponse_FieldSubPathValue)
}

func (s ListRegionsResponsePathSelectorRegionsLocationAgglomeration) WithArrayOfValues(values []string) *ListRegionsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListRegionsResponse_FieldSubPathArrayOfValues)
}

type ListRegionsResponsePathSelectorRegionsLocationCity struct{}

func (ListRegionsResponsePathSelectorRegionsLocationCity) FieldPath() *ListRegionsResponse_FieldSubPath {
	return &ListRegionsResponse_FieldSubPath{
		selector: ListRegionsResponse_FieldPathSelectorRegions,
		subPath:  region.NewRegionFieldPathBuilder().Location().City().FieldPath(),
	}
}

func (s ListRegionsResponsePathSelectorRegionsLocationCity) WithValue(value string) *ListRegionsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListRegionsResponse_FieldSubPathValue)
}

func (s ListRegionsResponsePathSelectorRegionsLocationCity) WithArrayOfValues(values []string) *ListRegionsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListRegionsResponse_FieldSubPathArrayOfValues)
}

type ListRegionsResponsePathSelectorRegionsLocationCloud struct{}

func (ListRegionsResponsePathSelectorRegionsLocationCloud) FieldPath() *ListRegionsResponse_FieldSubPath {
	return &ListRegionsResponse_FieldSubPath{
		selector: ListRegionsResponse_FieldPathSelectorRegions,
		subPath:  region.NewRegionFieldPathBuilder().Location().Cloud().FieldPath(),
	}
}

func (s ListRegionsResponsePathSelectorRegionsLocationCloud) WithValue(value string) *ListRegionsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListRegionsResponse_FieldSubPathValue)
}

func (s ListRegionsResponsePathSelectorRegionsLocationCloud) WithArrayOfValues(values []string) *ListRegionsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListRegionsResponse_FieldSubPathArrayOfValues)
}

type ListRegionsResponsePathSelectorRegionsIsDefault struct{}

func (ListRegionsResponsePathSelectorRegionsIsDefault) FieldPath() *ListRegionsResponse_FieldSubPath {
	return &ListRegionsResponse_FieldSubPath{
		selector: ListRegionsResponse_FieldPathSelectorRegions,
		subPath:  region.NewRegionFieldPathBuilder().IsDefault().FieldPath(),
	}
}

func (s ListRegionsResponsePathSelectorRegionsIsDefault) WithValue(value bool) *ListRegionsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListRegionsResponse_FieldSubPathValue)
}

func (s ListRegionsResponsePathSelectorRegionsIsDefault) WithArrayOfValues(values []bool) *ListRegionsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListRegionsResponse_FieldSubPathArrayOfValues)
}

type ListRegionsResponsePathSelectorRegionsConnectivityScores struct{}

func (ListRegionsResponsePathSelectorRegionsConnectivityScores) FieldPath() *ListRegionsResponse_FieldSubPath {
	return &ListRegionsResponse_FieldSubPath{
		selector: ListRegionsResponse_FieldPathSelectorRegions,
		subPath:  region.NewRegionFieldPathBuilder().ConnectivityScores().FieldPath(),
	}
}

func (s ListRegionsResponsePathSelectorRegionsConnectivityScores) WithValue(value []*region.Region_RegionConnectivityPreference) *ListRegionsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListRegionsResponse_FieldSubPathValue)
}

func (s ListRegionsResponsePathSelectorRegionsConnectivityScores) WithArrayOfValues(values [][]*region.Region_RegionConnectivityPreference) *ListRegionsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListRegionsResponse_FieldSubPathArrayOfValues)
}

func (s ListRegionsResponsePathSelectorRegionsConnectivityScores) WithItemValue(value *region.Region_RegionConnectivityPreference) *ListRegionsResponse_FieldSubPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*ListRegionsResponse_FieldSubPathArrayItemValue)
}

func (ListRegionsResponsePathSelectorRegionsConnectivityScores) Dest() ListRegionsResponsePathSelectorRegionsConnectivityScoresDest {
	return ListRegionsResponsePathSelectorRegionsConnectivityScoresDest{}
}

func (ListRegionsResponsePathSelectorRegionsConnectivityScores) Score() ListRegionsResponsePathSelectorRegionsConnectivityScoresScore {
	return ListRegionsResponsePathSelectorRegionsConnectivityScoresScore{}
}

type ListRegionsResponsePathSelectorRegionsConnectivityScoresDest struct{}

func (ListRegionsResponsePathSelectorRegionsConnectivityScoresDest) FieldPath() *ListRegionsResponse_FieldSubPath {
	return &ListRegionsResponse_FieldSubPath{
		selector: ListRegionsResponse_FieldPathSelectorRegions,
		subPath:  region.NewRegionFieldPathBuilder().ConnectivityScores().Dest().FieldPath(),
	}
}

func (s ListRegionsResponsePathSelectorRegionsConnectivityScoresDest) WithValue(value *region.Reference) *ListRegionsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListRegionsResponse_FieldSubPathValue)
}

func (s ListRegionsResponsePathSelectorRegionsConnectivityScoresDest) WithArrayOfValues(values []*region.Reference) *ListRegionsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListRegionsResponse_FieldSubPathArrayOfValues)
}

type ListRegionsResponsePathSelectorRegionsConnectivityScoresScore struct{}

func (ListRegionsResponsePathSelectorRegionsConnectivityScoresScore) FieldPath() *ListRegionsResponse_FieldSubPath {
	return &ListRegionsResponse_FieldSubPath{
		selector: ListRegionsResponse_FieldPathSelectorRegions,
		subPath:  region.NewRegionFieldPathBuilder().ConnectivityScores().Score().FieldPath(),
	}
}

func (s ListRegionsResponsePathSelectorRegionsConnectivityScoresScore) WithValue(value int32) *ListRegionsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListRegionsResponse_FieldSubPathValue)
}

func (s ListRegionsResponsePathSelectorRegionsConnectivityScoresScore) WithArrayOfValues(values []int32) *ListRegionsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListRegionsResponse_FieldSubPathArrayOfValues)
}

type ListRegionsResponsePathSelectorRegionsMetadata struct{}

func (ListRegionsResponsePathSelectorRegionsMetadata) FieldPath() *ListRegionsResponse_FieldSubPath {
	return &ListRegionsResponse_FieldSubPath{
		selector: ListRegionsResponse_FieldPathSelectorRegions,
		subPath:  region.NewRegionFieldPathBuilder().Metadata().FieldPath(),
	}
}

func (s ListRegionsResponsePathSelectorRegionsMetadata) WithValue(value *ntt_meta.Meta) *ListRegionsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListRegionsResponse_FieldSubPathValue)
}

func (s ListRegionsResponsePathSelectorRegionsMetadata) WithArrayOfValues(values []*ntt_meta.Meta) *ListRegionsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListRegionsResponse_FieldSubPathArrayOfValues)
}

func (ListRegionsResponsePathSelectorRegionsMetadata) CreateTime() ListRegionsResponsePathSelectorRegionsMetadataCreateTime {
	return ListRegionsResponsePathSelectorRegionsMetadataCreateTime{}
}

func (ListRegionsResponsePathSelectorRegionsMetadata) UpdateTime() ListRegionsResponsePathSelectorRegionsMetadataUpdateTime {
	return ListRegionsResponsePathSelectorRegionsMetadataUpdateTime{}
}

func (ListRegionsResponsePathSelectorRegionsMetadata) Uuid() ListRegionsResponsePathSelectorRegionsMetadataUuid {
	return ListRegionsResponsePathSelectorRegionsMetadataUuid{}
}

func (ListRegionsResponsePathSelectorRegionsMetadata) Tags() ListRegionsResponsePathSelectorRegionsMetadataTags {
	return ListRegionsResponsePathSelectorRegionsMetadataTags{}
}

func (ListRegionsResponsePathSelectorRegionsMetadata) Labels() ListRegionsResponsePathSelectorRegionsMetadataLabels {
	return ListRegionsResponsePathSelectorRegionsMetadataLabels{}
}

func (ListRegionsResponsePathSelectorRegionsMetadata) Annotations() ListRegionsResponsePathSelectorRegionsMetadataAnnotations {
	return ListRegionsResponsePathSelectorRegionsMetadataAnnotations{}
}

func (ListRegionsResponsePathSelectorRegionsMetadata) Generation() ListRegionsResponsePathSelectorRegionsMetadataGeneration {
	return ListRegionsResponsePathSelectorRegionsMetadataGeneration{}
}

func (ListRegionsResponsePathSelectorRegionsMetadata) ResourceVersion() ListRegionsResponsePathSelectorRegionsMetadataResourceVersion {
	return ListRegionsResponsePathSelectorRegionsMetadataResourceVersion{}
}

func (ListRegionsResponsePathSelectorRegionsMetadata) OwnerReferences() ListRegionsResponsePathSelectorRegionsMetadataOwnerReferences {
	return ListRegionsResponsePathSelectorRegionsMetadataOwnerReferences{}
}

func (ListRegionsResponsePathSelectorRegionsMetadata) Shards() ListRegionsResponsePathSelectorRegionsMetadataShards {
	return ListRegionsResponsePathSelectorRegionsMetadataShards{}
}

func (ListRegionsResponsePathSelectorRegionsMetadata) Syncing() ListRegionsResponsePathSelectorRegionsMetadataSyncing {
	return ListRegionsResponsePathSelectorRegionsMetadataSyncing{}
}

type ListRegionsResponsePathSelectorRegionsMetadataCreateTime struct{}

func (ListRegionsResponsePathSelectorRegionsMetadataCreateTime) FieldPath() *ListRegionsResponse_FieldSubPath {
	return &ListRegionsResponse_FieldSubPath{
		selector: ListRegionsResponse_FieldPathSelectorRegions,
		subPath:  region.NewRegionFieldPathBuilder().Metadata().CreateTime().FieldPath(),
	}
}

func (s ListRegionsResponsePathSelectorRegionsMetadataCreateTime) WithValue(value *timestamp.Timestamp) *ListRegionsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListRegionsResponse_FieldSubPathValue)
}

func (s ListRegionsResponsePathSelectorRegionsMetadataCreateTime) WithArrayOfValues(values []*timestamp.Timestamp) *ListRegionsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListRegionsResponse_FieldSubPathArrayOfValues)
}

type ListRegionsResponsePathSelectorRegionsMetadataUpdateTime struct{}

func (ListRegionsResponsePathSelectorRegionsMetadataUpdateTime) FieldPath() *ListRegionsResponse_FieldSubPath {
	return &ListRegionsResponse_FieldSubPath{
		selector: ListRegionsResponse_FieldPathSelectorRegions,
		subPath:  region.NewRegionFieldPathBuilder().Metadata().UpdateTime().FieldPath(),
	}
}

func (s ListRegionsResponsePathSelectorRegionsMetadataUpdateTime) WithValue(value *timestamp.Timestamp) *ListRegionsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListRegionsResponse_FieldSubPathValue)
}

func (s ListRegionsResponsePathSelectorRegionsMetadataUpdateTime) WithArrayOfValues(values []*timestamp.Timestamp) *ListRegionsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListRegionsResponse_FieldSubPathArrayOfValues)
}

type ListRegionsResponsePathSelectorRegionsMetadataUuid struct{}

func (ListRegionsResponsePathSelectorRegionsMetadataUuid) FieldPath() *ListRegionsResponse_FieldSubPath {
	return &ListRegionsResponse_FieldSubPath{
		selector: ListRegionsResponse_FieldPathSelectorRegions,
		subPath:  region.NewRegionFieldPathBuilder().Metadata().Uuid().FieldPath(),
	}
}

func (s ListRegionsResponsePathSelectorRegionsMetadataUuid) WithValue(value string) *ListRegionsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListRegionsResponse_FieldSubPathValue)
}

func (s ListRegionsResponsePathSelectorRegionsMetadataUuid) WithArrayOfValues(values []string) *ListRegionsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListRegionsResponse_FieldSubPathArrayOfValues)
}

type ListRegionsResponsePathSelectorRegionsMetadataTags struct{}

func (ListRegionsResponsePathSelectorRegionsMetadataTags) FieldPath() *ListRegionsResponse_FieldSubPath {
	return &ListRegionsResponse_FieldSubPath{
		selector: ListRegionsResponse_FieldPathSelectorRegions,
		subPath:  region.NewRegionFieldPathBuilder().Metadata().Tags().FieldPath(),
	}
}

func (s ListRegionsResponsePathSelectorRegionsMetadataTags) WithValue(value []string) *ListRegionsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListRegionsResponse_FieldSubPathValue)
}

func (s ListRegionsResponsePathSelectorRegionsMetadataTags) WithArrayOfValues(values [][]string) *ListRegionsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListRegionsResponse_FieldSubPathArrayOfValues)
}

func (s ListRegionsResponsePathSelectorRegionsMetadataTags) WithItemValue(value string) *ListRegionsResponse_FieldSubPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*ListRegionsResponse_FieldSubPathArrayItemValue)
}

type ListRegionsResponsePathSelectorRegionsMetadataLabels struct{}

func (ListRegionsResponsePathSelectorRegionsMetadataLabels) FieldPath() *ListRegionsResponse_FieldSubPath {
	return &ListRegionsResponse_FieldSubPath{
		selector: ListRegionsResponse_FieldPathSelectorRegions,
		subPath:  region.NewRegionFieldPathBuilder().Metadata().Labels().FieldPath(),
	}
}

func (s ListRegionsResponsePathSelectorRegionsMetadataLabels) WithValue(value map[string]string) *ListRegionsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListRegionsResponse_FieldSubPathValue)
}

func (s ListRegionsResponsePathSelectorRegionsMetadataLabels) WithArrayOfValues(values []map[string]string) *ListRegionsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListRegionsResponse_FieldSubPathArrayOfValues)
}

func (ListRegionsResponsePathSelectorRegionsMetadataLabels) WithKey(key string) ListRegionsResponseMapPathSelectorRegionsMetadataLabels {
	return ListRegionsResponseMapPathSelectorRegionsMetadataLabels{key: key}
}

type ListRegionsResponseMapPathSelectorRegionsMetadataLabels struct {
	key string
}

func (s ListRegionsResponseMapPathSelectorRegionsMetadataLabels) FieldPath() *ListRegionsResponse_FieldSubPath {
	return &ListRegionsResponse_FieldSubPath{
		selector: ListRegionsResponse_FieldPathSelectorRegions,
		subPath:  region.NewRegionFieldPathBuilder().Metadata().Labels().WithKey(s.key).FieldPath(),
	}
}

func (s ListRegionsResponseMapPathSelectorRegionsMetadataLabels) WithValue(value string) *ListRegionsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListRegionsResponse_FieldSubPathValue)
}

func (s ListRegionsResponseMapPathSelectorRegionsMetadataLabels) WithArrayOfValues(values []string) *ListRegionsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListRegionsResponse_FieldSubPathArrayOfValues)
}

type ListRegionsResponsePathSelectorRegionsMetadataAnnotations struct{}

func (ListRegionsResponsePathSelectorRegionsMetadataAnnotations) FieldPath() *ListRegionsResponse_FieldSubPath {
	return &ListRegionsResponse_FieldSubPath{
		selector: ListRegionsResponse_FieldPathSelectorRegions,
		subPath:  region.NewRegionFieldPathBuilder().Metadata().Annotations().FieldPath(),
	}
}

func (s ListRegionsResponsePathSelectorRegionsMetadataAnnotations) WithValue(value map[string]string) *ListRegionsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListRegionsResponse_FieldSubPathValue)
}

func (s ListRegionsResponsePathSelectorRegionsMetadataAnnotations) WithArrayOfValues(values []map[string]string) *ListRegionsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListRegionsResponse_FieldSubPathArrayOfValues)
}

func (ListRegionsResponsePathSelectorRegionsMetadataAnnotations) WithKey(key string) ListRegionsResponseMapPathSelectorRegionsMetadataAnnotations {
	return ListRegionsResponseMapPathSelectorRegionsMetadataAnnotations{key: key}
}

type ListRegionsResponseMapPathSelectorRegionsMetadataAnnotations struct {
	key string
}

func (s ListRegionsResponseMapPathSelectorRegionsMetadataAnnotations) FieldPath() *ListRegionsResponse_FieldSubPath {
	return &ListRegionsResponse_FieldSubPath{
		selector: ListRegionsResponse_FieldPathSelectorRegions,
		subPath:  region.NewRegionFieldPathBuilder().Metadata().Annotations().WithKey(s.key).FieldPath(),
	}
}

func (s ListRegionsResponseMapPathSelectorRegionsMetadataAnnotations) WithValue(value string) *ListRegionsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListRegionsResponse_FieldSubPathValue)
}

func (s ListRegionsResponseMapPathSelectorRegionsMetadataAnnotations) WithArrayOfValues(values []string) *ListRegionsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListRegionsResponse_FieldSubPathArrayOfValues)
}

type ListRegionsResponsePathSelectorRegionsMetadataGeneration struct{}

func (ListRegionsResponsePathSelectorRegionsMetadataGeneration) FieldPath() *ListRegionsResponse_FieldSubPath {
	return &ListRegionsResponse_FieldSubPath{
		selector: ListRegionsResponse_FieldPathSelectorRegions,
		subPath:  region.NewRegionFieldPathBuilder().Metadata().Generation().FieldPath(),
	}
}

func (s ListRegionsResponsePathSelectorRegionsMetadataGeneration) WithValue(value int64) *ListRegionsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListRegionsResponse_FieldSubPathValue)
}

func (s ListRegionsResponsePathSelectorRegionsMetadataGeneration) WithArrayOfValues(values []int64) *ListRegionsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListRegionsResponse_FieldSubPathArrayOfValues)
}

type ListRegionsResponsePathSelectorRegionsMetadataResourceVersion struct{}

func (ListRegionsResponsePathSelectorRegionsMetadataResourceVersion) FieldPath() *ListRegionsResponse_FieldSubPath {
	return &ListRegionsResponse_FieldSubPath{
		selector: ListRegionsResponse_FieldPathSelectorRegions,
		subPath:  region.NewRegionFieldPathBuilder().Metadata().ResourceVersion().FieldPath(),
	}
}

func (s ListRegionsResponsePathSelectorRegionsMetadataResourceVersion) WithValue(value string) *ListRegionsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListRegionsResponse_FieldSubPathValue)
}

func (s ListRegionsResponsePathSelectorRegionsMetadataResourceVersion) WithArrayOfValues(values []string) *ListRegionsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListRegionsResponse_FieldSubPathArrayOfValues)
}

type ListRegionsResponsePathSelectorRegionsMetadataOwnerReferences struct{}

func (ListRegionsResponsePathSelectorRegionsMetadataOwnerReferences) FieldPath() *ListRegionsResponse_FieldSubPath {
	return &ListRegionsResponse_FieldSubPath{
		selector: ListRegionsResponse_FieldPathSelectorRegions,
		subPath:  region.NewRegionFieldPathBuilder().Metadata().OwnerReferences().FieldPath(),
	}
}

func (s ListRegionsResponsePathSelectorRegionsMetadataOwnerReferences) WithValue(value []*ntt_meta.OwnerReference) *ListRegionsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListRegionsResponse_FieldSubPathValue)
}

func (s ListRegionsResponsePathSelectorRegionsMetadataOwnerReferences) WithArrayOfValues(values [][]*ntt_meta.OwnerReference) *ListRegionsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListRegionsResponse_FieldSubPathArrayOfValues)
}

func (s ListRegionsResponsePathSelectorRegionsMetadataOwnerReferences) WithItemValue(value *ntt_meta.OwnerReference) *ListRegionsResponse_FieldSubPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*ListRegionsResponse_FieldSubPathArrayItemValue)
}

func (ListRegionsResponsePathSelectorRegionsMetadataOwnerReferences) ApiVersion() ListRegionsResponsePathSelectorRegionsMetadataOwnerReferencesApiVersion {
	return ListRegionsResponsePathSelectorRegionsMetadataOwnerReferencesApiVersion{}
}

func (ListRegionsResponsePathSelectorRegionsMetadataOwnerReferences) Kind() ListRegionsResponsePathSelectorRegionsMetadataOwnerReferencesKind {
	return ListRegionsResponsePathSelectorRegionsMetadataOwnerReferencesKind{}
}

func (ListRegionsResponsePathSelectorRegionsMetadataOwnerReferences) Name() ListRegionsResponsePathSelectorRegionsMetadataOwnerReferencesName {
	return ListRegionsResponsePathSelectorRegionsMetadataOwnerReferencesName{}
}

func (ListRegionsResponsePathSelectorRegionsMetadataOwnerReferences) Uid() ListRegionsResponsePathSelectorRegionsMetadataOwnerReferencesUid {
	return ListRegionsResponsePathSelectorRegionsMetadataOwnerReferencesUid{}
}

func (ListRegionsResponsePathSelectorRegionsMetadataOwnerReferences) Controller() ListRegionsResponsePathSelectorRegionsMetadataOwnerReferencesController {
	return ListRegionsResponsePathSelectorRegionsMetadataOwnerReferencesController{}
}

func (ListRegionsResponsePathSelectorRegionsMetadataOwnerReferences) BlockOwnerDeletion() ListRegionsResponsePathSelectorRegionsMetadataOwnerReferencesBlockOwnerDeletion {
	return ListRegionsResponsePathSelectorRegionsMetadataOwnerReferencesBlockOwnerDeletion{}
}

type ListRegionsResponsePathSelectorRegionsMetadataOwnerReferencesApiVersion struct{}

func (ListRegionsResponsePathSelectorRegionsMetadataOwnerReferencesApiVersion) FieldPath() *ListRegionsResponse_FieldSubPath {
	return &ListRegionsResponse_FieldSubPath{
		selector: ListRegionsResponse_FieldPathSelectorRegions,
		subPath:  region.NewRegionFieldPathBuilder().Metadata().OwnerReferences().ApiVersion().FieldPath(),
	}
}

func (s ListRegionsResponsePathSelectorRegionsMetadataOwnerReferencesApiVersion) WithValue(value string) *ListRegionsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListRegionsResponse_FieldSubPathValue)
}

func (s ListRegionsResponsePathSelectorRegionsMetadataOwnerReferencesApiVersion) WithArrayOfValues(values []string) *ListRegionsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListRegionsResponse_FieldSubPathArrayOfValues)
}

type ListRegionsResponsePathSelectorRegionsMetadataOwnerReferencesKind struct{}

func (ListRegionsResponsePathSelectorRegionsMetadataOwnerReferencesKind) FieldPath() *ListRegionsResponse_FieldSubPath {
	return &ListRegionsResponse_FieldSubPath{
		selector: ListRegionsResponse_FieldPathSelectorRegions,
		subPath:  region.NewRegionFieldPathBuilder().Metadata().OwnerReferences().Kind().FieldPath(),
	}
}

func (s ListRegionsResponsePathSelectorRegionsMetadataOwnerReferencesKind) WithValue(value string) *ListRegionsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListRegionsResponse_FieldSubPathValue)
}

func (s ListRegionsResponsePathSelectorRegionsMetadataOwnerReferencesKind) WithArrayOfValues(values []string) *ListRegionsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListRegionsResponse_FieldSubPathArrayOfValues)
}

type ListRegionsResponsePathSelectorRegionsMetadataOwnerReferencesName struct{}

func (ListRegionsResponsePathSelectorRegionsMetadataOwnerReferencesName) FieldPath() *ListRegionsResponse_FieldSubPath {
	return &ListRegionsResponse_FieldSubPath{
		selector: ListRegionsResponse_FieldPathSelectorRegions,
		subPath:  region.NewRegionFieldPathBuilder().Metadata().OwnerReferences().Name().FieldPath(),
	}
}

func (s ListRegionsResponsePathSelectorRegionsMetadataOwnerReferencesName) WithValue(value string) *ListRegionsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListRegionsResponse_FieldSubPathValue)
}

func (s ListRegionsResponsePathSelectorRegionsMetadataOwnerReferencesName) WithArrayOfValues(values []string) *ListRegionsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListRegionsResponse_FieldSubPathArrayOfValues)
}

type ListRegionsResponsePathSelectorRegionsMetadataOwnerReferencesUid struct{}

func (ListRegionsResponsePathSelectorRegionsMetadataOwnerReferencesUid) FieldPath() *ListRegionsResponse_FieldSubPath {
	return &ListRegionsResponse_FieldSubPath{
		selector: ListRegionsResponse_FieldPathSelectorRegions,
		subPath:  region.NewRegionFieldPathBuilder().Metadata().OwnerReferences().Uid().FieldPath(),
	}
}

func (s ListRegionsResponsePathSelectorRegionsMetadataOwnerReferencesUid) WithValue(value string) *ListRegionsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListRegionsResponse_FieldSubPathValue)
}

func (s ListRegionsResponsePathSelectorRegionsMetadataOwnerReferencesUid) WithArrayOfValues(values []string) *ListRegionsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListRegionsResponse_FieldSubPathArrayOfValues)
}

type ListRegionsResponsePathSelectorRegionsMetadataOwnerReferencesController struct{}

func (ListRegionsResponsePathSelectorRegionsMetadataOwnerReferencesController) FieldPath() *ListRegionsResponse_FieldSubPath {
	return &ListRegionsResponse_FieldSubPath{
		selector: ListRegionsResponse_FieldPathSelectorRegions,
		subPath:  region.NewRegionFieldPathBuilder().Metadata().OwnerReferences().Controller().FieldPath(),
	}
}

func (s ListRegionsResponsePathSelectorRegionsMetadataOwnerReferencesController) WithValue(value bool) *ListRegionsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListRegionsResponse_FieldSubPathValue)
}

func (s ListRegionsResponsePathSelectorRegionsMetadataOwnerReferencesController) WithArrayOfValues(values []bool) *ListRegionsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListRegionsResponse_FieldSubPathArrayOfValues)
}

type ListRegionsResponsePathSelectorRegionsMetadataOwnerReferencesBlockOwnerDeletion struct{}

func (ListRegionsResponsePathSelectorRegionsMetadataOwnerReferencesBlockOwnerDeletion) FieldPath() *ListRegionsResponse_FieldSubPath {
	return &ListRegionsResponse_FieldSubPath{
		selector: ListRegionsResponse_FieldPathSelectorRegions,
		subPath:  region.NewRegionFieldPathBuilder().Metadata().OwnerReferences().BlockOwnerDeletion().FieldPath(),
	}
}

func (s ListRegionsResponsePathSelectorRegionsMetadataOwnerReferencesBlockOwnerDeletion) WithValue(value bool) *ListRegionsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListRegionsResponse_FieldSubPathValue)
}

func (s ListRegionsResponsePathSelectorRegionsMetadataOwnerReferencesBlockOwnerDeletion) WithArrayOfValues(values []bool) *ListRegionsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListRegionsResponse_FieldSubPathArrayOfValues)
}

type ListRegionsResponsePathSelectorRegionsMetadataShards struct{}

func (ListRegionsResponsePathSelectorRegionsMetadataShards) FieldPath() *ListRegionsResponse_FieldSubPath {
	return &ListRegionsResponse_FieldSubPath{
		selector: ListRegionsResponse_FieldPathSelectorRegions,
		subPath:  region.NewRegionFieldPathBuilder().Metadata().Shards().FieldPath(),
	}
}

func (s ListRegionsResponsePathSelectorRegionsMetadataShards) WithValue(value map[string]int64) *ListRegionsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListRegionsResponse_FieldSubPathValue)
}

func (s ListRegionsResponsePathSelectorRegionsMetadataShards) WithArrayOfValues(values []map[string]int64) *ListRegionsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListRegionsResponse_FieldSubPathArrayOfValues)
}

func (ListRegionsResponsePathSelectorRegionsMetadataShards) WithKey(key string) ListRegionsResponseMapPathSelectorRegionsMetadataShards {
	return ListRegionsResponseMapPathSelectorRegionsMetadataShards{key: key}
}

type ListRegionsResponseMapPathSelectorRegionsMetadataShards struct {
	key string
}

func (s ListRegionsResponseMapPathSelectorRegionsMetadataShards) FieldPath() *ListRegionsResponse_FieldSubPath {
	return &ListRegionsResponse_FieldSubPath{
		selector: ListRegionsResponse_FieldPathSelectorRegions,
		subPath:  region.NewRegionFieldPathBuilder().Metadata().Shards().WithKey(s.key).FieldPath(),
	}
}

func (s ListRegionsResponseMapPathSelectorRegionsMetadataShards) WithValue(value int64) *ListRegionsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListRegionsResponse_FieldSubPathValue)
}

func (s ListRegionsResponseMapPathSelectorRegionsMetadataShards) WithArrayOfValues(values []int64) *ListRegionsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListRegionsResponse_FieldSubPathArrayOfValues)
}

type ListRegionsResponsePathSelectorRegionsMetadataSyncing struct{}

func (ListRegionsResponsePathSelectorRegionsMetadataSyncing) FieldPath() *ListRegionsResponse_FieldSubPath {
	return &ListRegionsResponse_FieldSubPath{
		selector: ListRegionsResponse_FieldPathSelectorRegions,
		subPath:  region.NewRegionFieldPathBuilder().Metadata().Syncing().FieldPath(),
	}
}

func (s ListRegionsResponsePathSelectorRegionsMetadataSyncing) WithValue(value *syncing_meta.SyncingMeta) *ListRegionsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListRegionsResponse_FieldSubPathValue)
}

func (s ListRegionsResponsePathSelectorRegionsMetadataSyncing) WithArrayOfValues(values []*syncing_meta.SyncingMeta) *ListRegionsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListRegionsResponse_FieldSubPathArrayOfValues)
}

func (ListRegionsResponsePathSelectorRegionsMetadataSyncing) OwningRegion() ListRegionsResponsePathSelectorRegionsMetadataSyncingOwningRegion {
	return ListRegionsResponsePathSelectorRegionsMetadataSyncingOwningRegion{}
}

func (ListRegionsResponsePathSelectorRegionsMetadataSyncing) Regions() ListRegionsResponsePathSelectorRegionsMetadataSyncingRegions {
	return ListRegionsResponsePathSelectorRegionsMetadataSyncingRegions{}
}

type ListRegionsResponsePathSelectorRegionsMetadataSyncingOwningRegion struct{}

func (ListRegionsResponsePathSelectorRegionsMetadataSyncingOwningRegion) FieldPath() *ListRegionsResponse_FieldSubPath {
	return &ListRegionsResponse_FieldSubPath{
		selector: ListRegionsResponse_FieldPathSelectorRegions,
		subPath:  region.NewRegionFieldPathBuilder().Metadata().Syncing().OwningRegion().FieldPath(),
	}
}

func (s ListRegionsResponsePathSelectorRegionsMetadataSyncingOwningRegion) WithValue(value string) *ListRegionsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListRegionsResponse_FieldSubPathValue)
}

func (s ListRegionsResponsePathSelectorRegionsMetadataSyncingOwningRegion) WithArrayOfValues(values []string) *ListRegionsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListRegionsResponse_FieldSubPathArrayOfValues)
}

type ListRegionsResponsePathSelectorRegionsMetadataSyncingRegions struct{}

func (ListRegionsResponsePathSelectorRegionsMetadataSyncingRegions) FieldPath() *ListRegionsResponse_FieldSubPath {
	return &ListRegionsResponse_FieldSubPath{
		selector: ListRegionsResponse_FieldPathSelectorRegions,
		subPath:  region.NewRegionFieldPathBuilder().Metadata().Syncing().Regions().FieldPath(),
	}
}

func (s ListRegionsResponsePathSelectorRegionsMetadataSyncingRegions) WithValue(value []string) *ListRegionsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListRegionsResponse_FieldSubPathValue)
}

func (s ListRegionsResponsePathSelectorRegionsMetadataSyncingRegions) WithArrayOfValues(values [][]string) *ListRegionsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListRegionsResponse_FieldSubPathArrayOfValues)
}

func (s ListRegionsResponsePathSelectorRegionsMetadataSyncingRegions) WithItemValue(value string) *ListRegionsResponse_FieldSubPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*ListRegionsResponse_FieldSubPathArrayItemValue)
}

type ListRegionsResponsePathSelectorPrevPageToken struct{}

func (ListRegionsResponsePathSelectorPrevPageToken) FieldPath() *ListRegionsResponse_FieldTerminalPath {
	return &ListRegionsResponse_FieldTerminalPath{selector: ListRegionsResponse_FieldPathSelectorPrevPageToken}
}

func (s ListRegionsResponsePathSelectorPrevPageToken) WithValue(value *region.PagerCursor) *ListRegionsResponse_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*ListRegionsResponse_FieldTerminalPathValue)
}

func (s ListRegionsResponsePathSelectorPrevPageToken) WithArrayOfValues(values []*region.PagerCursor) *ListRegionsResponse_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListRegionsResponse_FieldTerminalPathArrayOfValues)
}

type ListRegionsResponsePathSelectorNextPageToken struct{}

func (ListRegionsResponsePathSelectorNextPageToken) FieldPath() *ListRegionsResponse_FieldTerminalPath {
	return &ListRegionsResponse_FieldTerminalPath{selector: ListRegionsResponse_FieldPathSelectorNextPageToken}
}

func (s ListRegionsResponsePathSelectorNextPageToken) WithValue(value *region.PagerCursor) *ListRegionsResponse_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*ListRegionsResponse_FieldTerminalPathValue)
}

func (s ListRegionsResponsePathSelectorNextPageToken) WithArrayOfValues(values []*region.PagerCursor) *ListRegionsResponse_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListRegionsResponse_FieldTerminalPathArrayOfValues)
}

type WatchRegionRequestFieldPathBuilder struct{}

func NewWatchRegionRequestFieldPathBuilder() WatchRegionRequestFieldPathBuilder {
	return WatchRegionRequestFieldPathBuilder{}
}
func (WatchRegionRequestFieldPathBuilder) Name() WatchRegionRequestPathSelectorName {
	return WatchRegionRequestPathSelectorName{}
}
func (WatchRegionRequestFieldPathBuilder) FieldMask() WatchRegionRequestPathSelectorFieldMask {
	return WatchRegionRequestPathSelectorFieldMask{}
}
func (WatchRegionRequestFieldPathBuilder) View() WatchRegionRequestPathSelectorView {
	return WatchRegionRequestPathSelectorView{}
}

type WatchRegionRequestPathSelectorName struct{}

func (WatchRegionRequestPathSelectorName) FieldPath() *WatchRegionRequest_FieldTerminalPath {
	return &WatchRegionRequest_FieldTerminalPath{selector: WatchRegionRequest_FieldPathSelectorName}
}

func (s WatchRegionRequestPathSelectorName) WithValue(value *region.Reference) *WatchRegionRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*WatchRegionRequest_FieldTerminalPathValue)
}

func (s WatchRegionRequestPathSelectorName) WithArrayOfValues(values []*region.Reference) *WatchRegionRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*WatchRegionRequest_FieldTerminalPathArrayOfValues)
}

type WatchRegionRequestPathSelectorFieldMask struct{}

func (WatchRegionRequestPathSelectorFieldMask) FieldPath() *WatchRegionRequest_FieldTerminalPath {
	return &WatchRegionRequest_FieldTerminalPath{selector: WatchRegionRequest_FieldPathSelectorFieldMask}
}

func (s WatchRegionRequestPathSelectorFieldMask) WithValue(value *region.Region_FieldMask) *WatchRegionRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*WatchRegionRequest_FieldTerminalPathValue)
}

func (s WatchRegionRequestPathSelectorFieldMask) WithArrayOfValues(values []*region.Region_FieldMask) *WatchRegionRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*WatchRegionRequest_FieldTerminalPathArrayOfValues)
}

type WatchRegionRequestPathSelectorView struct{}

func (WatchRegionRequestPathSelectorView) FieldPath() *WatchRegionRequest_FieldTerminalPath {
	return &WatchRegionRequest_FieldTerminalPath{selector: WatchRegionRequest_FieldPathSelectorView}
}

func (s WatchRegionRequestPathSelectorView) WithValue(value view.View) *WatchRegionRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*WatchRegionRequest_FieldTerminalPathValue)
}

func (s WatchRegionRequestPathSelectorView) WithArrayOfValues(values []view.View) *WatchRegionRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*WatchRegionRequest_FieldTerminalPathArrayOfValues)
}

type WatchRegionResponseFieldPathBuilder struct{}

func NewWatchRegionResponseFieldPathBuilder() WatchRegionResponseFieldPathBuilder {
	return WatchRegionResponseFieldPathBuilder{}
}
func (WatchRegionResponseFieldPathBuilder) Change() WatchRegionResponsePathSelectorChange {
	return WatchRegionResponsePathSelectorChange{}
}

type WatchRegionResponsePathSelectorChange struct{}

func (WatchRegionResponsePathSelectorChange) FieldPath() *WatchRegionResponse_FieldTerminalPath {
	return &WatchRegionResponse_FieldTerminalPath{selector: WatchRegionResponse_FieldPathSelectorChange}
}

func (s WatchRegionResponsePathSelectorChange) WithValue(value *region.RegionChange) *WatchRegionResponse_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*WatchRegionResponse_FieldTerminalPathValue)
}

func (s WatchRegionResponsePathSelectorChange) WithArrayOfValues(values []*region.RegionChange) *WatchRegionResponse_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*WatchRegionResponse_FieldTerminalPathArrayOfValues)
}

type WatchRegionsRequestFieldPathBuilder struct{}

func NewWatchRegionsRequestFieldPathBuilder() WatchRegionsRequestFieldPathBuilder {
	return WatchRegionsRequestFieldPathBuilder{}
}
func (WatchRegionsRequestFieldPathBuilder) Type() WatchRegionsRequestPathSelectorType {
	return WatchRegionsRequestPathSelectorType{}
}
func (WatchRegionsRequestFieldPathBuilder) PageSize() WatchRegionsRequestPathSelectorPageSize {
	return WatchRegionsRequestPathSelectorPageSize{}
}
func (WatchRegionsRequestFieldPathBuilder) PageToken() WatchRegionsRequestPathSelectorPageToken {
	return WatchRegionsRequestPathSelectorPageToken{}
}
func (WatchRegionsRequestFieldPathBuilder) OrderBy() WatchRegionsRequestPathSelectorOrderBy {
	return WatchRegionsRequestPathSelectorOrderBy{}
}
func (WatchRegionsRequestFieldPathBuilder) ResumeToken() WatchRegionsRequestPathSelectorResumeToken {
	return WatchRegionsRequestPathSelectorResumeToken{}
}
func (WatchRegionsRequestFieldPathBuilder) Filter() WatchRegionsRequestPathSelectorFilter {
	return WatchRegionsRequestPathSelectorFilter{}
}
func (WatchRegionsRequestFieldPathBuilder) FieldMask() WatchRegionsRequestPathSelectorFieldMask {
	return WatchRegionsRequestPathSelectorFieldMask{}
}
func (WatchRegionsRequestFieldPathBuilder) View() WatchRegionsRequestPathSelectorView {
	return WatchRegionsRequestPathSelectorView{}
}
func (WatchRegionsRequestFieldPathBuilder) MaxChunkSize() WatchRegionsRequestPathSelectorMaxChunkSize {
	return WatchRegionsRequestPathSelectorMaxChunkSize{}
}

type WatchRegionsRequestPathSelectorType struct{}

func (WatchRegionsRequestPathSelectorType) FieldPath() *WatchRegionsRequest_FieldTerminalPath {
	return &WatchRegionsRequest_FieldTerminalPath{selector: WatchRegionsRequest_FieldPathSelectorType}
}

func (s WatchRegionsRequestPathSelectorType) WithValue(value watch_type.WatchType) *WatchRegionsRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*WatchRegionsRequest_FieldTerminalPathValue)
}

func (s WatchRegionsRequestPathSelectorType) WithArrayOfValues(values []watch_type.WatchType) *WatchRegionsRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*WatchRegionsRequest_FieldTerminalPathArrayOfValues)
}

type WatchRegionsRequestPathSelectorPageSize struct{}

func (WatchRegionsRequestPathSelectorPageSize) FieldPath() *WatchRegionsRequest_FieldTerminalPath {
	return &WatchRegionsRequest_FieldTerminalPath{selector: WatchRegionsRequest_FieldPathSelectorPageSize}
}

func (s WatchRegionsRequestPathSelectorPageSize) WithValue(value int32) *WatchRegionsRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*WatchRegionsRequest_FieldTerminalPathValue)
}

func (s WatchRegionsRequestPathSelectorPageSize) WithArrayOfValues(values []int32) *WatchRegionsRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*WatchRegionsRequest_FieldTerminalPathArrayOfValues)
}

type WatchRegionsRequestPathSelectorPageToken struct{}

func (WatchRegionsRequestPathSelectorPageToken) FieldPath() *WatchRegionsRequest_FieldTerminalPath {
	return &WatchRegionsRequest_FieldTerminalPath{selector: WatchRegionsRequest_FieldPathSelectorPageToken}
}

func (s WatchRegionsRequestPathSelectorPageToken) WithValue(value *region.PagerCursor) *WatchRegionsRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*WatchRegionsRequest_FieldTerminalPathValue)
}

func (s WatchRegionsRequestPathSelectorPageToken) WithArrayOfValues(values []*region.PagerCursor) *WatchRegionsRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*WatchRegionsRequest_FieldTerminalPathArrayOfValues)
}

type WatchRegionsRequestPathSelectorOrderBy struct{}

func (WatchRegionsRequestPathSelectorOrderBy) FieldPath() *WatchRegionsRequest_FieldTerminalPath {
	return &WatchRegionsRequest_FieldTerminalPath{selector: WatchRegionsRequest_FieldPathSelectorOrderBy}
}

func (s WatchRegionsRequestPathSelectorOrderBy) WithValue(value *region.OrderBy) *WatchRegionsRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*WatchRegionsRequest_FieldTerminalPathValue)
}

func (s WatchRegionsRequestPathSelectorOrderBy) WithArrayOfValues(values []*region.OrderBy) *WatchRegionsRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*WatchRegionsRequest_FieldTerminalPathArrayOfValues)
}

type WatchRegionsRequestPathSelectorResumeToken struct{}

func (WatchRegionsRequestPathSelectorResumeToken) FieldPath() *WatchRegionsRequest_FieldTerminalPath {
	return &WatchRegionsRequest_FieldTerminalPath{selector: WatchRegionsRequest_FieldPathSelectorResumeToken}
}

func (s WatchRegionsRequestPathSelectorResumeToken) WithValue(value string) *WatchRegionsRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*WatchRegionsRequest_FieldTerminalPathValue)
}

func (s WatchRegionsRequestPathSelectorResumeToken) WithArrayOfValues(values []string) *WatchRegionsRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*WatchRegionsRequest_FieldTerminalPathArrayOfValues)
}

type WatchRegionsRequestPathSelectorFilter struct{}

func (WatchRegionsRequestPathSelectorFilter) FieldPath() *WatchRegionsRequest_FieldTerminalPath {
	return &WatchRegionsRequest_FieldTerminalPath{selector: WatchRegionsRequest_FieldPathSelectorFilter}
}

func (s WatchRegionsRequestPathSelectorFilter) WithValue(value *region.Filter) *WatchRegionsRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*WatchRegionsRequest_FieldTerminalPathValue)
}

func (s WatchRegionsRequestPathSelectorFilter) WithArrayOfValues(values []*region.Filter) *WatchRegionsRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*WatchRegionsRequest_FieldTerminalPathArrayOfValues)
}

type WatchRegionsRequestPathSelectorFieldMask struct{}

func (WatchRegionsRequestPathSelectorFieldMask) FieldPath() *WatchRegionsRequest_FieldTerminalPath {
	return &WatchRegionsRequest_FieldTerminalPath{selector: WatchRegionsRequest_FieldPathSelectorFieldMask}
}

func (s WatchRegionsRequestPathSelectorFieldMask) WithValue(value *region.Region_FieldMask) *WatchRegionsRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*WatchRegionsRequest_FieldTerminalPathValue)
}

func (s WatchRegionsRequestPathSelectorFieldMask) WithArrayOfValues(values []*region.Region_FieldMask) *WatchRegionsRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*WatchRegionsRequest_FieldTerminalPathArrayOfValues)
}

type WatchRegionsRequestPathSelectorView struct{}

func (WatchRegionsRequestPathSelectorView) FieldPath() *WatchRegionsRequest_FieldTerminalPath {
	return &WatchRegionsRequest_FieldTerminalPath{selector: WatchRegionsRequest_FieldPathSelectorView}
}

func (s WatchRegionsRequestPathSelectorView) WithValue(value view.View) *WatchRegionsRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*WatchRegionsRequest_FieldTerminalPathValue)
}

func (s WatchRegionsRequestPathSelectorView) WithArrayOfValues(values []view.View) *WatchRegionsRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*WatchRegionsRequest_FieldTerminalPathArrayOfValues)
}

type WatchRegionsRequestPathSelectorMaxChunkSize struct{}

func (WatchRegionsRequestPathSelectorMaxChunkSize) FieldPath() *WatchRegionsRequest_FieldTerminalPath {
	return &WatchRegionsRequest_FieldTerminalPath{selector: WatchRegionsRequest_FieldPathSelectorMaxChunkSize}
}

func (s WatchRegionsRequestPathSelectorMaxChunkSize) WithValue(value int32) *WatchRegionsRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*WatchRegionsRequest_FieldTerminalPathValue)
}

func (s WatchRegionsRequestPathSelectorMaxChunkSize) WithArrayOfValues(values []int32) *WatchRegionsRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*WatchRegionsRequest_FieldTerminalPathArrayOfValues)
}

type WatchRegionsResponseFieldPathBuilder struct{}

func NewWatchRegionsResponseFieldPathBuilder() WatchRegionsResponseFieldPathBuilder {
	return WatchRegionsResponseFieldPathBuilder{}
}
func (WatchRegionsResponseFieldPathBuilder) RegionChanges() WatchRegionsResponsePathSelectorRegionChanges {
	return WatchRegionsResponsePathSelectorRegionChanges{}
}
func (WatchRegionsResponseFieldPathBuilder) IsCurrent() WatchRegionsResponsePathSelectorIsCurrent {
	return WatchRegionsResponsePathSelectorIsCurrent{}
}
func (WatchRegionsResponseFieldPathBuilder) PageTokenChange() WatchRegionsResponsePathSelectorPageTokenChange {
	return WatchRegionsResponsePathSelectorPageTokenChange{}
}
func (WatchRegionsResponseFieldPathBuilder) ResumeToken() WatchRegionsResponsePathSelectorResumeToken {
	return WatchRegionsResponsePathSelectorResumeToken{}
}
func (WatchRegionsResponseFieldPathBuilder) SnapshotSize() WatchRegionsResponsePathSelectorSnapshotSize {
	return WatchRegionsResponsePathSelectorSnapshotSize{}
}
func (WatchRegionsResponseFieldPathBuilder) IsSoftReset() WatchRegionsResponsePathSelectorIsSoftReset {
	return WatchRegionsResponsePathSelectorIsSoftReset{}
}
func (WatchRegionsResponseFieldPathBuilder) IsHardReset() WatchRegionsResponsePathSelectorIsHardReset {
	return WatchRegionsResponsePathSelectorIsHardReset{}
}

type WatchRegionsResponsePathSelectorRegionChanges struct{}

func (WatchRegionsResponsePathSelectorRegionChanges) FieldPath() *WatchRegionsResponse_FieldTerminalPath {
	return &WatchRegionsResponse_FieldTerminalPath{selector: WatchRegionsResponse_FieldPathSelectorRegionChanges}
}

func (s WatchRegionsResponsePathSelectorRegionChanges) WithValue(value []*region.RegionChange) *WatchRegionsResponse_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*WatchRegionsResponse_FieldTerminalPathValue)
}

func (s WatchRegionsResponsePathSelectorRegionChanges) WithArrayOfValues(values [][]*region.RegionChange) *WatchRegionsResponse_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*WatchRegionsResponse_FieldTerminalPathArrayOfValues)
}

func (s WatchRegionsResponsePathSelectorRegionChanges) WithItemValue(value *region.RegionChange) *WatchRegionsResponse_FieldTerminalPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*WatchRegionsResponse_FieldTerminalPathArrayItemValue)
}

type WatchRegionsResponsePathSelectorIsCurrent struct{}

func (WatchRegionsResponsePathSelectorIsCurrent) FieldPath() *WatchRegionsResponse_FieldTerminalPath {
	return &WatchRegionsResponse_FieldTerminalPath{selector: WatchRegionsResponse_FieldPathSelectorIsCurrent}
}

func (s WatchRegionsResponsePathSelectorIsCurrent) WithValue(value bool) *WatchRegionsResponse_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*WatchRegionsResponse_FieldTerminalPathValue)
}

func (s WatchRegionsResponsePathSelectorIsCurrent) WithArrayOfValues(values []bool) *WatchRegionsResponse_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*WatchRegionsResponse_FieldTerminalPathArrayOfValues)
}

type WatchRegionsResponsePathSelectorPageTokenChange struct{}

func (WatchRegionsResponsePathSelectorPageTokenChange) FieldPath() *WatchRegionsResponse_FieldTerminalPath {
	return &WatchRegionsResponse_FieldTerminalPath{selector: WatchRegionsResponse_FieldPathSelectorPageTokenChange}
}

func (s WatchRegionsResponsePathSelectorPageTokenChange) WithValue(value *WatchRegionsResponse_PageTokenChange) *WatchRegionsResponse_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*WatchRegionsResponse_FieldTerminalPathValue)
}

func (s WatchRegionsResponsePathSelectorPageTokenChange) WithArrayOfValues(values []*WatchRegionsResponse_PageTokenChange) *WatchRegionsResponse_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*WatchRegionsResponse_FieldTerminalPathArrayOfValues)
}

func (WatchRegionsResponsePathSelectorPageTokenChange) WithSubPath(subPath WatchRegionsResponsePageTokenChange_FieldPath) *WatchRegionsResponse_FieldSubPath {
	return &WatchRegionsResponse_FieldSubPath{selector: WatchRegionsResponse_FieldPathSelectorPageTokenChange, subPath: subPath}
}

func (s WatchRegionsResponsePathSelectorPageTokenChange) WithSubValue(subPathValue WatchRegionsResponsePageTokenChange_FieldPathValue) *WatchRegionsResponse_FieldSubPathValue {
	return &WatchRegionsResponse_FieldSubPathValue{WatchRegionsResponse_FieldPath: s.WithSubPath(subPathValue), subPathValue: subPathValue}
}

func (s WatchRegionsResponsePathSelectorPageTokenChange) WithSubArrayOfValues(subPathArrayOfValues WatchRegionsResponsePageTokenChange_FieldPathArrayOfValues) *WatchRegionsResponse_FieldSubPathArrayOfValues {
	return &WatchRegionsResponse_FieldSubPathArrayOfValues{WatchRegionsResponse_FieldPath: s.WithSubPath(subPathArrayOfValues), subPathArrayOfValues: subPathArrayOfValues}
}

func (s WatchRegionsResponsePathSelectorPageTokenChange) WithSubArrayItemValue(subPathArrayItemValue WatchRegionsResponsePageTokenChange_FieldPathArrayItemValue) *WatchRegionsResponse_FieldSubPathArrayItemValue {
	return &WatchRegionsResponse_FieldSubPathArrayItemValue{WatchRegionsResponse_FieldPath: s.WithSubPath(subPathArrayItemValue), subPathItemValue: subPathArrayItemValue}
}

func (WatchRegionsResponsePathSelectorPageTokenChange) PrevPageToken() WatchRegionsResponsePathSelectorPageTokenChangePrevPageToken {
	return WatchRegionsResponsePathSelectorPageTokenChangePrevPageToken{}
}

func (WatchRegionsResponsePathSelectorPageTokenChange) NextPageToken() WatchRegionsResponsePathSelectorPageTokenChangeNextPageToken {
	return WatchRegionsResponsePathSelectorPageTokenChangeNextPageToken{}
}

type WatchRegionsResponsePathSelectorPageTokenChangePrevPageToken struct{}

func (WatchRegionsResponsePathSelectorPageTokenChangePrevPageToken) FieldPath() *WatchRegionsResponse_FieldSubPath {
	return &WatchRegionsResponse_FieldSubPath{
		selector: WatchRegionsResponse_FieldPathSelectorPageTokenChange,
		subPath:  NewWatchRegionsResponsePageTokenChangeFieldPathBuilder().PrevPageToken().FieldPath(),
	}
}

func (s WatchRegionsResponsePathSelectorPageTokenChangePrevPageToken) WithValue(value *region.PagerCursor) *WatchRegionsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*WatchRegionsResponse_FieldSubPathValue)
}

func (s WatchRegionsResponsePathSelectorPageTokenChangePrevPageToken) WithArrayOfValues(values []*region.PagerCursor) *WatchRegionsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*WatchRegionsResponse_FieldSubPathArrayOfValues)
}

type WatchRegionsResponsePathSelectorPageTokenChangeNextPageToken struct{}

func (WatchRegionsResponsePathSelectorPageTokenChangeNextPageToken) FieldPath() *WatchRegionsResponse_FieldSubPath {
	return &WatchRegionsResponse_FieldSubPath{
		selector: WatchRegionsResponse_FieldPathSelectorPageTokenChange,
		subPath:  NewWatchRegionsResponsePageTokenChangeFieldPathBuilder().NextPageToken().FieldPath(),
	}
}

func (s WatchRegionsResponsePathSelectorPageTokenChangeNextPageToken) WithValue(value *region.PagerCursor) *WatchRegionsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*WatchRegionsResponse_FieldSubPathValue)
}

func (s WatchRegionsResponsePathSelectorPageTokenChangeNextPageToken) WithArrayOfValues(values []*region.PagerCursor) *WatchRegionsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*WatchRegionsResponse_FieldSubPathArrayOfValues)
}

type WatchRegionsResponsePathSelectorResumeToken struct{}

func (WatchRegionsResponsePathSelectorResumeToken) FieldPath() *WatchRegionsResponse_FieldTerminalPath {
	return &WatchRegionsResponse_FieldTerminalPath{selector: WatchRegionsResponse_FieldPathSelectorResumeToken}
}

func (s WatchRegionsResponsePathSelectorResumeToken) WithValue(value string) *WatchRegionsResponse_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*WatchRegionsResponse_FieldTerminalPathValue)
}

func (s WatchRegionsResponsePathSelectorResumeToken) WithArrayOfValues(values []string) *WatchRegionsResponse_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*WatchRegionsResponse_FieldTerminalPathArrayOfValues)
}

type WatchRegionsResponsePathSelectorSnapshotSize struct{}

func (WatchRegionsResponsePathSelectorSnapshotSize) FieldPath() *WatchRegionsResponse_FieldTerminalPath {
	return &WatchRegionsResponse_FieldTerminalPath{selector: WatchRegionsResponse_FieldPathSelectorSnapshotSize}
}

func (s WatchRegionsResponsePathSelectorSnapshotSize) WithValue(value int64) *WatchRegionsResponse_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*WatchRegionsResponse_FieldTerminalPathValue)
}

func (s WatchRegionsResponsePathSelectorSnapshotSize) WithArrayOfValues(values []int64) *WatchRegionsResponse_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*WatchRegionsResponse_FieldTerminalPathArrayOfValues)
}

type WatchRegionsResponsePathSelectorIsSoftReset struct{}

func (WatchRegionsResponsePathSelectorIsSoftReset) FieldPath() *WatchRegionsResponse_FieldTerminalPath {
	return &WatchRegionsResponse_FieldTerminalPath{selector: WatchRegionsResponse_FieldPathSelectorIsSoftReset}
}

func (s WatchRegionsResponsePathSelectorIsSoftReset) WithValue(value bool) *WatchRegionsResponse_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*WatchRegionsResponse_FieldTerminalPathValue)
}

func (s WatchRegionsResponsePathSelectorIsSoftReset) WithArrayOfValues(values []bool) *WatchRegionsResponse_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*WatchRegionsResponse_FieldTerminalPathArrayOfValues)
}

type WatchRegionsResponsePathSelectorIsHardReset struct{}

func (WatchRegionsResponsePathSelectorIsHardReset) FieldPath() *WatchRegionsResponse_FieldTerminalPath {
	return &WatchRegionsResponse_FieldTerminalPath{selector: WatchRegionsResponse_FieldPathSelectorIsHardReset}
}

func (s WatchRegionsResponsePathSelectorIsHardReset) WithValue(value bool) *WatchRegionsResponse_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*WatchRegionsResponse_FieldTerminalPathValue)
}

func (s WatchRegionsResponsePathSelectorIsHardReset) WithArrayOfValues(values []bool) *WatchRegionsResponse_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*WatchRegionsResponse_FieldTerminalPathArrayOfValues)
}

type WatchRegionsResponsePageTokenChangeFieldPathBuilder struct{}

func NewWatchRegionsResponsePageTokenChangeFieldPathBuilder() WatchRegionsResponsePageTokenChangeFieldPathBuilder {
	return WatchRegionsResponsePageTokenChangeFieldPathBuilder{}
}
func (WatchRegionsResponsePageTokenChangeFieldPathBuilder) PrevPageToken() WatchRegionsResponse_PageTokenChangePathSelectorPrevPageToken {
	return WatchRegionsResponse_PageTokenChangePathSelectorPrevPageToken{}
}
func (WatchRegionsResponsePageTokenChangeFieldPathBuilder) NextPageToken() WatchRegionsResponse_PageTokenChangePathSelectorNextPageToken {
	return WatchRegionsResponse_PageTokenChangePathSelectorNextPageToken{}
}

type WatchRegionsResponse_PageTokenChangePathSelectorPrevPageToken struct{}

func (WatchRegionsResponse_PageTokenChangePathSelectorPrevPageToken) FieldPath() *WatchRegionsResponsePageTokenChange_FieldTerminalPath {
	return &WatchRegionsResponsePageTokenChange_FieldTerminalPath{selector: WatchRegionsResponsePageTokenChange_FieldPathSelectorPrevPageToken}
}

func (s WatchRegionsResponse_PageTokenChangePathSelectorPrevPageToken) WithValue(value *region.PagerCursor) *WatchRegionsResponsePageTokenChange_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*WatchRegionsResponsePageTokenChange_FieldTerminalPathValue)
}

func (s WatchRegionsResponse_PageTokenChangePathSelectorPrevPageToken) WithArrayOfValues(values []*region.PagerCursor) *WatchRegionsResponsePageTokenChange_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*WatchRegionsResponsePageTokenChange_FieldTerminalPathArrayOfValues)
}

type WatchRegionsResponse_PageTokenChangePathSelectorNextPageToken struct{}

func (WatchRegionsResponse_PageTokenChangePathSelectorNextPageToken) FieldPath() *WatchRegionsResponsePageTokenChange_FieldTerminalPath {
	return &WatchRegionsResponsePageTokenChange_FieldTerminalPath{selector: WatchRegionsResponsePageTokenChange_FieldPathSelectorNextPageToken}
}

func (s WatchRegionsResponse_PageTokenChangePathSelectorNextPageToken) WithValue(value *region.PagerCursor) *WatchRegionsResponsePageTokenChange_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*WatchRegionsResponsePageTokenChange_FieldTerminalPathValue)
}

func (s WatchRegionsResponse_PageTokenChangePathSelectorNextPageToken) WithArrayOfValues(values []*region.PagerCursor) *WatchRegionsResponsePageTokenChange_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*WatchRegionsResponsePageTokenChange_FieldTerminalPathArrayOfValues)
}

type CreateRegionRequestFieldPathBuilder struct{}

func NewCreateRegionRequestFieldPathBuilder() CreateRegionRequestFieldPathBuilder {
	return CreateRegionRequestFieldPathBuilder{}
}
func (CreateRegionRequestFieldPathBuilder) Region() CreateRegionRequestPathSelectorRegion {
	return CreateRegionRequestPathSelectorRegion{}
}

type CreateRegionRequestPathSelectorRegion struct{}

func (CreateRegionRequestPathSelectorRegion) FieldPath() *CreateRegionRequest_FieldTerminalPath {
	return &CreateRegionRequest_FieldTerminalPath{selector: CreateRegionRequest_FieldPathSelectorRegion}
}

func (s CreateRegionRequestPathSelectorRegion) WithValue(value *region.Region) *CreateRegionRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*CreateRegionRequest_FieldTerminalPathValue)
}

func (s CreateRegionRequestPathSelectorRegion) WithArrayOfValues(values []*region.Region) *CreateRegionRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CreateRegionRequest_FieldTerminalPathArrayOfValues)
}

func (CreateRegionRequestPathSelectorRegion) WithSubPath(subPath region.Region_FieldPath) *CreateRegionRequest_FieldSubPath {
	return &CreateRegionRequest_FieldSubPath{selector: CreateRegionRequest_FieldPathSelectorRegion, subPath: subPath}
}

func (s CreateRegionRequestPathSelectorRegion) WithSubValue(subPathValue region.Region_FieldPathValue) *CreateRegionRequest_FieldSubPathValue {
	return &CreateRegionRequest_FieldSubPathValue{CreateRegionRequest_FieldPath: s.WithSubPath(subPathValue), subPathValue: subPathValue}
}

func (s CreateRegionRequestPathSelectorRegion) WithSubArrayOfValues(subPathArrayOfValues region.Region_FieldPathArrayOfValues) *CreateRegionRequest_FieldSubPathArrayOfValues {
	return &CreateRegionRequest_FieldSubPathArrayOfValues{CreateRegionRequest_FieldPath: s.WithSubPath(subPathArrayOfValues), subPathArrayOfValues: subPathArrayOfValues}
}

func (s CreateRegionRequestPathSelectorRegion) WithSubArrayItemValue(subPathArrayItemValue region.Region_FieldPathArrayItemValue) *CreateRegionRequest_FieldSubPathArrayItemValue {
	return &CreateRegionRequest_FieldSubPathArrayItemValue{CreateRegionRequest_FieldPath: s.WithSubPath(subPathArrayItemValue), subPathItemValue: subPathArrayItemValue}
}

func (CreateRegionRequestPathSelectorRegion) Name() CreateRegionRequestPathSelectorRegionName {
	return CreateRegionRequestPathSelectorRegionName{}
}

func (CreateRegionRequestPathSelectorRegion) Title() CreateRegionRequestPathSelectorRegionTitle {
	return CreateRegionRequestPathSelectorRegionTitle{}
}

func (CreateRegionRequestPathSelectorRegion) Domain() CreateRegionRequestPathSelectorRegionDomain {
	return CreateRegionRequestPathSelectorRegionDomain{}
}

func (CreateRegionRequestPathSelectorRegion) Location() CreateRegionRequestPathSelectorRegionLocation {
	return CreateRegionRequestPathSelectorRegionLocation{}
}

func (CreateRegionRequestPathSelectorRegion) IsDefault() CreateRegionRequestPathSelectorRegionIsDefault {
	return CreateRegionRequestPathSelectorRegionIsDefault{}
}

func (CreateRegionRequestPathSelectorRegion) ConnectivityScores() CreateRegionRequestPathSelectorRegionConnectivityScores {
	return CreateRegionRequestPathSelectorRegionConnectivityScores{}
}

func (CreateRegionRequestPathSelectorRegion) Metadata() CreateRegionRequestPathSelectorRegionMetadata {
	return CreateRegionRequestPathSelectorRegionMetadata{}
}

type CreateRegionRequestPathSelectorRegionName struct{}

func (CreateRegionRequestPathSelectorRegionName) FieldPath() *CreateRegionRequest_FieldSubPath {
	return &CreateRegionRequest_FieldSubPath{
		selector: CreateRegionRequest_FieldPathSelectorRegion,
		subPath:  region.NewRegionFieldPathBuilder().Name().FieldPath(),
	}
}

func (s CreateRegionRequestPathSelectorRegionName) WithValue(value *region.Name) *CreateRegionRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*CreateRegionRequest_FieldSubPathValue)
}

func (s CreateRegionRequestPathSelectorRegionName) WithArrayOfValues(values []*region.Name) *CreateRegionRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CreateRegionRequest_FieldSubPathArrayOfValues)
}

type CreateRegionRequestPathSelectorRegionTitle struct{}

func (CreateRegionRequestPathSelectorRegionTitle) FieldPath() *CreateRegionRequest_FieldSubPath {
	return &CreateRegionRequest_FieldSubPath{
		selector: CreateRegionRequest_FieldPathSelectorRegion,
		subPath:  region.NewRegionFieldPathBuilder().Title().FieldPath(),
	}
}

func (s CreateRegionRequestPathSelectorRegionTitle) WithValue(value string) *CreateRegionRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*CreateRegionRequest_FieldSubPathValue)
}

func (s CreateRegionRequestPathSelectorRegionTitle) WithArrayOfValues(values []string) *CreateRegionRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CreateRegionRequest_FieldSubPathArrayOfValues)
}

type CreateRegionRequestPathSelectorRegionDomain struct{}

func (CreateRegionRequestPathSelectorRegionDomain) FieldPath() *CreateRegionRequest_FieldSubPath {
	return &CreateRegionRequest_FieldSubPath{
		selector: CreateRegionRequest_FieldPathSelectorRegion,
		subPath:  region.NewRegionFieldPathBuilder().Domain().FieldPath(),
	}
}

func (s CreateRegionRequestPathSelectorRegionDomain) WithValue(value string) *CreateRegionRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*CreateRegionRequest_FieldSubPathValue)
}

func (s CreateRegionRequestPathSelectorRegionDomain) WithArrayOfValues(values []string) *CreateRegionRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CreateRegionRequest_FieldSubPathArrayOfValues)
}

type CreateRegionRequestPathSelectorRegionLocation struct{}

func (CreateRegionRequestPathSelectorRegionLocation) FieldPath() *CreateRegionRequest_FieldSubPath {
	return &CreateRegionRequest_FieldSubPath{
		selector: CreateRegionRequest_FieldPathSelectorRegion,
		subPath:  region.NewRegionFieldPathBuilder().Location().FieldPath(),
	}
}

func (s CreateRegionRequestPathSelectorRegionLocation) WithValue(value *region.Region_RegionLocation) *CreateRegionRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*CreateRegionRequest_FieldSubPathValue)
}

func (s CreateRegionRequestPathSelectorRegionLocation) WithArrayOfValues(values []*region.Region_RegionLocation) *CreateRegionRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CreateRegionRequest_FieldSubPathArrayOfValues)
}

func (CreateRegionRequestPathSelectorRegionLocation) Continent() CreateRegionRequestPathSelectorRegionLocationContinent {
	return CreateRegionRequestPathSelectorRegionLocationContinent{}
}

func (CreateRegionRequestPathSelectorRegionLocation) Country() CreateRegionRequestPathSelectorRegionLocationCountry {
	return CreateRegionRequestPathSelectorRegionLocationCountry{}
}

func (CreateRegionRequestPathSelectorRegionLocation) Agglomeration() CreateRegionRequestPathSelectorRegionLocationAgglomeration {
	return CreateRegionRequestPathSelectorRegionLocationAgglomeration{}
}

func (CreateRegionRequestPathSelectorRegionLocation) City() CreateRegionRequestPathSelectorRegionLocationCity {
	return CreateRegionRequestPathSelectorRegionLocationCity{}
}

func (CreateRegionRequestPathSelectorRegionLocation) Cloud() CreateRegionRequestPathSelectorRegionLocationCloud {
	return CreateRegionRequestPathSelectorRegionLocationCloud{}
}

type CreateRegionRequestPathSelectorRegionLocationContinent struct{}

func (CreateRegionRequestPathSelectorRegionLocationContinent) FieldPath() *CreateRegionRequest_FieldSubPath {
	return &CreateRegionRequest_FieldSubPath{
		selector: CreateRegionRequest_FieldPathSelectorRegion,
		subPath:  region.NewRegionFieldPathBuilder().Location().Continent().FieldPath(),
	}
}

func (s CreateRegionRequestPathSelectorRegionLocationContinent) WithValue(value string) *CreateRegionRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*CreateRegionRequest_FieldSubPathValue)
}

func (s CreateRegionRequestPathSelectorRegionLocationContinent) WithArrayOfValues(values []string) *CreateRegionRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CreateRegionRequest_FieldSubPathArrayOfValues)
}

type CreateRegionRequestPathSelectorRegionLocationCountry struct{}

func (CreateRegionRequestPathSelectorRegionLocationCountry) FieldPath() *CreateRegionRequest_FieldSubPath {
	return &CreateRegionRequest_FieldSubPath{
		selector: CreateRegionRequest_FieldPathSelectorRegion,
		subPath:  region.NewRegionFieldPathBuilder().Location().Country().FieldPath(),
	}
}

func (s CreateRegionRequestPathSelectorRegionLocationCountry) WithValue(value string) *CreateRegionRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*CreateRegionRequest_FieldSubPathValue)
}

func (s CreateRegionRequestPathSelectorRegionLocationCountry) WithArrayOfValues(values []string) *CreateRegionRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CreateRegionRequest_FieldSubPathArrayOfValues)
}

type CreateRegionRequestPathSelectorRegionLocationAgglomeration struct{}

func (CreateRegionRequestPathSelectorRegionLocationAgglomeration) FieldPath() *CreateRegionRequest_FieldSubPath {
	return &CreateRegionRequest_FieldSubPath{
		selector: CreateRegionRequest_FieldPathSelectorRegion,
		subPath:  region.NewRegionFieldPathBuilder().Location().Agglomeration().FieldPath(),
	}
}

func (s CreateRegionRequestPathSelectorRegionLocationAgglomeration) WithValue(value string) *CreateRegionRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*CreateRegionRequest_FieldSubPathValue)
}

func (s CreateRegionRequestPathSelectorRegionLocationAgglomeration) WithArrayOfValues(values []string) *CreateRegionRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CreateRegionRequest_FieldSubPathArrayOfValues)
}

type CreateRegionRequestPathSelectorRegionLocationCity struct{}

func (CreateRegionRequestPathSelectorRegionLocationCity) FieldPath() *CreateRegionRequest_FieldSubPath {
	return &CreateRegionRequest_FieldSubPath{
		selector: CreateRegionRequest_FieldPathSelectorRegion,
		subPath:  region.NewRegionFieldPathBuilder().Location().City().FieldPath(),
	}
}

func (s CreateRegionRequestPathSelectorRegionLocationCity) WithValue(value string) *CreateRegionRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*CreateRegionRequest_FieldSubPathValue)
}

func (s CreateRegionRequestPathSelectorRegionLocationCity) WithArrayOfValues(values []string) *CreateRegionRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CreateRegionRequest_FieldSubPathArrayOfValues)
}

type CreateRegionRequestPathSelectorRegionLocationCloud struct{}

func (CreateRegionRequestPathSelectorRegionLocationCloud) FieldPath() *CreateRegionRequest_FieldSubPath {
	return &CreateRegionRequest_FieldSubPath{
		selector: CreateRegionRequest_FieldPathSelectorRegion,
		subPath:  region.NewRegionFieldPathBuilder().Location().Cloud().FieldPath(),
	}
}

func (s CreateRegionRequestPathSelectorRegionLocationCloud) WithValue(value string) *CreateRegionRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*CreateRegionRequest_FieldSubPathValue)
}

func (s CreateRegionRequestPathSelectorRegionLocationCloud) WithArrayOfValues(values []string) *CreateRegionRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CreateRegionRequest_FieldSubPathArrayOfValues)
}

type CreateRegionRequestPathSelectorRegionIsDefault struct{}

func (CreateRegionRequestPathSelectorRegionIsDefault) FieldPath() *CreateRegionRequest_FieldSubPath {
	return &CreateRegionRequest_FieldSubPath{
		selector: CreateRegionRequest_FieldPathSelectorRegion,
		subPath:  region.NewRegionFieldPathBuilder().IsDefault().FieldPath(),
	}
}

func (s CreateRegionRequestPathSelectorRegionIsDefault) WithValue(value bool) *CreateRegionRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*CreateRegionRequest_FieldSubPathValue)
}

func (s CreateRegionRequestPathSelectorRegionIsDefault) WithArrayOfValues(values []bool) *CreateRegionRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CreateRegionRequest_FieldSubPathArrayOfValues)
}

type CreateRegionRequestPathSelectorRegionConnectivityScores struct{}

func (CreateRegionRequestPathSelectorRegionConnectivityScores) FieldPath() *CreateRegionRequest_FieldSubPath {
	return &CreateRegionRequest_FieldSubPath{
		selector: CreateRegionRequest_FieldPathSelectorRegion,
		subPath:  region.NewRegionFieldPathBuilder().ConnectivityScores().FieldPath(),
	}
}

func (s CreateRegionRequestPathSelectorRegionConnectivityScores) WithValue(value []*region.Region_RegionConnectivityPreference) *CreateRegionRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*CreateRegionRequest_FieldSubPathValue)
}

func (s CreateRegionRequestPathSelectorRegionConnectivityScores) WithArrayOfValues(values [][]*region.Region_RegionConnectivityPreference) *CreateRegionRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CreateRegionRequest_FieldSubPathArrayOfValues)
}

func (s CreateRegionRequestPathSelectorRegionConnectivityScores) WithItemValue(value *region.Region_RegionConnectivityPreference) *CreateRegionRequest_FieldSubPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*CreateRegionRequest_FieldSubPathArrayItemValue)
}

func (CreateRegionRequestPathSelectorRegionConnectivityScores) Dest() CreateRegionRequestPathSelectorRegionConnectivityScoresDest {
	return CreateRegionRequestPathSelectorRegionConnectivityScoresDest{}
}

func (CreateRegionRequestPathSelectorRegionConnectivityScores) Score() CreateRegionRequestPathSelectorRegionConnectivityScoresScore {
	return CreateRegionRequestPathSelectorRegionConnectivityScoresScore{}
}

type CreateRegionRequestPathSelectorRegionConnectivityScoresDest struct{}

func (CreateRegionRequestPathSelectorRegionConnectivityScoresDest) FieldPath() *CreateRegionRequest_FieldSubPath {
	return &CreateRegionRequest_FieldSubPath{
		selector: CreateRegionRequest_FieldPathSelectorRegion,
		subPath:  region.NewRegionFieldPathBuilder().ConnectivityScores().Dest().FieldPath(),
	}
}

func (s CreateRegionRequestPathSelectorRegionConnectivityScoresDest) WithValue(value *region.Reference) *CreateRegionRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*CreateRegionRequest_FieldSubPathValue)
}

func (s CreateRegionRequestPathSelectorRegionConnectivityScoresDest) WithArrayOfValues(values []*region.Reference) *CreateRegionRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CreateRegionRequest_FieldSubPathArrayOfValues)
}

type CreateRegionRequestPathSelectorRegionConnectivityScoresScore struct{}

func (CreateRegionRequestPathSelectorRegionConnectivityScoresScore) FieldPath() *CreateRegionRequest_FieldSubPath {
	return &CreateRegionRequest_FieldSubPath{
		selector: CreateRegionRequest_FieldPathSelectorRegion,
		subPath:  region.NewRegionFieldPathBuilder().ConnectivityScores().Score().FieldPath(),
	}
}

func (s CreateRegionRequestPathSelectorRegionConnectivityScoresScore) WithValue(value int32) *CreateRegionRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*CreateRegionRequest_FieldSubPathValue)
}

func (s CreateRegionRequestPathSelectorRegionConnectivityScoresScore) WithArrayOfValues(values []int32) *CreateRegionRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CreateRegionRequest_FieldSubPathArrayOfValues)
}

type CreateRegionRequestPathSelectorRegionMetadata struct{}

func (CreateRegionRequestPathSelectorRegionMetadata) FieldPath() *CreateRegionRequest_FieldSubPath {
	return &CreateRegionRequest_FieldSubPath{
		selector: CreateRegionRequest_FieldPathSelectorRegion,
		subPath:  region.NewRegionFieldPathBuilder().Metadata().FieldPath(),
	}
}

func (s CreateRegionRequestPathSelectorRegionMetadata) WithValue(value *ntt_meta.Meta) *CreateRegionRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*CreateRegionRequest_FieldSubPathValue)
}

func (s CreateRegionRequestPathSelectorRegionMetadata) WithArrayOfValues(values []*ntt_meta.Meta) *CreateRegionRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CreateRegionRequest_FieldSubPathArrayOfValues)
}

func (CreateRegionRequestPathSelectorRegionMetadata) CreateTime() CreateRegionRequestPathSelectorRegionMetadataCreateTime {
	return CreateRegionRequestPathSelectorRegionMetadataCreateTime{}
}

func (CreateRegionRequestPathSelectorRegionMetadata) UpdateTime() CreateRegionRequestPathSelectorRegionMetadataUpdateTime {
	return CreateRegionRequestPathSelectorRegionMetadataUpdateTime{}
}

func (CreateRegionRequestPathSelectorRegionMetadata) Uuid() CreateRegionRequestPathSelectorRegionMetadataUuid {
	return CreateRegionRequestPathSelectorRegionMetadataUuid{}
}

func (CreateRegionRequestPathSelectorRegionMetadata) Tags() CreateRegionRequestPathSelectorRegionMetadataTags {
	return CreateRegionRequestPathSelectorRegionMetadataTags{}
}

func (CreateRegionRequestPathSelectorRegionMetadata) Labels() CreateRegionRequestPathSelectorRegionMetadataLabels {
	return CreateRegionRequestPathSelectorRegionMetadataLabels{}
}

func (CreateRegionRequestPathSelectorRegionMetadata) Annotations() CreateRegionRequestPathSelectorRegionMetadataAnnotations {
	return CreateRegionRequestPathSelectorRegionMetadataAnnotations{}
}

func (CreateRegionRequestPathSelectorRegionMetadata) Generation() CreateRegionRequestPathSelectorRegionMetadataGeneration {
	return CreateRegionRequestPathSelectorRegionMetadataGeneration{}
}

func (CreateRegionRequestPathSelectorRegionMetadata) ResourceVersion() CreateRegionRequestPathSelectorRegionMetadataResourceVersion {
	return CreateRegionRequestPathSelectorRegionMetadataResourceVersion{}
}

func (CreateRegionRequestPathSelectorRegionMetadata) OwnerReferences() CreateRegionRequestPathSelectorRegionMetadataOwnerReferences {
	return CreateRegionRequestPathSelectorRegionMetadataOwnerReferences{}
}

func (CreateRegionRequestPathSelectorRegionMetadata) Shards() CreateRegionRequestPathSelectorRegionMetadataShards {
	return CreateRegionRequestPathSelectorRegionMetadataShards{}
}

func (CreateRegionRequestPathSelectorRegionMetadata) Syncing() CreateRegionRequestPathSelectorRegionMetadataSyncing {
	return CreateRegionRequestPathSelectorRegionMetadataSyncing{}
}

type CreateRegionRequestPathSelectorRegionMetadataCreateTime struct{}

func (CreateRegionRequestPathSelectorRegionMetadataCreateTime) FieldPath() *CreateRegionRequest_FieldSubPath {
	return &CreateRegionRequest_FieldSubPath{
		selector: CreateRegionRequest_FieldPathSelectorRegion,
		subPath:  region.NewRegionFieldPathBuilder().Metadata().CreateTime().FieldPath(),
	}
}

func (s CreateRegionRequestPathSelectorRegionMetadataCreateTime) WithValue(value *timestamp.Timestamp) *CreateRegionRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*CreateRegionRequest_FieldSubPathValue)
}

func (s CreateRegionRequestPathSelectorRegionMetadataCreateTime) WithArrayOfValues(values []*timestamp.Timestamp) *CreateRegionRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CreateRegionRequest_FieldSubPathArrayOfValues)
}

type CreateRegionRequestPathSelectorRegionMetadataUpdateTime struct{}

func (CreateRegionRequestPathSelectorRegionMetadataUpdateTime) FieldPath() *CreateRegionRequest_FieldSubPath {
	return &CreateRegionRequest_FieldSubPath{
		selector: CreateRegionRequest_FieldPathSelectorRegion,
		subPath:  region.NewRegionFieldPathBuilder().Metadata().UpdateTime().FieldPath(),
	}
}

func (s CreateRegionRequestPathSelectorRegionMetadataUpdateTime) WithValue(value *timestamp.Timestamp) *CreateRegionRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*CreateRegionRequest_FieldSubPathValue)
}

func (s CreateRegionRequestPathSelectorRegionMetadataUpdateTime) WithArrayOfValues(values []*timestamp.Timestamp) *CreateRegionRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CreateRegionRequest_FieldSubPathArrayOfValues)
}

type CreateRegionRequestPathSelectorRegionMetadataUuid struct{}

func (CreateRegionRequestPathSelectorRegionMetadataUuid) FieldPath() *CreateRegionRequest_FieldSubPath {
	return &CreateRegionRequest_FieldSubPath{
		selector: CreateRegionRequest_FieldPathSelectorRegion,
		subPath:  region.NewRegionFieldPathBuilder().Metadata().Uuid().FieldPath(),
	}
}

func (s CreateRegionRequestPathSelectorRegionMetadataUuid) WithValue(value string) *CreateRegionRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*CreateRegionRequest_FieldSubPathValue)
}

func (s CreateRegionRequestPathSelectorRegionMetadataUuid) WithArrayOfValues(values []string) *CreateRegionRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CreateRegionRequest_FieldSubPathArrayOfValues)
}

type CreateRegionRequestPathSelectorRegionMetadataTags struct{}

func (CreateRegionRequestPathSelectorRegionMetadataTags) FieldPath() *CreateRegionRequest_FieldSubPath {
	return &CreateRegionRequest_FieldSubPath{
		selector: CreateRegionRequest_FieldPathSelectorRegion,
		subPath:  region.NewRegionFieldPathBuilder().Metadata().Tags().FieldPath(),
	}
}

func (s CreateRegionRequestPathSelectorRegionMetadataTags) WithValue(value []string) *CreateRegionRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*CreateRegionRequest_FieldSubPathValue)
}

func (s CreateRegionRequestPathSelectorRegionMetadataTags) WithArrayOfValues(values [][]string) *CreateRegionRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CreateRegionRequest_FieldSubPathArrayOfValues)
}

func (s CreateRegionRequestPathSelectorRegionMetadataTags) WithItemValue(value string) *CreateRegionRequest_FieldSubPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*CreateRegionRequest_FieldSubPathArrayItemValue)
}

type CreateRegionRequestPathSelectorRegionMetadataLabels struct{}

func (CreateRegionRequestPathSelectorRegionMetadataLabels) FieldPath() *CreateRegionRequest_FieldSubPath {
	return &CreateRegionRequest_FieldSubPath{
		selector: CreateRegionRequest_FieldPathSelectorRegion,
		subPath:  region.NewRegionFieldPathBuilder().Metadata().Labels().FieldPath(),
	}
}

func (s CreateRegionRequestPathSelectorRegionMetadataLabels) WithValue(value map[string]string) *CreateRegionRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*CreateRegionRequest_FieldSubPathValue)
}

func (s CreateRegionRequestPathSelectorRegionMetadataLabels) WithArrayOfValues(values []map[string]string) *CreateRegionRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CreateRegionRequest_FieldSubPathArrayOfValues)
}

func (CreateRegionRequestPathSelectorRegionMetadataLabels) WithKey(key string) CreateRegionRequestMapPathSelectorRegionMetadataLabels {
	return CreateRegionRequestMapPathSelectorRegionMetadataLabels{key: key}
}

type CreateRegionRequestMapPathSelectorRegionMetadataLabels struct {
	key string
}

func (s CreateRegionRequestMapPathSelectorRegionMetadataLabels) FieldPath() *CreateRegionRequest_FieldSubPath {
	return &CreateRegionRequest_FieldSubPath{
		selector: CreateRegionRequest_FieldPathSelectorRegion,
		subPath:  region.NewRegionFieldPathBuilder().Metadata().Labels().WithKey(s.key).FieldPath(),
	}
}

func (s CreateRegionRequestMapPathSelectorRegionMetadataLabels) WithValue(value string) *CreateRegionRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*CreateRegionRequest_FieldSubPathValue)
}

func (s CreateRegionRequestMapPathSelectorRegionMetadataLabels) WithArrayOfValues(values []string) *CreateRegionRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CreateRegionRequest_FieldSubPathArrayOfValues)
}

type CreateRegionRequestPathSelectorRegionMetadataAnnotations struct{}

func (CreateRegionRequestPathSelectorRegionMetadataAnnotations) FieldPath() *CreateRegionRequest_FieldSubPath {
	return &CreateRegionRequest_FieldSubPath{
		selector: CreateRegionRequest_FieldPathSelectorRegion,
		subPath:  region.NewRegionFieldPathBuilder().Metadata().Annotations().FieldPath(),
	}
}

func (s CreateRegionRequestPathSelectorRegionMetadataAnnotations) WithValue(value map[string]string) *CreateRegionRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*CreateRegionRequest_FieldSubPathValue)
}

func (s CreateRegionRequestPathSelectorRegionMetadataAnnotations) WithArrayOfValues(values []map[string]string) *CreateRegionRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CreateRegionRequest_FieldSubPathArrayOfValues)
}

func (CreateRegionRequestPathSelectorRegionMetadataAnnotations) WithKey(key string) CreateRegionRequestMapPathSelectorRegionMetadataAnnotations {
	return CreateRegionRequestMapPathSelectorRegionMetadataAnnotations{key: key}
}

type CreateRegionRequestMapPathSelectorRegionMetadataAnnotations struct {
	key string
}

func (s CreateRegionRequestMapPathSelectorRegionMetadataAnnotations) FieldPath() *CreateRegionRequest_FieldSubPath {
	return &CreateRegionRequest_FieldSubPath{
		selector: CreateRegionRequest_FieldPathSelectorRegion,
		subPath:  region.NewRegionFieldPathBuilder().Metadata().Annotations().WithKey(s.key).FieldPath(),
	}
}

func (s CreateRegionRequestMapPathSelectorRegionMetadataAnnotations) WithValue(value string) *CreateRegionRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*CreateRegionRequest_FieldSubPathValue)
}

func (s CreateRegionRequestMapPathSelectorRegionMetadataAnnotations) WithArrayOfValues(values []string) *CreateRegionRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CreateRegionRequest_FieldSubPathArrayOfValues)
}

type CreateRegionRequestPathSelectorRegionMetadataGeneration struct{}

func (CreateRegionRequestPathSelectorRegionMetadataGeneration) FieldPath() *CreateRegionRequest_FieldSubPath {
	return &CreateRegionRequest_FieldSubPath{
		selector: CreateRegionRequest_FieldPathSelectorRegion,
		subPath:  region.NewRegionFieldPathBuilder().Metadata().Generation().FieldPath(),
	}
}

func (s CreateRegionRequestPathSelectorRegionMetadataGeneration) WithValue(value int64) *CreateRegionRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*CreateRegionRequest_FieldSubPathValue)
}

func (s CreateRegionRequestPathSelectorRegionMetadataGeneration) WithArrayOfValues(values []int64) *CreateRegionRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CreateRegionRequest_FieldSubPathArrayOfValues)
}

type CreateRegionRequestPathSelectorRegionMetadataResourceVersion struct{}

func (CreateRegionRequestPathSelectorRegionMetadataResourceVersion) FieldPath() *CreateRegionRequest_FieldSubPath {
	return &CreateRegionRequest_FieldSubPath{
		selector: CreateRegionRequest_FieldPathSelectorRegion,
		subPath:  region.NewRegionFieldPathBuilder().Metadata().ResourceVersion().FieldPath(),
	}
}

func (s CreateRegionRequestPathSelectorRegionMetadataResourceVersion) WithValue(value string) *CreateRegionRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*CreateRegionRequest_FieldSubPathValue)
}

func (s CreateRegionRequestPathSelectorRegionMetadataResourceVersion) WithArrayOfValues(values []string) *CreateRegionRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CreateRegionRequest_FieldSubPathArrayOfValues)
}

type CreateRegionRequestPathSelectorRegionMetadataOwnerReferences struct{}

func (CreateRegionRequestPathSelectorRegionMetadataOwnerReferences) FieldPath() *CreateRegionRequest_FieldSubPath {
	return &CreateRegionRequest_FieldSubPath{
		selector: CreateRegionRequest_FieldPathSelectorRegion,
		subPath:  region.NewRegionFieldPathBuilder().Metadata().OwnerReferences().FieldPath(),
	}
}

func (s CreateRegionRequestPathSelectorRegionMetadataOwnerReferences) WithValue(value []*ntt_meta.OwnerReference) *CreateRegionRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*CreateRegionRequest_FieldSubPathValue)
}

func (s CreateRegionRequestPathSelectorRegionMetadataOwnerReferences) WithArrayOfValues(values [][]*ntt_meta.OwnerReference) *CreateRegionRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CreateRegionRequest_FieldSubPathArrayOfValues)
}

func (s CreateRegionRequestPathSelectorRegionMetadataOwnerReferences) WithItemValue(value *ntt_meta.OwnerReference) *CreateRegionRequest_FieldSubPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*CreateRegionRequest_FieldSubPathArrayItemValue)
}

func (CreateRegionRequestPathSelectorRegionMetadataOwnerReferences) ApiVersion() CreateRegionRequestPathSelectorRegionMetadataOwnerReferencesApiVersion {
	return CreateRegionRequestPathSelectorRegionMetadataOwnerReferencesApiVersion{}
}

func (CreateRegionRequestPathSelectorRegionMetadataOwnerReferences) Kind() CreateRegionRequestPathSelectorRegionMetadataOwnerReferencesKind {
	return CreateRegionRequestPathSelectorRegionMetadataOwnerReferencesKind{}
}

func (CreateRegionRequestPathSelectorRegionMetadataOwnerReferences) Name() CreateRegionRequestPathSelectorRegionMetadataOwnerReferencesName {
	return CreateRegionRequestPathSelectorRegionMetadataOwnerReferencesName{}
}

func (CreateRegionRequestPathSelectorRegionMetadataOwnerReferences) Uid() CreateRegionRequestPathSelectorRegionMetadataOwnerReferencesUid {
	return CreateRegionRequestPathSelectorRegionMetadataOwnerReferencesUid{}
}

func (CreateRegionRequestPathSelectorRegionMetadataOwnerReferences) Controller() CreateRegionRequestPathSelectorRegionMetadataOwnerReferencesController {
	return CreateRegionRequestPathSelectorRegionMetadataOwnerReferencesController{}
}

func (CreateRegionRequestPathSelectorRegionMetadataOwnerReferences) BlockOwnerDeletion() CreateRegionRequestPathSelectorRegionMetadataOwnerReferencesBlockOwnerDeletion {
	return CreateRegionRequestPathSelectorRegionMetadataOwnerReferencesBlockOwnerDeletion{}
}

type CreateRegionRequestPathSelectorRegionMetadataOwnerReferencesApiVersion struct{}

func (CreateRegionRequestPathSelectorRegionMetadataOwnerReferencesApiVersion) FieldPath() *CreateRegionRequest_FieldSubPath {
	return &CreateRegionRequest_FieldSubPath{
		selector: CreateRegionRequest_FieldPathSelectorRegion,
		subPath:  region.NewRegionFieldPathBuilder().Metadata().OwnerReferences().ApiVersion().FieldPath(),
	}
}

func (s CreateRegionRequestPathSelectorRegionMetadataOwnerReferencesApiVersion) WithValue(value string) *CreateRegionRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*CreateRegionRequest_FieldSubPathValue)
}

func (s CreateRegionRequestPathSelectorRegionMetadataOwnerReferencesApiVersion) WithArrayOfValues(values []string) *CreateRegionRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CreateRegionRequest_FieldSubPathArrayOfValues)
}

type CreateRegionRequestPathSelectorRegionMetadataOwnerReferencesKind struct{}

func (CreateRegionRequestPathSelectorRegionMetadataOwnerReferencesKind) FieldPath() *CreateRegionRequest_FieldSubPath {
	return &CreateRegionRequest_FieldSubPath{
		selector: CreateRegionRequest_FieldPathSelectorRegion,
		subPath:  region.NewRegionFieldPathBuilder().Metadata().OwnerReferences().Kind().FieldPath(),
	}
}

func (s CreateRegionRequestPathSelectorRegionMetadataOwnerReferencesKind) WithValue(value string) *CreateRegionRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*CreateRegionRequest_FieldSubPathValue)
}

func (s CreateRegionRequestPathSelectorRegionMetadataOwnerReferencesKind) WithArrayOfValues(values []string) *CreateRegionRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CreateRegionRequest_FieldSubPathArrayOfValues)
}

type CreateRegionRequestPathSelectorRegionMetadataOwnerReferencesName struct{}

func (CreateRegionRequestPathSelectorRegionMetadataOwnerReferencesName) FieldPath() *CreateRegionRequest_FieldSubPath {
	return &CreateRegionRequest_FieldSubPath{
		selector: CreateRegionRequest_FieldPathSelectorRegion,
		subPath:  region.NewRegionFieldPathBuilder().Metadata().OwnerReferences().Name().FieldPath(),
	}
}

func (s CreateRegionRequestPathSelectorRegionMetadataOwnerReferencesName) WithValue(value string) *CreateRegionRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*CreateRegionRequest_FieldSubPathValue)
}

func (s CreateRegionRequestPathSelectorRegionMetadataOwnerReferencesName) WithArrayOfValues(values []string) *CreateRegionRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CreateRegionRequest_FieldSubPathArrayOfValues)
}

type CreateRegionRequestPathSelectorRegionMetadataOwnerReferencesUid struct{}

func (CreateRegionRequestPathSelectorRegionMetadataOwnerReferencesUid) FieldPath() *CreateRegionRequest_FieldSubPath {
	return &CreateRegionRequest_FieldSubPath{
		selector: CreateRegionRequest_FieldPathSelectorRegion,
		subPath:  region.NewRegionFieldPathBuilder().Metadata().OwnerReferences().Uid().FieldPath(),
	}
}

func (s CreateRegionRequestPathSelectorRegionMetadataOwnerReferencesUid) WithValue(value string) *CreateRegionRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*CreateRegionRequest_FieldSubPathValue)
}

func (s CreateRegionRequestPathSelectorRegionMetadataOwnerReferencesUid) WithArrayOfValues(values []string) *CreateRegionRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CreateRegionRequest_FieldSubPathArrayOfValues)
}

type CreateRegionRequestPathSelectorRegionMetadataOwnerReferencesController struct{}

func (CreateRegionRequestPathSelectorRegionMetadataOwnerReferencesController) FieldPath() *CreateRegionRequest_FieldSubPath {
	return &CreateRegionRequest_FieldSubPath{
		selector: CreateRegionRequest_FieldPathSelectorRegion,
		subPath:  region.NewRegionFieldPathBuilder().Metadata().OwnerReferences().Controller().FieldPath(),
	}
}

func (s CreateRegionRequestPathSelectorRegionMetadataOwnerReferencesController) WithValue(value bool) *CreateRegionRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*CreateRegionRequest_FieldSubPathValue)
}

func (s CreateRegionRequestPathSelectorRegionMetadataOwnerReferencesController) WithArrayOfValues(values []bool) *CreateRegionRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CreateRegionRequest_FieldSubPathArrayOfValues)
}

type CreateRegionRequestPathSelectorRegionMetadataOwnerReferencesBlockOwnerDeletion struct{}

func (CreateRegionRequestPathSelectorRegionMetadataOwnerReferencesBlockOwnerDeletion) FieldPath() *CreateRegionRequest_FieldSubPath {
	return &CreateRegionRequest_FieldSubPath{
		selector: CreateRegionRequest_FieldPathSelectorRegion,
		subPath:  region.NewRegionFieldPathBuilder().Metadata().OwnerReferences().BlockOwnerDeletion().FieldPath(),
	}
}

func (s CreateRegionRequestPathSelectorRegionMetadataOwnerReferencesBlockOwnerDeletion) WithValue(value bool) *CreateRegionRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*CreateRegionRequest_FieldSubPathValue)
}

func (s CreateRegionRequestPathSelectorRegionMetadataOwnerReferencesBlockOwnerDeletion) WithArrayOfValues(values []bool) *CreateRegionRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CreateRegionRequest_FieldSubPathArrayOfValues)
}

type CreateRegionRequestPathSelectorRegionMetadataShards struct{}

func (CreateRegionRequestPathSelectorRegionMetadataShards) FieldPath() *CreateRegionRequest_FieldSubPath {
	return &CreateRegionRequest_FieldSubPath{
		selector: CreateRegionRequest_FieldPathSelectorRegion,
		subPath:  region.NewRegionFieldPathBuilder().Metadata().Shards().FieldPath(),
	}
}

func (s CreateRegionRequestPathSelectorRegionMetadataShards) WithValue(value map[string]int64) *CreateRegionRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*CreateRegionRequest_FieldSubPathValue)
}

func (s CreateRegionRequestPathSelectorRegionMetadataShards) WithArrayOfValues(values []map[string]int64) *CreateRegionRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CreateRegionRequest_FieldSubPathArrayOfValues)
}

func (CreateRegionRequestPathSelectorRegionMetadataShards) WithKey(key string) CreateRegionRequestMapPathSelectorRegionMetadataShards {
	return CreateRegionRequestMapPathSelectorRegionMetadataShards{key: key}
}

type CreateRegionRequestMapPathSelectorRegionMetadataShards struct {
	key string
}

func (s CreateRegionRequestMapPathSelectorRegionMetadataShards) FieldPath() *CreateRegionRequest_FieldSubPath {
	return &CreateRegionRequest_FieldSubPath{
		selector: CreateRegionRequest_FieldPathSelectorRegion,
		subPath:  region.NewRegionFieldPathBuilder().Metadata().Shards().WithKey(s.key).FieldPath(),
	}
}

func (s CreateRegionRequestMapPathSelectorRegionMetadataShards) WithValue(value int64) *CreateRegionRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*CreateRegionRequest_FieldSubPathValue)
}

func (s CreateRegionRequestMapPathSelectorRegionMetadataShards) WithArrayOfValues(values []int64) *CreateRegionRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CreateRegionRequest_FieldSubPathArrayOfValues)
}

type CreateRegionRequestPathSelectorRegionMetadataSyncing struct{}

func (CreateRegionRequestPathSelectorRegionMetadataSyncing) FieldPath() *CreateRegionRequest_FieldSubPath {
	return &CreateRegionRequest_FieldSubPath{
		selector: CreateRegionRequest_FieldPathSelectorRegion,
		subPath:  region.NewRegionFieldPathBuilder().Metadata().Syncing().FieldPath(),
	}
}

func (s CreateRegionRequestPathSelectorRegionMetadataSyncing) WithValue(value *syncing_meta.SyncingMeta) *CreateRegionRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*CreateRegionRequest_FieldSubPathValue)
}

func (s CreateRegionRequestPathSelectorRegionMetadataSyncing) WithArrayOfValues(values []*syncing_meta.SyncingMeta) *CreateRegionRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CreateRegionRequest_FieldSubPathArrayOfValues)
}

func (CreateRegionRequestPathSelectorRegionMetadataSyncing) OwningRegion() CreateRegionRequestPathSelectorRegionMetadataSyncingOwningRegion {
	return CreateRegionRequestPathSelectorRegionMetadataSyncingOwningRegion{}
}

func (CreateRegionRequestPathSelectorRegionMetadataSyncing) Regions() CreateRegionRequestPathSelectorRegionMetadataSyncingRegions {
	return CreateRegionRequestPathSelectorRegionMetadataSyncingRegions{}
}

type CreateRegionRequestPathSelectorRegionMetadataSyncingOwningRegion struct{}

func (CreateRegionRequestPathSelectorRegionMetadataSyncingOwningRegion) FieldPath() *CreateRegionRequest_FieldSubPath {
	return &CreateRegionRequest_FieldSubPath{
		selector: CreateRegionRequest_FieldPathSelectorRegion,
		subPath:  region.NewRegionFieldPathBuilder().Metadata().Syncing().OwningRegion().FieldPath(),
	}
}

func (s CreateRegionRequestPathSelectorRegionMetadataSyncingOwningRegion) WithValue(value string) *CreateRegionRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*CreateRegionRequest_FieldSubPathValue)
}

func (s CreateRegionRequestPathSelectorRegionMetadataSyncingOwningRegion) WithArrayOfValues(values []string) *CreateRegionRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CreateRegionRequest_FieldSubPathArrayOfValues)
}

type CreateRegionRequestPathSelectorRegionMetadataSyncingRegions struct{}

func (CreateRegionRequestPathSelectorRegionMetadataSyncingRegions) FieldPath() *CreateRegionRequest_FieldSubPath {
	return &CreateRegionRequest_FieldSubPath{
		selector: CreateRegionRequest_FieldPathSelectorRegion,
		subPath:  region.NewRegionFieldPathBuilder().Metadata().Syncing().Regions().FieldPath(),
	}
}

func (s CreateRegionRequestPathSelectorRegionMetadataSyncingRegions) WithValue(value []string) *CreateRegionRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*CreateRegionRequest_FieldSubPathValue)
}

func (s CreateRegionRequestPathSelectorRegionMetadataSyncingRegions) WithArrayOfValues(values [][]string) *CreateRegionRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CreateRegionRequest_FieldSubPathArrayOfValues)
}

func (s CreateRegionRequestPathSelectorRegionMetadataSyncingRegions) WithItemValue(value string) *CreateRegionRequest_FieldSubPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*CreateRegionRequest_FieldSubPathArrayItemValue)
}

type UpdateRegionRequestFieldPathBuilder struct{}

func NewUpdateRegionRequestFieldPathBuilder() UpdateRegionRequestFieldPathBuilder {
	return UpdateRegionRequestFieldPathBuilder{}
}
func (UpdateRegionRequestFieldPathBuilder) Region() UpdateRegionRequestPathSelectorRegion {
	return UpdateRegionRequestPathSelectorRegion{}
}
func (UpdateRegionRequestFieldPathBuilder) UpdateMask() UpdateRegionRequestPathSelectorUpdateMask {
	return UpdateRegionRequestPathSelectorUpdateMask{}
}
func (UpdateRegionRequestFieldPathBuilder) Cas() UpdateRegionRequestPathSelectorCas {
	return UpdateRegionRequestPathSelectorCas{}
}

type UpdateRegionRequestPathSelectorRegion struct{}

func (UpdateRegionRequestPathSelectorRegion) FieldPath() *UpdateRegionRequest_FieldTerminalPath {
	return &UpdateRegionRequest_FieldTerminalPath{selector: UpdateRegionRequest_FieldPathSelectorRegion}
}

func (s UpdateRegionRequestPathSelectorRegion) WithValue(value *region.Region) *UpdateRegionRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateRegionRequest_FieldTerminalPathValue)
}

func (s UpdateRegionRequestPathSelectorRegion) WithArrayOfValues(values []*region.Region) *UpdateRegionRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateRegionRequest_FieldTerminalPathArrayOfValues)
}

func (UpdateRegionRequestPathSelectorRegion) WithSubPath(subPath region.Region_FieldPath) *UpdateRegionRequest_FieldSubPath {
	return &UpdateRegionRequest_FieldSubPath{selector: UpdateRegionRequest_FieldPathSelectorRegion, subPath: subPath}
}

func (s UpdateRegionRequestPathSelectorRegion) WithSubValue(subPathValue region.Region_FieldPathValue) *UpdateRegionRequest_FieldSubPathValue {
	return &UpdateRegionRequest_FieldSubPathValue{UpdateRegionRequest_FieldPath: s.WithSubPath(subPathValue), subPathValue: subPathValue}
}

func (s UpdateRegionRequestPathSelectorRegion) WithSubArrayOfValues(subPathArrayOfValues region.Region_FieldPathArrayOfValues) *UpdateRegionRequest_FieldSubPathArrayOfValues {
	return &UpdateRegionRequest_FieldSubPathArrayOfValues{UpdateRegionRequest_FieldPath: s.WithSubPath(subPathArrayOfValues), subPathArrayOfValues: subPathArrayOfValues}
}

func (s UpdateRegionRequestPathSelectorRegion) WithSubArrayItemValue(subPathArrayItemValue region.Region_FieldPathArrayItemValue) *UpdateRegionRequest_FieldSubPathArrayItemValue {
	return &UpdateRegionRequest_FieldSubPathArrayItemValue{UpdateRegionRequest_FieldPath: s.WithSubPath(subPathArrayItemValue), subPathItemValue: subPathArrayItemValue}
}

func (UpdateRegionRequestPathSelectorRegion) Name() UpdateRegionRequestPathSelectorRegionName {
	return UpdateRegionRequestPathSelectorRegionName{}
}

func (UpdateRegionRequestPathSelectorRegion) Title() UpdateRegionRequestPathSelectorRegionTitle {
	return UpdateRegionRequestPathSelectorRegionTitle{}
}

func (UpdateRegionRequestPathSelectorRegion) Domain() UpdateRegionRequestPathSelectorRegionDomain {
	return UpdateRegionRequestPathSelectorRegionDomain{}
}

func (UpdateRegionRequestPathSelectorRegion) Location() UpdateRegionRequestPathSelectorRegionLocation {
	return UpdateRegionRequestPathSelectorRegionLocation{}
}

func (UpdateRegionRequestPathSelectorRegion) IsDefault() UpdateRegionRequestPathSelectorRegionIsDefault {
	return UpdateRegionRequestPathSelectorRegionIsDefault{}
}

func (UpdateRegionRequestPathSelectorRegion) ConnectivityScores() UpdateRegionRequestPathSelectorRegionConnectivityScores {
	return UpdateRegionRequestPathSelectorRegionConnectivityScores{}
}

func (UpdateRegionRequestPathSelectorRegion) Metadata() UpdateRegionRequestPathSelectorRegionMetadata {
	return UpdateRegionRequestPathSelectorRegionMetadata{}
}

type UpdateRegionRequestPathSelectorRegionName struct{}

func (UpdateRegionRequestPathSelectorRegionName) FieldPath() *UpdateRegionRequest_FieldSubPath {
	return &UpdateRegionRequest_FieldSubPath{
		selector: UpdateRegionRequest_FieldPathSelectorRegion,
		subPath:  region.NewRegionFieldPathBuilder().Name().FieldPath(),
	}
}

func (s UpdateRegionRequestPathSelectorRegionName) WithValue(value *region.Name) *UpdateRegionRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateRegionRequest_FieldSubPathValue)
}

func (s UpdateRegionRequestPathSelectorRegionName) WithArrayOfValues(values []*region.Name) *UpdateRegionRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateRegionRequest_FieldSubPathArrayOfValues)
}

type UpdateRegionRequestPathSelectorRegionTitle struct{}

func (UpdateRegionRequestPathSelectorRegionTitle) FieldPath() *UpdateRegionRequest_FieldSubPath {
	return &UpdateRegionRequest_FieldSubPath{
		selector: UpdateRegionRequest_FieldPathSelectorRegion,
		subPath:  region.NewRegionFieldPathBuilder().Title().FieldPath(),
	}
}

func (s UpdateRegionRequestPathSelectorRegionTitle) WithValue(value string) *UpdateRegionRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateRegionRequest_FieldSubPathValue)
}

func (s UpdateRegionRequestPathSelectorRegionTitle) WithArrayOfValues(values []string) *UpdateRegionRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateRegionRequest_FieldSubPathArrayOfValues)
}

type UpdateRegionRequestPathSelectorRegionDomain struct{}

func (UpdateRegionRequestPathSelectorRegionDomain) FieldPath() *UpdateRegionRequest_FieldSubPath {
	return &UpdateRegionRequest_FieldSubPath{
		selector: UpdateRegionRequest_FieldPathSelectorRegion,
		subPath:  region.NewRegionFieldPathBuilder().Domain().FieldPath(),
	}
}

func (s UpdateRegionRequestPathSelectorRegionDomain) WithValue(value string) *UpdateRegionRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateRegionRequest_FieldSubPathValue)
}

func (s UpdateRegionRequestPathSelectorRegionDomain) WithArrayOfValues(values []string) *UpdateRegionRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateRegionRequest_FieldSubPathArrayOfValues)
}

type UpdateRegionRequestPathSelectorRegionLocation struct{}

func (UpdateRegionRequestPathSelectorRegionLocation) FieldPath() *UpdateRegionRequest_FieldSubPath {
	return &UpdateRegionRequest_FieldSubPath{
		selector: UpdateRegionRequest_FieldPathSelectorRegion,
		subPath:  region.NewRegionFieldPathBuilder().Location().FieldPath(),
	}
}

func (s UpdateRegionRequestPathSelectorRegionLocation) WithValue(value *region.Region_RegionLocation) *UpdateRegionRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateRegionRequest_FieldSubPathValue)
}

func (s UpdateRegionRequestPathSelectorRegionLocation) WithArrayOfValues(values []*region.Region_RegionLocation) *UpdateRegionRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateRegionRequest_FieldSubPathArrayOfValues)
}

func (UpdateRegionRequestPathSelectorRegionLocation) Continent() UpdateRegionRequestPathSelectorRegionLocationContinent {
	return UpdateRegionRequestPathSelectorRegionLocationContinent{}
}

func (UpdateRegionRequestPathSelectorRegionLocation) Country() UpdateRegionRequestPathSelectorRegionLocationCountry {
	return UpdateRegionRequestPathSelectorRegionLocationCountry{}
}

func (UpdateRegionRequestPathSelectorRegionLocation) Agglomeration() UpdateRegionRequestPathSelectorRegionLocationAgglomeration {
	return UpdateRegionRequestPathSelectorRegionLocationAgglomeration{}
}

func (UpdateRegionRequestPathSelectorRegionLocation) City() UpdateRegionRequestPathSelectorRegionLocationCity {
	return UpdateRegionRequestPathSelectorRegionLocationCity{}
}

func (UpdateRegionRequestPathSelectorRegionLocation) Cloud() UpdateRegionRequestPathSelectorRegionLocationCloud {
	return UpdateRegionRequestPathSelectorRegionLocationCloud{}
}

type UpdateRegionRequestPathSelectorRegionLocationContinent struct{}

func (UpdateRegionRequestPathSelectorRegionLocationContinent) FieldPath() *UpdateRegionRequest_FieldSubPath {
	return &UpdateRegionRequest_FieldSubPath{
		selector: UpdateRegionRequest_FieldPathSelectorRegion,
		subPath:  region.NewRegionFieldPathBuilder().Location().Continent().FieldPath(),
	}
}

func (s UpdateRegionRequestPathSelectorRegionLocationContinent) WithValue(value string) *UpdateRegionRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateRegionRequest_FieldSubPathValue)
}

func (s UpdateRegionRequestPathSelectorRegionLocationContinent) WithArrayOfValues(values []string) *UpdateRegionRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateRegionRequest_FieldSubPathArrayOfValues)
}

type UpdateRegionRequestPathSelectorRegionLocationCountry struct{}

func (UpdateRegionRequestPathSelectorRegionLocationCountry) FieldPath() *UpdateRegionRequest_FieldSubPath {
	return &UpdateRegionRequest_FieldSubPath{
		selector: UpdateRegionRequest_FieldPathSelectorRegion,
		subPath:  region.NewRegionFieldPathBuilder().Location().Country().FieldPath(),
	}
}

func (s UpdateRegionRequestPathSelectorRegionLocationCountry) WithValue(value string) *UpdateRegionRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateRegionRequest_FieldSubPathValue)
}

func (s UpdateRegionRequestPathSelectorRegionLocationCountry) WithArrayOfValues(values []string) *UpdateRegionRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateRegionRequest_FieldSubPathArrayOfValues)
}

type UpdateRegionRequestPathSelectorRegionLocationAgglomeration struct{}

func (UpdateRegionRequestPathSelectorRegionLocationAgglomeration) FieldPath() *UpdateRegionRequest_FieldSubPath {
	return &UpdateRegionRequest_FieldSubPath{
		selector: UpdateRegionRequest_FieldPathSelectorRegion,
		subPath:  region.NewRegionFieldPathBuilder().Location().Agglomeration().FieldPath(),
	}
}

func (s UpdateRegionRequestPathSelectorRegionLocationAgglomeration) WithValue(value string) *UpdateRegionRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateRegionRequest_FieldSubPathValue)
}

func (s UpdateRegionRequestPathSelectorRegionLocationAgglomeration) WithArrayOfValues(values []string) *UpdateRegionRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateRegionRequest_FieldSubPathArrayOfValues)
}

type UpdateRegionRequestPathSelectorRegionLocationCity struct{}

func (UpdateRegionRequestPathSelectorRegionLocationCity) FieldPath() *UpdateRegionRequest_FieldSubPath {
	return &UpdateRegionRequest_FieldSubPath{
		selector: UpdateRegionRequest_FieldPathSelectorRegion,
		subPath:  region.NewRegionFieldPathBuilder().Location().City().FieldPath(),
	}
}

func (s UpdateRegionRequestPathSelectorRegionLocationCity) WithValue(value string) *UpdateRegionRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateRegionRequest_FieldSubPathValue)
}

func (s UpdateRegionRequestPathSelectorRegionLocationCity) WithArrayOfValues(values []string) *UpdateRegionRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateRegionRequest_FieldSubPathArrayOfValues)
}

type UpdateRegionRequestPathSelectorRegionLocationCloud struct{}

func (UpdateRegionRequestPathSelectorRegionLocationCloud) FieldPath() *UpdateRegionRequest_FieldSubPath {
	return &UpdateRegionRequest_FieldSubPath{
		selector: UpdateRegionRequest_FieldPathSelectorRegion,
		subPath:  region.NewRegionFieldPathBuilder().Location().Cloud().FieldPath(),
	}
}

func (s UpdateRegionRequestPathSelectorRegionLocationCloud) WithValue(value string) *UpdateRegionRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateRegionRequest_FieldSubPathValue)
}

func (s UpdateRegionRequestPathSelectorRegionLocationCloud) WithArrayOfValues(values []string) *UpdateRegionRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateRegionRequest_FieldSubPathArrayOfValues)
}

type UpdateRegionRequestPathSelectorRegionIsDefault struct{}

func (UpdateRegionRequestPathSelectorRegionIsDefault) FieldPath() *UpdateRegionRequest_FieldSubPath {
	return &UpdateRegionRequest_FieldSubPath{
		selector: UpdateRegionRequest_FieldPathSelectorRegion,
		subPath:  region.NewRegionFieldPathBuilder().IsDefault().FieldPath(),
	}
}

func (s UpdateRegionRequestPathSelectorRegionIsDefault) WithValue(value bool) *UpdateRegionRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateRegionRequest_FieldSubPathValue)
}

func (s UpdateRegionRequestPathSelectorRegionIsDefault) WithArrayOfValues(values []bool) *UpdateRegionRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateRegionRequest_FieldSubPathArrayOfValues)
}

type UpdateRegionRequestPathSelectorRegionConnectivityScores struct{}

func (UpdateRegionRequestPathSelectorRegionConnectivityScores) FieldPath() *UpdateRegionRequest_FieldSubPath {
	return &UpdateRegionRequest_FieldSubPath{
		selector: UpdateRegionRequest_FieldPathSelectorRegion,
		subPath:  region.NewRegionFieldPathBuilder().ConnectivityScores().FieldPath(),
	}
}

func (s UpdateRegionRequestPathSelectorRegionConnectivityScores) WithValue(value []*region.Region_RegionConnectivityPreference) *UpdateRegionRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateRegionRequest_FieldSubPathValue)
}

func (s UpdateRegionRequestPathSelectorRegionConnectivityScores) WithArrayOfValues(values [][]*region.Region_RegionConnectivityPreference) *UpdateRegionRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateRegionRequest_FieldSubPathArrayOfValues)
}

func (s UpdateRegionRequestPathSelectorRegionConnectivityScores) WithItemValue(value *region.Region_RegionConnectivityPreference) *UpdateRegionRequest_FieldSubPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*UpdateRegionRequest_FieldSubPathArrayItemValue)
}

func (UpdateRegionRequestPathSelectorRegionConnectivityScores) Dest() UpdateRegionRequestPathSelectorRegionConnectivityScoresDest {
	return UpdateRegionRequestPathSelectorRegionConnectivityScoresDest{}
}

func (UpdateRegionRequestPathSelectorRegionConnectivityScores) Score() UpdateRegionRequestPathSelectorRegionConnectivityScoresScore {
	return UpdateRegionRequestPathSelectorRegionConnectivityScoresScore{}
}

type UpdateRegionRequestPathSelectorRegionConnectivityScoresDest struct{}

func (UpdateRegionRequestPathSelectorRegionConnectivityScoresDest) FieldPath() *UpdateRegionRequest_FieldSubPath {
	return &UpdateRegionRequest_FieldSubPath{
		selector: UpdateRegionRequest_FieldPathSelectorRegion,
		subPath:  region.NewRegionFieldPathBuilder().ConnectivityScores().Dest().FieldPath(),
	}
}

func (s UpdateRegionRequestPathSelectorRegionConnectivityScoresDest) WithValue(value *region.Reference) *UpdateRegionRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateRegionRequest_FieldSubPathValue)
}

func (s UpdateRegionRequestPathSelectorRegionConnectivityScoresDest) WithArrayOfValues(values []*region.Reference) *UpdateRegionRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateRegionRequest_FieldSubPathArrayOfValues)
}

type UpdateRegionRequestPathSelectorRegionConnectivityScoresScore struct{}

func (UpdateRegionRequestPathSelectorRegionConnectivityScoresScore) FieldPath() *UpdateRegionRequest_FieldSubPath {
	return &UpdateRegionRequest_FieldSubPath{
		selector: UpdateRegionRequest_FieldPathSelectorRegion,
		subPath:  region.NewRegionFieldPathBuilder().ConnectivityScores().Score().FieldPath(),
	}
}

func (s UpdateRegionRequestPathSelectorRegionConnectivityScoresScore) WithValue(value int32) *UpdateRegionRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateRegionRequest_FieldSubPathValue)
}

func (s UpdateRegionRequestPathSelectorRegionConnectivityScoresScore) WithArrayOfValues(values []int32) *UpdateRegionRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateRegionRequest_FieldSubPathArrayOfValues)
}

type UpdateRegionRequestPathSelectorRegionMetadata struct{}

func (UpdateRegionRequestPathSelectorRegionMetadata) FieldPath() *UpdateRegionRequest_FieldSubPath {
	return &UpdateRegionRequest_FieldSubPath{
		selector: UpdateRegionRequest_FieldPathSelectorRegion,
		subPath:  region.NewRegionFieldPathBuilder().Metadata().FieldPath(),
	}
}

func (s UpdateRegionRequestPathSelectorRegionMetadata) WithValue(value *ntt_meta.Meta) *UpdateRegionRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateRegionRequest_FieldSubPathValue)
}

func (s UpdateRegionRequestPathSelectorRegionMetadata) WithArrayOfValues(values []*ntt_meta.Meta) *UpdateRegionRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateRegionRequest_FieldSubPathArrayOfValues)
}

func (UpdateRegionRequestPathSelectorRegionMetadata) CreateTime() UpdateRegionRequestPathSelectorRegionMetadataCreateTime {
	return UpdateRegionRequestPathSelectorRegionMetadataCreateTime{}
}

func (UpdateRegionRequestPathSelectorRegionMetadata) UpdateTime() UpdateRegionRequestPathSelectorRegionMetadataUpdateTime {
	return UpdateRegionRequestPathSelectorRegionMetadataUpdateTime{}
}

func (UpdateRegionRequestPathSelectorRegionMetadata) Uuid() UpdateRegionRequestPathSelectorRegionMetadataUuid {
	return UpdateRegionRequestPathSelectorRegionMetadataUuid{}
}

func (UpdateRegionRequestPathSelectorRegionMetadata) Tags() UpdateRegionRequestPathSelectorRegionMetadataTags {
	return UpdateRegionRequestPathSelectorRegionMetadataTags{}
}

func (UpdateRegionRequestPathSelectorRegionMetadata) Labels() UpdateRegionRequestPathSelectorRegionMetadataLabels {
	return UpdateRegionRequestPathSelectorRegionMetadataLabels{}
}

func (UpdateRegionRequestPathSelectorRegionMetadata) Annotations() UpdateRegionRequestPathSelectorRegionMetadataAnnotations {
	return UpdateRegionRequestPathSelectorRegionMetadataAnnotations{}
}

func (UpdateRegionRequestPathSelectorRegionMetadata) Generation() UpdateRegionRequestPathSelectorRegionMetadataGeneration {
	return UpdateRegionRequestPathSelectorRegionMetadataGeneration{}
}

func (UpdateRegionRequestPathSelectorRegionMetadata) ResourceVersion() UpdateRegionRequestPathSelectorRegionMetadataResourceVersion {
	return UpdateRegionRequestPathSelectorRegionMetadataResourceVersion{}
}

func (UpdateRegionRequestPathSelectorRegionMetadata) OwnerReferences() UpdateRegionRequestPathSelectorRegionMetadataOwnerReferences {
	return UpdateRegionRequestPathSelectorRegionMetadataOwnerReferences{}
}

func (UpdateRegionRequestPathSelectorRegionMetadata) Shards() UpdateRegionRequestPathSelectorRegionMetadataShards {
	return UpdateRegionRequestPathSelectorRegionMetadataShards{}
}

func (UpdateRegionRequestPathSelectorRegionMetadata) Syncing() UpdateRegionRequestPathSelectorRegionMetadataSyncing {
	return UpdateRegionRequestPathSelectorRegionMetadataSyncing{}
}

type UpdateRegionRequestPathSelectorRegionMetadataCreateTime struct{}

func (UpdateRegionRequestPathSelectorRegionMetadataCreateTime) FieldPath() *UpdateRegionRequest_FieldSubPath {
	return &UpdateRegionRequest_FieldSubPath{
		selector: UpdateRegionRequest_FieldPathSelectorRegion,
		subPath:  region.NewRegionFieldPathBuilder().Metadata().CreateTime().FieldPath(),
	}
}

func (s UpdateRegionRequestPathSelectorRegionMetadataCreateTime) WithValue(value *timestamp.Timestamp) *UpdateRegionRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateRegionRequest_FieldSubPathValue)
}

func (s UpdateRegionRequestPathSelectorRegionMetadataCreateTime) WithArrayOfValues(values []*timestamp.Timestamp) *UpdateRegionRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateRegionRequest_FieldSubPathArrayOfValues)
}

type UpdateRegionRequestPathSelectorRegionMetadataUpdateTime struct{}

func (UpdateRegionRequestPathSelectorRegionMetadataUpdateTime) FieldPath() *UpdateRegionRequest_FieldSubPath {
	return &UpdateRegionRequest_FieldSubPath{
		selector: UpdateRegionRequest_FieldPathSelectorRegion,
		subPath:  region.NewRegionFieldPathBuilder().Metadata().UpdateTime().FieldPath(),
	}
}

func (s UpdateRegionRequestPathSelectorRegionMetadataUpdateTime) WithValue(value *timestamp.Timestamp) *UpdateRegionRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateRegionRequest_FieldSubPathValue)
}

func (s UpdateRegionRequestPathSelectorRegionMetadataUpdateTime) WithArrayOfValues(values []*timestamp.Timestamp) *UpdateRegionRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateRegionRequest_FieldSubPathArrayOfValues)
}

type UpdateRegionRequestPathSelectorRegionMetadataUuid struct{}

func (UpdateRegionRequestPathSelectorRegionMetadataUuid) FieldPath() *UpdateRegionRequest_FieldSubPath {
	return &UpdateRegionRequest_FieldSubPath{
		selector: UpdateRegionRequest_FieldPathSelectorRegion,
		subPath:  region.NewRegionFieldPathBuilder().Metadata().Uuid().FieldPath(),
	}
}

func (s UpdateRegionRequestPathSelectorRegionMetadataUuid) WithValue(value string) *UpdateRegionRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateRegionRequest_FieldSubPathValue)
}

func (s UpdateRegionRequestPathSelectorRegionMetadataUuid) WithArrayOfValues(values []string) *UpdateRegionRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateRegionRequest_FieldSubPathArrayOfValues)
}

type UpdateRegionRequestPathSelectorRegionMetadataTags struct{}

func (UpdateRegionRequestPathSelectorRegionMetadataTags) FieldPath() *UpdateRegionRequest_FieldSubPath {
	return &UpdateRegionRequest_FieldSubPath{
		selector: UpdateRegionRequest_FieldPathSelectorRegion,
		subPath:  region.NewRegionFieldPathBuilder().Metadata().Tags().FieldPath(),
	}
}

func (s UpdateRegionRequestPathSelectorRegionMetadataTags) WithValue(value []string) *UpdateRegionRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateRegionRequest_FieldSubPathValue)
}

func (s UpdateRegionRequestPathSelectorRegionMetadataTags) WithArrayOfValues(values [][]string) *UpdateRegionRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateRegionRequest_FieldSubPathArrayOfValues)
}

func (s UpdateRegionRequestPathSelectorRegionMetadataTags) WithItemValue(value string) *UpdateRegionRequest_FieldSubPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*UpdateRegionRequest_FieldSubPathArrayItemValue)
}

type UpdateRegionRequestPathSelectorRegionMetadataLabels struct{}

func (UpdateRegionRequestPathSelectorRegionMetadataLabels) FieldPath() *UpdateRegionRequest_FieldSubPath {
	return &UpdateRegionRequest_FieldSubPath{
		selector: UpdateRegionRequest_FieldPathSelectorRegion,
		subPath:  region.NewRegionFieldPathBuilder().Metadata().Labels().FieldPath(),
	}
}

func (s UpdateRegionRequestPathSelectorRegionMetadataLabels) WithValue(value map[string]string) *UpdateRegionRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateRegionRequest_FieldSubPathValue)
}

func (s UpdateRegionRequestPathSelectorRegionMetadataLabels) WithArrayOfValues(values []map[string]string) *UpdateRegionRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateRegionRequest_FieldSubPathArrayOfValues)
}

func (UpdateRegionRequestPathSelectorRegionMetadataLabels) WithKey(key string) UpdateRegionRequestMapPathSelectorRegionMetadataLabels {
	return UpdateRegionRequestMapPathSelectorRegionMetadataLabels{key: key}
}

type UpdateRegionRequestMapPathSelectorRegionMetadataLabels struct {
	key string
}

func (s UpdateRegionRequestMapPathSelectorRegionMetadataLabels) FieldPath() *UpdateRegionRequest_FieldSubPath {
	return &UpdateRegionRequest_FieldSubPath{
		selector: UpdateRegionRequest_FieldPathSelectorRegion,
		subPath:  region.NewRegionFieldPathBuilder().Metadata().Labels().WithKey(s.key).FieldPath(),
	}
}

func (s UpdateRegionRequestMapPathSelectorRegionMetadataLabels) WithValue(value string) *UpdateRegionRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateRegionRequest_FieldSubPathValue)
}

func (s UpdateRegionRequestMapPathSelectorRegionMetadataLabels) WithArrayOfValues(values []string) *UpdateRegionRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateRegionRequest_FieldSubPathArrayOfValues)
}

type UpdateRegionRequestPathSelectorRegionMetadataAnnotations struct{}

func (UpdateRegionRequestPathSelectorRegionMetadataAnnotations) FieldPath() *UpdateRegionRequest_FieldSubPath {
	return &UpdateRegionRequest_FieldSubPath{
		selector: UpdateRegionRequest_FieldPathSelectorRegion,
		subPath:  region.NewRegionFieldPathBuilder().Metadata().Annotations().FieldPath(),
	}
}

func (s UpdateRegionRequestPathSelectorRegionMetadataAnnotations) WithValue(value map[string]string) *UpdateRegionRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateRegionRequest_FieldSubPathValue)
}

func (s UpdateRegionRequestPathSelectorRegionMetadataAnnotations) WithArrayOfValues(values []map[string]string) *UpdateRegionRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateRegionRequest_FieldSubPathArrayOfValues)
}

func (UpdateRegionRequestPathSelectorRegionMetadataAnnotations) WithKey(key string) UpdateRegionRequestMapPathSelectorRegionMetadataAnnotations {
	return UpdateRegionRequestMapPathSelectorRegionMetadataAnnotations{key: key}
}

type UpdateRegionRequestMapPathSelectorRegionMetadataAnnotations struct {
	key string
}

func (s UpdateRegionRequestMapPathSelectorRegionMetadataAnnotations) FieldPath() *UpdateRegionRequest_FieldSubPath {
	return &UpdateRegionRequest_FieldSubPath{
		selector: UpdateRegionRequest_FieldPathSelectorRegion,
		subPath:  region.NewRegionFieldPathBuilder().Metadata().Annotations().WithKey(s.key).FieldPath(),
	}
}

func (s UpdateRegionRequestMapPathSelectorRegionMetadataAnnotations) WithValue(value string) *UpdateRegionRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateRegionRequest_FieldSubPathValue)
}

func (s UpdateRegionRequestMapPathSelectorRegionMetadataAnnotations) WithArrayOfValues(values []string) *UpdateRegionRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateRegionRequest_FieldSubPathArrayOfValues)
}

type UpdateRegionRequestPathSelectorRegionMetadataGeneration struct{}

func (UpdateRegionRequestPathSelectorRegionMetadataGeneration) FieldPath() *UpdateRegionRequest_FieldSubPath {
	return &UpdateRegionRequest_FieldSubPath{
		selector: UpdateRegionRequest_FieldPathSelectorRegion,
		subPath:  region.NewRegionFieldPathBuilder().Metadata().Generation().FieldPath(),
	}
}

func (s UpdateRegionRequestPathSelectorRegionMetadataGeneration) WithValue(value int64) *UpdateRegionRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateRegionRequest_FieldSubPathValue)
}

func (s UpdateRegionRequestPathSelectorRegionMetadataGeneration) WithArrayOfValues(values []int64) *UpdateRegionRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateRegionRequest_FieldSubPathArrayOfValues)
}

type UpdateRegionRequestPathSelectorRegionMetadataResourceVersion struct{}

func (UpdateRegionRequestPathSelectorRegionMetadataResourceVersion) FieldPath() *UpdateRegionRequest_FieldSubPath {
	return &UpdateRegionRequest_FieldSubPath{
		selector: UpdateRegionRequest_FieldPathSelectorRegion,
		subPath:  region.NewRegionFieldPathBuilder().Metadata().ResourceVersion().FieldPath(),
	}
}

func (s UpdateRegionRequestPathSelectorRegionMetadataResourceVersion) WithValue(value string) *UpdateRegionRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateRegionRequest_FieldSubPathValue)
}

func (s UpdateRegionRequestPathSelectorRegionMetadataResourceVersion) WithArrayOfValues(values []string) *UpdateRegionRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateRegionRequest_FieldSubPathArrayOfValues)
}

type UpdateRegionRequestPathSelectorRegionMetadataOwnerReferences struct{}

func (UpdateRegionRequestPathSelectorRegionMetadataOwnerReferences) FieldPath() *UpdateRegionRequest_FieldSubPath {
	return &UpdateRegionRequest_FieldSubPath{
		selector: UpdateRegionRequest_FieldPathSelectorRegion,
		subPath:  region.NewRegionFieldPathBuilder().Metadata().OwnerReferences().FieldPath(),
	}
}

func (s UpdateRegionRequestPathSelectorRegionMetadataOwnerReferences) WithValue(value []*ntt_meta.OwnerReference) *UpdateRegionRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateRegionRequest_FieldSubPathValue)
}

func (s UpdateRegionRequestPathSelectorRegionMetadataOwnerReferences) WithArrayOfValues(values [][]*ntt_meta.OwnerReference) *UpdateRegionRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateRegionRequest_FieldSubPathArrayOfValues)
}

func (s UpdateRegionRequestPathSelectorRegionMetadataOwnerReferences) WithItemValue(value *ntt_meta.OwnerReference) *UpdateRegionRequest_FieldSubPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*UpdateRegionRequest_FieldSubPathArrayItemValue)
}

func (UpdateRegionRequestPathSelectorRegionMetadataOwnerReferences) ApiVersion() UpdateRegionRequestPathSelectorRegionMetadataOwnerReferencesApiVersion {
	return UpdateRegionRequestPathSelectorRegionMetadataOwnerReferencesApiVersion{}
}

func (UpdateRegionRequestPathSelectorRegionMetadataOwnerReferences) Kind() UpdateRegionRequestPathSelectorRegionMetadataOwnerReferencesKind {
	return UpdateRegionRequestPathSelectorRegionMetadataOwnerReferencesKind{}
}

func (UpdateRegionRequestPathSelectorRegionMetadataOwnerReferences) Name() UpdateRegionRequestPathSelectorRegionMetadataOwnerReferencesName {
	return UpdateRegionRequestPathSelectorRegionMetadataOwnerReferencesName{}
}

func (UpdateRegionRequestPathSelectorRegionMetadataOwnerReferences) Uid() UpdateRegionRequestPathSelectorRegionMetadataOwnerReferencesUid {
	return UpdateRegionRequestPathSelectorRegionMetadataOwnerReferencesUid{}
}

func (UpdateRegionRequestPathSelectorRegionMetadataOwnerReferences) Controller() UpdateRegionRequestPathSelectorRegionMetadataOwnerReferencesController {
	return UpdateRegionRequestPathSelectorRegionMetadataOwnerReferencesController{}
}

func (UpdateRegionRequestPathSelectorRegionMetadataOwnerReferences) BlockOwnerDeletion() UpdateRegionRequestPathSelectorRegionMetadataOwnerReferencesBlockOwnerDeletion {
	return UpdateRegionRequestPathSelectorRegionMetadataOwnerReferencesBlockOwnerDeletion{}
}

type UpdateRegionRequestPathSelectorRegionMetadataOwnerReferencesApiVersion struct{}

func (UpdateRegionRequestPathSelectorRegionMetadataOwnerReferencesApiVersion) FieldPath() *UpdateRegionRequest_FieldSubPath {
	return &UpdateRegionRequest_FieldSubPath{
		selector: UpdateRegionRequest_FieldPathSelectorRegion,
		subPath:  region.NewRegionFieldPathBuilder().Metadata().OwnerReferences().ApiVersion().FieldPath(),
	}
}

func (s UpdateRegionRequestPathSelectorRegionMetadataOwnerReferencesApiVersion) WithValue(value string) *UpdateRegionRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateRegionRequest_FieldSubPathValue)
}

func (s UpdateRegionRequestPathSelectorRegionMetadataOwnerReferencesApiVersion) WithArrayOfValues(values []string) *UpdateRegionRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateRegionRequest_FieldSubPathArrayOfValues)
}

type UpdateRegionRequestPathSelectorRegionMetadataOwnerReferencesKind struct{}

func (UpdateRegionRequestPathSelectorRegionMetadataOwnerReferencesKind) FieldPath() *UpdateRegionRequest_FieldSubPath {
	return &UpdateRegionRequest_FieldSubPath{
		selector: UpdateRegionRequest_FieldPathSelectorRegion,
		subPath:  region.NewRegionFieldPathBuilder().Metadata().OwnerReferences().Kind().FieldPath(),
	}
}

func (s UpdateRegionRequestPathSelectorRegionMetadataOwnerReferencesKind) WithValue(value string) *UpdateRegionRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateRegionRequest_FieldSubPathValue)
}

func (s UpdateRegionRequestPathSelectorRegionMetadataOwnerReferencesKind) WithArrayOfValues(values []string) *UpdateRegionRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateRegionRequest_FieldSubPathArrayOfValues)
}

type UpdateRegionRequestPathSelectorRegionMetadataOwnerReferencesName struct{}

func (UpdateRegionRequestPathSelectorRegionMetadataOwnerReferencesName) FieldPath() *UpdateRegionRequest_FieldSubPath {
	return &UpdateRegionRequest_FieldSubPath{
		selector: UpdateRegionRequest_FieldPathSelectorRegion,
		subPath:  region.NewRegionFieldPathBuilder().Metadata().OwnerReferences().Name().FieldPath(),
	}
}

func (s UpdateRegionRequestPathSelectorRegionMetadataOwnerReferencesName) WithValue(value string) *UpdateRegionRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateRegionRequest_FieldSubPathValue)
}

func (s UpdateRegionRequestPathSelectorRegionMetadataOwnerReferencesName) WithArrayOfValues(values []string) *UpdateRegionRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateRegionRequest_FieldSubPathArrayOfValues)
}

type UpdateRegionRequestPathSelectorRegionMetadataOwnerReferencesUid struct{}

func (UpdateRegionRequestPathSelectorRegionMetadataOwnerReferencesUid) FieldPath() *UpdateRegionRequest_FieldSubPath {
	return &UpdateRegionRequest_FieldSubPath{
		selector: UpdateRegionRequest_FieldPathSelectorRegion,
		subPath:  region.NewRegionFieldPathBuilder().Metadata().OwnerReferences().Uid().FieldPath(),
	}
}

func (s UpdateRegionRequestPathSelectorRegionMetadataOwnerReferencesUid) WithValue(value string) *UpdateRegionRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateRegionRequest_FieldSubPathValue)
}

func (s UpdateRegionRequestPathSelectorRegionMetadataOwnerReferencesUid) WithArrayOfValues(values []string) *UpdateRegionRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateRegionRequest_FieldSubPathArrayOfValues)
}

type UpdateRegionRequestPathSelectorRegionMetadataOwnerReferencesController struct{}

func (UpdateRegionRequestPathSelectorRegionMetadataOwnerReferencesController) FieldPath() *UpdateRegionRequest_FieldSubPath {
	return &UpdateRegionRequest_FieldSubPath{
		selector: UpdateRegionRequest_FieldPathSelectorRegion,
		subPath:  region.NewRegionFieldPathBuilder().Metadata().OwnerReferences().Controller().FieldPath(),
	}
}

func (s UpdateRegionRequestPathSelectorRegionMetadataOwnerReferencesController) WithValue(value bool) *UpdateRegionRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateRegionRequest_FieldSubPathValue)
}

func (s UpdateRegionRequestPathSelectorRegionMetadataOwnerReferencesController) WithArrayOfValues(values []bool) *UpdateRegionRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateRegionRequest_FieldSubPathArrayOfValues)
}

type UpdateRegionRequestPathSelectorRegionMetadataOwnerReferencesBlockOwnerDeletion struct{}

func (UpdateRegionRequestPathSelectorRegionMetadataOwnerReferencesBlockOwnerDeletion) FieldPath() *UpdateRegionRequest_FieldSubPath {
	return &UpdateRegionRequest_FieldSubPath{
		selector: UpdateRegionRequest_FieldPathSelectorRegion,
		subPath:  region.NewRegionFieldPathBuilder().Metadata().OwnerReferences().BlockOwnerDeletion().FieldPath(),
	}
}

func (s UpdateRegionRequestPathSelectorRegionMetadataOwnerReferencesBlockOwnerDeletion) WithValue(value bool) *UpdateRegionRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateRegionRequest_FieldSubPathValue)
}

func (s UpdateRegionRequestPathSelectorRegionMetadataOwnerReferencesBlockOwnerDeletion) WithArrayOfValues(values []bool) *UpdateRegionRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateRegionRequest_FieldSubPathArrayOfValues)
}

type UpdateRegionRequestPathSelectorRegionMetadataShards struct{}

func (UpdateRegionRequestPathSelectorRegionMetadataShards) FieldPath() *UpdateRegionRequest_FieldSubPath {
	return &UpdateRegionRequest_FieldSubPath{
		selector: UpdateRegionRequest_FieldPathSelectorRegion,
		subPath:  region.NewRegionFieldPathBuilder().Metadata().Shards().FieldPath(),
	}
}

func (s UpdateRegionRequestPathSelectorRegionMetadataShards) WithValue(value map[string]int64) *UpdateRegionRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateRegionRequest_FieldSubPathValue)
}

func (s UpdateRegionRequestPathSelectorRegionMetadataShards) WithArrayOfValues(values []map[string]int64) *UpdateRegionRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateRegionRequest_FieldSubPathArrayOfValues)
}

func (UpdateRegionRequestPathSelectorRegionMetadataShards) WithKey(key string) UpdateRegionRequestMapPathSelectorRegionMetadataShards {
	return UpdateRegionRequestMapPathSelectorRegionMetadataShards{key: key}
}

type UpdateRegionRequestMapPathSelectorRegionMetadataShards struct {
	key string
}

func (s UpdateRegionRequestMapPathSelectorRegionMetadataShards) FieldPath() *UpdateRegionRequest_FieldSubPath {
	return &UpdateRegionRequest_FieldSubPath{
		selector: UpdateRegionRequest_FieldPathSelectorRegion,
		subPath:  region.NewRegionFieldPathBuilder().Metadata().Shards().WithKey(s.key).FieldPath(),
	}
}

func (s UpdateRegionRequestMapPathSelectorRegionMetadataShards) WithValue(value int64) *UpdateRegionRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateRegionRequest_FieldSubPathValue)
}

func (s UpdateRegionRequestMapPathSelectorRegionMetadataShards) WithArrayOfValues(values []int64) *UpdateRegionRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateRegionRequest_FieldSubPathArrayOfValues)
}

type UpdateRegionRequestPathSelectorRegionMetadataSyncing struct{}

func (UpdateRegionRequestPathSelectorRegionMetadataSyncing) FieldPath() *UpdateRegionRequest_FieldSubPath {
	return &UpdateRegionRequest_FieldSubPath{
		selector: UpdateRegionRequest_FieldPathSelectorRegion,
		subPath:  region.NewRegionFieldPathBuilder().Metadata().Syncing().FieldPath(),
	}
}

func (s UpdateRegionRequestPathSelectorRegionMetadataSyncing) WithValue(value *syncing_meta.SyncingMeta) *UpdateRegionRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateRegionRequest_FieldSubPathValue)
}

func (s UpdateRegionRequestPathSelectorRegionMetadataSyncing) WithArrayOfValues(values []*syncing_meta.SyncingMeta) *UpdateRegionRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateRegionRequest_FieldSubPathArrayOfValues)
}

func (UpdateRegionRequestPathSelectorRegionMetadataSyncing) OwningRegion() UpdateRegionRequestPathSelectorRegionMetadataSyncingOwningRegion {
	return UpdateRegionRequestPathSelectorRegionMetadataSyncingOwningRegion{}
}

func (UpdateRegionRequestPathSelectorRegionMetadataSyncing) Regions() UpdateRegionRequestPathSelectorRegionMetadataSyncingRegions {
	return UpdateRegionRequestPathSelectorRegionMetadataSyncingRegions{}
}

type UpdateRegionRequestPathSelectorRegionMetadataSyncingOwningRegion struct{}

func (UpdateRegionRequestPathSelectorRegionMetadataSyncingOwningRegion) FieldPath() *UpdateRegionRequest_FieldSubPath {
	return &UpdateRegionRequest_FieldSubPath{
		selector: UpdateRegionRequest_FieldPathSelectorRegion,
		subPath:  region.NewRegionFieldPathBuilder().Metadata().Syncing().OwningRegion().FieldPath(),
	}
}

func (s UpdateRegionRequestPathSelectorRegionMetadataSyncingOwningRegion) WithValue(value string) *UpdateRegionRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateRegionRequest_FieldSubPathValue)
}

func (s UpdateRegionRequestPathSelectorRegionMetadataSyncingOwningRegion) WithArrayOfValues(values []string) *UpdateRegionRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateRegionRequest_FieldSubPathArrayOfValues)
}

type UpdateRegionRequestPathSelectorRegionMetadataSyncingRegions struct{}

func (UpdateRegionRequestPathSelectorRegionMetadataSyncingRegions) FieldPath() *UpdateRegionRequest_FieldSubPath {
	return &UpdateRegionRequest_FieldSubPath{
		selector: UpdateRegionRequest_FieldPathSelectorRegion,
		subPath:  region.NewRegionFieldPathBuilder().Metadata().Syncing().Regions().FieldPath(),
	}
}

func (s UpdateRegionRequestPathSelectorRegionMetadataSyncingRegions) WithValue(value []string) *UpdateRegionRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateRegionRequest_FieldSubPathValue)
}

func (s UpdateRegionRequestPathSelectorRegionMetadataSyncingRegions) WithArrayOfValues(values [][]string) *UpdateRegionRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateRegionRequest_FieldSubPathArrayOfValues)
}

func (s UpdateRegionRequestPathSelectorRegionMetadataSyncingRegions) WithItemValue(value string) *UpdateRegionRequest_FieldSubPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*UpdateRegionRequest_FieldSubPathArrayItemValue)
}

type UpdateRegionRequestPathSelectorUpdateMask struct{}

func (UpdateRegionRequestPathSelectorUpdateMask) FieldPath() *UpdateRegionRequest_FieldTerminalPath {
	return &UpdateRegionRequest_FieldTerminalPath{selector: UpdateRegionRequest_FieldPathSelectorUpdateMask}
}

func (s UpdateRegionRequestPathSelectorUpdateMask) WithValue(value *region.Region_FieldMask) *UpdateRegionRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateRegionRequest_FieldTerminalPathValue)
}

func (s UpdateRegionRequestPathSelectorUpdateMask) WithArrayOfValues(values []*region.Region_FieldMask) *UpdateRegionRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateRegionRequest_FieldTerminalPathArrayOfValues)
}

type UpdateRegionRequestPathSelectorCas struct{}

func (UpdateRegionRequestPathSelectorCas) FieldPath() *UpdateRegionRequest_FieldTerminalPath {
	return &UpdateRegionRequest_FieldTerminalPath{selector: UpdateRegionRequest_FieldPathSelectorCas}
}

func (s UpdateRegionRequestPathSelectorCas) WithValue(value *UpdateRegionRequest_CAS) *UpdateRegionRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateRegionRequest_FieldTerminalPathValue)
}

func (s UpdateRegionRequestPathSelectorCas) WithArrayOfValues(values []*UpdateRegionRequest_CAS) *UpdateRegionRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateRegionRequest_FieldTerminalPathArrayOfValues)
}

func (UpdateRegionRequestPathSelectorCas) WithSubPath(subPath UpdateRegionRequestCAS_FieldPath) *UpdateRegionRequest_FieldSubPath {
	return &UpdateRegionRequest_FieldSubPath{selector: UpdateRegionRequest_FieldPathSelectorCas, subPath: subPath}
}

func (s UpdateRegionRequestPathSelectorCas) WithSubValue(subPathValue UpdateRegionRequestCAS_FieldPathValue) *UpdateRegionRequest_FieldSubPathValue {
	return &UpdateRegionRequest_FieldSubPathValue{UpdateRegionRequest_FieldPath: s.WithSubPath(subPathValue), subPathValue: subPathValue}
}

func (s UpdateRegionRequestPathSelectorCas) WithSubArrayOfValues(subPathArrayOfValues UpdateRegionRequestCAS_FieldPathArrayOfValues) *UpdateRegionRequest_FieldSubPathArrayOfValues {
	return &UpdateRegionRequest_FieldSubPathArrayOfValues{UpdateRegionRequest_FieldPath: s.WithSubPath(subPathArrayOfValues), subPathArrayOfValues: subPathArrayOfValues}
}

func (s UpdateRegionRequestPathSelectorCas) WithSubArrayItemValue(subPathArrayItemValue UpdateRegionRequestCAS_FieldPathArrayItemValue) *UpdateRegionRequest_FieldSubPathArrayItemValue {
	return &UpdateRegionRequest_FieldSubPathArrayItemValue{UpdateRegionRequest_FieldPath: s.WithSubPath(subPathArrayItemValue), subPathItemValue: subPathArrayItemValue}
}

func (UpdateRegionRequestPathSelectorCas) ConditionalState() UpdateRegionRequestPathSelectorCasConditionalState {
	return UpdateRegionRequestPathSelectorCasConditionalState{}
}

func (UpdateRegionRequestPathSelectorCas) FieldMask() UpdateRegionRequestPathSelectorCasFieldMask {
	return UpdateRegionRequestPathSelectorCasFieldMask{}
}

type UpdateRegionRequestPathSelectorCasConditionalState struct{}

func (UpdateRegionRequestPathSelectorCasConditionalState) FieldPath() *UpdateRegionRequest_FieldSubPath {
	return &UpdateRegionRequest_FieldSubPath{
		selector: UpdateRegionRequest_FieldPathSelectorCas,
		subPath:  NewUpdateRegionRequestCASFieldPathBuilder().ConditionalState().FieldPath(),
	}
}

func (s UpdateRegionRequestPathSelectorCasConditionalState) WithValue(value *region.Region) *UpdateRegionRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateRegionRequest_FieldSubPathValue)
}

func (s UpdateRegionRequestPathSelectorCasConditionalState) WithArrayOfValues(values []*region.Region) *UpdateRegionRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateRegionRequest_FieldSubPathArrayOfValues)
}

func (UpdateRegionRequestPathSelectorCasConditionalState) Name() UpdateRegionRequestPathSelectorCasConditionalStateName {
	return UpdateRegionRequestPathSelectorCasConditionalStateName{}
}

func (UpdateRegionRequestPathSelectorCasConditionalState) Title() UpdateRegionRequestPathSelectorCasConditionalStateTitle {
	return UpdateRegionRequestPathSelectorCasConditionalStateTitle{}
}

func (UpdateRegionRequestPathSelectorCasConditionalState) Domain() UpdateRegionRequestPathSelectorCasConditionalStateDomain {
	return UpdateRegionRequestPathSelectorCasConditionalStateDomain{}
}

func (UpdateRegionRequestPathSelectorCasConditionalState) Location() UpdateRegionRequestPathSelectorCasConditionalStateLocation {
	return UpdateRegionRequestPathSelectorCasConditionalStateLocation{}
}

func (UpdateRegionRequestPathSelectorCasConditionalState) IsDefault() UpdateRegionRequestPathSelectorCasConditionalStateIsDefault {
	return UpdateRegionRequestPathSelectorCasConditionalStateIsDefault{}
}

func (UpdateRegionRequestPathSelectorCasConditionalState) ConnectivityScores() UpdateRegionRequestPathSelectorCasConditionalStateConnectivityScores {
	return UpdateRegionRequestPathSelectorCasConditionalStateConnectivityScores{}
}

func (UpdateRegionRequestPathSelectorCasConditionalState) Metadata() UpdateRegionRequestPathSelectorCasConditionalStateMetadata {
	return UpdateRegionRequestPathSelectorCasConditionalStateMetadata{}
}

type UpdateRegionRequestPathSelectorCasConditionalStateName struct{}

func (UpdateRegionRequestPathSelectorCasConditionalStateName) FieldPath() *UpdateRegionRequest_FieldSubPath {
	return &UpdateRegionRequest_FieldSubPath{
		selector: UpdateRegionRequest_FieldPathSelectorCas,
		subPath:  NewUpdateRegionRequestCASFieldPathBuilder().ConditionalState().Name().FieldPath(),
	}
}

func (s UpdateRegionRequestPathSelectorCasConditionalStateName) WithValue(value *region.Name) *UpdateRegionRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateRegionRequest_FieldSubPathValue)
}

func (s UpdateRegionRequestPathSelectorCasConditionalStateName) WithArrayOfValues(values []*region.Name) *UpdateRegionRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateRegionRequest_FieldSubPathArrayOfValues)
}

type UpdateRegionRequestPathSelectorCasConditionalStateTitle struct{}

func (UpdateRegionRequestPathSelectorCasConditionalStateTitle) FieldPath() *UpdateRegionRequest_FieldSubPath {
	return &UpdateRegionRequest_FieldSubPath{
		selector: UpdateRegionRequest_FieldPathSelectorCas,
		subPath:  NewUpdateRegionRequestCASFieldPathBuilder().ConditionalState().Title().FieldPath(),
	}
}

func (s UpdateRegionRequestPathSelectorCasConditionalStateTitle) WithValue(value string) *UpdateRegionRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateRegionRequest_FieldSubPathValue)
}

func (s UpdateRegionRequestPathSelectorCasConditionalStateTitle) WithArrayOfValues(values []string) *UpdateRegionRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateRegionRequest_FieldSubPathArrayOfValues)
}

type UpdateRegionRequestPathSelectorCasConditionalStateDomain struct{}

func (UpdateRegionRequestPathSelectorCasConditionalStateDomain) FieldPath() *UpdateRegionRequest_FieldSubPath {
	return &UpdateRegionRequest_FieldSubPath{
		selector: UpdateRegionRequest_FieldPathSelectorCas,
		subPath:  NewUpdateRegionRequestCASFieldPathBuilder().ConditionalState().Domain().FieldPath(),
	}
}

func (s UpdateRegionRequestPathSelectorCasConditionalStateDomain) WithValue(value string) *UpdateRegionRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateRegionRequest_FieldSubPathValue)
}

func (s UpdateRegionRequestPathSelectorCasConditionalStateDomain) WithArrayOfValues(values []string) *UpdateRegionRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateRegionRequest_FieldSubPathArrayOfValues)
}

type UpdateRegionRequestPathSelectorCasConditionalStateLocation struct{}

func (UpdateRegionRequestPathSelectorCasConditionalStateLocation) FieldPath() *UpdateRegionRequest_FieldSubPath {
	return &UpdateRegionRequest_FieldSubPath{
		selector: UpdateRegionRequest_FieldPathSelectorCas,
		subPath:  NewUpdateRegionRequestCASFieldPathBuilder().ConditionalState().Location().FieldPath(),
	}
}

func (s UpdateRegionRequestPathSelectorCasConditionalStateLocation) WithValue(value *region.Region_RegionLocation) *UpdateRegionRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateRegionRequest_FieldSubPathValue)
}

func (s UpdateRegionRequestPathSelectorCasConditionalStateLocation) WithArrayOfValues(values []*region.Region_RegionLocation) *UpdateRegionRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateRegionRequest_FieldSubPathArrayOfValues)
}

func (UpdateRegionRequestPathSelectorCasConditionalStateLocation) Continent() UpdateRegionRequestPathSelectorCasConditionalStateLocationContinent {
	return UpdateRegionRequestPathSelectorCasConditionalStateLocationContinent{}
}

func (UpdateRegionRequestPathSelectorCasConditionalStateLocation) Country() UpdateRegionRequestPathSelectorCasConditionalStateLocationCountry {
	return UpdateRegionRequestPathSelectorCasConditionalStateLocationCountry{}
}

func (UpdateRegionRequestPathSelectorCasConditionalStateLocation) Agglomeration() UpdateRegionRequestPathSelectorCasConditionalStateLocationAgglomeration {
	return UpdateRegionRequestPathSelectorCasConditionalStateLocationAgglomeration{}
}

func (UpdateRegionRequestPathSelectorCasConditionalStateLocation) City() UpdateRegionRequestPathSelectorCasConditionalStateLocationCity {
	return UpdateRegionRequestPathSelectorCasConditionalStateLocationCity{}
}

func (UpdateRegionRequestPathSelectorCasConditionalStateLocation) Cloud() UpdateRegionRequestPathSelectorCasConditionalStateLocationCloud {
	return UpdateRegionRequestPathSelectorCasConditionalStateLocationCloud{}
}

type UpdateRegionRequestPathSelectorCasConditionalStateLocationContinent struct{}

func (UpdateRegionRequestPathSelectorCasConditionalStateLocationContinent) FieldPath() *UpdateRegionRequest_FieldSubPath {
	return &UpdateRegionRequest_FieldSubPath{
		selector: UpdateRegionRequest_FieldPathSelectorCas,
		subPath:  NewUpdateRegionRequestCASFieldPathBuilder().ConditionalState().Location().Continent().FieldPath(),
	}
}

func (s UpdateRegionRequestPathSelectorCasConditionalStateLocationContinent) WithValue(value string) *UpdateRegionRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateRegionRequest_FieldSubPathValue)
}

func (s UpdateRegionRequestPathSelectorCasConditionalStateLocationContinent) WithArrayOfValues(values []string) *UpdateRegionRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateRegionRequest_FieldSubPathArrayOfValues)
}

type UpdateRegionRequestPathSelectorCasConditionalStateLocationCountry struct{}

func (UpdateRegionRequestPathSelectorCasConditionalStateLocationCountry) FieldPath() *UpdateRegionRequest_FieldSubPath {
	return &UpdateRegionRequest_FieldSubPath{
		selector: UpdateRegionRequest_FieldPathSelectorCas,
		subPath:  NewUpdateRegionRequestCASFieldPathBuilder().ConditionalState().Location().Country().FieldPath(),
	}
}

func (s UpdateRegionRequestPathSelectorCasConditionalStateLocationCountry) WithValue(value string) *UpdateRegionRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateRegionRequest_FieldSubPathValue)
}

func (s UpdateRegionRequestPathSelectorCasConditionalStateLocationCountry) WithArrayOfValues(values []string) *UpdateRegionRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateRegionRequest_FieldSubPathArrayOfValues)
}

type UpdateRegionRequestPathSelectorCasConditionalStateLocationAgglomeration struct{}

func (UpdateRegionRequestPathSelectorCasConditionalStateLocationAgglomeration) FieldPath() *UpdateRegionRequest_FieldSubPath {
	return &UpdateRegionRequest_FieldSubPath{
		selector: UpdateRegionRequest_FieldPathSelectorCas,
		subPath:  NewUpdateRegionRequestCASFieldPathBuilder().ConditionalState().Location().Agglomeration().FieldPath(),
	}
}

func (s UpdateRegionRequestPathSelectorCasConditionalStateLocationAgglomeration) WithValue(value string) *UpdateRegionRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateRegionRequest_FieldSubPathValue)
}

func (s UpdateRegionRequestPathSelectorCasConditionalStateLocationAgglomeration) WithArrayOfValues(values []string) *UpdateRegionRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateRegionRequest_FieldSubPathArrayOfValues)
}

type UpdateRegionRequestPathSelectorCasConditionalStateLocationCity struct{}

func (UpdateRegionRequestPathSelectorCasConditionalStateLocationCity) FieldPath() *UpdateRegionRequest_FieldSubPath {
	return &UpdateRegionRequest_FieldSubPath{
		selector: UpdateRegionRequest_FieldPathSelectorCas,
		subPath:  NewUpdateRegionRequestCASFieldPathBuilder().ConditionalState().Location().City().FieldPath(),
	}
}

func (s UpdateRegionRequestPathSelectorCasConditionalStateLocationCity) WithValue(value string) *UpdateRegionRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateRegionRequest_FieldSubPathValue)
}

func (s UpdateRegionRequestPathSelectorCasConditionalStateLocationCity) WithArrayOfValues(values []string) *UpdateRegionRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateRegionRequest_FieldSubPathArrayOfValues)
}

type UpdateRegionRequestPathSelectorCasConditionalStateLocationCloud struct{}

func (UpdateRegionRequestPathSelectorCasConditionalStateLocationCloud) FieldPath() *UpdateRegionRequest_FieldSubPath {
	return &UpdateRegionRequest_FieldSubPath{
		selector: UpdateRegionRequest_FieldPathSelectorCas,
		subPath:  NewUpdateRegionRequestCASFieldPathBuilder().ConditionalState().Location().Cloud().FieldPath(),
	}
}

func (s UpdateRegionRequestPathSelectorCasConditionalStateLocationCloud) WithValue(value string) *UpdateRegionRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateRegionRequest_FieldSubPathValue)
}

func (s UpdateRegionRequestPathSelectorCasConditionalStateLocationCloud) WithArrayOfValues(values []string) *UpdateRegionRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateRegionRequest_FieldSubPathArrayOfValues)
}

type UpdateRegionRequestPathSelectorCasConditionalStateIsDefault struct{}

func (UpdateRegionRequestPathSelectorCasConditionalStateIsDefault) FieldPath() *UpdateRegionRequest_FieldSubPath {
	return &UpdateRegionRequest_FieldSubPath{
		selector: UpdateRegionRequest_FieldPathSelectorCas,
		subPath:  NewUpdateRegionRequestCASFieldPathBuilder().ConditionalState().IsDefault().FieldPath(),
	}
}

func (s UpdateRegionRequestPathSelectorCasConditionalStateIsDefault) WithValue(value bool) *UpdateRegionRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateRegionRequest_FieldSubPathValue)
}

func (s UpdateRegionRequestPathSelectorCasConditionalStateIsDefault) WithArrayOfValues(values []bool) *UpdateRegionRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateRegionRequest_FieldSubPathArrayOfValues)
}

type UpdateRegionRequestPathSelectorCasConditionalStateConnectivityScores struct{}

func (UpdateRegionRequestPathSelectorCasConditionalStateConnectivityScores) FieldPath() *UpdateRegionRequest_FieldSubPath {
	return &UpdateRegionRequest_FieldSubPath{
		selector: UpdateRegionRequest_FieldPathSelectorCas,
		subPath:  NewUpdateRegionRequestCASFieldPathBuilder().ConditionalState().ConnectivityScores().FieldPath(),
	}
}

func (s UpdateRegionRequestPathSelectorCasConditionalStateConnectivityScores) WithValue(value []*region.Region_RegionConnectivityPreference) *UpdateRegionRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateRegionRequest_FieldSubPathValue)
}

func (s UpdateRegionRequestPathSelectorCasConditionalStateConnectivityScores) WithArrayOfValues(values [][]*region.Region_RegionConnectivityPreference) *UpdateRegionRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateRegionRequest_FieldSubPathArrayOfValues)
}

func (s UpdateRegionRequestPathSelectorCasConditionalStateConnectivityScores) WithItemValue(value *region.Region_RegionConnectivityPreference) *UpdateRegionRequest_FieldSubPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*UpdateRegionRequest_FieldSubPathArrayItemValue)
}

func (UpdateRegionRequestPathSelectorCasConditionalStateConnectivityScores) Dest() UpdateRegionRequestPathSelectorCasConditionalStateConnectivityScoresDest {
	return UpdateRegionRequestPathSelectorCasConditionalStateConnectivityScoresDest{}
}

func (UpdateRegionRequestPathSelectorCasConditionalStateConnectivityScores) Score() UpdateRegionRequestPathSelectorCasConditionalStateConnectivityScoresScore {
	return UpdateRegionRequestPathSelectorCasConditionalStateConnectivityScoresScore{}
}

type UpdateRegionRequestPathSelectorCasConditionalStateConnectivityScoresDest struct{}

func (UpdateRegionRequestPathSelectorCasConditionalStateConnectivityScoresDest) FieldPath() *UpdateRegionRequest_FieldSubPath {
	return &UpdateRegionRequest_FieldSubPath{
		selector: UpdateRegionRequest_FieldPathSelectorCas,
		subPath:  NewUpdateRegionRequestCASFieldPathBuilder().ConditionalState().ConnectivityScores().Dest().FieldPath(),
	}
}

func (s UpdateRegionRequestPathSelectorCasConditionalStateConnectivityScoresDest) WithValue(value *region.Reference) *UpdateRegionRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateRegionRequest_FieldSubPathValue)
}

func (s UpdateRegionRequestPathSelectorCasConditionalStateConnectivityScoresDest) WithArrayOfValues(values []*region.Reference) *UpdateRegionRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateRegionRequest_FieldSubPathArrayOfValues)
}

type UpdateRegionRequestPathSelectorCasConditionalStateConnectivityScoresScore struct{}

func (UpdateRegionRequestPathSelectorCasConditionalStateConnectivityScoresScore) FieldPath() *UpdateRegionRequest_FieldSubPath {
	return &UpdateRegionRequest_FieldSubPath{
		selector: UpdateRegionRequest_FieldPathSelectorCas,
		subPath:  NewUpdateRegionRequestCASFieldPathBuilder().ConditionalState().ConnectivityScores().Score().FieldPath(),
	}
}

func (s UpdateRegionRequestPathSelectorCasConditionalStateConnectivityScoresScore) WithValue(value int32) *UpdateRegionRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateRegionRequest_FieldSubPathValue)
}

func (s UpdateRegionRequestPathSelectorCasConditionalStateConnectivityScoresScore) WithArrayOfValues(values []int32) *UpdateRegionRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateRegionRequest_FieldSubPathArrayOfValues)
}

type UpdateRegionRequestPathSelectorCasConditionalStateMetadata struct{}

func (UpdateRegionRequestPathSelectorCasConditionalStateMetadata) FieldPath() *UpdateRegionRequest_FieldSubPath {
	return &UpdateRegionRequest_FieldSubPath{
		selector: UpdateRegionRequest_FieldPathSelectorCas,
		subPath:  NewUpdateRegionRequestCASFieldPathBuilder().ConditionalState().Metadata().FieldPath(),
	}
}

func (s UpdateRegionRequestPathSelectorCasConditionalStateMetadata) WithValue(value *ntt_meta.Meta) *UpdateRegionRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateRegionRequest_FieldSubPathValue)
}

func (s UpdateRegionRequestPathSelectorCasConditionalStateMetadata) WithArrayOfValues(values []*ntt_meta.Meta) *UpdateRegionRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateRegionRequest_FieldSubPathArrayOfValues)
}

func (UpdateRegionRequestPathSelectorCasConditionalStateMetadata) CreateTime() UpdateRegionRequestPathSelectorCasConditionalStateMetadataCreateTime {
	return UpdateRegionRequestPathSelectorCasConditionalStateMetadataCreateTime{}
}

func (UpdateRegionRequestPathSelectorCasConditionalStateMetadata) UpdateTime() UpdateRegionRequestPathSelectorCasConditionalStateMetadataUpdateTime {
	return UpdateRegionRequestPathSelectorCasConditionalStateMetadataUpdateTime{}
}

func (UpdateRegionRequestPathSelectorCasConditionalStateMetadata) Uuid() UpdateRegionRequestPathSelectorCasConditionalStateMetadataUuid {
	return UpdateRegionRequestPathSelectorCasConditionalStateMetadataUuid{}
}

func (UpdateRegionRequestPathSelectorCasConditionalStateMetadata) Tags() UpdateRegionRequestPathSelectorCasConditionalStateMetadataTags {
	return UpdateRegionRequestPathSelectorCasConditionalStateMetadataTags{}
}

func (UpdateRegionRequestPathSelectorCasConditionalStateMetadata) Labels() UpdateRegionRequestPathSelectorCasConditionalStateMetadataLabels {
	return UpdateRegionRequestPathSelectorCasConditionalStateMetadataLabels{}
}

func (UpdateRegionRequestPathSelectorCasConditionalStateMetadata) Annotations() UpdateRegionRequestPathSelectorCasConditionalStateMetadataAnnotations {
	return UpdateRegionRequestPathSelectorCasConditionalStateMetadataAnnotations{}
}

func (UpdateRegionRequestPathSelectorCasConditionalStateMetadata) Generation() UpdateRegionRequestPathSelectorCasConditionalStateMetadataGeneration {
	return UpdateRegionRequestPathSelectorCasConditionalStateMetadataGeneration{}
}

func (UpdateRegionRequestPathSelectorCasConditionalStateMetadata) ResourceVersion() UpdateRegionRequestPathSelectorCasConditionalStateMetadataResourceVersion {
	return UpdateRegionRequestPathSelectorCasConditionalStateMetadataResourceVersion{}
}

func (UpdateRegionRequestPathSelectorCasConditionalStateMetadata) OwnerReferences() UpdateRegionRequestPathSelectorCasConditionalStateMetadataOwnerReferences {
	return UpdateRegionRequestPathSelectorCasConditionalStateMetadataOwnerReferences{}
}

func (UpdateRegionRequestPathSelectorCasConditionalStateMetadata) Shards() UpdateRegionRequestPathSelectorCasConditionalStateMetadataShards {
	return UpdateRegionRequestPathSelectorCasConditionalStateMetadataShards{}
}

func (UpdateRegionRequestPathSelectorCasConditionalStateMetadata) Syncing() UpdateRegionRequestPathSelectorCasConditionalStateMetadataSyncing {
	return UpdateRegionRequestPathSelectorCasConditionalStateMetadataSyncing{}
}

type UpdateRegionRequestPathSelectorCasConditionalStateMetadataCreateTime struct{}

func (UpdateRegionRequestPathSelectorCasConditionalStateMetadataCreateTime) FieldPath() *UpdateRegionRequest_FieldSubPath {
	return &UpdateRegionRequest_FieldSubPath{
		selector: UpdateRegionRequest_FieldPathSelectorCas,
		subPath:  NewUpdateRegionRequestCASFieldPathBuilder().ConditionalState().Metadata().CreateTime().FieldPath(),
	}
}

func (s UpdateRegionRequestPathSelectorCasConditionalStateMetadataCreateTime) WithValue(value *timestamp.Timestamp) *UpdateRegionRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateRegionRequest_FieldSubPathValue)
}

func (s UpdateRegionRequestPathSelectorCasConditionalStateMetadataCreateTime) WithArrayOfValues(values []*timestamp.Timestamp) *UpdateRegionRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateRegionRequest_FieldSubPathArrayOfValues)
}

type UpdateRegionRequestPathSelectorCasConditionalStateMetadataUpdateTime struct{}

func (UpdateRegionRequestPathSelectorCasConditionalStateMetadataUpdateTime) FieldPath() *UpdateRegionRequest_FieldSubPath {
	return &UpdateRegionRequest_FieldSubPath{
		selector: UpdateRegionRequest_FieldPathSelectorCas,
		subPath:  NewUpdateRegionRequestCASFieldPathBuilder().ConditionalState().Metadata().UpdateTime().FieldPath(),
	}
}

func (s UpdateRegionRequestPathSelectorCasConditionalStateMetadataUpdateTime) WithValue(value *timestamp.Timestamp) *UpdateRegionRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateRegionRequest_FieldSubPathValue)
}

func (s UpdateRegionRequestPathSelectorCasConditionalStateMetadataUpdateTime) WithArrayOfValues(values []*timestamp.Timestamp) *UpdateRegionRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateRegionRequest_FieldSubPathArrayOfValues)
}

type UpdateRegionRequestPathSelectorCasConditionalStateMetadataUuid struct{}

func (UpdateRegionRequestPathSelectorCasConditionalStateMetadataUuid) FieldPath() *UpdateRegionRequest_FieldSubPath {
	return &UpdateRegionRequest_FieldSubPath{
		selector: UpdateRegionRequest_FieldPathSelectorCas,
		subPath:  NewUpdateRegionRequestCASFieldPathBuilder().ConditionalState().Metadata().Uuid().FieldPath(),
	}
}

func (s UpdateRegionRequestPathSelectorCasConditionalStateMetadataUuid) WithValue(value string) *UpdateRegionRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateRegionRequest_FieldSubPathValue)
}

func (s UpdateRegionRequestPathSelectorCasConditionalStateMetadataUuid) WithArrayOfValues(values []string) *UpdateRegionRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateRegionRequest_FieldSubPathArrayOfValues)
}

type UpdateRegionRequestPathSelectorCasConditionalStateMetadataTags struct{}

func (UpdateRegionRequestPathSelectorCasConditionalStateMetadataTags) FieldPath() *UpdateRegionRequest_FieldSubPath {
	return &UpdateRegionRequest_FieldSubPath{
		selector: UpdateRegionRequest_FieldPathSelectorCas,
		subPath:  NewUpdateRegionRequestCASFieldPathBuilder().ConditionalState().Metadata().Tags().FieldPath(),
	}
}

func (s UpdateRegionRequestPathSelectorCasConditionalStateMetadataTags) WithValue(value []string) *UpdateRegionRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateRegionRequest_FieldSubPathValue)
}

func (s UpdateRegionRequestPathSelectorCasConditionalStateMetadataTags) WithArrayOfValues(values [][]string) *UpdateRegionRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateRegionRequest_FieldSubPathArrayOfValues)
}

func (s UpdateRegionRequestPathSelectorCasConditionalStateMetadataTags) WithItemValue(value string) *UpdateRegionRequest_FieldSubPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*UpdateRegionRequest_FieldSubPathArrayItemValue)
}

type UpdateRegionRequestPathSelectorCasConditionalStateMetadataLabels struct{}

func (UpdateRegionRequestPathSelectorCasConditionalStateMetadataLabels) FieldPath() *UpdateRegionRequest_FieldSubPath {
	return &UpdateRegionRequest_FieldSubPath{
		selector: UpdateRegionRequest_FieldPathSelectorCas,
		subPath:  NewUpdateRegionRequestCASFieldPathBuilder().ConditionalState().Metadata().Labels().FieldPath(),
	}
}

func (s UpdateRegionRequestPathSelectorCasConditionalStateMetadataLabels) WithValue(value map[string]string) *UpdateRegionRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateRegionRequest_FieldSubPathValue)
}

func (s UpdateRegionRequestPathSelectorCasConditionalStateMetadataLabels) WithArrayOfValues(values []map[string]string) *UpdateRegionRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateRegionRequest_FieldSubPathArrayOfValues)
}

func (UpdateRegionRequestPathSelectorCasConditionalStateMetadataLabels) WithKey(key string) UpdateRegionRequestMapPathSelectorCasConditionalStateMetadataLabels {
	return UpdateRegionRequestMapPathSelectorCasConditionalStateMetadataLabels{key: key}
}

type UpdateRegionRequestMapPathSelectorCasConditionalStateMetadataLabels struct {
	key string
}

func (s UpdateRegionRequestMapPathSelectorCasConditionalStateMetadataLabels) FieldPath() *UpdateRegionRequest_FieldSubPath {
	return &UpdateRegionRequest_FieldSubPath{
		selector: UpdateRegionRequest_FieldPathSelectorCas,
		subPath:  NewUpdateRegionRequestCASFieldPathBuilder().ConditionalState().Metadata().Labels().WithKey(s.key).FieldPath(),
	}
}

func (s UpdateRegionRequestMapPathSelectorCasConditionalStateMetadataLabels) WithValue(value string) *UpdateRegionRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateRegionRequest_FieldSubPathValue)
}

func (s UpdateRegionRequestMapPathSelectorCasConditionalStateMetadataLabels) WithArrayOfValues(values []string) *UpdateRegionRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateRegionRequest_FieldSubPathArrayOfValues)
}

type UpdateRegionRequestPathSelectorCasConditionalStateMetadataAnnotations struct{}

func (UpdateRegionRequestPathSelectorCasConditionalStateMetadataAnnotations) FieldPath() *UpdateRegionRequest_FieldSubPath {
	return &UpdateRegionRequest_FieldSubPath{
		selector: UpdateRegionRequest_FieldPathSelectorCas,
		subPath:  NewUpdateRegionRequestCASFieldPathBuilder().ConditionalState().Metadata().Annotations().FieldPath(),
	}
}

func (s UpdateRegionRequestPathSelectorCasConditionalStateMetadataAnnotations) WithValue(value map[string]string) *UpdateRegionRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateRegionRequest_FieldSubPathValue)
}

func (s UpdateRegionRequestPathSelectorCasConditionalStateMetadataAnnotations) WithArrayOfValues(values []map[string]string) *UpdateRegionRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateRegionRequest_FieldSubPathArrayOfValues)
}

func (UpdateRegionRequestPathSelectorCasConditionalStateMetadataAnnotations) WithKey(key string) UpdateRegionRequestMapPathSelectorCasConditionalStateMetadataAnnotations {
	return UpdateRegionRequestMapPathSelectorCasConditionalStateMetadataAnnotations{key: key}
}

type UpdateRegionRequestMapPathSelectorCasConditionalStateMetadataAnnotations struct {
	key string
}

func (s UpdateRegionRequestMapPathSelectorCasConditionalStateMetadataAnnotations) FieldPath() *UpdateRegionRequest_FieldSubPath {
	return &UpdateRegionRequest_FieldSubPath{
		selector: UpdateRegionRequest_FieldPathSelectorCas,
		subPath:  NewUpdateRegionRequestCASFieldPathBuilder().ConditionalState().Metadata().Annotations().WithKey(s.key).FieldPath(),
	}
}

func (s UpdateRegionRequestMapPathSelectorCasConditionalStateMetadataAnnotations) WithValue(value string) *UpdateRegionRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateRegionRequest_FieldSubPathValue)
}

func (s UpdateRegionRequestMapPathSelectorCasConditionalStateMetadataAnnotations) WithArrayOfValues(values []string) *UpdateRegionRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateRegionRequest_FieldSubPathArrayOfValues)
}

type UpdateRegionRequestPathSelectorCasConditionalStateMetadataGeneration struct{}

func (UpdateRegionRequestPathSelectorCasConditionalStateMetadataGeneration) FieldPath() *UpdateRegionRequest_FieldSubPath {
	return &UpdateRegionRequest_FieldSubPath{
		selector: UpdateRegionRequest_FieldPathSelectorCas,
		subPath:  NewUpdateRegionRequestCASFieldPathBuilder().ConditionalState().Metadata().Generation().FieldPath(),
	}
}

func (s UpdateRegionRequestPathSelectorCasConditionalStateMetadataGeneration) WithValue(value int64) *UpdateRegionRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateRegionRequest_FieldSubPathValue)
}

func (s UpdateRegionRequestPathSelectorCasConditionalStateMetadataGeneration) WithArrayOfValues(values []int64) *UpdateRegionRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateRegionRequest_FieldSubPathArrayOfValues)
}

type UpdateRegionRequestPathSelectorCasConditionalStateMetadataResourceVersion struct{}

func (UpdateRegionRequestPathSelectorCasConditionalStateMetadataResourceVersion) FieldPath() *UpdateRegionRequest_FieldSubPath {
	return &UpdateRegionRequest_FieldSubPath{
		selector: UpdateRegionRequest_FieldPathSelectorCas,
		subPath:  NewUpdateRegionRequestCASFieldPathBuilder().ConditionalState().Metadata().ResourceVersion().FieldPath(),
	}
}

func (s UpdateRegionRequestPathSelectorCasConditionalStateMetadataResourceVersion) WithValue(value string) *UpdateRegionRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateRegionRequest_FieldSubPathValue)
}

func (s UpdateRegionRequestPathSelectorCasConditionalStateMetadataResourceVersion) WithArrayOfValues(values []string) *UpdateRegionRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateRegionRequest_FieldSubPathArrayOfValues)
}

type UpdateRegionRequestPathSelectorCasConditionalStateMetadataOwnerReferences struct{}

func (UpdateRegionRequestPathSelectorCasConditionalStateMetadataOwnerReferences) FieldPath() *UpdateRegionRequest_FieldSubPath {
	return &UpdateRegionRequest_FieldSubPath{
		selector: UpdateRegionRequest_FieldPathSelectorCas,
		subPath:  NewUpdateRegionRequestCASFieldPathBuilder().ConditionalState().Metadata().OwnerReferences().FieldPath(),
	}
}

func (s UpdateRegionRequestPathSelectorCasConditionalStateMetadataOwnerReferences) WithValue(value []*ntt_meta.OwnerReference) *UpdateRegionRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateRegionRequest_FieldSubPathValue)
}

func (s UpdateRegionRequestPathSelectorCasConditionalStateMetadataOwnerReferences) WithArrayOfValues(values [][]*ntt_meta.OwnerReference) *UpdateRegionRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateRegionRequest_FieldSubPathArrayOfValues)
}

func (s UpdateRegionRequestPathSelectorCasConditionalStateMetadataOwnerReferences) WithItemValue(value *ntt_meta.OwnerReference) *UpdateRegionRequest_FieldSubPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*UpdateRegionRequest_FieldSubPathArrayItemValue)
}

func (UpdateRegionRequestPathSelectorCasConditionalStateMetadataOwnerReferences) ApiVersion() UpdateRegionRequestPathSelectorCasConditionalStateMetadataOwnerReferencesApiVersion {
	return UpdateRegionRequestPathSelectorCasConditionalStateMetadataOwnerReferencesApiVersion{}
}

func (UpdateRegionRequestPathSelectorCasConditionalStateMetadataOwnerReferences) Kind() UpdateRegionRequestPathSelectorCasConditionalStateMetadataOwnerReferencesKind {
	return UpdateRegionRequestPathSelectorCasConditionalStateMetadataOwnerReferencesKind{}
}

func (UpdateRegionRequestPathSelectorCasConditionalStateMetadataOwnerReferences) Name() UpdateRegionRequestPathSelectorCasConditionalStateMetadataOwnerReferencesName {
	return UpdateRegionRequestPathSelectorCasConditionalStateMetadataOwnerReferencesName{}
}

func (UpdateRegionRequestPathSelectorCasConditionalStateMetadataOwnerReferences) Uid() UpdateRegionRequestPathSelectorCasConditionalStateMetadataOwnerReferencesUid {
	return UpdateRegionRequestPathSelectorCasConditionalStateMetadataOwnerReferencesUid{}
}

func (UpdateRegionRequestPathSelectorCasConditionalStateMetadataOwnerReferences) Controller() UpdateRegionRequestPathSelectorCasConditionalStateMetadataOwnerReferencesController {
	return UpdateRegionRequestPathSelectorCasConditionalStateMetadataOwnerReferencesController{}
}

func (UpdateRegionRequestPathSelectorCasConditionalStateMetadataOwnerReferences) BlockOwnerDeletion() UpdateRegionRequestPathSelectorCasConditionalStateMetadataOwnerReferencesBlockOwnerDeletion {
	return UpdateRegionRequestPathSelectorCasConditionalStateMetadataOwnerReferencesBlockOwnerDeletion{}
}

type UpdateRegionRequestPathSelectorCasConditionalStateMetadataOwnerReferencesApiVersion struct{}

func (UpdateRegionRequestPathSelectorCasConditionalStateMetadataOwnerReferencesApiVersion) FieldPath() *UpdateRegionRequest_FieldSubPath {
	return &UpdateRegionRequest_FieldSubPath{
		selector: UpdateRegionRequest_FieldPathSelectorCas,
		subPath:  NewUpdateRegionRequestCASFieldPathBuilder().ConditionalState().Metadata().OwnerReferences().ApiVersion().FieldPath(),
	}
}

func (s UpdateRegionRequestPathSelectorCasConditionalStateMetadataOwnerReferencesApiVersion) WithValue(value string) *UpdateRegionRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateRegionRequest_FieldSubPathValue)
}

func (s UpdateRegionRequestPathSelectorCasConditionalStateMetadataOwnerReferencesApiVersion) WithArrayOfValues(values []string) *UpdateRegionRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateRegionRequest_FieldSubPathArrayOfValues)
}

type UpdateRegionRequestPathSelectorCasConditionalStateMetadataOwnerReferencesKind struct{}

func (UpdateRegionRequestPathSelectorCasConditionalStateMetadataOwnerReferencesKind) FieldPath() *UpdateRegionRequest_FieldSubPath {
	return &UpdateRegionRequest_FieldSubPath{
		selector: UpdateRegionRequest_FieldPathSelectorCas,
		subPath:  NewUpdateRegionRequestCASFieldPathBuilder().ConditionalState().Metadata().OwnerReferences().Kind().FieldPath(),
	}
}

func (s UpdateRegionRequestPathSelectorCasConditionalStateMetadataOwnerReferencesKind) WithValue(value string) *UpdateRegionRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateRegionRequest_FieldSubPathValue)
}

func (s UpdateRegionRequestPathSelectorCasConditionalStateMetadataOwnerReferencesKind) WithArrayOfValues(values []string) *UpdateRegionRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateRegionRequest_FieldSubPathArrayOfValues)
}

type UpdateRegionRequestPathSelectorCasConditionalStateMetadataOwnerReferencesName struct{}

func (UpdateRegionRequestPathSelectorCasConditionalStateMetadataOwnerReferencesName) FieldPath() *UpdateRegionRequest_FieldSubPath {
	return &UpdateRegionRequest_FieldSubPath{
		selector: UpdateRegionRequest_FieldPathSelectorCas,
		subPath:  NewUpdateRegionRequestCASFieldPathBuilder().ConditionalState().Metadata().OwnerReferences().Name().FieldPath(),
	}
}

func (s UpdateRegionRequestPathSelectorCasConditionalStateMetadataOwnerReferencesName) WithValue(value string) *UpdateRegionRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateRegionRequest_FieldSubPathValue)
}

func (s UpdateRegionRequestPathSelectorCasConditionalStateMetadataOwnerReferencesName) WithArrayOfValues(values []string) *UpdateRegionRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateRegionRequest_FieldSubPathArrayOfValues)
}

type UpdateRegionRequestPathSelectorCasConditionalStateMetadataOwnerReferencesUid struct{}

func (UpdateRegionRequestPathSelectorCasConditionalStateMetadataOwnerReferencesUid) FieldPath() *UpdateRegionRequest_FieldSubPath {
	return &UpdateRegionRequest_FieldSubPath{
		selector: UpdateRegionRequest_FieldPathSelectorCas,
		subPath:  NewUpdateRegionRequestCASFieldPathBuilder().ConditionalState().Metadata().OwnerReferences().Uid().FieldPath(),
	}
}

func (s UpdateRegionRequestPathSelectorCasConditionalStateMetadataOwnerReferencesUid) WithValue(value string) *UpdateRegionRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateRegionRequest_FieldSubPathValue)
}

func (s UpdateRegionRequestPathSelectorCasConditionalStateMetadataOwnerReferencesUid) WithArrayOfValues(values []string) *UpdateRegionRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateRegionRequest_FieldSubPathArrayOfValues)
}

type UpdateRegionRequestPathSelectorCasConditionalStateMetadataOwnerReferencesController struct{}

func (UpdateRegionRequestPathSelectorCasConditionalStateMetadataOwnerReferencesController) FieldPath() *UpdateRegionRequest_FieldSubPath {
	return &UpdateRegionRequest_FieldSubPath{
		selector: UpdateRegionRequest_FieldPathSelectorCas,
		subPath:  NewUpdateRegionRequestCASFieldPathBuilder().ConditionalState().Metadata().OwnerReferences().Controller().FieldPath(),
	}
}

func (s UpdateRegionRequestPathSelectorCasConditionalStateMetadataOwnerReferencesController) WithValue(value bool) *UpdateRegionRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateRegionRequest_FieldSubPathValue)
}

func (s UpdateRegionRequestPathSelectorCasConditionalStateMetadataOwnerReferencesController) WithArrayOfValues(values []bool) *UpdateRegionRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateRegionRequest_FieldSubPathArrayOfValues)
}

type UpdateRegionRequestPathSelectorCasConditionalStateMetadataOwnerReferencesBlockOwnerDeletion struct{}

func (UpdateRegionRequestPathSelectorCasConditionalStateMetadataOwnerReferencesBlockOwnerDeletion) FieldPath() *UpdateRegionRequest_FieldSubPath {
	return &UpdateRegionRequest_FieldSubPath{
		selector: UpdateRegionRequest_FieldPathSelectorCas,
		subPath:  NewUpdateRegionRequestCASFieldPathBuilder().ConditionalState().Metadata().OwnerReferences().BlockOwnerDeletion().FieldPath(),
	}
}

func (s UpdateRegionRequestPathSelectorCasConditionalStateMetadataOwnerReferencesBlockOwnerDeletion) WithValue(value bool) *UpdateRegionRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateRegionRequest_FieldSubPathValue)
}

func (s UpdateRegionRequestPathSelectorCasConditionalStateMetadataOwnerReferencesBlockOwnerDeletion) WithArrayOfValues(values []bool) *UpdateRegionRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateRegionRequest_FieldSubPathArrayOfValues)
}

type UpdateRegionRequestPathSelectorCasConditionalStateMetadataShards struct{}

func (UpdateRegionRequestPathSelectorCasConditionalStateMetadataShards) FieldPath() *UpdateRegionRequest_FieldSubPath {
	return &UpdateRegionRequest_FieldSubPath{
		selector: UpdateRegionRequest_FieldPathSelectorCas,
		subPath:  NewUpdateRegionRequestCASFieldPathBuilder().ConditionalState().Metadata().Shards().FieldPath(),
	}
}

func (s UpdateRegionRequestPathSelectorCasConditionalStateMetadataShards) WithValue(value map[string]int64) *UpdateRegionRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateRegionRequest_FieldSubPathValue)
}

func (s UpdateRegionRequestPathSelectorCasConditionalStateMetadataShards) WithArrayOfValues(values []map[string]int64) *UpdateRegionRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateRegionRequest_FieldSubPathArrayOfValues)
}

func (UpdateRegionRequestPathSelectorCasConditionalStateMetadataShards) WithKey(key string) UpdateRegionRequestMapPathSelectorCasConditionalStateMetadataShards {
	return UpdateRegionRequestMapPathSelectorCasConditionalStateMetadataShards{key: key}
}

type UpdateRegionRequestMapPathSelectorCasConditionalStateMetadataShards struct {
	key string
}

func (s UpdateRegionRequestMapPathSelectorCasConditionalStateMetadataShards) FieldPath() *UpdateRegionRequest_FieldSubPath {
	return &UpdateRegionRequest_FieldSubPath{
		selector: UpdateRegionRequest_FieldPathSelectorCas,
		subPath:  NewUpdateRegionRequestCASFieldPathBuilder().ConditionalState().Metadata().Shards().WithKey(s.key).FieldPath(),
	}
}

func (s UpdateRegionRequestMapPathSelectorCasConditionalStateMetadataShards) WithValue(value int64) *UpdateRegionRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateRegionRequest_FieldSubPathValue)
}

func (s UpdateRegionRequestMapPathSelectorCasConditionalStateMetadataShards) WithArrayOfValues(values []int64) *UpdateRegionRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateRegionRequest_FieldSubPathArrayOfValues)
}

type UpdateRegionRequestPathSelectorCasConditionalStateMetadataSyncing struct{}

func (UpdateRegionRequestPathSelectorCasConditionalStateMetadataSyncing) FieldPath() *UpdateRegionRequest_FieldSubPath {
	return &UpdateRegionRequest_FieldSubPath{
		selector: UpdateRegionRequest_FieldPathSelectorCas,
		subPath:  NewUpdateRegionRequestCASFieldPathBuilder().ConditionalState().Metadata().Syncing().FieldPath(),
	}
}

func (s UpdateRegionRequestPathSelectorCasConditionalStateMetadataSyncing) WithValue(value *syncing_meta.SyncingMeta) *UpdateRegionRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateRegionRequest_FieldSubPathValue)
}

func (s UpdateRegionRequestPathSelectorCasConditionalStateMetadataSyncing) WithArrayOfValues(values []*syncing_meta.SyncingMeta) *UpdateRegionRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateRegionRequest_FieldSubPathArrayOfValues)
}

func (UpdateRegionRequestPathSelectorCasConditionalStateMetadataSyncing) OwningRegion() UpdateRegionRequestPathSelectorCasConditionalStateMetadataSyncingOwningRegion {
	return UpdateRegionRequestPathSelectorCasConditionalStateMetadataSyncingOwningRegion{}
}

func (UpdateRegionRequestPathSelectorCasConditionalStateMetadataSyncing) Regions() UpdateRegionRequestPathSelectorCasConditionalStateMetadataSyncingRegions {
	return UpdateRegionRequestPathSelectorCasConditionalStateMetadataSyncingRegions{}
}

type UpdateRegionRequestPathSelectorCasConditionalStateMetadataSyncingOwningRegion struct{}

func (UpdateRegionRequestPathSelectorCasConditionalStateMetadataSyncingOwningRegion) FieldPath() *UpdateRegionRequest_FieldSubPath {
	return &UpdateRegionRequest_FieldSubPath{
		selector: UpdateRegionRequest_FieldPathSelectorCas,
		subPath:  NewUpdateRegionRequestCASFieldPathBuilder().ConditionalState().Metadata().Syncing().OwningRegion().FieldPath(),
	}
}

func (s UpdateRegionRequestPathSelectorCasConditionalStateMetadataSyncingOwningRegion) WithValue(value string) *UpdateRegionRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateRegionRequest_FieldSubPathValue)
}

func (s UpdateRegionRequestPathSelectorCasConditionalStateMetadataSyncingOwningRegion) WithArrayOfValues(values []string) *UpdateRegionRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateRegionRequest_FieldSubPathArrayOfValues)
}

type UpdateRegionRequestPathSelectorCasConditionalStateMetadataSyncingRegions struct{}

func (UpdateRegionRequestPathSelectorCasConditionalStateMetadataSyncingRegions) FieldPath() *UpdateRegionRequest_FieldSubPath {
	return &UpdateRegionRequest_FieldSubPath{
		selector: UpdateRegionRequest_FieldPathSelectorCas,
		subPath:  NewUpdateRegionRequestCASFieldPathBuilder().ConditionalState().Metadata().Syncing().Regions().FieldPath(),
	}
}

func (s UpdateRegionRequestPathSelectorCasConditionalStateMetadataSyncingRegions) WithValue(value []string) *UpdateRegionRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateRegionRequest_FieldSubPathValue)
}

func (s UpdateRegionRequestPathSelectorCasConditionalStateMetadataSyncingRegions) WithArrayOfValues(values [][]string) *UpdateRegionRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateRegionRequest_FieldSubPathArrayOfValues)
}

func (s UpdateRegionRequestPathSelectorCasConditionalStateMetadataSyncingRegions) WithItemValue(value string) *UpdateRegionRequest_FieldSubPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*UpdateRegionRequest_FieldSubPathArrayItemValue)
}

type UpdateRegionRequestPathSelectorCasFieldMask struct{}

func (UpdateRegionRequestPathSelectorCasFieldMask) FieldPath() *UpdateRegionRequest_FieldSubPath {
	return &UpdateRegionRequest_FieldSubPath{
		selector: UpdateRegionRequest_FieldPathSelectorCas,
		subPath:  NewUpdateRegionRequestCASFieldPathBuilder().FieldMask().FieldPath(),
	}
}

func (s UpdateRegionRequestPathSelectorCasFieldMask) WithValue(value *region.Region_FieldMask) *UpdateRegionRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateRegionRequest_FieldSubPathValue)
}

func (s UpdateRegionRequestPathSelectorCasFieldMask) WithArrayOfValues(values []*region.Region_FieldMask) *UpdateRegionRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateRegionRequest_FieldSubPathArrayOfValues)
}

type UpdateRegionRequestCASFieldPathBuilder struct{}

func NewUpdateRegionRequestCASFieldPathBuilder() UpdateRegionRequestCASFieldPathBuilder {
	return UpdateRegionRequestCASFieldPathBuilder{}
}
func (UpdateRegionRequestCASFieldPathBuilder) ConditionalState() UpdateRegionRequest_CASPathSelectorConditionalState {
	return UpdateRegionRequest_CASPathSelectorConditionalState{}
}
func (UpdateRegionRequestCASFieldPathBuilder) FieldMask() UpdateRegionRequest_CASPathSelectorFieldMask {
	return UpdateRegionRequest_CASPathSelectorFieldMask{}
}

type UpdateRegionRequest_CASPathSelectorConditionalState struct{}

func (UpdateRegionRequest_CASPathSelectorConditionalState) FieldPath() *UpdateRegionRequestCAS_FieldTerminalPath {
	return &UpdateRegionRequestCAS_FieldTerminalPath{selector: UpdateRegionRequestCAS_FieldPathSelectorConditionalState}
}

func (s UpdateRegionRequest_CASPathSelectorConditionalState) WithValue(value *region.Region) *UpdateRegionRequestCAS_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateRegionRequestCAS_FieldTerminalPathValue)
}

func (s UpdateRegionRequest_CASPathSelectorConditionalState) WithArrayOfValues(values []*region.Region) *UpdateRegionRequestCAS_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateRegionRequestCAS_FieldTerminalPathArrayOfValues)
}

func (UpdateRegionRequest_CASPathSelectorConditionalState) WithSubPath(subPath region.Region_FieldPath) *UpdateRegionRequestCAS_FieldSubPath {
	return &UpdateRegionRequestCAS_FieldSubPath{selector: UpdateRegionRequestCAS_FieldPathSelectorConditionalState, subPath: subPath}
}

func (s UpdateRegionRequest_CASPathSelectorConditionalState) WithSubValue(subPathValue region.Region_FieldPathValue) *UpdateRegionRequestCAS_FieldSubPathValue {
	return &UpdateRegionRequestCAS_FieldSubPathValue{UpdateRegionRequestCAS_FieldPath: s.WithSubPath(subPathValue), subPathValue: subPathValue}
}

func (s UpdateRegionRequest_CASPathSelectorConditionalState) WithSubArrayOfValues(subPathArrayOfValues region.Region_FieldPathArrayOfValues) *UpdateRegionRequestCAS_FieldSubPathArrayOfValues {
	return &UpdateRegionRequestCAS_FieldSubPathArrayOfValues{UpdateRegionRequestCAS_FieldPath: s.WithSubPath(subPathArrayOfValues), subPathArrayOfValues: subPathArrayOfValues}
}

func (s UpdateRegionRequest_CASPathSelectorConditionalState) WithSubArrayItemValue(subPathArrayItemValue region.Region_FieldPathArrayItemValue) *UpdateRegionRequestCAS_FieldSubPathArrayItemValue {
	return &UpdateRegionRequestCAS_FieldSubPathArrayItemValue{UpdateRegionRequestCAS_FieldPath: s.WithSubPath(subPathArrayItemValue), subPathItemValue: subPathArrayItemValue}
}

func (UpdateRegionRequest_CASPathSelectorConditionalState) Name() UpdateRegionRequest_CASPathSelectorConditionalStateName {
	return UpdateRegionRequest_CASPathSelectorConditionalStateName{}
}

func (UpdateRegionRequest_CASPathSelectorConditionalState) Title() UpdateRegionRequest_CASPathSelectorConditionalStateTitle {
	return UpdateRegionRequest_CASPathSelectorConditionalStateTitle{}
}

func (UpdateRegionRequest_CASPathSelectorConditionalState) Domain() UpdateRegionRequest_CASPathSelectorConditionalStateDomain {
	return UpdateRegionRequest_CASPathSelectorConditionalStateDomain{}
}

func (UpdateRegionRequest_CASPathSelectorConditionalState) Location() UpdateRegionRequest_CASPathSelectorConditionalStateLocation {
	return UpdateRegionRequest_CASPathSelectorConditionalStateLocation{}
}

func (UpdateRegionRequest_CASPathSelectorConditionalState) IsDefault() UpdateRegionRequest_CASPathSelectorConditionalStateIsDefault {
	return UpdateRegionRequest_CASPathSelectorConditionalStateIsDefault{}
}

func (UpdateRegionRequest_CASPathSelectorConditionalState) ConnectivityScores() UpdateRegionRequest_CASPathSelectorConditionalStateConnectivityScores {
	return UpdateRegionRequest_CASPathSelectorConditionalStateConnectivityScores{}
}

func (UpdateRegionRequest_CASPathSelectorConditionalState) Metadata() UpdateRegionRequest_CASPathSelectorConditionalStateMetadata {
	return UpdateRegionRequest_CASPathSelectorConditionalStateMetadata{}
}

type UpdateRegionRequest_CASPathSelectorConditionalStateName struct{}

func (UpdateRegionRequest_CASPathSelectorConditionalStateName) FieldPath() *UpdateRegionRequestCAS_FieldSubPath {
	return &UpdateRegionRequestCAS_FieldSubPath{
		selector: UpdateRegionRequestCAS_FieldPathSelectorConditionalState,
		subPath:  region.NewRegionFieldPathBuilder().Name().FieldPath(),
	}
}

func (s UpdateRegionRequest_CASPathSelectorConditionalStateName) WithValue(value *region.Name) *UpdateRegionRequestCAS_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateRegionRequestCAS_FieldSubPathValue)
}

func (s UpdateRegionRequest_CASPathSelectorConditionalStateName) WithArrayOfValues(values []*region.Name) *UpdateRegionRequestCAS_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateRegionRequestCAS_FieldSubPathArrayOfValues)
}

type UpdateRegionRequest_CASPathSelectorConditionalStateTitle struct{}

func (UpdateRegionRequest_CASPathSelectorConditionalStateTitle) FieldPath() *UpdateRegionRequestCAS_FieldSubPath {
	return &UpdateRegionRequestCAS_FieldSubPath{
		selector: UpdateRegionRequestCAS_FieldPathSelectorConditionalState,
		subPath:  region.NewRegionFieldPathBuilder().Title().FieldPath(),
	}
}

func (s UpdateRegionRequest_CASPathSelectorConditionalStateTitle) WithValue(value string) *UpdateRegionRequestCAS_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateRegionRequestCAS_FieldSubPathValue)
}

func (s UpdateRegionRequest_CASPathSelectorConditionalStateTitle) WithArrayOfValues(values []string) *UpdateRegionRequestCAS_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateRegionRequestCAS_FieldSubPathArrayOfValues)
}

type UpdateRegionRequest_CASPathSelectorConditionalStateDomain struct{}

func (UpdateRegionRequest_CASPathSelectorConditionalStateDomain) FieldPath() *UpdateRegionRequestCAS_FieldSubPath {
	return &UpdateRegionRequestCAS_FieldSubPath{
		selector: UpdateRegionRequestCAS_FieldPathSelectorConditionalState,
		subPath:  region.NewRegionFieldPathBuilder().Domain().FieldPath(),
	}
}

func (s UpdateRegionRequest_CASPathSelectorConditionalStateDomain) WithValue(value string) *UpdateRegionRequestCAS_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateRegionRequestCAS_FieldSubPathValue)
}

func (s UpdateRegionRequest_CASPathSelectorConditionalStateDomain) WithArrayOfValues(values []string) *UpdateRegionRequestCAS_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateRegionRequestCAS_FieldSubPathArrayOfValues)
}

type UpdateRegionRequest_CASPathSelectorConditionalStateLocation struct{}

func (UpdateRegionRequest_CASPathSelectorConditionalStateLocation) FieldPath() *UpdateRegionRequestCAS_FieldSubPath {
	return &UpdateRegionRequestCAS_FieldSubPath{
		selector: UpdateRegionRequestCAS_FieldPathSelectorConditionalState,
		subPath:  region.NewRegionFieldPathBuilder().Location().FieldPath(),
	}
}

func (s UpdateRegionRequest_CASPathSelectorConditionalStateLocation) WithValue(value *region.Region_RegionLocation) *UpdateRegionRequestCAS_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateRegionRequestCAS_FieldSubPathValue)
}

func (s UpdateRegionRequest_CASPathSelectorConditionalStateLocation) WithArrayOfValues(values []*region.Region_RegionLocation) *UpdateRegionRequestCAS_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateRegionRequestCAS_FieldSubPathArrayOfValues)
}

func (UpdateRegionRequest_CASPathSelectorConditionalStateLocation) Continent() UpdateRegionRequest_CASPathSelectorConditionalStateLocationContinent {
	return UpdateRegionRequest_CASPathSelectorConditionalStateLocationContinent{}
}

func (UpdateRegionRequest_CASPathSelectorConditionalStateLocation) Country() UpdateRegionRequest_CASPathSelectorConditionalStateLocationCountry {
	return UpdateRegionRequest_CASPathSelectorConditionalStateLocationCountry{}
}

func (UpdateRegionRequest_CASPathSelectorConditionalStateLocation) Agglomeration() UpdateRegionRequest_CASPathSelectorConditionalStateLocationAgglomeration {
	return UpdateRegionRequest_CASPathSelectorConditionalStateLocationAgglomeration{}
}

func (UpdateRegionRequest_CASPathSelectorConditionalStateLocation) City() UpdateRegionRequest_CASPathSelectorConditionalStateLocationCity {
	return UpdateRegionRequest_CASPathSelectorConditionalStateLocationCity{}
}

func (UpdateRegionRequest_CASPathSelectorConditionalStateLocation) Cloud() UpdateRegionRequest_CASPathSelectorConditionalStateLocationCloud {
	return UpdateRegionRequest_CASPathSelectorConditionalStateLocationCloud{}
}

type UpdateRegionRequest_CASPathSelectorConditionalStateLocationContinent struct{}

func (UpdateRegionRequest_CASPathSelectorConditionalStateLocationContinent) FieldPath() *UpdateRegionRequestCAS_FieldSubPath {
	return &UpdateRegionRequestCAS_FieldSubPath{
		selector: UpdateRegionRequestCAS_FieldPathSelectorConditionalState,
		subPath:  region.NewRegionFieldPathBuilder().Location().Continent().FieldPath(),
	}
}

func (s UpdateRegionRequest_CASPathSelectorConditionalStateLocationContinent) WithValue(value string) *UpdateRegionRequestCAS_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateRegionRequestCAS_FieldSubPathValue)
}

func (s UpdateRegionRequest_CASPathSelectorConditionalStateLocationContinent) WithArrayOfValues(values []string) *UpdateRegionRequestCAS_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateRegionRequestCAS_FieldSubPathArrayOfValues)
}

type UpdateRegionRequest_CASPathSelectorConditionalStateLocationCountry struct{}

func (UpdateRegionRequest_CASPathSelectorConditionalStateLocationCountry) FieldPath() *UpdateRegionRequestCAS_FieldSubPath {
	return &UpdateRegionRequestCAS_FieldSubPath{
		selector: UpdateRegionRequestCAS_FieldPathSelectorConditionalState,
		subPath:  region.NewRegionFieldPathBuilder().Location().Country().FieldPath(),
	}
}

func (s UpdateRegionRequest_CASPathSelectorConditionalStateLocationCountry) WithValue(value string) *UpdateRegionRequestCAS_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateRegionRequestCAS_FieldSubPathValue)
}

func (s UpdateRegionRequest_CASPathSelectorConditionalStateLocationCountry) WithArrayOfValues(values []string) *UpdateRegionRequestCAS_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateRegionRequestCAS_FieldSubPathArrayOfValues)
}

type UpdateRegionRequest_CASPathSelectorConditionalStateLocationAgglomeration struct{}

func (UpdateRegionRequest_CASPathSelectorConditionalStateLocationAgglomeration) FieldPath() *UpdateRegionRequestCAS_FieldSubPath {
	return &UpdateRegionRequestCAS_FieldSubPath{
		selector: UpdateRegionRequestCAS_FieldPathSelectorConditionalState,
		subPath:  region.NewRegionFieldPathBuilder().Location().Agglomeration().FieldPath(),
	}
}

func (s UpdateRegionRequest_CASPathSelectorConditionalStateLocationAgglomeration) WithValue(value string) *UpdateRegionRequestCAS_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateRegionRequestCAS_FieldSubPathValue)
}

func (s UpdateRegionRequest_CASPathSelectorConditionalStateLocationAgglomeration) WithArrayOfValues(values []string) *UpdateRegionRequestCAS_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateRegionRequestCAS_FieldSubPathArrayOfValues)
}

type UpdateRegionRequest_CASPathSelectorConditionalStateLocationCity struct{}

func (UpdateRegionRequest_CASPathSelectorConditionalStateLocationCity) FieldPath() *UpdateRegionRequestCAS_FieldSubPath {
	return &UpdateRegionRequestCAS_FieldSubPath{
		selector: UpdateRegionRequestCAS_FieldPathSelectorConditionalState,
		subPath:  region.NewRegionFieldPathBuilder().Location().City().FieldPath(),
	}
}

func (s UpdateRegionRequest_CASPathSelectorConditionalStateLocationCity) WithValue(value string) *UpdateRegionRequestCAS_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateRegionRequestCAS_FieldSubPathValue)
}

func (s UpdateRegionRequest_CASPathSelectorConditionalStateLocationCity) WithArrayOfValues(values []string) *UpdateRegionRequestCAS_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateRegionRequestCAS_FieldSubPathArrayOfValues)
}

type UpdateRegionRequest_CASPathSelectorConditionalStateLocationCloud struct{}

func (UpdateRegionRequest_CASPathSelectorConditionalStateLocationCloud) FieldPath() *UpdateRegionRequestCAS_FieldSubPath {
	return &UpdateRegionRequestCAS_FieldSubPath{
		selector: UpdateRegionRequestCAS_FieldPathSelectorConditionalState,
		subPath:  region.NewRegionFieldPathBuilder().Location().Cloud().FieldPath(),
	}
}

func (s UpdateRegionRequest_CASPathSelectorConditionalStateLocationCloud) WithValue(value string) *UpdateRegionRequestCAS_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateRegionRequestCAS_FieldSubPathValue)
}

func (s UpdateRegionRequest_CASPathSelectorConditionalStateLocationCloud) WithArrayOfValues(values []string) *UpdateRegionRequestCAS_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateRegionRequestCAS_FieldSubPathArrayOfValues)
}

type UpdateRegionRequest_CASPathSelectorConditionalStateIsDefault struct{}

func (UpdateRegionRequest_CASPathSelectorConditionalStateIsDefault) FieldPath() *UpdateRegionRequestCAS_FieldSubPath {
	return &UpdateRegionRequestCAS_FieldSubPath{
		selector: UpdateRegionRequestCAS_FieldPathSelectorConditionalState,
		subPath:  region.NewRegionFieldPathBuilder().IsDefault().FieldPath(),
	}
}

func (s UpdateRegionRequest_CASPathSelectorConditionalStateIsDefault) WithValue(value bool) *UpdateRegionRequestCAS_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateRegionRequestCAS_FieldSubPathValue)
}

func (s UpdateRegionRequest_CASPathSelectorConditionalStateIsDefault) WithArrayOfValues(values []bool) *UpdateRegionRequestCAS_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateRegionRequestCAS_FieldSubPathArrayOfValues)
}

type UpdateRegionRequest_CASPathSelectorConditionalStateConnectivityScores struct{}

func (UpdateRegionRequest_CASPathSelectorConditionalStateConnectivityScores) FieldPath() *UpdateRegionRequestCAS_FieldSubPath {
	return &UpdateRegionRequestCAS_FieldSubPath{
		selector: UpdateRegionRequestCAS_FieldPathSelectorConditionalState,
		subPath:  region.NewRegionFieldPathBuilder().ConnectivityScores().FieldPath(),
	}
}

func (s UpdateRegionRequest_CASPathSelectorConditionalStateConnectivityScores) WithValue(value []*region.Region_RegionConnectivityPreference) *UpdateRegionRequestCAS_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateRegionRequestCAS_FieldSubPathValue)
}

func (s UpdateRegionRequest_CASPathSelectorConditionalStateConnectivityScores) WithArrayOfValues(values [][]*region.Region_RegionConnectivityPreference) *UpdateRegionRequestCAS_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateRegionRequestCAS_FieldSubPathArrayOfValues)
}

func (s UpdateRegionRequest_CASPathSelectorConditionalStateConnectivityScores) WithItemValue(value *region.Region_RegionConnectivityPreference) *UpdateRegionRequestCAS_FieldSubPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*UpdateRegionRequestCAS_FieldSubPathArrayItemValue)
}

func (UpdateRegionRequest_CASPathSelectorConditionalStateConnectivityScores) Dest() UpdateRegionRequest_CASPathSelectorConditionalStateConnectivityScoresDest {
	return UpdateRegionRequest_CASPathSelectorConditionalStateConnectivityScoresDest{}
}

func (UpdateRegionRequest_CASPathSelectorConditionalStateConnectivityScores) Score() UpdateRegionRequest_CASPathSelectorConditionalStateConnectivityScoresScore {
	return UpdateRegionRequest_CASPathSelectorConditionalStateConnectivityScoresScore{}
}

type UpdateRegionRequest_CASPathSelectorConditionalStateConnectivityScoresDest struct{}

func (UpdateRegionRequest_CASPathSelectorConditionalStateConnectivityScoresDest) FieldPath() *UpdateRegionRequestCAS_FieldSubPath {
	return &UpdateRegionRequestCAS_FieldSubPath{
		selector: UpdateRegionRequestCAS_FieldPathSelectorConditionalState,
		subPath:  region.NewRegionFieldPathBuilder().ConnectivityScores().Dest().FieldPath(),
	}
}

func (s UpdateRegionRequest_CASPathSelectorConditionalStateConnectivityScoresDest) WithValue(value *region.Reference) *UpdateRegionRequestCAS_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateRegionRequestCAS_FieldSubPathValue)
}

func (s UpdateRegionRequest_CASPathSelectorConditionalStateConnectivityScoresDest) WithArrayOfValues(values []*region.Reference) *UpdateRegionRequestCAS_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateRegionRequestCAS_FieldSubPathArrayOfValues)
}

type UpdateRegionRequest_CASPathSelectorConditionalStateConnectivityScoresScore struct{}

func (UpdateRegionRequest_CASPathSelectorConditionalStateConnectivityScoresScore) FieldPath() *UpdateRegionRequestCAS_FieldSubPath {
	return &UpdateRegionRequestCAS_FieldSubPath{
		selector: UpdateRegionRequestCAS_FieldPathSelectorConditionalState,
		subPath:  region.NewRegionFieldPathBuilder().ConnectivityScores().Score().FieldPath(),
	}
}

func (s UpdateRegionRequest_CASPathSelectorConditionalStateConnectivityScoresScore) WithValue(value int32) *UpdateRegionRequestCAS_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateRegionRequestCAS_FieldSubPathValue)
}

func (s UpdateRegionRequest_CASPathSelectorConditionalStateConnectivityScoresScore) WithArrayOfValues(values []int32) *UpdateRegionRequestCAS_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateRegionRequestCAS_FieldSubPathArrayOfValues)
}

type UpdateRegionRequest_CASPathSelectorConditionalStateMetadata struct{}

func (UpdateRegionRequest_CASPathSelectorConditionalStateMetadata) FieldPath() *UpdateRegionRequestCAS_FieldSubPath {
	return &UpdateRegionRequestCAS_FieldSubPath{
		selector: UpdateRegionRequestCAS_FieldPathSelectorConditionalState,
		subPath:  region.NewRegionFieldPathBuilder().Metadata().FieldPath(),
	}
}

func (s UpdateRegionRequest_CASPathSelectorConditionalStateMetadata) WithValue(value *ntt_meta.Meta) *UpdateRegionRequestCAS_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateRegionRequestCAS_FieldSubPathValue)
}

func (s UpdateRegionRequest_CASPathSelectorConditionalStateMetadata) WithArrayOfValues(values []*ntt_meta.Meta) *UpdateRegionRequestCAS_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateRegionRequestCAS_FieldSubPathArrayOfValues)
}

func (UpdateRegionRequest_CASPathSelectorConditionalStateMetadata) CreateTime() UpdateRegionRequest_CASPathSelectorConditionalStateMetadataCreateTime {
	return UpdateRegionRequest_CASPathSelectorConditionalStateMetadataCreateTime{}
}

func (UpdateRegionRequest_CASPathSelectorConditionalStateMetadata) UpdateTime() UpdateRegionRequest_CASPathSelectorConditionalStateMetadataUpdateTime {
	return UpdateRegionRequest_CASPathSelectorConditionalStateMetadataUpdateTime{}
}

func (UpdateRegionRequest_CASPathSelectorConditionalStateMetadata) Uuid() UpdateRegionRequest_CASPathSelectorConditionalStateMetadataUuid {
	return UpdateRegionRequest_CASPathSelectorConditionalStateMetadataUuid{}
}

func (UpdateRegionRequest_CASPathSelectorConditionalStateMetadata) Tags() UpdateRegionRequest_CASPathSelectorConditionalStateMetadataTags {
	return UpdateRegionRequest_CASPathSelectorConditionalStateMetadataTags{}
}

func (UpdateRegionRequest_CASPathSelectorConditionalStateMetadata) Labels() UpdateRegionRequest_CASPathSelectorConditionalStateMetadataLabels {
	return UpdateRegionRequest_CASPathSelectorConditionalStateMetadataLabels{}
}

func (UpdateRegionRequest_CASPathSelectorConditionalStateMetadata) Annotations() UpdateRegionRequest_CASPathSelectorConditionalStateMetadataAnnotations {
	return UpdateRegionRequest_CASPathSelectorConditionalStateMetadataAnnotations{}
}

func (UpdateRegionRequest_CASPathSelectorConditionalStateMetadata) Generation() UpdateRegionRequest_CASPathSelectorConditionalStateMetadataGeneration {
	return UpdateRegionRequest_CASPathSelectorConditionalStateMetadataGeneration{}
}

func (UpdateRegionRequest_CASPathSelectorConditionalStateMetadata) ResourceVersion() UpdateRegionRequest_CASPathSelectorConditionalStateMetadataResourceVersion {
	return UpdateRegionRequest_CASPathSelectorConditionalStateMetadataResourceVersion{}
}

func (UpdateRegionRequest_CASPathSelectorConditionalStateMetadata) OwnerReferences() UpdateRegionRequest_CASPathSelectorConditionalStateMetadataOwnerReferences {
	return UpdateRegionRequest_CASPathSelectorConditionalStateMetadataOwnerReferences{}
}

func (UpdateRegionRequest_CASPathSelectorConditionalStateMetadata) Shards() UpdateRegionRequest_CASPathSelectorConditionalStateMetadataShards {
	return UpdateRegionRequest_CASPathSelectorConditionalStateMetadataShards{}
}

func (UpdateRegionRequest_CASPathSelectorConditionalStateMetadata) Syncing() UpdateRegionRequest_CASPathSelectorConditionalStateMetadataSyncing {
	return UpdateRegionRequest_CASPathSelectorConditionalStateMetadataSyncing{}
}

type UpdateRegionRequest_CASPathSelectorConditionalStateMetadataCreateTime struct{}

func (UpdateRegionRequest_CASPathSelectorConditionalStateMetadataCreateTime) FieldPath() *UpdateRegionRequestCAS_FieldSubPath {
	return &UpdateRegionRequestCAS_FieldSubPath{
		selector: UpdateRegionRequestCAS_FieldPathSelectorConditionalState,
		subPath:  region.NewRegionFieldPathBuilder().Metadata().CreateTime().FieldPath(),
	}
}

func (s UpdateRegionRequest_CASPathSelectorConditionalStateMetadataCreateTime) WithValue(value *timestamp.Timestamp) *UpdateRegionRequestCAS_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateRegionRequestCAS_FieldSubPathValue)
}

func (s UpdateRegionRequest_CASPathSelectorConditionalStateMetadataCreateTime) WithArrayOfValues(values []*timestamp.Timestamp) *UpdateRegionRequestCAS_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateRegionRequestCAS_FieldSubPathArrayOfValues)
}

type UpdateRegionRequest_CASPathSelectorConditionalStateMetadataUpdateTime struct{}

func (UpdateRegionRequest_CASPathSelectorConditionalStateMetadataUpdateTime) FieldPath() *UpdateRegionRequestCAS_FieldSubPath {
	return &UpdateRegionRequestCAS_FieldSubPath{
		selector: UpdateRegionRequestCAS_FieldPathSelectorConditionalState,
		subPath:  region.NewRegionFieldPathBuilder().Metadata().UpdateTime().FieldPath(),
	}
}

func (s UpdateRegionRequest_CASPathSelectorConditionalStateMetadataUpdateTime) WithValue(value *timestamp.Timestamp) *UpdateRegionRequestCAS_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateRegionRequestCAS_FieldSubPathValue)
}

func (s UpdateRegionRequest_CASPathSelectorConditionalStateMetadataUpdateTime) WithArrayOfValues(values []*timestamp.Timestamp) *UpdateRegionRequestCAS_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateRegionRequestCAS_FieldSubPathArrayOfValues)
}

type UpdateRegionRequest_CASPathSelectorConditionalStateMetadataUuid struct{}

func (UpdateRegionRequest_CASPathSelectorConditionalStateMetadataUuid) FieldPath() *UpdateRegionRequestCAS_FieldSubPath {
	return &UpdateRegionRequestCAS_FieldSubPath{
		selector: UpdateRegionRequestCAS_FieldPathSelectorConditionalState,
		subPath:  region.NewRegionFieldPathBuilder().Metadata().Uuid().FieldPath(),
	}
}

func (s UpdateRegionRequest_CASPathSelectorConditionalStateMetadataUuid) WithValue(value string) *UpdateRegionRequestCAS_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateRegionRequestCAS_FieldSubPathValue)
}

func (s UpdateRegionRequest_CASPathSelectorConditionalStateMetadataUuid) WithArrayOfValues(values []string) *UpdateRegionRequestCAS_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateRegionRequestCAS_FieldSubPathArrayOfValues)
}

type UpdateRegionRequest_CASPathSelectorConditionalStateMetadataTags struct{}

func (UpdateRegionRequest_CASPathSelectorConditionalStateMetadataTags) FieldPath() *UpdateRegionRequestCAS_FieldSubPath {
	return &UpdateRegionRequestCAS_FieldSubPath{
		selector: UpdateRegionRequestCAS_FieldPathSelectorConditionalState,
		subPath:  region.NewRegionFieldPathBuilder().Metadata().Tags().FieldPath(),
	}
}

func (s UpdateRegionRequest_CASPathSelectorConditionalStateMetadataTags) WithValue(value []string) *UpdateRegionRequestCAS_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateRegionRequestCAS_FieldSubPathValue)
}

func (s UpdateRegionRequest_CASPathSelectorConditionalStateMetadataTags) WithArrayOfValues(values [][]string) *UpdateRegionRequestCAS_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateRegionRequestCAS_FieldSubPathArrayOfValues)
}

func (s UpdateRegionRequest_CASPathSelectorConditionalStateMetadataTags) WithItemValue(value string) *UpdateRegionRequestCAS_FieldSubPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*UpdateRegionRequestCAS_FieldSubPathArrayItemValue)
}

type UpdateRegionRequest_CASPathSelectorConditionalStateMetadataLabels struct{}

func (UpdateRegionRequest_CASPathSelectorConditionalStateMetadataLabels) FieldPath() *UpdateRegionRequestCAS_FieldSubPath {
	return &UpdateRegionRequestCAS_FieldSubPath{
		selector: UpdateRegionRequestCAS_FieldPathSelectorConditionalState,
		subPath:  region.NewRegionFieldPathBuilder().Metadata().Labels().FieldPath(),
	}
}

func (s UpdateRegionRequest_CASPathSelectorConditionalStateMetadataLabels) WithValue(value map[string]string) *UpdateRegionRequestCAS_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateRegionRequestCAS_FieldSubPathValue)
}

func (s UpdateRegionRequest_CASPathSelectorConditionalStateMetadataLabels) WithArrayOfValues(values []map[string]string) *UpdateRegionRequestCAS_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateRegionRequestCAS_FieldSubPathArrayOfValues)
}

func (UpdateRegionRequest_CASPathSelectorConditionalStateMetadataLabels) WithKey(key string) UpdateRegionRequest_CASMapPathSelectorConditionalStateMetadataLabels {
	return UpdateRegionRequest_CASMapPathSelectorConditionalStateMetadataLabels{key: key}
}

type UpdateRegionRequest_CASMapPathSelectorConditionalStateMetadataLabels struct {
	key string
}

func (s UpdateRegionRequest_CASMapPathSelectorConditionalStateMetadataLabels) FieldPath() *UpdateRegionRequestCAS_FieldSubPath {
	return &UpdateRegionRequestCAS_FieldSubPath{
		selector: UpdateRegionRequestCAS_FieldPathSelectorConditionalState,
		subPath:  region.NewRegionFieldPathBuilder().Metadata().Labels().WithKey(s.key).FieldPath(),
	}
}

func (s UpdateRegionRequest_CASMapPathSelectorConditionalStateMetadataLabels) WithValue(value string) *UpdateRegionRequestCAS_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateRegionRequestCAS_FieldSubPathValue)
}

func (s UpdateRegionRequest_CASMapPathSelectorConditionalStateMetadataLabels) WithArrayOfValues(values []string) *UpdateRegionRequestCAS_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateRegionRequestCAS_FieldSubPathArrayOfValues)
}

type UpdateRegionRequest_CASPathSelectorConditionalStateMetadataAnnotations struct{}

func (UpdateRegionRequest_CASPathSelectorConditionalStateMetadataAnnotations) FieldPath() *UpdateRegionRequestCAS_FieldSubPath {
	return &UpdateRegionRequestCAS_FieldSubPath{
		selector: UpdateRegionRequestCAS_FieldPathSelectorConditionalState,
		subPath:  region.NewRegionFieldPathBuilder().Metadata().Annotations().FieldPath(),
	}
}

func (s UpdateRegionRequest_CASPathSelectorConditionalStateMetadataAnnotations) WithValue(value map[string]string) *UpdateRegionRequestCAS_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateRegionRequestCAS_FieldSubPathValue)
}

func (s UpdateRegionRequest_CASPathSelectorConditionalStateMetadataAnnotations) WithArrayOfValues(values []map[string]string) *UpdateRegionRequestCAS_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateRegionRequestCAS_FieldSubPathArrayOfValues)
}

func (UpdateRegionRequest_CASPathSelectorConditionalStateMetadataAnnotations) WithKey(key string) UpdateRegionRequest_CASMapPathSelectorConditionalStateMetadataAnnotations {
	return UpdateRegionRequest_CASMapPathSelectorConditionalStateMetadataAnnotations{key: key}
}

type UpdateRegionRequest_CASMapPathSelectorConditionalStateMetadataAnnotations struct {
	key string
}

func (s UpdateRegionRequest_CASMapPathSelectorConditionalStateMetadataAnnotations) FieldPath() *UpdateRegionRequestCAS_FieldSubPath {
	return &UpdateRegionRequestCAS_FieldSubPath{
		selector: UpdateRegionRequestCAS_FieldPathSelectorConditionalState,
		subPath:  region.NewRegionFieldPathBuilder().Metadata().Annotations().WithKey(s.key).FieldPath(),
	}
}

func (s UpdateRegionRequest_CASMapPathSelectorConditionalStateMetadataAnnotations) WithValue(value string) *UpdateRegionRequestCAS_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateRegionRequestCAS_FieldSubPathValue)
}

func (s UpdateRegionRequest_CASMapPathSelectorConditionalStateMetadataAnnotations) WithArrayOfValues(values []string) *UpdateRegionRequestCAS_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateRegionRequestCAS_FieldSubPathArrayOfValues)
}

type UpdateRegionRequest_CASPathSelectorConditionalStateMetadataGeneration struct{}

func (UpdateRegionRequest_CASPathSelectorConditionalStateMetadataGeneration) FieldPath() *UpdateRegionRequestCAS_FieldSubPath {
	return &UpdateRegionRequestCAS_FieldSubPath{
		selector: UpdateRegionRequestCAS_FieldPathSelectorConditionalState,
		subPath:  region.NewRegionFieldPathBuilder().Metadata().Generation().FieldPath(),
	}
}

func (s UpdateRegionRequest_CASPathSelectorConditionalStateMetadataGeneration) WithValue(value int64) *UpdateRegionRequestCAS_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateRegionRequestCAS_FieldSubPathValue)
}

func (s UpdateRegionRequest_CASPathSelectorConditionalStateMetadataGeneration) WithArrayOfValues(values []int64) *UpdateRegionRequestCAS_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateRegionRequestCAS_FieldSubPathArrayOfValues)
}

type UpdateRegionRequest_CASPathSelectorConditionalStateMetadataResourceVersion struct{}

func (UpdateRegionRequest_CASPathSelectorConditionalStateMetadataResourceVersion) FieldPath() *UpdateRegionRequestCAS_FieldSubPath {
	return &UpdateRegionRequestCAS_FieldSubPath{
		selector: UpdateRegionRequestCAS_FieldPathSelectorConditionalState,
		subPath:  region.NewRegionFieldPathBuilder().Metadata().ResourceVersion().FieldPath(),
	}
}

func (s UpdateRegionRequest_CASPathSelectorConditionalStateMetadataResourceVersion) WithValue(value string) *UpdateRegionRequestCAS_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateRegionRequestCAS_FieldSubPathValue)
}

func (s UpdateRegionRequest_CASPathSelectorConditionalStateMetadataResourceVersion) WithArrayOfValues(values []string) *UpdateRegionRequestCAS_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateRegionRequestCAS_FieldSubPathArrayOfValues)
}

type UpdateRegionRequest_CASPathSelectorConditionalStateMetadataOwnerReferences struct{}

func (UpdateRegionRequest_CASPathSelectorConditionalStateMetadataOwnerReferences) FieldPath() *UpdateRegionRequestCAS_FieldSubPath {
	return &UpdateRegionRequestCAS_FieldSubPath{
		selector: UpdateRegionRequestCAS_FieldPathSelectorConditionalState,
		subPath:  region.NewRegionFieldPathBuilder().Metadata().OwnerReferences().FieldPath(),
	}
}

func (s UpdateRegionRequest_CASPathSelectorConditionalStateMetadataOwnerReferences) WithValue(value []*ntt_meta.OwnerReference) *UpdateRegionRequestCAS_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateRegionRequestCAS_FieldSubPathValue)
}

func (s UpdateRegionRequest_CASPathSelectorConditionalStateMetadataOwnerReferences) WithArrayOfValues(values [][]*ntt_meta.OwnerReference) *UpdateRegionRequestCAS_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateRegionRequestCAS_FieldSubPathArrayOfValues)
}

func (s UpdateRegionRequest_CASPathSelectorConditionalStateMetadataOwnerReferences) WithItemValue(value *ntt_meta.OwnerReference) *UpdateRegionRequestCAS_FieldSubPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*UpdateRegionRequestCAS_FieldSubPathArrayItemValue)
}

func (UpdateRegionRequest_CASPathSelectorConditionalStateMetadataOwnerReferences) ApiVersion() UpdateRegionRequest_CASPathSelectorConditionalStateMetadataOwnerReferencesApiVersion {
	return UpdateRegionRequest_CASPathSelectorConditionalStateMetadataOwnerReferencesApiVersion{}
}

func (UpdateRegionRequest_CASPathSelectorConditionalStateMetadataOwnerReferences) Kind() UpdateRegionRequest_CASPathSelectorConditionalStateMetadataOwnerReferencesKind {
	return UpdateRegionRequest_CASPathSelectorConditionalStateMetadataOwnerReferencesKind{}
}

func (UpdateRegionRequest_CASPathSelectorConditionalStateMetadataOwnerReferences) Name() UpdateRegionRequest_CASPathSelectorConditionalStateMetadataOwnerReferencesName {
	return UpdateRegionRequest_CASPathSelectorConditionalStateMetadataOwnerReferencesName{}
}

func (UpdateRegionRequest_CASPathSelectorConditionalStateMetadataOwnerReferences) Uid() UpdateRegionRequest_CASPathSelectorConditionalStateMetadataOwnerReferencesUid {
	return UpdateRegionRequest_CASPathSelectorConditionalStateMetadataOwnerReferencesUid{}
}

func (UpdateRegionRequest_CASPathSelectorConditionalStateMetadataOwnerReferences) Controller() UpdateRegionRequest_CASPathSelectorConditionalStateMetadataOwnerReferencesController {
	return UpdateRegionRequest_CASPathSelectorConditionalStateMetadataOwnerReferencesController{}
}

func (UpdateRegionRequest_CASPathSelectorConditionalStateMetadataOwnerReferences) BlockOwnerDeletion() UpdateRegionRequest_CASPathSelectorConditionalStateMetadataOwnerReferencesBlockOwnerDeletion {
	return UpdateRegionRequest_CASPathSelectorConditionalStateMetadataOwnerReferencesBlockOwnerDeletion{}
}

type UpdateRegionRequest_CASPathSelectorConditionalStateMetadataOwnerReferencesApiVersion struct{}

func (UpdateRegionRequest_CASPathSelectorConditionalStateMetadataOwnerReferencesApiVersion) FieldPath() *UpdateRegionRequestCAS_FieldSubPath {
	return &UpdateRegionRequestCAS_FieldSubPath{
		selector: UpdateRegionRequestCAS_FieldPathSelectorConditionalState,
		subPath:  region.NewRegionFieldPathBuilder().Metadata().OwnerReferences().ApiVersion().FieldPath(),
	}
}

func (s UpdateRegionRequest_CASPathSelectorConditionalStateMetadataOwnerReferencesApiVersion) WithValue(value string) *UpdateRegionRequestCAS_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateRegionRequestCAS_FieldSubPathValue)
}

func (s UpdateRegionRequest_CASPathSelectorConditionalStateMetadataOwnerReferencesApiVersion) WithArrayOfValues(values []string) *UpdateRegionRequestCAS_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateRegionRequestCAS_FieldSubPathArrayOfValues)
}

type UpdateRegionRequest_CASPathSelectorConditionalStateMetadataOwnerReferencesKind struct{}

func (UpdateRegionRequest_CASPathSelectorConditionalStateMetadataOwnerReferencesKind) FieldPath() *UpdateRegionRequestCAS_FieldSubPath {
	return &UpdateRegionRequestCAS_FieldSubPath{
		selector: UpdateRegionRequestCAS_FieldPathSelectorConditionalState,
		subPath:  region.NewRegionFieldPathBuilder().Metadata().OwnerReferences().Kind().FieldPath(),
	}
}

func (s UpdateRegionRequest_CASPathSelectorConditionalStateMetadataOwnerReferencesKind) WithValue(value string) *UpdateRegionRequestCAS_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateRegionRequestCAS_FieldSubPathValue)
}

func (s UpdateRegionRequest_CASPathSelectorConditionalStateMetadataOwnerReferencesKind) WithArrayOfValues(values []string) *UpdateRegionRequestCAS_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateRegionRequestCAS_FieldSubPathArrayOfValues)
}

type UpdateRegionRequest_CASPathSelectorConditionalStateMetadataOwnerReferencesName struct{}

func (UpdateRegionRequest_CASPathSelectorConditionalStateMetadataOwnerReferencesName) FieldPath() *UpdateRegionRequestCAS_FieldSubPath {
	return &UpdateRegionRequestCAS_FieldSubPath{
		selector: UpdateRegionRequestCAS_FieldPathSelectorConditionalState,
		subPath:  region.NewRegionFieldPathBuilder().Metadata().OwnerReferences().Name().FieldPath(),
	}
}

func (s UpdateRegionRequest_CASPathSelectorConditionalStateMetadataOwnerReferencesName) WithValue(value string) *UpdateRegionRequestCAS_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateRegionRequestCAS_FieldSubPathValue)
}

func (s UpdateRegionRequest_CASPathSelectorConditionalStateMetadataOwnerReferencesName) WithArrayOfValues(values []string) *UpdateRegionRequestCAS_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateRegionRequestCAS_FieldSubPathArrayOfValues)
}

type UpdateRegionRequest_CASPathSelectorConditionalStateMetadataOwnerReferencesUid struct{}

func (UpdateRegionRequest_CASPathSelectorConditionalStateMetadataOwnerReferencesUid) FieldPath() *UpdateRegionRequestCAS_FieldSubPath {
	return &UpdateRegionRequestCAS_FieldSubPath{
		selector: UpdateRegionRequestCAS_FieldPathSelectorConditionalState,
		subPath:  region.NewRegionFieldPathBuilder().Metadata().OwnerReferences().Uid().FieldPath(),
	}
}

func (s UpdateRegionRequest_CASPathSelectorConditionalStateMetadataOwnerReferencesUid) WithValue(value string) *UpdateRegionRequestCAS_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateRegionRequestCAS_FieldSubPathValue)
}

func (s UpdateRegionRequest_CASPathSelectorConditionalStateMetadataOwnerReferencesUid) WithArrayOfValues(values []string) *UpdateRegionRequestCAS_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateRegionRequestCAS_FieldSubPathArrayOfValues)
}

type UpdateRegionRequest_CASPathSelectorConditionalStateMetadataOwnerReferencesController struct{}

func (UpdateRegionRequest_CASPathSelectorConditionalStateMetadataOwnerReferencesController) FieldPath() *UpdateRegionRequestCAS_FieldSubPath {
	return &UpdateRegionRequestCAS_FieldSubPath{
		selector: UpdateRegionRequestCAS_FieldPathSelectorConditionalState,
		subPath:  region.NewRegionFieldPathBuilder().Metadata().OwnerReferences().Controller().FieldPath(),
	}
}

func (s UpdateRegionRequest_CASPathSelectorConditionalStateMetadataOwnerReferencesController) WithValue(value bool) *UpdateRegionRequestCAS_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateRegionRequestCAS_FieldSubPathValue)
}

func (s UpdateRegionRequest_CASPathSelectorConditionalStateMetadataOwnerReferencesController) WithArrayOfValues(values []bool) *UpdateRegionRequestCAS_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateRegionRequestCAS_FieldSubPathArrayOfValues)
}

type UpdateRegionRequest_CASPathSelectorConditionalStateMetadataOwnerReferencesBlockOwnerDeletion struct{}

func (UpdateRegionRequest_CASPathSelectorConditionalStateMetadataOwnerReferencesBlockOwnerDeletion) FieldPath() *UpdateRegionRequestCAS_FieldSubPath {
	return &UpdateRegionRequestCAS_FieldSubPath{
		selector: UpdateRegionRequestCAS_FieldPathSelectorConditionalState,
		subPath:  region.NewRegionFieldPathBuilder().Metadata().OwnerReferences().BlockOwnerDeletion().FieldPath(),
	}
}

func (s UpdateRegionRequest_CASPathSelectorConditionalStateMetadataOwnerReferencesBlockOwnerDeletion) WithValue(value bool) *UpdateRegionRequestCAS_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateRegionRequestCAS_FieldSubPathValue)
}

func (s UpdateRegionRequest_CASPathSelectorConditionalStateMetadataOwnerReferencesBlockOwnerDeletion) WithArrayOfValues(values []bool) *UpdateRegionRequestCAS_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateRegionRequestCAS_FieldSubPathArrayOfValues)
}

type UpdateRegionRequest_CASPathSelectorConditionalStateMetadataShards struct{}

func (UpdateRegionRequest_CASPathSelectorConditionalStateMetadataShards) FieldPath() *UpdateRegionRequestCAS_FieldSubPath {
	return &UpdateRegionRequestCAS_FieldSubPath{
		selector: UpdateRegionRequestCAS_FieldPathSelectorConditionalState,
		subPath:  region.NewRegionFieldPathBuilder().Metadata().Shards().FieldPath(),
	}
}

func (s UpdateRegionRequest_CASPathSelectorConditionalStateMetadataShards) WithValue(value map[string]int64) *UpdateRegionRequestCAS_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateRegionRequestCAS_FieldSubPathValue)
}

func (s UpdateRegionRequest_CASPathSelectorConditionalStateMetadataShards) WithArrayOfValues(values []map[string]int64) *UpdateRegionRequestCAS_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateRegionRequestCAS_FieldSubPathArrayOfValues)
}

func (UpdateRegionRequest_CASPathSelectorConditionalStateMetadataShards) WithKey(key string) UpdateRegionRequest_CASMapPathSelectorConditionalStateMetadataShards {
	return UpdateRegionRequest_CASMapPathSelectorConditionalStateMetadataShards{key: key}
}

type UpdateRegionRequest_CASMapPathSelectorConditionalStateMetadataShards struct {
	key string
}

func (s UpdateRegionRequest_CASMapPathSelectorConditionalStateMetadataShards) FieldPath() *UpdateRegionRequestCAS_FieldSubPath {
	return &UpdateRegionRequestCAS_FieldSubPath{
		selector: UpdateRegionRequestCAS_FieldPathSelectorConditionalState,
		subPath:  region.NewRegionFieldPathBuilder().Metadata().Shards().WithKey(s.key).FieldPath(),
	}
}

func (s UpdateRegionRequest_CASMapPathSelectorConditionalStateMetadataShards) WithValue(value int64) *UpdateRegionRequestCAS_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateRegionRequestCAS_FieldSubPathValue)
}

func (s UpdateRegionRequest_CASMapPathSelectorConditionalStateMetadataShards) WithArrayOfValues(values []int64) *UpdateRegionRequestCAS_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateRegionRequestCAS_FieldSubPathArrayOfValues)
}

type UpdateRegionRequest_CASPathSelectorConditionalStateMetadataSyncing struct{}

func (UpdateRegionRequest_CASPathSelectorConditionalStateMetadataSyncing) FieldPath() *UpdateRegionRequestCAS_FieldSubPath {
	return &UpdateRegionRequestCAS_FieldSubPath{
		selector: UpdateRegionRequestCAS_FieldPathSelectorConditionalState,
		subPath:  region.NewRegionFieldPathBuilder().Metadata().Syncing().FieldPath(),
	}
}

func (s UpdateRegionRequest_CASPathSelectorConditionalStateMetadataSyncing) WithValue(value *syncing_meta.SyncingMeta) *UpdateRegionRequestCAS_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateRegionRequestCAS_FieldSubPathValue)
}

func (s UpdateRegionRequest_CASPathSelectorConditionalStateMetadataSyncing) WithArrayOfValues(values []*syncing_meta.SyncingMeta) *UpdateRegionRequestCAS_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateRegionRequestCAS_FieldSubPathArrayOfValues)
}

func (UpdateRegionRequest_CASPathSelectorConditionalStateMetadataSyncing) OwningRegion() UpdateRegionRequest_CASPathSelectorConditionalStateMetadataSyncingOwningRegion {
	return UpdateRegionRequest_CASPathSelectorConditionalStateMetadataSyncingOwningRegion{}
}

func (UpdateRegionRequest_CASPathSelectorConditionalStateMetadataSyncing) Regions() UpdateRegionRequest_CASPathSelectorConditionalStateMetadataSyncingRegions {
	return UpdateRegionRequest_CASPathSelectorConditionalStateMetadataSyncingRegions{}
}

type UpdateRegionRequest_CASPathSelectorConditionalStateMetadataSyncingOwningRegion struct{}

func (UpdateRegionRequest_CASPathSelectorConditionalStateMetadataSyncingOwningRegion) FieldPath() *UpdateRegionRequestCAS_FieldSubPath {
	return &UpdateRegionRequestCAS_FieldSubPath{
		selector: UpdateRegionRequestCAS_FieldPathSelectorConditionalState,
		subPath:  region.NewRegionFieldPathBuilder().Metadata().Syncing().OwningRegion().FieldPath(),
	}
}

func (s UpdateRegionRequest_CASPathSelectorConditionalStateMetadataSyncingOwningRegion) WithValue(value string) *UpdateRegionRequestCAS_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateRegionRequestCAS_FieldSubPathValue)
}

func (s UpdateRegionRequest_CASPathSelectorConditionalStateMetadataSyncingOwningRegion) WithArrayOfValues(values []string) *UpdateRegionRequestCAS_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateRegionRequestCAS_FieldSubPathArrayOfValues)
}

type UpdateRegionRequest_CASPathSelectorConditionalStateMetadataSyncingRegions struct{}

func (UpdateRegionRequest_CASPathSelectorConditionalStateMetadataSyncingRegions) FieldPath() *UpdateRegionRequestCAS_FieldSubPath {
	return &UpdateRegionRequestCAS_FieldSubPath{
		selector: UpdateRegionRequestCAS_FieldPathSelectorConditionalState,
		subPath:  region.NewRegionFieldPathBuilder().Metadata().Syncing().Regions().FieldPath(),
	}
}

func (s UpdateRegionRequest_CASPathSelectorConditionalStateMetadataSyncingRegions) WithValue(value []string) *UpdateRegionRequestCAS_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateRegionRequestCAS_FieldSubPathValue)
}

func (s UpdateRegionRequest_CASPathSelectorConditionalStateMetadataSyncingRegions) WithArrayOfValues(values [][]string) *UpdateRegionRequestCAS_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateRegionRequestCAS_FieldSubPathArrayOfValues)
}

func (s UpdateRegionRequest_CASPathSelectorConditionalStateMetadataSyncingRegions) WithItemValue(value string) *UpdateRegionRequestCAS_FieldSubPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*UpdateRegionRequestCAS_FieldSubPathArrayItemValue)
}

type UpdateRegionRequest_CASPathSelectorFieldMask struct{}

func (UpdateRegionRequest_CASPathSelectorFieldMask) FieldPath() *UpdateRegionRequestCAS_FieldTerminalPath {
	return &UpdateRegionRequestCAS_FieldTerminalPath{selector: UpdateRegionRequestCAS_FieldPathSelectorFieldMask}
}

func (s UpdateRegionRequest_CASPathSelectorFieldMask) WithValue(value *region.Region_FieldMask) *UpdateRegionRequestCAS_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateRegionRequestCAS_FieldTerminalPathValue)
}

func (s UpdateRegionRequest_CASPathSelectorFieldMask) WithArrayOfValues(values []*region.Region_FieldMask) *UpdateRegionRequestCAS_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateRegionRequestCAS_FieldTerminalPathArrayOfValues)
}

type DeleteRegionRequestFieldPathBuilder struct{}

func NewDeleteRegionRequestFieldPathBuilder() DeleteRegionRequestFieldPathBuilder {
	return DeleteRegionRequestFieldPathBuilder{}
}
func (DeleteRegionRequestFieldPathBuilder) Name() DeleteRegionRequestPathSelectorName {
	return DeleteRegionRequestPathSelectorName{}
}

type DeleteRegionRequestPathSelectorName struct{}

func (DeleteRegionRequestPathSelectorName) FieldPath() *DeleteRegionRequest_FieldTerminalPath {
	return &DeleteRegionRequest_FieldTerminalPath{selector: DeleteRegionRequest_FieldPathSelectorName}
}

func (s DeleteRegionRequestPathSelectorName) WithValue(value *region.Reference) *DeleteRegionRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*DeleteRegionRequest_FieldTerminalPathValue)
}

func (s DeleteRegionRequestPathSelectorName) WithArrayOfValues(values []*region.Reference) *DeleteRegionRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*DeleteRegionRequest_FieldTerminalPathArrayOfValues)
}
