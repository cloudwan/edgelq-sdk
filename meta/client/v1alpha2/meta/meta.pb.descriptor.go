// Code generated by protoc-gen-goten-client
// Service: Meta
// DO NOT EDIT!!!

package meta_client

import (
	gotenclient "github.com/cloudwan/goten-sdk/runtime/client"
	gotenresource "github.com/cloudwan/goten-sdk/runtime/resource"
)

// proto imports
import (
	deployment_client "github.com/cloudwan/edgelq-sdk/meta/client/v1alpha2/deployment"
	region_client "github.com/cloudwan/edgelq-sdk/meta/client/v1alpha2/region"
	resource_client "github.com/cloudwan/edgelq-sdk/meta/client/v1alpha2/resource"
	service_client "github.com/cloudwan/edgelq-sdk/meta/client/v1alpha2/service"
	deployment "github.com/cloudwan/edgelq-sdk/meta/resources/v1alpha2/deployment"
	region "github.com/cloudwan/edgelq-sdk/meta/resources/v1alpha2/region"
	resource "github.com/cloudwan/edgelq-sdk/meta/resources/v1alpha2/resource"
	service "github.com/cloudwan/edgelq-sdk/meta/resources/v1alpha2/service"
)

// Reference imports to suppress errors if they are not otherwise used.
var (
	_ = new(gotenclient.MethodDescriptor)
	_ = gotenresource.WildcardId
)

// make sure we're using proto imports
var (
	_ = &deployment.Deployment{}
	_ = &deployment_client.GetDeploymentRequest{}
	_ = &region.Region{}
	_ = &region_client.GetRegionRequest{}
	_ = &resource.Resource{}
	_ = &resource_client.GetResourceRequest{}
	_ = &service.Service{}
	_ = &service_client.GetServiceRequest{}
)

var (
	descriptorInitialized bool
	metaDescriptor        *MetaDescriptor
)

type MetaDescriptor struct{}

func (d *MetaDescriptor) GetServiceName() string {
	return "meta"
}

func (d *MetaDescriptor) GetServiceDomain() string {
	return "meta.edgelq.com"
}

func (d *MetaDescriptor) GetVersion() string {
	return "v1alpha2"
}

func (d *MetaDescriptor) GetNextVersion() string {

	return ""
}

func (d *MetaDescriptor) AllResourceDescriptors() []gotenresource.Descriptor {
	return []gotenresource.Descriptor{
		deployment.GetDescriptor(),
		region.GetDescriptor(),
		resource.GetDescriptor(),
		service.GetDescriptor(),
	}
}

func (d *MetaDescriptor) AllApiDescriptors() []gotenclient.ApiDescriptor {
	return []gotenclient.ApiDescriptor{
		deployment_client.GetDeploymentServiceDescriptor(),
		region_client.GetRegionServiceDescriptor(),
		resource_client.GetResourceServiceDescriptor(),
		service_client.GetServiceServiceDescriptor(),
	}
}

func (d *MetaDescriptor) AllImportedServiceInfos() []gotenclient.ServiceImportInfo {
	return []gotenclient.ServiceImportInfo{}
}

func GetMetaDescriptor() *MetaDescriptor {
	return metaDescriptor
}

func initDescriptor() {
	metaDescriptor = &MetaDescriptor{}
	gotenclient.GetRegistry().RegisterSvcDescriptor(metaDescriptor)
}

func init() {
	if !descriptorInitialized {
		initDescriptor()
		descriptorInitialized = true
	}
}
