syntax = "proto3";

package ntt.meta.v1alpha2;

import "edgelq-sdk/common/types/meta.proto";
import "google/api/resource.proto";

option go_package = "github.com/cloudwan/edgelq-sdk/meta/resources/v1alpha2/region;region";
option java_multiple_files = true;
option java_outer_classname = "RegionProto";
option java_package = "com.ntt.meta.pb.v1alpha2";

// Region Resource
message Region {
  option (google.api.resource) = {
    type : "meta.edgelq.com/Region"
    pattern : "regions/{region}"
  };

  // Name of Region
  // When creating a new instance, this field is optional and if not provided,
  // it will be generated automatically. Last ID segment must conform to the
  // following regex: [a-z][a-z0-9\-]{0,28}[a-z0-9]
  string name = 1;

  // Region title
  string title = 2;

  // Region domain, for example us-west.edgelq.com
  string domain = 3;

  // Region location
  RegionLocation location = 4;

  // Whether is default. Only one record is allowed to have this attribute on.
  bool is_default = 5;

  // Hardcoded scores regarding connectivity preference.
  repeated RegionConnectivityPreference connectivity_scores = 6;

  // Metadata
  ntt.types.Meta metadata = 7;

  // RegionLocation describes deployment location of a region.
  message RegionLocation {
    string continent = 1;

    string country = 2;

    string agglomeration = 3;

    string city = 4;

    string cloud = 5;
  }

  // RegionConnectivityPreference is a hardcoded connectivity score to other
  // region.
  message RegionConnectivityPreference {
    // Destination region
    string dest = 2;

    // Hardcoded score
    int32 score = 3;
  }
}
