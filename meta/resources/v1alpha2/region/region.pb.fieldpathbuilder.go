// Code generated by protoc-gen-goten-object
// File: edgelq/meta/proto/v1alpha2/region.proto
// DO NOT EDIT!!!

package region

// proto imports
import (
	ntt_meta "github.com/cloudwan/edgelq-sdk/common/types/meta"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
)

// make sure we're using proto imports
var (
	_ = &ntt_meta.Meta{}
	_ = &timestamp.Timestamp{}
)

type RegionFieldPathBuilder struct{}

func NewRegionFieldPathBuilder() RegionFieldPathBuilder {
	return RegionFieldPathBuilder{}
}
func (RegionFieldPathBuilder) Name() RegionPathSelectorName {
	return RegionPathSelectorName{}
}
func (RegionFieldPathBuilder) Title() RegionPathSelectorTitle {
	return RegionPathSelectorTitle{}
}
func (RegionFieldPathBuilder) Domain() RegionPathSelectorDomain {
	return RegionPathSelectorDomain{}
}
func (RegionFieldPathBuilder) Location() RegionPathSelectorLocation {
	return RegionPathSelectorLocation{}
}
func (RegionFieldPathBuilder) IsDefault() RegionPathSelectorIsDefault {
	return RegionPathSelectorIsDefault{}
}
func (RegionFieldPathBuilder) ConnectivityScores() RegionPathSelectorConnectivityScores {
	return RegionPathSelectorConnectivityScores{}
}
func (RegionFieldPathBuilder) Metadata() RegionPathSelectorMetadata {
	return RegionPathSelectorMetadata{}
}

type RegionPathSelectorName struct{}

func (RegionPathSelectorName) FieldPath() *Region_FieldTerminalPath {
	return &Region_FieldTerminalPath{selector: Region_FieldPathSelectorName}
}

func (s RegionPathSelectorName) WithValue(value *Name) *Region_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*Region_FieldTerminalPathValue)
}

func (s RegionPathSelectorName) WithArrayOfValues(values []*Name) *Region_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*Region_FieldTerminalPathArrayOfValues)
}

type RegionPathSelectorTitle struct{}

func (RegionPathSelectorTitle) FieldPath() *Region_FieldTerminalPath {
	return &Region_FieldTerminalPath{selector: Region_FieldPathSelectorTitle}
}

func (s RegionPathSelectorTitle) WithValue(value string) *Region_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*Region_FieldTerminalPathValue)
}

func (s RegionPathSelectorTitle) WithArrayOfValues(values []string) *Region_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*Region_FieldTerminalPathArrayOfValues)
}

type RegionPathSelectorDomain struct{}

func (RegionPathSelectorDomain) FieldPath() *Region_FieldTerminalPath {
	return &Region_FieldTerminalPath{selector: Region_FieldPathSelectorDomain}
}

func (s RegionPathSelectorDomain) WithValue(value string) *Region_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*Region_FieldTerminalPathValue)
}

func (s RegionPathSelectorDomain) WithArrayOfValues(values []string) *Region_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*Region_FieldTerminalPathArrayOfValues)
}

type RegionPathSelectorLocation struct{}

func (RegionPathSelectorLocation) FieldPath() *Region_FieldTerminalPath {
	return &Region_FieldTerminalPath{selector: Region_FieldPathSelectorLocation}
}

func (s RegionPathSelectorLocation) WithValue(value *Region_RegionLocation) *Region_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*Region_FieldTerminalPathValue)
}

func (s RegionPathSelectorLocation) WithArrayOfValues(values []*Region_RegionLocation) *Region_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*Region_FieldTerminalPathArrayOfValues)
}

func (RegionPathSelectorLocation) WithSubPath(subPath RegionRegionLocation_FieldPath) *Region_FieldSubPath {
	return &Region_FieldSubPath{selector: Region_FieldPathSelectorLocation, subPath: subPath}
}

func (s RegionPathSelectorLocation) WithSubValue(subPathValue RegionRegionLocation_FieldPathValue) *Region_FieldSubPathValue {
	return &Region_FieldSubPathValue{Region_FieldPath: s.WithSubPath(subPathValue), subPathValue: subPathValue}
}

func (s RegionPathSelectorLocation) WithSubArrayOfValues(subPathArrayOfValues RegionRegionLocation_FieldPathArrayOfValues) *Region_FieldSubPathArrayOfValues {
	return &Region_FieldSubPathArrayOfValues{Region_FieldPath: s.WithSubPath(subPathArrayOfValues), subPathArrayOfValues: subPathArrayOfValues}
}

func (s RegionPathSelectorLocation) WithSubArrayItemValue(subPathArrayItemValue RegionRegionLocation_FieldPathArrayItemValue) *Region_FieldSubPathArrayItemValue {
	return &Region_FieldSubPathArrayItemValue{Region_FieldPath: s.WithSubPath(subPathArrayItemValue), subPathItemValue: subPathArrayItemValue}
}

func (RegionPathSelectorLocation) Continent() RegionPathSelectorLocationContinent {
	return RegionPathSelectorLocationContinent{}
}

func (RegionPathSelectorLocation) Country() RegionPathSelectorLocationCountry {
	return RegionPathSelectorLocationCountry{}
}

func (RegionPathSelectorLocation) Agglomeration() RegionPathSelectorLocationAgglomeration {
	return RegionPathSelectorLocationAgglomeration{}
}

func (RegionPathSelectorLocation) City() RegionPathSelectorLocationCity {
	return RegionPathSelectorLocationCity{}
}

func (RegionPathSelectorLocation) Cloud() RegionPathSelectorLocationCloud {
	return RegionPathSelectorLocationCloud{}
}

type RegionPathSelectorLocationContinent struct{}

func (RegionPathSelectorLocationContinent) FieldPath() *Region_FieldSubPath {
	return &Region_FieldSubPath{
		selector: Region_FieldPathSelectorLocation,
		subPath:  NewRegionRegionLocationFieldPathBuilder().Continent().FieldPath(),
	}
}

func (s RegionPathSelectorLocationContinent) WithValue(value string) *Region_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*Region_FieldSubPathValue)
}

func (s RegionPathSelectorLocationContinent) WithArrayOfValues(values []string) *Region_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*Region_FieldSubPathArrayOfValues)
}

type RegionPathSelectorLocationCountry struct{}

func (RegionPathSelectorLocationCountry) FieldPath() *Region_FieldSubPath {
	return &Region_FieldSubPath{
		selector: Region_FieldPathSelectorLocation,
		subPath:  NewRegionRegionLocationFieldPathBuilder().Country().FieldPath(),
	}
}

func (s RegionPathSelectorLocationCountry) WithValue(value string) *Region_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*Region_FieldSubPathValue)
}

func (s RegionPathSelectorLocationCountry) WithArrayOfValues(values []string) *Region_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*Region_FieldSubPathArrayOfValues)
}

type RegionPathSelectorLocationAgglomeration struct{}

func (RegionPathSelectorLocationAgglomeration) FieldPath() *Region_FieldSubPath {
	return &Region_FieldSubPath{
		selector: Region_FieldPathSelectorLocation,
		subPath:  NewRegionRegionLocationFieldPathBuilder().Agglomeration().FieldPath(),
	}
}

func (s RegionPathSelectorLocationAgglomeration) WithValue(value string) *Region_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*Region_FieldSubPathValue)
}

func (s RegionPathSelectorLocationAgglomeration) WithArrayOfValues(values []string) *Region_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*Region_FieldSubPathArrayOfValues)
}

type RegionPathSelectorLocationCity struct{}

func (RegionPathSelectorLocationCity) FieldPath() *Region_FieldSubPath {
	return &Region_FieldSubPath{
		selector: Region_FieldPathSelectorLocation,
		subPath:  NewRegionRegionLocationFieldPathBuilder().City().FieldPath(),
	}
}

func (s RegionPathSelectorLocationCity) WithValue(value string) *Region_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*Region_FieldSubPathValue)
}

func (s RegionPathSelectorLocationCity) WithArrayOfValues(values []string) *Region_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*Region_FieldSubPathArrayOfValues)
}

type RegionPathSelectorLocationCloud struct{}

func (RegionPathSelectorLocationCloud) FieldPath() *Region_FieldSubPath {
	return &Region_FieldSubPath{
		selector: Region_FieldPathSelectorLocation,
		subPath:  NewRegionRegionLocationFieldPathBuilder().Cloud().FieldPath(),
	}
}

func (s RegionPathSelectorLocationCloud) WithValue(value string) *Region_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*Region_FieldSubPathValue)
}

func (s RegionPathSelectorLocationCloud) WithArrayOfValues(values []string) *Region_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*Region_FieldSubPathArrayOfValues)
}

type RegionPathSelectorIsDefault struct{}

func (RegionPathSelectorIsDefault) FieldPath() *Region_FieldTerminalPath {
	return &Region_FieldTerminalPath{selector: Region_FieldPathSelectorIsDefault}
}

func (s RegionPathSelectorIsDefault) WithValue(value bool) *Region_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*Region_FieldTerminalPathValue)
}

func (s RegionPathSelectorIsDefault) WithArrayOfValues(values []bool) *Region_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*Region_FieldTerminalPathArrayOfValues)
}

type RegionPathSelectorConnectivityScores struct{}

func (RegionPathSelectorConnectivityScores) FieldPath() *Region_FieldTerminalPath {
	return &Region_FieldTerminalPath{selector: Region_FieldPathSelectorConnectivityScores}
}

func (s RegionPathSelectorConnectivityScores) WithValue(value []*Region_RegionConnectivityPreference) *Region_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*Region_FieldTerminalPathValue)
}

func (s RegionPathSelectorConnectivityScores) WithArrayOfValues(values [][]*Region_RegionConnectivityPreference) *Region_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*Region_FieldTerminalPathArrayOfValues)
}

func (s RegionPathSelectorConnectivityScores) WithItemValue(value *Region_RegionConnectivityPreference) *Region_FieldTerminalPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*Region_FieldTerminalPathArrayItemValue)
}
func (RegionPathSelectorConnectivityScores) WithSubPath(subPath RegionRegionConnectivityPreference_FieldPath) *Region_FieldSubPath {
	return &Region_FieldSubPath{selector: Region_FieldPathSelectorConnectivityScores, subPath: subPath}
}

func (s RegionPathSelectorConnectivityScores) WithSubValue(subPathValue RegionRegionConnectivityPreference_FieldPathValue) *Region_FieldSubPathValue {
	return &Region_FieldSubPathValue{Region_FieldPath: s.WithSubPath(subPathValue), subPathValue: subPathValue}
}

func (s RegionPathSelectorConnectivityScores) WithSubArrayOfValues(subPathArrayOfValues RegionRegionConnectivityPreference_FieldPathArrayOfValues) *Region_FieldSubPathArrayOfValues {
	return &Region_FieldSubPathArrayOfValues{Region_FieldPath: s.WithSubPath(subPathArrayOfValues), subPathArrayOfValues: subPathArrayOfValues}
}

func (s RegionPathSelectorConnectivityScores) WithSubArrayItemValue(subPathArrayItemValue RegionRegionConnectivityPreference_FieldPathArrayItemValue) *Region_FieldSubPathArrayItemValue {
	return &Region_FieldSubPathArrayItemValue{Region_FieldPath: s.WithSubPath(subPathArrayItemValue), subPathItemValue: subPathArrayItemValue}
}

func (RegionPathSelectorConnectivityScores) Dest() RegionPathSelectorConnectivityScoresDest {
	return RegionPathSelectorConnectivityScoresDest{}
}

func (RegionPathSelectorConnectivityScores) Score() RegionPathSelectorConnectivityScoresScore {
	return RegionPathSelectorConnectivityScoresScore{}
}

type RegionPathSelectorConnectivityScoresDest struct{}

func (RegionPathSelectorConnectivityScoresDest) FieldPath() *Region_FieldSubPath {
	return &Region_FieldSubPath{
		selector: Region_FieldPathSelectorConnectivityScores,
		subPath:  NewRegionRegionConnectivityPreferenceFieldPathBuilder().Dest().FieldPath(),
	}
}

func (s RegionPathSelectorConnectivityScoresDest) WithValue(value *Reference) *Region_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*Region_FieldSubPathValue)
}

func (s RegionPathSelectorConnectivityScoresDest) WithArrayOfValues(values []*Reference) *Region_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*Region_FieldSubPathArrayOfValues)
}

type RegionPathSelectorConnectivityScoresScore struct{}

func (RegionPathSelectorConnectivityScoresScore) FieldPath() *Region_FieldSubPath {
	return &Region_FieldSubPath{
		selector: Region_FieldPathSelectorConnectivityScores,
		subPath:  NewRegionRegionConnectivityPreferenceFieldPathBuilder().Score().FieldPath(),
	}
}

func (s RegionPathSelectorConnectivityScoresScore) WithValue(value int32) *Region_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*Region_FieldSubPathValue)
}

func (s RegionPathSelectorConnectivityScoresScore) WithArrayOfValues(values []int32) *Region_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*Region_FieldSubPathArrayOfValues)
}

type RegionPathSelectorMetadata struct{}

func (RegionPathSelectorMetadata) FieldPath() *Region_FieldTerminalPath {
	return &Region_FieldTerminalPath{selector: Region_FieldPathSelectorMetadata}
}

func (s RegionPathSelectorMetadata) WithValue(value *ntt_meta.Meta) *Region_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*Region_FieldTerminalPathValue)
}

func (s RegionPathSelectorMetadata) WithArrayOfValues(values []*ntt_meta.Meta) *Region_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*Region_FieldTerminalPathArrayOfValues)
}

func (RegionPathSelectorMetadata) WithSubPath(subPath ntt_meta.Meta_FieldPath) *Region_FieldSubPath {
	return &Region_FieldSubPath{selector: Region_FieldPathSelectorMetadata, subPath: subPath}
}

func (s RegionPathSelectorMetadata) WithSubValue(subPathValue ntt_meta.Meta_FieldPathValue) *Region_FieldSubPathValue {
	return &Region_FieldSubPathValue{Region_FieldPath: s.WithSubPath(subPathValue), subPathValue: subPathValue}
}

func (s RegionPathSelectorMetadata) WithSubArrayOfValues(subPathArrayOfValues ntt_meta.Meta_FieldPathArrayOfValues) *Region_FieldSubPathArrayOfValues {
	return &Region_FieldSubPathArrayOfValues{Region_FieldPath: s.WithSubPath(subPathArrayOfValues), subPathArrayOfValues: subPathArrayOfValues}
}

func (s RegionPathSelectorMetadata) WithSubArrayItemValue(subPathArrayItemValue ntt_meta.Meta_FieldPathArrayItemValue) *Region_FieldSubPathArrayItemValue {
	return &Region_FieldSubPathArrayItemValue{Region_FieldPath: s.WithSubPath(subPathArrayItemValue), subPathItemValue: subPathArrayItemValue}
}

func (RegionPathSelectorMetadata) CreateTime() RegionPathSelectorMetadataCreateTime {
	return RegionPathSelectorMetadataCreateTime{}
}

func (RegionPathSelectorMetadata) UpdateTime() RegionPathSelectorMetadataUpdateTime {
	return RegionPathSelectorMetadataUpdateTime{}
}

func (RegionPathSelectorMetadata) Uuid() RegionPathSelectorMetadataUuid {
	return RegionPathSelectorMetadataUuid{}
}

func (RegionPathSelectorMetadata) Tags() RegionPathSelectorMetadataTags {
	return RegionPathSelectorMetadataTags{}
}

func (RegionPathSelectorMetadata) Labels() RegionPathSelectorMetadataLabels {
	return RegionPathSelectorMetadataLabels{}
}

func (RegionPathSelectorMetadata) Annotations() RegionPathSelectorMetadataAnnotations {
	return RegionPathSelectorMetadataAnnotations{}
}

func (RegionPathSelectorMetadata) Generation() RegionPathSelectorMetadataGeneration {
	return RegionPathSelectorMetadataGeneration{}
}

func (RegionPathSelectorMetadata) ResourceVersion() RegionPathSelectorMetadataResourceVersion {
	return RegionPathSelectorMetadataResourceVersion{}
}

func (RegionPathSelectorMetadata) OwnerReferences() RegionPathSelectorMetadataOwnerReferences {
	return RegionPathSelectorMetadataOwnerReferences{}
}

func (RegionPathSelectorMetadata) Shards() RegionPathSelectorMetadataShards {
	return RegionPathSelectorMetadataShards{}
}

func (RegionPathSelectorMetadata) Syncing() RegionPathSelectorMetadataSyncing {
	return RegionPathSelectorMetadataSyncing{}
}

type RegionPathSelectorMetadataCreateTime struct{}

func (RegionPathSelectorMetadataCreateTime) FieldPath() *Region_FieldSubPath {
	return &Region_FieldSubPath{
		selector: Region_FieldPathSelectorMetadata,
		subPath:  ntt_meta.NewMetaFieldPathBuilder().CreateTime().FieldPath(),
	}
}

func (s RegionPathSelectorMetadataCreateTime) WithValue(value *timestamp.Timestamp) *Region_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*Region_FieldSubPathValue)
}

func (s RegionPathSelectorMetadataCreateTime) WithArrayOfValues(values []*timestamp.Timestamp) *Region_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*Region_FieldSubPathArrayOfValues)
}

type RegionPathSelectorMetadataUpdateTime struct{}

func (RegionPathSelectorMetadataUpdateTime) FieldPath() *Region_FieldSubPath {
	return &Region_FieldSubPath{
		selector: Region_FieldPathSelectorMetadata,
		subPath:  ntt_meta.NewMetaFieldPathBuilder().UpdateTime().FieldPath(),
	}
}

func (s RegionPathSelectorMetadataUpdateTime) WithValue(value *timestamp.Timestamp) *Region_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*Region_FieldSubPathValue)
}

func (s RegionPathSelectorMetadataUpdateTime) WithArrayOfValues(values []*timestamp.Timestamp) *Region_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*Region_FieldSubPathArrayOfValues)
}

type RegionPathSelectorMetadataUuid struct{}

func (RegionPathSelectorMetadataUuid) FieldPath() *Region_FieldSubPath {
	return &Region_FieldSubPath{
		selector: Region_FieldPathSelectorMetadata,
		subPath:  ntt_meta.NewMetaFieldPathBuilder().Uuid().FieldPath(),
	}
}

func (s RegionPathSelectorMetadataUuid) WithValue(value string) *Region_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*Region_FieldSubPathValue)
}

func (s RegionPathSelectorMetadataUuid) WithArrayOfValues(values []string) *Region_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*Region_FieldSubPathArrayOfValues)
}

type RegionPathSelectorMetadataTags struct{}

func (RegionPathSelectorMetadataTags) FieldPath() *Region_FieldSubPath {
	return &Region_FieldSubPath{
		selector: Region_FieldPathSelectorMetadata,
		subPath:  ntt_meta.NewMetaFieldPathBuilder().Tags().FieldPath(),
	}
}

func (s RegionPathSelectorMetadataTags) WithValue(value []string) *Region_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*Region_FieldSubPathValue)
}

func (s RegionPathSelectorMetadataTags) WithArrayOfValues(values [][]string) *Region_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*Region_FieldSubPathArrayOfValues)
}

func (s RegionPathSelectorMetadataTags) WithItemValue(value string) *Region_FieldSubPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*Region_FieldSubPathArrayItemValue)
}

type RegionPathSelectorMetadataLabels struct{}

func (RegionPathSelectorMetadataLabels) FieldPath() *Region_FieldSubPath {
	return &Region_FieldSubPath{
		selector: Region_FieldPathSelectorMetadata,
		subPath:  ntt_meta.NewMetaFieldPathBuilder().Labels().FieldPath(),
	}
}

func (s RegionPathSelectorMetadataLabels) WithValue(value map[string]string) *Region_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*Region_FieldSubPathValue)
}

func (s RegionPathSelectorMetadataLabels) WithArrayOfValues(values []map[string]string) *Region_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*Region_FieldSubPathArrayOfValues)
}

func (RegionPathSelectorMetadataLabels) WithKey(key string) RegionMapPathSelectorMetadataLabels {
	return RegionMapPathSelectorMetadataLabels{key: key}
}

type RegionMapPathSelectorMetadataLabels struct {
	key string
}

func (s RegionMapPathSelectorMetadataLabels) FieldPath() *Region_FieldSubPath {
	return &Region_FieldSubPath{
		selector: Region_FieldPathSelectorMetadata,
		subPath:  ntt_meta.NewMetaFieldPathBuilder().Labels().WithKey(s.key).FieldPath(),
	}
}

func (s RegionMapPathSelectorMetadataLabels) WithValue(value string) *Region_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*Region_FieldSubPathValue)
}

func (s RegionMapPathSelectorMetadataLabels) WithArrayOfValues(values []string) *Region_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*Region_FieldSubPathArrayOfValues)
}

type RegionPathSelectorMetadataAnnotations struct{}

func (RegionPathSelectorMetadataAnnotations) FieldPath() *Region_FieldSubPath {
	return &Region_FieldSubPath{
		selector: Region_FieldPathSelectorMetadata,
		subPath:  ntt_meta.NewMetaFieldPathBuilder().Annotations().FieldPath(),
	}
}

func (s RegionPathSelectorMetadataAnnotations) WithValue(value map[string]string) *Region_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*Region_FieldSubPathValue)
}

func (s RegionPathSelectorMetadataAnnotations) WithArrayOfValues(values []map[string]string) *Region_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*Region_FieldSubPathArrayOfValues)
}

func (RegionPathSelectorMetadataAnnotations) WithKey(key string) RegionMapPathSelectorMetadataAnnotations {
	return RegionMapPathSelectorMetadataAnnotations{key: key}
}

type RegionMapPathSelectorMetadataAnnotations struct {
	key string
}

func (s RegionMapPathSelectorMetadataAnnotations) FieldPath() *Region_FieldSubPath {
	return &Region_FieldSubPath{
		selector: Region_FieldPathSelectorMetadata,
		subPath:  ntt_meta.NewMetaFieldPathBuilder().Annotations().WithKey(s.key).FieldPath(),
	}
}

func (s RegionMapPathSelectorMetadataAnnotations) WithValue(value string) *Region_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*Region_FieldSubPathValue)
}

func (s RegionMapPathSelectorMetadataAnnotations) WithArrayOfValues(values []string) *Region_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*Region_FieldSubPathArrayOfValues)
}

type RegionPathSelectorMetadataGeneration struct{}

func (RegionPathSelectorMetadataGeneration) FieldPath() *Region_FieldSubPath {
	return &Region_FieldSubPath{
		selector: Region_FieldPathSelectorMetadata,
		subPath:  ntt_meta.NewMetaFieldPathBuilder().Generation().FieldPath(),
	}
}

func (s RegionPathSelectorMetadataGeneration) WithValue(value int64) *Region_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*Region_FieldSubPathValue)
}

func (s RegionPathSelectorMetadataGeneration) WithArrayOfValues(values []int64) *Region_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*Region_FieldSubPathArrayOfValues)
}

type RegionPathSelectorMetadataResourceVersion struct{}

func (RegionPathSelectorMetadataResourceVersion) FieldPath() *Region_FieldSubPath {
	return &Region_FieldSubPath{
		selector: Region_FieldPathSelectorMetadata,
		subPath:  ntt_meta.NewMetaFieldPathBuilder().ResourceVersion().FieldPath(),
	}
}

func (s RegionPathSelectorMetadataResourceVersion) WithValue(value string) *Region_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*Region_FieldSubPathValue)
}

func (s RegionPathSelectorMetadataResourceVersion) WithArrayOfValues(values []string) *Region_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*Region_FieldSubPathArrayOfValues)
}

type RegionPathSelectorMetadataOwnerReferences struct{}

func (RegionPathSelectorMetadataOwnerReferences) FieldPath() *Region_FieldSubPath {
	return &Region_FieldSubPath{
		selector: Region_FieldPathSelectorMetadata,
		subPath:  ntt_meta.NewMetaFieldPathBuilder().OwnerReferences().FieldPath(),
	}
}

func (s RegionPathSelectorMetadataOwnerReferences) WithValue(value []*ntt_meta.OwnerReference) *Region_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*Region_FieldSubPathValue)
}

func (s RegionPathSelectorMetadataOwnerReferences) WithArrayOfValues(values [][]*ntt_meta.OwnerReference) *Region_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*Region_FieldSubPathArrayOfValues)
}

func (s RegionPathSelectorMetadataOwnerReferences) WithItemValue(value *ntt_meta.OwnerReference) *Region_FieldSubPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*Region_FieldSubPathArrayItemValue)
}

func (RegionPathSelectorMetadataOwnerReferences) ApiVersion() RegionPathSelectorMetadataOwnerReferencesApiVersion {
	return RegionPathSelectorMetadataOwnerReferencesApiVersion{}
}

func (RegionPathSelectorMetadataOwnerReferences) Kind() RegionPathSelectorMetadataOwnerReferencesKind {
	return RegionPathSelectorMetadataOwnerReferencesKind{}
}

func (RegionPathSelectorMetadataOwnerReferences) Name() RegionPathSelectorMetadataOwnerReferencesName {
	return RegionPathSelectorMetadataOwnerReferencesName{}
}

func (RegionPathSelectorMetadataOwnerReferences) Uid() RegionPathSelectorMetadataOwnerReferencesUid {
	return RegionPathSelectorMetadataOwnerReferencesUid{}
}

func (RegionPathSelectorMetadataOwnerReferences) Controller() RegionPathSelectorMetadataOwnerReferencesController {
	return RegionPathSelectorMetadataOwnerReferencesController{}
}

func (RegionPathSelectorMetadataOwnerReferences) BlockOwnerDeletion() RegionPathSelectorMetadataOwnerReferencesBlockOwnerDeletion {
	return RegionPathSelectorMetadataOwnerReferencesBlockOwnerDeletion{}
}

type RegionPathSelectorMetadataOwnerReferencesApiVersion struct{}

func (RegionPathSelectorMetadataOwnerReferencesApiVersion) FieldPath() *Region_FieldSubPath {
	return &Region_FieldSubPath{
		selector: Region_FieldPathSelectorMetadata,
		subPath:  ntt_meta.NewMetaFieldPathBuilder().OwnerReferences().ApiVersion().FieldPath(),
	}
}

func (s RegionPathSelectorMetadataOwnerReferencesApiVersion) WithValue(value string) *Region_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*Region_FieldSubPathValue)
}

func (s RegionPathSelectorMetadataOwnerReferencesApiVersion) WithArrayOfValues(values []string) *Region_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*Region_FieldSubPathArrayOfValues)
}

type RegionPathSelectorMetadataOwnerReferencesKind struct{}

func (RegionPathSelectorMetadataOwnerReferencesKind) FieldPath() *Region_FieldSubPath {
	return &Region_FieldSubPath{
		selector: Region_FieldPathSelectorMetadata,
		subPath:  ntt_meta.NewMetaFieldPathBuilder().OwnerReferences().Kind().FieldPath(),
	}
}

func (s RegionPathSelectorMetadataOwnerReferencesKind) WithValue(value string) *Region_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*Region_FieldSubPathValue)
}

func (s RegionPathSelectorMetadataOwnerReferencesKind) WithArrayOfValues(values []string) *Region_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*Region_FieldSubPathArrayOfValues)
}

type RegionPathSelectorMetadataOwnerReferencesName struct{}

func (RegionPathSelectorMetadataOwnerReferencesName) FieldPath() *Region_FieldSubPath {
	return &Region_FieldSubPath{
		selector: Region_FieldPathSelectorMetadata,
		subPath:  ntt_meta.NewMetaFieldPathBuilder().OwnerReferences().Name().FieldPath(),
	}
}

func (s RegionPathSelectorMetadataOwnerReferencesName) WithValue(value string) *Region_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*Region_FieldSubPathValue)
}

func (s RegionPathSelectorMetadataOwnerReferencesName) WithArrayOfValues(values []string) *Region_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*Region_FieldSubPathArrayOfValues)
}

type RegionPathSelectorMetadataOwnerReferencesUid struct{}

func (RegionPathSelectorMetadataOwnerReferencesUid) FieldPath() *Region_FieldSubPath {
	return &Region_FieldSubPath{
		selector: Region_FieldPathSelectorMetadata,
		subPath:  ntt_meta.NewMetaFieldPathBuilder().OwnerReferences().Uid().FieldPath(),
	}
}

func (s RegionPathSelectorMetadataOwnerReferencesUid) WithValue(value string) *Region_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*Region_FieldSubPathValue)
}

func (s RegionPathSelectorMetadataOwnerReferencesUid) WithArrayOfValues(values []string) *Region_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*Region_FieldSubPathArrayOfValues)
}

type RegionPathSelectorMetadataOwnerReferencesController struct{}

func (RegionPathSelectorMetadataOwnerReferencesController) FieldPath() *Region_FieldSubPath {
	return &Region_FieldSubPath{
		selector: Region_FieldPathSelectorMetadata,
		subPath:  ntt_meta.NewMetaFieldPathBuilder().OwnerReferences().Controller().FieldPath(),
	}
}

func (s RegionPathSelectorMetadataOwnerReferencesController) WithValue(value bool) *Region_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*Region_FieldSubPathValue)
}

func (s RegionPathSelectorMetadataOwnerReferencesController) WithArrayOfValues(values []bool) *Region_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*Region_FieldSubPathArrayOfValues)
}

type RegionPathSelectorMetadataOwnerReferencesBlockOwnerDeletion struct{}

func (RegionPathSelectorMetadataOwnerReferencesBlockOwnerDeletion) FieldPath() *Region_FieldSubPath {
	return &Region_FieldSubPath{
		selector: Region_FieldPathSelectorMetadata,
		subPath:  ntt_meta.NewMetaFieldPathBuilder().OwnerReferences().BlockOwnerDeletion().FieldPath(),
	}
}

func (s RegionPathSelectorMetadataOwnerReferencesBlockOwnerDeletion) WithValue(value bool) *Region_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*Region_FieldSubPathValue)
}

func (s RegionPathSelectorMetadataOwnerReferencesBlockOwnerDeletion) WithArrayOfValues(values []bool) *Region_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*Region_FieldSubPathArrayOfValues)
}

type RegionPathSelectorMetadataShards struct{}

func (RegionPathSelectorMetadataShards) FieldPath() *Region_FieldSubPath {
	return &Region_FieldSubPath{
		selector: Region_FieldPathSelectorMetadata,
		subPath:  ntt_meta.NewMetaFieldPathBuilder().Shards().FieldPath(),
	}
}

func (s RegionPathSelectorMetadataShards) WithValue(value map[string]int64) *Region_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*Region_FieldSubPathValue)
}

func (s RegionPathSelectorMetadataShards) WithArrayOfValues(values []map[string]int64) *Region_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*Region_FieldSubPathArrayOfValues)
}

func (RegionPathSelectorMetadataShards) WithKey(key string) RegionMapPathSelectorMetadataShards {
	return RegionMapPathSelectorMetadataShards{key: key}
}

type RegionMapPathSelectorMetadataShards struct {
	key string
}

func (s RegionMapPathSelectorMetadataShards) FieldPath() *Region_FieldSubPath {
	return &Region_FieldSubPath{
		selector: Region_FieldPathSelectorMetadata,
		subPath:  ntt_meta.NewMetaFieldPathBuilder().Shards().WithKey(s.key).FieldPath(),
	}
}

func (s RegionMapPathSelectorMetadataShards) WithValue(value int64) *Region_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*Region_FieldSubPathValue)
}

func (s RegionMapPathSelectorMetadataShards) WithArrayOfValues(values []int64) *Region_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*Region_FieldSubPathArrayOfValues)
}

type RegionPathSelectorMetadataSyncing struct{}

func (RegionPathSelectorMetadataSyncing) FieldPath() *Region_FieldSubPath {
	return &Region_FieldSubPath{
		selector: Region_FieldPathSelectorMetadata,
		subPath:  ntt_meta.NewMetaFieldPathBuilder().Syncing().FieldPath(),
	}
}

func (s RegionPathSelectorMetadataSyncing) WithValue(value *ntt_meta.SyncingMeta) *Region_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*Region_FieldSubPathValue)
}

func (s RegionPathSelectorMetadataSyncing) WithArrayOfValues(values []*ntt_meta.SyncingMeta) *Region_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*Region_FieldSubPathArrayOfValues)
}

func (RegionPathSelectorMetadataSyncing) OwningRegion() RegionPathSelectorMetadataSyncingOwningRegion {
	return RegionPathSelectorMetadataSyncingOwningRegion{}
}

func (RegionPathSelectorMetadataSyncing) Regions() RegionPathSelectorMetadataSyncingRegions {
	return RegionPathSelectorMetadataSyncingRegions{}
}

type RegionPathSelectorMetadataSyncingOwningRegion struct{}

func (RegionPathSelectorMetadataSyncingOwningRegion) FieldPath() *Region_FieldSubPath {
	return &Region_FieldSubPath{
		selector: Region_FieldPathSelectorMetadata,
		subPath:  ntt_meta.NewMetaFieldPathBuilder().Syncing().OwningRegion().FieldPath(),
	}
}

func (s RegionPathSelectorMetadataSyncingOwningRegion) WithValue(value string) *Region_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*Region_FieldSubPathValue)
}

func (s RegionPathSelectorMetadataSyncingOwningRegion) WithArrayOfValues(values []string) *Region_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*Region_FieldSubPathArrayOfValues)
}

type RegionPathSelectorMetadataSyncingRegions struct{}

func (RegionPathSelectorMetadataSyncingRegions) FieldPath() *Region_FieldSubPath {
	return &Region_FieldSubPath{
		selector: Region_FieldPathSelectorMetadata,
		subPath:  ntt_meta.NewMetaFieldPathBuilder().Syncing().Regions().FieldPath(),
	}
}

func (s RegionPathSelectorMetadataSyncingRegions) WithValue(value []string) *Region_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*Region_FieldSubPathValue)
}

func (s RegionPathSelectorMetadataSyncingRegions) WithArrayOfValues(values [][]string) *Region_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*Region_FieldSubPathArrayOfValues)
}

func (s RegionPathSelectorMetadataSyncingRegions) WithItemValue(value string) *Region_FieldSubPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*Region_FieldSubPathArrayItemValue)
}

type RegionRegionLocationFieldPathBuilder struct{}

func NewRegionRegionLocationFieldPathBuilder() RegionRegionLocationFieldPathBuilder {
	return RegionRegionLocationFieldPathBuilder{}
}
func (RegionRegionLocationFieldPathBuilder) Continent() Region_RegionLocationPathSelectorContinent {
	return Region_RegionLocationPathSelectorContinent{}
}
func (RegionRegionLocationFieldPathBuilder) Country() Region_RegionLocationPathSelectorCountry {
	return Region_RegionLocationPathSelectorCountry{}
}
func (RegionRegionLocationFieldPathBuilder) Agglomeration() Region_RegionLocationPathSelectorAgglomeration {
	return Region_RegionLocationPathSelectorAgglomeration{}
}
func (RegionRegionLocationFieldPathBuilder) City() Region_RegionLocationPathSelectorCity {
	return Region_RegionLocationPathSelectorCity{}
}
func (RegionRegionLocationFieldPathBuilder) Cloud() Region_RegionLocationPathSelectorCloud {
	return Region_RegionLocationPathSelectorCloud{}
}

type Region_RegionLocationPathSelectorContinent struct{}

func (Region_RegionLocationPathSelectorContinent) FieldPath() *RegionRegionLocation_FieldTerminalPath {
	return &RegionRegionLocation_FieldTerminalPath{selector: RegionRegionLocation_FieldPathSelectorContinent}
}

func (s Region_RegionLocationPathSelectorContinent) WithValue(value string) *RegionRegionLocation_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*RegionRegionLocation_FieldTerminalPathValue)
}

func (s Region_RegionLocationPathSelectorContinent) WithArrayOfValues(values []string) *RegionRegionLocation_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*RegionRegionLocation_FieldTerminalPathArrayOfValues)
}

type Region_RegionLocationPathSelectorCountry struct{}

func (Region_RegionLocationPathSelectorCountry) FieldPath() *RegionRegionLocation_FieldTerminalPath {
	return &RegionRegionLocation_FieldTerminalPath{selector: RegionRegionLocation_FieldPathSelectorCountry}
}

func (s Region_RegionLocationPathSelectorCountry) WithValue(value string) *RegionRegionLocation_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*RegionRegionLocation_FieldTerminalPathValue)
}

func (s Region_RegionLocationPathSelectorCountry) WithArrayOfValues(values []string) *RegionRegionLocation_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*RegionRegionLocation_FieldTerminalPathArrayOfValues)
}

type Region_RegionLocationPathSelectorAgglomeration struct{}

func (Region_RegionLocationPathSelectorAgglomeration) FieldPath() *RegionRegionLocation_FieldTerminalPath {
	return &RegionRegionLocation_FieldTerminalPath{selector: RegionRegionLocation_FieldPathSelectorAgglomeration}
}

func (s Region_RegionLocationPathSelectorAgglomeration) WithValue(value string) *RegionRegionLocation_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*RegionRegionLocation_FieldTerminalPathValue)
}

func (s Region_RegionLocationPathSelectorAgglomeration) WithArrayOfValues(values []string) *RegionRegionLocation_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*RegionRegionLocation_FieldTerminalPathArrayOfValues)
}

type Region_RegionLocationPathSelectorCity struct{}

func (Region_RegionLocationPathSelectorCity) FieldPath() *RegionRegionLocation_FieldTerminalPath {
	return &RegionRegionLocation_FieldTerminalPath{selector: RegionRegionLocation_FieldPathSelectorCity}
}

func (s Region_RegionLocationPathSelectorCity) WithValue(value string) *RegionRegionLocation_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*RegionRegionLocation_FieldTerminalPathValue)
}

func (s Region_RegionLocationPathSelectorCity) WithArrayOfValues(values []string) *RegionRegionLocation_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*RegionRegionLocation_FieldTerminalPathArrayOfValues)
}

type Region_RegionLocationPathSelectorCloud struct{}

func (Region_RegionLocationPathSelectorCloud) FieldPath() *RegionRegionLocation_FieldTerminalPath {
	return &RegionRegionLocation_FieldTerminalPath{selector: RegionRegionLocation_FieldPathSelectorCloud}
}

func (s Region_RegionLocationPathSelectorCloud) WithValue(value string) *RegionRegionLocation_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*RegionRegionLocation_FieldTerminalPathValue)
}

func (s Region_RegionLocationPathSelectorCloud) WithArrayOfValues(values []string) *RegionRegionLocation_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*RegionRegionLocation_FieldTerminalPathArrayOfValues)
}

type RegionRegionConnectivityPreferenceFieldPathBuilder struct{}

func NewRegionRegionConnectivityPreferenceFieldPathBuilder() RegionRegionConnectivityPreferenceFieldPathBuilder {
	return RegionRegionConnectivityPreferenceFieldPathBuilder{}
}
func (RegionRegionConnectivityPreferenceFieldPathBuilder) Dest() Region_RegionConnectivityPreferencePathSelectorDest {
	return Region_RegionConnectivityPreferencePathSelectorDest{}
}
func (RegionRegionConnectivityPreferenceFieldPathBuilder) Score() Region_RegionConnectivityPreferencePathSelectorScore {
	return Region_RegionConnectivityPreferencePathSelectorScore{}
}

type Region_RegionConnectivityPreferencePathSelectorDest struct{}

func (Region_RegionConnectivityPreferencePathSelectorDest) FieldPath() *RegionRegionConnectivityPreference_FieldTerminalPath {
	return &RegionRegionConnectivityPreference_FieldTerminalPath{selector: RegionRegionConnectivityPreference_FieldPathSelectorDest}
}

func (s Region_RegionConnectivityPreferencePathSelectorDest) WithValue(value *Reference) *RegionRegionConnectivityPreference_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*RegionRegionConnectivityPreference_FieldTerminalPathValue)
}

func (s Region_RegionConnectivityPreferencePathSelectorDest) WithArrayOfValues(values []*Reference) *RegionRegionConnectivityPreference_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*RegionRegionConnectivityPreference_FieldTerminalPathArrayOfValues)
}

type Region_RegionConnectivityPreferencePathSelectorScore struct{}

func (Region_RegionConnectivityPreferencePathSelectorScore) FieldPath() *RegionRegionConnectivityPreference_FieldTerminalPath {
	return &RegionRegionConnectivityPreference_FieldTerminalPath{selector: RegionRegionConnectivityPreference_FieldPathSelectorScore}
}

func (s Region_RegionConnectivityPreferencePathSelectorScore) WithValue(value int32) *RegionRegionConnectivityPreference_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*RegionRegionConnectivityPreference_FieldTerminalPathValue)
}

func (s Region_RegionConnectivityPreferencePathSelectorScore) WithArrayOfValues(values []int32) *RegionRegionConnectivityPreference_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*RegionRegionConnectivityPreference_FieldTerminalPathArrayOfValues)
}
