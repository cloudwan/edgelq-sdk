// Code generated by protoc-gen-goten-resource
// Resource: Alert
// DO NOT EDIT!!!

package alert

import (
	gotenobject "github.com/cloudwan/goten-sdk/runtime/object"
	gotenresource "github.com/cloudwan/goten-sdk/runtime/resource"
)

// proto imports
import (
	ntt_meta "github.com/cloudwan/edgelq-sdk/common/types/meta"
	monitoring_common "github.com/cloudwan/edgelq-sdk/monitoring/common/v3"
	alerting_condition "github.com/cloudwan/edgelq-sdk/monitoring/resources/v3/alerting_condition"
)

// ensure the imports are used
var (
	_ = gotenobject.FieldPath(nil)
	_ = gotenresource.ListQuery(nil)
)

// make sure we're using proto imports
var (
	_ = &ntt_meta.Meta{}
	_ = &alerting_condition.AlertingCondition{}
	_ = &monitoring_common.LabelDescriptor{}
)

var (
	descriptor = &Descriptor{
		typeName: gotenresource.NewTypeName(
			"Alert", "Alerts", "monitoring.edgelq.com"),
		nameDescriptor: gotenresource.NewNameDescriptor(
			&Alert_FieldTerminalPath{selector: Alert_FieldPathSelectorName},
			"pattern", "alertId",
			[]string{"projectId", "regionId", "alertingPolicyId", "alertingConditionId"},
			[]gotenresource.NamePattern{NamePattern_Project_Region_AlertingPolicy_AlertingCondition}),
	}
)

type Descriptor struct {
	nameDescriptor *gotenresource.NameDescriptor
	typeName       *gotenresource.TypeName
}

func GetDescriptor() *Descriptor {
	return descriptor
}

func (d *Descriptor) NewAlert() *Alert {
	return &Alert{}
}

func (d *Descriptor) NewResource() gotenresource.Resource {
	return d.NewAlert()
}

func (d *Descriptor) NewResourceName() gotenresource.Name {
	return NewNameBuilder().Name()
}

func (d *Descriptor) NewAlertName() *Name {
	return NewNameBuilder().Name()
}

func (d *Descriptor) NewGetQuery() gotenresource.GetQuery {
	return &GetQuery{}
}

func (d *Descriptor) NewListQuery() gotenresource.ListQuery {
	return &ListQuery{}
}

func (d *Descriptor) NewSearchQuery() gotenresource.SearchQuery {
	return nil
}

func (d *Descriptor) NewWatchQuery() gotenresource.WatchQuery {
	return &WatchQuery{}
}
func (d *Descriptor) NewAlertCursor() *PagerCursor {
	return &PagerCursor{}
}

func (d *Descriptor) NewResourceCursor() gotenresource.Cursor {
	return d.NewAlertCursor()
}
func (d *Descriptor) NewAlertChange() *AlertChange {
	return &AlertChange{}
}

func (d *Descriptor) NewResourceChange() gotenresource.ResourceChange {
	return d.NewAlertChange()
}

func (d *Descriptor) NewAlertQueryResultSnapshot() *QueryResultSnapshot {
	return &QueryResultSnapshot{}
}

func (d *Descriptor) NewQueryResultSnapshot() gotenresource.QueryResultSnapshot {
	return d.NewAlertQueryResultSnapshot()
}
func (d *Descriptor) NewAlertQueryResultChange() *QueryResultChange {
	return &QueryResultChange{}
}

func (d *Descriptor) NewSearchQueryResultSnapshot() gotenresource.SearchQueryResultSnapshot {
	return nil
}

func (d *Descriptor) NewQueryResultChange() gotenresource.QueryResultChange {
	return d.NewAlertQueryResultChange()
}

func (d *Descriptor) NewAlertList(size, reserved int) AlertList {
	return make(AlertList, size, reserved)
}

func (d *Descriptor) NewResourceList(size, reserved int) gotenresource.ResourceList {
	return make(AlertList, size, reserved)
}
func (d *Descriptor) NewAlertChangeList(size, reserved int) AlertChangeList {
	return make(AlertChangeList, size, reserved)
}

func (d *Descriptor) NewResourceChangeList(size, reserved int) gotenresource.ResourceChangeList {
	return make(AlertChangeList, size, reserved)
}

func (d *Descriptor) NewAlertNameList(size, reserved int) AlertNameList {
	return make(AlertNameList, size, reserved)
}

func (d *Descriptor) NewNameList(size, reserved int) gotenresource.NameList {
	return make(AlertNameList, size, reserved)
}

func (d *Descriptor) NewAlertReferenceList(size, reserved int) AlertReferenceList {
	return make(AlertReferenceList, size, reserved)
}

func (d *Descriptor) NewReferenceList(size, reserved int) gotenresource.ReferenceList {
	return make(AlertReferenceList, size, reserved)
}
func (d *Descriptor) NewAlertParentNameList(size, reserved int) AlertParentNameList {
	return make(AlertParentNameList, size, reserved)
}

func (d *Descriptor) NewParentNameList(size, reserved int) gotenresource.ParentNameList {
	return make(AlertParentNameList, size, reserved)
}
func (d *Descriptor) NewAlertParentReferenceList(size, reserved int) AlertParentReferenceList {
	return make(AlertParentReferenceList, size, reserved)
}

func (d *Descriptor) NewParentReferenceList(size, reserved int) gotenresource.ParentReferenceList {
	return make(AlertParentReferenceList, size, reserved)
}

func (d *Descriptor) NewAlertMap(reserved int) AlertMap {
	return make(AlertMap, reserved)
}

func (d *Descriptor) NewResourceMap(reserved int) gotenresource.ResourceMap {
	return make(AlertMap, reserved)
}
func (d *Descriptor) NewAlertChangeMap(reserved int) AlertChangeMap {
	return make(AlertChangeMap, reserved)
}

func (d *Descriptor) NewResourceChangeMap(reserved int) gotenresource.ResourceChangeMap {
	return make(AlertChangeMap, reserved)
}

func (d *Descriptor) GetResourceTypeName() *gotenresource.TypeName {
	return d.typeName
}

func (d *Descriptor) GetNameDescriptor() *gotenresource.NameDescriptor {
	return d.nameDescriptor
}

func (d *Descriptor) ParseFieldPath(raw string) (gotenobject.FieldPath, error) {
	return ParseAlert_FieldPath(raw)
}

func (d *Descriptor) ParseAlertName(nameStr string) (*Name, error) {
	return ParseName(nameStr)
}

func (d *Descriptor) ParseResourceName(nameStr string) (gotenresource.Name, error) {
	return ParseName(nameStr)
}
