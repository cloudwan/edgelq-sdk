// Code generated by protoc-gen-goten-resource
// Resource: MetricDescriptor
// DO NOT EDIT!!!

package metric_descriptor

import (
	gotenobject "github.com/cloudwan/goten-sdk/runtime/object"
	gotenresource "github.com/cloudwan/goten-sdk/runtime/resource"
)

// proto imports
import (
	api "github.com/cloudwan/edgelq-sdk/common/api"
	ntt_meta "github.com/cloudwan/edgelq-sdk/common/types/meta"
	monitoring_common "github.com/cloudwan/edgelq-sdk/monitoring/common/v3"
	monitored_resource_descriptor "github.com/cloudwan/edgelq-sdk/monitoring/resources/v3/monitored_resource_descriptor"
	project "github.com/cloudwan/edgelq-sdk/monitoring/resources/v3/project"
)

// ensure the imports are used
var (
	_ = gotenobject.FieldPath(nil)
	_ = gotenresource.ListQuery(nil)
)

// make sure we're using proto imports
var (
	_ = api.LaunchStage(0)
	_ = &ntt_meta.Meta{}
	_ = &monitoring_common.LabelDescriptor{}
	_ = &monitored_resource_descriptor.MonitoredResourceDescriptor{}
	_ = &project.Project{}
)

var (
	descriptor = &Descriptor{
		typeName: gotenresource.NewTypeName(
			"MetricDescriptor", "MetricDescriptors", "monitoring.edgelq.com"),
		nameDescriptor: gotenresource.NewNameDescriptor(
			&MetricDescriptor_FieldTerminalPath{selector: MetricDescriptor_FieldPathSelectorName},
			"pattern", "metricDescriptorId",
			[]string{"projectId"},
			[]gotenresource.NamePattern{NamePattern_Project}),
	}
)

type Descriptor struct {
	nameDescriptor *gotenresource.NameDescriptor
	typeName       *gotenresource.TypeName
}

func GetDescriptor() *Descriptor {
	return descriptor
}

func (d *Descriptor) NewMetricDescriptor() *MetricDescriptor {
	return &MetricDescriptor{}
}

func (d *Descriptor) NewResource() gotenresource.Resource {
	return d.NewMetricDescriptor()
}

func (d *Descriptor) NewResourceName() gotenresource.Name {
	return NewNameBuilder().Name()
}

func (d *Descriptor) NewMetricDescriptorName() *Name {
	return NewNameBuilder().Name()
}

func (d *Descriptor) NewGetQuery() gotenresource.GetQuery {
	return &GetQuery{}
}

func (d *Descriptor) NewListQuery() gotenresource.ListQuery {
	return &ListQuery{}
}

func (d *Descriptor) NewSearchQuery() gotenresource.SearchQuery {
	return nil
}

func (d *Descriptor) NewWatchQuery() gotenresource.WatchQuery {
	return &WatchQuery{}
}
func (d *Descriptor) NewMetricDescriptorCursor() *PagerCursor {
	return &PagerCursor{}
}

func (d *Descriptor) NewResourceCursor() gotenresource.Cursor {
	return d.NewMetricDescriptorCursor()
}
func (d *Descriptor) NewMetricDescriptorChange() *MetricDescriptorChange {
	return &MetricDescriptorChange{}
}

func (d *Descriptor) NewResourceChange() gotenresource.ResourceChange {
	return d.NewMetricDescriptorChange()
}

func (d *Descriptor) NewMetricDescriptorQueryResultSnapshot() *QueryResultSnapshot {
	return &QueryResultSnapshot{}
}

func (d *Descriptor) NewQueryResultSnapshot() gotenresource.QueryResultSnapshot {
	return d.NewMetricDescriptorQueryResultSnapshot()
}
func (d *Descriptor) NewMetricDescriptorQueryResultChange() *QueryResultChange {
	return &QueryResultChange{}
}

func (d *Descriptor) NewSearchQueryResultSnapshot() gotenresource.SearchQueryResultSnapshot {
	return nil
}

func (d *Descriptor) NewQueryResultChange() gotenresource.QueryResultChange {
	return d.NewMetricDescriptorQueryResultChange()
}

func (d *Descriptor) NewMetricDescriptorList(size, reserved int) MetricDescriptorList {
	return make(MetricDescriptorList, size, reserved)
}

func (d *Descriptor) NewResourceList(size, reserved int) gotenresource.ResourceList {
	return make(MetricDescriptorList, size, reserved)
}
func (d *Descriptor) NewMetricDescriptorChangeList(size, reserved int) MetricDescriptorChangeList {
	return make(MetricDescriptorChangeList, size, reserved)
}

func (d *Descriptor) NewResourceChangeList(size, reserved int) gotenresource.ResourceChangeList {
	return make(MetricDescriptorChangeList, size, reserved)
}

func (d *Descriptor) NewMetricDescriptorNameList(size, reserved int) MetricDescriptorNameList {
	return make(MetricDescriptorNameList, size, reserved)
}

func (d *Descriptor) NewNameList(size, reserved int) gotenresource.NameList {
	return make(MetricDescriptorNameList, size, reserved)
}

func (d *Descriptor) NewMetricDescriptorReferenceList(size, reserved int) MetricDescriptorReferenceList {
	return make(MetricDescriptorReferenceList, size, reserved)
}

func (d *Descriptor) NewReferenceList(size, reserved int) gotenresource.ReferenceList {
	return make(MetricDescriptorReferenceList, size, reserved)
}
func (d *Descriptor) NewMetricDescriptorParentNameList(size, reserved int) MetricDescriptorParentNameList {
	return make(MetricDescriptorParentNameList, size, reserved)
}

func (d *Descriptor) NewParentNameList(size, reserved int) gotenresource.ParentNameList {
	return make(MetricDescriptorParentNameList, size, reserved)
}
func (d *Descriptor) NewMetricDescriptorParentReferenceList(size, reserved int) MetricDescriptorParentReferenceList {
	return make(MetricDescriptorParentReferenceList, size, reserved)
}

func (d *Descriptor) NewParentReferenceList(size, reserved int) gotenresource.ParentReferenceList {
	return make(MetricDescriptorParentReferenceList, size, reserved)
}

func (d *Descriptor) NewMetricDescriptorMap(reserved int) MetricDescriptorMap {
	return make(MetricDescriptorMap, reserved)
}

func (d *Descriptor) NewResourceMap(reserved int) gotenresource.ResourceMap {
	return make(MetricDescriptorMap, reserved)
}
func (d *Descriptor) NewMetricDescriptorChangeMap(reserved int) MetricDescriptorChangeMap {
	return make(MetricDescriptorChangeMap, reserved)
}

func (d *Descriptor) NewResourceChangeMap(reserved int) gotenresource.ResourceChangeMap {
	return make(MetricDescriptorChangeMap, reserved)
}

func (d *Descriptor) GetResourceTypeName() *gotenresource.TypeName {
	return d.typeName
}

func (d *Descriptor) GetNameDescriptor() *gotenresource.NameDescriptor {
	return d.nameDescriptor
}

func (d *Descriptor) ParseFieldPath(raw string) (gotenobject.FieldPath, error) {
	return ParseMetricDescriptor_FieldPath(raw)
}

func (d *Descriptor) ParseMetricDescriptorName(nameStr string) (*Name, error) {
	return ParseName(nameStr)
}

func (d *Descriptor) ParseResourceName(nameStr string) (gotenresource.Name, error) {
	return ParseName(nameStr)
}
