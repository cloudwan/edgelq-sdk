// Code generated by protoc-gen-goten-go
// File: edgelq/monitoring/proto/v4/time_series_forwarder_sink_change.proto
// DO NOT EDIT!!!

package time_series_forwarder_sink

import (
	"fmt"
	"reflect"
	"sync"

	"google.golang.org/protobuf/encoding/protojson"
	"google.golang.org/protobuf/proto"
	preflect "google.golang.org/protobuf/reflect/protoreflect"
	"google.golang.org/protobuf/runtime/protoimpl"
)

// proto imports
import (
	project "github.com/cloudwan/edgelq-sdk/monitoring/resources/v4/project"
	fieldmaskpb "google.golang.org/protobuf/types/known/fieldmaskpb"
)

// Reference imports to suppress errors if they are not otherwise used.
var (
	_ = fmt.Errorf
	_ = reflect.Method{}
	_ = sync.Once{}

	_ = protojson.MarshalOptions{}
	_ = proto.MarshalOptions{}
	_ = preflect.Value{}
	_ = protoimpl.DescBuilder{}
)

// make sure we're using proto imports
var (
	_ = &project.Project{}
	_ = &fieldmaskpb.FieldMask{}
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// TimeSeriesForwarderSinkChange is used by Watch notifications Responses to
// describe change of single TimeSeriesForwarderSink One of Added, Modified,
// Removed
type TimeSeriesForwarderSinkChange struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
	// TimeSeriesForwarderSink change
	//
	// Types that are valid to be assigned to ChangeType:
	//	*TimeSeriesForwarderSinkChange_Added_
	//	*TimeSeriesForwarderSinkChange_Modified_
	//	*TimeSeriesForwarderSinkChange_Current_
	//	*TimeSeriesForwarderSinkChange_Removed_
	ChangeType isTimeSeriesForwarderSinkChange_ChangeType `protobuf_oneof:"change_type"`
}

func (m *TimeSeriesForwarderSinkChange) Reset() {
	*m = TimeSeriesForwarderSinkChange{}
	if protoimpl.UnsafeEnabled {
		mi := &edgelq_monitoring_proto_v4_time_series_forwarder_sink_change_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(m))
		ms.StoreMessageInfo(mi)
	}
}

func (m *TimeSeriesForwarderSinkChange) String() string {
	return protoimpl.X.MessageStringOf(m)
}

func (*TimeSeriesForwarderSinkChange) ProtoMessage() {}

func (m *TimeSeriesForwarderSinkChange) ProtoReflect() preflect.Message {
	mi := &edgelq_monitoring_proto_v4_time_series_forwarder_sink_change_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && m != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(m))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(m)
}

func (*TimeSeriesForwarderSinkChange) GotenMessage() {}

// Deprecated, Use TimeSeriesForwarderSinkChange.ProtoReflect.Descriptor instead.
func (*TimeSeriesForwarderSinkChange) Descriptor() ([]byte, []int) {
	return edgelq_monitoring_proto_v4_time_series_forwarder_sink_change_proto_rawDescGZIP(), []int{0}
}

func (m *TimeSeriesForwarderSinkChange) Unmarshal(b []byte) error {
	return proto.Unmarshal(b, m)
}

func (m *TimeSeriesForwarderSinkChange) Marshal() ([]byte, error) {
	return proto.Marshal(m)
}

func (m *TimeSeriesForwarderSinkChange) MarshalJSON() ([]byte, error) {
	return protojson.MarshalOptions{}.Marshal(m)
}

func (m *TimeSeriesForwarderSinkChange) UnmarshalJSON(data []byte) error {
	return protojson.Unmarshal(data, m)
}

type isTimeSeriesForwarderSinkChange_ChangeType interface {
	isTimeSeriesForwarderSinkChange_ChangeType()
}

type TimeSeriesForwarderSinkChange_Added_ struct {
	// Added is returned when watched document is added, either created or
	// enters Query view
	Added *TimeSeriesForwarderSinkChange_Added `protobuf:"bytes,1,opt,name=added,proto3,oneof"`
}
type TimeSeriesForwarderSinkChange_Modified_ struct {
	// Modified is returned when watched document is modified
	Modified *TimeSeriesForwarderSinkChange_Modified `protobuf:"bytes,2,opt,name=modified,proto3,oneof"`
}
type TimeSeriesForwarderSinkChange_Current_ struct {
	// Current is returned in stateless watch when document enters query view or
	// is modified within.
	Current *TimeSeriesForwarderSinkChange_Current `protobuf:"bytes,4,opt,name=current,proto3,oneof"`
}
type TimeSeriesForwarderSinkChange_Removed_ struct {
	// Removed is returned when TimeSeriesForwarderSink is deleted or leaves
	// Query view
	Removed *TimeSeriesForwarderSinkChange_Removed `protobuf:"bytes,3,opt,name=removed,proto3,oneof"`
}

func (*TimeSeriesForwarderSinkChange_Added_) isTimeSeriesForwarderSinkChange_ChangeType()    {}
func (*TimeSeriesForwarderSinkChange_Modified_) isTimeSeriesForwarderSinkChange_ChangeType() {}
func (*TimeSeriesForwarderSinkChange_Current_) isTimeSeriesForwarderSinkChange_ChangeType()  {}
func (*TimeSeriesForwarderSinkChange_Removed_) isTimeSeriesForwarderSinkChange_ChangeType()  {}
func (m *TimeSeriesForwarderSinkChange) GetChangeType() isTimeSeriesForwarderSinkChange_ChangeType {
	if m != nil {
		return m.ChangeType
	}
	return nil
}
func (m *TimeSeriesForwarderSinkChange) GetAdded() *TimeSeriesForwarderSinkChange_Added {
	if x, ok := m.GetChangeType().(*TimeSeriesForwarderSinkChange_Added_); ok {
		return x.Added
	}
	return nil
}
func (m *TimeSeriesForwarderSinkChange) GetModified() *TimeSeriesForwarderSinkChange_Modified {
	if x, ok := m.GetChangeType().(*TimeSeriesForwarderSinkChange_Modified_); ok {
		return x.Modified
	}
	return nil
}
func (m *TimeSeriesForwarderSinkChange) GetCurrent() *TimeSeriesForwarderSinkChange_Current {
	if x, ok := m.GetChangeType().(*TimeSeriesForwarderSinkChange_Current_); ok {
		return x.Current
	}
	return nil
}
func (m *TimeSeriesForwarderSinkChange) GetRemoved() *TimeSeriesForwarderSinkChange_Removed {
	if x, ok := m.GetChangeType().(*TimeSeriesForwarderSinkChange_Removed_); ok {
		return x.Removed
	}
	return nil
}
func (m *TimeSeriesForwarderSinkChange) SetChangeType(ofv isTimeSeriesForwarderSinkChange_ChangeType) {
	if m == nil {
		panic(fmt.Errorf("can't set %s on nil %s", "isTimeSeriesForwarderSinkChange_ChangeType", "TimeSeriesForwarderSinkChange"))
	}
	m.ChangeType = ofv
}
func (m *TimeSeriesForwarderSinkChange) SetAdded(fv *TimeSeriesForwarderSinkChange_Added) {
	m.SetChangeType(&TimeSeriesForwarderSinkChange_Added_{Added: fv})
}
func (m *TimeSeriesForwarderSinkChange) SetModified(fv *TimeSeriesForwarderSinkChange_Modified) {
	m.SetChangeType(&TimeSeriesForwarderSinkChange_Modified_{Modified: fv})
}
func (m *TimeSeriesForwarderSinkChange) SetCurrent(fv *TimeSeriesForwarderSinkChange_Current) {
	m.SetChangeType(&TimeSeriesForwarderSinkChange_Current_{Current: fv})
}
func (m *TimeSeriesForwarderSinkChange) SetRemoved(fv *TimeSeriesForwarderSinkChange_Removed) {
	m.SetChangeType(&TimeSeriesForwarderSinkChange_Removed_{Removed: fv})
}

// TimeSeriesForwarderSink has been added to query view
type TimeSeriesForwarderSinkChange_Added struct {
	state                   protoimpl.MessageState
	sizeCache               protoimpl.SizeCache
	unknownFields           protoimpl.UnknownFields
	TimeSeriesForwarderSink *TimeSeriesForwarderSink `protobuf:"bytes,1,opt,name=time_series_forwarder_sink,json=timeSeriesForwarderSink,proto3" json:"time_series_forwarder_sink,omitempty"`
	// Integer describing index of added TimeSeriesForwarderSink in resulting
	// query view.
	ViewIndex int32 `protobuf:"varint,2,opt,name=view_index,json=viewIndex,proto3" json:"view_index,omitempty"`
}

func (m *TimeSeriesForwarderSinkChange_Added) Reset() {
	*m = TimeSeriesForwarderSinkChange_Added{}
	if protoimpl.UnsafeEnabled {
		mi := &edgelq_monitoring_proto_v4_time_series_forwarder_sink_change_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(m))
		ms.StoreMessageInfo(mi)
	}
}

func (m *TimeSeriesForwarderSinkChange_Added) String() string {
	return protoimpl.X.MessageStringOf(m)
}

func (*TimeSeriesForwarderSinkChange_Added) ProtoMessage() {}

func (m *TimeSeriesForwarderSinkChange_Added) ProtoReflect() preflect.Message {
	mi := &edgelq_monitoring_proto_v4_time_series_forwarder_sink_change_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && m != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(m))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(m)
}

func (*TimeSeriesForwarderSinkChange_Added) GotenMessage() {}

// Deprecated, Use TimeSeriesForwarderSinkChange_Added.ProtoReflect.Descriptor instead.
func (*TimeSeriesForwarderSinkChange_Added) Descriptor() ([]byte, []int) {
	return edgelq_monitoring_proto_v4_time_series_forwarder_sink_change_proto_rawDescGZIP(), []int{0, 0}
}

func (m *TimeSeriesForwarderSinkChange_Added) Unmarshal(b []byte) error {
	return proto.Unmarshal(b, m)
}

func (m *TimeSeriesForwarderSinkChange_Added) Marshal() ([]byte, error) {
	return proto.Marshal(m)
}

func (m *TimeSeriesForwarderSinkChange_Added) MarshalJSON() ([]byte, error) {
	return protojson.MarshalOptions{}.Marshal(m)
}

func (m *TimeSeriesForwarderSinkChange_Added) UnmarshalJSON(data []byte) error {
	return protojson.Unmarshal(data, m)
}

func (m *TimeSeriesForwarderSinkChange_Added) GetTimeSeriesForwarderSink() *TimeSeriesForwarderSink {
	if m != nil {
		return m.TimeSeriesForwarderSink
	}
	return nil
}

func (m *TimeSeriesForwarderSinkChange_Added) GetViewIndex() int32 {
	if m != nil {
		return m.ViewIndex
	}
	return int32(0)
}

func (m *TimeSeriesForwarderSinkChange_Added) SetTimeSeriesForwarderSink(fv *TimeSeriesForwarderSink) {
	if m == nil {
		panic(fmt.Errorf("can't set %s on nil %s", "TimeSeriesForwarderSink", "TimeSeriesForwarderSinkChange_Added"))
	}
	m.TimeSeriesForwarderSink = fv
}

func (m *TimeSeriesForwarderSinkChange_Added) SetViewIndex(fv int32) {
	if m == nil {
		panic(fmt.Errorf("can't set %s on nil %s", "ViewIndex", "TimeSeriesForwarderSinkChange_Added"))
	}
	m.ViewIndex = fv
}

// TimeSeriesForwarderSink changed some of it's fields - contains either full
// document or masked change
type TimeSeriesForwarderSinkChange_Modified struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
	// Name of modified TimeSeriesForwarderSink
	Name *Name `protobuf:"bytes,1,opt,customtype=Name,name=name,proto3" json:"name,omitempty"`
	// New version of TimeSeriesForwarderSink or masked difference, depending on
	// mask_changes instrumentation of issued
	// [WatchTimeSeriesForwarderSinkRequest] or
	// [WatchTimeSeriesForwarderSinksRequest]
	TimeSeriesForwarderSink *TimeSeriesForwarderSink `protobuf:"bytes,2,opt,name=time_series_forwarder_sink,json=timeSeriesForwarderSink,proto3" json:"time_series_forwarder_sink,omitempty"`
	// Used when mask_changes is set, contains field paths of modified
	// properties.
	FieldMask *TimeSeriesForwarderSink_FieldMask `protobuf:"bytes,3,opt,customtype=TimeSeriesForwarderSink_FieldMask,name=field_mask,json=fieldMask,proto3" json:"field_mask,omitempty"`
	// Previous view index specifies previous position of modified
	// TimeSeriesForwarderSink. When modification doesn't affect sorted order,
	// value will remain identical to [view_index].
	PreviousViewIndex int32 `protobuf:"varint,4,opt,name=previous_view_index,json=previousViewIndex,proto3" json:"previous_view_index,omitempty"`
	// Integer specifying TimeSeriesForwarderSink new index in resulting query
	// view.
	ViewIndex int32 `protobuf:"varint,5,opt,name=view_index,json=viewIndex,proto3" json:"view_index,omitempty"`
}

func (m *TimeSeriesForwarderSinkChange_Modified) Reset() {
	*m = TimeSeriesForwarderSinkChange_Modified{}
	if protoimpl.UnsafeEnabled {
		mi := &edgelq_monitoring_proto_v4_time_series_forwarder_sink_change_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(m))
		ms.StoreMessageInfo(mi)
	}
}

func (m *TimeSeriesForwarderSinkChange_Modified) String() string {
	return protoimpl.X.MessageStringOf(m)
}

func (*TimeSeriesForwarderSinkChange_Modified) ProtoMessage() {}

func (m *TimeSeriesForwarderSinkChange_Modified) ProtoReflect() preflect.Message {
	mi := &edgelq_monitoring_proto_v4_time_series_forwarder_sink_change_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && m != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(m))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(m)
}

func (*TimeSeriesForwarderSinkChange_Modified) GotenMessage() {}

// Deprecated, Use TimeSeriesForwarderSinkChange_Modified.ProtoReflect.Descriptor instead.
func (*TimeSeriesForwarderSinkChange_Modified) Descriptor() ([]byte, []int) {
	return edgelq_monitoring_proto_v4_time_series_forwarder_sink_change_proto_rawDescGZIP(), []int{0, 1}
}

func (m *TimeSeriesForwarderSinkChange_Modified) Unmarshal(b []byte) error {
	return proto.Unmarshal(b, m)
}

func (m *TimeSeriesForwarderSinkChange_Modified) Marshal() ([]byte, error) {
	return proto.Marshal(m)
}

func (m *TimeSeriesForwarderSinkChange_Modified) MarshalJSON() ([]byte, error) {
	return protojson.MarshalOptions{}.Marshal(m)
}

func (m *TimeSeriesForwarderSinkChange_Modified) UnmarshalJSON(data []byte) error {
	return protojson.Unmarshal(data, m)
}

func (m *TimeSeriesForwarderSinkChange_Modified) GetName() *Name {
	if m != nil {
		return m.Name
	}
	return nil
}

func (m *TimeSeriesForwarderSinkChange_Modified) GetTimeSeriesForwarderSink() *TimeSeriesForwarderSink {
	if m != nil {
		return m.TimeSeriesForwarderSink
	}
	return nil
}

func (m *TimeSeriesForwarderSinkChange_Modified) GetFieldMask() *TimeSeriesForwarderSink_FieldMask {
	if m != nil {
		return m.FieldMask
	}
	return nil
}

func (m *TimeSeriesForwarderSinkChange_Modified) GetPreviousViewIndex() int32 {
	if m != nil {
		return m.PreviousViewIndex
	}
	return int32(0)
}

func (m *TimeSeriesForwarderSinkChange_Modified) GetViewIndex() int32 {
	if m != nil {
		return m.ViewIndex
	}
	return int32(0)
}

func (m *TimeSeriesForwarderSinkChange_Modified) SetName(fv *Name) {
	if m == nil {
		panic(fmt.Errorf("can't set %s on nil %s", "Name", "TimeSeriesForwarderSinkChange_Modified"))
	}
	m.Name = fv
}

func (m *TimeSeriesForwarderSinkChange_Modified) SetTimeSeriesForwarderSink(fv *TimeSeriesForwarderSink) {
	if m == nil {
		panic(fmt.Errorf("can't set %s on nil %s", "TimeSeriesForwarderSink", "TimeSeriesForwarderSinkChange_Modified"))
	}
	m.TimeSeriesForwarderSink = fv
}

func (m *TimeSeriesForwarderSinkChange_Modified) SetFieldMask(fv *TimeSeriesForwarderSink_FieldMask) {
	if m == nil {
		panic(fmt.Errorf("can't set %s on nil %s", "FieldMask", "TimeSeriesForwarderSinkChange_Modified"))
	}
	m.FieldMask = fv
}

func (m *TimeSeriesForwarderSinkChange_Modified) SetPreviousViewIndex(fv int32) {
	if m == nil {
		panic(fmt.Errorf("can't set %s on nil %s", "PreviousViewIndex", "TimeSeriesForwarderSinkChange_Modified"))
	}
	m.PreviousViewIndex = fv
}

func (m *TimeSeriesForwarderSinkChange_Modified) SetViewIndex(fv int32) {
	if m == nil {
		panic(fmt.Errorf("can't set %s on nil %s", "ViewIndex", "TimeSeriesForwarderSinkChange_Modified"))
	}
	m.ViewIndex = fv
}

// TimeSeriesForwarderSink has been added or modified in a query view. Version
// used for stateless watching
type TimeSeriesForwarderSinkChange_Current struct {
	state                   protoimpl.MessageState
	sizeCache               protoimpl.SizeCache
	unknownFields           protoimpl.UnknownFields
	TimeSeriesForwarderSink *TimeSeriesForwarderSink `protobuf:"bytes,1,opt,name=time_series_forwarder_sink,json=timeSeriesForwarderSink,proto3" json:"time_series_forwarder_sink,omitempty"`
}

func (m *TimeSeriesForwarderSinkChange_Current) Reset() {
	*m = TimeSeriesForwarderSinkChange_Current{}
	if protoimpl.UnsafeEnabled {
		mi := &edgelq_monitoring_proto_v4_time_series_forwarder_sink_change_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(m))
		ms.StoreMessageInfo(mi)
	}
}

func (m *TimeSeriesForwarderSinkChange_Current) String() string {
	return protoimpl.X.MessageStringOf(m)
}

func (*TimeSeriesForwarderSinkChange_Current) ProtoMessage() {}

func (m *TimeSeriesForwarderSinkChange_Current) ProtoReflect() preflect.Message {
	mi := &edgelq_monitoring_proto_v4_time_series_forwarder_sink_change_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && m != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(m))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(m)
}

func (*TimeSeriesForwarderSinkChange_Current) GotenMessage() {}

// Deprecated, Use TimeSeriesForwarderSinkChange_Current.ProtoReflect.Descriptor instead.
func (*TimeSeriesForwarderSinkChange_Current) Descriptor() ([]byte, []int) {
	return edgelq_monitoring_proto_v4_time_series_forwarder_sink_change_proto_rawDescGZIP(), []int{0, 2}
}

func (m *TimeSeriesForwarderSinkChange_Current) Unmarshal(b []byte) error {
	return proto.Unmarshal(b, m)
}

func (m *TimeSeriesForwarderSinkChange_Current) Marshal() ([]byte, error) {
	return proto.Marshal(m)
}

func (m *TimeSeriesForwarderSinkChange_Current) MarshalJSON() ([]byte, error) {
	return protojson.MarshalOptions{}.Marshal(m)
}

func (m *TimeSeriesForwarderSinkChange_Current) UnmarshalJSON(data []byte) error {
	return protojson.Unmarshal(data, m)
}

func (m *TimeSeriesForwarderSinkChange_Current) GetTimeSeriesForwarderSink() *TimeSeriesForwarderSink {
	if m != nil {
		return m.TimeSeriesForwarderSink
	}
	return nil
}

func (m *TimeSeriesForwarderSinkChange_Current) SetTimeSeriesForwarderSink(fv *TimeSeriesForwarderSink) {
	if m == nil {
		panic(fmt.Errorf("can't set %s on nil %s", "TimeSeriesForwarderSink", "TimeSeriesForwarderSinkChange_Current"))
	}
	m.TimeSeriesForwarderSink = fv
}

// Removed is returned when TimeSeriesForwarderSink is deleted or leaves Query
// view
type TimeSeriesForwarderSinkChange_Removed struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
	Name          *Name `protobuf:"bytes,1,opt,customtype=Name,name=name,proto3" json:"name,omitempty"`
	// Integer specifying removed TimeSeriesForwarderSink index. Not populated
	// in stateless watch type.
	ViewIndex int32 `protobuf:"varint,2,opt,name=view_index,json=viewIndex,proto3" json:"view_index,omitempty"`
}

func (m *TimeSeriesForwarderSinkChange_Removed) Reset() {
	*m = TimeSeriesForwarderSinkChange_Removed{}
	if protoimpl.UnsafeEnabled {
		mi := &edgelq_monitoring_proto_v4_time_series_forwarder_sink_change_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(m))
		ms.StoreMessageInfo(mi)
	}
}

func (m *TimeSeriesForwarderSinkChange_Removed) String() string {
	return protoimpl.X.MessageStringOf(m)
}

func (*TimeSeriesForwarderSinkChange_Removed) ProtoMessage() {}

func (m *TimeSeriesForwarderSinkChange_Removed) ProtoReflect() preflect.Message {
	mi := &edgelq_monitoring_proto_v4_time_series_forwarder_sink_change_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && m != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(m))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(m)
}

func (*TimeSeriesForwarderSinkChange_Removed) GotenMessage() {}

// Deprecated, Use TimeSeriesForwarderSinkChange_Removed.ProtoReflect.Descriptor instead.
func (*TimeSeriesForwarderSinkChange_Removed) Descriptor() ([]byte, []int) {
	return edgelq_monitoring_proto_v4_time_series_forwarder_sink_change_proto_rawDescGZIP(), []int{0, 3}
}

func (m *TimeSeriesForwarderSinkChange_Removed) Unmarshal(b []byte) error {
	return proto.Unmarshal(b, m)
}

func (m *TimeSeriesForwarderSinkChange_Removed) Marshal() ([]byte, error) {
	return proto.Marshal(m)
}

func (m *TimeSeriesForwarderSinkChange_Removed) MarshalJSON() ([]byte, error) {
	return protojson.MarshalOptions{}.Marshal(m)
}

func (m *TimeSeriesForwarderSinkChange_Removed) UnmarshalJSON(data []byte) error {
	return protojson.Unmarshal(data, m)
}

func (m *TimeSeriesForwarderSinkChange_Removed) GetName() *Name {
	if m != nil {
		return m.Name
	}
	return nil
}

func (m *TimeSeriesForwarderSinkChange_Removed) GetViewIndex() int32 {
	if m != nil {
		return m.ViewIndex
	}
	return int32(0)
}

func (m *TimeSeriesForwarderSinkChange_Removed) SetName(fv *Name) {
	if m == nil {
		panic(fmt.Errorf("can't set %s on nil %s", "Name", "TimeSeriesForwarderSinkChange_Removed"))
	}
	m.Name = fv
}

func (m *TimeSeriesForwarderSinkChange_Removed) SetViewIndex(fv int32) {
	if m == nil {
		panic(fmt.Errorf("can't set %s on nil %s", "ViewIndex", "TimeSeriesForwarderSinkChange_Removed"))
	}
	m.ViewIndex = fv
}

var edgelq_monitoring_proto_v4_time_series_forwarder_sink_change_proto preflect.FileDescriptor

var edgelq_monitoring_proto_v4_time_series_forwarder_sink_change_proto_rawDesc = []byte{
	0x0a, 0x42, 0x65, 0x64, 0x67, 0x65, 0x6c, 0x71, 0x2f, 0x6d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72,
	0x69, 0x6e, 0x67, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x76, 0x34, 0x2f, 0x74, 0x69, 0x6d,
	0x65, 0x5f, 0x73, 0x65, 0x72, 0x69, 0x65, 0x73, 0x5f, 0x66, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64,
	0x65, 0x72, 0x5f, 0x73, 0x69, 0x6e, 0x6b, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x11, 0x6e, 0x74, 0x74, 0x2e, 0x6d, 0x6f, 0x6e, 0x69, 0x74, 0x6f,
	0x72, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x34, 0x1a, 0x19, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f,
	0x61, 0x70, 0x69, 0x2f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x20, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x6d, 0x61, 0x73, 0x6b, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1d, 0x67, 0x6f, 0x74, 0x65, 0x6e, 0x2f, 0x61, 0x6e, 0x6e, 0x6f,
	0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x67, 0x6f, 0x74, 0x65, 0x6e, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x20, 0x67, 0x6f, 0x74, 0x65, 0x6e, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x3b, 0x65, 0x64, 0x67, 0x65, 0x6c, 0x71, 0x2f, 0x6d, 0x6f,
	0x6e, 0x69, 0x74, 0x6f, 0x72, 0x69, 0x6e, 0x67, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x76,
	0x34, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x69, 0x65, 0x73, 0x5f, 0x66, 0x6f,
	0x72, 0x77, 0x61, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x73, 0x69, 0x6e, 0x6b, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x22, 0xdd, 0x08, 0x0a, 0x1d, 0x54, 0x69, 0x6d, 0x65, 0x53, 0x65, 0x72, 0x69, 0x65,
	0x73, 0x46, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x65, 0x72, 0x53, 0x69, 0x6e, 0x6b, 0x43, 0x68,
	0x61, 0x6e, 0x67, 0x65, 0x12, 0x4e, 0x0a, 0x05, 0x61, 0x64, 0x64, 0x65, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x36, 0x2e, 0x6e, 0x74, 0x74, 0x2e, 0x6d, 0x6f, 0x6e, 0x69, 0x74, 0x6f,
	0x72, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x34, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x53, 0x65, 0x72, 0x69,
	0x65, 0x73, 0x46, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x65, 0x72, 0x53, 0x69, 0x6e, 0x6b, 0x43,
	0x68, 0x61, 0x6e, 0x67, 0x65, 0x2e, 0x41, 0x64, 0x64, 0x65, 0x64, 0x48, 0x00, 0x52, 0x05, 0x61,
	0x64, 0x64, 0x65, 0x64, 0x12, 0x57, 0x0a, 0x08, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x39, 0x2e, 0x6e, 0x74, 0x74, 0x2e, 0x6d, 0x6f, 0x6e,
	0x69, 0x74, 0x6f, 0x72, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x34, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x53,
	0x65, 0x72, 0x69, 0x65, 0x73, 0x46, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x65, 0x72, 0x53, 0x69,
	0x6e, 0x6b, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x2e, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65,
	0x64, 0x48, 0x00, 0x52, 0x08, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x64, 0x12, 0x54, 0x0a,
	0x07, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x38,
	0x2e, 0x6e, 0x74, 0x74, 0x2e, 0x6d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x69, 0x6e, 0x67, 0x2e,
	0x76, 0x34, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x53, 0x65, 0x72, 0x69, 0x65, 0x73, 0x46, 0x6f, 0x72,
	0x77, 0x61, 0x72, 0x64, 0x65, 0x72, 0x53, 0x69, 0x6e, 0x6b, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65,
	0x2e, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x48, 0x00, 0x52, 0x07, 0x63, 0x75, 0x72, 0x72,
	0x65, 0x6e, 0x74, 0x12, 0x54, 0x0a, 0x07, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x38, 0x2e, 0x6e, 0x74, 0x74, 0x2e, 0x6d, 0x6f, 0x6e, 0x69, 0x74,
	0x6f, 0x72, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x34, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x53, 0x65, 0x72,
	0x69, 0x65, 0x73, 0x46, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x65, 0x72, 0x53, 0x69, 0x6e, 0x6b,
	0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x64, 0x48, 0x00,
	0x52, 0x07, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x64, 0x1a, 0x8f, 0x01, 0x0a, 0x05, 0x41, 0x64,
	0x64, 0x65, 0x64, 0x12, 0x67, 0x0a, 0x1a, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x69,
	0x65, 0x73, 0x5f, 0x66, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x73, 0x69, 0x6e,
	0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x6e, 0x74, 0x74, 0x2e, 0x6d, 0x6f,
	0x6e, 0x69, 0x74, 0x6f, 0x72, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x34, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x53, 0x65, 0x72, 0x69, 0x65, 0x73, 0x46, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x65, 0x72, 0x53,
	0x69, 0x6e, 0x6b, 0x52, 0x17, 0x74, 0x69, 0x6d, 0x65, 0x53, 0x65, 0x72, 0x69, 0x65, 0x73, 0x46,
	0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x65, 0x72, 0x53, 0x69, 0x6e, 0x6b, 0x12, 0x1d, 0x0a, 0x0a,
	0x76, 0x69, 0x65, 0x77, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x09, 0x76, 0x69, 0x65, 0x77, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x1a, 0xd3, 0x02, 0x0a, 0x08,
	0x4d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x64, 0x12, 0x33, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x1f, 0xb2, 0xda, 0x21, 0x1b, 0x0a, 0x19, 0x0a, 0x17,
	0x54, 0x69, 0x6d, 0x65, 0x53, 0x65, 0x72, 0x69, 0x65, 0x73, 0x46, 0x6f, 0x72, 0x77, 0x61, 0x72,
	0x64, 0x65, 0x72, 0x53, 0x69, 0x6e, 0x6b, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x67, 0x0a,
	0x1a, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x69, 0x65, 0x73, 0x5f, 0x66, 0x6f, 0x72,
	0x77, 0x61, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x73, 0x69, 0x6e, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x2a, 0x2e, 0x6e, 0x74, 0x74, 0x2e, 0x6d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x69,
	0x6e, 0x67, 0x2e, 0x76, 0x34, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x53, 0x65, 0x72, 0x69, 0x65, 0x73,
	0x46, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x65, 0x72, 0x53, 0x69, 0x6e, 0x6b, 0x52, 0x17, 0x74,
	0x69, 0x6d, 0x65, 0x53, 0x65, 0x72, 0x69, 0x65, 0x73, 0x46, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64,
	0x65, 0x72, 0x53, 0x69, 0x6e, 0x6b, 0x12, 0x5a, 0x0a, 0x0a, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f,
	0x6d, 0x61, 0x73, 0x6b, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x46, 0x69, 0x65,
	0x6c, 0x64, 0x4d, 0x61, 0x73, 0x6b, 0x42, 0x1f, 0xb2, 0xda, 0x21, 0x1b, 0x32, 0x19, 0x0a, 0x17,
	0x54, 0x69, 0x6d, 0x65, 0x53, 0x65, 0x72, 0x69, 0x65, 0x73, 0x46, 0x6f, 0x72, 0x77, 0x61, 0x72,
	0x64, 0x65, 0x72, 0x53, 0x69, 0x6e, 0x6b, 0x52, 0x09, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x4d, 0x61,
	0x73, 0x6b, 0x12, 0x2e, 0x0a, 0x13, 0x70, 0x72, 0x65, 0x76, 0x69, 0x6f, 0x75, 0x73, 0x5f, 0x76,
	0x69, 0x65, 0x77, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x11, 0x70, 0x72, 0x65, 0x76, 0x69, 0x6f, 0x75, 0x73, 0x56, 0x69, 0x65, 0x77, 0x49, 0x6e, 0x64,
	0x65, 0x78, 0x12, 0x1d, 0x0a, 0x0a, 0x76, 0x69, 0x65, 0x77, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x76, 0x69, 0x65, 0x77, 0x49, 0x6e, 0x64, 0x65,
	0x78, 0x1a, 0x72, 0x0a, 0x07, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x12, 0x67, 0x0a, 0x1a,
	0x74, 0x69, 0x6d, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x69, 0x65, 0x73, 0x5f, 0x66, 0x6f, 0x72, 0x77,
	0x61, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x73, 0x69, 0x6e, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x2a, 0x2e, 0x6e, 0x74, 0x74, 0x2e, 0x6d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x69, 0x6e,
	0x67, 0x2e, 0x76, 0x34, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x53, 0x65, 0x72, 0x69, 0x65, 0x73, 0x46,
	0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x65, 0x72, 0x53, 0x69, 0x6e, 0x6b, 0x52, 0x17, 0x74, 0x69,
	0x6d, 0x65, 0x53, 0x65, 0x72, 0x69, 0x65, 0x73, 0x46, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x65,
	0x72, 0x53, 0x69, 0x6e, 0x6b, 0x1a, 0x5d, 0x0a, 0x07, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x64,
	0x12, 0x33, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x1f,
	0xb2, 0xda, 0x21, 0x1b, 0x0a, 0x19, 0x0a, 0x17, 0x54, 0x69, 0x6d, 0x65, 0x53, 0x65, 0x72, 0x69,
	0x65, 0x73, 0x46, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x65, 0x72, 0x53, 0x69, 0x6e, 0x6b, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x76, 0x69, 0x65, 0x77, 0x5f, 0x69, 0x6e,
	0x64, 0x65, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x76, 0x69, 0x65, 0x77, 0x49,
	0x6e, 0x64, 0x65, 0x78, 0x3a, 0x1d, 0x9a, 0xd9, 0x21, 0x19, 0x0a, 0x17, 0x54, 0x69, 0x6d, 0x65,
	0x53, 0x65, 0x72, 0x69, 0x65, 0x73, 0x46, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x65, 0x72, 0x53,
	0x69, 0x6e, 0x6b, 0x42, 0x0d, 0x0a, 0x0b, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x42, 0xae, 0x01, 0xe8, 0xde, 0x21, 0x00, 0x0a, 0x18, 0x63, 0x6f, 0x6d, 0x2e, 0x6e,
	0x74, 0x74, 0x2e, 0x6d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x69, 0x6e, 0x67, 0x2e, 0x70, 0x62,
	0x2e, 0x76, 0x34, 0x42, 0x22, 0x54, 0x69, 0x6d, 0x65, 0x53, 0x65, 0x72, 0x69, 0x65, 0x73, 0x46,
	0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x65, 0x72, 0x53, 0x69, 0x6e, 0x6b, 0x43, 0x68, 0x61, 0x6e,
	0x67, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x00, 0x5a, 0x68, 0x67, 0x69, 0x74, 0x68, 0x75,
	0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x77, 0x61, 0x6e, 0x2f, 0x65,
	0x64, 0x67, 0x65, 0x6c, 0x71, 0x2f, 0x6d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x69, 0x6e, 0x67,
	0x2f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2f, 0x76, 0x34, 0x2f, 0x74, 0x69,
	0x6d, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x69, 0x65, 0x73, 0x5f, 0x66, 0x6f, 0x72, 0x77, 0x61, 0x72,
	0x64, 0x65, 0x72, 0x5f, 0x73, 0x69, 0x6e, 0x6b, 0x3b, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x73, 0x65,
	0x72, 0x69, 0x65, 0x73, 0x5f, 0x66, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x73,
	0x69, 0x6e, 0x6b, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	edgelq_monitoring_proto_v4_time_series_forwarder_sink_change_proto_rawDescOnce sync.Once
	edgelq_monitoring_proto_v4_time_series_forwarder_sink_change_proto_rawDescData = edgelq_monitoring_proto_v4_time_series_forwarder_sink_change_proto_rawDesc
)

func edgelq_monitoring_proto_v4_time_series_forwarder_sink_change_proto_rawDescGZIP() []byte {
	edgelq_monitoring_proto_v4_time_series_forwarder_sink_change_proto_rawDescOnce.Do(func() {
		edgelq_monitoring_proto_v4_time_series_forwarder_sink_change_proto_rawDescData = protoimpl.X.CompressGZIP(edgelq_monitoring_proto_v4_time_series_forwarder_sink_change_proto_rawDescData)
	})
	return edgelq_monitoring_proto_v4_time_series_forwarder_sink_change_proto_rawDescData
}

var edgelq_monitoring_proto_v4_time_series_forwarder_sink_change_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var edgelq_monitoring_proto_v4_time_series_forwarder_sink_change_proto_goTypes = []interface{}{
	(*TimeSeriesForwarderSinkChange)(nil),          // 0: ntt.monitoring.v4.TimeSeriesForwarderSinkChange
	(*TimeSeriesForwarderSinkChange_Added)(nil),    // 1: ntt.monitoring.v4.TimeSeriesForwarderSinkChange.Added
	(*TimeSeriesForwarderSinkChange_Modified)(nil), // 2: ntt.monitoring.v4.TimeSeriesForwarderSinkChange.Modified
	(*TimeSeriesForwarderSinkChange_Current)(nil),  // 3: ntt.monitoring.v4.TimeSeriesForwarderSinkChange.Current
	(*TimeSeriesForwarderSinkChange_Removed)(nil),  // 4: ntt.monitoring.v4.TimeSeriesForwarderSinkChange.Removed
	(*TimeSeriesForwarderSink)(nil),                // 5: ntt.monitoring.v4.TimeSeriesForwarderSink
	(*TimeSeriesForwarderSink_FieldMask)(nil),      // 6: ntt.monitoring.v4.TimeSeriesForwarderSink_FieldMask
}
var edgelq_monitoring_proto_v4_time_series_forwarder_sink_change_proto_depIdxs = []int32{
	1, // 0: ntt.monitoring.v4.TimeSeriesForwarderSinkChange.added:type_name -> ntt.monitoring.v4.TimeSeriesForwarderSinkChange.Added
	2, // 1: ntt.monitoring.v4.TimeSeriesForwarderSinkChange.modified:type_name -> ntt.monitoring.v4.TimeSeriesForwarderSinkChange.Modified
	3, // 2: ntt.monitoring.v4.TimeSeriesForwarderSinkChange.current:type_name -> ntt.monitoring.v4.TimeSeriesForwarderSinkChange.Current
	4, // 3: ntt.monitoring.v4.TimeSeriesForwarderSinkChange.removed:type_name -> ntt.monitoring.v4.TimeSeriesForwarderSinkChange.Removed
	5, // 4: ntt.monitoring.v4.TimeSeriesForwarderSinkChange.Added.time_series_forwarder_sink:type_name -> ntt.monitoring.v4.TimeSeriesForwarderSink
	5, // 5: ntt.monitoring.v4.TimeSeriesForwarderSinkChange.Modified.time_series_forwarder_sink:type_name -> ntt.monitoring.v4.TimeSeriesForwarderSink
	6, // 6: ntt.monitoring.v4.TimeSeriesForwarderSinkChange.Modified.field_mask:type_name -> ntt.monitoring.v4.TimeSeriesForwarderSink_FieldMask
	5, // 7: ntt.monitoring.v4.TimeSeriesForwarderSinkChange.Current.time_series_forwarder_sink:type_name -> ntt.monitoring.v4.TimeSeriesForwarderSink
	8, // [8:8] is the sub-list for method output_type
	8, // [8:8] is the sub-list for method input_type
	8, // [8:8] is the sub-list for extension type_name
	8, // [8:8] is the sub-list for extension extendee
	0, // [0:8] is the sub-list for field type_name
}

func init() { edgelq_monitoring_proto_v4_time_series_forwarder_sink_change_proto_init() }
func edgelq_monitoring_proto_v4_time_series_forwarder_sink_change_proto_init() {
	if edgelq_monitoring_proto_v4_time_series_forwarder_sink_change_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {

		edgelq_monitoring_proto_v4_time_series_forwarder_sink_change_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TimeSeriesForwarderSinkChange); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		edgelq_monitoring_proto_v4_time_series_forwarder_sink_change_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TimeSeriesForwarderSinkChange_Added); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		edgelq_monitoring_proto_v4_time_series_forwarder_sink_change_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TimeSeriesForwarderSinkChange_Modified); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		edgelq_monitoring_proto_v4_time_series_forwarder_sink_change_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TimeSeriesForwarderSinkChange_Current); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		edgelq_monitoring_proto_v4_time_series_forwarder_sink_change_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TimeSeriesForwarderSinkChange_Removed); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}

	edgelq_monitoring_proto_v4_time_series_forwarder_sink_change_proto_msgTypes[0].OneofWrappers = []interface{}{
		(*TimeSeriesForwarderSinkChange_Added_)(nil),
		(*TimeSeriesForwarderSinkChange_Modified_)(nil),
		(*TimeSeriesForwarderSinkChange_Current_)(nil),
		(*TimeSeriesForwarderSinkChange_Removed_)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: edgelq_monitoring_proto_v4_time_series_forwarder_sink_change_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           edgelq_monitoring_proto_v4_time_series_forwarder_sink_change_proto_goTypes,
		DependencyIndexes: edgelq_monitoring_proto_v4_time_series_forwarder_sink_change_proto_depIdxs,
		MessageInfos:      edgelq_monitoring_proto_v4_time_series_forwarder_sink_change_proto_msgTypes,
	}.Build()
	edgelq_monitoring_proto_v4_time_series_forwarder_sink_change_proto = out.File
	edgelq_monitoring_proto_v4_time_series_forwarder_sink_change_proto_rawDesc = nil
	edgelq_monitoring_proto_v4_time_series_forwarder_sink_change_proto_goTypes = nil
	edgelq_monitoring_proto_v4_time_series_forwarder_sink_change_proto_depIdxs = nil
}
