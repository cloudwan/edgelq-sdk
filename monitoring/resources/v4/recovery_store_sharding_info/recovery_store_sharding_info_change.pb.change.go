// Code generated by protoc-gen-goten-resource
// Resource change: RecoveryStoreShardingInfoChange
// DO NOT EDIT!!!

package recovery_store_sharding_info

import (
	gotenresource "github.com/cloudwan/goten-sdk/runtime/resource"
)

// proto imports
import (
	fieldmaskpb "google.golang.org/protobuf/types/known/fieldmaskpb"
)

// ensure the imports are used
var (
	_ = new(gotenresource.ListQuery)
)

// make sure we're using proto imports
var (
	_ = &fieldmaskpb.FieldMask{}
)

func (c *RecoveryStoreShardingInfoChange) IsAdd() bool {
	if c == nil {
		return false
	}
	_, ok := c.ChangeType.(*RecoveryStoreShardingInfoChange_Added_)
	return ok
}

func (c *RecoveryStoreShardingInfoChange) IsModify() bool {
	if c == nil {
		return false
	}
	_, ok := c.ChangeType.(*RecoveryStoreShardingInfoChange_Modified_)
	return ok
}

func (c *RecoveryStoreShardingInfoChange) IsCurrent() bool {
	if c == nil {
		return false
	}
	_, ok := c.ChangeType.(*RecoveryStoreShardingInfoChange_Current_)
	return ok
}

func (c *RecoveryStoreShardingInfoChange) IsDelete() bool {
	if c == nil {
		return false
	}
	_, ok := c.ChangeType.(*RecoveryStoreShardingInfoChange_Removed_)
	return ok
}

func (c *RecoveryStoreShardingInfoChange) GetCurrentViewIndex() int32 {
	switch cType := c.ChangeType.(type) {
	case *RecoveryStoreShardingInfoChange_Added_:
		return cType.Added.ViewIndex
	case *RecoveryStoreShardingInfoChange_Modified_:
		return cType.Modified.ViewIndex
	}
	return 0
}

func (c *RecoveryStoreShardingInfoChange) GetPreviousViewIndex() int32 {
	switch cType := c.ChangeType.(type) {
	case *RecoveryStoreShardingInfoChange_Removed_:
		return cType.Removed.ViewIndex
	case *RecoveryStoreShardingInfoChange_Modified_:
		return cType.Modified.PreviousViewIndex
	}
	return 0
}

func (c *RecoveryStoreShardingInfoChange) GetRecoveryStoreShardingInfo() *RecoveryStoreShardingInfo {
	if c == nil {
		return nil
	}
	switch cType := c.ChangeType.(type) {
	case *RecoveryStoreShardingInfoChange_Added_:
		return cType.Added.RecoveryStoreShardingInfo
	case *RecoveryStoreShardingInfoChange_Modified_:
		return cType.Modified.RecoveryStoreShardingInfo
	case *RecoveryStoreShardingInfoChange_Current_:
		return cType.Current.RecoveryStoreShardingInfo
	case *RecoveryStoreShardingInfoChange_Removed_:
		return nil
	}
	return nil
}

func (c *RecoveryStoreShardingInfoChange) GetRawResource() gotenresource.Resource {
	return c.GetRecoveryStoreShardingInfo()
}

func (c *RecoveryStoreShardingInfoChange) GetRecoveryStoreShardingInfoName() *Name {
	if c == nil {
		return nil
	}
	switch cType := c.ChangeType.(type) {
	case *RecoveryStoreShardingInfoChange_Added_:
		return cType.Added.RecoveryStoreShardingInfo.GetName()
	case *RecoveryStoreShardingInfoChange_Modified_:
		return cType.Modified.Name
	case *RecoveryStoreShardingInfoChange_Current_:
		return cType.Current.RecoveryStoreShardingInfo.GetName()
	case *RecoveryStoreShardingInfoChange_Removed_:
		return cType.Removed.Name
	}
	return nil
}

func (c *RecoveryStoreShardingInfoChange) GetRawName() gotenresource.Name {
	return c.GetRecoveryStoreShardingInfoName()
}

func (c *RecoveryStoreShardingInfoChange) SetAddedRaw(snapshot gotenresource.Resource, idx int) {
	c.ChangeType = &RecoveryStoreShardingInfoChange_Added_{
		Added: &RecoveryStoreShardingInfoChange_Added{
			RecoveryStoreShardingInfo: snapshot.(*RecoveryStoreShardingInfo),
			ViewIndex:                 int32(idx),
		},
	}
}

func (c *RecoveryStoreShardingInfoChange) SetModifiedRaw(name gotenresource.Name, snapshot gotenresource.Resource, prevIdx int, newIdx int) {
	c.ChangeType = &RecoveryStoreShardingInfoChange_Modified_{
		Modified: &RecoveryStoreShardingInfoChange_Modified{
			Name:                      name.(*Name),
			RecoveryStoreShardingInfo: snapshot.(*RecoveryStoreShardingInfo),
			PreviousViewIndex:         int32(prevIdx),
			ViewIndex:                 int32(newIdx),
		},
	}
}

func (c *RecoveryStoreShardingInfoChange) SetCurrentRaw(snapshot gotenresource.Resource) {
	c.ChangeType = &RecoveryStoreShardingInfoChange_Current_{
		Current: &RecoveryStoreShardingInfoChange_Current{
			RecoveryStoreShardingInfo: snapshot.(*RecoveryStoreShardingInfo),
		},
	}
}

func (c *RecoveryStoreShardingInfoChange) SetDeletedRaw(name gotenresource.Name, idx int) {
	c.ChangeType = &RecoveryStoreShardingInfoChange_Removed_{
		Removed: &RecoveryStoreShardingInfoChange_Removed{
			Name:      name.(*Name),
			ViewIndex: int32(idx),
		},
	}
}
