// Code generated by protoc-gen-goten-go
// File: edgelq/monitoring/proto/v4/metric_descriptor_change.proto
// DO NOT EDIT!!!

package metric_descriptor

import (
	"fmt"
	"reflect"
	"sync"

	"google.golang.org/protobuf/encoding/protojson"
	"google.golang.org/protobuf/proto"
	preflect "google.golang.org/protobuf/reflect/protoreflect"
	"google.golang.org/protobuf/runtime/protoimpl"
)

// proto imports
import (
	project "github.com/cloudwan/edgelq-sdk/monitoring/resources/v4/project"
	fieldmaskpb "google.golang.org/protobuf/types/known/fieldmaskpb"
)

// Reference imports to suppress errors if they are not otherwise used.
var (
	_ = fmt.Errorf
	_ = reflect.Method{}
	_ = sync.Once{}

	_ = protojson.MarshalOptions{}
	_ = proto.MarshalOptions{}
	_ = preflect.Value{}
	_ = protoimpl.DescBuilder{}
)

// make sure we're using proto imports
var (
	_ = &project.Project{}
	_ = &fieldmaskpb.FieldMask{}
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// MetricDescriptorChange is used by Watch notifications Responses to describe
// change of single MetricDescriptor One of Added, Modified, Removed
type MetricDescriptorChange struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
	// MetricDescriptor change
	//
	// Types that are valid to be assigned to ChangeType:
	//	*MetricDescriptorChange_Added_
	//	*MetricDescriptorChange_Modified_
	//	*MetricDescriptorChange_Current_
	//	*MetricDescriptorChange_Removed_
	ChangeType isMetricDescriptorChange_ChangeType `protobuf_oneof:"change_type"`
}

func (m *MetricDescriptorChange) Reset() {
	*m = MetricDescriptorChange{}
	if protoimpl.UnsafeEnabled {
		mi := &edgelq_monitoring_proto_v4_metric_descriptor_change_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(m))
		ms.StoreMessageInfo(mi)
	}
}

func (m *MetricDescriptorChange) String() string {
	return protoimpl.X.MessageStringOf(m)
}

func (*MetricDescriptorChange) ProtoMessage() {}

func (m *MetricDescriptorChange) ProtoReflect() preflect.Message {
	mi := &edgelq_monitoring_proto_v4_metric_descriptor_change_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && m != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(m))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(m)
}

func (*MetricDescriptorChange) GotenMessage() {}

// Deprecated, Use MetricDescriptorChange.ProtoReflect.Descriptor instead.
func (*MetricDescriptorChange) Descriptor() ([]byte, []int) {
	return edgelq_monitoring_proto_v4_metric_descriptor_change_proto_rawDescGZIP(), []int{0}
}

func (m *MetricDescriptorChange) Unmarshal(b []byte) error {
	return proto.Unmarshal(b, m)
}

func (m *MetricDescriptorChange) Marshal() ([]byte, error) {
	return proto.Marshal(m)
}

func (m *MetricDescriptorChange) MarshalJSON() ([]byte, error) {
	return protojson.MarshalOptions{}.Marshal(m)
}

func (m *MetricDescriptorChange) UnmarshalJSON(data []byte) error {
	return protojson.Unmarshal(data, m)
}

type isMetricDescriptorChange_ChangeType interface {
	isMetricDescriptorChange_ChangeType()
}

type MetricDescriptorChange_Added_ struct {
	// Added is returned when watched document is added, either created or
	// enters Query view
	Added *MetricDescriptorChange_Added `protobuf:"bytes,1,opt,name=added,proto3,oneof"`
}
type MetricDescriptorChange_Modified_ struct {
	// Modified is returned when watched document is modified
	Modified *MetricDescriptorChange_Modified `protobuf:"bytes,2,opt,name=modified,proto3,oneof"`
}
type MetricDescriptorChange_Current_ struct {
	// Current is returned in stateless watch when document enters query view or
	// is modified within.
	Current *MetricDescriptorChange_Current `protobuf:"bytes,4,opt,name=current,proto3,oneof"`
}
type MetricDescriptorChange_Removed_ struct {
	// Removed is returned when MetricDescriptor is deleted or leaves Query view
	Removed *MetricDescriptorChange_Removed `protobuf:"bytes,3,opt,name=removed,proto3,oneof"`
}

func (*MetricDescriptorChange_Added_) isMetricDescriptorChange_ChangeType()    {}
func (*MetricDescriptorChange_Modified_) isMetricDescriptorChange_ChangeType() {}
func (*MetricDescriptorChange_Current_) isMetricDescriptorChange_ChangeType()  {}
func (*MetricDescriptorChange_Removed_) isMetricDescriptorChange_ChangeType()  {}
func (m *MetricDescriptorChange) GetChangeType() isMetricDescriptorChange_ChangeType {
	if m != nil {
		return m.ChangeType
	}
	return nil
}
func (m *MetricDescriptorChange) GetAdded() *MetricDescriptorChange_Added {
	if x, ok := m.GetChangeType().(*MetricDescriptorChange_Added_); ok {
		return x.Added
	}
	return nil
}
func (m *MetricDescriptorChange) GetModified() *MetricDescriptorChange_Modified {
	if x, ok := m.GetChangeType().(*MetricDescriptorChange_Modified_); ok {
		return x.Modified
	}
	return nil
}
func (m *MetricDescriptorChange) GetCurrent() *MetricDescriptorChange_Current {
	if x, ok := m.GetChangeType().(*MetricDescriptorChange_Current_); ok {
		return x.Current
	}
	return nil
}
func (m *MetricDescriptorChange) GetRemoved() *MetricDescriptorChange_Removed {
	if x, ok := m.GetChangeType().(*MetricDescriptorChange_Removed_); ok {
		return x.Removed
	}
	return nil
}
func (m *MetricDescriptorChange) SetChangeType(ofv isMetricDescriptorChange_ChangeType) {
	if m == nil {
		panic(fmt.Errorf("can't set %s on nil %s", "isMetricDescriptorChange_ChangeType", "MetricDescriptorChange"))
	}
	m.ChangeType = ofv
}
func (m *MetricDescriptorChange) SetAdded(fv *MetricDescriptorChange_Added) {
	m.SetChangeType(&MetricDescriptorChange_Added_{Added: fv})
}
func (m *MetricDescriptorChange) SetModified(fv *MetricDescriptorChange_Modified) {
	m.SetChangeType(&MetricDescriptorChange_Modified_{Modified: fv})
}
func (m *MetricDescriptorChange) SetCurrent(fv *MetricDescriptorChange_Current) {
	m.SetChangeType(&MetricDescriptorChange_Current_{Current: fv})
}
func (m *MetricDescriptorChange) SetRemoved(fv *MetricDescriptorChange_Removed) {
	m.SetChangeType(&MetricDescriptorChange_Removed_{Removed: fv})
}

// MetricDescriptor has been added to query view
type MetricDescriptorChange_Added struct {
	state            protoimpl.MessageState
	sizeCache        protoimpl.SizeCache
	unknownFields    protoimpl.UnknownFields
	MetricDescriptor *MetricDescriptor `protobuf:"bytes,1,opt,name=metric_descriptor,json=metricDescriptor,proto3" json:"metric_descriptor,omitempty"`
	// Integer describing index of added MetricDescriptor in resulting query
	// view.
	ViewIndex int32 `protobuf:"varint,2,opt,name=view_index,json=viewIndex,proto3" json:"view_index,omitempty"`
}

func (m *MetricDescriptorChange_Added) Reset() {
	*m = MetricDescriptorChange_Added{}
	if protoimpl.UnsafeEnabled {
		mi := &edgelq_monitoring_proto_v4_metric_descriptor_change_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(m))
		ms.StoreMessageInfo(mi)
	}
}

func (m *MetricDescriptorChange_Added) String() string {
	return protoimpl.X.MessageStringOf(m)
}

func (*MetricDescriptorChange_Added) ProtoMessage() {}

func (m *MetricDescriptorChange_Added) ProtoReflect() preflect.Message {
	mi := &edgelq_monitoring_proto_v4_metric_descriptor_change_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && m != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(m))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(m)
}

func (*MetricDescriptorChange_Added) GotenMessage() {}

// Deprecated, Use MetricDescriptorChange_Added.ProtoReflect.Descriptor instead.
func (*MetricDescriptorChange_Added) Descriptor() ([]byte, []int) {
	return edgelq_monitoring_proto_v4_metric_descriptor_change_proto_rawDescGZIP(), []int{0, 0}
}

func (m *MetricDescriptorChange_Added) Unmarshal(b []byte) error {
	return proto.Unmarshal(b, m)
}

func (m *MetricDescriptorChange_Added) Marshal() ([]byte, error) {
	return proto.Marshal(m)
}

func (m *MetricDescriptorChange_Added) MarshalJSON() ([]byte, error) {
	return protojson.MarshalOptions{}.Marshal(m)
}

func (m *MetricDescriptorChange_Added) UnmarshalJSON(data []byte) error {
	return protojson.Unmarshal(data, m)
}

func (m *MetricDescriptorChange_Added) GetMetricDescriptor() *MetricDescriptor {
	if m != nil {
		return m.MetricDescriptor
	}
	return nil
}

func (m *MetricDescriptorChange_Added) GetViewIndex() int32 {
	if m != nil {
		return m.ViewIndex
	}
	return int32(0)
}

func (m *MetricDescriptorChange_Added) SetMetricDescriptor(fv *MetricDescriptor) {
	if m == nil {
		panic(fmt.Errorf("can't set %s on nil %s", "MetricDescriptor", "MetricDescriptorChange_Added"))
	}
	m.MetricDescriptor = fv
}

func (m *MetricDescriptorChange_Added) SetViewIndex(fv int32) {
	if m == nil {
		panic(fmt.Errorf("can't set %s on nil %s", "ViewIndex", "MetricDescriptorChange_Added"))
	}
	m.ViewIndex = fv
}

// MetricDescriptor changed some of it's fields - contains either full
// document or masked change
type MetricDescriptorChange_Modified struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
	// Name of modified MetricDescriptor
	Name *Name `protobuf:"bytes,1,opt,customtype=Name,name=name,proto3" json:"name,omitempty"`
	// New version of MetricDescriptor or masked difference, depending on
	// mask_changes instrumentation of issued [WatchMetricDescriptorRequest] or
	// [WatchMetricDescriptorsRequest]
	MetricDescriptor *MetricDescriptor `protobuf:"bytes,2,opt,name=metric_descriptor,json=metricDescriptor,proto3" json:"metric_descriptor,omitempty"`
	// Used when mask_changes is set, contains field paths of modified
	// properties.
	FieldMask *MetricDescriptor_FieldMask `protobuf:"bytes,3,opt,customtype=MetricDescriptor_FieldMask,name=field_mask,json=fieldMask,proto3" json:"field_mask,omitempty"`
	// Previous view index specifies previous position of modified
	// MetricDescriptor. When modification doesn't affect sorted order, value
	// will remain identical to [view_index].
	PreviousViewIndex int32 `protobuf:"varint,4,opt,name=previous_view_index,json=previousViewIndex,proto3" json:"previous_view_index,omitempty"`
	// Integer specifying MetricDescriptor new index in resulting query view.
	ViewIndex int32 `protobuf:"varint,5,opt,name=view_index,json=viewIndex,proto3" json:"view_index,omitempty"`
}

func (m *MetricDescriptorChange_Modified) Reset() {
	*m = MetricDescriptorChange_Modified{}
	if protoimpl.UnsafeEnabled {
		mi := &edgelq_monitoring_proto_v4_metric_descriptor_change_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(m))
		ms.StoreMessageInfo(mi)
	}
}

func (m *MetricDescriptorChange_Modified) String() string {
	return protoimpl.X.MessageStringOf(m)
}

func (*MetricDescriptorChange_Modified) ProtoMessage() {}

func (m *MetricDescriptorChange_Modified) ProtoReflect() preflect.Message {
	mi := &edgelq_monitoring_proto_v4_metric_descriptor_change_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && m != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(m))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(m)
}

func (*MetricDescriptorChange_Modified) GotenMessage() {}

// Deprecated, Use MetricDescriptorChange_Modified.ProtoReflect.Descriptor instead.
func (*MetricDescriptorChange_Modified) Descriptor() ([]byte, []int) {
	return edgelq_monitoring_proto_v4_metric_descriptor_change_proto_rawDescGZIP(), []int{0, 1}
}

func (m *MetricDescriptorChange_Modified) Unmarshal(b []byte) error {
	return proto.Unmarshal(b, m)
}

func (m *MetricDescriptorChange_Modified) Marshal() ([]byte, error) {
	return proto.Marshal(m)
}

func (m *MetricDescriptorChange_Modified) MarshalJSON() ([]byte, error) {
	return protojson.MarshalOptions{}.Marshal(m)
}

func (m *MetricDescriptorChange_Modified) UnmarshalJSON(data []byte) error {
	return protojson.Unmarshal(data, m)
}

func (m *MetricDescriptorChange_Modified) GetName() *Name {
	if m != nil {
		return m.Name
	}
	return nil
}

func (m *MetricDescriptorChange_Modified) GetMetricDescriptor() *MetricDescriptor {
	if m != nil {
		return m.MetricDescriptor
	}
	return nil
}

func (m *MetricDescriptorChange_Modified) GetFieldMask() *MetricDescriptor_FieldMask {
	if m != nil {
		return m.FieldMask
	}
	return nil
}

func (m *MetricDescriptorChange_Modified) GetPreviousViewIndex() int32 {
	if m != nil {
		return m.PreviousViewIndex
	}
	return int32(0)
}

func (m *MetricDescriptorChange_Modified) GetViewIndex() int32 {
	if m != nil {
		return m.ViewIndex
	}
	return int32(0)
}

func (m *MetricDescriptorChange_Modified) SetName(fv *Name) {
	if m == nil {
		panic(fmt.Errorf("can't set %s on nil %s", "Name", "MetricDescriptorChange_Modified"))
	}
	m.Name = fv
}

func (m *MetricDescriptorChange_Modified) SetMetricDescriptor(fv *MetricDescriptor) {
	if m == nil {
		panic(fmt.Errorf("can't set %s on nil %s", "MetricDescriptor", "MetricDescriptorChange_Modified"))
	}
	m.MetricDescriptor = fv
}

func (m *MetricDescriptorChange_Modified) SetFieldMask(fv *MetricDescriptor_FieldMask) {
	if m == nil {
		panic(fmt.Errorf("can't set %s on nil %s", "FieldMask", "MetricDescriptorChange_Modified"))
	}
	m.FieldMask = fv
}

func (m *MetricDescriptorChange_Modified) SetPreviousViewIndex(fv int32) {
	if m == nil {
		panic(fmt.Errorf("can't set %s on nil %s", "PreviousViewIndex", "MetricDescriptorChange_Modified"))
	}
	m.PreviousViewIndex = fv
}

func (m *MetricDescriptorChange_Modified) SetViewIndex(fv int32) {
	if m == nil {
		panic(fmt.Errorf("can't set %s on nil %s", "ViewIndex", "MetricDescriptorChange_Modified"))
	}
	m.ViewIndex = fv
}

// MetricDescriptor has been added or modified in a query view. Version used
// for stateless watching
type MetricDescriptorChange_Current struct {
	state            protoimpl.MessageState
	sizeCache        protoimpl.SizeCache
	unknownFields    protoimpl.UnknownFields
	MetricDescriptor *MetricDescriptor `protobuf:"bytes,1,opt,name=metric_descriptor,json=metricDescriptor,proto3" json:"metric_descriptor,omitempty"`
}

func (m *MetricDescriptorChange_Current) Reset() {
	*m = MetricDescriptorChange_Current{}
	if protoimpl.UnsafeEnabled {
		mi := &edgelq_monitoring_proto_v4_metric_descriptor_change_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(m))
		ms.StoreMessageInfo(mi)
	}
}

func (m *MetricDescriptorChange_Current) String() string {
	return protoimpl.X.MessageStringOf(m)
}

func (*MetricDescriptorChange_Current) ProtoMessage() {}

func (m *MetricDescriptorChange_Current) ProtoReflect() preflect.Message {
	mi := &edgelq_monitoring_proto_v4_metric_descriptor_change_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && m != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(m))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(m)
}

func (*MetricDescriptorChange_Current) GotenMessage() {}

// Deprecated, Use MetricDescriptorChange_Current.ProtoReflect.Descriptor instead.
func (*MetricDescriptorChange_Current) Descriptor() ([]byte, []int) {
	return edgelq_monitoring_proto_v4_metric_descriptor_change_proto_rawDescGZIP(), []int{0, 2}
}

func (m *MetricDescriptorChange_Current) Unmarshal(b []byte) error {
	return proto.Unmarshal(b, m)
}

func (m *MetricDescriptorChange_Current) Marshal() ([]byte, error) {
	return proto.Marshal(m)
}

func (m *MetricDescriptorChange_Current) MarshalJSON() ([]byte, error) {
	return protojson.MarshalOptions{}.Marshal(m)
}

func (m *MetricDescriptorChange_Current) UnmarshalJSON(data []byte) error {
	return protojson.Unmarshal(data, m)
}

func (m *MetricDescriptorChange_Current) GetMetricDescriptor() *MetricDescriptor {
	if m != nil {
		return m.MetricDescriptor
	}
	return nil
}

func (m *MetricDescriptorChange_Current) SetMetricDescriptor(fv *MetricDescriptor) {
	if m == nil {
		panic(fmt.Errorf("can't set %s on nil %s", "MetricDescriptor", "MetricDescriptorChange_Current"))
	}
	m.MetricDescriptor = fv
}

// Removed is returned when MetricDescriptor is deleted or leaves Query view
type MetricDescriptorChange_Removed struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
	Name          *Name `protobuf:"bytes,1,opt,customtype=Name,name=name,proto3" json:"name,omitempty"`
	// Integer specifying removed MetricDescriptor index. Not populated in
	// stateless watch type.
	ViewIndex int32 `protobuf:"varint,2,opt,name=view_index,json=viewIndex,proto3" json:"view_index,omitempty"`
}

func (m *MetricDescriptorChange_Removed) Reset() {
	*m = MetricDescriptorChange_Removed{}
	if protoimpl.UnsafeEnabled {
		mi := &edgelq_monitoring_proto_v4_metric_descriptor_change_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(m))
		ms.StoreMessageInfo(mi)
	}
}

func (m *MetricDescriptorChange_Removed) String() string {
	return protoimpl.X.MessageStringOf(m)
}

func (*MetricDescriptorChange_Removed) ProtoMessage() {}

func (m *MetricDescriptorChange_Removed) ProtoReflect() preflect.Message {
	mi := &edgelq_monitoring_proto_v4_metric_descriptor_change_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && m != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(m))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(m)
}

func (*MetricDescriptorChange_Removed) GotenMessage() {}

// Deprecated, Use MetricDescriptorChange_Removed.ProtoReflect.Descriptor instead.
func (*MetricDescriptorChange_Removed) Descriptor() ([]byte, []int) {
	return edgelq_monitoring_proto_v4_metric_descriptor_change_proto_rawDescGZIP(), []int{0, 3}
}

func (m *MetricDescriptorChange_Removed) Unmarshal(b []byte) error {
	return proto.Unmarshal(b, m)
}

func (m *MetricDescriptorChange_Removed) Marshal() ([]byte, error) {
	return proto.Marshal(m)
}

func (m *MetricDescriptorChange_Removed) MarshalJSON() ([]byte, error) {
	return protojson.MarshalOptions{}.Marshal(m)
}

func (m *MetricDescriptorChange_Removed) UnmarshalJSON(data []byte) error {
	return protojson.Unmarshal(data, m)
}

func (m *MetricDescriptorChange_Removed) GetName() *Name {
	if m != nil {
		return m.Name
	}
	return nil
}

func (m *MetricDescriptorChange_Removed) GetViewIndex() int32 {
	if m != nil {
		return m.ViewIndex
	}
	return int32(0)
}

func (m *MetricDescriptorChange_Removed) SetName(fv *Name) {
	if m == nil {
		panic(fmt.Errorf("can't set %s on nil %s", "Name", "MetricDescriptorChange_Removed"))
	}
	m.Name = fv
}

func (m *MetricDescriptorChange_Removed) SetViewIndex(fv int32) {
	if m == nil {
		panic(fmt.Errorf("can't set %s on nil %s", "ViewIndex", "MetricDescriptorChange_Removed"))
	}
	m.ViewIndex = fv
}

var edgelq_monitoring_proto_v4_metric_descriptor_change_proto preflect.FileDescriptor

var edgelq_monitoring_proto_v4_metric_descriptor_change_proto_rawDesc = []byte{
	0x0a, 0x39, 0x65, 0x64, 0x67, 0x65, 0x6c, 0x71, 0x2f, 0x6d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72,
	0x69, 0x6e, 0x67, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x76, 0x34, 0x2f, 0x6d, 0x65, 0x74,
	0x72, 0x69, 0x63, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x5f, 0x63,
	0x68, 0x61, 0x6e, 0x67, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x11, 0x6e, 0x74, 0x74,
	0x2e, 0x6d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x34, 0x1a, 0x19,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x72, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x20, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x66, 0x69, 0x65, 0x6c, 0x64,
	0x5f, 0x6d, 0x61, 0x73, 0x6b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1d, 0x67, 0x6f, 0x74,
	0x65, 0x6e, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x67,
	0x6f, 0x74, 0x65, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x20, 0x67, 0x6f, 0x74, 0x65,
	0x6e, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x72, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x32, 0x65, 0x64,
	0x67, 0x65, 0x6c, 0x71, 0x2f, 0x6d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x69, 0x6e, 0x67, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x76, 0x34, 0x2f, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x5f,
	0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0xd8, 0x07, 0x0a, 0x16, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x44, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x6f, 0x72, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x47, 0x0a, 0x05, 0x61,
	0x64, 0x64, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x6e, 0x74, 0x74,
	0x2e, 0x6d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x34, 0x2e, 0x4d,
	0x65, 0x74, 0x72, 0x69, 0x63, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x43,
	0x68, 0x61, 0x6e, 0x67, 0x65, 0x2e, 0x41, 0x64, 0x64, 0x65, 0x64, 0x48, 0x00, 0x52, 0x05, 0x61,
	0x64, 0x64, 0x65, 0x64, 0x12, 0x50, 0x0a, 0x08, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x6e, 0x74, 0x74, 0x2e, 0x6d, 0x6f, 0x6e,
	0x69, 0x74, 0x6f, 0x72, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x34, 0x2e, 0x4d, 0x65, 0x74, 0x72, 0x69,
	0x63, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x43, 0x68, 0x61, 0x6e, 0x67,
	0x65, 0x2e, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x64, 0x48, 0x00, 0x52, 0x08, 0x6d, 0x6f,
	0x64, 0x69, 0x66, 0x69, 0x65, 0x64, 0x12, 0x4d, 0x0a, 0x07, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e,
	0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x6e, 0x74, 0x74, 0x2e, 0x6d, 0x6f,
	0x6e, 0x69, 0x74, 0x6f, 0x72, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x34, 0x2e, 0x4d, 0x65, 0x74, 0x72,
	0x69, 0x63, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x43, 0x68, 0x61, 0x6e,
	0x67, 0x65, 0x2e, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x48, 0x00, 0x52, 0x07, 0x63, 0x75,
	0x72, 0x72, 0x65, 0x6e, 0x74, 0x12, 0x4d, 0x0a, 0x07, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x6e, 0x74, 0x74, 0x2e, 0x6d, 0x6f, 0x6e,
	0x69, 0x74, 0x6f, 0x72, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x34, 0x2e, 0x4d, 0x65, 0x74, 0x72, 0x69,
	0x63, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x43, 0x68, 0x61, 0x6e, 0x67,
	0x65, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x64, 0x48, 0x00, 0x52, 0x07, 0x72, 0x65, 0x6d,
	0x6f, 0x76, 0x65, 0x64, 0x1a, 0x78, 0x0a, 0x05, 0x41, 0x64, 0x64, 0x65, 0x64, 0x12, 0x50, 0x0a,
	0x11, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x6e, 0x74, 0x74, 0x2e, 0x6d,
	0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x34, 0x2e, 0x4d, 0x65, 0x74,
	0x72, 0x69, 0x63, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x52, 0x10, 0x6d,
	0x65, 0x74, 0x72, 0x69, 0x63, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x12,
	0x1d, 0x0a, 0x0a, 0x76, 0x69, 0x65, 0x77, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x09, 0x76, 0x69, 0x65, 0x77, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x1a, 0xae,
	0x02, 0x0a, 0x08, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x64, 0x12, 0x2c, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x18, 0xb2, 0xda, 0x21, 0x14, 0x0a,
	0x12, 0x0a, 0x10, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x6f, 0x72, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x50, 0x0a, 0x11, 0x6d, 0x65, 0x74,
	0x72, 0x69, 0x63, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x6e, 0x74, 0x74, 0x2e, 0x6d, 0x6f, 0x6e, 0x69, 0x74,
	0x6f, 0x72, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x34, 0x2e, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x44,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x52, 0x10, 0x6d, 0x65, 0x74, 0x72, 0x69,
	0x63, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x12, 0x53, 0x0a, 0x0a, 0x66,
	0x69, 0x65, 0x6c, 0x64, 0x5f, 0x6d, 0x61, 0x73, 0x6b, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4d, 0x61, 0x73, 0x6b, 0x42, 0x18, 0xb2, 0xda, 0x21,
	0x14, 0x32, 0x12, 0x0a, 0x10, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x44, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x6f, 0x72, 0x52, 0x09, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x4d, 0x61, 0x73, 0x6b,
	0x12, 0x2e, 0x0a, 0x13, 0x70, 0x72, 0x65, 0x76, 0x69, 0x6f, 0x75, 0x73, 0x5f, 0x76, 0x69, 0x65,
	0x77, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x11, 0x70,
	0x72, 0x65, 0x76, 0x69, 0x6f, 0x75, 0x73, 0x56, 0x69, 0x65, 0x77, 0x49, 0x6e, 0x64, 0x65, 0x78,
	0x12, 0x1d, 0x0a, 0x0a, 0x76, 0x69, 0x65, 0x77, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x76, 0x69, 0x65, 0x77, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x1a,
	0x5b, 0x0a, 0x07, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x12, 0x50, 0x0a, 0x11, 0x6d, 0x65,
	0x74, 0x72, 0x69, 0x63, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x6e, 0x74, 0x74, 0x2e, 0x6d, 0x6f, 0x6e, 0x69,
	0x74, 0x6f, 0x72, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x34, 0x2e, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63,
	0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x52, 0x10, 0x6d, 0x65, 0x74, 0x72,
	0x69, 0x63, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x1a, 0x56, 0x0a, 0x07,
	0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x64, 0x12, 0x2c, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x18, 0xb2, 0xda, 0x21, 0x14, 0x0a, 0x12, 0x0a, 0x10, 0x4d,
	0x65, 0x74, 0x72, 0x69, 0x63, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x76, 0x69, 0x65, 0x77, 0x5f, 0x69, 0x6e,
	0x64, 0x65, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x76, 0x69, 0x65, 0x77, 0x49,
	0x6e, 0x64, 0x65, 0x78, 0x3a, 0x16, 0x9a, 0xd9, 0x21, 0x12, 0x0a, 0x10, 0x4d, 0x65, 0x74, 0x72,
	0x69, 0x63, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x42, 0x0d, 0x0a, 0x0b,
	0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x42, 0x95, 0x01, 0xe8, 0xde,
	0x21, 0x00, 0x0a, 0x18, 0x63, 0x6f, 0x6d, 0x2e, 0x6e, 0x74, 0x74, 0x2e, 0x6d, 0x6f, 0x6e, 0x69,
	0x74, 0x6f, 0x72, 0x69, 0x6e, 0x67, 0x2e, 0x70, 0x62, 0x2e, 0x76, 0x34, 0x42, 0x1b, 0x4d, 0x65,
	0x74, 0x72, 0x69, 0x63, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x43, 0x68,
	0x61, 0x6e, 0x67, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x00, 0x5a, 0x56, 0x67, 0x69, 0x74,
	0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x77, 0x61, 0x6e,
	0x2f, 0x65, 0x64, 0x67, 0x65, 0x6c, 0x71, 0x2f, 0x6d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x69,
	0x6e, 0x67, 0x2f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2f, 0x76, 0x34, 0x2f,
	0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f,
	0x72, 0x3b, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x6f, 0x72, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	edgelq_monitoring_proto_v4_metric_descriptor_change_proto_rawDescOnce sync.Once
	edgelq_monitoring_proto_v4_metric_descriptor_change_proto_rawDescData = edgelq_monitoring_proto_v4_metric_descriptor_change_proto_rawDesc
)

func edgelq_monitoring_proto_v4_metric_descriptor_change_proto_rawDescGZIP() []byte {
	edgelq_monitoring_proto_v4_metric_descriptor_change_proto_rawDescOnce.Do(func() {
		edgelq_monitoring_proto_v4_metric_descriptor_change_proto_rawDescData = protoimpl.X.CompressGZIP(edgelq_monitoring_proto_v4_metric_descriptor_change_proto_rawDescData)
	})
	return edgelq_monitoring_proto_v4_metric_descriptor_change_proto_rawDescData
}

var edgelq_monitoring_proto_v4_metric_descriptor_change_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var edgelq_monitoring_proto_v4_metric_descriptor_change_proto_goTypes = []interface{}{
	(*MetricDescriptorChange)(nil),          // 0: ntt.monitoring.v4.MetricDescriptorChange
	(*MetricDescriptorChange_Added)(nil),    // 1: ntt.monitoring.v4.MetricDescriptorChange.Added
	(*MetricDescriptorChange_Modified)(nil), // 2: ntt.monitoring.v4.MetricDescriptorChange.Modified
	(*MetricDescriptorChange_Current)(nil),  // 3: ntt.monitoring.v4.MetricDescriptorChange.Current
	(*MetricDescriptorChange_Removed)(nil),  // 4: ntt.monitoring.v4.MetricDescriptorChange.Removed
	(*MetricDescriptor)(nil),                // 5: ntt.monitoring.v4.MetricDescriptor
	(*MetricDescriptor_FieldMask)(nil),      // 6: ntt.monitoring.v4.MetricDescriptor_FieldMask
}
var edgelq_monitoring_proto_v4_metric_descriptor_change_proto_depIdxs = []int32{
	1, // 0: ntt.monitoring.v4.MetricDescriptorChange.added:type_name -> ntt.monitoring.v4.MetricDescriptorChange.Added
	2, // 1: ntt.monitoring.v4.MetricDescriptorChange.modified:type_name -> ntt.monitoring.v4.MetricDescriptorChange.Modified
	3, // 2: ntt.monitoring.v4.MetricDescriptorChange.current:type_name -> ntt.monitoring.v4.MetricDescriptorChange.Current
	4, // 3: ntt.monitoring.v4.MetricDescriptorChange.removed:type_name -> ntt.monitoring.v4.MetricDescriptorChange.Removed
	5, // 4: ntt.monitoring.v4.MetricDescriptorChange.Added.metric_descriptor:type_name -> ntt.monitoring.v4.MetricDescriptor
	5, // 5: ntt.monitoring.v4.MetricDescriptorChange.Modified.metric_descriptor:type_name -> ntt.monitoring.v4.MetricDescriptor
	6, // 6: ntt.monitoring.v4.MetricDescriptorChange.Modified.field_mask:type_name -> ntt.monitoring.v4.MetricDescriptor_FieldMask
	5, // 7: ntt.monitoring.v4.MetricDescriptorChange.Current.metric_descriptor:type_name -> ntt.monitoring.v4.MetricDescriptor
	8, // [8:8] is the sub-list for method output_type
	8, // [8:8] is the sub-list for method input_type
	8, // [8:8] is the sub-list for extension type_name
	8, // [8:8] is the sub-list for extension extendee
	0, // [0:8] is the sub-list for field type_name
}

func init() { edgelq_monitoring_proto_v4_metric_descriptor_change_proto_init() }
func edgelq_monitoring_proto_v4_metric_descriptor_change_proto_init() {
	if edgelq_monitoring_proto_v4_metric_descriptor_change_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {

		edgelq_monitoring_proto_v4_metric_descriptor_change_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MetricDescriptorChange); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		edgelq_monitoring_proto_v4_metric_descriptor_change_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MetricDescriptorChange_Added); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		edgelq_monitoring_proto_v4_metric_descriptor_change_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MetricDescriptorChange_Modified); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		edgelq_monitoring_proto_v4_metric_descriptor_change_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MetricDescriptorChange_Current); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		edgelq_monitoring_proto_v4_metric_descriptor_change_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MetricDescriptorChange_Removed); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}

	edgelq_monitoring_proto_v4_metric_descriptor_change_proto_msgTypes[0].OneofWrappers = []interface{}{
		(*MetricDescriptorChange_Added_)(nil),
		(*MetricDescriptorChange_Modified_)(nil),
		(*MetricDescriptorChange_Current_)(nil),
		(*MetricDescriptorChange_Removed_)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: edgelq_monitoring_proto_v4_metric_descriptor_change_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           edgelq_monitoring_proto_v4_metric_descriptor_change_proto_goTypes,
		DependencyIndexes: edgelq_monitoring_proto_v4_metric_descriptor_change_proto_depIdxs,
		MessageInfos:      edgelq_monitoring_proto_v4_metric_descriptor_change_proto_msgTypes,
	}.Build()
	edgelq_monitoring_proto_v4_metric_descriptor_change_proto = out.File
	edgelq_monitoring_proto_v4_metric_descriptor_change_proto_rawDesc = nil
	edgelq_monitoring_proto_v4_metric_descriptor_change_proto_goTypes = nil
	edgelq_monitoring_proto_v4_metric_descriptor_change_proto_depIdxs = nil
}
