syntax = "proto3";

package ntt.monitoring.v4;

import "google/api/resource.proto";
import "google/protobuf/field_mask.proto";
import "google/protobuf/timestamp.proto";
import "goten-sdk/types/meta.proto";

option go_package = "github.com/cloudwan/edgelq-sdk/monitoring/resources/v4/notification_channel;notification_channel";
option java_multiple_files = true;
option java_outer_classname = "NotificationChannelProto";
option java_package = "com.ntt.monitoring.pb.v4";

// NotificationChannel Resource
message NotificationChannel {
  option (google.api.resource) = { type:"monitoring.edgelq.com/NotificationChannel" pattern:"projects/{project}/notificationChannels/{notification_channel}"  };

  // Name of NotificationChannel
  // When creating a new instance, this field is optional and if not provided,
  // it will be generated automatically. Last ID segment must conform to the
  // following regex: [a-z][a-z0-9\\-]{0,28}[a-z0-9]
  string name = 1;

  // Metadata is an object with information like create, update and delete time
  // (for async deleted resources), has user labels/annotations, sharding
  // information, multi-region syncing information and may have non-schema
  // owners (useful for taking ownership of resources belonging to lower level
  // services by higher ones).
  goten.types.Meta metadata = 2;

  // Display Name
  string display_name = 3;

  // Specification
  Spec spec = 4;

  // State
  State state = 5;

  // description
  string description = 6;

  // Spec of NotificationChannel
  message Spec {
    // Enabled flag. Whether the NotificationChannel is enabled or not. Disabled
    // channels will not be used for alerting.
    bool enabled = 1;

    // Type. Corresponding spec should a oneof field.
    Type type = 2;

    // Email
    Email email = 3;

    // Slack
    Slack slack = 4;

    Webhook webhook = 5;

    // Default language for invitation is english (eng)
    // Configuring unsupported language will fallback to english
    // Currently only sendgrid uses this.
    string notification_language_code = 6;

    // Email Spec
    message Email {
      // Email Addresses
      repeated string addresses = 1;
    }

    // Slack Spec
    message Slack {
      // Slack Incoming Webhook URL
      string incoming_webhook = 1;
    }

    // PagerDuty Spec
    message PagerDuty {
      // PagerDuty Service Key
      string service_key = 1;
    }

    // Webhook Spec
    message Webhook {
      // Webhook URL
      string url = 1;

      // Headers
      repeated Header headers = 2;

      // Notification mask contains list of fields to include in the message.
      // Notification consists of following fields:
      // * "project" -> See monitoring.edgelq.com/Project protobuf spec for
      // subfields
      // * "organization" -> See iam.edgelq.com/Project protobuf spec for
      // subfields
      // * "alertingPolicy" -> See monitoring.edgelq.com/AlertingPolicy protobuf
      // spec for subfields
      // * "notification" -> See monitoring.edgelq.com/Notification protobuf
      // spec for subfields
      // * "events" -> Array of events, each item has subfields:
      //   * "alertingCondition" -> See monitoring.edgelq.com/AlertingCondition
      //   protobuf spec for subfields
      //   * "metricDescriptor" -> See monitoring.edgelq.com/MetricDescriptor
      //   protobuf spec for subfields
      //   * "monitoredResourceDescriptor" -> See
      //   monitoring.edgelq.com/MonitoredResourceDescriptor
      //     protobuf spec for subfields
      //   * "alerts" -> Array of monitoring.edgelq.com/Alert instances, see
      //   protobuf spec for subfields.
      //
      // If notification_mask is not specified, following default is applied:
      // * "project.name"
      // * "project.title"
      // * "organization.name"
      // * "organization.title"
      // * "events.alertingCondition.name"
      // * "events.alertingCondition.displayName"
      // * "events.alertingCondition.spec"
      // * "events.metricDescriptor.name"
      // * "events.metricDescriptor.displayName"
      // * "events.metricDescriptor.type"
      // * "events.metricDescriptor.labels"
      // * "events.metricDescriptor.metricKind"
      // * "events.metricDescriptor.valueType"
      // * "events.metricDescriptor.unit"
      // * "events.alerts.name"
      // * "events.alerts.displayName"
      // * "events.alerts.info.timeSerie.key"
      // * "events.alerts.info.timeSerie.metric"
      // * "events.alerts.info.timeSerie.monitoredResource"
      // * "events.alerts.info.observedValues"
      // * "events.alerts.state"
      google.protobuf.FieldMask notification_mask = 3;

      // Header
      message Header {
        string key = 1;

        string value = 2;
      }
    }

    // Type of NotificationChannel
    enum Type {
      // Type is unknown
      TYPE_UNSPECIFIED = 0;

      // Email NotificationChannel
      EMAIL = 1;

      // Slack NotificationChannel
      SLACK = 2;

      // Webhook NotificationChannel
      WEBHOOK = 3;
      // PagerDuty NotificationChannel
      // PAGERDUTY = 4;
    }
  }

  // State of NotificationChannel
  message State {
    // Status
    Status status = 1;

    // Error
    Error error = 4;

    // Error of NotificationChannel
    message Error {
      google.protobuf.Timestamp time = 1;

      string message = 2;
    }

    // State of NotificationChannel
    enum Status {
      // State is unknown
      STATE_UNSPECIFIED = 0;

      // NotificationChannel is active
      ACTIVE = 1;

      // NotificationChannel is disabled
      DISABLED = 2;

      // Error of NotificationChannel
      ERROR = 3;
    }
  }
}
