// Code generated by protoc-gen-goten-client
// API: TimeSeriesForwarderSinkService
// DO NOT EDIT!!!

package time_series_forwarder_sink_client

import (
	"google.golang.org/protobuf/proto"

	gotenclient "github.com/cloudwan/goten-sdk/runtime/client"
	gotenresource "github.com/cloudwan/goten-sdk/runtime/resource"
)

// proto imports
import (
	time_series_forwarder_sink "github.com/cloudwan/edgelq-sdk/monitoring/resources/v4/time_series_forwarder_sink"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
)

// Reference imports to suppress errors if they are not otherwise used.
var (
	_ = new(proto.Message)
	_ = new(gotenclient.MethodDescriptor)
	_ = gotenresource.WildcardId
)

// make sure we're using proto imports
var (
	_ = &time_series_forwarder_sink.TimeSeriesForwarderSink{}
	_ = &emptypb.Empty{}
)

var (
	descriptorsInitialized                     bool
	timeSeriesForwarderSinkServiceDescriptor   *TimeSeriesForwarderSinkServiceDescriptor
	getTimeSeriesForwarderSinkDescriptor       *GetTimeSeriesForwarderSinkDescriptor
	batchGetTimeSeriesForwarderSinksDescriptor *BatchGetTimeSeriesForwarderSinksDescriptor
	listTimeSeriesForwarderSinksDescriptor     *ListTimeSeriesForwarderSinksDescriptor
	watchTimeSeriesForwarderSinkDescriptor     *WatchTimeSeriesForwarderSinkDescriptor
	watchTimeSeriesForwarderSinksDescriptor    *WatchTimeSeriesForwarderSinksDescriptor
	createTimeSeriesForwarderSinkDescriptor    *CreateTimeSeriesForwarderSinkDescriptor
	updateTimeSeriesForwarderSinkDescriptor    *UpdateTimeSeriesForwarderSinkDescriptor
	deleteTimeSeriesForwarderSinkDescriptor    *DeleteTimeSeriesForwarderSinkDescriptor
)

type GetTimeSeriesForwarderSinkDescriptor struct{}

type GetTimeSeriesForwarderSinkDescriptorClientMsgHandle struct{}

type GetTimeSeriesForwarderSinkDescriptorServerMsgHandle struct{}

func (d *GetTimeSeriesForwarderSinkDescriptor) NewEmptyClientMsg() proto.Message {
	return &GetTimeSeriesForwarderSinkRequest{}
}

func (d *GetTimeSeriesForwarderSinkDescriptor) NewEmptyServerMsg() proto.Message {
	return &time_series_forwarder_sink.TimeSeriesForwarderSink{}
}

func (d *GetTimeSeriesForwarderSinkDescriptor) IsUnary() bool {
	return true
}

func (d *GetTimeSeriesForwarderSinkDescriptor) IsClientStream() bool {
	return false
}

func (d *GetTimeSeriesForwarderSinkDescriptor) IsServerStream() bool {
	return false
}

func (d *GetTimeSeriesForwarderSinkDescriptor) IsCollection() bool {
	return false
}

func (d *GetTimeSeriesForwarderSinkDescriptor) IsPlural() bool {
	return false
}

func (d *GetTimeSeriesForwarderSinkDescriptor) HasResource() bool {
	return true
}

func (d *GetTimeSeriesForwarderSinkDescriptor) RequestHasResourceBody() bool {
	return false
}

func (d *GetTimeSeriesForwarderSinkDescriptor) GetVerb() string {
	return "get"
}

func (d *GetTimeSeriesForwarderSinkDescriptor) GetMethodName() string {
	return "GetTimeSeriesForwarderSink"
}

func (d *GetTimeSeriesForwarderSinkDescriptor) GetFullMethodName() string {
	return "/ntt.monitoring.v4.TimeSeriesForwarderSinkService/GetTimeSeriesForwarderSink"
}

func (d *GetTimeSeriesForwarderSinkDescriptor) GetProtoPkgName() string {
	return "ntt.monitoring.v4"
}

func (d *GetTimeSeriesForwarderSinkDescriptor) GetApiName() string {
	return "TimeSeriesForwarderSinkService"
}

func (d *GetTimeSeriesForwarderSinkDescriptor) GetServiceDomain() string {
	return "monitoring.edgelq.com"
}

func (d *GetTimeSeriesForwarderSinkDescriptor) GetServiceVersion() string {
	return "v4"
}

func (d *GetTimeSeriesForwarderSinkDescriptor) GetApiDescriptor() gotenclient.ApiDescriptor {
	return timeSeriesForwarderSinkServiceDescriptor
}

func (d *GetTimeSeriesForwarderSinkDescriptor) GetResourceDescriptor() gotenresource.Descriptor {
	return time_series_forwarder_sink.GetDescriptor()
}

func (d *GetTimeSeriesForwarderSinkDescriptor) GetClientMsgReflectHandle() gotenclient.MethodMsgHandle {
	return &GetTimeSeriesForwarderSinkDescriptorClientMsgHandle{}
}

func (d *GetTimeSeriesForwarderSinkDescriptor) GetServerMsgReflectHandle() gotenclient.MethodMsgHandle {
	return &GetTimeSeriesForwarderSinkDescriptorServerMsgHandle{}
}

func (h *GetTimeSeriesForwarderSinkDescriptorClientMsgHandle) ExtractResourceName(msg proto.Message) gotenresource.Name {
	typedMsg := msg.(*GetTimeSeriesForwarderSinkRequest)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractResourceName(*GetTimeSeriesForwarderSinkRequest) *time_series_forwarder_sink.Name
	})
	if ok {
		return override.OverrideExtractResourceName(typedMsg)
	}
	{
		if name := typedMsg.GetName(); name != nil {
			return name
		}
	}
	return (*time_series_forwarder_sink.Name)(nil)
}

func (h *GetTimeSeriesForwarderSinkDescriptorClientMsgHandle) ExtractResourceNames(msg proto.Message) gotenresource.NameList {
	typedMsg := msg.(*GetTimeSeriesForwarderSinkRequest)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractResourceNames(*GetTimeSeriesForwarderSinkRequest) []*time_series_forwarder_sink.Name
	})
	if ok {
		return time_series_forwarder_sink.TimeSeriesForwarderSinkNameList(override.OverrideExtractResourceNames(typedMsg))
	}
	return nil
}

func (h *GetTimeSeriesForwarderSinkDescriptorClientMsgHandle) ExtractCollectionName(msg proto.Message) gotenresource.Name {
	typedMsg := msg.(*GetTimeSeriesForwarderSinkRequest)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractCollectionName(*GetTimeSeriesForwarderSinkRequest) *time_series_forwarder_sink.ParentName
	})
	if ok {
		return override.OverrideExtractCollectionName(typedMsg)
	}
	return nil
}

func (h *GetTimeSeriesForwarderSinkDescriptorClientMsgHandle) ExtractResourceBody(msg proto.Message) gotenresource.Resource {
	typedMsg := msg.(*GetTimeSeriesForwarderSinkRequest)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractResourceBody(*GetTimeSeriesForwarderSinkRequest) *time_series_forwarder_sink.TimeSeriesForwarderSink
	})
	if ok {
		return override.OverrideExtractResourceBody(typedMsg)
	}
	return nil
}

func (h *GetTimeSeriesForwarderSinkDescriptorClientMsgHandle) ExtractResourceBodies(msg proto.Message) gotenresource.ResourceList {
	typedMsg := msg.(*GetTimeSeriesForwarderSinkRequest)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractResourceBodies(*GetTimeSeriesForwarderSinkRequest) []*time_series_forwarder_sink.TimeSeriesForwarderSink
	})
	if ok {
		return time_series_forwarder_sink.TimeSeriesForwarderSinkList(override.OverrideExtractResourceBodies(typedMsg))
	}
	return nil
}

func (h *GetTimeSeriesForwarderSinkDescriptorServerMsgHandle) ExtractResourceName(msg proto.Message) gotenresource.Name {
	typedMsg := msg.(*time_series_forwarder_sink.TimeSeriesForwarderSink)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractResourceName(*time_series_forwarder_sink.TimeSeriesForwarderSink) *time_series_forwarder_sink.Name
	})
	if ok {
		return override.OverrideExtractResourceName(typedMsg)
	}
	{
		if name := typedMsg.GetName(); name != nil {
			return name
		}
	}
	return (*time_series_forwarder_sink.Name)(nil)
}

func (h *GetTimeSeriesForwarderSinkDescriptorServerMsgHandle) ExtractResourceNames(msg proto.Message) gotenresource.NameList {
	typedMsg := msg.(*time_series_forwarder_sink.TimeSeriesForwarderSink)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractResourceNames(*time_series_forwarder_sink.TimeSeriesForwarderSink) []*time_series_forwarder_sink.Name
	})
	if ok {
		return time_series_forwarder_sink.TimeSeriesForwarderSinkNameList(override.OverrideExtractResourceNames(typedMsg))
	}
	return nil
}

func (h *GetTimeSeriesForwarderSinkDescriptorServerMsgHandle) ExtractCollectionName(msg proto.Message) gotenresource.Name {
	typedMsg := msg.(*time_series_forwarder_sink.TimeSeriesForwarderSink)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractCollectionName(*time_series_forwarder_sink.TimeSeriesForwarderSink) *time_series_forwarder_sink.ParentName
	})
	if ok {
		return override.OverrideExtractCollectionName(typedMsg)
	}
	return nil
}

func (h *GetTimeSeriesForwarderSinkDescriptorServerMsgHandle) ExtractResourceBody(msg proto.Message) gotenresource.Resource {
	return msg.(*time_series_forwarder_sink.TimeSeriesForwarderSink)
}

func (h *GetTimeSeriesForwarderSinkDescriptorServerMsgHandle) ExtractResourceBodies(msg proto.Message) gotenresource.ResourceList {
	typedMsg := msg.(*time_series_forwarder_sink.TimeSeriesForwarderSink)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractResourceBodies(*time_series_forwarder_sink.TimeSeriesForwarderSink) []*time_series_forwarder_sink.TimeSeriesForwarderSink
	})
	if ok {
		return time_series_forwarder_sink.TimeSeriesForwarderSinkList(override.OverrideExtractResourceBodies(typedMsg))
	}
	return nil
}

func GetGetTimeSeriesForwarderSinkDescriptor() *GetTimeSeriesForwarderSinkDescriptor {
	return getTimeSeriesForwarderSinkDescriptor
}

type BatchGetTimeSeriesForwarderSinksDescriptor struct{}

type BatchGetTimeSeriesForwarderSinksDescriptorClientMsgHandle struct{}

type BatchGetTimeSeriesForwarderSinksDescriptorServerMsgHandle struct{}

func (d *BatchGetTimeSeriesForwarderSinksDescriptor) NewEmptyClientMsg() proto.Message {
	return &BatchGetTimeSeriesForwarderSinksRequest{}
}

func (d *BatchGetTimeSeriesForwarderSinksDescriptor) NewEmptyServerMsg() proto.Message {
	return &BatchGetTimeSeriesForwarderSinksResponse{}
}

func (d *BatchGetTimeSeriesForwarderSinksDescriptor) IsUnary() bool {
	return true
}

func (d *BatchGetTimeSeriesForwarderSinksDescriptor) IsClientStream() bool {
	return false
}

func (d *BatchGetTimeSeriesForwarderSinksDescriptor) IsServerStream() bool {
	return false
}

func (d *BatchGetTimeSeriesForwarderSinksDescriptor) IsCollection() bool {
	return false
}

func (d *BatchGetTimeSeriesForwarderSinksDescriptor) IsPlural() bool {
	return true
}

func (d *BatchGetTimeSeriesForwarderSinksDescriptor) HasResource() bool {
	return true
}

func (d *BatchGetTimeSeriesForwarderSinksDescriptor) RequestHasResourceBody() bool {
	return false
}

func (d *BatchGetTimeSeriesForwarderSinksDescriptor) GetVerb() string {
	return "batchGet"
}

func (d *BatchGetTimeSeriesForwarderSinksDescriptor) GetMethodName() string {
	return "BatchGetTimeSeriesForwarderSinks"
}

func (d *BatchGetTimeSeriesForwarderSinksDescriptor) GetFullMethodName() string {
	return "/ntt.monitoring.v4.TimeSeriesForwarderSinkService/BatchGetTimeSeriesForwarderSinks"
}

func (d *BatchGetTimeSeriesForwarderSinksDescriptor) GetProtoPkgName() string {
	return "ntt.monitoring.v4"
}

func (d *BatchGetTimeSeriesForwarderSinksDescriptor) GetApiName() string {
	return "TimeSeriesForwarderSinkService"
}

func (d *BatchGetTimeSeriesForwarderSinksDescriptor) GetServiceDomain() string {
	return "monitoring.edgelq.com"
}

func (d *BatchGetTimeSeriesForwarderSinksDescriptor) GetServiceVersion() string {
	return "v4"
}

func (d *BatchGetTimeSeriesForwarderSinksDescriptor) GetApiDescriptor() gotenclient.ApiDescriptor {
	return timeSeriesForwarderSinkServiceDescriptor
}

func (d *BatchGetTimeSeriesForwarderSinksDescriptor) GetResourceDescriptor() gotenresource.Descriptor {
	return time_series_forwarder_sink.GetDescriptor()
}

func (d *BatchGetTimeSeriesForwarderSinksDescriptor) GetClientMsgReflectHandle() gotenclient.MethodMsgHandle {
	return &BatchGetTimeSeriesForwarderSinksDescriptorClientMsgHandle{}
}

func (d *BatchGetTimeSeriesForwarderSinksDescriptor) GetServerMsgReflectHandle() gotenclient.MethodMsgHandle {
	return &BatchGetTimeSeriesForwarderSinksDescriptorServerMsgHandle{}
}

func (h *BatchGetTimeSeriesForwarderSinksDescriptorClientMsgHandle) ExtractResourceName(msg proto.Message) gotenresource.Name {
	typedMsg := msg.(*BatchGetTimeSeriesForwarderSinksRequest)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractResourceName(*BatchGetTimeSeriesForwarderSinksRequest) *time_series_forwarder_sink.Name
	})
	if ok {
		return override.OverrideExtractResourceName(typedMsg)
	}
	return nil
}

func (h *BatchGetTimeSeriesForwarderSinksDescriptorClientMsgHandle) ExtractResourceNames(msg proto.Message) gotenresource.NameList {
	typedMsg := msg.(*BatchGetTimeSeriesForwarderSinksRequest)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractResourceNames(*BatchGetTimeSeriesForwarderSinksRequest) []*time_series_forwarder_sink.Name
	})
	if ok {
		return time_series_forwarder_sink.TimeSeriesForwarderSinkNameList(override.OverrideExtractResourceNames(typedMsg))
	}
	{
		if names := typedMsg.GetNames(); len(names) > 0 {
			return time_series_forwarder_sink.TimeSeriesForwarderSinkNameList(names)
		}
	}
	return (time_series_forwarder_sink.TimeSeriesForwarderSinkNameList)(nil)
}

func (h *BatchGetTimeSeriesForwarderSinksDescriptorClientMsgHandle) ExtractCollectionName(msg proto.Message) gotenresource.Name {
	typedMsg := msg.(*BatchGetTimeSeriesForwarderSinksRequest)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractCollectionName(*BatchGetTimeSeriesForwarderSinksRequest) *time_series_forwarder_sink.ParentName
	})
	if ok {
		return override.OverrideExtractCollectionName(typedMsg)
	}
	return nil
}

func (h *BatchGetTimeSeriesForwarderSinksDescriptorClientMsgHandle) ExtractResourceBody(msg proto.Message) gotenresource.Resource {
	typedMsg := msg.(*BatchGetTimeSeriesForwarderSinksRequest)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractResourceBody(*BatchGetTimeSeriesForwarderSinksRequest) *time_series_forwarder_sink.TimeSeriesForwarderSink
	})
	if ok {
		return override.OverrideExtractResourceBody(typedMsg)
	}
	return nil
}

func (h *BatchGetTimeSeriesForwarderSinksDescriptorClientMsgHandle) ExtractResourceBodies(msg proto.Message) gotenresource.ResourceList {
	typedMsg := msg.(*BatchGetTimeSeriesForwarderSinksRequest)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractResourceBodies(*BatchGetTimeSeriesForwarderSinksRequest) []*time_series_forwarder_sink.TimeSeriesForwarderSink
	})
	if ok {
		return time_series_forwarder_sink.TimeSeriesForwarderSinkList(override.OverrideExtractResourceBodies(typedMsg))
	}
	return nil
}

func (h *BatchGetTimeSeriesForwarderSinksDescriptorServerMsgHandle) ExtractResourceName(msg proto.Message) gotenresource.Name {
	typedMsg := msg.(*BatchGetTimeSeriesForwarderSinksResponse)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractResourceName(*BatchGetTimeSeriesForwarderSinksResponse) *time_series_forwarder_sink.Name
	})
	if ok {
		return override.OverrideExtractResourceName(typedMsg)
	}
	return nil
}

func (h *BatchGetTimeSeriesForwarderSinksDescriptorServerMsgHandle) ExtractResourceNames(msg proto.Message) gotenresource.NameList {
	typedMsg := msg.(*BatchGetTimeSeriesForwarderSinksResponse)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractResourceNames(*BatchGetTimeSeriesForwarderSinksResponse) []*time_series_forwarder_sink.Name
	})
	if ok {
		return time_series_forwarder_sink.TimeSeriesForwarderSinkNameList(override.OverrideExtractResourceNames(typedMsg))
	}
	{
		if resources := typedMsg.GetTimeSeriesForwarderSinks(); len(resources) > 0 {
			list := make(time_series_forwarder_sink.TimeSeriesForwarderSinkNameList, 0, len(resources))
			for _, res := range resources {
				list = append(list, res.GetName())
			}
			return list
		}
	}
	return (time_series_forwarder_sink.TimeSeriesForwarderSinkNameList)(nil)
}

func (h *BatchGetTimeSeriesForwarderSinksDescriptorServerMsgHandle) ExtractCollectionName(msg proto.Message) gotenresource.Name {
	typedMsg := msg.(*BatchGetTimeSeriesForwarderSinksResponse)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractCollectionName(*BatchGetTimeSeriesForwarderSinksResponse) *time_series_forwarder_sink.ParentName
	})
	if ok {
		return override.OverrideExtractCollectionName(typedMsg)
	}
	return nil
}

func (h *BatchGetTimeSeriesForwarderSinksDescriptorServerMsgHandle) ExtractResourceBody(msg proto.Message) gotenresource.Resource {
	typedMsg := msg.(*BatchGetTimeSeriesForwarderSinksResponse)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractResourceBody(*BatchGetTimeSeriesForwarderSinksResponse) *time_series_forwarder_sink.TimeSeriesForwarderSink
	})
	if ok {
		return override.OverrideExtractResourceBody(typedMsg)
	}
	return nil
}

func (h *BatchGetTimeSeriesForwarderSinksDescriptorServerMsgHandle) ExtractResourceBodies(msg proto.Message) gotenresource.ResourceList {
	typedMsg := msg.(*BatchGetTimeSeriesForwarderSinksResponse)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractResourceBodies(*BatchGetTimeSeriesForwarderSinksResponse) []*time_series_forwarder_sink.TimeSeriesForwarderSink
	})
	if ok {
		return time_series_forwarder_sink.TimeSeriesForwarderSinkList(override.OverrideExtractResourceBodies(typedMsg))
	}
	{
		if resources := typedMsg.GetTimeSeriesForwarderSinks(); len(resources) > 0 {
			return time_series_forwarder_sink.TimeSeriesForwarderSinkList(resources)
		}
	}
	return (time_series_forwarder_sink.TimeSeriesForwarderSinkList)(nil)
}

func GetBatchGetTimeSeriesForwarderSinksDescriptor() *BatchGetTimeSeriesForwarderSinksDescriptor {
	return batchGetTimeSeriesForwarderSinksDescriptor
}

type ListTimeSeriesForwarderSinksDescriptor struct{}

type ListTimeSeriesForwarderSinksDescriptorClientMsgHandle struct{}

type ListTimeSeriesForwarderSinksDescriptorServerMsgHandle struct{}

func (d *ListTimeSeriesForwarderSinksDescriptor) NewEmptyClientMsg() proto.Message {
	return &ListTimeSeriesForwarderSinksRequest{}
}

func (d *ListTimeSeriesForwarderSinksDescriptor) NewEmptyServerMsg() proto.Message {
	return &ListTimeSeriesForwarderSinksResponse{}
}

func (d *ListTimeSeriesForwarderSinksDescriptor) IsUnary() bool {
	return true
}

func (d *ListTimeSeriesForwarderSinksDescriptor) IsClientStream() bool {
	return false
}

func (d *ListTimeSeriesForwarderSinksDescriptor) IsServerStream() bool {
	return false
}

func (d *ListTimeSeriesForwarderSinksDescriptor) IsCollection() bool {
	return true
}

func (d *ListTimeSeriesForwarderSinksDescriptor) IsPlural() bool {
	return true
}

func (d *ListTimeSeriesForwarderSinksDescriptor) HasResource() bool {
	return true
}

func (d *ListTimeSeriesForwarderSinksDescriptor) RequestHasResourceBody() bool {
	return false
}

func (d *ListTimeSeriesForwarderSinksDescriptor) GetVerb() string {
	return "list"
}

func (d *ListTimeSeriesForwarderSinksDescriptor) GetMethodName() string {
	return "ListTimeSeriesForwarderSinks"
}

func (d *ListTimeSeriesForwarderSinksDescriptor) GetFullMethodName() string {
	return "/ntt.monitoring.v4.TimeSeriesForwarderSinkService/ListTimeSeriesForwarderSinks"
}

func (d *ListTimeSeriesForwarderSinksDescriptor) GetProtoPkgName() string {
	return "ntt.monitoring.v4"
}

func (d *ListTimeSeriesForwarderSinksDescriptor) GetApiName() string {
	return "TimeSeriesForwarderSinkService"
}

func (d *ListTimeSeriesForwarderSinksDescriptor) GetServiceDomain() string {
	return "monitoring.edgelq.com"
}

func (d *ListTimeSeriesForwarderSinksDescriptor) GetServiceVersion() string {
	return "v4"
}

func (d *ListTimeSeriesForwarderSinksDescriptor) GetApiDescriptor() gotenclient.ApiDescriptor {
	return timeSeriesForwarderSinkServiceDescriptor
}

func (d *ListTimeSeriesForwarderSinksDescriptor) GetResourceDescriptor() gotenresource.Descriptor {
	return time_series_forwarder_sink.GetDescriptor()
}

func (d *ListTimeSeriesForwarderSinksDescriptor) GetClientMsgReflectHandle() gotenclient.MethodMsgHandle {
	return &ListTimeSeriesForwarderSinksDescriptorClientMsgHandle{}
}

func (d *ListTimeSeriesForwarderSinksDescriptor) GetServerMsgReflectHandle() gotenclient.MethodMsgHandle {
	return &ListTimeSeriesForwarderSinksDescriptorServerMsgHandle{}
}

func (h *ListTimeSeriesForwarderSinksDescriptorClientMsgHandle) ExtractResourceName(msg proto.Message) gotenresource.Name {
	typedMsg := msg.(*ListTimeSeriesForwarderSinksRequest)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractResourceName(*ListTimeSeriesForwarderSinksRequest) *time_series_forwarder_sink.Name
	})
	if ok {
		return override.OverrideExtractResourceName(typedMsg)
	}
	return nil
}

func (h *ListTimeSeriesForwarderSinksDescriptorClientMsgHandle) ExtractResourceNames(msg proto.Message) gotenresource.NameList {
	typedMsg := msg.(*ListTimeSeriesForwarderSinksRequest)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractResourceNames(*ListTimeSeriesForwarderSinksRequest) []*time_series_forwarder_sink.Name
	})
	if ok {
		return time_series_forwarder_sink.TimeSeriesForwarderSinkNameList(override.OverrideExtractResourceNames(typedMsg))
	}
	return nil
}

func (h *ListTimeSeriesForwarderSinksDescriptorClientMsgHandle) ExtractCollectionName(msg proto.Message) gotenresource.Name {
	typedMsg := msg.(*ListTimeSeriesForwarderSinksRequest)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractCollectionName(*ListTimeSeriesForwarderSinksRequest) *time_series_forwarder_sink.ParentName
	})
	if ok {
		return override.OverrideExtractCollectionName(typedMsg)
	}
	{
		if parentName := typedMsg.GetParent(); parentName != nil {
			return parentName
		}
	}
	return (*time_series_forwarder_sink.ParentName)(nil)
}

func (h *ListTimeSeriesForwarderSinksDescriptorClientMsgHandle) ExtractResourceBody(msg proto.Message) gotenresource.Resource {
	typedMsg := msg.(*ListTimeSeriesForwarderSinksRequest)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractResourceBody(*ListTimeSeriesForwarderSinksRequest) *time_series_forwarder_sink.TimeSeriesForwarderSink
	})
	if ok {
		return override.OverrideExtractResourceBody(typedMsg)
	}
	return nil
}

func (h *ListTimeSeriesForwarderSinksDescriptorClientMsgHandle) ExtractResourceBodies(msg proto.Message) gotenresource.ResourceList {
	typedMsg := msg.(*ListTimeSeriesForwarderSinksRequest)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractResourceBodies(*ListTimeSeriesForwarderSinksRequest) []*time_series_forwarder_sink.TimeSeriesForwarderSink
	})
	if ok {
		return time_series_forwarder_sink.TimeSeriesForwarderSinkList(override.OverrideExtractResourceBodies(typedMsg))
	}
	return nil
}

func (h *ListTimeSeriesForwarderSinksDescriptorServerMsgHandle) ExtractResourceName(msg proto.Message) gotenresource.Name {
	typedMsg := msg.(*ListTimeSeriesForwarderSinksResponse)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractResourceName(*ListTimeSeriesForwarderSinksResponse) *time_series_forwarder_sink.Name
	})
	if ok {
		return override.OverrideExtractResourceName(typedMsg)
	}
	return nil
}

func (h *ListTimeSeriesForwarderSinksDescriptorServerMsgHandle) ExtractResourceNames(msg proto.Message) gotenresource.NameList {
	typedMsg := msg.(*ListTimeSeriesForwarderSinksResponse)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractResourceNames(*ListTimeSeriesForwarderSinksResponse) []*time_series_forwarder_sink.Name
	})
	if ok {
		return time_series_forwarder_sink.TimeSeriesForwarderSinkNameList(override.OverrideExtractResourceNames(typedMsg))
	}
	{
		if resources := typedMsg.GetTimeSeriesForwarderSinks(); len(resources) > 0 {
			list := make(time_series_forwarder_sink.TimeSeriesForwarderSinkNameList, 0, len(resources))
			for _, res := range resources {
				list = append(list, res.GetName())
			}
			return list
		}
	}
	return (time_series_forwarder_sink.TimeSeriesForwarderSinkNameList)(nil)
}

func (h *ListTimeSeriesForwarderSinksDescriptorServerMsgHandle) ExtractCollectionName(msg proto.Message) gotenresource.Name {
	typedMsg := msg.(*ListTimeSeriesForwarderSinksResponse)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractCollectionName(*ListTimeSeriesForwarderSinksResponse) *time_series_forwarder_sink.ParentName
	})
	if ok {
		return override.OverrideExtractCollectionName(typedMsg)
	}
	return nil
}

func (h *ListTimeSeriesForwarderSinksDescriptorServerMsgHandle) ExtractResourceBody(msg proto.Message) gotenresource.Resource {
	typedMsg := msg.(*ListTimeSeriesForwarderSinksResponse)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractResourceBody(*ListTimeSeriesForwarderSinksResponse) *time_series_forwarder_sink.TimeSeriesForwarderSink
	})
	if ok {
		return override.OverrideExtractResourceBody(typedMsg)
	}
	return nil
}

func (h *ListTimeSeriesForwarderSinksDescriptorServerMsgHandle) ExtractResourceBodies(msg proto.Message) gotenresource.ResourceList {
	typedMsg := msg.(*ListTimeSeriesForwarderSinksResponse)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractResourceBodies(*ListTimeSeriesForwarderSinksResponse) []*time_series_forwarder_sink.TimeSeriesForwarderSink
	})
	if ok {
		return time_series_forwarder_sink.TimeSeriesForwarderSinkList(override.OverrideExtractResourceBodies(typedMsg))
	}
	{
		if resources := typedMsg.GetTimeSeriesForwarderSinks(); len(resources) > 0 {
			return time_series_forwarder_sink.TimeSeriesForwarderSinkList(resources)
		}
	}
	return (time_series_forwarder_sink.TimeSeriesForwarderSinkList)(nil)
}

func GetListTimeSeriesForwarderSinksDescriptor() *ListTimeSeriesForwarderSinksDescriptor {
	return listTimeSeriesForwarderSinksDescriptor
}

type WatchTimeSeriesForwarderSinkDescriptor struct{}

type WatchTimeSeriesForwarderSinkDescriptorClientMsgHandle struct{}

type WatchTimeSeriesForwarderSinkDescriptorServerMsgHandle struct{}

func (d *WatchTimeSeriesForwarderSinkDescriptor) NewEmptyClientMsg() proto.Message {
	return &WatchTimeSeriesForwarderSinkRequest{}
}

func (d *WatchTimeSeriesForwarderSinkDescriptor) NewEmptyServerMsg() proto.Message {
	return &WatchTimeSeriesForwarderSinkResponse{}
}

func (d *WatchTimeSeriesForwarderSinkDescriptor) IsUnary() bool {
	return false
}

func (d *WatchTimeSeriesForwarderSinkDescriptor) IsClientStream() bool {
	return false
}

func (d *WatchTimeSeriesForwarderSinkDescriptor) IsServerStream() bool {
	return true
}

func (d *WatchTimeSeriesForwarderSinkDescriptor) IsCollection() bool {
	return false
}

func (d *WatchTimeSeriesForwarderSinkDescriptor) IsPlural() bool {
	return false
}

func (d *WatchTimeSeriesForwarderSinkDescriptor) HasResource() bool {
	return true
}

func (d *WatchTimeSeriesForwarderSinkDescriptor) RequestHasResourceBody() bool {
	return false
}

func (d *WatchTimeSeriesForwarderSinkDescriptor) GetVerb() string {
	return "watch"
}

func (d *WatchTimeSeriesForwarderSinkDescriptor) GetMethodName() string {
	return "WatchTimeSeriesForwarderSink"
}

func (d *WatchTimeSeriesForwarderSinkDescriptor) GetFullMethodName() string {
	return "/ntt.monitoring.v4.TimeSeriesForwarderSinkService/WatchTimeSeriesForwarderSink"
}

func (d *WatchTimeSeriesForwarderSinkDescriptor) GetProtoPkgName() string {
	return "ntt.monitoring.v4"
}

func (d *WatchTimeSeriesForwarderSinkDescriptor) GetApiName() string {
	return "TimeSeriesForwarderSinkService"
}

func (d *WatchTimeSeriesForwarderSinkDescriptor) GetServiceDomain() string {
	return "monitoring.edgelq.com"
}

func (d *WatchTimeSeriesForwarderSinkDescriptor) GetServiceVersion() string {
	return "v4"
}

func (d *WatchTimeSeriesForwarderSinkDescriptor) GetApiDescriptor() gotenclient.ApiDescriptor {
	return timeSeriesForwarderSinkServiceDescriptor
}

func (d *WatchTimeSeriesForwarderSinkDescriptor) GetResourceDescriptor() gotenresource.Descriptor {
	return time_series_forwarder_sink.GetDescriptor()
}

func (d *WatchTimeSeriesForwarderSinkDescriptor) GetClientMsgReflectHandle() gotenclient.MethodMsgHandle {
	return &WatchTimeSeriesForwarderSinkDescriptorClientMsgHandle{}
}

func (d *WatchTimeSeriesForwarderSinkDescriptor) GetServerMsgReflectHandle() gotenclient.MethodMsgHandle {
	return &WatchTimeSeriesForwarderSinkDescriptorServerMsgHandle{}
}

func (h *WatchTimeSeriesForwarderSinkDescriptorClientMsgHandle) ExtractResourceName(msg proto.Message) gotenresource.Name {
	typedMsg := msg.(*WatchTimeSeriesForwarderSinkRequest)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractResourceName(*WatchTimeSeriesForwarderSinkRequest) *time_series_forwarder_sink.Name
	})
	if ok {
		return override.OverrideExtractResourceName(typedMsg)
	}
	{
		if name := typedMsg.GetName(); name != nil {
			return name
		}
	}
	return (*time_series_forwarder_sink.Name)(nil)
}

func (h *WatchTimeSeriesForwarderSinkDescriptorClientMsgHandle) ExtractResourceNames(msg proto.Message) gotenresource.NameList {
	typedMsg := msg.(*WatchTimeSeriesForwarderSinkRequest)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractResourceNames(*WatchTimeSeriesForwarderSinkRequest) []*time_series_forwarder_sink.Name
	})
	if ok {
		return time_series_forwarder_sink.TimeSeriesForwarderSinkNameList(override.OverrideExtractResourceNames(typedMsg))
	}
	return nil
}

func (h *WatchTimeSeriesForwarderSinkDescriptorClientMsgHandle) ExtractCollectionName(msg proto.Message) gotenresource.Name {
	typedMsg := msg.(*WatchTimeSeriesForwarderSinkRequest)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractCollectionName(*WatchTimeSeriesForwarderSinkRequest) *time_series_forwarder_sink.ParentName
	})
	if ok {
		return override.OverrideExtractCollectionName(typedMsg)
	}
	return nil
}

func (h *WatchTimeSeriesForwarderSinkDescriptorClientMsgHandle) ExtractResourceBody(msg proto.Message) gotenresource.Resource {
	typedMsg := msg.(*WatchTimeSeriesForwarderSinkRequest)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractResourceBody(*WatchTimeSeriesForwarderSinkRequest) *time_series_forwarder_sink.TimeSeriesForwarderSink
	})
	if ok {
		return override.OverrideExtractResourceBody(typedMsg)
	}
	return nil
}

func (h *WatchTimeSeriesForwarderSinkDescriptorClientMsgHandle) ExtractResourceBodies(msg proto.Message) gotenresource.ResourceList {
	typedMsg := msg.(*WatchTimeSeriesForwarderSinkRequest)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractResourceBodies(*WatchTimeSeriesForwarderSinkRequest) []*time_series_forwarder_sink.TimeSeriesForwarderSink
	})
	if ok {
		return time_series_forwarder_sink.TimeSeriesForwarderSinkList(override.OverrideExtractResourceBodies(typedMsg))
	}
	return nil
}

func (h *WatchTimeSeriesForwarderSinkDescriptorServerMsgHandle) ExtractResourceName(msg proto.Message) gotenresource.Name {
	typedMsg := msg.(*WatchTimeSeriesForwarderSinkResponse)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractResourceName(*WatchTimeSeriesForwarderSinkResponse) *time_series_forwarder_sink.Name
	})
	if ok {
		return override.OverrideExtractResourceName(typedMsg)
	}
	{
		if resChange := typedMsg.GetChange(); resChange != nil {
			switch tResChange := resChange.ChangeType.(type) {
			case *time_series_forwarder_sink.TimeSeriesForwarderSinkChange_Added_:
				return tResChange.Added.GetTimeSeriesForwarderSink().GetName()
			case *time_series_forwarder_sink.TimeSeriesForwarderSinkChange_Modified_:
				return tResChange.Modified.GetName()
			case *time_series_forwarder_sink.TimeSeriesForwarderSinkChange_Removed_:
				return tResChange.Removed.GetName()
			case *time_series_forwarder_sink.TimeSeriesForwarderSinkChange_Current_:
				return tResChange.Current.GetTimeSeriesForwarderSink().GetName()
			}
		}
	}
	return (*time_series_forwarder_sink.Name)(nil)
}

func (h *WatchTimeSeriesForwarderSinkDescriptorServerMsgHandle) ExtractResourceNames(msg proto.Message) gotenresource.NameList {
	typedMsg := msg.(*WatchTimeSeriesForwarderSinkResponse)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractResourceNames(*WatchTimeSeriesForwarderSinkResponse) []*time_series_forwarder_sink.Name
	})
	if ok {
		return time_series_forwarder_sink.TimeSeriesForwarderSinkNameList(override.OverrideExtractResourceNames(typedMsg))
	}
	return nil
}

func (h *WatchTimeSeriesForwarderSinkDescriptorServerMsgHandle) ExtractCollectionName(msg proto.Message) gotenresource.Name {
	typedMsg := msg.(*WatchTimeSeriesForwarderSinkResponse)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractCollectionName(*WatchTimeSeriesForwarderSinkResponse) *time_series_forwarder_sink.ParentName
	})
	if ok {
		return override.OverrideExtractCollectionName(typedMsg)
	}
	return nil
}

func (h *WatchTimeSeriesForwarderSinkDescriptorServerMsgHandle) ExtractResourceBody(msg proto.Message) gotenresource.Resource {
	typedMsg := msg.(*WatchTimeSeriesForwarderSinkResponse)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractResourceBody(*WatchTimeSeriesForwarderSinkResponse) *time_series_forwarder_sink.TimeSeriesForwarderSink
	})
	if ok {
		return override.OverrideExtractResourceBody(typedMsg)
	}
	{
		if resChange := typedMsg.GetChange(); resChange != nil {
			switch tResChange := resChange.ChangeType.(type) {
			case *time_series_forwarder_sink.TimeSeriesForwarderSinkChange_Added_:
				return tResChange.Added.GetTimeSeriesForwarderSink()
			case *time_series_forwarder_sink.TimeSeriesForwarderSinkChange_Modified_:
				return tResChange.Modified.GetTimeSeriesForwarderSink()
			case *time_series_forwarder_sink.TimeSeriesForwarderSinkChange_Current_:
				return tResChange.Current.GetTimeSeriesForwarderSink()
			}
		}
	}
	return (*time_series_forwarder_sink.TimeSeriesForwarderSink)(nil)
}

func (h *WatchTimeSeriesForwarderSinkDescriptorServerMsgHandle) ExtractResourceBodies(msg proto.Message) gotenresource.ResourceList {
	typedMsg := msg.(*WatchTimeSeriesForwarderSinkResponse)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractResourceBodies(*WatchTimeSeriesForwarderSinkResponse) []*time_series_forwarder_sink.TimeSeriesForwarderSink
	})
	if ok {
		return time_series_forwarder_sink.TimeSeriesForwarderSinkList(override.OverrideExtractResourceBodies(typedMsg))
	}
	return nil
}

func GetWatchTimeSeriesForwarderSinkDescriptor() *WatchTimeSeriesForwarderSinkDescriptor {
	return watchTimeSeriesForwarderSinkDescriptor
}

type WatchTimeSeriesForwarderSinksDescriptor struct{}

type WatchTimeSeriesForwarderSinksDescriptorClientMsgHandle struct{}

type WatchTimeSeriesForwarderSinksDescriptorServerMsgHandle struct{}

func (d *WatchTimeSeriesForwarderSinksDescriptor) NewEmptyClientMsg() proto.Message {
	return &WatchTimeSeriesForwarderSinksRequest{}
}

func (d *WatchTimeSeriesForwarderSinksDescriptor) NewEmptyServerMsg() proto.Message {
	return &WatchTimeSeriesForwarderSinksResponse{}
}

func (d *WatchTimeSeriesForwarderSinksDescriptor) IsUnary() bool {
	return false
}

func (d *WatchTimeSeriesForwarderSinksDescriptor) IsClientStream() bool {
	return false
}

func (d *WatchTimeSeriesForwarderSinksDescriptor) IsServerStream() bool {
	return true
}

func (d *WatchTimeSeriesForwarderSinksDescriptor) IsCollection() bool {
	return true
}

func (d *WatchTimeSeriesForwarderSinksDescriptor) IsPlural() bool {
	return true
}

func (d *WatchTimeSeriesForwarderSinksDescriptor) HasResource() bool {
	return true
}

func (d *WatchTimeSeriesForwarderSinksDescriptor) RequestHasResourceBody() bool {
	return false
}

func (d *WatchTimeSeriesForwarderSinksDescriptor) GetVerb() string {
	return "watch"
}

func (d *WatchTimeSeriesForwarderSinksDescriptor) GetMethodName() string {
	return "WatchTimeSeriesForwarderSinks"
}

func (d *WatchTimeSeriesForwarderSinksDescriptor) GetFullMethodName() string {
	return "/ntt.monitoring.v4.TimeSeriesForwarderSinkService/WatchTimeSeriesForwarderSinks"
}

func (d *WatchTimeSeriesForwarderSinksDescriptor) GetProtoPkgName() string {
	return "ntt.monitoring.v4"
}

func (d *WatchTimeSeriesForwarderSinksDescriptor) GetApiName() string {
	return "TimeSeriesForwarderSinkService"
}

func (d *WatchTimeSeriesForwarderSinksDescriptor) GetServiceDomain() string {
	return "monitoring.edgelq.com"
}

func (d *WatchTimeSeriesForwarderSinksDescriptor) GetServiceVersion() string {
	return "v4"
}

func (d *WatchTimeSeriesForwarderSinksDescriptor) GetApiDescriptor() gotenclient.ApiDescriptor {
	return timeSeriesForwarderSinkServiceDescriptor
}

func (d *WatchTimeSeriesForwarderSinksDescriptor) GetResourceDescriptor() gotenresource.Descriptor {
	return time_series_forwarder_sink.GetDescriptor()
}

func (d *WatchTimeSeriesForwarderSinksDescriptor) GetClientMsgReflectHandle() gotenclient.MethodMsgHandle {
	return &WatchTimeSeriesForwarderSinksDescriptorClientMsgHandle{}
}

func (d *WatchTimeSeriesForwarderSinksDescriptor) GetServerMsgReflectHandle() gotenclient.MethodMsgHandle {
	return &WatchTimeSeriesForwarderSinksDescriptorServerMsgHandle{}
}

func (h *WatchTimeSeriesForwarderSinksDescriptorClientMsgHandle) ExtractResourceName(msg proto.Message) gotenresource.Name {
	typedMsg := msg.(*WatchTimeSeriesForwarderSinksRequest)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractResourceName(*WatchTimeSeriesForwarderSinksRequest) *time_series_forwarder_sink.Name
	})
	if ok {
		return override.OverrideExtractResourceName(typedMsg)
	}
	return nil
}

func (h *WatchTimeSeriesForwarderSinksDescriptorClientMsgHandle) ExtractResourceNames(msg proto.Message) gotenresource.NameList {
	typedMsg := msg.(*WatchTimeSeriesForwarderSinksRequest)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractResourceNames(*WatchTimeSeriesForwarderSinksRequest) []*time_series_forwarder_sink.Name
	})
	if ok {
		return time_series_forwarder_sink.TimeSeriesForwarderSinkNameList(override.OverrideExtractResourceNames(typedMsg))
	}
	return nil
}

func (h *WatchTimeSeriesForwarderSinksDescriptorClientMsgHandle) ExtractCollectionName(msg proto.Message) gotenresource.Name {
	typedMsg := msg.(*WatchTimeSeriesForwarderSinksRequest)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractCollectionName(*WatchTimeSeriesForwarderSinksRequest) *time_series_forwarder_sink.ParentName
	})
	if ok {
		return override.OverrideExtractCollectionName(typedMsg)
	}
	{
		if parentName := typedMsg.GetParent(); parentName != nil {
			return parentName
		}
	}
	return (*time_series_forwarder_sink.ParentName)(nil)
}

func (h *WatchTimeSeriesForwarderSinksDescriptorClientMsgHandle) ExtractResourceBody(msg proto.Message) gotenresource.Resource {
	typedMsg := msg.(*WatchTimeSeriesForwarderSinksRequest)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractResourceBody(*WatchTimeSeriesForwarderSinksRequest) *time_series_forwarder_sink.TimeSeriesForwarderSink
	})
	if ok {
		return override.OverrideExtractResourceBody(typedMsg)
	}
	return nil
}

func (h *WatchTimeSeriesForwarderSinksDescriptorClientMsgHandle) ExtractResourceBodies(msg proto.Message) gotenresource.ResourceList {
	typedMsg := msg.(*WatchTimeSeriesForwarderSinksRequest)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractResourceBodies(*WatchTimeSeriesForwarderSinksRequest) []*time_series_forwarder_sink.TimeSeriesForwarderSink
	})
	if ok {
		return time_series_forwarder_sink.TimeSeriesForwarderSinkList(override.OverrideExtractResourceBodies(typedMsg))
	}
	return nil
}

func (h *WatchTimeSeriesForwarderSinksDescriptorServerMsgHandle) ExtractResourceName(msg proto.Message) gotenresource.Name {
	typedMsg := msg.(*WatchTimeSeriesForwarderSinksResponse)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractResourceName(*WatchTimeSeriesForwarderSinksResponse) *time_series_forwarder_sink.Name
	})
	if ok {
		return override.OverrideExtractResourceName(typedMsg)
	}
	return nil
}

func (h *WatchTimeSeriesForwarderSinksDescriptorServerMsgHandle) ExtractResourceNames(msg proto.Message) gotenresource.NameList {
	typedMsg := msg.(*WatchTimeSeriesForwarderSinksResponse)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractResourceNames(*WatchTimeSeriesForwarderSinksResponse) []*time_series_forwarder_sink.Name
	})
	if ok {
		return time_series_forwarder_sink.TimeSeriesForwarderSinkNameList(override.OverrideExtractResourceNames(typedMsg))
	}
	{
		if resChanges := typedMsg.GetTimeSeriesForwarderSinkChanges(); len(resChanges) > 0 {
			list := make(time_series_forwarder_sink.TimeSeriesForwarderSinkNameList, 0, len(resChanges))
			for _, resChange := range resChanges {
				switch tResChange := resChange.ChangeType.(type) {
				case *time_series_forwarder_sink.TimeSeriesForwarderSinkChange_Added_:
					list = append(list, tResChange.Added.GetTimeSeriesForwarderSink().GetName())
				case *time_series_forwarder_sink.TimeSeriesForwarderSinkChange_Modified_:
					list = append(list, tResChange.Modified.GetName())
				case *time_series_forwarder_sink.TimeSeriesForwarderSinkChange_Removed_:
					list = append(list, tResChange.Removed.GetName())
				case *time_series_forwarder_sink.TimeSeriesForwarderSinkChange_Current_:
					list = append(list, tResChange.Current.GetTimeSeriesForwarderSink().GetName())
				}
			}
			return list
		}
	}
	return (time_series_forwarder_sink.TimeSeriesForwarderSinkNameList)(nil)
}

func (h *WatchTimeSeriesForwarderSinksDescriptorServerMsgHandle) ExtractCollectionName(msg proto.Message) gotenresource.Name {
	typedMsg := msg.(*WatchTimeSeriesForwarderSinksResponse)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractCollectionName(*WatchTimeSeriesForwarderSinksResponse) *time_series_forwarder_sink.ParentName
	})
	if ok {
		return override.OverrideExtractCollectionName(typedMsg)
	}
	return nil
}

func (h *WatchTimeSeriesForwarderSinksDescriptorServerMsgHandle) ExtractResourceBody(msg proto.Message) gotenresource.Resource {
	typedMsg := msg.(*WatchTimeSeriesForwarderSinksResponse)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractResourceBody(*WatchTimeSeriesForwarderSinksResponse) *time_series_forwarder_sink.TimeSeriesForwarderSink
	})
	if ok {
		return override.OverrideExtractResourceBody(typedMsg)
	}
	return nil
}

func (h *WatchTimeSeriesForwarderSinksDescriptorServerMsgHandle) ExtractResourceBodies(msg proto.Message) gotenresource.ResourceList {
	typedMsg := msg.(*WatchTimeSeriesForwarderSinksResponse)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractResourceBodies(*WatchTimeSeriesForwarderSinksResponse) []*time_series_forwarder_sink.TimeSeriesForwarderSink
	})
	if ok {
		return time_series_forwarder_sink.TimeSeriesForwarderSinkList(override.OverrideExtractResourceBodies(typedMsg))
	}
	{
		if resChanges := typedMsg.GetTimeSeriesForwarderSinkChanges(); len(resChanges) > 0 {
			list := make(time_series_forwarder_sink.TimeSeriesForwarderSinkList, 0, len(resChanges))
			for _, resChange := range resChanges {
				switch tResChange := resChange.ChangeType.(type) {
				case *time_series_forwarder_sink.TimeSeriesForwarderSinkChange_Added_:
					list = append(list, tResChange.Added.GetTimeSeriesForwarderSink())
				case *time_series_forwarder_sink.TimeSeriesForwarderSinkChange_Modified_:
					list = append(list, tResChange.Modified.GetTimeSeriesForwarderSink())
				case *time_series_forwarder_sink.TimeSeriesForwarderSinkChange_Current_:
					list = append(list, tResChange.Current.GetTimeSeriesForwarderSink())
				}
			}
			return list
		}
	}
	return (time_series_forwarder_sink.TimeSeriesForwarderSinkList)(nil)
}

func GetWatchTimeSeriesForwarderSinksDescriptor() *WatchTimeSeriesForwarderSinksDescriptor {
	return watchTimeSeriesForwarderSinksDescriptor
}

type CreateTimeSeriesForwarderSinkDescriptor struct{}

type CreateTimeSeriesForwarderSinkDescriptorClientMsgHandle struct{}

type CreateTimeSeriesForwarderSinkDescriptorServerMsgHandle struct{}

func (d *CreateTimeSeriesForwarderSinkDescriptor) NewEmptyClientMsg() proto.Message {
	return &CreateTimeSeriesForwarderSinkRequest{}
}

func (d *CreateTimeSeriesForwarderSinkDescriptor) NewEmptyServerMsg() proto.Message {
	return &time_series_forwarder_sink.TimeSeriesForwarderSink{}
}

func (d *CreateTimeSeriesForwarderSinkDescriptor) IsUnary() bool {
	return true
}

func (d *CreateTimeSeriesForwarderSinkDescriptor) IsClientStream() bool {
	return false
}

func (d *CreateTimeSeriesForwarderSinkDescriptor) IsServerStream() bool {
	return false
}

func (d *CreateTimeSeriesForwarderSinkDescriptor) IsCollection() bool {
	return true
}

func (d *CreateTimeSeriesForwarderSinkDescriptor) IsPlural() bool {
	return false
}

func (d *CreateTimeSeriesForwarderSinkDescriptor) HasResource() bool {
	return true
}

func (d *CreateTimeSeriesForwarderSinkDescriptor) RequestHasResourceBody() bool {
	return true
}

func (d *CreateTimeSeriesForwarderSinkDescriptor) GetVerb() string {
	return "create"
}

func (d *CreateTimeSeriesForwarderSinkDescriptor) GetMethodName() string {
	return "CreateTimeSeriesForwarderSink"
}

func (d *CreateTimeSeriesForwarderSinkDescriptor) GetFullMethodName() string {
	return "/ntt.monitoring.v4.TimeSeriesForwarderSinkService/CreateTimeSeriesForwarderSink"
}

func (d *CreateTimeSeriesForwarderSinkDescriptor) GetProtoPkgName() string {
	return "ntt.monitoring.v4"
}

func (d *CreateTimeSeriesForwarderSinkDescriptor) GetApiName() string {
	return "TimeSeriesForwarderSinkService"
}

func (d *CreateTimeSeriesForwarderSinkDescriptor) GetServiceDomain() string {
	return "monitoring.edgelq.com"
}

func (d *CreateTimeSeriesForwarderSinkDescriptor) GetServiceVersion() string {
	return "v4"
}

func (d *CreateTimeSeriesForwarderSinkDescriptor) GetApiDescriptor() gotenclient.ApiDescriptor {
	return timeSeriesForwarderSinkServiceDescriptor
}

func (d *CreateTimeSeriesForwarderSinkDescriptor) GetResourceDescriptor() gotenresource.Descriptor {
	return time_series_forwarder_sink.GetDescriptor()
}

func (d *CreateTimeSeriesForwarderSinkDescriptor) GetClientMsgReflectHandle() gotenclient.MethodMsgHandle {
	return &CreateTimeSeriesForwarderSinkDescriptorClientMsgHandle{}
}

func (d *CreateTimeSeriesForwarderSinkDescriptor) GetServerMsgReflectHandle() gotenclient.MethodMsgHandle {
	return &CreateTimeSeriesForwarderSinkDescriptorServerMsgHandle{}
}

func (h *CreateTimeSeriesForwarderSinkDescriptorClientMsgHandle) ExtractResourceName(msg proto.Message) gotenresource.Name {
	typedMsg := msg.(*CreateTimeSeriesForwarderSinkRequest)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractResourceName(*CreateTimeSeriesForwarderSinkRequest) *time_series_forwarder_sink.Name
	})
	if ok {
		return override.OverrideExtractResourceName(typedMsg)
	}
	{
		res := typedMsg.GetTimeSeriesForwarderSink()
		if name := res.GetName(); name != nil {
			return name
		}
	}
	return (*time_series_forwarder_sink.Name)(nil)
}

func (h *CreateTimeSeriesForwarderSinkDescriptorClientMsgHandle) ExtractResourceNames(msg proto.Message) gotenresource.NameList {
	typedMsg := msg.(*CreateTimeSeriesForwarderSinkRequest)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractResourceNames(*CreateTimeSeriesForwarderSinkRequest) []*time_series_forwarder_sink.Name
	})
	if ok {
		return time_series_forwarder_sink.TimeSeriesForwarderSinkNameList(override.OverrideExtractResourceNames(typedMsg))
	}
	return nil
}

func (h *CreateTimeSeriesForwarderSinkDescriptorClientMsgHandle) ExtractCollectionName(msg proto.Message) gotenresource.Name {
	typedMsg := msg.(*CreateTimeSeriesForwarderSinkRequest)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractCollectionName(*CreateTimeSeriesForwarderSinkRequest) *time_series_forwarder_sink.ParentName
	})
	if ok {
		return override.OverrideExtractCollectionName(typedMsg)
	}
	{
		if parentName := typedMsg.GetParent(); parentName != nil {
			return parentName
		}
	}
	return (*time_series_forwarder_sink.ParentName)(nil)
}

func (h *CreateTimeSeriesForwarderSinkDescriptorClientMsgHandle) ExtractResourceBody(msg proto.Message) gotenresource.Resource {
	typedMsg := msg.(*CreateTimeSeriesForwarderSinkRequest)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractResourceBody(*CreateTimeSeriesForwarderSinkRequest) *time_series_forwarder_sink.TimeSeriesForwarderSink
	})
	if ok {
		return override.OverrideExtractResourceBody(typedMsg)
	}
	{
		return typedMsg.GetTimeSeriesForwarderSink()
	}
	return (*time_series_forwarder_sink.TimeSeriesForwarderSink)(nil)
}

func (h *CreateTimeSeriesForwarderSinkDescriptorClientMsgHandle) ExtractResourceBodies(msg proto.Message) gotenresource.ResourceList {
	typedMsg := msg.(*CreateTimeSeriesForwarderSinkRequest)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractResourceBodies(*CreateTimeSeriesForwarderSinkRequest) []*time_series_forwarder_sink.TimeSeriesForwarderSink
	})
	if ok {
		return time_series_forwarder_sink.TimeSeriesForwarderSinkList(override.OverrideExtractResourceBodies(typedMsg))
	}
	return nil
}

func (h *CreateTimeSeriesForwarderSinkDescriptorServerMsgHandle) ExtractResourceName(msg proto.Message) gotenresource.Name {
	typedMsg := msg.(*time_series_forwarder_sink.TimeSeriesForwarderSink)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractResourceName(*time_series_forwarder_sink.TimeSeriesForwarderSink) *time_series_forwarder_sink.Name
	})
	if ok {
		return override.OverrideExtractResourceName(typedMsg)
	}
	{
		if name := typedMsg.GetName(); name != nil {
			return name
		}
	}
	return (*time_series_forwarder_sink.Name)(nil)
}

func (h *CreateTimeSeriesForwarderSinkDescriptorServerMsgHandle) ExtractResourceNames(msg proto.Message) gotenresource.NameList {
	typedMsg := msg.(*time_series_forwarder_sink.TimeSeriesForwarderSink)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractResourceNames(*time_series_forwarder_sink.TimeSeriesForwarderSink) []*time_series_forwarder_sink.Name
	})
	if ok {
		return time_series_forwarder_sink.TimeSeriesForwarderSinkNameList(override.OverrideExtractResourceNames(typedMsg))
	}
	return nil
}

func (h *CreateTimeSeriesForwarderSinkDescriptorServerMsgHandle) ExtractCollectionName(msg proto.Message) gotenresource.Name {
	typedMsg := msg.(*time_series_forwarder_sink.TimeSeriesForwarderSink)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractCollectionName(*time_series_forwarder_sink.TimeSeriesForwarderSink) *time_series_forwarder_sink.ParentName
	})
	if ok {
		return override.OverrideExtractCollectionName(typedMsg)
	}
	return nil
}

func (h *CreateTimeSeriesForwarderSinkDescriptorServerMsgHandle) ExtractResourceBody(msg proto.Message) gotenresource.Resource {
	return msg.(*time_series_forwarder_sink.TimeSeriesForwarderSink)
}

func (h *CreateTimeSeriesForwarderSinkDescriptorServerMsgHandle) ExtractResourceBodies(msg proto.Message) gotenresource.ResourceList {
	typedMsg := msg.(*time_series_forwarder_sink.TimeSeriesForwarderSink)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractResourceBodies(*time_series_forwarder_sink.TimeSeriesForwarderSink) []*time_series_forwarder_sink.TimeSeriesForwarderSink
	})
	if ok {
		return time_series_forwarder_sink.TimeSeriesForwarderSinkList(override.OverrideExtractResourceBodies(typedMsg))
	}
	return nil
}

func GetCreateTimeSeriesForwarderSinkDescriptor() *CreateTimeSeriesForwarderSinkDescriptor {
	return createTimeSeriesForwarderSinkDescriptor
}

type UpdateTimeSeriesForwarderSinkDescriptor struct{}

type UpdateTimeSeriesForwarderSinkDescriptorClientMsgHandle struct{}

type UpdateTimeSeriesForwarderSinkDescriptorServerMsgHandle struct{}

func (d *UpdateTimeSeriesForwarderSinkDescriptor) NewEmptyClientMsg() proto.Message {
	return &UpdateTimeSeriesForwarderSinkRequest{}
}

func (d *UpdateTimeSeriesForwarderSinkDescriptor) NewEmptyServerMsg() proto.Message {
	return &time_series_forwarder_sink.TimeSeriesForwarderSink{}
}

func (d *UpdateTimeSeriesForwarderSinkDescriptor) IsUnary() bool {
	return true
}

func (d *UpdateTimeSeriesForwarderSinkDescriptor) IsClientStream() bool {
	return false
}

func (d *UpdateTimeSeriesForwarderSinkDescriptor) IsServerStream() bool {
	return false
}

func (d *UpdateTimeSeriesForwarderSinkDescriptor) IsCollection() bool {
	return false
}

func (d *UpdateTimeSeriesForwarderSinkDescriptor) IsPlural() bool {
	return false
}

func (d *UpdateTimeSeriesForwarderSinkDescriptor) HasResource() bool {
	return true
}

func (d *UpdateTimeSeriesForwarderSinkDescriptor) RequestHasResourceBody() bool {
	return true
}

func (d *UpdateTimeSeriesForwarderSinkDescriptor) GetVerb() string {
	return "update"
}

func (d *UpdateTimeSeriesForwarderSinkDescriptor) GetMethodName() string {
	return "UpdateTimeSeriesForwarderSink"
}

func (d *UpdateTimeSeriesForwarderSinkDescriptor) GetFullMethodName() string {
	return "/ntt.monitoring.v4.TimeSeriesForwarderSinkService/UpdateTimeSeriesForwarderSink"
}

func (d *UpdateTimeSeriesForwarderSinkDescriptor) GetProtoPkgName() string {
	return "ntt.monitoring.v4"
}

func (d *UpdateTimeSeriesForwarderSinkDescriptor) GetApiName() string {
	return "TimeSeriesForwarderSinkService"
}

func (d *UpdateTimeSeriesForwarderSinkDescriptor) GetServiceDomain() string {
	return "monitoring.edgelq.com"
}

func (d *UpdateTimeSeriesForwarderSinkDescriptor) GetServiceVersion() string {
	return "v4"
}

func (d *UpdateTimeSeriesForwarderSinkDescriptor) GetApiDescriptor() gotenclient.ApiDescriptor {
	return timeSeriesForwarderSinkServiceDescriptor
}

func (d *UpdateTimeSeriesForwarderSinkDescriptor) GetResourceDescriptor() gotenresource.Descriptor {
	return time_series_forwarder_sink.GetDescriptor()
}

func (d *UpdateTimeSeriesForwarderSinkDescriptor) GetClientMsgReflectHandle() gotenclient.MethodMsgHandle {
	return &UpdateTimeSeriesForwarderSinkDescriptorClientMsgHandle{}
}

func (d *UpdateTimeSeriesForwarderSinkDescriptor) GetServerMsgReflectHandle() gotenclient.MethodMsgHandle {
	return &UpdateTimeSeriesForwarderSinkDescriptorServerMsgHandle{}
}

func (h *UpdateTimeSeriesForwarderSinkDescriptorClientMsgHandle) ExtractResourceName(msg proto.Message) gotenresource.Name {
	typedMsg := msg.(*UpdateTimeSeriesForwarderSinkRequest)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractResourceName(*UpdateTimeSeriesForwarderSinkRequest) *time_series_forwarder_sink.Name
	})
	if ok {
		return override.OverrideExtractResourceName(typedMsg)
	}
	{
		res := typedMsg.GetTimeSeriesForwarderSink()
		if name := res.GetName(); name != nil {
			return name
		}
	}
	return (*time_series_forwarder_sink.Name)(nil)
}

func (h *UpdateTimeSeriesForwarderSinkDescriptorClientMsgHandle) ExtractResourceNames(msg proto.Message) gotenresource.NameList {
	typedMsg := msg.(*UpdateTimeSeriesForwarderSinkRequest)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractResourceNames(*UpdateTimeSeriesForwarderSinkRequest) []*time_series_forwarder_sink.Name
	})
	if ok {
		return time_series_forwarder_sink.TimeSeriesForwarderSinkNameList(override.OverrideExtractResourceNames(typedMsg))
	}
	return nil
}

func (h *UpdateTimeSeriesForwarderSinkDescriptorClientMsgHandle) ExtractCollectionName(msg proto.Message) gotenresource.Name {
	typedMsg := msg.(*UpdateTimeSeriesForwarderSinkRequest)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractCollectionName(*UpdateTimeSeriesForwarderSinkRequest) *time_series_forwarder_sink.ParentName
	})
	if ok {
		return override.OverrideExtractCollectionName(typedMsg)
	}
	return nil
}

func (h *UpdateTimeSeriesForwarderSinkDescriptorClientMsgHandle) ExtractResourceBody(msg proto.Message) gotenresource.Resource {
	typedMsg := msg.(*UpdateTimeSeriesForwarderSinkRequest)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractResourceBody(*UpdateTimeSeriesForwarderSinkRequest) *time_series_forwarder_sink.TimeSeriesForwarderSink
	})
	if ok {
		return override.OverrideExtractResourceBody(typedMsg)
	}
	{
		return typedMsg.GetTimeSeriesForwarderSink()
	}
	return (*time_series_forwarder_sink.TimeSeriesForwarderSink)(nil)
}

func (h *UpdateTimeSeriesForwarderSinkDescriptorClientMsgHandle) ExtractResourceBodies(msg proto.Message) gotenresource.ResourceList {
	typedMsg := msg.(*UpdateTimeSeriesForwarderSinkRequest)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractResourceBodies(*UpdateTimeSeriesForwarderSinkRequest) []*time_series_forwarder_sink.TimeSeriesForwarderSink
	})
	if ok {
		return time_series_forwarder_sink.TimeSeriesForwarderSinkList(override.OverrideExtractResourceBodies(typedMsg))
	}
	return nil
}

func (h *UpdateTimeSeriesForwarderSinkDescriptorServerMsgHandle) ExtractResourceName(msg proto.Message) gotenresource.Name {
	typedMsg := msg.(*time_series_forwarder_sink.TimeSeriesForwarderSink)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractResourceName(*time_series_forwarder_sink.TimeSeriesForwarderSink) *time_series_forwarder_sink.Name
	})
	if ok {
		return override.OverrideExtractResourceName(typedMsg)
	}
	{
		if name := typedMsg.GetName(); name != nil {
			return name
		}
	}
	return (*time_series_forwarder_sink.Name)(nil)
}

func (h *UpdateTimeSeriesForwarderSinkDescriptorServerMsgHandle) ExtractResourceNames(msg proto.Message) gotenresource.NameList {
	typedMsg := msg.(*time_series_forwarder_sink.TimeSeriesForwarderSink)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractResourceNames(*time_series_forwarder_sink.TimeSeriesForwarderSink) []*time_series_forwarder_sink.Name
	})
	if ok {
		return time_series_forwarder_sink.TimeSeriesForwarderSinkNameList(override.OverrideExtractResourceNames(typedMsg))
	}
	return nil
}

func (h *UpdateTimeSeriesForwarderSinkDescriptorServerMsgHandle) ExtractCollectionName(msg proto.Message) gotenresource.Name {
	typedMsg := msg.(*time_series_forwarder_sink.TimeSeriesForwarderSink)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractCollectionName(*time_series_forwarder_sink.TimeSeriesForwarderSink) *time_series_forwarder_sink.ParentName
	})
	if ok {
		return override.OverrideExtractCollectionName(typedMsg)
	}
	return nil
}

func (h *UpdateTimeSeriesForwarderSinkDescriptorServerMsgHandle) ExtractResourceBody(msg proto.Message) gotenresource.Resource {
	return msg.(*time_series_forwarder_sink.TimeSeriesForwarderSink)
}

func (h *UpdateTimeSeriesForwarderSinkDescriptorServerMsgHandle) ExtractResourceBodies(msg proto.Message) gotenresource.ResourceList {
	typedMsg := msg.(*time_series_forwarder_sink.TimeSeriesForwarderSink)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractResourceBodies(*time_series_forwarder_sink.TimeSeriesForwarderSink) []*time_series_forwarder_sink.TimeSeriesForwarderSink
	})
	if ok {
		return time_series_forwarder_sink.TimeSeriesForwarderSinkList(override.OverrideExtractResourceBodies(typedMsg))
	}
	return nil
}

func GetUpdateTimeSeriesForwarderSinkDescriptor() *UpdateTimeSeriesForwarderSinkDescriptor {
	return updateTimeSeriesForwarderSinkDescriptor
}

type DeleteTimeSeriesForwarderSinkDescriptor struct{}

type DeleteTimeSeriesForwarderSinkDescriptorClientMsgHandle struct{}

type DeleteTimeSeriesForwarderSinkDescriptorServerMsgHandle struct{}

func (d *DeleteTimeSeriesForwarderSinkDescriptor) NewEmptyClientMsg() proto.Message {
	return &DeleteTimeSeriesForwarderSinkRequest{}
}

func (d *DeleteTimeSeriesForwarderSinkDescriptor) NewEmptyServerMsg() proto.Message {
	return &emptypb.Empty{}
}

func (d *DeleteTimeSeriesForwarderSinkDescriptor) IsUnary() bool {
	return true
}

func (d *DeleteTimeSeriesForwarderSinkDescriptor) IsClientStream() bool {
	return false
}

func (d *DeleteTimeSeriesForwarderSinkDescriptor) IsServerStream() bool {
	return false
}

func (d *DeleteTimeSeriesForwarderSinkDescriptor) IsCollection() bool {
	return false
}

func (d *DeleteTimeSeriesForwarderSinkDescriptor) IsPlural() bool {
	return false
}

func (d *DeleteTimeSeriesForwarderSinkDescriptor) HasResource() bool {
	return true
}

func (d *DeleteTimeSeriesForwarderSinkDescriptor) RequestHasResourceBody() bool {
	return false
}

func (d *DeleteTimeSeriesForwarderSinkDescriptor) GetVerb() string {
	return "delete"
}

func (d *DeleteTimeSeriesForwarderSinkDescriptor) GetMethodName() string {
	return "DeleteTimeSeriesForwarderSink"
}

func (d *DeleteTimeSeriesForwarderSinkDescriptor) GetFullMethodName() string {
	return "/ntt.monitoring.v4.TimeSeriesForwarderSinkService/DeleteTimeSeriesForwarderSink"
}

func (d *DeleteTimeSeriesForwarderSinkDescriptor) GetProtoPkgName() string {
	return "ntt.monitoring.v4"
}

func (d *DeleteTimeSeriesForwarderSinkDescriptor) GetApiName() string {
	return "TimeSeriesForwarderSinkService"
}

func (d *DeleteTimeSeriesForwarderSinkDescriptor) GetServiceDomain() string {
	return "monitoring.edgelq.com"
}

func (d *DeleteTimeSeriesForwarderSinkDescriptor) GetServiceVersion() string {
	return "v4"
}

func (d *DeleteTimeSeriesForwarderSinkDescriptor) GetApiDescriptor() gotenclient.ApiDescriptor {
	return timeSeriesForwarderSinkServiceDescriptor
}

func (d *DeleteTimeSeriesForwarderSinkDescriptor) GetResourceDescriptor() gotenresource.Descriptor {
	return time_series_forwarder_sink.GetDescriptor()
}

func (d *DeleteTimeSeriesForwarderSinkDescriptor) GetClientMsgReflectHandle() gotenclient.MethodMsgHandle {
	return &DeleteTimeSeriesForwarderSinkDescriptorClientMsgHandle{}
}

func (d *DeleteTimeSeriesForwarderSinkDescriptor) GetServerMsgReflectHandle() gotenclient.MethodMsgHandle {
	return &DeleteTimeSeriesForwarderSinkDescriptorServerMsgHandle{}
}

func (h *DeleteTimeSeriesForwarderSinkDescriptorClientMsgHandle) ExtractResourceName(msg proto.Message) gotenresource.Name {
	typedMsg := msg.(*DeleteTimeSeriesForwarderSinkRequest)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractResourceName(*DeleteTimeSeriesForwarderSinkRequest) *time_series_forwarder_sink.Name
	})
	if ok {
		return override.OverrideExtractResourceName(typedMsg)
	}
	{
		if name := typedMsg.GetName(); name != nil {
			return name
		}
	}
	return (*time_series_forwarder_sink.Name)(nil)
}

func (h *DeleteTimeSeriesForwarderSinkDescriptorClientMsgHandle) ExtractResourceNames(msg proto.Message) gotenresource.NameList {
	typedMsg := msg.(*DeleteTimeSeriesForwarderSinkRequest)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractResourceNames(*DeleteTimeSeriesForwarderSinkRequest) []*time_series_forwarder_sink.Name
	})
	if ok {
		return time_series_forwarder_sink.TimeSeriesForwarderSinkNameList(override.OverrideExtractResourceNames(typedMsg))
	}
	return nil
}

func (h *DeleteTimeSeriesForwarderSinkDescriptorClientMsgHandle) ExtractCollectionName(msg proto.Message) gotenresource.Name {
	typedMsg := msg.(*DeleteTimeSeriesForwarderSinkRequest)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractCollectionName(*DeleteTimeSeriesForwarderSinkRequest) *time_series_forwarder_sink.ParentName
	})
	if ok {
		return override.OverrideExtractCollectionName(typedMsg)
	}
	return nil
}

func (h *DeleteTimeSeriesForwarderSinkDescriptorClientMsgHandle) ExtractResourceBody(msg proto.Message) gotenresource.Resource {
	typedMsg := msg.(*DeleteTimeSeriesForwarderSinkRequest)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractResourceBody(*DeleteTimeSeriesForwarderSinkRequest) *time_series_forwarder_sink.TimeSeriesForwarderSink
	})
	if ok {
		return override.OverrideExtractResourceBody(typedMsg)
	}
	return nil
}

func (h *DeleteTimeSeriesForwarderSinkDescriptorClientMsgHandle) ExtractResourceBodies(msg proto.Message) gotenresource.ResourceList {
	typedMsg := msg.(*DeleteTimeSeriesForwarderSinkRequest)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractResourceBodies(*DeleteTimeSeriesForwarderSinkRequest) []*time_series_forwarder_sink.TimeSeriesForwarderSink
	})
	if ok {
		return time_series_forwarder_sink.TimeSeriesForwarderSinkList(override.OverrideExtractResourceBodies(typedMsg))
	}
	return nil
}

func (h *DeleteTimeSeriesForwarderSinkDescriptorServerMsgHandle) ExtractResourceName(msg proto.Message) gotenresource.Name {
	typedMsg := msg.(*emptypb.Empty)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractResourceName(*emptypb.Empty) *time_series_forwarder_sink.Name
	})
	if ok {
		return override.OverrideExtractResourceName(typedMsg)
	}
	return nil
}

func (h *DeleteTimeSeriesForwarderSinkDescriptorServerMsgHandle) ExtractResourceNames(msg proto.Message) gotenresource.NameList {
	typedMsg := msg.(*emptypb.Empty)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractResourceNames(*emptypb.Empty) []*time_series_forwarder_sink.Name
	})
	if ok {
		return time_series_forwarder_sink.TimeSeriesForwarderSinkNameList(override.OverrideExtractResourceNames(typedMsg))
	}
	return nil
}

func (h *DeleteTimeSeriesForwarderSinkDescriptorServerMsgHandle) ExtractCollectionName(msg proto.Message) gotenresource.Name {
	typedMsg := msg.(*emptypb.Empty)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractCollectionName(*emptypb.Empty) *time_series_forwarder_sink.ParentName
	})
	if ok {
		return override.OverrideExtractCollectionName(typedMsg)
	}
	return nil
}

func (h *DeleteTimeSeriesForwarderSinkDescriptorServerMsgHandle) ExtractResourceBody(msg proto.Message) gotenresource.Resource {
	typedMsg := msg.(*emptypb.Empty)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractResourceBody(*emptypb.Empty) *time_series_forwarder_sink.TimeSeriesForwarderSink
	})
	if ok {
		return override.OverrideExtractResourceBody(typedMsg)
	}
	return nil
}

func (h *DeleteTimeSeriesForwarderSinkDescriptorServerMsgHandle) ExtractResourceBodies(msg proto.Message) gotenresource.ResourceList {
	typedMsg := msg.(*emptypb.Empty)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractResourceBodies(*emptypb.Empty) []*time_series_forwarder_sink.TimeSeriesForwarderSink
	})
	if ok {
		return time_series_forwarder_sink.TimeSeriesForwarderSinkList(override.OverrideExtractResourceBodies(typedMsg))
	}
	return nil
}

func GetDeleteTimeSeriesForwarderSinkDescriptor() *DeleteTimeSeriesForwarderSinkDescriptor {
	return deleteTimeSeriesForwarderSinkDescriptor
}

type TimeSeriesForwarderSinkServiceDescriptor struct{}

func (d *TimeSeriesForwarderSinkServiceDescriptor) AllMethodDescriptors() []gotenclient.MethodDescriptor {
	return []gotenclient.MethodDescriptor{
		getTimeSeriesForwarderSinkDescriptor,
		batchGetTimeSeriesForwarderSinksDescriptor,
		listTimeSeriesForwarderSinksDescriptor,
		watchTimeSeriesForwarderSinkDescriptor,
		watchTimeSeriesForwarderSinksDescriptor,
		createTimeSeriesForwarderSinkDescriptor,
		updateTimeSeriesForwarderSinkDescriptor,
		deleteTimeSeriesForwarderSinkDescriptor,
	}
}

func (d *TimeSeriesForwarderSinkServiceDescriptor) GetFullAPIName() string {
	return "/ntt.monitoring.v4.TimeSeriesForwarderSinkService"
}

func (d *TimeSeriesForwarderSinkServiceDescriptor) GetProtoPkgName() string {
	return "ntt.monitoring.v4"
}

func (d *TimeSeriesForwarderSinkServiceDescriptor) GetApiName() string {
	return "TimeSeriesForwarderSinkService"
}

func (d *TimeSeriesForwarderSinkServiceDescriptor) GetServiceDomain() string {
	return "monitoring.edgelq.com"
}

func (d *TimeSeriesForwarderSinkServiceDescriptor) GetServiceVersion() string {
	return "v4"
}

func GetTimeSeriesForwarderSinkServiceDescriptor() *TimeSeriesForwarderSinkServiceDescriptor {
	return timeSeriesForwarderSinkServiceDescriptor
}

func initDescriptors() {
	timeSeriesForwarderSinkServiceDescriptor = &TimeSeriesForwarderSinkServiceDescriptor{}
	getTimeSeriesForwarderSinkDescriptor = &GetTimeSeriesForwarderSinkDescriptor{}
	batchGetTimeSeriesForwarderSinksDescriptor = &BatchGetTimeSeriesForwarderSinksDescriptor{}
	listTimeSeriesForwarderSinksDescriptor = &ListTimeSeriesForwarderSinksDescriptor{}
	watchTimeSeriesForwarderSinkDescriptor = &WatchTimeSeriesForwarderSinkDescriptor{}
	watchTimeSeriesForwarderSinksDescriptor = &WatchTimeSeriesForwarderSinksDescriptor{}
	createTimeSeriesForwarderSinkDescriptor = &CreateTimeSeriesForwarderSinkDescriptor{}
	updateTimeSeriesForwarderSinkDescriptor = &UpdateTimeSeriesForwarderSinkDescriptor{}
	deleteTimeSeriesForwarderSinkDescriptor = &DeleteTimeSeriesForwarderSinkDescriptor{}
	gotenclient.GetRegistry().RegisterApiDescriptor(timeSeriesForwarderSinkServiceDescriptor)
	gotenclient.GetRegistry().RegisterMethodDescriptor(getTimeSeriesForwarderSinkDescriptor)
	gotenclient.GetRegistry().RegisterMethodDescriptor(batchGetTimeSeriesForwarderSinksDescriptor)
	gotenclient.GetRegistry().RegisterMethodDescriptor(listTimeSeriesForwarderSinksDescriptor)
	gotenclient.GetRegistry().RegisterMethodDescriptor(watchTimeSeriesForwarderSinkDescriptor)
	gotenclient.GetRegistry().RegisterMethodDescriptor(watchTimeSeriesForwarderSinksDescriptor)
	gotenclient.GetRegistry().RegisterMethodDescriptor(createTimeSeriesForwarderSinkDescriptor)
	gotenclient.GetRegistry().RegisterMethodDescriptor(updateTimeSeriesForwarderSinkDescriptor)
	gotenclient.GetRegistry().RegisterMethodDescriptor(deleteTimeSeriesForwarderSinkDescriptor)
}

func init() {
	if !descriptorsInitialized {
		initDescriptors()
		descriptorsInitialized = true
	}
}
