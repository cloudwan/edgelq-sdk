// Code generated by protoc-gen-goten-client
// API: TimeSerieService
// DO NOT EDIT!!!

package time_serie_client

import (
	"google.golang.org/protobuf/proto"

	gotenclient "github.com/cloudwan/goten-sdk/runtime/client"
	gotenresource "github.com/cloudwan/goten-sdk/runtime/resource"
)

// proto imports
import (
	time_serie "github.com/cloudwan/edgelq-sdk/monitoring/resources/v3/time_serie"
)

// Reference imports to suppress errors if they are not otherwise used.
var (
	_ = new(proto.Message)
	_ = new(gotenclient.MethodDescriptor)
	_ = gotenresource.WildcardId
)

// make sure we're using proto imports
var (
	_ = &time_serie.Point{}
)

var (
	descriptorsInitialized     bool
	timeSerieServiceDescriptor *TimeSerieServiceDescriptor
	listTimeSeriesDescriptor   *ListTimeSeriesDescriptor
	createTimeSeriesDescriptor *CreateTimeSeriesDescriptor
)

type ListTimeSeriesDescriptor struct{}

type ListTimeSeriesDescriptorClientMsgHandle struct{}

type ListTimeSeriesDescriptorServerMsgHandle struct{}

func (d *ListTimeSeriesDescriptor) NewEmptyClientMsg() proto.Message {
	return &ListTimeSeriesRequest{}
}

func (d *ListTimeSeriesDescriptor) NewEmptyServerMsg() proto.Message {
	return &ListTimeSeriesResponse{}
}

func (d *ListTimeSeriesDescriptor) IsUnary() bool {
	return true
}

func (d *ListTimeSeriesDescriptor) IsClientStream() bool {
	return false
}

func (d *ListTimeSeriesDescriptor) IsServerStream() bool {
	return false
}

func (d *ListTimeSeriesDescriptor) IsCollection() bool {
	return true
}

func (d *ListTimeSeriesDescriptor) IsPlural() bool {
	return false
}

func (d *ListTimeSeriesDescriptor) HasResource() bool {
	return true
}

func (d *ListTimeSeriesDescriptor) RequestHasResourceBody() bool {
	return false
}

func (d *ListTimeSeriesDescriptor) GetVerb() string {
	return "query"
}

func (d *ListTimeSeriesDescriptor) GetMethodName() string {
	return "ListTimeSeries"
}

func (d *ListTimeSeriesDescriptor) GetFullMethodName() string {
	return "/ntt.monitoring.v3.TimeSerieService/ListTimeSeries"
}

func (d *ListTimeSeriesDescriptor) GetProtoPkgName() string {
	return "ntt.monitoring.v3"
}

func (d *ListTimeSeriesDescriptor) GetApiName() string {
	return "TimeSerieService"
}

func (d *ListTimeSeriesDescriptor) GetServiceDomain() string {
	return "monitoring.edgelq.com"
}

func (d *ListTimeSeriesDescriptor) GetServiceVersion() string {
	return "v3"
}

func (d *ListTimeSeriesDescriptor) GetApiDescriptor() gotenclient.ApiDescriptor {
	return timeSerieServiceDescriptor
}

func (d *ListTimeSeriesDescriptor) GetResourceDescriptor() gotenresource.Descriptor {
	return nil
}

func (d *ListTimeSeriesDescriptor) GetClientMsgReflectHandle() gotenclient.MethodMsgHandle {
	return &ListTimeSeriesDescriptorClientMsgHandle{}
}

func (d *ListTimeSeriesDescriptor) GetServerMsgReflectHandle() gotenclient.MethodMsgHandle {
	return &ListTimeSeriesDescriptorServerMsgHandle{}
}

func (h *ListTimeSeriesDescriptorClientMsgHandle) ExtractResourceName(msg proto.Message) gotenresource.Name {
	return nil
}

func (h *ListTimeSeriesDescriptorClientMsgHandle) ExtractResourceNames(msg proto.Message) gotenresource.NameList {
	return nil
}

func (h *ListTimeSeriesDescriptorClientMsgHandle) ExtractCollectionName(msg proto.Message) gotenresource.Name {
	return nil
}

func (h *ListTimeSeriesDescriptorServerMsgHandle) ExtractResourceName(msg proto.Message) gotenresource.Name {
	return nil
}

func (h *ListTimeSeriesDescriptorServerMsgHandle) ExtractResourceNames(msg proto.Message) gotenresource.NameList {
	return nil
}

func (h *ListTimeSeriesDescriptorServerMsgHandle) ExtractCollectionName(msg proto.Message) gotenresource.Name {
	return nil
}

func GetListTimeSeriesDescriptor() *ListTimeSeriesDescriptor {
	return listTimeSeriesDescriptor
}

type CreateTimeSeriesDescriptor struct{}

type CreateTimeSeriesDescriptorClientMsgHandle struct{}

type CreateTimeSeriesDescriptorServerMsgHandle struct{}

func (d *CreateTimeSeriesDescriptor) NewEmptyClientMsg() proto.Message {
	return &CreateTimeSeriesRequest{}
}

func (d *CreateTimeSeriesDescriptor) NewEmptyServerMsg() proto.Message {
	return &CreateTimeSeriesResponse{}
}

func (d *CreateTimeSeriesDescriptor) IsUnary() bool {
	return true
}

func (d *CreateTimeSeriesDescriptor) IsClientStream() bool {
	return false
}

func (d *CreateTimeSeriesDescriptor) IsServerStream() bool {
	return false
}

func (d *CreateTimeSeriesDescriptor) IsCollection() bool {
	return true
}

func (d *CreateTimeSeriesDescriptor) IsPlural() bool {
	return false
}

func (d *CreateTimeSeriesDescriptor) HasResource() bool {
	return true
}

func (d *CreateTimeSeriesDescriptor) RequestHasResourceBody() bool {
	return true
}

func (d *CreateTimeSeriesDescriptor) GetVerb() string {
	return "batchCreate"
}

func (d *CreateTimeSeriesDescriptor) GetMethodName() string {
	return "CreateTimeSeries"
}

func (d *CreateTimeSeriesDescriptor) GetFullMethodName() string {
	return "/ntt.monitoring.v3.TimeSerieService/CreateTimeSeries"
}

func (d *CreateTimeSeriesDescriptor) GetProtoPkgName() string {
	return "ntt.monitoring.v3"
}

func (d *CreateTimeSeriesDescriptor) GetApiName() string {
	return "TimeSerieService"
}

func (d *CreateTimeSeriesDescriptor) GetServiceDomain() string {
	return "monitoring.edgelq.com"
}

func (d *CreateTimeSeriesDescriptor) GetServiceVersion() string {
	return "v3"
}

func (d *CreateTimeSeriesDescriptor) GetApiDescriptor() gotenclient.ApiDescriptor {
	return timeSerieServiceDescriptor
}

func (d *CreateTimeSeriesDescriptor) GetResourceDescriptor() gotenresource.Descriptor {
	return nil
}

func (d *CreateTimeSeriesDescriptor) GetClientMsgReflectHandle() gotenclient.MethodMsgHandle {
	return &CreateTimeSeriesDescriptorClientMsgHandle{}
}

func (d *CreateTimeSeriesDescriptor) GetServerMsgReflectHandle() gotenclient.MethodMsgHandle {
	return &CreateTimeSeriesDescriptorServerMsgHandle{}
}

func (h *CreateTimeSeriesDescriptorClientMsgHandle) ExtractResourceName(msg proto.Message) gotenresource.Name {
	return nil
}

func (h *CreateTimeSeriesDescriptorClientMsgHandle) ExtractResourceNames(msg proto.Message) gotenresource.NameList {
	return nil
}

func (h *CreateTimeSeriesDescriptorClientMsgHandle) ExtractCollectionName(msg proto.Message) gotenresource.Name {
	return nil
}

func (h *CreateTimeSeriesDescriptorServerMsgHandle) ExtractResourceName(msg proto.Message) gotenresource.Name {
	return nil
}

func (h *CreateTimeSeriesDescriptorServerMsgHandle) ExtractResourceNames(msg proto.Message) gotenresource.NameList {
	return nil
}

func (h *CreateTimeSeriesDescriptorServerMsgHandle) ExtractCollectionName(msg proto.Message) gotenresource.Name {
	return nil
}

func GetCreateTimeSeriesDescriptor() *CreateTimeSeriesDescriptor {
	return createTimeSeriesDescriptor
}

type TimeSerieServiceDescriptor struct{}

func (d *TimeSerieServiceDescriptor) AllMethodDescriptors() []gotenclient.MethodDescriptor {
	return []gotenclient.MethodDescriptor{
		listTimeSeriesDescriptor,
		createTimeSeriesDescriptor,
	}
}

func (d *TimeSerieServiceDescriptor) GetFullAPIName() string {
	return "/ntt.monitoring.v3.TimeSerieService"
}

func (d *TimeSerieServiceDescriptor) GetProtoPkgName() string {
	return "ntt.monitoring.v3"
}

func (d *TimeSerieServiceDescriptor) GetApiName() string {
	return "TimeSerieService"
}

func (d *TimeSerieServiceDescriptor) GetServiceDomain() string {
	return "monitoring.edgelq.com"
}

func (d *TimeSerieServiceDescriptor) GetServiceVersion() string {
	return "v3"
}

func GetTimeSerieServiceDescriptor() *TimeSerieServiceDescriptor {
	return timeSerieServiceDescriptor
}

func initDescriptors() {
	timeSerieServiceDescriptor = &TimeSerieServiceDescriptor{}
	listTimeSeriesDescriptor = &ListTimeSeriesDescriptor{}
	createTimeSeriesDescriptor = &CreateTimeSeriesDescriptor{}
	gotenclient.GetRegistry().RegisterApiDescriptor(timeSerieServiceDescriptor)
	gotenclient.GetRegistry().RegisterMethodDescriptor(listTimeSeriesDescriptor)
	gotenclient.GetRegistry().RegisterMethodDescriptor(createTimeSeriesDescriptor)
}

func init() {
	if !descriptorsInitialized {
		initDescriptors()
		descriptorsInitialized = true
	}
}
