// Code generated by protoc-gen-goten-client
// API: RecoveryStoreShardingInfoService
// DO NOT EDIT!!!

package recovery_store_sharding_info_client

import (
	"google.golang.org/protobuf/proto"

	gotenclient "github.com/cloudwan/goten-sdk/runtime/client"
	gotenresource "github.com/cloudwan/goten-sdk/runtime/resource"
)

// proto imports
import (
	recovery_store_sharding_info "github.com/cloudwan/edgelq-sdk/monitoring/resources/v3/recovery_store_sharding_info"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
)

// Reference imports to suppress errors if they are not otherwise used.
var (
	_ = new(proto.Message)
	_ = new(gotenclient.MethodDescriptor)
	_ = gotenresource.WildcardId
)

// make sure we're using proto imports
var (
	_ = &recovery_store_sharding_info.RecoveryStoreShardingInfo{}
	_ = &emptypb.Empty{}
)

var (
	descriptorsInitialized                       bool
	recoveryStoreShardingInfoServiceDescriptor   *RecoveryStoreShardingInfoServiceDescriptor
	getRecoveryStoreShardingInfoDescriptor       *GetRecoveryStoreShardingInfoDescriptor
	batchGetRecoveryStoreShardingInfosDescriptor *BatchGetRecoveryStoreShardingInfosDescriptor
	listRecoveryStoreShardingInfosDescriptor     *ListRecoveryStoreShardingInfosDescriptor
	watchRecoveryStoreShardingInfoDescriptor     *WatchRecoveryStoreShardingInfoDescriptor
	watchRecoveryStoreShardingInfosDescriptor    *WatchRecoveryStoreShardingInfosDescriptor
	createRecoveryStoreShardingInfoDescriptor    *CreateRecoveryStoreShardingInfoDescriptor
	updateRecoveryStoreShardingInfoDescriptor    *UpdateRecoveryStoreShardingInfoDescriptor
	deleteRecoveryStoreShardingInfoDescriptor    *DeleteRecoveryStoreShardingInfoDescriptor
)

type GetRecoveryStoreShardingInfoDescriptor struct{}

type GetRecoveryStoreShardingInfoDescriptorClientMsgHandle struct{}

type GetRecoveryStoreShardingInfoDescriptorServerMsgHandle struct{}

func (d *GetRecoveryStoreShardingInfoDescriptor) NewEmptyClientMsg() proto.Message {
	return &GetRecoveryStoreShardingInfoRequest{}
}

func (d *GetRecoveryStoreShardingInfoDescriptor) NewEmptyServerMsg() proto.Message {
	return &recovery_store_sharding_info.RecoveryStoreShardingInfo{}
}

func (d *GetRecoveryStoreShardingInfoDescriptor) IsUnary() bool {
	return true
}

func (d *GetRecoveryStoreShardingInfoDescriptor) IsClientStream() bool {
	return false
}

func (d *GetRecoveryStoreShardingInfoDescriptor) IsServerStream() bool {
	return false
}

func (d *GetRecoveryStoreShardingInfoDescriptor) IsCollection() bool {
	return false
}

func (d *GetRecoveryStoreShardingInfoDescriptor) IsPlural() bool {
	return false
}

func (d *GetRecoveryStoreShardingInfoDescriptor) HasResource() bool {
	return true
}

func (d *GetRecoveryStoreShardingInfoDescriptor) RequestHasResourceBody() bool {
	return false
}

func (d *GetRecoveryStoreShardingInfoDescriptor) GetVerb() string {
	return "get"
}

func (d *GetRecoveryStoreShardingInfoDescriptor) GetMethodName() string {
	return "GetRecoveryStoreShardingInfo"
}

func (d *GetRecoveryStoreShardingInfoDescriptor) GetFullMethodName() string {
	return "/ntt.monitoring.v3.RecoveryStoreShardingInfoService/GetRecoveryStoreShardingInfo"
}

func (d *GetRecoveryStoreShardingInfoDescriptor) GetProtoPkgName() string {
	return "ntt.monitoring.v3"
}

func (d *GetRecoveryStoreShardingInfoDescriptor) GetApiName() string {
	return "RecoveryStoreShardingInfoService"
}

func (d *GetRecoveryStoreShardingInfoDescriptor) GetServiceDomain() string {
	return "monitoring.edgelq.com"
}

func (d *GetRecoveryStoreShardingInfoDescriptor) GetServiceVersion() string {
	return "v3"
}

func (d *GetRecoveryStoreShardingInfoDescriptor) GetApiDescriptor() gotenclient.ApiDescriptor {
	return recoveryStoreShardingInfoServiceDescriptor
}

func (d *GetRecoveryStoreShardingInfoDescriptor) GetResourceDescriptor() gotenresource.Descriptor {
	return recovery_store_sharding_info.GetDescriptor()
}

func (d *GetRecoveryStoreShardingInfoDescriptor) GetClientMsgReflectHandle() gotenclient.MethodMsgHandle {
	return &GetRecoveryStoreShardingInfoDescriptorClientMsgHandle{}
}

func (d *GetRecoveryStoreShardingInfoDescriptor) GetServerMsgReflectHandle() gotenclient.MethodMsgHandle {
	return &GetRecoveryStoreShardingInfoDescriptorServerMsgHandle{}
}

func (h *GetRecoveryStoreShardingInfoDescriptorClientMsgHandle) ExtractResourceName(msg proto.Message) gotenresource.Name {
	typedMsg := msg.(*GetRecoveryStoreShardingInfoRequest)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractResourceName(*GetRecoveryStoreShardingInfoRequest) *recovery_store_sharding_info.Name
	})
	if ok {
		return override.OverrideExtractResourceName(typedMsg)
	}
	{
		if name := typedMsg.GetName(); name != nil {
			return name
		}
	}
	return (*recovery_store_sharding_info.Name)(nil)
}

func (h *GetRecoveryStoreShardingInfoDescriptorClientMsgHandle) ExtractResourceNames(msg proto.Message) gotenresource.NameList {
	typedMsg := msg.(*GetRecoveryStoreShardingInfoRequest)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractResourceNames(*GetRecoveryStoreShardingInfoRequest) []*recovery_store_sharding_info.Name
	})
	if ok {
		return recovery_store_sharding_info.RecoveryStoreShardingInfoNameList(override.OverrideExtractResourceNames(typedMsg))
	}
	return nil
}

func (h *GetRecoveryStoreShardingInfoDescriptorClientMsgHandle) ExtractCollectionName(msg proto.Message) gotenresource.Name {
	typedMsg := msg.(*GetRecoveryStoreShardingInfoRequest)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractCollectionName(*GetRecoveryStoreShardingInfoRequest) *recovery_store_sharding_info.ParentName
	})
	if ok {
		return override.OverrideExtractCollectionName(typedMsg)
	}
	return nil
}

func (h *GetRecoveryStoreShardingInfoDescriptorClientMsgHandle) ExtractResourceBody(msg proto.Message) gotenresource.Resource {
	typedMsg := msg.(*GetRecoveryStoreShardingInfoRequest)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractResourceBody(*GetRecoveryStoreShardingInfoRequest) *recovery_store_sharding_info.RecoveryStoreShardingInfo
	})
	if ok {
		return override.OverrideExtractResourceBody(typedMsg)
	}
	return nil
}

func (h *GetRecoveryStoreShardingInfoDescriptorClientMsgHandle) ExtractResourceBodies(msg proto.Message) gotenresource.ResourceList {
	typedMsg := msg.(*GetRecoveryStoreShardingInfoRequest)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractResourceBodies(*GetRecoveryStoreShardingInfoRequest) []*recovery_store_sharding_info.RecoveryStoreShardingInfo
	})
	if ok {
		return recovery_store_sharding_info.RecoveryStoreShardingInfoList(override.OverrideExtractResourceBodies(typedMsg))
	}
	return nil
}

func (h *GetRecoveryStoreShardingInfoDescriptorServerMsgHandle) ExtractResourceName(msg proto.Message) gotenresource.Name {
	typedMsg := msg.(*recovery_store_sharding_info.RecoveryStoreShardingInfo)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractResourceName(*recovery_store_sharding_info.RecoveryStoreShardingInfo) *recovery_store_sharding_info.Name
	})
	if ok {
		return override.OverrideExtractResourceName(typedMsg)
	}
	{
		if name := typedMsg.GetName(); name != nil {
			return name
		}
	}
	return (*recovery_store_sharding_info.Name)(nil)
}

func (h *GetRecoveryStoreShardingInfoDescriptorServerMsgHandle) ExtractResourceNames(msg proto.Message) gotenresource.NameList {
	typedMsg := msg.(*recovery_store_sharding_info.RecoveryStoreShardingInfo)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractResourceNames(*recovery_store_sharding_info.RecoveryStoreShardingInfo) []*recovery_store_sharding_info.Name
	})
	if ok {
		return recovery_store_sharding_info.RecoveryStoreShardingInfoNameList(override.OverrideExtractResourceNames(typedMsg))
	}
	return nil
}

func (h *GetRecoveryStoreShardingInfoDescriptorServerMsgHandle) ExtractCollectionName(msg proto.Message) gotenresource.Name {
	typedMsg := msg.(*recovery_store_sharding_info.RecoveryStoreShardingInfo)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractCollectionName(*recovery_store_sharding_info.RecoveryStoreShardingInfo) *recovery_store_sharding_info.ParentName
	})
	if ok {
		return override.OverrideExtractCollectionName(typedMsg)
	}
	return nil
}

func (h *GetRecoveryStoreShardingInfoDescriptorServerMsgHandle) ExtractResourceBody(msg proto.Message) gotenresource.Resource {
	return msg.(*recovery_store_sharding_info.RecoveryStoreShardingInfo)
}

func (h *GetRecoveryStoreShardingInfoDescriptorServerMsgHandle) ExtractResourceBodies(msg proto.Message) gotenresource.ResourceList {
	typedMsg := msg.(*recovery_store_sharding_info.RecoveryStoreShardingInfo)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractResourceBodies(*recovery_store_sharding_info.RecoveryStoreShardingInfo) []*recovery_store_sharding_info.RecoveryStoreShardingInfo
	})
	if ok {
		return recovery_store_sharding_info.RecoveryStoreShardingInfoList(override.OverrideExtractResourceBodies(typedMsg))
	}
	return nil
}

func GetGetRecoveryStoreShardingInfoDescriptor() *GetRecoveryStoreShardingInfoDescriptor {
	return getRecoveryStoreShardingInfoDescriptor
}

type BatchGetRecoveryStoreShardingInfosDescriptor struct{}

type BatchGetRecoveryStoreShardingInfosDescriptorClientMsgHandle struct{}

type BatchGetRecoveryStoreShardingInfosDescriptorServerMsgHandle struct{}

func (d *BatchGetRecoveryStoreShardingInfosDescriptor) NewEmptyClientMsg() proto.Message {
	return &BatchGetRecoveryStoreShardingInfosRequest{}
}

func (d *BatchGetRecoveryStoreShardingInfosDescriptor) NewEmptyServerMsg() proto.Message {
	return &BatchGetRecoveryStoreShardingInfosResponse{}
}

func (d *BatchGetRecoveryStoreShardingInfosDescriptor) IsUnary() bool {
	return true
}

func (d *BatchGetRecoveryStoreShardingInfosDescriptor) IsClientStream() bool {
	return false
}

func (d *BatchGetRecoveryStoreShardingInfosDescriptor) IsServerStream() bool {
	return false
}

func (d *BatchGetRecoveryStoreShardingInfosDescriptor) IsCollection() bool {
	return false
}

func (d *BatchGetRecoveryStoreShardingInfosDescriptor) IsPlural() bool {
	return true
}

func (d *BatchGetRecoveryStoreShardingInfosDescriptor) HasResource() bool {
	return true
}

func (d *BatchGetRecoveryStoreShardingInfosDescriptor) RequestHasResourceBody() bool {
	return false
}

func (d *BatchGetRecoveryStoreShardingInfosDescriptor) GetVerb() string {
	return "batchGet"
}

func (d *BatchGetRecoveryStoreShardingInfosDescriptor) GetMethodName() string {
	return "BatchGetRecoveryStoreShardingInfos"
}

func (d *BatchGetRecoveryStoreShardingInfosDescriptor) GetFullMethodName() string {
	return "/ntt.monitoring.v3.RecoveryStoreShardingInfoService/BatchGetRecoveryStoreShardingInfos"
}

func (d *BatchGetRecoveryStoreShardingInfosDescriptor) GetProtoPkgName() string {
	return "ntt.monitoring.v3"
}

func (d *BatchGetRecoveryStoreShardingInfosDescriptor) GetApiName() string {
	return "RecoveryStoreShardingInfoService"
}

func (d *BatchGetRecoveryStoreShardingInfosDescriptor) GetServiceDomain() string {
	return "monitoring.edgelq.com"
}

func (d *BatchGetRecoveryStoreShardingInfosDescriptor) GetServiceVersion() string {
	return "v3"
}

func (d *BatchGetRecoveryStoreShardingInfosDescriptor) GetApiDescriptor() gotenclient.ApiDescriptor {
	return recoveryStoreShardingInfoServiceDescriptor
}

func (d *BatchGetRecoveryStoreShardingInfosDescriptor) GetResourceDescriptor() gotenresource.Descriptor {
	return recovery_store_sharding_info.GetDescriptor()
}

func (d *BatchGetRecoveryStoreShardingInfosDescriptor) GetClientMsgReflectHandle() gotenclient.MethodMsgHandle {
	return &BatchGetRecoveryStoreShardingInfosDescriptorClientMsgHandle{}
}

func (d *BatchGetRecoveryStoreShardingInfosDescriptor) GetServerMsgReflectHandle() gotenclient.MethodMsgHandle {
	return &BatchGetRecoveryStoreShardingInfosDescriptorServerMsgHandle{}
}

func (h *BatchGetRecoveryStoreShardingInfosDescriptorClientMsgHandle) ExtractResourceName(msg proto.Message) gotenresource.Name {
	typedMsg := msg.(*BatchGetRecoveryStoreShardingInfosRequest)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractResourceName(*BatchGetRecoveryStoreShardingInfosRequest) *recovery_store_sharding_info.Name
	})
	if ok {
		return override.OverrideExtractResourceName(typedMsg)
	}
	return nil
}

func (h *BatchGetRecoveryStoreShardingInfosDescriptorClientMsgHandle) ExtractResourceNames(msg proto.Message) gotenresource.NameList {
	typedMsg := msg.(*BatchGetRecoveryStoreShardingInfosRequest)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractResourceNames(*BatchGetRecoveryStoreShardingInfosRequest) []*recovery_store_sharding_info.Name
	})
	if ok {
		return recovery_store_sharding_info.RecoveryStoreShardingInfoNameList(override.OverrideExtractResourceNames(typedMsg))
	}
	{
		if names := typedMsg.GetNames(); len(names) > 0 {
			return recovery_store_sharding_info.RecoveryStoreShardingInfoNameList(names)
		}
	}
	return (recovery_store_sharding_info.RecoveryStoreShardingInfoNameList)(nil)
}

func (h *BatchGetRecoveryStoreShardingInfosDescriptorClientMsgHandle) ExtractCollectionName(msg proto.Message) gotenresource.Name {
	typedMsg := msg.(*BatchGetRecoveryStoreShardingInfosRequest)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractCollectionName(*BatchGetRecoveryStoreShardingInfosRequest) *recovery_store_sharding_info.ParentName
	})
	if ok {
		return override.OverrideExtractCollectionName(typedMsg)
	}
	return nil
}

func (h *BatchGetRecoveryStoreShardingInfosDescriptorClientMsgHandle) ExtractResourceBody(msg proto.Message) gotenresource.Resource {
	typedMsg := msg.(*BatchGetRecoveryStoreShardingInfosRequest)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractResourceBody(*BatchGetRecoveryStoreShardingInfosRequest) *recovery_store_sharding_info.RecoveryStoreShardingInfo
	})
	if ok {
		return override.OverrideExtractResourceBody(typedMsg)
	}
	return nil
}

func (h *BatchGetRecoveryStoreShardingInfosDescriptorClientMsgHandle) ExtractResourceBodies(msg proto.Message) gotenresource.ResourceList {
	typedMsg := msg.(*BatchGetRecoveryStoreShardingInfosRequest)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractResourceBodies(*BatchGetRecoveryStoreShardingInfosRequest) []*recovery_store_sharding_info.RecoveryStoreShardingInfo
	})
	if ok {
		return recovery_store_sharding_info.RecoveryStoreShardingInfoList(override.OverrideExtractResourceBodies(typedMsg))
	}
	return nil
}

func (h *BatchGetRecoveryStoreShardingInfosDescriptorServerMsgHandle) ExtractResourceName(msg proto.Message) gotenresource.Name {
	typedMsg := msg.(*BatchGetRecoveryStoreShardingInfosResponse)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractResourceName(*BatchGetRecoveryStoreShardingInfosResponse) *recovery_store_sharding_info.Name
	})
	if ok {
		return override.OverrideExtractResourceName(typedMsg)
	}
	return nil
}

func (h *BatchGetRecoveryStoreShardingInfosDescriptorServerMsgHandle) ExtractResourceNames(msg proto.Message) gotenresource.NameList {
	typedMsg := msg.(*BatchGetRecoveryStoreShardingInfosResponse)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractResourceNames(*BatchGetRecoveryStoreShardingInfosResponse) []*recovery_store_sharding_info.Name
	})
	if ok {
		return recovery_store_sharding_info.RecoveryStoreShardingInfoNameList(override.OverrideExtractResourceNames(typedMsg))
	}
	{
		if resources := typedMsg.GetRecoveryStoreShardingInfos(); len(resources) > 0 {
			list := make(recovery_store_sharding_info.RecoveryStoreShardingInfoNameList, 0, len(resources))
			for _, res := range resources {
				list = append(list, res.GetName())
			}
			return list
		}
	}
	return (recovery_store_sharding_info.RecoveryStoreShardingInfoNameList)(nil)
}

func (h *BatchGetRecoveryStoreShardingInfosDescriptorServerMsgHandle) ExtractCollectionName(msg proto.Message) gotenresource.Name {
	typedMsg := msg.(*BatchGetRecoveryStoreShardingInfosResponse)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractCollectionName(*BatchGetRecoveryStoreShardingInfosResponse) *recovery_store_sharding_info.ParentName
	})
	if ok {
		return override.OverrideExtractCollectionName(typedMsg)
	}
	return nil
}

func (h *BatchGetRecoveryStoreShardingInfosDescriptorServerMsgHandle) ExtractResourceBody(msg proto.Message) gotenresource.Resource {
	typedMsg := msg.(*BatchGetRecoveryStoreShardingInfosResponse)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractResourceBody(*BatchGetRecoveryStoreShardingInfosResponse) *recovery_store_sharding_info.RecoveryStoreShardingInfo
	})
	if ok {
		return override.OverrideExtractResourceBody(typedMsg)
	}
	return nil
}

func (h *BatchGetRecoveryStoreShardingInfosDescriptorServerMsgHandle) ExtractResourceBodies(msg proto.Message) gotenresource.ResourceList {
	typedMsg := msg.(*BatchGetRecoveryStoreShardingInfosResponse)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractResourceBodies(*BatchGetRecoveryStoreShardingInfosResponse) []*recovery_store_sharding_info.RecoveryStoreShardingInfo
	})
	if ok {
		return recovery_store_sharding_info.RecoveryStoreShardingInfoList(override.OverrideExtractResourceBodies(typedMsg))
	}
	{
		if resources := typedMsg.GetRecoveryStoreShardingInfos(); len(resources) > 0 {
			return recovery_store_sharding_info.RecoveryStoreShardingInfoList(resources)
		}
	}
	return (recovery_store_sharding_info.RecoveryStoreShardingInfoList)(nil)
}

func GetBatchGetRecoveryStoreShardingInfosDescriptor() *BatchGetRecoveryStoreShardingInfosDescriptor {
	return batchGetRecoveryStoreShardingInfosDescriptor
}

type ListRecoveryStoreShardingInfosDescriptor struct{}

type ListRecoveryStoreShardingInfosDescriptorClientMsgHandle struct{}

type ListRecoveryStoreShardingInfosDescriptorServerMsgHandle struct{}

func (d *ListRecoveryStoreShardingInfosDescriptor) NewEmptyClientMsg() proto.Message {
	return &ListRecoveryStoreShardingInfosRequest{}
}

func (d *ListRecoveryStoreShardingInfosDescriptor) NewEmptyServerMsg() proto.Message {
	return &ListRecoveryStoreShardingInfosResponse{}
}

func (d *ListRecoveryStoreShardingInfosDescriptor) IsUnary() bool {
	return true
}

func (d *ListRecoveryStoreShardingInfosDescriptor) IsClientStream() bool {
	return false
}

func (d *ListRecoveryStoreShardingInfosDescriptor) IsServerStream() bool {
	return false
}

func (d *ListRecoveryStoreShardingInfosDescriptor) IsCollection() bool {
	return true
}

func (d *ListRecoveryStoreShardingInfosDescriptor) IsPlural() bool {
	return true
}

func (d *ListRecoveryStoreShardingInfosDescriptor) HasResource() bool {
	return true
}

func (d *ListRecoveryStoreShardingInfosDescriptor) RequestHasResourceBody() bool {
	return false
}

func (d *ListRecoveryStoreShardingInfosDescriptor) GetVerb() string {
	return "list"
}

func (d *ListRecoveryStoreShardingInfosDescriptor) GetMethodName() string {
	return "ListRecoveryStoreShardingInfos"
}

func (d *ListRecoveryStoreShardingInfosDescriptor) GetFullMethodName() string {
	return "/ntt.monitoring.v3.RecoveryStoreShardingInfoService/ListRecoveryStoreShardingInfos"
}

func (d *ListRecoveryStoreShardingInfosDescriptor) GetProtoPkgName() string {
	return "ntt.monitoring.v3"
}

func (d *ListRecoveryStoreShardingInfosDescriptor) GetApiName() string {
	return "RecoveryStoreShardingInfoService"
}

func (d *ListRecoveryStoreShardingInfosDescriptor) GetServiceDomain() string {
	return "monitoring.edgelq.com"
}

func (d *ListRecoveryStoreShardingInfosDescriptor) GetServiceVersion() string {
	return "v3"
}

func (d *ListRecoveryStoreShardingInfosDescriptor) GetApiDescriptor() gotenclient.ApiDescriptor {
	return recoveryStoreShardingInfoServiceDescriptor
}

func (d *ListRecoveryStoreShardingInfosDescriptor) GetResourceDescriptor() gotenresource.Descriptor {
	return recovery_store_sharding_info.GetDescriptor()
}

func (d *ListRecoveryStoreShardingInfosDescriptor) GetClientMsgReflectHandle() gotenclient.MethodMsgHandle {
	return &ListRecoveryStoreShardingInfosDescriptorClientMsgHandle{}
}

func (d *ListRecoveryStoreShardingInfosDescriptor) GetServerMsgReflectHandle() gotenclient.MethodMsgHandle {
	return &ListRecoveryStoreShardingInfosDescriptorServerMsgHandle{}
}

func (h *ListRecoveryStoreShardingInfosDescriptorClientMsgHandle) ExtractResourceName(msg proto.Message) gotenresource.Name {
	typedMsg := msg.(*ListRecoveryStoreShardingInfosRequest)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractResourceName(*ListRecoveryStoreShardingInfosRequest) *recovery_store_sharding_info.Name
	})
	if ok {
		return override.OverrideExtractResourceName(typedMsg)
	}
	return nil
}

func (h *ListRecoveryStoreShardingInfosDescriptorClientMsgHandle) ExtractResourceNames(msg proto.Message) gotenresource.NameList {
	typedMsg := msg.(*ListRecoveryStoreShardingInfosRequest)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractResourceNames(*ListRecoveryStoreShardingInfosRequest) []*recovery_store_sharding_info.Name
	})
	if ok {
		return recovery_store_sharding_info.RecoveryStoreShardingInfoNameList(override.OverrideExtractResourceNames(typedMsg))
	}
	return nil
}

func (h *ListRecoveryStoreShardingInfosDescriptorClientMsgHandle) ExtractCollectionName(msg proto.Message) gotenresource.Name {
	typedMsg := msg.(*ListRecoveryStoreShardingInfosRequest)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractCollectionName(*ListRecoveryStoreShardingInfosRequest) *recovery_store_sharding_info.ParentName
	})
	if ok {
		return override.OverrideExtractCollectionName(typedMsg)
	}
	{
		if parentName := typedMsg.GetParent(); parentName != nil {
			return parentName
		}
	}
	return (*recovery_store_sharding_info.ParentName)(nil)
}

func (h *ListRecoveryStoreShardingInfosDescriptorClientMsgHandle) ExtractResourceBody(msg proto.Message) gotenresource.Resource {
	typedMsg := msg.(*ListRecoveryStoreShardingInfosRequest)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractResourceBody(*ListRecoveryStoreShardingInfosRequest) *recovery_store_sharding_info.RecoveryStoreShardingInfo
	})
	if ok {
		return override.OverrideExtractResourceBody(typedMsg)
	}
	return nil
}

func (h *ListRecoveryStoreShardingInfosDescriptorClientMsgHandle) ExtractResourceBodies(msg proto.Message) gotenresource.ResourceList {
	typedMsg := msg.(*ListRecoveryStoreShardingInfosRequest)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractResourceBodies(*ListRecoveryStoreShardingInfosRequest) []*recovery_store_sharding_info.RecoveryStoreShardingInfo
	})
	if ok {
		return recovery_store_sharding_info.RecoveryStoreShardingInfoList(override.OverrideExtractResourceBodies(typedMsg))
	}
	return nil
}

func (h *ListRecoveryStoreShardingInfosDescriptorServerMsgHandle) ExtractResourceName(msg proto.Message) gotenresource.Name {
	typedMsg := msg.(*ListRecoveryStoreShardingInfosResponse)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractResourceName(*ListRecoveryStoreShardingInfosResponse) *recovery_store_sharding_info.Name
	})
	if ok {
		return override.OverrideExtractResourceName(typedMsg)
	}
	return nil
}

func (h *ListRecoveryStoreShardingInfosDescriptorServerMsgHandle) ExtractResourceNames(msg proto.Message) gotenresource.NameList {
	typedMsg := msg.(*ListRecoveryStoreShardingInfosResponse)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractResourceNames(*ListRecoveryStoreShardingInfosResponse) []*recovery_store_sharding_info.Name
	})
	if ok {
		return recovery_store_sharding_info.RecoveryStoreShardingInfoNameList(override.OverrideExtractResourceNames(typedMsg))
	}
	{
		if resources := typedMsg.GetRecoveryStoreShardingInfos(); len(resources) > 0 {
			list := make(recovery_store_sharding_info.RecoveryStoreShardingInfoNameList, 0, len(resources))
			for _, res := range resources {
				list = append(list, res.GetName())
			}
			return list
		}
	}
	return (recovery_store_sharding_info.RecoveryStoreShardingInfoNameList)(nil)
}

func (h *ListRecoveryStoreShardingInfosDescriptorServerMsgHandle) ExtractCollectionName(msg proto.Message) gotenresource.Name {
	typedMsg := msg.(*ListRecoveryStoreShardingInfosResponse)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractCollectionName(*ListRecoveryStoreShardingInfosResponse) *recovery_store_sharding_info.ParentName
	})
	if ok {
		return override.OverrideExtractCollectionName(typedMsg)
	}
	return nil
}

func (h *ListRecoveryStoreShardingInfosDescriptorServerMsgHandle) ExtractResourceBody(msg proto.Message) gotenresource.Resource {
	typedMsg := msg.(*ListRecoveryStoreShardingInfosResponse)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractResourceBody(*ListRecoveryStoreShardingInfosResponse) *recovery_store_sharding_info.RecoveryStoreShardingInfo
	})
	if ok {
		return override.OverrideExtractResourceBody(typedMsg)
	}
	return nil
}

func (h *ListRecoveryStoreShardingInfosDescriptorServerMsgHandle) ExtractResourceBodies(msg proto.Message) gotenresource.ResourceList {
	typedMsg := msg.(*ListRecoveryStoreShardingInfosResponse)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractResourceBodies(*ListRecoveryStoreShardingInfosResponse) []*recovery_store_sharding_info.RecoveryStoreShardingInfo
	})
	if ok {
		return recovery_store_sharding_info.RecoveryStoreShardingInfoList(override.OverrideExtractResourceBodies(typedMsg))
	}
	{
		if resources := typedMsg.GetRecoveryStoreShardingInfos(); len(resources) > 0 {
			return recovery_store_sharding_info.RecoveryStoreShardingInfoList(resources)
		}
	}
	return (recovery_store_sharding_info.RecoveryStoreShardingInfoList)(nil)
}

func GetListRecoveryStoreShardingInfosDescriptor() *ListRecoveryStoreShardingInfosDescriptor {
	return listRecoveryStoreShardingInfosDescriptor
}

type WatchRecoveryStoreShardingInfoDescriptor struct{}

type WatchRecoveryStoreShardingInfoDescriptorClientMsgHandle struct{}

type WatchRecoveryStoreShardingInfoDescriptorServerMsgHandle struct{}

func (d *WatchRecoveryStoreShardingInfoDescriptor) NewEmptyClientMsg() proto.Message {
	return &WatchRecoveryStoreShardingInfoRequest{}
}

func (d *WatchRecoveryStoreShardingInfoDescriptor) NewEmptyServerMsg() proto.Message {
	return &WatchRecoveryStoreShardingInfoResponse{}
}

func (d *WatchRecoveryStoreShardingInfoDescriptor) IsUnary() bool {
	return false
}

func (d *WatchRecoveryStoreShardingInfoDescriptor) IsClientStream() bool {
	return false
}

func (d *WatchRecoveryStoreShardingInfoDescriptor) IsServerStream() bool {
	return true
}

func (d *WatchRecoveryStoreShardingInfoDescriptor) IsCollection() bool {
	return false
}

func (d *WatchRecoveryStoreShardingInfoDescriptor) IsPlural() bool {
	return false
}

func (d *WatchRecoveryStoreShardingInfoDescriptor) HasResource() bool {
	return true
}

func (d *WatchRecoveryStoreShardingInfoDescriptor) RequestHasResourceBody() bool {
	return false
}

func (d *WatchRecoveryStoreShardingInfoDescriptor) GetVerb() string {
	return "watch"
}

func (d *WatchRecoveryStoreShardingInfoDescriptor) GetMethodName() string {
	return "WatchRecoveryStoreShardingInfo"
}

func (d *WatchRecoveryStoreShardingInfoDescriptor) GetFullMethodName() string {
	return "/ntt.monitoring.v3.RecoveryStoreShardingInfoService/WatchRecoveryStoreShardingInfo"
}

func (d *WatchRecoveryStoreShardingInfoDescriptor) GetProtoPkgName() string {
	return "ntt.monitoring.v3"
}

func (d *WatchRecoveryStoreShardingInfoDescriptor) GetApiName() string {
	return "RecoveryStoreShardingInfoService"
}

func (d *WatchRecoveryStoreShardingInfoDescriptor) GetServiceDomain() string {
	return "monitoring.edgelq.com"
}

func (d *WatchRecoveryStoreShardingInfoDescriptor) GetServiceVersion() string {
	return "v3"
}

func (d *WatchRecoveryStoreShardingInfoDescriptor) GetApiDescriptor() gotenclient.ApiDescriptor {
	return recoveryStoreShardingInfoServiceDescriptor
}

func (d *WatchRecoveryStoreShardingInfoDescriptor) GetResourceDescriptor() gotenresource.Descriptor {
	return recovery_store_sharding_info.GetDescriptor()
}

func (d *WatchRecoveryStoreShardingInfoDescriptor) GetClientMsgReflectHandle() gotenclient.MethodMsgHandle {
	return &WatchRecoveryStoreShardingInfoDescriptorClientMsgHandle{}
}

func (d *WatchRecoveryStoreShardingInfoDescriptor) GetServerMsgReflectHandle() gotenclient.MethodMsgHandle {
	return &WatchRecoveryStoreShardingInfoDescriptorServerMsgHandle{}
}

func (h *WatchRecoveryStoreShardingInfoDescriptorClientMsgHandle) ExtractResourceName(msg proto.Message) gotenresource.Name {
	typedMsg := msg.(*WatchRecoveryStoreShardingInfoRequest)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractResourceName(*WatchRecoveryStoreShardingInfoRequest) *recovery_store_sharding_info.Name
	})
	if ok {
		return override.OverrideExtractResourceName(typedMsg)
	}
	{
		if name := typedMsg.GetName(); name != nil {
			return name
		}
	}
	return (*recovery_store_sharding_info.Name)(nil)
}

func (h *WatchRecoveryStoreShardingInfoDescriptorClientMsgHandle) ExtractResourceNames(msg proto.Message) gotenresource.NameList {
	typedMsg := msg.(*WatchRecoveryStoreShardingInfoRequest)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractResourceNames(*WatchRecoveryStoreShardingInfoRequest) []*recovery_store_sharding_info.Name
	})
	if ok {
		return recovery_store_sharding_info.RecoveryStoreShardingInfoNameList(override.OverrideExtractResourceNames(typedMsg))
	}
	return nil
}

func (h *WatchRecoveryStoreShardingInfoDescriptorClientMsgHandle) ExtractCollectionName(msg proto.Message) gotenresource.Name {
	typedMsg := msg.(*WatchRecoveryStoreShardingInfoRequest)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractCollectionName(*WatchRecoveryStoreShardingInfoRequest) *recovery_store_sharding_info.ParentName
	})
	if ok {
		return override.OverrideExtractCollectionName(typedMsg)
	}
	return nil
}

func (h *WatchRecoveryStoreShardingInfoDescriptorClientMsgHandle) ExtractResourceBody(msg proto.Message) gotenresource.Resource {
	typedMsg := msg.(*WatchRecoveryStoreShardingInfoRequest)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractResourceBody(*WatchRecoveryStoreShardingInfoRequest) *recovery_store_sharding_info.RecoveryStoreShardingInfo
	})
	if ok {
		return override.OverrideExtractResourceBody(typedMsg)
	}
	return nil
}

func (h *WatchRecoveryStoreShardingInfoDescriptorClientMsgHandle) ExtractResourceBodies(msg proto.Message) gotenresource.ResourceList {
	typedMsg := msg.(*WatchRecoveryStoreShardingInfoRequest)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractResourceBodies(*WatchRecoveryStoreShardingInfoRequest) []*recovery_store_sharding_info.RecoveryStoreShardingInfo
	})
	if ok {
		return recovery_store_sharding_info.RecoveryStoreShardingInfoList(override.OverrideExtractResourceBodies(typedMsg))
	}
	return nil
}

func (h *WatchRecoveryStoreShardingInfoDescriptorServerMsgHandle) ExtractResourceName(msg proto.Message) gotenresource.Name {
	typedMsg := msg.(*WatchRecoveryStoreShardingInfoResponse)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractResourceName(*WatchRecoveryStoreShardingInfoResponse) *recovery_store_sharding_info.Name
	})
	if ok {
		return override.OverrideExtractResourceName(typedMsg)
	}
	{
		if resChange := typedMsg.GetChange(); resChange != nil {
			switch tResChange := resChange.ChangeType.(type) {
			case *recovery_store_sharding_info.RecoveryStoreShardingInfoChange_Added_:
				return tResChange.Added.GetRecoveryStoreShardingInfo().GetName()
			case *recovery_store_sharding_info.RecoveryStoreShardingInfoChange_Modified_:
				return tResChange.Modified.GetName()
			case *recovery_store_sharding_info.RecoveryStoreShardingInfoChange_Removed_:
				return tResChange.Removed.GetName()
			case *recovery_store_sharding_info.RecoveryStoreShardingInfoChange_Current_:
				return tResChange.Current.GetRecoveryStoreShardingInfo().GetName()
			}
		}
	}
	return (*recovery_store_sharding_info.Name)(nil)
}

func (h *WatchRecoveryStoreShardingInfoDescriptorServerMsgHandle) ExtractResourceNames(msg proto.Message) gotenresource.NameList {
	typedMsg := msg.(*WatchRecoveryStoreShardingInfoResponse)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractResourceNames(*WatchRecoveryStoreShardingInfoResponse) []*recovery_store_sharding_info.Name
	})
	if ok {
		return recovery_store_sharding_info.RecoveryStoreShardingInfoNameList(override.OverrideExtractResourceNames(typedMsg))
	}
	return nil
}

func (h *WatchRecoveryStoreShardingInfoDescriptorServerMsgHandle) ExtractCollectionName(msg proto.Message) gotenresource.Name {
	typedMsg := msg.(*WatchRecoveryStoreShardingInfoResponse)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractCollectionName(*WatchRecoveryStoreShardingInfoResponse) *recovery_store_sharding_info.ParentName
	})
	if ok {
		return override.OverrideExtractCollectionName(typedMsg)
	}
	return nil
}

func (h *WatchRecoveryStoreShardingInfoDescriptorServerMsgHandle) ExtractResourceBody(msg proto.Message) gotenresource.Resource {
	typedMsg := msg.(*WatchRecoveryStoreShardingInfoResponse)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractResourceBody(*WatchRecoveryStoreShardingInfoResponse) *recovery_store_sharding_info.RecoveryStoreShardingInfo
	})
	if ok {
		return override.OverrideExtractResourceBody(typedMsg)
	}
	{
		if resChange := typedMsg.GetChange(); resChange != nil {
			switch tResChange := resChange.ChangeType.(type) {
			case *recovery_store_sharding_info.RecoveryStoreShardingInfoChange_Added_:
				return tResChange.Added.GetRecoveryStoreShardingInfo()
			case *recovery_store_sharding_info.RecoveryStoreShardingInfoChange_Modified_:
				return tResChange.Modified.GetRecoveryStoreShardingInfo()
			case *recovery_store_sharding_info.RecoveryStoreShardingInfoChange_Current_:
				return tResChange.Current.GetRecoveryStoreShardingInfo()
			}
		}
	}
	return (*recovery_store_sharding_info.RecoveryStoreShardingInfo)(nil)
}

func (h *WatchRecoveryStoreShardingInfoDescriptorServerMsgHandle) ExtractResourceBodies(msg proto.Message) gotenresource.ResourceList {
	typedMsg := msg.(*WatchRecoveryStoreShardingInfoResponse)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractResourceBodies(*WatchRecoveryStoreShardingInfoResponse) []*recovery_store_sharding_info.RecoveryStoreShardingInfo
	})
	if ok {
		return recovery_store_sharding_info.RecoveryStoreShardingInfoList(override.OverrideExtractResourceBodies(typedMsg))
	}
	return nil
}

func GetWatchRecoveryStoreShardingInfoDescriptor() *WatchRecoveryStoreShardingInfoDescriptor {
	return watchRecoveryStoreShardingInfoDescriptor
}

type WatchRecoveryStoreShardingInfosDescriptor struct{}

type WatchRecoveryStoreShardingInfosDescriptorClientMsgHandle struct{}

type WatchRecoveryStoreShardingInfosDescriptorServerMsgHandle struct{}

func (d *WatchRecoveryStoreShardingInfosDescriptor) NewEmptyClientMsg() proto.Message {
	return &WatchRecoveryStoreShardingInfosRequest{}
}

func (d *WatchRecoveryStoreShardingInfosDescriptor) NewEmptyServerMsg() proto.Message {
	return &WatchRecoveryStoreShardingInfosResponse{}
}

func (d *WatchRecoveryStoreShardingInfosDescriptor) IsUnary() bool {
	return false
}

func (d *WatchRecoveryStoreShardingInfosDescriptor) IsClientStream() bool {
	return false
}

func (d *WatchRecoveryStoreShardingInfosDescriptor) IsServerStream() bool {
	return true
}

func (d *WatchRecoveryStoreShardingInfosDescriptor) IsCollection() bool {
	return true
}

func (d *WatchRecoveryStoreShardingInfosDescriptor) IsPlural() bool {
	return true
}

func (d *WatchRecoveryStoreShardingInfosDescriptor) HasResource() bool {
	return true
}

func (d *WatchRecoveryStoreShardingInfosDescriptor) RequestHasResourceBody() bool {
	return false
}

func (d *WatchRecoveryStoreShardingInfosDescriptor) GetVerb() string {
	return "watch"
}

func (d *WatchRecoveryStoreShardingInfosDescriptor) GetMethodName() string {
	return "WatchRecoveryStoreShardingInfos"
}

func (d *WatchRecoveryStoreShardingInfosDescriptor) GetFullMethodName() string {
	return "/ntt.monitoring.v3.RecoveryStoreShardingInfoService/WatchRecoveryStoreShardingInfos"
}

func (d *WatchRecoveryStoreShardingInfosDescriptor) GetProtoPkgName() string {
	return "ntt.monitoring.v3"
}

func (d *WatchRecoveryStoreShardingInfosDescriptor) GetApiName() string {
	return "RecoveryStoreShardingInfoService"
}

func (d *WatchRecoveryStoreShardingInfosDescriptor) GetServiceDomain() string {
	return "monitoring.edgelq.com"
}

func (d *WatchRecoveryStoreShardingInfosDescriptor) GetServiceVersion() string {
	return "v3"
}

func (d *WatchRecoveryStoreShardingInfosDescriptor) GetApiDescriptor() gotenclient.ApiDescriptor {
	return recoveryStoreShardingInfoServiceDescriptor
}

func (d *WatchRecoveryStoreShardingInfosDescriptor) GetResourceDescriptor() gotenresource.Descriptor {
	return recovery_store_sharding_info.GetDescriptor()
}

func (d *WatchRecoveryStoreShardingInfosDescriptor) GetClientMsgReflectHandle() gotenclient.MethodMsgHandle {
	return &WatchRecoveryStoreShardingInfosDescriptorClientMsgHandle{}
}

func (d *WatchRecoveryStoreShardingInfosDescriptor) GetServerMsgReflectHandle() gotenclient.MethodMsgHandle {
	return &WatchRecoveryStoreShardingInfosDescriptorServerMsgHandle{}
}

func (h *WatchRecoveryStoreShardingInfosDescriptorClientMsgHandle) ExtractResourceName(msg proto.Message) gotenresource.Name {
	typedMsg := msg.(*WatchRecoveryStoreShardingInfosRequest)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractResourceName(*WatchRecoveryStoreShardingInfosRequest) *recovery_store_sharding_info.Name
	})
	if ok {
		return override.OverrideExtractResourceName(typedMsg)
	}
	return nil
}

func (h *WatchRecoveryStoreShardingInfosDescriptorClientMsgHandle) ExtractResourceNames(msg proto.Message) gotenresource.NameList {
	typedMsg := msg.(*WatchRecoveryStoreShardingInfosRequest)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractResourceNames(*WatchRecoveryStoreShardingInfosRequest) []*recovery_store_sharding_info.Name
	})
	if ok {
		return recovery_store_sharding_info.RecoveryStoreShardingInfoNameList(override.OverrideExtractResourceNames(typedMsg))
	}
	return nil
}

func (h *WatchRecoveryStoreShardingInfosDescriptorClientMsgHandle) ExtractCollectionName(msg proto.Message) gotenresource.Name {
	typedMsg := msg.(*WatchRecoveryStoreShardingInfosRequest)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractCollectionName(*WatchRecoveryStoreShardingInfosRequest) *recovery_store_sharding_info.ParentName
	})
	if ok {
		return override.OverrideExtractCollectionName(typedMsg)
	}
	{
		if parentName := typedMsg.GetParent(); parentName != nil {
			return parentName
		}
	}
	return (*recovery_store_sharding_info.ParentName)(nil)
}

func (h *WatchRecoveryStoreShardingInfosDescriptorClientMsgHandle) ExtractResourceBody(msg proto.Message) gotenresource.Resource {
	typedMsg := msg.(*WatchRecoveryStoreShardingInfosRequest)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractResourceBody(*WatchRecoveryStoreShardingInfosRequest) *recovery_store_sharding_info.RecoveryStoreShardingInfo
	})
	if ok {
		return override.OverrideExtractResourceBody(typedMsg)
	}
	return nil
}

func (h *WatchRecoveryStoreShardingInfosDescriptorClientMsgHandle) ExtractResourceBodies(msg proto.Message) gotenresource.ResourceList {
	typedMsg := msg.(*WatchRecoveryStoreShardingInfosRequest)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractResourceBodies(*WatchRecoveryStoreShardingInfosRequest) []*recovery_store_sharding_info.RecoveryStoreShardingInfo
	})
	if ok {
		return recovery_store_sharding_info.RecoveryStoreShardingInfoList(override.OverrideExtractResourceBodies(typedMsg))
	}
	return nil
}

func (h *WatchRecoveryStoreShardingInfosDescriptorServerMsgHandle) ExtractResourceName(msg proto.Message) gotenresource.Name {
	typedMsg := msg.(*WatchRecoveryStoreShardingInfosResponse)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractResourceName(*WatchRecoveryStoreShardingInfosResponse) *recovery_store_sharding_info.Name
	})
	if ok {
		return override.OverrideExtractResourceName(typedMsg)
	}
	return nil
}

func (h *WatchRecoveryStoreShardingInfosDescriptorServerMsgHandle) ExtractResourceNames(msg proto.Message) gotenresource.NameList {
	typedMsg := msg.(*WatchRecoveryStoreShardingInfosResponse)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractResourceNames(*WatchRecoveryStoreShardingInfosResponse) []*recovery_store_sharding_info.Name
	})
	if ok {
		return recovery_store_sharding_info.RecoveryStoreShardingInfoNameList(override.OverrideExtractResourceNames(typedMsg))
	}
	{
		if resChanges := typedMsg.GetRecoveryStoreShardingInfoChanges(); len(resChanges) > 0 {
			list := make(recovery_store_sharding_info.RecoveryStoreShardingInfoNameList, 0, len(resChanges))
			for _, resChange := range resChanges {
				switch tResChange := resChange.ChangeType.(type) {
				case *recovery_store_sharding_info.RecoveryStoreShardingInfoChange_Added_:
					list = append(list, tResChange.Added.GetRecoveryStoreShardingInfo().GetName())
				case *recovery_store_sharding_info.RecoveryStoreShardingInfoChange_Modified_:
					list = append(list, tResChange.Modified.GetName())
				case *recovery_store_sharding_info.RecoveryStoreShardingInfoChange_Removed_:
					list = append(list, tResChange.Removed.GetName())
				case *recovery_store_sharding_info.RecoveryStoreShardingInfoChange_Current_:
					list = append(list, tResChange.Current.GetRecoveryStoreShardingInfo().GetName())
				}
			}
			return list
		}
	}
	return (recovery_store_sharding_info.RecoveryStoreShardingInfoNameList)(nil)
}

func (h *WatchRecoveryStoreShardingInfosDescriptorServerMsgHandle) ExtractCollectionName(msg proto.Message) gotenresource.Name {
	typedMsg := msg.(*WatchRecoveryStoreShardingInfosResponse)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractCollectionName(*WatchRecoveryStoreShardingInfosResponse) *recovery_store_sharding_info.ParentName
	})
	if ok {
		return override.OverrideExtractCollectionName(typedMsg)
	}
	return nil
}

func (h *WatchRecoveryStoreShardingInfosDescriptorServerMsgHandle) ExtractResourceBody(msg proto.Message) gotenresource.Resource {
	typedMsg := msg.(*WatchRecoveryStoreShardingInfosResponse)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractResourceBody(*WatchRecoveryStoreShardingInfosResponse) *recovery_store_sharding_info.RecoveryStoreShardingInfo
	})
	if ok {
		return override.OverrideExtractResourceBody(typedMsg)
	}
	return nil
}

func (h *WatchRecoveryStoreShardingInfosDescriptorServerMsgHandle) ExtractResourceBodies(msg proto.Message) gotenresource.ResourceList {
	typedMsg := msg.(*WatchRecoveryStoreShardingInfosResponse)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractResourceBodies(*WatchRecoveryStoreShardingInfosResponse) []*recovery_store_sharding_info.RecoveryStoreShardingInfo
	})
	if ok {
		return recovery_store_sharding_info.RecoveryStoreShardingInfoList(override.OverrideExtractResourceBodies(typedMsg))
	}
	{
		if resChanges := typedMsg.GetRecoveryStoreShardingInfoChanges(); len(resChanges) > 0 {
			list := make(recovery_store_sharding_info.RecoveryStoreShardingInfoList, 0, len(resChanges))
			for _, resChange := range resChanges {
				switch tResChange := resChange.ChangeType.(type) {
				case *recovery_store_sharding_info.RecoveryStoreShardingInfoChange_Added_:
					list = append(list, tResChange.Added.GetRecoveryStoreShardingInfo())
				case *recovery_store_sharding_info.RecoveryStoreShardingInfoChange_Modified_:
					list = append(list, tResChange.Modified.GetRecoveryStoreShardingInfo())
				case *recovery_store_sharding_info.RecoveryStoreShardingInfoChange_Current_:
					list = append(list, tResChange.Current.GetRecoveryStoreShardingInfo())
				}
			}
			return list
		}
	}
	return (recovery_store_sharding_info.RecoveryStoreShardingInfoList)(nil)
}

func GetWatchRecoveryStoreShardingInfosDescriptor() *WatchRecoveryStoreShardingInfosDescriptor {
	return watchRecoveryStoreShardingInfosDescriptor
}

type CreateRecoveryStoreShardingInfoDescriptor struct{}

type CreateRecoveryStoreShardingInfoDescriptorClientMsgHandle struct{}

type CreateRecoveryStoreShardingInfoDescriptorServerMsgHandle struct{}

func (d *CreateRecoveryStoreShardingInfoDescriptor) NewEmptyClientMsg() proto.Message {
	return &CreateRecoveryStoreShardingInfoRequest{}
}

func (d *CreateRecoveryStoreShardingInfoDescriptor) NewEmptyServerMsg() proto.Message {
	return &recovery_store_sharding_info.RecoveryStoreShardingInfo{}
}

func (d *CreateRecoveryStoreShardingInfoDescriptor) IsUnary() bool {
	return true
}

func (d *CreateRecoveryStoreShardingInfoDescriptor) IsClientStream() bool {
	return false
}

func (d *CreateRecoveryStoreShardingInfoDescriptor) IsServerStream() bool {
	return false
}

func (d *CreateRecoveryStoreShardingInfoDescriptor) IsCollection() bool {
	return true
}

func (d *CreateRecoveryStoreShardingInfoDescriptor) IsPlural() bool {
	return false
}

func (d *CreateRecoveryStoreShardingInfoDescriptor) HasResource() bool {
	return true
}

func (d *CreateRecoveryStoreShardingInfoDescriptor) RequestHasResourceBody() bool {
	return true
}

func (d *CreateRecoveryStoreShardingInfoDescriptor) GetVerb() string {
	return "create"
}

func (d *CreateRecoveryStoreShardingInfoDescriptor) GetMethodName() string {
	return "CreateRecoveryStoreShardingInfo"
}

func (d *CreateRecoveryStoreShardingInfoDescriptor) GetFullMethodName() string {
	return "/ntt.monitoring.v3.RecoveryStoreShardingInfoService/CreateRecoveryStoreShardingInfo"
}

func (d *CreateRecoveryStoreShardingInfoDescriptor) GetProtoPkgName() string {
	return "ntt.monitoring.v3"
}

func (d *CreateRecoveryStoreShardingInfoDescriptor) GetApiName() string {
	return "RecoveryStoreShardingInfoService"
}

func (d *CreateRecoveryStoreShardingInfoDescriptor) GetServiceDomain() string {
	return "monitoring.edgelq.com"
}

func (d *CreateRecoveryStoreShardingInfoDescriptor) GetServiceVersion() string {
	return "v3"
}

func (d *CreateRecoveryStoreShardingInfoDescriptor) GetApiDescriptor() gotenclient.ApiDescriptor {
	return recoveryStoreShardingInfoServiceDescriptor
}

func (d *CreateRecoveryStoreShardingInfoDescriptor) GetResourceDescriptor() gotenresource.Descriptor {
	return recovery_store_sharding_info.GetDescriptor()
}

func (d *CreateRecoveryStoreShardingInfoDescriptor) GetClientMsgReflectHandle() gotenclient.MethodMsgHandle {
	return &CreateRecoveryStoreShardingInfoDescriptorClientMsgHandle{}
}

func (d *CreateRecoveryStoreShardingInfoDescriptor) GetServerMsgReflectHandle() gotenclient.MethodMsgHandle {
	return &CreateRecoveryStoreShardingInfoDescriptorServerMsgHandle{}
}

func (h *CreateRecoveryStoreShardingInfoDescriptorClientMsgHandle) ExtractResourceName(msg proto.Message) gotenresource.Name {
	typedMsg := msg.(*CreateRecoveryStoreShardingInfoRequest)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractResourceName(*CreateRecoveryStoreShardingInfoRequest) *recovery_store_sharding_info.Name
	})
	if ok {
		return override.OverrideExtractResourceName(typedMsg)
	}
	{
		res := typedMsg.GetRecoveryStoreShardingInfo()
		if name := res.GetName(); name != nil {
			return name
		}
	}
	return (*recovery_store_sharding_info.Name)(nil)
}

func (h *CreateRecoveryStoreShardingInfoDescriptorClientMsgHandle) ExtractResourceNames(msg proto.Message) gotenresource.NameList {
	typedMsg := msg.(*CreateRecoveryStoreShardingInfoRequest)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractResourceNames(*CreateRecoveryStoreShardingInfoRequest) []*recovery_store_sharding_info.Name
	})
	if ok {
		return recovery_store_sharding_info.RecoveryStoreShardingInfoNameList(override.OverrideExtractResourceNames(typedMsg))
	}
	return nil
}

func (h *CreateRecoveryStoreShardingInfoDescriptorClientMsgHandle) ExtractCollectionName(msg proto.Message) gotenresource.Name {
	typedMsg := msg.(*CreateRecoveryStoreShardingInfoRequest)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractCollectionName(*CreateRecoveryStoreShardingInfoRequest) *recovery_store_sharding_info.ParentName
	})
	if ok {
		return override.OverrideExtractCollectionName(typedMsg)
	}
	{
		if parentName := typedMsg.GetParent(); parentName != nil {
			return parentName
		}
	}
	return (*recovery_store_sharding_info.ParentName)(nil)
}

func (h *CreateRecoveryStoreShardingInfoDescriptorClientMsgHandle) ExtractResourceBody(msg proto.Message) gotenresource.Resource {
	typedMsg := msg.(*CreateRecoveryStoreShardingInfoRequest)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractResourceBody(*CreateRecoveryStoreShardingInfoRequest) *recovery_store_sharding_info.RecoveryStoreShardingInfo
	})
	if ok {
		return override.OverrideExtractResourceBody(typedMsg)
	}
	{
		return typedMsg.GetRecoveryStoreShardingInfo()
	}
	return (*recovery_store_sharding_info.RecoveryStoreShardingInfo)(nil)
}

func (h *CreateRecoveryStoreShardingInfoDescriptorClientMsgHandle) ExtractResourceBodies(msg proto.Message) gotenresource.ResourceList {
	typedMsg := msg.(*CreateRecoveryStoreShardingInfoRequest)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractResourceBodies(*CreateRecoveryStoreShardingInfoRequest) []*recovery_store_sharding_info.RecoveryStoreShardingInfo
	})
	if ok {
		return recovery_store_sharding_info.RecoveryStoreShardingInfoList(override.OverrideExtractResourceBodies(typedMsg))
	}
	return nil
}

func (h *CreateRecoveryStoreShardingInfoDescriptorServerMsgHandle) ExtractResourceName(msg proto.Message) gotenresource.Name {
	typedMsg := msg.(*recovery_store_sharding_info.RecoveryStoreShardingInfo)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractResourceName(*recovery_store_sharding_info.RecoveryStoreShardingInfo) *recovery_store_sharding_info.Name
	})
	if ok {
		return override.OverrideExtractResourceName(typedMsg)
	}
	{
		if name := typedMsg.GetName(); name != nil {
			return name
		}
	}
	return (*recovery_store_sharding_info.Name)(nil)
}

func (h *CreateRecoveryStoreShardingInfoDescriptorServerMsgHandle) ExtractResourceNames(msg proto.Message) gotenresource.NameList {
	typedMsg := msg.(*recovery_store_sharding_info.RecoveryStoreShardingInfo)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractResourceNames(*recovery_store_sharding_info.RecoveryStoreShardingInfo) []*recovery_store_sharding_info.Name
	})
	if ok {
		return recovery_store_sharding_info.RecoveryStoreShardingInfoNameList(override.OverrideExtractResourceNames(typedMsg))
	}
	return nil
}

func (h *CreateRecoveryStoreShardingInfoDescriptorServerMsgHandle) ExtractCollectionName(msg proto.Message) gotenresource.Name {
	typedMsg := msg.(*recovery_store_sharding_info.RecoveryStoreShardingInfo)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractCollectionName(*recovery_store_sharding_info.RecoveryStoreShardingInfo) *recovery_store_sharding_info.ParentName
	})
	if ok {
		return override.OverrideExtractCollectionName(typedMsg)
	}
	return nil
}

func (h *CreateRecoveryStoreShardingInfoDescriptorServerMsgHandle) ExtractResourceBody(msg proto.Message) gotenresource.Resource {
	return msg.(*recovery_store_sharding_info.RecoveryStoreShardingInfo)
}

func (h *CreateRecoveryStoreShardingInfoDescriptorServerMsgHandle) ExtractResourceBodies(msg proto.Message) gotenresource.ResourceList {
	typedMsg := msg.(*recovery_store_sharding_info.RecoveryStoreShardingInfo)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractResourceBodies(*recovery_store_sharding_info.RecoveryStoreShardingInfo) []*recovery_store_sharding_info.RecoveryStoreShardingInfo
	})
	if ok {
		return recovery_store_sharding_info.RecoveryStoreShardingInfoList(override.OverrideExtractResourceBodies(typedMsg))
	}
	return nil
}

func GetCreateRecoveryStoreShardingInfoDescriptor() *CreateRecoveryStoreShardingInfoDescriptor {
	return createRecoveryStoreShardingInfoDescriptor
}

type UpdateRecoveryStoreShardingInfoDescriptor struct{}

type UpdateRecoveryStoreShardingInfoDescriptorClientMsgHandle struct{}

type UpdateRecoveryStoreShardingInfoDescriptorServerMsgHandle struct{}

func (d *UpdateRecoveryStoreShardingInfoDescriptor) NewEmptyClientMsg() proto.Message {
	return &UpdateRecoveryStoreShardingInfoRequest{}
}

func (d *UpdateRecoveryStoreShardingInfoDescriptor) NewEmptyServerMsg() proto.Message {
	return &recovery_store_sharding_info.RecoveryStoreShardingInfo{}
}

func (d *UpdateRecoveryStoreShardingInfoDescriptor) IsUnary() bool {
	return true
}

func (d *UpdateRecoveryStoreShardingInfoDescriptor) IsClientStream() bool {
	return false
}

func (d *UpdateRecoveryStoreShardingInfoDescriptor) IsServerStream() bool {
	return false
}

func (d *UpdateRecoveryStoreShardingInfoDescriptor) IsCollection() bool {
	return false
}

func (d *UpdateRecoveryStoreShardingInfoDescriptor) IsPlural() bool {
	return false
}

func (d *UpdateRecoveryStoreShardingInfoDescriptor) HasResource() bool {
	return true
}

func (d *UpdateRecoveryStoreShardingInfoDescriptor) RequestHasResourceBody() bool {
	return true
}

func (d *UpdateRecoveryStoreShardingInfoDescriptor) GetVerb() string {
	return "update"
}

func (d *UpdateRecoveryStoreShardingInfoDescriptor) GetMethodName() string {
	return "UpdateRecoveryStoreShardingInfo"
}

func (d *UpdateRecoveryStoreShardingInfoDescriptor) GetFullMethodName() string {
	return "/ntt.monitoring.v3.RecoveryStoreShardingInfoService/UpdateRecoveryStoreShardingInfo"
}

func (d *UpdateRecoveryStoreShardingInfoDescriptor) GetProtoPkgName() string {
	return "ntt.monitoring.v3"
}

func (d *UpdateRecoveryStoreShardingInfoDescriptor) GetApiName() string {
	return "RecoveryStoreShardingInfoService"
}

func (d *UpdateRecoveryStoreShardingInfoDescriptor) GetServiceDomain() string {
	return "monitoring.edgelq.com"
}

func (d *UpdateRecoveryStoreShardingInfoDescriptor) GetServiceVersion() string {
	return "v3"
}

func (d *UpdateRecoveryStoreShardingInfoDescriptor) GetApiDescriptor() gotenclient.ApiDescriptor {
	return recoveryStoreShardingInfoServiceDescriptor
}

func (d *UpdateRecoveryStoreShardingInfoDescriptor) GetResourceDescriptor() gotenresource.Descriptor {
	return recovery_store_sharding_info.GetDescriptor()
}

func (d *UpdateRecoveryStoreShardingInfoDescriptor) GetClientMsgReflectHandle() gotenclient.MethodMsgHandle {
	return &UpdateRecoveryStoreShardingInfoDescriptorClientMsgHandle{}
}

func (d *UpdateRecoveryStoreShardingInfoDescriptor) GetServerMsgReflectHandle() gotenclient.MethodMsgHandle {
	return &UpdateRecoveryStoreShardingInfoDescriptorServerMsgHandle{}
}

func (h *UpdateRecoveryStoreShardingInfoDescriptorClientMsgHandle) ExtractResourceName(msg proto.Message) gotenresource.Name {
	typedMsg := msg.(*UpdateRecoveryStoreShardingInfoRequest)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractResourceName(*UpdateRecoveryStoreShardingInfoRequest) *recovery_store_sharding_info.Name
	})
	if ok {
		return override.OverrideExtractResourceName(typedMsg)
	}
	{
		res := typedMsg.GetRecoveryStoreShardingInfo()
		if name := res.GetName(); name != nil {
			return name
		}
	}
	return (*recovery_store_sharding_info.Name)(nil)
}

func (h *UpdateRecoveryStoreShardingInfoDescriptorClientMsgHandle) ExtractResourceNames(msg proto.Message) gotenresource.NameList {
	typedMsg := msg.(*UpdateRecoveryStoreShardingInfoRequest)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractResourceNames(*UpdateRecoveryStoreShardingInfoRequest) []*recovery_store_sharding_info.Name
	})
	if ok {
		return recovery_store_sharding_info.RecoveryStoreShardingInfoNameList(override.OverrideExtractResourceNames(typedMsg))
	}
	return nil
}

func (h *UpdateRecoveryStoreShardingInfoDescriptorClientMsgHandle) ExtractCollectionName(msg proto.Message) gotenresource.Name {
	typedMsg := msg.(*UpdateRecoveryStoreShardingInfoRequest)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractCollectionName(*UpdateRecoveryStoreShardingInfoRequest) *recovery_store_sharding_info.ParentName
	})
	if ok {
		return override.OverrideExtractCollectionName(typedMsg)
	}
	return nil
}

func (h *UpdateRecoveryStoreShardingInfoDescriptorClientMsgHandle) ExtractResourceBody(msg proto.Message) gotenresource.Resource {
	typedMsg := msg.(*UpdateRecoveryStoreShardingInfoRequest)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractResourceBody(*UpdateRecoveryStoreShardingInfoRequest) *recovery_store_sharding_info.RecoveryStoreShardingInfo
	})
	if ok {
		return override.OverrideExtractResourceBody(typedMsg)
	}
	{
		return typedMsg.GetRecoveryStoreShardingInfo()
	}
	return (*recovery_store_sharding_info.RecoveryStoreShardingInfo)(nil)
}

func (h *UpdateRecoveryStoreShardingInfoDescriptorClientMsgHandle) ExtractResourceBodies(msg proto.Message) gotenresource.ResourceList {
	typedMsg := msg.(*UpdateRecoveryStoreShardingInfoRequest)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractResourceBodies(*UpdateRecoveryStoreShardingInfoRequest) []*recovery_store_sharding_info.RecoveryStoreShardingInfo
	})
	if ok {
		return recovery_store_sharding_info.RecoveryStoreShardingInfoList(override.OverrideExtractResourceBodies(typedMsg))
	}
	return nil
}

func (h *UpdateRecoveryStoreShardingInfoDescriptorServerMsgHandle) ExtractResourceName(msg proto.Message) gotenresource.Name {
	typedMsg := msg.(*recovery_store_sharding_info.RecoveryStoreShardingInfo)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractResourceName(*recovery_store_sharding_info.RecoveryStoreShardingInfo) *recovery_store_sharding_info.Name
	})
	if ok {
		return override.OverrideExtractResourceName(typedMsg)
	}
	{
		if name := typedMsg.GetName(); name != nil {
			return name
		}
	}
	return (*recovery_store_sharding_info.Name)(nil)
}

func (h *UpdateRecoveryStoreShardingInfoDescriptorServerMsgHandle) ExtractResourceNames(msg proto.Message) gotenresource.NameList {
	typedMsg := msg.(*recovery_store_sharding_info.RecoveryStoreShardingInfo)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractResourceNames(*recovery_store_sharding_info.RecoveryStoreShardingInfo) []*recovery_store_sharding_info.Name
	})
	if ok {
		return recovery_store_sharding_info.RecoveryStoreShardingInfoNameList(override.OverrideExtractResourceNames(typedMsg))
	}
	return nil
}

func (h *UpdateRecoveryStoreShardingInfoDescriptorServerMsgHandle) ExtractCollectionName(msg proto.Message) gotenresource.Name {
	typedMsg := msg.(*recovery_store_sharding_info.RecoveryStoreShardingInfo)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractCollectionName(*recovery_store_sharding_info.RecoveryStoreShardingInfo) *recovery_store_sharding_info.ParentName
	})
	if ok {
		return override.OverrideExtractCollectionName(typedMsg)
	}
	return nil
}

func (h *UpdateRecoveryStoreShardingInfoDescriptorServerMsgHandle) ExtractResourceBody(msg proto.Message) gotenresource.Resource {
	return msg.(*recovery_store_sharding_info.RecoveryStoreShardingInfo)
}

func (h *UpdateRecoveryStoreShardingInfoDescriptorServerMsgHandle) ExtractResourceBodies(msg proto.Message) gotenresource.ResourceList {
	typedMsg := msg.(*recovery_store_sharding_info.RecoveryStoreShardingInfo)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractResourceBodies(*recovery_store_sharding_info.RecoveryStoreShardingInfo) []*recovery_store_sharding_info.RecoveryStoreShardingInfo
	})
	if ok {
		return recovery_store_sharding_info.RecoveryStoreShardingInfoList(override.OverrideExtractResourceBodies(typedMsg))
	}
	return nil
}

func GetUpdateRecoveryStoreShardingInfoDescriptor() *UpdateRecoveryStoreShardingInfoDescriptor {
	return updateRecoveryStoreShardingInfoDescriptor
}

type DeleteRecoveryStoreShardingInfoDescriptor struct{}

type DeleteRecoveryStoreShardingInfoDescriptorClientMsgHandle struct{}

type DeleteRecoveryStoreShardingInfoDescriptorServerMsgHandle struct{}

func (d *DeleteRecoveryStoreShardingInfoDescriptor) NewEmptyClientMsg() proto.Message {
	return &DeleteRecoveryStoreShardingInfoRequest{}
}

func (d *DeleteRecoveryStoreShardingInfoDescriptor) NewEmptyServerMsg() proto.Message {
	return &emptypb.Empty{}
}

func (d *DeleteRecoveryStoreShardingInfoDescriptor) IsUnary() bool {
	return true
}

func (d *DeleteRecoveryStoreShardingInfoDescriptor) IsClientStream() bool {
	return false
}

func (d *DeleteRecoveryStoreShardingInfoDescriptor) IsServerStream() bool {
	return false
}

func (d *DeleteRecoveryStoreShardingInfoDescriptor) IsCollection() bool {
	return false
}

func (d *DeleteRecoveryStoreShardingInfoDescriptor) IsPlural() bool {
	return false
}

func (d *DeleteRecoveryStoreShardingInfoDescriptor) HasResource() bool {
	return true
}

func (d *DeleteRecoveryStoreShardingInfoDescriptor) RequestHasResourceBody() bool {
	return false
}

func (d *DeleteRecoveryStoreShardingInfoDescriptor) GetVerb() string {
	return "delete"
}

func (d *DeleteRecoveryStoreShardingInfoDescriptor) GetMethodName() string {
	return "DeleteRecoveryStoreShardingInfo"
}

func (d *DeleteRecoveryStoreShardingInfoDescriptor) GetFullMethodName() string {
	return "/ntt.monitoring.v3.RecoveryStoreShardingInfoService/DeleteRecoveryStoreShardingInfo"
}

func (d *DeleteRecoveryStoreShardingInfoDescriptor) GetProtoPkgName() string {
	return "ntt.monitoring.v3"
}

func (d *DeleteRecoveryStoreShardingInfoDescriptor) GetApiName() string {
	return "RecoveryStoreShardingInfoService"
}

func (d *DeleteRecoveryStoreShardingInfoDescriptor) GetServiceDomain() string {
	return "monitoring.edgelq.com"
}

func (d *DeleteRecoveryStoreShardingInfoDescriptor) GetServiceVersion() string {
	return "v3"
}

func (d *DeleteRecoveryStoreShardingInfoDescriptor) GetApiDescriptor() gotenclient.ApiDescriptor {
	return recoveryStoreShardingInfoServiceDescriptor
}

func (d *DeleteRecoveryStoreShardingInfoDescriptor) GetResourceDescriptor() gotenresource.Descriptor {
	return recovery_store_sharding_info.GetDescriptor()
}

func (d *DeleteRecoveryStoreShardingInfoDescriptor) GetClientMsgReflectHandle() gotenclient.MethodMsgHandle {
	return &DeleteRecoveryStoreShardingInfoDescriptorClientMsgHandle{}
}

func (d *DeleteRecoveryStoreShardingInfoDescriptor) GetServerMsgReflectHandle() gotenclient.MethodMsgHandle {
	return &DeleteRecoveryStoreShardingInfoDescriptorServerMsgHandle{}
}

func (h *DeleteRecoveryStoreShardingInfoDescriptorClientMsgHandle) ExtractResourceName(msg proto.Message) gotenresource.Name {
	typedMsg := msg.(*DeleteRecoveryStoreShardingInfoRequest)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractResourceName(*DeleteRecoveryStoreShardingInfoRequest) *recovery_store_sharding_info.Name
	})
	if ok {
		return override.OverrideExtractResourceName(typedMsg)
	}
	{
		if name := typedMsg.GetName(); name != nil {
			return name
		}
	}
	return (*recovery_store_sharding_info.Name)(nil)
}

func (h *DeleteRecoveryStoreShardingInfoDescriptorClientMsgHandle) ExtractResourceNames(msg proto.Message) gotenresource.NameList {
	typedMsg := msg.(*DeleteRecoveryStoreShardingInfoRequest)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractResourceNames(*DeleteRecoveryStoreShardingInfoRequest) []*recovery_store_sharding_info.Name
	})
	if ok {
		return recovery_store_sharding_info.RecoveryStoreShardingInfoNameList(override.OverrideExtractResourceNames(typedMsg))
	}
	return nil
}

func (h *DeleteRecoveryStoreShardingInfoDescriptorClientMsgHandle) ExtractCollectionName(msg proto.Message) gotenresource.Name {
	typedMsg := msg.(*DeleteRecoveryStoreShardingInfoRequest)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractCollectionName(*DeleteRecoveryStoreShardingInfoRequest) *recovery_store_sharding_info.ParentName
	})
	if ok {
		return override.OverrideExtractCollectionName(typedMsg)
	}
	return nil
}

func (h *DeleteRecoveryStoreShardingInfoDescriptorClientMsgHandle) ExtractResourceBody(msg proto.Message) gotenresource.Resource {
	typedMsg := msg.(*DeleteRecoveryStoreShardingInfoRequest)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractResourceBody(*DeleteRecoveryStoreShardingInfoRequest) *recovery_store_sharding_info.RecoveryStoreShardingInfo
	})
	if ok {
		return override.OverrideExtractResourceBody(typedMsg)
	}
	return nil
}

func (h *DeleteRecoveryStoreShardingInfoDescriptorClientMsgHandle) ExtractResourceBodies(msg proto.Message) gotenresource.ResourceList {
	typedMsg := msg.(*DeleteRecoveryStoreShardingInfoRequest)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractResourceBodies(*DeleteRecoveryStoreShardingInfoRequest) []*recovery_store_sharding_info.RecoveryStoreShardingInfo
	})
	if ok {
		return recovery_store_sharding_info.RecoveryStoreShardingInfoList(override.OverrideExtractResourceBodies(typedMsg))
	}
	return nil
}

func (h *DeleteRecoveryStoreShardingInfoDescriptorServerMsgHandle) ExtractResourceName(msg proto.Message) gotenresource.Name {
	typedMsg := msg.(*emptypb.Empty)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractResourceName(*emptypb.Empty) *recovery_store_sharding_info.Name
	})
	if ok {
		return override.OverrideExtractResourceName(typedMsg)
	}
	return nil
}

func (h *DeleteRecoveryStoreShardingInfoDescriptorServerMsgHandle) ExtractResourceNames(msg proto.Message) gotenresource.NameList {
	typedMsg := msg.(*emptypb.Empty)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractResourceNames(*emptypb.Empty) []*recovery_store_sharding_info.Name
	})
	if ok {
		return recovery_store_sharding_info.RecoveryStoreShardingInfoNameList(override.OverrideExtractResourceNames(typedMsg))
	}
	return nil
}

func (h *DeleteRecoveryStoreShardingInfoDescriptorServerMsgHandle) ExtractCollectionName(msg proto.Message) gotenresource.Name {
	typedMsg := msg.(*emptypb.Empty)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractCollectionName(*emptypb.Empty) *recovery_store_sharding_info.ParentName
	})
	if ok {
		return override.OverrideExtractCollectionName(typedMsg)
	}
	return nil
}

func (h *DeleteRecoveryStoreShardingInfoDescriptorServerMsgHandle) ExtractResourceBody(msg proto.Message) gotenresource.Resource {
	typedMsg := msg.(*emptypb.Empty)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractResourceBody(*emptypb.Empty) *recovery_store_sharding_info.RecoveryStoreShardingInfo
	})
	if ok {
		return override.OverrideExtractResourceBody(typedMsg)
	}
	return nil
}

func (h *DeleteRecoveryStoreShardingInfoDescriptorServerMsgHandle) ExtractResourceBodies(msg proto.Message) gotenresource.ResourceList {
	typedMsg := msg.(*emptypb.Empty)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractResourceBodies(*emptypb.Empty) []*recovery_store_sharding_info.RecoveryStoreShardingInfo
	})
	if ok {
		return recovery_store_sharding_info.RecoveryStoreShardingInfoList(override.OverrideExtractResourceBodies(typedMsg))
	}
	return nil
}

func GetDeleteRecoveryStoreShardingInfoDescriptor() *DeleteRecoveryStoreShardingInfoDescriptor {
	return deleteRecoveryStoreShardingInfoDescriptor
}

type RecoveryStoreShardingInfoServiceDescriptor struct{}

func (d *RecoveryStoreShardingInfoServiceDescriptor) AllMethodDescriptors() []gotenclient.MethodDescriptor {
	return []gotenclient.MethodDescriptor{
		getRecoveryStoreShardingInfoDescriptor,
		batchGetRecoveryStoreShardingInfosDescriptor,
		listRecoveryStoreShardingInfosDescriptor,
		watchRecoveryStoreShardingInfoDescriptor,
		watchRecoveryStoreShardingInfosDescriptor,
		createRecoveryStoreShardingInfoDescriptor,
		updateRecoveryStoreShardingInfoDescriptor,
		deleteRecoveryStoreShardingInfoDescriptor,
	}
}

func (d *RecoveryStoreShardingInfoServiceDescriptor) GetFullAPIName() string {
	return "/ntt.monitoring.v3.RecoveryStoreShardingInfoService"
}

func (d *RecoveryStoreShardingInfoServiceDescriptor) GetProtoPkgName() string {
	return "ntt.monitoring.v3"
}

func (d *RecoveryStoreShardingInfoServiceDescriptor) GetApiName() string {
	return "RecoveryStoreShardingInfoService"
}

func (d *RecoveryStoreShardingInfoServiceDescriptor) GetServiceDomain() string {
	return "monitoring.edgelq.com"
}

func (d *RecoveryStoreShardingInfoServiceDescriptor) GetServiceVersion() string {
	return "v3"
}

func GetRecoveryStoreShardingInfoServiceDescriptor() *RecoveryStoreShardingInfoServiceDescriptor {
	return recoveryStoreShardingInfoServiceDescriptor
}

func initDescriptors() {
	recoveryStoreShardingInfoServiceDescriptor = &RecoveryStoreShardingInfoServiceDescriptor{}
	getRecoveryStoreShardingInfoDescriptor = &GetRecoveryStoreShardingInfoDescriptor{}
	batchGetRecoveryStoreShardingInfosDescriptor = &BatchGetRecoveryStoreShardingInfosDescriptor{}
	listRecoveryStoreShardingInfosDescriptor = &ListRecoveryStoreShardingInfosDescriptor{}
	watchRecoveryStoreShardingInfoDescriptor = &WatchRecoveryStoreShardingInfoDescriptor{}
	watchRecoveryStoreShardingInfosDescriptor = &WatchRecoveryStoreShardingInfosDescriptor{}
	createRecoveryStoreShardingInfoDescriptor = &CreateRecoveryStoreShardingInfoDescriptor{}
	updateRecoveryStoreShardingInfoDescriptor = &UpdateRecoveryStoreShardingInfoDescriptor{}
	deleteRecoveryStoreShardingInfoDescriptor = &DeleteRecoveryStoreShardingInfoDescriptor{}
	gotenclient.GetRegistry().RegisterApiDescriptor(recoveryStoreShardingInfoServiceDescriptor)
	gotenclient.GetRegistry().RegisterMethodDescriptor(getRecoveryStoreShardingInfoDescriptor)
	gotenclient.GetRegistry().RegisterMethodDescriptor(batchGetRecoveryStoreShardingInfosDescriptor)
	gotenclient.GetRegistry().RegisterMethodDescriptor(listRecoveryStoreShardingInfosDescriptor)
	gotenclient.GetRegistry().RegisterMethodDescriptor(watchRecoveryStoreShardingInfoDescriptor)
	gotenclient.GetRegistry().RegisterMethodDescriptor(watchRecoveryStoreShardingInfosDescriptor)
	gotenclient.GetRegistry().RegisterMethodDescriptor(createRecoveryStoreShardingInfoDescriptor)
	gotenclient.GetRegistry().RegisterMethodDescriptor(updateRecoveryStoreShardingInfoDescriptor)
	gotenclient.GetRegistry().RegisterMethodDescriptor(deleteRecoveryStoreShardingInfoDescriptor)
}

func init() {
	if !descriptorsInitialized {
		initDescriptors()
		descriptorsInitialized = true
	}
}
