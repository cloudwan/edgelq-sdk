// Code generated by protoc-gen-goten-access
// Service: Monitoring
// DO NOT EDIT!!!

package monitoring_access

import (
	gotenresource "github.com/cloudwan/goten-sdk/runtime/resource"

	alert_access "github.com/cloudwan/edgelq-sdk/monitoring/access/v4/alert"
	alerting_condition_access "github.com/cloudwan/edgelq-sdk/monitoring/access/v4/alerting_condition"
	alerting_policy_access "github.com/cloudwan/edgelq-sdk/monitoring/access/v4/alerting_policy"
	bucket_access "github.com/cloudwan/edgelq-sdk/monitoring/access/v4/bucket"
	metric_descriptor_access "github.com/cloudwan/edgelq-sdk/monitoring/access/v4/metric_descriptor"
	monitored_resource_descriptor_access "github.com/cloudwan/edgelq-sdk/monitoring/access/v4/monitored_resource_descriptor"
	notification_access "github.com/cloudwan/edgelq-sdk/monitoring/access/v4/notification"
	notification_channel_access "github.com/cloudwan/edgelq-sdk/monitoring/access/v4/notification_channel"
	phantom_time_serie_access "github.com/cloudwan/edgelq-sdk/monitoring/access/v4/phantom_time_serie"
	project_access "github.com/cloudwan/edgelq-sdk/monitoring/access/v4/project"
	recovery_store_sharding_info_access "github.com/cloudwan/edgelq-sdk/monitoring/access/v4/recovery_store_sharding_info"
	time_series_collection_rule_access "github.com/cloudwan/edgelq-sdk/monitoring/access/v4/time_series_collection_rule"
	time_series_forwarder_sink_access "github.com/cloudwan/edgelq-sdk/monitoring/access/v4/time_series_forwarder_sink"
	monitoring_client "github.com/cloudwan/edgelq-sdk/monitoring/client/v4/monitoring"
	alert "github.com/cloudwan/edgelq-sdk/monitoring/resources/v4/alert"
	alerting_condition "github.com/cloudwan/edgelq-sdk/monitoring/resources/v4/alerting_condition"
	alerting_policy "github.com/cloudwan/edgelq-sdk/monitoring/resources/v4/alerting_policy"
	bucket "github.com/cloudwan/edgelq-sdk/monitoring/resources/v4/bucket"
	metric_descriptor "github.com/cloudwan/edgelq-sdk/monitoring/resources/v4/metric_descriptor"
	monitored_resource_descriptor "github.com/cloudwan/edgelq-sdk/monitoring/resources/v4/monitored_resource_descriptor"
	notification "github.com/cloudwan/edgelq-sdk/monitoring/resources/v4/notification"
	notification_channel "github.com/cloudwan/edgelq-sdk/monitoring/resources/v4/notification_channel"
	phantom_time_serie "github.com/cloudwan/edgelq-sdk/monitoring/resources/v4/phantom_time_serie"
	project "github.com/cloudwan/edgelq-sdk/monitoring/resources/v4/project"
	recovery_store_sharding_info "github.com/cloudwan/edgelq-sdk/monitoring/resources/v4/recovery_store_sharding_info"
	time_series_collection_rule "github.com/cloudwan/edgelq-sdk/monitoring/resources/v4/time_series_collection_rule"
	time_series_forwarder_sink "github.com/cloudwan/edgelq-sdk/monitoring/resources/v4/time_series_forwarder_sink"
)

type MonitoringApiAccess interface {
	gotenresource.Access

	alert.AlertAccess
	alerting_condition.AlertingConditionAccess
	alerting_policy.AlertingPolicyAccess
	bucket.BucketAccess
	metric_descriptor.MetricDescriptorAccess
	monitored_resource_descriptor.MonitoredResourceDescriptorAccess
	notification.NotificationAccess
	notification_channel.NotificationChannelAccess
	phantom_time_serie.PhantomTimeSerieAccess
	project.ProjectAccess
	recovery_store_sharding_info.RecoveryStoreShardingInfoAccess
	time_series_collection_rule.TimeSeriesCollectionRuleAccess
	time_series_forwarder_sink.TimeSeriesForwarderSinkAccess
}

type apiMonitoringAccess struct {
	gotenresource.Access

	alert.AlertAccess
	alerting_condition.AlertingConditionAccess
	alerting_policy.AlertingPolicyAccess
	bucket.BucketAccess
	metric_descriptor.MetricDescriptorAccess
	monitored_resource_descriptor.MonitoredResourceDescriptorAccess
	notification.NotificationAccess
	notification_channel.NotificationChannelAccess
	phantom_time_serie.PhantomTimeSerieAccess
	project.ProjectAccess
	recovery_store_sharding_info.RecoveryStoreShardingInfoAccess
	time_series_collection_rule.TimeSeriesCollectionRuleAccess
	time_series_forwarder_sink.TimeSeriesForwarderSinkAccess
}

func NewApiAccess(client monitoring_client.MonitoringClient) MonitoringApiAccess {

	alertAccess := alert_access.NewApiAlertAccess(client)
	alertingConditionAccess := alerting_condition_access.NewApiAlertingConditionAccess(client)
	alertingPolicyAccess := alerting_policy_access.NewApiAlertingPolicyAccess(client)
	bucketAccess := bucket_access.NewApiBucketAccess(client)
	metricDescriptorAccess := metric_descriptor_access.NewApiMetricDescriptorAccess(client)
	monitoredResourceDescriptorAccess := monitored_resource_descriptor_access.NewApiMonitoredResourceDescriptorAccess(client)
	notificationAccess := notification_access.NewApiNotificationAccess(client)
	notificationChannelAccess := notification_channel_access.NewApiNotificationChannelAccess(client)
	phantomTimeSerieAccess := phantom_time_serie_access.NewApiPhantomTimeSerieAccess(client)
	projectAccess := project_access.NewApiProjectAccess(client)
	recoveryStoreShardingInfoAccess := recovery_store_sharding_info_access.NewApiRecoveryStoreShardingInfoAccess(client)
	timeSeriesCollectionRuleAccess := time_series_collection_rule_access.NewApiTimeSeriesCollectionRuleAccess(client)
	timeSeriesForwarderSinkAccess := time_series_forwarder_sink_access.NewApiTimeSeriesForwarderSinkAccess(client)

	return &apiMonitoringAccess{
		Access: gotenresource.NewCompositeAccess(

			alert.AsAnyCastAccess(alertAccess),
			alerting_condition.AsAnyCastAccess(alertingConditionAccess),
			alerting_policy.AsAnyCastAccess(alertingPolicyAccess),
			bucket.AsAnyCastAccess(bucketAccess),
			metric_descriptor.AsAnyCastAccess(metricDescriptorAccess),
			monitored_resource_descriptor.AsAnyCastAccess(monitoredResourceDescriptorAccess),
			notification.AsAnyCastAccess(notificationAccess),
			notification_channel.AsAnyCastAccess(notificationChannelAccess),
			phantom_time_serie.AsAnyCastAccess(phantomTimeSerieAccess),
			project.AsAnyCastAccess(projectAccess),
			recovery_store_sharding_info.AsAnyCastAccess(recoveryStoreShardingInfoAccess),
			time_series_collection_rule.AsAnyCastAccess(timeSeriesCollectionRuleAccess),
			time_series_forwarder_sink.AsAnyCastAccess(timeSeriesForwarderSinkAccess),
		),

		AlertAccess:                       alertAccess,
		AlertingConditionAccess:           alertingConditionAccess,
		AlertingPolicyAccess:              alertingPolicyAccess,
		BucketAccess:                      bucketAccess,
		MetricDescriptorAccess:            metricDescriptorAccess,
		MonitoredResourceDescriptorAccess: monitoredResourceDescriptorAccess,
		NotificationAccess:                notificationAccess,
		NotificationChannelAccess:         notificationChannelAccess,
		PhantomTimeSerieAccess:            phantomTimeSerieAccess,
		ProjectAccess:                     projectAccess,
		RecoveryStoreShardingInfoAccess:   recoveryStoreShardingInfoAccess,
		TimeSeriesCollectionRuleAccess:    timeSeriesCollectionRuleAccess,
		TimeSeriesForwarderSinkAccess:     timeSeriesForwarderSinkAccess,
	}
}
