syntax = "proto3";

package ntt.devices.v1;

import "edgelq-sdk/common/api/credentials.proto";
import "edgelq-sdk/devices/proto/v1/device.proto";
import "edgelq-sdk/devices/proto/v1/provisioning_approval_request.proto";
import "edgelq-sdk/devices/proto/v1/provisioning_policy.proto";
import "edgelq-sdk/devices/proto/v1/provisioning_policy_change.proto";

option go_package = "github.com/cloudwan/edgelq-sdk/devices/client/v1/provisioning_policy;provisioning_policy_client";
option java_multiple_files = false;
option java_outer_classname = "ProvisioningPolicyCustomProto";
option java_package = "com.ntt.devices.pb.v1";

// Request message for method
// [ProvisionServiceAccountToProvisioningPolicy][ntt.devices.v1.ProvisionServiceAccountToProvisioningPolicy]
message ProvisionServiceAccountToProvisioningPolicyRequest {
  // Name of ntt.devices.v1.ProvisioningPolicy
  string name = 1;
}

// Response message for method
// [ProvisionServiceAccountToProvisioningPolicy][ntt.devices.v1.ProvisionServiceAccountToProvisioningPolicy]
message ProvisionServiceAccountToProvisioningPolicyResponse {
  ntt.api.ServiceAccount service_account = 1;
}

// Request message for method
// [RemoveServiceAccountFromProvisioningPolicy][ntt.devices.v1.RemoveServiceAccountFromProvisioningPolicy]
message RemoveServiceAccountFromProvisioningPolicyRequest {
  // Name of ntt.devices.v1.ProvisioningPolicy
  string name = 1;
}

// Response message for method
// [RemoveServiceAccountFromProvisioningPolicy][ntt.devices.v1.RemoveServiceAccountFromProvisioningPolicy]
message RemoveServiceAccountFromProvisioningPolicyResponse { bool removed = 1; }

// Request message for method
// [ProvisionDeviceViaPolicy][ntt.devices.v1.ProvisionDeviceViaPolicy]
message ProvisionDeviceViaPolicyRequest {
  // Name of ntt.devices.v1.ProvisioningPolicy
  string name = 1;

  Device.Status device_status = 2;

  // external public key to use for service account for this device.
  // If not present, a keypair will be generated by the server.
  string external_pubkey = 3;
}

// Response message for method
// [ProvisionDeviceViaPolicy][ntt.devices.v1.ProvisionDeviceViaPolicy]
message ProvisionDeviceViaPolicyResponse {
  Device device = 1;

  ntt.api.ServiceAccount service_account = 2;
}

// Request message for method
// [RequestProvisioningApproval][ntt.devices.v1.RequestProvisioningApproval]
message RequestProvisioningApprovalRequest {
  // Name of ntt.devices.v1.ProvisioningPolicy
  string name = 1;

  // external public key to use for service account for this device.
  // If not present, a keypair will be generated by the server.
  string external_pubkey = 3;
}

// Response message for method
// [RequestProvisioningApproval][ntt.devices.v1.RequestProvisioningApproval]
message RequestProvisioningApprovalResponse {
  ProvisioningApprovalRequest request = 1;

  ntt.api.ServiceAccount service_account = 2;
}
