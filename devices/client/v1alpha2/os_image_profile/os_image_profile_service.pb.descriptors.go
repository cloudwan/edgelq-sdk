// Code generated by protoc-gen-goten-client
// API: OsImageProfileService
// DO NOT EDIT!!!

package os_image_profile_client

import (
	"google.golang.org/protobuf/proto"

	gotenclient "github.com/cloudwan/goten-sdk/runtime/client"
	gotenresource "github.com/cloudwan/goten-sdk/runtime/resource"
)

// proto imports
import (
	os_image_profile "github.com/cloudwan/edgelq-sdk/devices/resources/v1alpha2/os_image_profile"
	empty "github.com/golang/protobuf/ptypes/empty"
)

// Reference imports to suppress errors if they are not otherwise used.
var (
	_ = new(proto.Message)
	_ = new(gotenclient.MethodDescriptor)
	_ = gotenresource.WildcardId
)

// make sure we're using proto imports
var (
	_ = &os_image_profile.OsImageProfile{}
	_ = &empty.Empty{}
)

var (
	descriptorsInitialized            bool
	osImageProfileServiceDescriptor   *OsImageProfileServiceDescriptor
	getOsImageProfileDescriptor       *GetOsImageProfileDescriptor
	batchGetOsImageProfilesDescriptor *BatchGetOsImageProfilesDescriptor
	listOsImageProfilesDescriptor     *ListOsImageProfilesDescriptor
	watchOsImageProfileDescriptor     *WatchOsImageProfileDescriptor
	watchOsImageProfilesDescriptor    *WatchOsImageProfilesDescriptor
	createOsImageProfileDescriptor    *CreateOsImageProfileDescriptor
	updateOsImageProfileDescriptor    *UpdateOsImageProfileDescriptor
	deleteOsImageProfileDescriptor    *DeleteOsImageProfileDescriptor
)

type GetOsImageProfileDescriptor struct{}

type GetOsImageProfileDescriptorClientMsgHandle struct{}

type GetOsImageProfileDescriptorServerMsgHandle struct{}

func (d *GetOsImageProfileDescriptor) NewEmptyClientMsg() proto.Message {
	return &GetOsImageProfileRequest{}
}

func (d *GetOsImageProfileDescriptor) NewEmptyServerMsg() proto.Message {
	return &os_image_profile.OsImageProfile{}
}

func (d *GetOsImageProfileDescriptor) IsUnary() bool {
	return true
}

func (d *GetOsImageProfileDescriptor) IsClientStream() bool {
	return false
}

func (d *GetOsImageProfileDescriptor) IsServerStream() bool {
	return false
}

func (d *GetOsImageProfileDescriptor) IsCollection() bool {
	return false
}

func (d *GetOsImageProfileDescriptor) IsPlural() bool {
	return false
}

func (d *GetOsImageProfileDescriptor) HasResource() bool {
	return true
}

func (d *GetOsImageProfileDescriptor) RequestHasResourceBody() bool {
	return false
}

func (d *GetOsImageProfileDescriptor) GetVerb() string {
	return "get"
}

func (d *GetOsImageProfileDescriptor) GetMethodName() string {
	return "GetOsImageProfile"
}

func (d *GetOsImageProfileDescriptor) GetFullMethodName() string {
	return "/ntt.devices.v1alpha2.OsImageProfileService/GetOsImageProfile"
}

func (d *GetOsImageProfileDescriptor) GetProtoPkgName() string {
	return "ntt.devices.v1alpha2"
}

func (d *GetOsImageProfileDescriptor) GetApiName() string {
	return "OsImageProfileService"
}

func (d *GetOsImageProfileDescriptor) GetServiceDomain() string {
	return "devices.edgelq.com"
}

func (d *GetOsImageProfileDescriptor) GetServiceVersion() string {
	return "v1alpha2"
}

func (d *GetOsImageProfileDescriptor) GetApiDescriptor() gotenclient.ApiDescriptor {
	return osImageProfileServiceDescriptor
}

func (d *GetOsImageProfileDescriptor) GetResourceDescriptor() gotenresource.Descriptor {
	return os_image_profile.GetDescriptor()
}

func (d *GetOsImageProfileDescriptor) GetClientMsgReflectHandle() gotenclient.MethodMsgHandle {
	return &GetOsImageProfileDescriptorClientMsgHandle{}
}

func (d *GetOsImageProfileDescriptor) GetServerMsgReflectHandle() gotenclient.MethodMsgHandle {
	return &GetOsImageProfileDescriptorServerMsgHandle{}
}

func (h *GetOsImageProfileDescriptorClientMsgHandle) ExtractResourceName(msg proto.Message) gotenresource.Name {
	typedMsg := msg.(*GetOsImageProfileRequest)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractResourceName(*GetOsImageProfileRequest) *os_image_profile.Name
	})
	if ok {
		return override.OverrideExtractResourceName(typedMsg)
	}
	{
		if ref := typedMsg.GetName(); ref != nil {
			return &ref.Name
		}
	}
	return (*os_image_profile.Name)(nil)
}

func (h *GetOsImageProfileDescriptorClientMsgHandle) ExtractResourceNames(msg proto.Message) gotenresource.NameList {
	typedMsg := msg.(*GetOsImageProfileRequest)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractResourceNames(*GetOsImageProfileRequest) []*os_image_profile.Name
	})
	if ok {
		return os_image_profile.OsImageProfileNameList(override.OverrideExtractResourceNames(typedMsg))
	}
	return nil
}

func (h *GetOsImageProfileDescriptorClientMsgHandle) ExtractCollectionName(msg proto.Message) gotenresource.Name {
	typedMsg := msg.(*GetOsImageProfileRequest)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractCollectionName(*GetOsImageProfileRequest) *os_image_profile.ParentName
	})
	if ok {
		return override.OverrideExtractCollectionName(typedMsg)
	}
	return nil
}

func (h *GetOsImageProfileDescriptorServerMsgHandle) ExtractResourceName(msg proto.Message) gotenresource.Name {
	typedMsg := msg.(*os_image_profile.OsImageProfile)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractResourceName(*os_image_profile.OsImageProfile) *os_image_profile.Name
	})
	if ok {
		return override.OverrideExtractResourceName(typedMsg)
	}
	{
		if name := typedMsg.GetName(); name != nil {
			return name
		}
	}
	return (*os_image_profile.Name)(nil)
}

func (h *GetOsImageProfileDescriptorServerMsgHandle) ExtractResourceNames(msg proto.Message) gotenresource.NameList {
	typedMsg := msg.(*os_image_profile.OsImageProfile)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractResourceNames(*os_image_profile.OsImageProfile) []*os_image_profile.Name
	})
	if ok {
		return os_image_profile.OsImageProfileNameList(override.OverrideExtractResourceNames(typedMsg))
	}
	return nil
}

func (h *GetOsImageProfileDescriptorServerMsgHandle) ExtractCollectionName(msg proto.Message) gotenresource.Name {
	typedMsg := msg.(*os_image_profile.OsImageProfile)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractCollectionName(*os_image_profile.OsImageProfile) *os_image_profile.ParentName
	})
	if ok {
		return override.OverrideExtractCollectionName(typedMsg)
	}
	return nil
}

func GetGetOsImageProfileDescriptor() *GetOsImageProfileDescriptor {
	return getOsImageProfileDescriptor
}

type BatchGetOsImageProfilesDescriptor struct{}

type BatchGetOsImageProfilesDescriptorClientMsgHandle struct{}

type BatchGetOsImageProfilesDescriptorServerMsgHandle struct{}

func (d *BatchGetOsImageProfilesDescriptor) NewEmptyClientMsg() proto.Message {
	return &BatchGetOsImageProfilesRequest{}
}

func (d *BatchGetOsImageProfilesDescriptor) NewEmptyServerMsg() proto.Message {
	return &BatchGetOsImageProfilesResponse{}
}

func (d *BatchGetOsImageProfilesDescriptor) IsUnary() bool {
	return true
}

func (d *BatchGetOsImageProfilesDescriptor) IsClientStream() bool {
	return false
}

func (d *BatchGetOsImageProfilesDescriptor) IsServerStream() bool {
	return false
}

func (d *BatchGetOsImageProfilesDescriptor) IsCollection() bool {
	return false
}

func (d *BatchGetOsImageProfilesDescriptor) IsPlural() bool {
	return true
}

func (d *BatchGetOsImageProfilesDescriptor) HasResource() bool {
	return true
}

func (d *BatchGetOsImageProfilesDescriptor) RequestHasResourceBody() bool {
	return false
}

func (d *BatchGetOsImageProfilesDescriptor) GetVerb() string {
	return "batchGet"
}

func (d *BatchGetOsImageProfilesDescriptor) GetMethodName() string {
	return "BatchGetOsImageProfiles"
}

func (d *BatchGetOsImageProfilesDescriptor) GetFullMethodName() string {
	return "/ntt.devices.v1alpha2.OsImageProfileService/BatchGetOsImageProfiles"
}

func (d *BatchGetOsImageProfilesDescriptor) GetProtoPkgName() string {
	return "ntt.devices.v1alpha2"
}

func (d *BatchGetOsImageProfilesDescriptor) GetApiName() string {
	return "OsImageProfileService"
}

func (d *BatchGetOsImageProfilesDescriptor) GetServiceDomain() string {
	return "devices.edgelq.com"
}

func (d *BatchGetOsImageProfilesDescriptor) GetServiceVersion() string {
	return "v1alpha2"
}

func (d *BatchGetOsImageProfilesDescriptor) GetApiDescriptor() gotenclient.ApiDescriptor {
	return osImageProfileServiceDescriptor
}

func (d *BatchGetOsImageProfilesDescriptor) GetResourceDescriptor() gotenresource.Descriptor {
	return os_image_profile.GetDescriptor()
}

func (d *BatchGetOsImageProfilesDescriptor) GetClientMsgReflectHandle() gotenclient.MethodMsgHandle {
	return &BatchGetOsImageProfilesDescriptorClientMsgHandle{}
}

func (d *BatchGetOsImageProfilesDescriptor) GetServerMsgReflectHandle() gotenclient.MethodMsgHandle {
	return &BatchGetOsImageProfilesDescriptorServerMsgHandle{}
}

func (h *BatchGetOsImageProfilesDescriptorClientMsgHandle) ExtractResourceName(msg proto.Message) gotenresource.Name {
	typedMsg := msg.(*BatchGetOsImageProfilesRequest)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractResourceName(*BatchGetOsImageProfilesRequest) *os_image_profile.Name
	})
	if ok {
		return override.OverrideExtractResourceName(typedMsg)
	}
	return nil
}

func (h *BatchGetOsImageProfilesDescriptorClientMsgHandle) ExtractResourceNames(msg proto.Message) gotenresource.NameList {
	typedMsg := msg.(*BatchGetOsImageProfilesRequest)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractResourceNames(*BatchGetOsImageProfilesRequest) []*os_image_profile.Name
	})
	if ok {
		return os_image_profile.OsImageProfileNameList(override.OverrideExtractResourceNames(typedMsg))
	}
	{
		if refs := typedMsg.GetNames(); len(refs) > 0 {
			list := make(os_image_profile.OsImageProfileNameList, 0, len(refs))
			for _, ref := range refs {
				list = append(list, &ref.Name)
			}
			return list
		}
	}
	return (os_image_profile.OsImageProfileNameList)(nil)
}

func (h *BatchGetOsImageProfilesDescriptorClientMsgHandle) ExtractCollectionName(msg proto.Message) gotenresource.Name {
	typedMsg := msg.(*BatchGetOsImageProfilesRequest)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractCollectionName(*BatchGetOsImageProfilesRequest) *os_image_profile.ParentName
	})
	if ok {
		return override.OverrideExtractCollectionName(typedMsg)
	}
	return nil
}

func (h *BatchGetOsImageProfilesDescriptorServerMsgHandle) ExtractResourceName(msg proto.Message) gotenresource.Name {
	typedMsg := msg.(*BatchGetOsImageProfilesResponse)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractResourceName(*BatchGetOsImageProfilesResponse) *os_image_profile.Name
	})
	if ok {
		return override.OverrideExtractResourceName(typedMsg)
	}
	return nil
}

func (h *BatchGetOsImageProfilesDescriptorServerMsgHandle) ExtractResourceNames(msg proto.Message) gotenresource.NameList {
	typedMsg := msg.(*BatchGetOsImageProfilesResponse)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractResourceNames(*BatchGetOsImageProfilesResponse) []*os_image_profile.Name
	})
	if ok {
		return os_image_profile.OsImageProfileNameList(override.OverrideExtractResourceNames(typedMsg))
	}
	{
		if resources := typedMsg.GetOsImageProfiles(); len(resources) > 0 {
			list := make(os_image_profile.OsImageProfileNameList, 0, len(resources))
			for _, res := range resources {
				list = append(list, res.GetName())
			}
			return list
		}
	}
	return (os_image_profile.OsImageProfileNameList)(nil)
}

func (h *BatchGetOsImageProfilesDescriptorServerMsgHandle) ExtractCollectionName(msg proto.Message) gotenresource.Name {
	typedMsg := msg.(*BatchGetOsImageProfilesResponse)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractCollectionName(*BatchGetOsImageProfilesResponse) *os_image_profile.ParentName
	})
	if ok {
		return override.OverrideExtractCollectionName(typedMsg)
	}
	return nil
}

func GetBatchGetOsImageProfilesDescriptor() *BatchGetOsImageProfilesDescriptor {
	return batchGetOsImageProfilesDescriptor
}

type ListOsImageProfilesDescriptor struct{}

type ListOsImageProfilesDescriptorClientMsgHandle struct{}

type ListOsImageProfilesDescriptorServerMsgHandle struct{}

func (d *ListOsImageProfilesDescriptor) NewEmptyClientMsg() proto.Message {
	return &ListOsImageProfilesRequest{}
}

func (d *ListOsImageProfilesDescriptor) NewEmptyServerMsg() proto.Message {
	return &ListOsImageProfilesResponse{}
}

func (d *ListOsImageProfilesDescriptor) IsUnary() bool {
	return true
}

func (d *ListOsImageProfilesDescriptor) IsClientStream() bool {
	return false
}

func (d *ListOsImageProfilesDescriptor) IsServerStream() bool {
	return false
}

func (d *ListOsImageProfilesDescriptor) IsCollection() bool {
	return true
}

func (d *ListOsImageProfilesDescriptor) IsPlural() bool {
	return true
}

func (d *ListOsImageProfilesDescriptor) HasResource() bool {
	return true
}

func (d *ListOsImageProfilesDescriptor) RequestHasResourceBody() bool {
	return false
}

func (d *ListOsImageProfilesDescriptor) GetVerb() string {
	return "list"
}

func (d *ListOsImageProfilesDescriptor) GetMethodName() string {
	return "ListOsImageProfiles"
}

func (d *ListOsImageProfilesDescriptor) GetFullMethodName() string {
	return "/ntt.devices.v1alpha2.OsImageProfileService/ListOsImageProfiles"
}

func (d *ListOsImageProfilesDescriptor) GetProtoPkgName() string {
	return "ntt.devices.v1alpha2"
}

func (d *ListOsImageProfilesDescriptor) GetApiName() string {
	return "OsImageProfileService"
}

func (d *ListOsImageProfilesDescriptor) GetServiceDomain() string {
	return "devices.edgelq.com"
}

func (d *ListOsImageProfilesDescriptor) GetServiceVersion() string {
	return "v1alpha2"
}

func (d *ListOsImageProfilesDescriptor) GetApiDescriptor() gotenclient.ApiDescriptor {
	return osImageProfileServiceDescriptor
}

func (d *ListOsImageProfilesDescriptor) GetResourceDescriptor() gotenresource.Descriptor {
	return os_image_profile.GetDescriptor()
}

func (d *ListOsImageProfilesDescriptor) GetClientMsgReflectHandle() gotenclient.MethodMsgHandle {
	return &ListOsImageProfilesDescriptorClientMsgHandle{}
}

func (d *ListOsImageProfilesDescriptor) GetServerMsgReflectHandle() gotenclient.MethodMsgHandle {
	return &ListOsImageProfilesDescriptorServerMsgHandle{}
}

func (h *ListOsImageProfilesDescriptorClientMsgHandle) ExtractResourceName(msg proto.Message) gotenresource.Name {
	typedMsg := msg.(*ListOsImageProfilesRequest)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractResourceName(*ListOsImageProfilesRequest) *os_image_profile.Name
	})
	if ok {
		return override.OverrideExtractResourceName(typedMsg)
	}
	return nil
}

func (h *ListOsImageProfilesDescriptorClientMsgHandle) ExtractResourceNames(msg proto.Message) gotenresource.NameList {
	typedMsg := msg.(*ListOsImageProfilesRequest)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractResourceNames(*ListOsImageProfilesRequest) []*os_image_profile.Name
	})
	if ok {
		return os_image_profile.OsImageProfileNameList(override.OverrideExtractResourceNames(typedMsg))
	}
	return nil
}

func (h *ListOsImageProfilesDescriptorClientMsgHandle) ExtractCollectionName(msg proto.Message) gotenresource.Name {
	typedMsg := msg.(*ListOsImageProfilesRequest)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractCollectionName(*ListOsImageProfilesRequest) *os_image_profile.ParentName
	})
	if ok {
		return override.OverrideExtractCollectionName(typedMsg)
	}
	{
		if parentName := typedMsg.GetParent(); parentName != nil {
			return parentName
		}
	}
	return (*os_image_profile.ParentName)(nil)
}

func (h *ListOsImageProfilesDescriptorServerMsgHandle) ExtractResourceName(msg proto.Message) gotenresource.Name {
	typedMsg := msg.(*ListOsImageProfilesResponse)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractResourceName(*ListOsImageProfilesResponse) *os_image_profile.Name
	})
	if ok {
		return override.OverrideExtractResourceName(typedMsg)
	}
	return nil
}

func (h *ListOsImageProfilesDescriptorServerMsgHandle) ExtractResourceNames(msg proto.Message) gotenresource.NameList {
	typedMsg := msg.(*ListOsImageProfilesResponse)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractResourceNames(*ListOsImageProfilesResponse) []*os_image_profile.Name
	})
	if ok {
		return os_image_profile.OsImageProfileNameList(override.OverrideExtractResourceNames(typedMsg))
	}
	{
		if resources := typedMsg.GetOsImageProfiles(); len(resources) > 0 {
			list := make(os_image_profile.OsImageProfileNameList, 0, len(resources))
			for _, res := range resources {
				list = append(list, res.GetName())
			}
			return list
		}
	}
	return (os_image_profile.OsImageProfileNameList)(nil)
}

func (h *ListOsImageProfilesDescriptorServerMsgHandle) ExtractCollectionName(msg proto.Message) gotenresource.Name {
	typedMsg := msg.(*ListOsImageProfilesResponse)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractCollectionName(*ListOsImageProfilesResponse) *os_image_profile.ParentName
	})
	if ok {
		return override.OverrideExtractCollectionName(typedMsg)
	}
	return nil
}

func GetListOsImageProfilesDescriptor() *ListOsImageProfilesDescriptor {
	return listOsImageProfilesDescriptor
}

type WatchOsImageProfileDescriptor struct{}

type WatchOsImageProfileDescriptorClientMsgHandle struct{}

type WatchOsImageProfileDescriptorServerMsgHandle struct{}

func (d *WatchOsImageProfileDescriptor) NewEmptyClientMsg() proto.Message {
	return &WatchOsImageProfileRequest{}
}

func (d *WatchOsImageProfileDescriptor) NewEmptyServerMsg() proto.Message {
	return &WatchOsImageProfileResponse{}
}

func (d *WatchOsImageProfileDescriptor) IsUnary() bool {
	return false
}

func (d *WatchOsImageProfileDescriptor) IsClientStream() bool {
	return false
}

func (d *WatchOsImageProfileDescriptor) IsServerStream() bool {
	return true
}

func (d *WatchOsImageProfileDescriptor) IsCollection() bool {
	return false
}

func (d *WatchOsImageProfileDescriptor) IsPlural() bool {
	return false
}

func (d *WatchOsImageProfileDescriptor) HasResource() bool {
	return true
}

func (d *WatchOsImageProfileDescriptor) RequestHasResourceBody() bool {
	return false
}

func (d *WatchOsImageProfileDescriptor) GetVerb() string {
	return "watch"
}

func (d *WatchOsImageProfileDescriptor) GetMethodName() string {
	return "WatchOsImageProfile"
}

func (d *WatchOsImageProfileDescriptor) GetFullMethodName() string {
	return "/ntt.devices.v1alpha2.OsImageProfileService/WatchOsImageProfile"
}

func (d *WatchOsImageProfileDescriptor) GetProtoPkgName() string {
	return "ntt.devices.v1alpha2"
}

func (d *WatchOsImageProfileDescriptor) GetApiName() string {
	return "OsImageProfileService"
}

func (d *WatchOsImageProfileDescriptor) GetServiceDomain() string {
	return "devices.edgelq.com"
}

func (d *WatchOsImageProfileDescriptor) GetServiceVersion() string {
	return "v1alpha2"
}

func (d *WatchOsImageProfileDescriptor) GetApiDescriptor() gotenclient.ApiDescriptor {
	return osImageProfileServiceDescriptor
}

func (d *WatchOsImageProfileDescriptor) GetResourceDescriptor() gotenresource.Descriptor {
	return os_image_profile.GetDescriptor()
}

func (d *WatchOsImageProfileDescriptor) GetClientMsgReflectHandle() gotenclient.MethodMsgHandle {
	return &WatchOsImageProfileDescriptorClientMsgHandle{}
}

func (d *WatchOsImageProfileDescriptor) GetServerMsgReflectHandle() gotenclient.MethodMsgHandle {
	return &WatchOsImageProfileDescriptorServerMsgHandle{}
}

func (h *WatchOsImageProfileDescriptorClientMsgHandle) ExtractResourceName(msg proto.Message) gotenresource.Name {
	typedMsg := msg.(*WatchOsImageProfileRequest)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractResourceName(*WatchOsImageProfileRequest) *os_image_profile.Name
	})
	if ok {
		return override.OverrideExtractResourceName(typedMsg)
	}
	{
		if ref := typedMsg.GetName(); ref != nil {
			return &ref.Name
		}
	}
	return (*os_image_profile.Name)(nil)
}

func (h *WatchOsImageProfileDescriptorClientMsgHandle) ExtractResourceNames(msg proto.Message) gotenresource.NameList {
	typedMsg := msg.(*WatchOsImageProfileRequest)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractResourceNames(*WatchOsImageProfileRequest) []*os_image_profile.Name
	})
	if ok {
		return os_image_profile.OsImageProfileNameList(override.OverrideExtractResourceNames(typedMsg))
	}
	return nil
}

func (h *WatchOsImageProfileDescriptorClientMsgHandle) ExtractCollectionName(msg proto.Message) gotenresource.Name {
	typedMsg := msg.(*WatchOsImageProfileRequest)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractCollectionName(*WatchOsImageProfileRequest) *os_image_profile.ParentName
	})
	if ok {
		return override.OverrideExtractCollectionName(typedMsg)
	}
	return nil
}

func (h *WatchOsImageProfileDescriptorServerMsgHandle) ExtractResourceName(msg proto.Message) gotenresource.Name {
	typedMsg := msg.(*WatchOsImageProfileResponse)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractResourceName(*WatchOsImageProfileResponse) *os_image_profile.Name
	})
	if ok {
		return override.OverrideExtractResourceName(typedMsg)
	}
	{
		if resChange := typedMsg.GetChange(); resChange != nil {
			switch tResChange := resChange.ChangeType.(type) {
			case *os_image_profile.OsImageProfileChange_Added_:
				return tResChange.Added.GetOsImageProfile().GetName()
			case *os_image_profile.OsImageProfileChange_Modified_:
				return tResChange.Modified.GetName()
			case *os_image_profile.OsImageProfileChange_Removed_:
				return tResChange.Removed.GetName()
			case *os_image_profile.OsImageProfileChange_Current_:
				return tResChange.Current.GetOsImageProfile().GetName()
			}
		}
	}
	return (*os_image_profile.Name)(nil)
}

func (h *WatchOsImageProfileDescriptorServerMsgHandle) ExtractResourceNames(msg proto.Message) gotenresource.NameList {
	typedMsg := msg.(*WatchOsImageProfileResponse)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractResourceNames(*WatchOsImageProfileResponse) []*os_image_profile.Name
	})
	if ok {
		return os_image_profile.OsImageProfileNameList(override.OverrideExtractResourceNames(typedMsg))
	}
	return nil
}

func (h *WatchOsImageProfileDescriptorServerMsgHandle) ExtractCollectionName(msg proto.Message) gotenresource.Name {
	typedMsg := msg.(*WatchOsImageProfileResponse)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractCollectionName(*WatchOsImageProfileResponse) *os_image_profile.ParentName
	})
	if ok {
		return override.OverrideExtractCollectionName(typedMsg)
	}
	return nil
}

func GetWatchOsImageProfileDescriptor() *WatchOsImageProfileDescriptor {
	return watchOsImageProfileDescriptor
}

type WatchOsImageProfilesDescriptor struct{}

type WatchOsImageProfilesDescriptorClientMsgHandle struct{}

type WatchOsImageProfilesDescriptorServerMsgHandle struct{}

func (d *WatchOsImageProfilesDescriptor) NewEmptyClientMsg() proto.Message {
	return &WatchOsImageProfilesRequest{}
}

func (d *WatchOsImageProfilesDescriptor) NewEmptyServerMsg() proto.Message {
	return &WatchOsImageProfilesResponse{}
}

func (d *WatchOsImageProfilesDescriptor) IsUnary() bool {
	return false
}

func (d *WatchOsImageProfilesDescriptor) IsClientStream() bool {
	return false
}

func (d *WatchOsImageProfilesDescriptor) IsServerStream() bool {
	return true
}

func (d *WatchOsImageProfilesDescriptor) IsCollection() bool {
	return true
}

func (d *WatchOsImageProfilesDescriptor) IsPlural() bool {
	return true
}

func (d *WatchOsImageProfilesDescriptor) HasResource() bool {
	return true
}

func (d *WatchOsImageProfilesDescriptor) RequestHasResourceBody() bool {
	return false
}

func (d *WatchOsImageProfilesDescriptor) GetVerb() string {
	return "watch"
}

func (d *WatchOsImageProfilesDescriptor) GetMethodName() string {
	return "WatchOsImageProfiles"
}

func (d *WatchOsImageProfilesDescriptor) GetFullMethodName() string {
	return "/ntt.devices.v1alpha2.OsImageProfileService/WatchOsImageProfiles"
}

func (d *WatchOsImageProfilesDescriptor) GetProtoPkgName() string {
	return "ntt.devices.v1alpha2"
}

func (d *WatchOsImageProfilesDescriptor) GetApiName() string {
	return "OsImageProfileService"
}

func (d *WatchOsImageProfilesDescriptor) GetServiceDomain() string {
	return "devices.edgelq.com"
}

func (d *WatchOsImageProfilesDescriptor) GetServiceVersion() string {
	return "v1alpha2"
}

func (d *WatchOsImageProfilesDescriptor) GetApiDescriptor() gotenclient.ApiDescriptor {
	return osImageProfileServiceDescriptor
}

func (d *WatchOsImageProfilesDescriptor) GetResourceDescriptor() gotenresource.Descriptor {
	return os_image_profile.GetDescriptor()
}

func (d *WatchOsImageProfilesDescriptor) GetClientMsgReflectHandle() gotenclient.MethodMsgHandle {
	return &WatchOsImageProfilesDescriptorClientMsgHandle{}
}

func (d *WatchOsImageProfilesDescriptor) GetServerMsgReflectHandle() gotenclient.MethodMsgHandle {
	return &WatchOsImageProfilesDescriptorServerMsgHandle{}
}

func (h *WatchOsImageProfilesDescriptorClientMsgHandle) ExtractResourceName(msg proto.Message) gotenresource.Name {
	typedMsg := msg.(*WatchOsImageProfilesRequest)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractResourceName(*WatchOsImageProfilesRequest) *os_image_profile.Name
	})
	if ok {
		return override.OverrideExtractResourceName(typedMsg)
	}
	return nil
}

func (h *WatchOsImageProfilesDescriptorClientMsgHandle) ExtractResourceNames(msg proto.Message) gotenresource.NameList {
	typedMsg := msg.(*WatchOsImageProfilesRequest)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractResourceNames(*WatchOsImageProfilesRequest) []*os_image_profile.Name
	})
	if ok {
		return os_image_profile.OsImageProfileNameList(override.OverrideExtractResourceNames(typedMsg))
	}
	return nil
}

func (h *WatchOsImageProfilesDescriptorClientMsgHandle) ExtractCollectionName(msg proto.Message) gotenresource.Name {
	typedMsg := msg.(*WatchOsImageProfilesRequest)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractCollectionName(*WatchOsImageProfilesRequest) *os_image_profile.ParentName
	})
	if ok {
		return override.OverrideExtractCollectionName(typedMsg)
	}
	{
		if ref := typedMsg.GetParent(); ref != nil {
			return &ref.ParentName
		}
	}
	return (*os_image_profile.ParentName)(nil)
}

func (h *WatchOsImageProfilesDescriptorServerMsgHandle) ExtractResourceName(msg proto.Message) gotenresource.Name {
	typedMsg := msg.(*WatchOsImageProfilesResponse)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractResourceName(*WatchOsImageProfilesResponse) *os_image_profile.Name
	})
	if ok {
		return override.OverrideExtractResourceName(typedMsg)
	}
	return nil
}

func (h *WatchOsImageProfilesDescriptorServerMsgHandle) ExtractResourceNames(msg proto.Message) gotenresource.NameList {
	typedMsg := msg.(*WatchOsImageProfilesResponse)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractResourceNames(*WatchOsImageProfilesResponse) []*os_image_profile.Name
	})
	if ok {
		return os_image_profile.OsImageProfileNameList(override.OverrideExtractResourceNames(typedMsg))
	}
	{
		if resChanges := typedMsg.GetOsImageProfileChanges(); len(resChanges) > 0 {
			list := make(os_image_profile.OsImageProfileNameList, 0, len(resChanges))
			for _, resChange := range resChanges {
				switch tResChange := resChange.ChangeType.(type) {
				case *os_image_profile.OsImageProfileChange_Added_:
					list = append(list, tResChange.Added.GetOsImageProfile().GetName())
				case *os_image_profile.OsImageProfileChange_Modified_:
					list = append(list, tResChange.Modified.GetName())
				case *os_image_profile.OsImageProfileChange_Removed_:
					list = append(list, tResChange.Removed.GetName())
				case *os_image_profile.OsImageProfileChange_Current_:
					list = append(list, tResChange.Current.GetOsImageProfile().GetName())
				}
			}
			return list
		}
	}
	return (os_image_profile.OsImageProfileNameList)(nil)
}

func (h *WatchOsImageProfilesDescriptorServerMsgHandle) ExtractCollectionName(msg proto.Message) gotenresource.Name {
	typedMsg := msg.(*WatchOsImageProfilesResponse)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractCollectionName(*WatchOsImageProfilesResponse) *os_image_profile.ParentName
	})
	if ok {
		return override.OverrideExtractCollectionName(typedMsg)
	}
	return nil
}

func GetWatchOsImageProfilesDescriptor() *WatchOsImageProfilesDescriptor {
	return watchOsImageProfilesDescriptor
}

type CreateOsImageProfileDescriptor struct{}

type CreateOsImageProfileDescriptorClientMsgHandle struct{}

type CreateOsImageProfileDescriptorServerMsgHandle struct{}

func (d *CreateOsImageProfileDescriptor) NewEmptyClientMsg() proto.Message {
	return &CreateOsImageProfileRequest{}
}

func (d *CreateOsImageProfileDescriptor) NewEmptyServerMsg() proto.Message {
	return &os_image_profile.OsImageProfile{}
}

func (d *CreateOsImageProfileDescriptor) IsUnary() bool {
	return true
}

func (d *CreateOsImageProfileDescriptor) IsClientStream() bool {
	return false
}

func (d *CreateOsImageProfileDescriptor) IsServerStream() bool {
	return false
}

func (d *CreateOsImageProfileDescriptor) IsCollection() bool {
	return true
}

func (d *CreateOsImageProfileDescriptor) IsPlural() bool {
	return false
}

func (d *CreateOsImageProfileDescriptor) HasResource() bool {
	return true
}

func (d *CreateOsImageProfileDescriptor) RequestHasResourceBody() bool {
	return true
}

func (d *CreateOsImageProfileDescriptor) GetVerb() string {
	return "create"
}

func (d *CreateOsImageProfileDescriptor) GetMethodName() string {
	return "CreateOsImageProfile"
}

func (d *CreateOsImageProfileDescriptor) GetFullMethodName() string {
	return "/ntt.devices.v1alpha2.OsImageProfileService/CreateOsImageProfile"
}

func (d *CreateOsImageProfileDescriptor) GetProtoPkgName() string {
	return "ntt.devices.v1alpha2"
}

func (d *CreateOsImageProfileDescriptor) GetApiName() string {
	return "OsImageProfileService"
}

func (d *CreateOsImageProfileDescriptor) GetServiceDomain() string {
	return "devices.edgelq.com"
}

func (d *CreateOsImageProfileDescriptor) GetServiceVersion() string {
	return "v1alpha2"
}

func (d *CreateOsImageProfileDescriptor) GetApiDescriptor() gotenclient.ApiDescriptor {
	return osImageProfileServiceDescriptor
}

func (d *CreateOsImageProfileDescriptor) GetResourceDescriptor() gotenresource.Descriptor {
	return os_image_profile.GetDescriptor()
}

func (d *CreateOsImageProfileDescriptor) GetClientMsgReflectHandle() gotenclient.MethodMsgHandle {
	return &CreateOsImageProfileDescriptorClientMsgHandle{}
}

func (d *CreateOsImageProfileDescriptor) GetServerMsgReflectHandle() gotenclient.MethodMsgHandle {
	return &CreateOsImageProfileDescriptorServerMsgHandle{}
}

func (h *CreateOsImageProfileDescriptorClientMsgHandle) ExtractResourceName(msg proto.Message) gotenresource.Name {
	typedMsg := msg.(*CreateOsImageProfileRequest)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractResourceName(*CreateOsImageProfileRequest) *os_image_profile.Name
	})
	if ok {
		return override.OverrideExtractResourceName(typedMsg)
	}
	{
		res := typedMsg.GetOsImageProfile()
		if name := res.GetName(); name != nil {
			return name
		}
	}
	return (*os_image_profile.Name)(nil)
}

func (h *CreateOsImageProfileDescriptorClientMsgHandle) ExtractResourceNames(msg proto.Message) gotenresource.NameList {
	typedMsg := msg.(*CreateOsImageProfileRequest)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractResourceNames(*CreateOsImageProfileRequest) []*os_image_profile.Name
	})
	if ok {
		return os_image_profile.OsImageProfileNameList(override.OverrideExtractResourceNames(typedMsg))
	}
	return nil
}

func (h *CreateOsImageProfileDescriptorClientMsgHandle) ExtractCollectionName(msg proto.Message) gotenresource.Name {
	typedMsg := msg.(*CreateOsImageProfileRequest)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractCollectionName(*CreateOsImageProfileRequest) *os_image_profile.ParentName
	})
	if ok {
		return override.OverrideExtractCollectionName(typedMsg)
	}
	{
		if ref := typedMsg.GetParent(); ref != nil {
			return &ref.ParentName
		}
	}
	return (*os_image_profile.ParentName)(nil)
}

func (h *CreateOsImageProfileDescriptorServerMsgHandle) ExtractResourceName(msg proto.Message) gotenresource.Name {
	typedMsg := msg.(*os_image_profile.OsImageProfile)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractResourceName(*os_image_profile.OsImageProfile) *os_image_profile.Name
	})
	if ok {
		return override.OverrideExtractResourceName(typedMsg)
	}
	{
		if name := typedMsg.GetName(); name != nil {
			return name
		}
	}
	return (*os_image_profile.Name)(nil)
}

func (h *CreateOsImageProfileDescriptorServerMsgHandle) ExtractResourceNames(msg proto.Message) gotenresource.NameList {
	typedMsg := msg.(*os_image_profile.OsImageProfile)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractResourceNames(*os_image_profile.OsImageProfile) []*os_image_profile.Name
	})
	if ok {
		return os_image_profile.OsImageProfileNameList(override.OverrideExtractResourceNames(typedMsg))
	}
	return nil
}

func (h *CreateOsImageProfileDescriptorServerMsgHandle) ExtractCollectionName(msg proto.Message) gotenresource.Name {
	typedMsg := msg.(*os_image_profile.OsImageProfile)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractCollectionName(*os_image_profile.OsImageProfile) *os_image_profile.ParentName
	})
	if ok {
		return override.OverrideExtractCollectionName(typedMsg)
	}
	return nil
}

func GetCreateOsImageProfileDescriptor() *CreateOsImageProfileDescriptor {
	return createOsImageProfileDescriptor
}

type UpdateOsImageProfileDescriptor struct{}

type UpdateOsImageProfileDescriptorClientMsgHandle struct{}

type UpdateOsImageProfileDescriptorServerMsgHandle struct{}

func (d *UpdateOsImageProfileDescriptor) NewEmptyClientMsg() proto.Message {
	return &UpdateOsImageProfileRequest{}
}

func (d *UpdateOsImageProfileDescriptor) NewEmptyServerMsg() proto.Message {
	return &os_image_profile.OsImageProfile{}
}

func (d *UpdateOsImageProfileDescriptor) IsUnary() bool {
	return true
}

func (d *UpdateOsImageProfileDescriptor) IsClientStream() bool {
	return false
}

func (d *UpdateOsImageProfileDescriptor) IsServerStream() bool {
	return false
}

func (d *UpdateOsImageProfileDescriptor) IsCollection() bool {
	return false
}

func (d *UpdateOsImageProfileDescriptor) IsPlural() bool {
	return false
}

func (d *UpdateOsImageProfileDescriptor) HasResource() bool {
	return true
}

func (d *UpdateOsImageProfileDescriptor) RequestHasResourceBody() bool {
	return true
}

func (d *UpdateOsImageProfileDescriptor) GetVerb() string {
	return "update"
}

func (d *UpdateOsImageProfileDescriptor) GetMethodName() string {
	return "UpdateOsImageProfile"
}

func (d *UpdateOsImageProfileDescriptor) GetFullMethodName() string {
	return "/ntt.devices.v1alpha2.OsImageProfileService/UpdateOsImageProfile"
}

func (d *UpdateOsImageProfileDescriptor) GetProtoPkgName() string {
	return "ntt.devices.v1alpha2"
}

func (d *UpdateOsImageProfileDescriptor) GetApiName() string {
	return "OsImageProfileService"
}

func (d *UpdateOsImageProfileDescriptor) GetServiceDomain() string {
	return "devices.edgelq.com"
}

func (d *UpdateOsImageProfileDescriptor) GetServiceVersion() string {
	return "v1alpha2"
}

func (d *UpdateOsImageProfileDescriptor) GetApiDescriptor() gotenclient.ApiDescriptor {
	return osImageProfileServiceDescriptor
}

func (d *UpdateOsImageProfileDescriptor) GetResourceDescriptor() gotenresource.Descriptor {
	return os_image_profile.GetDescriptor()
}

func (d *UpdateOsImageProfileDescriptor) GetClientMsgReflectHandle() gotenclient.MethodMsgHandle {
	return &UpdateOsImageProfileDescriptorClientMsgHandle{}
}

func (d *UpdateOsImageProfileDescriptor) GetServerMsgReflectHandle() gotenclient.MethodMsgHandle {
	return &UpdateOsImageProfileDescriptorServerMsgHandle{}
}

func (h *UpdateOsImageProfileDescriptorClientMsgHandle) ExtractResourceName(msg proto.Message) gotenresource.Name {
	typedMsg := msg.(*UpdateOsImageProfileRequest)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractResourceName(*UpdateOsImageProfileRequest) *os_image_profile.Name
	})
	if ok {
		return override.OverrideExtractResourceName(typedMsg)
	}
	{
		res := typedMsg.GetOsImageProfile()
		if name := res.GetName(); name != nil {
			return name
		}
	}
	return (*os_image_profile.Name)(nil)
}

func (h *UpdateOsImageProfileDescriptorClientMsgHandle) ExtractResourceNames(msg proto.Message) gotenresource.NameList {
	typedMsg := msg.(*UpdateOsImageProfileRequest)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractResourceNames(*UpdateOsImageProfileRequest) []*os_image_profile.Name
	})
	if ok {
		return os_image_profile.OsImageProfileNameList(override.OverrideExtractResourceNames(typedMsg))
	}
	return nil
}

func (h *UpdateOsImageProfileDescriptorClientMsgHandle) ExtractCollectionName(msg proto.Message) gotenresource.Name {
	typedMsg := msg.(*UpdateOsImageProfileRequest)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractCollectionName(*UpdateOsImageProfileRequest) *os_image_profile.ParentName
	})
	if ok {
		return override.OverrideExtractCollectionName(typedMsg)
	}
	return nil
}

func (h *UpdateOsImageProfileDescriptorServerMsgHandle) ExtractResourceName(msg proto.Message) gotenresource.Name {
	typedMsg := msg.(*os_image_profile.OsImageProfile)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractResourceName(*os_image_profile.OsImageProfile) *os_image_profile.Name
	})
	if ok {
		return override.OverrideExtractResourceName(typedMsg)
	}
	{
		if name := typedMsg.GetName(); name != nil {
			return name
		}
	}
	return (*os_image_profile.Name)(nil)
}

func (h *UpdateOsImageProfileDescriptorServerMsgHandle) ExtractResourceNames(msg proto.Message) gotenresource.NameList {
	typedMsg := msg.(*os_image_profile.OsImageProfile)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractResourceNames(*os_image_profile.OsImageProfile) []*os_image_profile.Name
	})
	if ok {
		return os_image_profile.OsImageProfileNameList(override.OverrideExtractResourceNames(typedMsg))
	}
	return nil
}

func (h *UpdateOsImageProfileDescriptorServerMsgHandle) ExtractCollectionName(msg proto.Message) gotenresource.Name {
	typedMsg := msg.(*os_image_profile.OsImageProfile)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractCollectionName(*os_image_profile.OsImageProfile) *os_image_profile.ParentName
	})
	if ok {
		return override.OverrideExtractCollectionName(typedMsg)
	}
	return nil
}

func GetUpdateOsImageProfileDescriptor() *UpdateOsImageProfileDescriptor {
	return updateOsImageProfileDescriptor
}

type DeleteOsImageProfileDescriptor struct{}

type DeleteOsImageProfileDescriptorClientMsgHandle struct{}

type DeleteOsImageProfileDescriptorServerMsgHandle struct{}

func (d *DeleteOsImageProfileDescriptor) NewEmptyClientMsg() proto.Message {
	return &DeleteOsImageProfileRequest{}
}

func (d *DeleteOsImageProfileDescriptor) NewEmptyServerMsg() proto.Message {
	return &empty.Empty{}
}

func (d *DeleteOsImageProfileDescriptor) IsUnary() bool {
	return true
}

func (d *DeleteOsImageProfileDescriptor) IsClientStream() bool {
	return false
}

func (d *DeleteOsImageProfileDescriptor) IsServerStream() bool {
	return false
}

func (d *DeleteOsImageProfileDescriptor) IsCollection() bool {
	return false
}

func (d *DeleteOsImageProfileDescriptor) IsPlural() bool {
	return false
}

func (d *DeleteOsImageProfileDescriptor) HasResource() bool {
	return true
}

func (d *DeleteOsImageProfileDescriptor) RequestHasResourceBody() bool {
	return false
}

func (d *DeleteOsImageProfileDescriptor) GetVerb() string {
	return "delete"
}

func (d *DeleteOsImageProfileDescriptor) GetMethodName() string {
	return "DeleteOsImageProfile"
}

func (d *DeleteOsImageProfileDescriptor) GetFullMethodName() string {
	return "/ntt.devices.v1alpha2.OsImageProfileService/DeleteOsImageProfile"
}

func (d *DeleteOsImageProfileDescriptor) GetProtoPkgName() string {
	return "ntt.devices.v1alpha2"
}

func (d *DeleteOsImageProfileDescriptor) GetApiName() string {
	return "OsImageProfileService"
}

func (d *DeleteOsImageProfileDescriptor) GetServiceDomain() string {
	return "devices.edgelq.com"
}

func (d *DeleteOsImageProfileDescriptor) GetServiceVersion() string {
	return "v1alpha2"
}

func (d *DeleteOsImageProfileDescriptor) GetApiDescriptor() gotenclient.ApiDescriptor {
	return osImageProfileServiceDescriptor
}

func (d *DeleteOsImageProfileDescriptor) GetResourceDescriptor() gotenresource.Descriptor {
	return os_image_profile.GetDescriptor()
}

func (d *DeleteOsImageProfileDescriptor) GetClientMsgReflectHandle() gotenclient.MethodMsgHandle {
	return &DeleteOsImageProfileDescriptorClientMsgHandle{}
}

func (d *DeleteOsImageProfileDescriptor) GetServerMsgReflectHandle() gotenclient.MethodMsgHandle {
	return &DeleteOsImageProfileDescriptorServerMsgHandle{}
}

func (h *DeleteOsImageProfileDescriptorClientMsgHandle) ExtractResourceName(msg proto.Message) gotenresource.Name {
	typedMsg := msg.(*DeleteOsImageProfileRequest)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractResourceName(*DeleteOsImageProfileRequest) *os_image_profile.Name
	})
	if ok {
		return override.OverrideExtractResourceName(typedMsg)
	}
	{
		if ref := typedMsg.GetName(); ref != nil {
			return &ref.Name
		}
	}
	return (*os_image_profile.Name)(nil)
}

func (h *DeleteOsImageProfileDescriptorClientMsgHandle) ExtractResourceNames(msg proto.Message) gotenresource.NameList {
	typedMsg := msg.(*DeleteOsImageProfileRequest)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractResourceNames(*DeleteOsImageProfileRequest) []*os_image_profile.Name
	})
	if ok {
		return os_image_profile.OsImageProfileNameList(override.OverrideExtractResourceNames(typedMsg))
	}
	return nil
}

func (h *DeleteOsImageProfileDescriptorClientMsgHandle) ExtractCollectionName(msg proto.Message) gotenresource.Name {
	typedMsg := msg.(*DeleteOsImageProfileRequest)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractCollectionName(*DeleteOsImageProfileRequest) *os_image_profile.ParentName
	})
	if ok {
		return override.OverrideExtractCollectionName(typedMsg)
	}
	return nil
}

func (h *DeleteOsImageProfileDescriptorServerMsgHandle) ExtractResourceName(msg proto.Message) gotenresource.Name {
	typedMsg := msg.(*empty.Empty)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractResourceName(*empty.Empty) *os_image_profile.Name
	})
	if ok {
		return override.OverrideExtractResourceName(typedMsg)
	}
	return nil
}

func (h *DeleteOsImageProfileDescriptorServerMsgHandle) ExtractResourceNames(msg proto.Message) gotenresource.NameList {
	typedMsg := msg.(*empty.Empty)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractResourceNames(*empty.Empty) []*os_image_profile.Name
	})
	if ok {
		return os_image_profile.OsImageProfileNameList(override.OverrideExtractResourceNames(typedMsg))
	}
	return nil
}

func (h *DeleteOsImageProfileDescriptorServerMsgHandle) ExtractCollectionName(msg proto.Message) gotenresource.Name {
	typedMsg := msg.(*empty.Empty)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractCollectionName(*empty.Empty) *os_image_profile.ParentName
	})
	if ok {
		return override.OverrideExtractCollectionName(typedMsg)
	}
	return nil
}

func GetDeleteOsImageProfileDescriptor() *DeleteOsImageProfileDescriptor {
	return deleteOsImageProfileDescriptor
}

type OsImageProfileServiceDescriptor struct{}

func (d *OsImageProfileServiceDescriptor) AllMethodDescriptors() []gotenclient.MethodDescriptor {
	return []gotenclient.MethodDescriptor{
		getOsImageProfileDescriptor,
		batchGetOsImageProfilesDescriptor,
		listOsImageProfilesDescriptor,
		watchOsImageProfileDescriptor,
		watchOsImageProfilesDescriptor,
		createOsImageProfileDescriptor,
		updateOsImageProfileDescriptor,
		deleteOsImageProfileDescriptor,
	}
}

func (d *OsImageProfileServiceDescriptor) GetFullAPIName() string {
	return "/ntt.devices.v1alpha2.OsImageProfileService"
}

func (d *OsImageProfileServiceDescriptor) GetProtoPkgName() string {
	return "ntt.devices.v1alpha2"
}

func (d *OsImageProfileServiceDescriptor) GetApiName() string {
	return "OsImageProfileService"
}

func (d *OsImageProfileServiceDescriptor) GetServiceDomain() string {
	return "devices.edgelq.com"
}

func (d *OsImageProfileServiceDescriptor) GetServiceVersion() string {
	return "v1alpha2"
}

func GetOsImageProfileServiceDescriptor() *OsImageProfileServiceDescriptor {
	return osImageProfileServiceDescriptor
}

func initDescriptors() {
	osImageProfileServiceDescriptor = &OsImageProfileServiceDescriptor{}
	getOsImageProfileDescriptor = &GetOsImageProfileDescriptor{}
	batchGetOsImageProfilesDescriptor = &BatchGetOsImageProfilesDescriptor{}
	listOsImageProfilesDescriptor = &ListOsImageProfilesDescriptor{}
	watchOsImageProfileDescriptor = &WatchOsImageProfileDescriptor{}
	watchOsImageProfilesDescriptor = &WatchOsImageProfilesDescriptor{}
	createOsImageProfileDescriptor = &CreateOsImageProfileDescriptor{}
	updateOsImageProfileDescriptor = &UpdateOsImageProfileDescriptor{}
	deleteOsImageProfileDescriptor = &DeleteOsImageProfileDescriptor{}
	gotenclient.GetRegistry().RegisterApiDescriptor(osImageProfileServiceDescriptor)
	gotenclient.GetRegistry().RegisterMethodDescriptor(getOsImageProfileDescriptor)
	gotenclient.GetRegistry().RegisterMethodDescriptor(batchGetOsImageProfilesDescriptor)
	gotenclient.GetRegistry().RegisterMethodDescriptor(listOsImageProfilesDescriptor)
	gotenclient.GetRegistry().RegisterMethodDescriptor(watchOsImageProfileDescriptor)
	gotenclient.GetRegistry().RegisterMethodDescriptor(watchOsImageProfilesDescriptor)
	gotenclient.GetRegistry().RegisterMethodDescriptor(createOsImageProfileDescriptor)
	gotenclient.GetRegistry().RegisterMethodDescriptor(updateOsImageProfileDescriptor)
	gotenclient.GetRegistry().RegisterMethodDescriptor(deleteOsImageProfileDescriptor)
}

func init() {
	if !descriptorsInitialized {
		initDescriptors()
		descriptorsInitialized = true
	}
}
