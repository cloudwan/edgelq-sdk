// Code generated by protoc-gen-goten-client
// API: CustomizedImageService
// DO NOT EDIT!!!

package customized_image_client

import (
	"google.golang.org/protobuf/proto"

	gotenclient "github.com/cloudwan/goten-sdk/runtime/client"
	gotenresource "github.com/cloudwan/goten-sdk/runtime/resource"
)

// proto imports
import (
	customized_image "github.com/cloudwan/edgelq-sdk/devices/resources/v1alpha2/customized_image"
	empty "github.com/golang/protobuf/ptypes/empty"
)

// Reference imports to suppress errors if they are not otherwise used.
var (
	_ = new(proto.Message)
	_ = new(gotenclient.MethodDescriptor)
	_ = gotenresource.WildcardId
)

// make sure we're using proto imports
var (
	_ = &customized_image.CustomizedImage{}
	_ = &empty.Empty{}
)

var (
	descriptorsInitialized             bool
	customizedImageServiceDescriptor   *CustomizedImageServiceDescriptor
	getCustomizedImageDescriptor       *GetCustomizedImageDescriptor
	batchGetCustomizedImagesDescriptor *BatchGetCustomizedImagesDescriptor
	listCustomizedImagesDescriptor     *ListCustomizedImagesDescriptor
	watchCustomizedImageDescriptor     *WatchCustomizedImageDescriptor
	watchCustomizedImagesDescriptor    *WatchCustomizedImagesDescriptor
	createCustomizedImageDescriptor    *CreateCustomizedImageDescriptor
	updateCustomizedImageDescriptor    *UpdateCustomizedImageDescriptor
	deleteCustomizedImageDescriptor    *DeleteCustomizedImageDescriptor
	requestUrlDescriptor               *RequestUrlDescriptor
)

type GetCustomizedImageDescriptor struct{}

type GetCustomizedImageDescriptorClientMsgHandle struct{}

type GetCustomizedImageDescriptorServerMsgHandle struct{}

func (d *GetCustomizedImageDescriptor) NewEmptyClientMsg() proto.Message {
	return &GetCustomizedImageRequest{}
}

func (d *GetCustomizedImageDescriptor) NewEmptyServerMsg() proto.Message {
	return &customized_image.CustomizedImage{}
}

func (d *GetCustomizedImageDescriptor) IsUnary() bool {
	return true
}

func (d *GetCustomizedImageDescriptor) IsClientStream() bool {
	return false
}

func (d *GetCustomizedImageDescriptor) IsServerStream() bool {
	return false
}

func (d *GetCustomizedImageDescriptor) IsCollection() bool {
	return false
}

func (d *GetCustomizedImageDescriptor) IsPlural() bool {
	return false
}

func (d *GetCustomizedImageDescriptor) HasResource() bool {
	return true
}

func (d *GetCustomizedImageDescriptor) RequestHasResourceBody() bool {
	return false
}

func (d *GetCustomizedImageDescriptor) GetVerb() string {
	return "get"
}

func (d *GetCustomizedImageDescriptor) GetMethodName() string {
	return "GetCustomizedImage"
}

func (d *GetCustomizedImageDescriptor) GetFullMethodName() string {
	return "/ntt.devices.v1alpha2.CustomizedImageService/GetCustomizedImage"
}

func (d *GetCustomizedImageDescriptor) GetProtoPkgName() string {
	return "ntt.devices.v1alpha2"
}

func (d *GetCustomizedImageDescriptor) GetApiName() string {
	return "CustomizedImageService"
}

func (d *GetCustomizedImageDescriptor) GetServiceDomain() string {
	return "devices.edgelq.com"
}

func (d *GetCustomizedImageDescriptor) GetServiceVersion() string {
	return "v1alpha2"
}

func (d *GetCustomizedImageDescriptor) GetApiDescriptor() gotenclient.ApiDescriptor {
	return customizedImageServiceDescriptor
}

func (d *GetCustomizedImageDescriptor) GetResourceDescriptor() gotenresource.Descriptor {
	return customized_image.GetDescriptor()
}

func (d *GetCustomizedImageDescriptor) GetClientMsgReflectHandle() gotenclient.MethodMsgHandle {
	return &GetCustomizedImageDescriptorClientMsgHandle{}
}

func (d *GetCustomizedImageDescriptor) GetServerMsgReflectHandle() gotenclient.MethodMsgHandle {
	return &GetCustomizedImageDescriptorServerMsgHandle{}
}

func (h *GetCustomizedImageDescriptorClientMsgHandle) ExtractResourceName(msg proto.Message) gotenresource.Name {
	typedMsg := msg.(*GetCustomizedImageRequest)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractResourceName(*GetCustomizedImageRequest) *customized_image.Name
	})
	if ok {
		return override.OverrideExtractResourceName(typedMsg)
	}
	{
		if ref := typedMsg.GetName(); ref != nil {
			return &ref.Name
		}
	}
	return (*customized_image.Name)(nil)
}

func (h *GetCustomizedImageDescriptorClientMsgHandle) ExtractResourceNames(msg proto.Message) gotenresource.NameList {
	typedMsg := msg.(*GetCustomizedImageRequest)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractResourceNames(*GetCustomizedImageRequest) []*customized_image.Name
	})
	if ok {
		return customized_image.CustomizedImageNameList(override.OverrideExtractResourceNames(typedMsg))
	}
	return nil
}

func (h *GetCustomizedImageDescriptorClientMsgHandle) ExtractCollectionName(msg proto.Message) gotenresource.Name {
	typedMsg := msg.(*GetCustomizedImageRequest)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractCollectionName(*GetCustomizedImageRequest) *customized_image.ParentName
	})
	if ok {
		return override.OverrideExtractCollectionName(typedMsg)
	}
	return nil
}

func (h *GetCustomizedImageDescriptorServerMsgHandle) ExtractResourceName(msg proto.Message) gotenresource.Name {
	typedMsg := msg.(*customized_image.CustomizedImage)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractResourceName(*customized_image.CustomizedImage) *customized_image.Name
	})
	if ok {
		return override.OverrideExtractResourceName(typedMsg)
	}
	{
		if name := typedMsg.GetName(); name != nil {
			return name
		}
	}
	return (*customized_image.Name)(nil)
}

func (h *GetCustomizedImageDescriptorServerMsgHandle) ExtractResourceNames(msg proto.Message) gotenresource.NameList {
	typedMsg := msg.(*customized_image.CustomizedImage)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractResourceNames(*customized_image.CustomizedImage) []*customized_image.Name
	})
	if ok {
		return customized_image.CustomizedImageNameList(override.OverrideExtractResourceNames(typedMsg))
	}
	return nil
}

func (h *GetCustomizedImageDescriptorServerMsgHandle) ExtractCollectionName(msg proto.Message) gotenresource.Name {
	typedMsg := msg.(*customized_image.CustomizedImage)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractCollectionName(*customized_image.CustomizedImage) *customized_image.ParentName
	})
	if ok {
		return override.OverrideExtractCollectionName(typedMsg)
	}
	return nil
}

func GetGetCustomizedImageDescriptor() *GetCustomizedImageDescriptor {
	return getCustomizedImageDescriptor
}

type BatchGetCustomizedImagesDescriptor struct{}

type BatchGetCustomizedImagesDescriptorClientMsgHandle struct{}

type BatchGetCustomizedImagesDescriptorServerMsgHandle struct{}

func (d *BatchGetCustomizedImagesDescriptor) NewEmptyClientMsg() proto.Message {
	return &BatchGetCustomizedImagesRequest{}
}

func (d *BatchGetCustomizedImagesDescriptor) NewEmptyServerMsg() proto.Message {
	return &BatchGetCustomizedImagesResponse{}
}

func (d *BatchGetCustomizedImagesDescriptor) IsUnary() bool {
	return true
}

func (d *BatchGetCustomizedImagesDescriptor) IsClientStream() bool {
	return false
}

func (d *BatchGetCustomizedImagesDescriptor) IsServerStream() bool {
	return false
}

func (d *BatchGetCustomizedImagesDescriptor) IsCollection() bool {
	return false
}

func (d *BatchGetCustomizedImagesDescriptor) IsPlural() bool {
	return true
}

func (d *BatchGetCustomizedImagesDescriptor) HasResource() bool {
	return true
}

func (d *BatchGetCustomizedImagesDescriptor) RequestHasResourceBody() bool {
	return false
}

func (d *BatchGetCustomizedImagesDescriptor) GetVerb() string {
	return "batchGet"
}

func (d *BatchGetCustomizedImagesDescriptor) GetMethodName() string {
	return "BatchGetCustomizedImages"
}

func (d *BatchGetCustomizedImagesDescriptor) GetFullMethodName() string {
	return "/ntt.devices.v1alpha2.CustomizedImageService/BatchGetCustomizedImages"
}

func (d *BatchGetCustomizedImagesDescriptor) GetProtoPkgName() string {
	return "ntt.devices.v1alpha2"
}

func (d *BatchGetCustomizedImagesDescriptor) GetApiName() string {
	return "CustomizedImageService"
}

func (d *BatchGetCustomizedImagesDescriptor) GetServiceDomain() string {
	return "devices.edgelq.com"
}

func (d *BatchGetCustomizedImagesDescriptor) GetServiceVersion() string {
	return "v1alpha2"
}

func (d *BatchGetCustomizedImagesDescriptor) GetApiDescriptor() gotenclient.ApiDescriptor {
	return customizedImageServiceDescriptor
}

func (d *BatchGetCustomizedImagesDescriptor) GetResourceDescriptor() gotenresource.Descriptor {
	return customized_image.GetDescriptor()
}

func (d *BatchGetCustomizedImagesDescriptor) GetClientMsgReflectHandle() gotenclient.MethodMsgHandle {
	return &BatchGetCustomizedImagesDescriptorClientMsgHandle{}
}

func (d *BatchGetCustomizedImagesDescriptor) GetServerMsgReflectHandle() gotenclient.MethodMsgHandle {
	return &BatchGetCustomizedImagesDescriptorServerMsgHandle{}
}

func (h *BatchGetCustomizedImagesDescriptorClientMsgHandle) ExtractResourceName(msg proto.Message) gotenresource.Name {
	typedMsg := msg.(*BatchGetCustomizedImagesRequest)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractResourceName(*BatchGetCustomizedImagesRequest) *customized_image.Name
	})
	if ok {
		return override.OverrideExtractResourceName(typedMsg)
	}
	return nil
}

func (h *BatchGetCustomizedImagesDescriptorClientMsgHandle) ExtractResourceNames(msg proto.Message) gotenresource.NameList {
	typedMsg := msg.(*BatchGetCustomizedImagesRequest)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractResourceNames(*BatchGetCustomizedImagesRequest) []*customized_image.Name
	})
	if ok {
		return customized_image.CustomizedImageNameList(override.OverrideExtractResourceNames(typedMsg))
	}
	{
		if refs := typedMsg.GetNames(); len(refs) > 0 {
			list := make(customized_image.CustomizedImageNameList, 0, len(refs))
			for _, ref := range refs {
				list = append(list, &ref.Name)
			}
			return list
		}
	}
	return (customized_image.CustomizedImageNameList)(nil)
}

func (h *BatchGetCustomizedImagesDescriptorClientMsgHandle) ExtractCollectionName(msg proto.Message) gotenresource.Name {
	typedMsg := msg.(*BatchGetCustomizedImagesRequest)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractCollectionName(*BatchGetCustomizedImagesRequest) *customized_image.ParentName
	})
	if ok {
		return override.OverrideExtractCollectionName(typedMsg)
	}
	return nil
}

func (h *BatchGetCustomizedImagesDescriptorServerMsgHandle) ExtractResourceName(msg proto.Message) gotenresource.Name {
	typedMsg := msg.(*BatchGetCustomizedImagesResponse)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractResourceName(*BatchGetCustomizedImagesResponse) *customized_image.Name
	})
	if ok {
		return override.OverrideExtractResourceName(typedMsg)
	}
	return nil
}

func (h *BatchGetCustomizedImagesDescriptorServerMsgHandle) ExtractResourceNames(msg proto.Message) gotenresource.NameList {
	typedMsg := msg.(*BatchGetCustomizedImagesResponse)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractResourceNames(*BatchGetCustomizedImagesResponse) []*customized_image.Name
	})
	if ok {
		return customized_image.CustomizedImageNameList(override.OverrideExtractResourceNames(typedMsg))
	}
	{
		if resources := typedMsg.GetCustomizedImages(); len(resources) > 0 {
			list := make(customized_image.CustomizedImageNameList, 0, len(resources))
			for _, res := range resources {
				list = append(list, res.GetName())
			}
			return list
		}
	}
	return (customized_image.CustomizedImageNameList)(nil)
}

func (h *BatchGetCustomizedImagesDescriptorServerMsgHandle) ExtractCollectionName(msg proto.Message) gotenresource.Name {
	typedMsg := msg.(*BatchGetCustomizedImagesResponse)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractCollectionName(*BatchGetCustomizedImagesResponse) *customized_image.ParentName
	})
	if ok {
		return override.OverrideExtractCollectionName(typedMsg)
	}
	return nil
}

func GetBatchGetCustomizedImagesDescriptor() *BatchGetCustomizedImagesDescriptor {
	return batchGetCustomizedImagesDescriptor
}

type ListCustomizedImagesDescriptor struct{}

type ListCustomizedImagesDescriptorClientMsgHandle struct{}

type ListCustomizedImagesDescriptorServerMsgHandle struct{}

func (d *ListCustomizedImagesDescriptor) NewEmptyClientMsg() proto.Message {
	return &ListCustomizedImagesRequest{}
}

func (d *ListCustomizedImagesDescriptor) NewEmptyServerMsg() proto.Message {
	return &ListCustomizedImagesResponse{}
}

func (d *ListCustomizedImagesDescriptor) IsUnary() bool {
	return true
}

func (d *ListCustomizedImagesDescriptor) IsClientStream() bool {
	return false
}

func (d *ListCustomizedImagesDescriptor) IsServerStream() bool {
	return false
}

func (d *ListCustomizedImagesDescriptor) IsCollection() bool {
	return true
}

func (d *ListCustomizedImagesDescriptor) IsPlural() bool {
	return true
}

func (d *ListCustomizedImagesDescriptor) HasResource() bool {
	return true
}

func (d *ListCustomizedImagesDescriptor) RequestHasResourceBody() bool {
	return false
}

func (d *ListCustomizedImagesDescriptor) GetVerb() string {
	return "list"
}

func (d *ListCustomizedImagesDescriptor) GetMethodName() string {
	return "ListCustomizedImages"
}

func (d *ListCustomizedImagesDescriptor) GetFullMethodName() string {
	return "/ntt.devices.v1alpha2.CustomizedImageService/ListCustomizedImages"
}

func (d *ListCustomizedImagesDescriptor) GetProtoPkgName() string {
	return "ntt.devices.v1alpha2"
}

func (d *ListCustomizedImagesDescriptor) GetApiName() string {
	return "CustomizedImageService"
}

func (d *ListCustomizedImagesDescriptor) GetServiceDomain() string {
	return "devices.edgelq.com"
}

func (d *ListCustomizedImagesDescriptor) GetServiceVersion() string {
	return "v1alpha2"
}

func (d *ListCustomizedImagesDescriptor) GetApiDescriptor() gotenclient.ApiDescriptor {
	return customizedImageServiceDescriptor
}

func (d *ListCustomizedImagesDescriptor) GetResourceDescriptor() gotenresource.Descriptor {
	return customized_image.GetDescriptor()
}

func (d *ListCustomizedImagesDescriptor) GetClientMsgReflectHandle() gotenclient.MethodMsgHandle {
	return &ListCustomizedImagesDescriptorClientMsgHandle{}
}

func (d *ListCustomizedImagesDescriptor) GetServerMsgReflectHandle() gotenclient.MethodMsgHandle {
	return &ListCustomizedImagesDescriptorServerMsgHandle{}
}

func (h *ListCustomizedImagesDescriptorClientMsgHandle) ExtractResourceName(msg proto.Message) gotenresource.Name {
	typedMsg := msg.(*ListCustomizedImagesRequest)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractResourceName(*ListCustomizedImagesRequest) *customized_image.Name
	})
	if ok {
		return override.OverrideExtractResourceName(typedMsg)
	}
	return nil
}

func (h *ListCustomizedImagesDescriptorClientMsgHandle) ExtractResourceNames(msg proto.Message) gotenresource.NameList {
	typedMsg := msg.(*ListCustomizedImagesRequest)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractResourceNames(*ListCustomizedImagesRequest) []*customized_image.Name
	})
	if ok {
		return customized_image.CustomizedImageNameList(override.OverrideExtractResourceNames(typedMsg))
	}
	return nil
}

func (h *ListCustomizedImagesDescriptorClientMsgHandle) ExtractCollectionName(msg proto.Message) gotenresource.Name {
	typedMsg := msg.(*ListCustomizedImagesRequest)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractCollectionName(*ListCustomizedImagesRequest) *customized_image.ParentName
	})
	if ok {
		return override.OverrideExtractCollectionName(typedMsg)
	}
	{
		if parentName := typedMsg.GetParent(); parentName != nil {
			return parentName
		}
	}
	return (*customized_image.ParentName)(nil)
}

func (h *ListCustomizedImagesDescriptorServerMsgHandle) ExtractResourceName(msg proto.Message) gotenresource.Name {
	typedMsg := msg.(*ListCustomizedImagesResponse)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractResourceName(*ListCustomizedImagesResponse) *customized_image.Name
	})
	if ok {
		return override.OverrideExtractResourceName(typedMsg)
	}
	return nil
}

func (h *ListCustomizedImagesDescriptorServerMsgHandle) ExtractResourceNames(msg proto.Message) gotenresource.NameList {
	typedMsg := msg.(*ListCustomizedImagesResponse)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractResourceNames(*ListCustomizedImagesResponse) []*customized_image.Name
	})
	if ok {
		return customized_image.CustomizedImageNameList(override.OverrideExtractResourceNames(typedMsg))
	}
	{
		if resources := typedMsg.GetCustomizedImages(); len(resources) > 0 {
			list := make(customized_image.CustomizedImageNameList, 0, len(resources))
			for _, res := range resources {
				list = append(list, res.GetName())
			}
			return list
		}
	}
	return (customized_image.CustomizedImageNameList)(nil)
}

func (h *ListCustomizedImagesDescriptorServerMsgHandle) ExtractCollectionName(msg proto.Message) gotenresource.Name {
	typedMsg := msg.(*ListCustomizedImagesResponse)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractCollectionName(*ListCustomizedImagesResponse) *customized_image.ParentName
	})
	if ok {
		return override.OverrideExtractCollectionName(typedMsg)
	}
	return nil
}

func GetListCustomizedImagesDescriptor() *ListCustomizedImagesDescriptor {
	return listCustomizedImagesDescriptor
}

type WatchCustomizedImageDescriptor struct{}

type WatchCustomizedImageDescriptorClientMsgHandle struct{}

type WatchCustomizedImageDescriptorServerMsgHandle struct{}

func (d *WatchCustomizedImageDescriptor) NewEmptyClientMsg() proto.Message {
	return &WatchCustomizedImageRequest{}
}

func (d *WatchCustomizedImageDescriptor) NewEmptyServerMsg() proto.Message {
	return &WatchCustomizedImageResponse{}
}

func (d *WatchCustomizedImageDescriptor) IsUnary() bool {
	return false
}

func (d *WatchCustomizedImageDescriptor) IsClientStream() bool {
	return false
}

func (d *WatchCustomizedImageDescriptor) IsServerStream() bool {
	return true
}

func (d *WatchCustomizedImageDescriptor) IsCollection() bool {
	return false
}

func (d *WatchCustomizedImageDescriptor) IsPlural() bool {
	return false
}

func (d *WatchCustomizedImageDescriptor) HasResource() bool {
	return true
}

func (d *WatchCustomizedImageDescriptor) RequestHasResourceBody() bool {
	return false
}

func (d *WatchCustomizedImageDescriptor) GetVerb() string {
	return "watch"
}

func (d *WatchCustomizedImageDescriptor) GetMethodName() string {
	return "WatchCustomizedImage"
}

func (d *WatchCustomizedImageDescriptor) GetFullMethodName() string {
	return "/ntt.devices.v1alpha2.CustomizedImageService/WatchCustomizedImage"
}

func (d *WatchCustomizedImageDescriptor) GetProtoPkgName() string {
	return "ntt.devices.v1alpha2"
}

func (d *WatchCustomizedImageDescriptor) GetApiName() string {
	return "CustomizedImageService"
}

func (d *WatchCustomizedImageDescriptor) GetServiceDomain() string {
	return "devices.edgelq.com"
}

func (d *WatchCustomizedImageDescriptor) GetServiceVersion() string {
	return "v1alpha2"
}

func (d *WatchCustomizedImageDescriptor) GetApiDescriptor() gotenclient.ApiDescriptor {
	return customizedImageServiceDescriptor
}

func (d *WatchCustomizedImageDescriptor) GetResourceDescriptor() gotenresource.Descriptor {
	return customized_image.GetDescriptor()
}

func (d *WatchCustomizedImageDescriptor) GetClientMsgReflectHandle() gotenclient.MethodMsgHandle {
	return &WatchCustomizedImageDescriptorClientMsgHandle{}
}

func (d *WatchCustomizedImageDescriptor) GetServerMsgReflectHandle() gotenclient.MethodMsgHandle {
	return &WatchCustomizedImageDescriptorServerMsgHandle{}
}

func (h *WatchCustomizedImageDescriptorClientMsgHandle) ExtractResourceName(msg proto.Message) gotenresource.Name {
	typedMsg := msg.(*WatchCustomizedImageRequest)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractResourceName(*WatchCustomizedImageRequest) *customized_image.Name
	})
	if ok {
		return override.OverrideExtractResourceName(typedMsg)
	}
	{
		if ref := typedMsg.GetName(); ref != nil {
			return &ref.Name
		}
	}
	return (*customized_image.Name)(nil)
}

func (h *WatchCustomizedImageDescriptorClientMsgHandle) ExtractResourceNames(msg proto.Message) gotenresource.NameList {
	typedMsg := msg.(*WatchCustomizedImageRequest)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractResourceNames(*WatchCustomizedImageRequest) []*customized_image.Name
	})
	if ok {
		return customized_image.CustomizedImageNameList(override.OverrideExtractResourceNames(typedMsg))
	}
	return nil
}

func (h *WatchCustomizedImageDescriptorClientMsgHandle) ExtractCollectionName(msg proto.Message) gotenresource.Name {
	typedMsg := msg.(*WatchCustomizedImageRequest)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractCollectionName(*WatchCustomizedImageRequest) *customized_image.ParentName
	})
	if ok {
		return override.OverrideExtractCollectionName(typedMsg)
	}
	return nil
}

func (h *WatchCustomizedImageDescriptorServerMsgHandle) ExtractResourceName(msg proto.Message) gotenresource.Name {
	typedMsg := msg.(*WatchCustomizedImageResponse)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractResourceName(*WatchCustomizedImageResponse) *customized_image.Name
	})
	if ok {
		return override.OverrideExtractResourceName(typedMsg)
	}
	{
		if resChange := typedMsg.GetChange(); resChange != nil {
			switch tResChange := resChange.ChangeType.(type) {
			case *customized_image.CustomizedImageChange_Added_:
				return tResChange.Added.GetCustomizedImage().GetName()
			case *customized_image.CustomizedImageChange_Modified_:
				return tResChange.Modified.GetName()
			case *customized_image.CustomizedImageChange_Removed_:
				return tResChange.Removed.GetName()
			case *customized_image.CustomizedImageChange_Current_:
				return tResChange.Current.GetCustomizedImage().GetName()
			}
		}
	}
	return (*customized_image.Name)(nil)
}

func (h *WatchCustomizedImageDescriptorServerMsgHandle) ExtractResourceNames(msg proto.Message) gotenresource.NameList {
	typedMsg := msg.(*WatchCustomizedImageResponse)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractResourceNames(*WatchCustomizedImageResponse) []*customized_image.Name
	})
	if ok {
		return customized_image.CustomizedImageNameList(override.OverrideExtractResourceNames(typedMsg))
	}
	return nil
}

func (h *WatchCustomizedImageDescriptorServerMsgHandle) ExtractCollectionName(msg proto.Message) gotenresource.Name {
	typedMsg := msg.(*WatchCustomizedImageResponse)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractCollectionName(*WatchCustomizedImageResponse) *customized_image.ParentName
	})
	if ok {
		return override.OverrideExtractCollectionName(typedMsg)
	}
	return nil
}

func GetWatchCustomizedImageDescriptor() *WatchCustomizedImageDescriptor {
	return watchCustomizedImageDescriptor
}

type WatchCustomizedImagesDescriptor struct{}

type WatchCustomizedImagesDescriptorClientMsgHandle struct{}

type WatchCustomizedImagesDescriptorServerMsgHandle struct{}

func (d *WatchCustomizedImagesDescriptor) NewEmptyClientMsg() proto.Message {
	return &WatchCustomizedImagesRequest{}
}

func (d *WatchCustomizedImagesDescriptor) NewEmptyServerMsg() proto.Message {
	return &WatchCustomizedImagesResponse{}
}

func (d *WatchCustomizedImagesDescriptor) IsUnary() bool {
	return false
}

func (d *WatchCustomizedImagesDescriptor) IsClientStream() bool {
	return false
}

func (d *WatchCustomizedImagesDescriptor) IsServerStream() bool {
	return true
}

func (d *WatchCustomizedImagesDescriptor) IsCollection() bool {
	return true
}

func (d *WatchCustomizedImagesDescriptor) IsPlural() bool {
	return true
}

func (d *WatchCustomizedImagesDescriptor) HasResource() bool {
	return true
}

func (d *WatchCustomizedImagesDescriptor) RequestHasResourceBody() bool {
	return false
}

func (d *WatchCustomizedImagesDescriptor) GetVerb() string {
	return "watch"
}

func (d *WatchCustomizedImagesDescriptor) GetMethodName() string {
	return "WatchCustomizedImages"
}

func (d *WatchCustomizedImagesDescriptor) GetFullMethodName() string {
	return "/ntt.devices.v1alpha2.CustomizedImageService/WatchCustomizedImages"
}

func (d *WatchCustomizedImagesDescriptor) GetProtoPkgName() string {
	return "ntt.devices.v1alpha2"
}

func (d *WatchCustomizedImagesDescriptor) GetApiName() string {
	return "CustomizedImageService"
}

func (d *WatchCustomizedImagesDescriptor) GetServiceDomain() string {
	return "devices.edgelq.com"
}

func (d *WatchCustomizedImagesDescriptor) GetServiceVersion() string {
	return "v1alpha2"
}

func (d *WatchCustomizedImagesDescriptor) GetApiDescriptor() gotenclient.ApiDescriptor {
	return customizedImageServiceDescriptor
}

func (d *WatchCustomizedImagesDescriptor) GetResourceDescriptor() gotenresource.Descriptor {
	return customized_image.GetDescriptor()
}

func (d *WatchCustomizedImagesDescriptor) GetClientMsgReflectHandle() gotenclient.MethodMsgHandle {
	return &WatchCustomizedImagesDescriptorClientMsgHandle{}
}

func (d *WatchCustomizedImagesDescriptor) GetServerMsgReflectHandle() gotenclient.MethodMsgHandle {
	return &WatchCustomizedImagesDescriptorServerMsgHandle{}
}

func (h *WatchCustomizedImagesDescriptorClientMsgHandle) ExtractResourceName(msg proto.Message) gotenresource.Name {
	typedMsg := msg.(*WatchCustomizedImagesRequest)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractResourceName(*WatchCustomizedImagesRequest) *customized_image.Name
	})
	if ok {
		return override.OverrideExtractResourceName(typedMsg)
	}
	return nil
}

func (h *WatchCustomizedImagesDescriptorClientMsgHandle) ExtractResourceNames(msg proto.Message) gotenresource.NameList {
	typedMsg := msg.(*WatchCustomizedImagesRequest)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractResourceNames(*WatchCustomizedImagesRequest) []*customized_image.Name
	})
	if ok {
		return customized_image.CustomizedImageNameList(override.OverrideExtractResourceNames(typedMsg))
	}
	return nil
}

func (h *WatchCustomizedImagesDescriptorClientMsgHandle) ExtractCollectionName(msg proto.Message) gotenresource.Name {
	typedMsg := msg.(*WatchCustomizedImagesRequest)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractCollectionName(*WatchCustomizedImagesRequest) *customized_image.ParentName
	})
	if ok {
		return override.OverrideExtractCollectionName(typedMsg)
	}
	{
		if ref := typedMsg.GetParent(); ref != nil {
			return &ref.ParentName
		}
	}
	return (*customized_image.ParentName)(nil)
}

func (h *WatchCustomizedImagesDescriptorServerMsgHandle) ExtractResourceName(msg proto.Message) gotenresource.Name {
	typedMsg := msg.(*WatchCustomizedImagesResponse)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractResourceName(*WatchCustomizedImagesResponse) *customized_image.Name
	})
	if ok {
		return override.OverrideExtractResourceName(typedMsg)
	}
	return nil
}

func (h *WatchCustomizedImagesDescriptorServerMsgHandle) ExtractResourceNames(msg proto.Message) gotenresource.NameList {
	typedMsg := msg.(*WatchCustomizedImagesResponse)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractResourceNames(*WatchCustomizedImagesResponse) []*customized_image.Name
	})
	if ok {
		return customized_image.CustomizedImageNameList(override.OverrideExtractResourceNames(typedMsg))
	}
	{
		if resChanges := typedMsg.GetCustomizedImageChanges(); len(resChanges) > 0 {
			list := make(customized_image.CustomizedImageNameList, 0, len(resChanges))
			for _, resChange := range resChanges {
				switch tResChange := resChange.ChangeType.(type) {
				case *customized_image.CustomizedImageChange_Added_:
					list = append(list, tResChange.Added.GetCustomizedImage().GetName())
				case *customized_image.CustomizedImageChange_Modified_:
					list = append(list, tResChange.Modified.GetName())
				case *customized_image.CustomizedImageChange_Removed_:
					list = append(list, tResChange.Removed.GetName())
				case *customized_image.CustomizedImageChange_Current_:
					list = append(list, tResChange.Current.GetCustomizedImage().GetName())
				}
			}
			return list
		}
	}
	return (customized_image.CustomizedImageNameList)(nil)
}

func (h *WatchCustomizedImagesDescriptorServerMsgHandle) ExtractCollectionName(msg proto.Message) gotenresource.Name {
	typedMsg := msg.(*WatchCustomizedImagesResponse)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractCollectionName(*WatchCustomizedImagesResponse) *customized_image.ParentName
	})
	if ok {
		return override.OverrideExtractCollectionName(typedMsg)
	}
	return nil
}

func GetWatchCustomizedImagesDescriptor() *WatchCustomizedImagesDescriptor {
	return watchCustomizedImagesDescriptor
}

type CreateCustomizedImageDescriptor struct{}

type CreateCustomizedImageDescriptorClientMsgHandle struct{}

type CreateCustomizedImageDescriptorServerMsgHandle struct{}

func (d *CreateCustomizedImageDescriptor) NewEmptyClientMsg() proto.Message {
	return &CreateCustomizedImageRequest{}
}

func (d *CreateCustomizedImageDescriptor) NewEmptyServerMsg() proto.Message {
	return &customized_image.CustomizedImage{}
}

func (d *CreateCustomizedImageDescriptor) IsUnary() bool {
	return true
}

func (d *CreateCustomizedImageDescriptor) IsClientStream() bool {
	return false
}

func (d *CreateCustomizedImageDescriptor) IsServerStream() bool {
	return false
}

func (d *CreateCustomizedImageDescriptor) IsCollection() bool {
	return true
}

func (d *CreateCustomizedImageDescriptor) IsPlural() bool {
	return false
}

func (d *CreateCustomizedImageDescriptor) HasResource() bool {
	return true
}

func (d *CreateCustomizedImageDescriptor) RequestHasResourceBody() bool {
	return true
}

func (d *CreateCustomizedImageDescriptor) GetVerb() string {
	return "create"
}

func (d *CreateCustomizedImageDescriptor) GetMethodName() string {
	return "CreateCustomizedImage"
}

func (d *CreateCustomizedImageDescriptor) GetFullMethodName() string {
	return "/ntt.devices.v1alpha2.CustomizedImageService/CreateCustomizedImage"
}

func (d *CreateCustomizedImageDescriptor) GetProtoPkgName() string {
	return "ntt.devices.v1alpha2"
}

func (d *CreateCustomizedImageDescriptor) GetApiName() string {
	return "CustomizedImageService"
}

func (d *CreateCustomizedImageDescriptor) GetServiceDomain() string {
	return "devices.edgelq.com"
}

func (d *CreateCustomizedImageDescriptor) GetServiceVersion() string {
	return "v1alpha2"
}

func (d *CreateCustomizedImageDescriptor) GetApiDescriptor() gotenclient.ApiDescriptor {
	return customizedImageServiceDescriptor
}

func (d *CreateCustomizedImageDescriptor) GetResourceDescriptor() gotenresource.Descriptor {
	return customized_image.GetDescriptor()
}

func (d *CreateCustomizedImageDescriptor) GetClientMsgReflectHandle() gotenclient.MethodMsgHandle {
	return &CreateCustomizedImageDescriptorClientMsgHandle{}
}

func (d *CreateCustomizedImageDescriptor) GetServerMsgReflectHandle() gotenclient.MethodMsgHandle {
	return &CreateCustomizedImageDescriptorServerMsgHandle{}
}

func (h *CreateCustomizedImageDescriptorClientMsgHandle) ExtractResourceName(msg proto.Message) gotenresource.Name {
	typedMsg := msg.(*CreateCustomizedImageRequest)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractResourceName(*CreateCustomizedImageRequest) *customized_image.Name
	})
	if ok {
		return override.OverrideExtractResourceName(typedMsg)
	}
	{
		res := typedMsg.GetCustomizedImage()
		if name := res.GetName(); name != nil {
			return name
		}
	}
	return (*customized_image.Name)(nil)
}

func (h *CreateCustomizedImageDescriptorClientMsgHandle) ExtractResourceNames(msg proto.Message) gotenresource.NameList {
	typedMsg := msg.(*CreateCustomizedImageRequest)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractResourceNames(*CreateCustomizedImageRequest) []*customized_image.Name
	})
	if ok {
		return customized_image.CustomizedImageNameList(override.OverrideExtractResourceNames(typedMsg))
	}
	return nil
}

func (h *CreateCustomizedImageDescriptorClientMsgHandle) ExtractCollectionName(msg proto.Message) gotenresource.Name {
	typedMsg := msg.(*CreateCustomizedImageRequest)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractCollectionName(*CreateCustomizedImageRequest) *customized_image.ParentName
	})
	if ok {
		return override.OverrideExtractCollectionName(typedMsg)
	}
	{
		if ref := typedMsg.GetParent(); ref != nil {
			return &ref.ParentName
		}
	}
	return (*customized_image.ParentName)(nil)
}

func (h *CreateCustomizedImageDescriptorServerMsgHandle) ExtractResourceName(msg proto.Message) gotenresource.Name {
	typedMsg := msg.(*customized_image.CustomizedImage)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractResourceName(*customized_image.CustomizedImage) *customized_image.Name
	})
	if ok {
		return override.OverrideExtractResourceName(typedMsg)
	}
	{
		if name := typedMsg.GetName(); name != nil {
			return name
		}
	}
	return (*customized_image.Name)(nil)
}

func (h *CreateCustomizedImageDescriptorServerMsgHandle) ExtractResourceNames(msg proto.Message) gotenresource.NameList {
	typedMsg := msg.(*customized_image.CustomizedImage)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractResourceNames(*customized_image.CustomizedImage) []*customized_image.Name
	})
	if ok {
		return customized_image.CustomizedImageNameList(override.OverrideExtractResourceNames(typedMsg))
	}
	return nil
}

func (h *CreateCustomizedImageDescriptorServerMsgHandle) ExtractCollectionName(msg proto.Message) gotenresource.Name {
	typedMsg := msg.(*customized_image.CustomizedImage)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractCollectionName(*customized_image.CustomizedImage) *customized_image.ParentName
	})
	if ok {
		return override.OverrideExtractCollectionName(typedMsg)
	}
	return nil
}

func GetCreateCustomizedImageDescriptor() *CreateCustomizedImageDescriptor {
	return createCustomizedImageDescriptor
}

type UpdateCustomizedImageDescriptor struct{}

type UpdateCustomizedImageDescriptorClientMsgHandle struct{}

type UpdateCustomizedImageDescriptorServerMsgHandle struct{}

func (d *UpdateCustomizedImageDescriptor) NewEmptyClientMsg() proto.Message {
	return &UpdateCustomizedImageRequest{}
}

func (d *UpdateCustomizedImageDescriptor) NewEmptyServerMsg() proto.Message {
	return &customized_image.CustomizedImage{}
}

func (d *UpdateCustomizedImageDescriptor) IsUnary() bool {
	return true
}

func (d *UpdateCustomizedImageDescriptor) IsClientStream() bool {
	return false
}

func (d *UpdateCustomizedImageDescriptor) IsServerStream() bool {
	return false
}

func (d *UpdateCustomizedImageDescriptor) IsCollection() bool {
	return false
}

func (d *UpdateCustomizedImageDescriptor) IsPlural() bool {
	return false
}

func (d *UpdateCustomizedImageDescriptor) HasResource() bool {
	return true
}

func (d *UpdateCustomizedImageDescriptor) RequestHasResourceBody() bool {
	return true
}

func (d *UpdateCustomizedImageDescriptor) GetVerb() string {
	return "update"
}

func (d *UpdateCustomizedImageDescriptor) GetMethodName() string {
	return "UpdateCustomizedImage"
}

func (d *UpdateCustomizedImageDescriptor) GetFullMethodName() string {
	return "/ntt.devices.v1alpha2.CustomizedImageService/UpdateCustomizedImage"
}

func (d *UpdateCustomizedImageDescriptor) GetProtoPkgName() string {
	return "ntt.devices.v1alpha2"
}

func (d *UpdateCustomizedImageDescriptor) GetApiName() string {
	return "CustomizedImageService"
}

func (d *UpdateCustomizedImageDescriptor) GetServiceDomain() string {
	return "devices.edgelq.com"
}

func (d *UpdateCustomizedImageDescriptor) GetServiceVersion() string {
	return "v1alpha2"
}

func (d *UpdateCustomizedImageDescriptor) GetApiDescriptor() gotenclient.ApiDescriptor {
	return customizedImageServiceDescriptor
}

func (d *UpdateCustomizedImageDescriptor) GetResourceDescriptor() gotenresource.Descriptor {
	return customized_image.GetDescriptor()
}

func (d *UpdateCustomizedImageDescriptor) GetClientMsgReflectHandle() gotenclient.MethodMsgHandle {
	return &UpdateCustomizedImageDescriptorClientMsgHandle{}
}

func (d *UpdateCustomizedImageDescriptor) GetServerMsgReflectHandle() gotenclient.MethodMsgHandle {
	return &UpdateCustomizedImageDescriptorServerMsgHandle{}
}

func (h *UpdateCustomizedImageDescriptorClientMsgHandle) ExtractResourceName(msg proto.Message) gotenresource.Name {
	typedMsg := msg.(*UpdateCustomizedImageRequest)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractResourceName(*UpdateCustomizedImageRequest) *customized_image.Name
	})
	if ok {
		return override.OverrideExtractResourceName(typedMsg)
	}
	{
		res := typedMsg.GetCustomizedImage()
		if name := res.GetName(); name != nil {
			return name
		}
	}
	return (*customized_image.Name)(nil)
}

func (h *UpdateCustomizedImageDescriptorClientMsgHandle) ExtractResourceNames(msg proto.Message) gotenresource.NameList {
	typedMsg := msg.(*UpdateCustomizedImageRequest)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractResourceNames(*UpdateCustomizedImageRequest) []*customized_image.Name
	})
	if ok {
		return customized_image.CustomizedImageNameList(override.OverrideExtractResourceNames(typedMsg))
	}
	return nil
}

func (h *UpdateCustomizedImageDescriptorClientMsgHandle) ExtractCollectionName(msg proto.Message) gotenresource.Name {
	typedMsg := msg.(*UpdateCustomizedImageRequest)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractCollectionName(*UpdateCustomizedImageRequest) *customized_image.ParentName
	})
	if ok {
		return override.OverrideExtractCollectionName(typedMsg)
	}
	return nil
}

func (h *UpdateCustomizedImageDescriptorServerMsgHandle) ExtractResourceName(msg proto.Message) gotenresource.Name {
	typedMsg := msg.(*customized_image.CustomizedImage)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractResourceName(*customized_image.CustomizedImage) *customized_image.Name
	})
	if ok {
		return override.OverrideExtractResourceName(typedMsg)
	}
	{
		if name := typedMsg.GetName(); name != nil {
			return name
		}
	}
	return (*customized_image.Name)(nil)
}

func (h *UpdateCustomizedImageDescriptorServerMsgHandle) ExtractResourceNames(msg proto.Message) gotenresource.NameList {
	typedMsg := msg.(*customized_image.CustomizedImage)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractResourceNames(*customized_image.CustomizedImage) []*customized_image.Name
	})
	if ok {
		return customized_image.CustomizedImageNameList(override.OverrideExtractResourceNames(typedMsg))
	}
	return nil
}

func (h *UpdateCustomizedImageDescriptorServerMsgHandle) ExtractCollectionName(msg proto.Message) gotenresource.Name {
	typedMsg := msg.(*customized_image.CustomizedImage)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractCollectionName(*customized_image.CustomizedImage) *customized_image.ParentName
	})
	if ok {
		return override.OverrideExtractCollectionName(typedMsg)
	}
	return nil
}

func GetUpdateCustomizedImageDescriptor() *UpdateCustomizedImageDescriptor {
	return updateCustomizedImageDescriptor
}

type DeleteCustomizedImageDescriptor struct{}

type DeleteCustomizedImageDescriptorClientMsgHandle struct{}

type DeleteCustomizedImageDescriptorServerMsgHandle struct{}

func (d *DeleteCustomizedImageDescriptor) NewEmptyClientMsg() proto.Message {
	return &DeleteCustomizedImageRequest{}
}

func (d *DeleteCustomizedImageDescriptor) NewEmptyServerMsg() proto.Message {
	return &empty.Empty{}
}

func (d *DeleteCustomizedImageDescriptor) IsUnary() bool {
	return true
}

func (d *DeleteCustomizedImageDescriptor) IsClientStream() bool {
	return false
}

func (d *DeleteCustomizedImageDescriptor) IsServerStream() bool {
	return false
}

func (d *DeleteCustomizedImageDescriptor) IsCollection() bool {
	return false
}

func (d *DeleteCustomizedImageDescriptor) IsPlural() bool {
	return false
}

func (d *DeleteCustomizedImageDescriptor) HasResource() bool {
	return true
}

func (d *DeleteCustomizedImageDescriptor) RequestHasResourceBody() bool {
	return false
}

func (d *DeleteCustomizedImageDescriptor) GetVerb() string {
	return "delete"
}

func (d *DeleteCustomizedImageDescriptor) GetMethodName() string {
	return "DeleteCustomizedImage"
}

func (d *DeleteCustomizedImageDescriptor) GetFullMethodName() string {
	return "/ntt.devices.v1alpha2.CustomizedImageService/DeleteCustomizedImage"
}

func (d *DeleteCustomizedImageDescriptor) GetProtoPkgName() string {
	return "ntt.devices.v1alpha2"
}

func (d *DeleteCustomizedImageDescriptor) GetApiName() string {
	return "CustomizedImageService"
}

func (d *DeleteCustomizedImageDescriptor) GetServiceDomain() string {
	return "devices.edgelq.com"
}

func (d *DeleteCustomizedImageDescriptor) GetServiceVersion() string {
	return "v1alpha2"
}

func (d *DeleteCustomizedImageDescriptor) GetApiDescriptor() gotenclient.ApiDescriptor {
	return customizedImageServiceDescriptor
}

func (d *DeleteCustomizedImageDescriptor) GetResourceDescriptor() gotenresource.Descriptor {
	return customized_image.GetDescriptor()
}

func (d *DeleteCustomizedImageDescriptor) GetClientMsgReflectHandle() gotenclient.MethodMsgHandle {
	return &DeleteCustomizedImageDescriptorClientMsgHandle{}
}

func (d *DeleteCustomizedImageDescriptor) GetServerMsgReflectHandle() gotenclient.MethodMsgHandle {
	return &DeleteCustomizedImageDescriptorServerMsgHandle{}
}

func (h *DeleteCustomizedImageDescriptorClientMsgHandle) ExtractResourceName(msg proto.Message) gotenresource.Name {
	typedMsg := msg.(*DeleteCustomizedImageRequest)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractResourceName(*DeleteCustomizedImageRequest) *customized_image.Name
	})
	if ok {
		return override.OverrideExtractResourceName(typedMsg)
	}
	{
		if ref := typedMsg.GetName(); ref != nil {
			return &ref.Name
		}
	}
	return (*customized_image.Name)(nil)
}

func (h *DeleteCustomizedImageDescriptorClientMsgHandle) ExtractResourceNames(msg proto.Message) gotenresource.NameList {
	typedMsg := msg.(*DeleteCustomizedImageRequest)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractResourceNames(*DeleteCustomizedImageRequest) []*customized_image.Name
	})
	if ok {
		return customized_image.CustomizedImageNameList(override.OverrideExtractResourceNames(typedMsg))
	}
	return nil
}

func (h *DeleteCustomizedImageDescriptorClientMsgHandle) ExtractCollectionName(msg proto.Message) gotenresource.Name {
	typedMsg := msg.(*DeleteCustomizedImageRequest)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractCollectionName(*DeleteCustomizedImageRequest) *customized_image.ParentName
	})
	if ok {
		return override.OverrideExtractCollectionName(typedMsg)
	}
	return nil
}

func (h *DeleteCustomizedImageDescriptorServerMsgHandle) ExtractResourceName(msg proto.Message) gotenresource.Name {
	typedMsg := msg.(*empty.Empty)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractResourceName(*empty.Empty) *customized_image.Name
	})
	if ok {
		return override.OverrideExtractResourceName(typedMsg)
	}
	return nil
}

func (h *DeleteCustomizedImageDescriptorServerMsgHandle) ExtractResourceNames(msg proto.Message) gotenresource.NameList {
	typedMsg := msg.(*empty.Empty)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractResourceNames(*empty.Empty) []*customized_image.Name
	})
	if ok {
		return customized_image.CustomizedImageNameList(override.OverrideExtractResourceNames(typedMsg))
	}
	return nil
}

func (h *DeleteCustomizedImageDescriptorServerMsgHandle) ExtractCollectionName(msg proto.Message) gotenresource.Name {
	typedMsg := msg.(*empty.Empty)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractCollectionName(*empty.Empty) *customized_image.ParentName
	})
	if ok {
		return override.OverrideExtractCollectionName(typedMsg)
	}
	return nil
}

func GetDeleteCustomizedImageDescriptor() *DeleteCustomizedImageDescriptor {
	return deleteCustomizedImageDescriptor
}

type RequestUrlDescriptor struct{}

type RequestUrlDescriptorClientMsgHandle struct{}

type RequestUrlDescriptorServerMsgHandle struct{}

func (d *RequestUrlDescriptor) NewEmptyClientMsg() proto.Message {
	return &RequestUrlRequest{}
}

func (d *RequestUrlDescriptor) NewEmptyServerMsg() proto.Message {
	return &RequestUrlResponse{}
}

func (d *RequestUrlDescriptor) IsUnary() bool {
	return true
}

func (d *RequestUrlDescriptor) IsClientStream() bool {
	return false
}

func (d *RequestUrlDescriptor) IsServerStream() bool {
	return false
}

func (d *RequestUrlDescriptor) IsCollection() bool {
	return false
}

func (d *RequestUrlDescriptor) IsPlural() bool {
	return false
}

func (d *RequestUrlDescriptor) HasResource() bool {
	return true
}

func (d *RequestUrlDescriptor) RequestHasResourceBody() bool {
	return false
}

func (d *RequestUrlDescriptor) GetVerb() string {
	return "requestUrl"
}

func (d *RequestUrlDescriptor) GetMethodName() string {
	return "RequestUrl"
}

func (d *RequestUrlDescriptor) GetFullMethodName() string {
	return "/ntt.devices.v1alpha2.CustomizedImageService/RequestUrl"
}

func (d *RequestUrlDescriptor) GetProtoPkgName() string {
	return "ntt.devices.v1alpha2"
}

func (d *RequestUrlDescriptor) GetApiName() string {
	return "CustomizedImageService"
}

func (d *RequestUrlDescriptor) GetServiceDomain() string {
	return "devices.edgelq.com"
}

func (d *RequestUrlDescriptor) GetServiceVersion() string {
	return "v1alpha2"
}

func (d *RequestUrlDescriptor) GetApiDescriptor() gotenclient.ApiDescriptor {
	return customizedImageServiceDescriptor
}

func (d *RequestUrlDescriptor) GetResourceDescriptor() gotenresource.Descriptor {
	return customized_image.GetDescriptor()
}

func (d *RequestUrlDescriptor) GetClientMsgReflectHandle() gotenclient.MethodMsgHandle {
	return &RequestUrlDescriptorClientMsgHandle{}
}

func (d *RequestUrlDescriptor) GetServerMsgReflectHandle() gotenclient.MethodMsgHandle {
	return &RequestUrlDescriptorServerMsgHandle{}
}

func (h *RequestUrlDescriptorClientMsgHandle) ExtractResourceName(msg proto.Message) gotenresource.Name {
	typedMsg := msg.(*RequestUrlRequest)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractResourceName(*RequestUrlRequest) *customized_image.Name
	})
	if ok {
		return override.OverrideExtractResourceName(typedMsg)
	}
	{
		if ref := typedMsg.GetName(); ref != nil {
			return &ref.Name
		}
	}
	return (*customized_image.Name)(nil)
}

func (h *RequestUrlDescriptorClientMsgHandle) ExtractResourceNames(msg proto.Message) gotenresource.NameList {
	typedMsg := msg.(*RequestUrlRequest)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractResourceNames(*RequestUrlRequest) []*customized_image.Name
	})
	if ok {
		return customized_image.CustomizedImageNameList(override.OverrideExtractResourceNames(typedMsg))
	}
	return nil
}

func (h *RequestUrlDescriptorClientMsgHandle) ExtractCollectionName(msg proto.Message) gotenresource.Name {
	typedMsg := msg.(*RequestUrlRequest)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractCollectionName(*RequestUrlRequest) *customized_image.ParentName
	})
	if ok {
		return override.OverrideExtractCollectionName(typedMsg)
	}
	return nil
}

func (h *RequestUrlDescriptorServerMsgHandle) ExtractResourceName(msg proto.Message) gotenresource.Name {
	typedMsg := msg.(*RequestUrlResponse)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractResourceName(*RequestUrlResponse) *customized_image.Name
	})
	if ok {
		return override.OverrideExtractResourceName(typedMsg)
	}
	return nil
}

func (h *RequestUrlDescriptorServerMsgHandle) ExtractResourceNames(msg proto.Message) gotenresource.NameList {
	typedMsg := msg.(*RequestUrlResponse)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractResourceNames(*RequestUrlResponse) []*customized_image.Name
	})
	if ok {
		return customized_image.CustomizedImageNameList(override.OverrideExtractResourceNames(typedMsg))
	}
	return nil
}

func (h *RequestUrlDescriptorServerMsgHandle) ExtractCollectionName(msg proto.Message) gotenresource.Name {
	typedMsg := msg.(*RequestUrlResponse)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractCollectionName(*RequestUrlResponse) *customized_image.ParentName
	})
	if ok {
		return override.OverrideExtractCollectionName(typedMsg)
	}
	return nil
}

func GetRequestUrlDescriptor() *RequestUrlDescriptor {
	return requestUrlDescriptor
}

type CustomizedImageServiceDescriptor struct{}

func (d *CustomizedImageServiceDescriptor) AllMethodDescriptors() []gotenclient.MethodDescriptor {
	return []gotenclient.MethodDescriptor{
		getCustomizedImageDescriptor,
		batchGetCustomizedImagesDescriptor,
		listCustomizedImagesDescriptor,
		watchCustomizedImageDescriptor,
		watchCustomizedImagesDescriptor,
		createCustomizedImageDescriptor,
		updateCustomizedImageDescriptor,
		deleteCustomizedImageDescriptor,
		requestUrlDescriptor,
	}
}

func (d *CustomizedImageServiceDescriptor) GetFullAPIName() string {
	return "/ntt.devices.v1alpha2.CustomizedImageService"
}

func (d *CustomizedImageServiceDescriptor) GetProtoPkgName() string {
	return "ntt.devices.v1alpha2"
}

func (d *CustomizedImageServiceDescriptor) GetApiName() string {
	return "CustomizedImageService"
}

func (d *CustomizedImageServiceDescriptor) GetServiceDomain() string {
	return "devices.edgelq.com"
}

func (d *CustomizedImageServiceDescriptor) GetServiceVersion() string {
	return "v1alpha2"
}

func GetCustomizedImageServiceDescriptor() *CustomizedImageServiceDescriptor {
	return customizedImageServiceDescriptor
}

func initDescriptors() {
	customizedImageServiceDescriptor = &CustomizedImageServiceDescriptor{}
	getCustomizedImageDescriptor = &GetCustomizedImageDescriptor{}
	batchGetCustomizedImagesDescriptor = &BatchGetCustomizedImagesDescriptor{}
	listCustomizedImagesDescriptor = &ListCustomizedImagesDescriptor{}
	watchCustomizedImageDescriptor = &WatchCustomizedImageDescriptor{}
	watchCustomizedImagesDescriptor = &WatchCustomizedImagesDescriptor{}
	createCustomizedImageDescriptor = &CreateCustomizedImageDescriptor{}
	updateCustomizedImageDescriptor = &UpdateCustomizedImageDescriptor{}
	deleteCustomizedImageDescriptor = &DeleteCustomizedImageDescriptor{}
	requestUrlDescriptor = &RequestUrlDescriptor{}
	gotenclient.GetRegistry().RegisterApiDescriptor(customizedImageServiceDescriptor)
	gotenclient.GetRegistry().RegisterMethodDescriptor(getCustomizedImageDescriptor)
	gotenclient.GetRegistry().RegisterMethodDescriptor(batchGetCustomizedImagesDescriptor)
	gotenclient.GetRegistry().RegisterMethodDescriptor(listCustomizedImagesDescriptor)
	gotenclient.GetRegistry().RegisterMethodDescriptor(watchCustomizedImageDescriptor)
	gotenclient.GetRegistry().RegisterMethodDescriptor(watchCustomizedImagesDescriptor)
	gotenclient.GetRegistry().RegisterMethodDescriptor(createCustomizedImageDescriptor)
	gotenclient.GetRegistry().RegisterMethodDescriptor(updateCustomizedImageDescriptor)
	gotenclient.GetRegistry().RegisterMethodDescriptor(deleteCustomizedImageDescriptor)
	gotenclient.GetRegistry().RegisterMethodDescriptor(requestUrlDescriptor)
}

func init() {
	if !descriptorsInitialized {
		initDescriptors()
		descriptorsInitialized = true
	}
}
