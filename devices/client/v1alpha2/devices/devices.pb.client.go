// Code generated by protoc-gen-goten-client
// Service: Devices
// DO NOT EDIT!!!

package devices_client

import (
	"google.golang.org/grpc"
)

// proto imports
import (
	broker_client "github.com/cloudwan/edgelq-sdk/devices/client/v1alpha2/broker"
	device_client "github.com/cloudwan/edgelq-sdk/devices/client/v1alpha2/device"
	project_client "github.com/cloudwan/edgelq-sdk/devices/client/v1alpha2/project"
	provisioning_approval_request_client "github.com/cloudwan/edgelq-sdk/devices/client/v1alpha2/provisioning_approval_request"
	provisioning_policy_client "github.com/cloudwan/edgelq-sdk/devices/client/v1alpha2/provisioning_policy"
	public_client "github.com/cloudwan/edgelq-sdk/devices/client/v1alpha2/public"
)

// Reference imports to suppress errors if they are not otherwise used.
var (
	_ = grpc.ClientConn{}
)

// make sure we're using proto imports
var (
	_ = &device_client.GetDeviceRequest{}
	_ = &project_client.GetProjectRequest{}
	_ = &provisioning_approval_request_client.GetProvisioningApprovalRequestRequest{}
	_ = &provisioning_policy_client.GetProvisioningPolicyRequest{}
)

type DevicesClient interface {
	broker_client.BrokerServiceClient
	device_client.DeviceServiceClient
	project_client.ProjectServiceClient
	provisioning_approval_request_client.ProvisioningApprovalRequestServiceClient
	provisioning_policy_client.ProvisioningPolicyServiceClient
	public_client.PublicServiceClient
}

type devicesClient struct {
	broker_client.BrokerServiceClient
	device_client.DeviceServiceClient
	project_client.ProjectServiceClient
	provisioning_approval_request_client.ProvisioningApprovalRequestServiceClient
	provisioning_policy_client.ProvisioningPolicyServiceClient
	public_client.PublicServiceClient
}

func NewDevicesClient(cc grpc.ClientConnInterface) DevicesClient {
	return &devicesClient{
		BrokerServiceClient:                      broker_client.NewBrokerServiceClient(cc),
		DeviceServiceClient:                      device_client.NewDeviceServiceClient(cc),
		ProjectServiceClient:                     project_client.NewProjectServiceClient(cc),
		ProvisioningApprovalRequestServiceClient: provisioning_approval_request_client.NewProvisioningApprovalRequestServiceClient(cc),
		ProvisioningPolicyServiceClient:          provisioning_policy_client.NewProvisioningPolicyServiceClient(cc),
		PublicServiceClient:                      public_client.NewPublicServiceClient(cc),
	}
}
