// Code generated by protoc-gen-goten-object
// File: edgelq/devices/proto/v1alpha2/broker_custom.proto
// DO NOT EDIT!!!

package broker_client

// proto imports
import (
	ntt_meta "github.com/cloudwan/edgelq-sdk/common/types/meta"
	multi_region_policy "github.com/cloudwan/edgelq-sdk/common/types/multi_region_policy"
	device "github.com/cloudwan/edgelq-sdk/devices/resources/v1alpha2/device"
	project "github.com/cloudwan/edgelq-sdk/devices/resources/v1alpha2/project"
	iam_attestation_domain "github.com/cloudwan/edgelq-sdk/iam/resources/v1alpha2/attestation_domain"
	iam_iam_common "github.com/cloudwan/edgelq-sdk/iam/resources/v1alpha2/common"
	iam_organization "github.com/cloudwan/edgelq-sdk/iam/resources/v1alpha2/organization"
	iam_project "github.com/cloudwan/edgelq-sdk/iam/resources/v1alpha2/project"
	iam_service_account "github.com/cloudwan/edgelq-sdk/iam/resources/v1alpha2/service_account"
	meta_service "github.com/cloudwan/edgelq-sdk/meta/resources/v1alpha2/service"
	duration "github.com/golang/protobuf/ptypes/duration"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	latlng "google.golang.org/genproto/googleapis/type/latlng"
	field_mask "google.golang.org/genproto/protobuf/field_mask"
)

// make sure we're using proto imports
var (
	_ = &ntt_meta.Meta{}
	_ = &multi_region_policy.MultiRegionPolicy{}
	_ = &device.Device{}
	_ = &project.Project{}
	_ = &iam_attestation_domain.AttestationDomain{}
	_ = &iam_iam_common.PCR{}
	_ = &iam_organization.Organization{}
	_ = &iam_project.Project{}
	_ = &iam_service_account.ServiceAccount{}
	_ = &meta_service.Service{}
	_ = &duration.Duration{}
	_ = &field_mask.FieldMask{}
	_ = &timestamp.Timestamp{}
	_ = &latlng.LatLng{}
)

type ListenForConnectionsRequestFieldPathBuilder struct{}

func NewListenForConnectionsRequestFieldPathBuilder() ListenForConnectionsRequestFieldPathBuilder {
	return ListenForConnectionsRequestFieldPathBuilder{}
}
func (ListenForConnectionsRequestFieldPathBuilder) RegisterListener() ListenForConnectionsRequestPathSelectorRegisterListener {
	return ListenForConnectionsRequestPathSelectorRegisterListener{}
}
func (ListenForConnectionsRequestFieldPathBuilder) ChannelOpenError() ListenForConnectionsRequestPathSelectorChannelOpenError {
	return ListenForConnectionsRequestPathSelectorChannelOpenError{}
}
func (ListenForConnectionsRequestFieldPathBuilder) KeepAlive() ListenForConnectionsRequestPathSelectorKeepAlive {
	return ListenForConnectionsRequestPathSelectorKeepAlive{}
}

type ListenForConnectionsRequestPathSelectorRegisterListener struct{}

func (ListenForConnectionsRequestPathSelectorRegisterListener) FieldPath() *ListenForConnectionsRequest_FieldTerminalPath {
	return &ListenForConnectionsRequest_FieldTerminalPath{selector: ListenForConnectionsRequest_FieldPathSelectorRegisterListener}
}

func (s ListenForConnectionsRequestPathSelectorRegisterListener) WithValue(value *ListenForConnectionsRequest_RegisterListener) *ListenForConnectionsRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*ListenForConnectionsRequest_FieldTerminalPathValue)
}

func (s ListenForConnectionsRequestPathSelectorRegisterListener) WithArrayOfValues(values []*ListenForConnectionsRequest_RegisterListener) *ListenForConnectionsRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListenForConnectionsRequest_FieldTerminalPathArrayOfValues)
}

func (ListenForConnectionsRequestPathSelectorRegisterListener) WithSubPath(subPath ListenForConnectionsRequestRegisterListener_FieldPath) *ListenForConnectionsRequest_FieldSubPath {
	return &ListenForConnectionsRequest_FieldSubPath{selector: ListenForConnectionsRequest_FieldPathSelectorRegisterListener, subPath: subPath}
}

func (s ListenForConnectionsRequestPathSelectorRegisterListener) WithSubValue(subPathValue ListenForConnectionsRequestRegisterListener_FieldPathValue) *ListenForConnectionsRequest_FieldSubPathValue {
	return &ListenForConnectionsRequest_FieldSubPathValue{ListenForConnectionsRequest_FieldPath: s.WithSubPath(subPathValue), subPathValue: subPathValue}
}

func (s ListenForConnectionsRequestPathSelectorRegisterListener) WithSubArrayOfValues(subPathArrayOfValues ListenForConnectionsRequestRegisterListener_FieldPathArrayOfValues) *ListenForConnectionsRequest_FieldSubPathArrayOfValues {
	return &ListenForConnectionsRequest_FieldSubPathArrayOfValues{ListenForConnectionsRequest_FieldPath: s.WithSubPath(subPathArrayOfValues), subPathArrayOfValues: subPathArrayOfValues}
}

func (s ListenForConnectionsRequestPathSelectorRegisterListener) WithSubArrayItemValue(subPathArrayItemValue ListenForConnectionsRequestRegisterListener_FieldPathArrayItemValue) *ListenForConnectionsRequest_FieldSubPathArrayItemValue {
	return &ListenForConnectionsRequest_FieldSubPathArrayItemValue{ListenForConnectionsRequest_FieldPath: s.WithSubPath(subPathArrayItemValue), subPathItemValue: subPathArrayItemValue}
}

func (ListenForConnectionsRequestPathSelectorRegisterListener) Device() ListenForConnectionsRequestPathSelectorRegisterListenerDevice {
	return ListenForConnectionsRequestPathSelectorRegisterListenerDevice{}
}

type ListenForConnectionsRequestPathSelectorRegisterListenerDevice struct{}

func (ListenForConnectionsRequestPathSelectorRegisterListenerDevice) FieldPath() *ListenForConnectionsRequest_FieldSubPath {
	return &ListenForConnectionsRequest_FieldSubPath{
		selector: ListenForConnectionsRequest_FieldPathSelectorRegisterListener,
		subPath:  NewListenForConnectionsRequestRegisterListenerFieldPathBuilder().Device().FieldPath(),
	}
}

func (s ListenForConnectionsRequestPathSelectorRegisterListenerDevice) WithValue(value *device.Reference) *ListenForConnectionsRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListenForConnectionsRequest_FieldSubPathValue)
}

func (s ListenForConnectionsRequestPathSelectorRegisterListenerDevice) WithArrayOfValues(values []*device.Reference) *ListenForConnectionsRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListenForConnectionsRequest_FieldSubPathArrayOfValues)
}

type ListenForConnectionsRequestPathSelectorChannelOpenError struct{}

func (ListenForConnectionsRequestPathSelectorChannelOpenError) FieldPath() *ListenForConnectionsRequest_FieldTerminalPath {
	return &ListenForConnectionsRequest_FieldTerminalPath{selector: ListenForConnectionsRequest_FieldPathSelectorChannelOpenError}
}

func (s ListenForConnectionsRequestPathSelectorChannelOpenError) WithValue(value *ListenForConnectionsRequest_ChannelOpenError) *ListenForConnectionsRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*ListenForConnectionsRequest_FieldTerminalPathValue)
}

func (s ListenForConnectionsRequestPathSelectorChannelOpenError) WithArrayOfValues(values []*ListenForConnectionsRequest_ChannelOpenError) *ListenForConnectionsRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListenForConnectionsRequest_FieldTerminalPathArrayOfValues)
}

func (ListenForConnectionsRequestPathSelectorChannelOpenError) WithSubPath(subPath ListenForConnectionsRequestChannelOpenError_FieldPath) *ListenForConnectionsRequest_FieldSubPath {
	return &ListenForConnectionsRequest_FieldSubPath{selector: ListenForConnectionsRequest_FieldPathSelectorChannelOpenError, subPath: subPath}
}

func (s ListenForConnectionsRequestPathSelectorChannelOpenError) WithSubValue(subPathValue ListenForConnectionsRequestChannelOpenError_FieldPathValue) *ListenForConnectionsRequest_FieldSubPathValue {
	return &ListenForConnectionsRequest_FieldSubPathValue{ListenForConnectionsRequest_FieldPath: s.WithSubPath(subPathValue), subPathValue: subPathValue}
}

func (s ListenForConnectionsRequestPathSelectorChannelOpenError) WithSubArrayOfValues(subPathArrayOfValues ListenForConnectionsRequestChannelOpenError_FieldPathArrayOfValues) *ListenForConnectionsRequest_FieldSubPathArrayOfValues {
	return &ListenForConnectionsRequest_FieldSubPathArrayOfValues{ListenForConnectionsRequest_FieldPath: s.WithSubPath(subPathArrayOfValues), subPathArrayOfValues: subPathArrayOfValues}
}

func (s ListenForConnectionsRequestPathSelectorChannelOpenError) WithSubArrayItemValue(subPathArrayItemValue ListenForConnectionsRequestChannelOpenError_FieldPathArrayItemValue) *ListenForConnectionsRequest_FieldSubPathArrayItemValue {
	return &ListenForConnectionsRequest_FieldSubPathArrayItemValue{ListenForConnectionsRequest_FieldPath: s.WithSubPath(subPathArrayItemValue), subPathItemValue: subPathArrayItemValue}
}

func (ListenForConnectionsRequestPathSelectorChannelOpenError) Channel() ListenForConnectionsRequestPathSelectorChannelOpenErrorChannel {
	return ListenForConnectionsRequestPathSelectorChannelOpenErrorChannel{}
}

func (ListenForConnectionsRequestPathSelectorChannelOpenError) Message() ListenForConnectionsRequestPathSelectorChannelOpenErrorMessage {
	return ListenForConnectionsRequestPathSelectorChannelOpenErrorMessage{}
}

type ListenForConnectionsRequestPathSelectorChannelOpenErrorChannel struct{}

func (ListenForConnectionsRequestPathSelectorChannelOpenErrorChannel) FieldPath() *ListenForConnectionsRequest_FieldSubPath {
	return &ListenForConnectionsRequest_FieldSubPath{
		selector: ListenForConnectionsRequest_FieldPathSelectorChannelOpenError,
		subPath:  NewListenForConnectionsRequestChannelOpenErrorFieldPathBuilder().Channel().FieldPath(),
	}
}

func (s ListenForConnectionsRequestPathSelectorChannelOpenErrorChannel) WithValue(value string) *ListenForConnectionsRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListenForConnectionsRequest_FieldSubPathValue)
}

func (s ListenForConnectionsRequestPathSelectorChannelOpenErrorChannel) WithArrayOfValues(values []string) *ListenForConnectionsRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListenForConnectionsRequest_FieldSubPathArrayOfValues)
}

type ListenForConnectionsRequestPathSelectorChannelOpenErrorMessage struct{}

func (ListenForConnectionsRequestPathSelectorChannelOpenErrorMessage) FieldPath() *ListenForConnectionsRequest_FieldSubPath {
	return &ListenForConnectionsRequest_FieldSubPath{
		selector: ListenForConnectionsRequest_FieldPathSelectorChannelOpenError,
		subPath:  NewListenForConnectionsRequestChannelOpenErrorFieldPathBuilder().Message().FieldPath(),
	}
}

func (s ListenForConnectionsRequestPathSelectorChannelOpenErrorMessage) WithValue(value string) *ListenForConnectionsRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListenForConnectionsRequest_FieldSubPathValue)
}

func (s ListenForConnectionsRequestPathSelectorChannelOpenErrorMessage) WithArrayOfValues(values []string) *ListenForConnectionsRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListenForConnectionsRequest_FieldSubPathArrayOfValues)
}

type ListenForConnectionsRequestPathSelectorKeepAlive struct{}

func (ListenForConnectionsRequestPathSelectorKeepAlive) FieldPath() *ListenForConnectionsRequest_FieldTerminalPath {
	return &ListenForConnectionsRequest_FieldTerminalPath{selector: ListenForConnectionsRequest_FieldPathSelectorKeepAlive}
}

func (s ListenForConnectionsRequestPathSelectorKeepAlive) WithValue(value *ListenForConnectionsRequest_KeepAlive) *ListenForConnectionsRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*ListenForConnectionsRequest_FieldTerminalPathValue)
}

func (s ListenForConnectionsRequestPathSelectorKeepAlive) WithArrayOfValues(values []*ListenForConnectionsRequest_KeepAlive) *ListenForConnectionsRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListenForConnectionsRequest_FieldTerminalPathArrayOfValues)
}

func (ListenForConnectionsRequestPathSelectorKeepAlive) WithSubPath(subPath ListenForConnectionsRequestKeepAlive_FieldPath) *ListenForConnectionsRequest_FieldSubPath {
	return &ListenForConnectionsRequest_FieldSubPath{selector: ListenForConnectionsRequest_FieldPathSelectorKeepAlive, subPath: subPath}
}

func (s ListenForConnectionsRequestPathSelectorKeepAlive) WithSubValue(subPathValue ListenForConnectionsRequestKeepAlive_FieldPathValue) *ListenForConnectionsRequest_FieldSubPathValue {
	return &ListenForConnectionsRequest_FieldSubPathValue{ListenForConnectionsRequest_FieldPath: s.WithSubPath(subPathValue), subPathValue: subPathValue}
}

func (s ListenForConnectionsRequestPathSelectorKeepAlive) WithSubArrayOfValues(subPathArrayOfValues ListenForConnectionsRequestKeepAlive_FieldPathArrayOfValues) *ListenForConnectionsRequest_FieldSubPathArrayOfValues {
	return &ListenForConnectionsRequest_FieldSubPathArrayOfValues{ListenForConnectionsRequest_FieldPath: s.WithSubPath(subPathArrayOfValues), subPathArrayOfValues: subPathArrayOfValues}
}

func (s ListenForConnectionsRequestPathSelectorKeepAlive) WithSubArrayItemValue(subPathArrayItemValue ListenForConnectionsRequestKeepAlive_FieldPathArrayItemValue) *ListenForConnectionsRequest_FieldSubPathArrayItemValue {
	return &ListenForConnectionsRequest_FieldSubPathArrayItemValue{ListenForConnectionsRequest_FieldPath: s.WithSubPath(subPathArrayItemValue), subPathItemValue: subPathArrayItemValue}
}

type ListenForConnectionsRequestRegisterListenerFieldPathBuilder struct{}

func NewListenForConnectionsRequestRegisterListenerFieldPathBuilder() ListenForConnectionsRequestRegisterListenerFieldPathBuilder {
	return ListenForConnectionsRequestRegisterListenerFieldPathBuilder{}
}
func (ListenForConnectionsRequestRegisterListenerFieldPathBuilder) Device() ListenForConnectionsRequest_RegisterListenerPathSelectorDevice {
	return ListenForConnectionsRequest_RegisterListenerPathSelectorDevice{}
}

type ListenForConnectionsRequest_RegisterListenerPathSelectorDevice struct{}

func (ListenForConnectionsRequest_RegisterListenerPathSelectorDevice) FieldPath() *ListenForConnectionsRequestRegisterListener_FieldTerminalPath {
	return &ListenForConnectionsRequestRegisterListener_FieldTerminalPath{selector: ListenForConnectionsRequestRegisterListener_FieldPathSelectorDevice}
}

func (s ListenForConnectionsRequest_RegisterListenerPathSelectorDevice) WithValue(value *device.Reference) *ListenForConnectionsRequestRegisterListener_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*ListenForConnectionsRequestRegisterListener_FieldTerminalPathValue)
}

func (s ListenForConnectionsRequest_RegisterListenerPathSelectorDevice) WithArrayOfValues(values []*device.Reference) *ListenForConnectionsRequestRegisterListener_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListenForConnectionsRequestRegisterListener_FieldTerminalPathArrayOfValues)
}

type ListenForConnectionsRequestChannelOpenErrorFieldPathBuilder struct{}

func NewListenForConnectionsRequestChannelOpenErrorFieldPathBuilder() ListenForConnectionsRequestChannelOpenErrorFieldPathBuilder {
	return ListenForConnectionsRequestChannelOpenErrorFieldPathBuilder{}
}
func (ListenForConnectionsRequestChannelOpenErrorFieldPathBuilder) Channel() ListenForConnectionsRequest_ChannelOpenErrorPathSelectorChannel {
	return ListenForConnectionsRequest_ChannelOpenErrorPathSelectorChannel{}
}
func (ListenForConnectionsRequestChannelOpenErrorFieldPathBuilder) Message() ListenForConnectionsRequest_ChannelOpenErrorPathSelectorMessage {
	return ListenForConnectionsRequest_ChannelOpenErrorPathSelectorMessage{}
}

type ListenForConnectionsRequest_ChannelOpenErrorPathSelectorChannel struct{}

func (ListenForConnectionsRequest_ChannelOpenErrorPathSelectorChannel) FieldPath() *ListenForConnectionsRequestChannelOpenError_FieldTerminalPath {
	return &ListenForConnectionsRequestChannelOpenError_FieldTerminalPath{selector: ListenForConnectionsRequestChannelOpenError_FieldPathSelectorChannel}
}

func (s ListenForConnectionsRequest_ChannelOpenErrorPathSelectorChannel) WithValue(value string) *ListenForConnectionsRequestChannelOpenError_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*ListenForConnectionsRequestChannelOpenError_FieldTerminalPathValue)
}

func (s ListenForConnectionsRequest_ChannelOpenErrorPathSelectorChannel) WithArrayOfValues(values []string) *ListenForConnectionsRequestChannelOpenError_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListenForConnectionsRequestChannelOpenError_FieldTerminalPathArrayOfValues)
}

type ListenForConnectionsRequest_ChannelOpenErrorPathSelectorMessage struct{}

func (ListenForConnectionsRequest_ChannelOpenErrorPathSelectorMessage) FieldPath() *ListenForConnectionsRequestChannelOpenError_FieldTerminalPath {
	return &ListenForConnectionsRequestChannelOpenError_FieldTerminalPath{selector: ListenForConnectionsRequestChannelOpenError_FieldPathSelectorMessage}
}

func (s ListenForConnectionsRequest_ChannelOpenErrorPathSelectorMessage) WithValue(value string) *ListenForConnectionsRequestChannelOpenError_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*ListenForConnectionsRequestChannelOpenError_FieldTerminalPathValue)
}

func (s ListenForConnectionsRequest_ChannelOpenErrorPathSelectorMessage) WithArrayOfValues(values []string) *ListenForConnectionsRequestChannelOpenError_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListenForConnectionsRequestChannelOpenError_FieldTerminalPathArrayOfValues)
}

type ListenForConnectionsRequestKeepAliveFieldPathBuilder struct{}

func NewListenForConnectionsRequestKeepAliveFieldPathBuilder() ListenForConnectionsRequestKeepAliveFieldPathBuilder {
	return ListenForConnectionsRequestKeepAliveFieldPathBuilder{}
}

type ListenForConnectionsResponseFieldPathBuilder struct{}

func NewListenForConnectionsResponseFieldPathBuilder() ListenForConnectionsResponseFieldPathBuilder {
	return ListenForConnectionsResponseFieldPathBuilder{}
}
func (ListenForConnectionsResponseFieldPathBuilder) ChannelRequested() ListenForConnectionsResponsePathSelectorChannelRequested {
	return ListenForConnectionsResponsePathSelectorChannelRequested{}
}
func (ListenForConnectionsResponseFieldPathBuilder) KeepAlive() ListenForConnectionsResponsePathSelectorKeepAlive {
	return ListenForConnectionsResponsePathSelectorKeepAlive{}
}

type ListenForConnectionsResponsePathSelectorChannelRequested struct{}

func (ListenForConnectionsResponsePathSelectorChannelRequested) FieldPath() *ListenForConnectionsResponse_FieldTerminalPath {
	return &ListenForConnectionsResponse_FieldTerminalPath{selector: ListenForConnectionsResponse_FieldPathSelectorChannelRequested}
}

func (s ListenForConnectionsResponsePathSelectorChannelRequested) WithValue(value *ListenForConnectionsResponse_ChannelRequested) *ListenForConnectionsResponse_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*ListenForConnectionsResponse_FieldTerminalPathValue)
}

func (s ListenForConnectionsResponsePathSelectorChannelRequested) WithArrayOfValues(values []*ListenForConnectionsResponse_ChannelRequested) *ListenForConnectionsResponse_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListenForConnectionsResponse_FieldTerminalPathArrayOfValues)
}

func (ListenForConnectionsResponsePathSelectorChannelRequested) WithSubPath(subPath ListenForConnectionsResponseChannelRequested_FieldPath) *ListenForConnectionsResponse_FieldSubPath {
	return &ListenForConnectionsResponse_FieldSubPath{selector: ListenForConnectionsResponse_FieldPathSelectorChannelRequested, subPath: subPath}
}

func (s ListenForConnectionsResponsePathSelectorChannelRequested) WithSubValue(subPathValue ListenForConnectionsResponseChannelRequested_FieldPathValue) *ListenForConnectionsResponse_FieldSubPathValue {
	return &ListenForConnectionsResponse_FieldSubPathValue{ListenForConnectionsResponse_FieldPath: s.WithSubPath(subPathValue), subPathValue: subPathValue}
}

func (s ListenForConnectionsResponsePathSelectorChannelRequested) WithSubArrayOfValues(subPathArrayOfValues ListenForConnectionsResponseChannelRequested_FieldPathArrayOfValues) *ListenForConnectionsResponse_FieldSubPathArrayOfValues {
	return &ListenForConnectionsResponse_FieldSubPathArrayOfValues{ListenForConnectionsResponse_FieldPath: s.WithSubPath(subPathArrayOfValues), subPathArrayOfValues: subPathArrayOfValues}
}

func (s ListenForConnectionsResponsePathSelectorChannelRequested) WithSubArrayItemValue(subPathArrayItemValue ListenForConnectionsResponseChannelRequested_FieldPathArrayItemValue) *ListenForConnectionsResponse_FieldSubPathArrayItemValue {
	return &ListenForConnectionsResponse_FieldSubPathArrayItemValue{ListenForConnectionsResponse_FieldPath: s.WithSubPath(subPathArrayItemValue), subPathItemValue: subPathArrayItemValue}
}

func (ListenForConnectionsResponsePathSelectorChannelRequested) Channel() ListenForConnectionsResponsePathSelectorChannelRequestedChannel {
	return ListenForConnectionsResponsePathSelectorChannelRequestedChannel{}
}

func (ListenForConnectionsResponsePathSelectorChannelRequested) Service() ListenForConnectionsResponsePathSelectorChannelRequestedService {
	return ListenForConnectionsResponsePathSelectorChannelRequestedService{}
}

func (ListenForConnectionsResponsePathSelectorChannelRequested) Arg() ListenForConnectionsResponsePathSelectorChannelRequestedArg {
	return ListenForConnectionsResponsePathSelectorChannelRequestedArg{}
}

type ListenForConnectionsResponsePathSelectorChannelRequestedChannel struct{}

func (ListenForConnectionsResponsePathSelectorChannelRequestedChannel) FieldPath() *ListenForConnectionsResponse_FieldSubPath {
	return &ListenForConnectionsResponse_FieldSubPath{
		selector: ListenForConnectionsResponse_FieldPathSelectorChannelRequested,
		subPath:  NewListenForConnectionsResponseChannelRequestedFieldPathBuilder().Channel().FieldPath(),
	}
}

func (s ListenForConnectionsResponsePathSelectorChannelRequestedChannel) WithValue(value string) *ListenForConnectionsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListenForConnectionsResponse_FieldSubPathValue)
}

func (s ListenForConnectionsResponsePathSelectorChannelRequestedChannel) WithArrayOfValues(values []string) *ListenForConnectionsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListenForConnectionsResponse_FieldSubPathArrayOfValues)
}

type ListenForConnectionsResponsePathSelectorChannelRequestedService struct{}

func (ListenForConnectionsResponsePathSelectorChannelRequestedService) FieldPath() *ListenForConnectionsResponse_FieldSubPath {
	return &ListenForConnectionsResponse_FieldSubPath{
		selector: ListenForConnectionsResponse_FieldPathSelectorChannelRequested,
		subPath:  NewListenForConnectionsResponseChannelRequestedFieldPathBuilder().Service().FieldPath(),
	}
}

func (s ListenForConnectionsResponsePathSelectorChannelRequestedService) WithValue(value BrokerServiceType) *ListenForConnectionsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListenForConnectionsResponse_FieldSubPathValue)
}

func (s ListenForConnectionsResponsePathSelectorChannelRequestedService) WithArrayOfValues(values []BrokerServiceType) *ListenForConnectionsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListenForConnectionsResponse_FieldSubPathArrayOfValues)
}

type ListenForConnectionsResponsePathSelectorChannelRequestedArg struct{}

func (ListenForConnectionsResponsePathSelectorChannelRequestedArg) FieldPath() *ListenForConnectionsResponse_FieldSubPath {
	return &ListenForConnectionsResponse_FieldSubPath{
		selector: ListenForConnectionsResponse_FieldPathSelectorChannelRequested,
		subPath:  NewListenForConnectionsResponseChannelRequestedFieldPathBuilder().Arg().FieldPath(),
	}
}

func (s ListenForConnectionsResponsePathSelectorChannelRequestedArg) WithValue(value string) *ListenForConnectionsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListenForConnectionsResponse_FieldSubPathValue)
}

func (s ListenForConnectionsResponsePathSelectorChannelRequestedArg) WithArrayOfValues(values []string) *ListenForConnectionsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListenForConnectionsResponse_FieldSubPathArrayOfValues)
}

type ListenForConnectionsResponsePathSelectorKeepAlive struct{}

func (ListenForConnectionsResponsePathSelectorKeepAlive) FieldPath() *ListenForConnectionsResponse_FieldTerminalPath {
	return &ListenForConnectionsResponse_FieldTerminalPath{selector: ListenForConnectionsResponse_FieldPathSelectorKeepAlive}
}

func (s ListenForConnectionsResponsePathSelectorKeepAlive) WithValue(value *ListenForConnectionsResponse_KeepAlive) *ListenForConnectionsResponse_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*ListenForConnectionsResponse_FieldTerminalPathValue)
}

func (s ListenForConnectionsResponsePathSelectorKeepAlive) WithArrayOfValues(values []*ListenForConnectionsResponse_KeepAlive) *ListenForConnectionsResponse_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListenForConnectionsResponse_FieldTerminalPathArrayOfValues)
}

func (ListenForConnectionsResponsePathSelectorKeepAlive) WithSubPath(subPath ListenForConnectionsResponseKeepAlive_FieldPath) *ListenForConnectionsResponse_FieldSubPath {
	return &ListenForConnectionsResponse_FieldSubPath{selector: ListenForConnectionsResponse_FieldPathSelectorKeepAlive, subPath: subPath}
}

func (s ListenForConnectionsResponsePathSelectorKeepAlive) WithSubValue(subPathValue ListenForConnectionsResponseKeepAlive_FieldPathValue) *ListenForConnectionsResponse_FieldSubPathValue {
	return &ListenForConnectionsResponse_FieldSubPathValue{ListenForConnectionsResponse_FieldPath: s.WithSubPath(subPathValue), subPathValue: subPathValue}
}

func (s ListenForConnectionsResponsePathSelectorKeepAlive) WithSubArrayOfValues(subPathArrayOfValues ListenForConnectionsResponseKeepAlive_FieldPathArrayOfValues) *ListenForConnectionsResponse_FieldSubPathArrayOfValues {
	return &ListenForConnectionsResponse_FieldSubPathArrayOfValues{ListenForConnectionsResponse_FieldPath: s.WithSubPath(subPathArrayOfValues), subPathArrayOfValues: subPathArrayOfValues}
}

func (s ListenForConnectionsResponsePathSelectorKeepAlive) WithSubArrayItemValue(subPathArrayItemValue ListenForConnectionsResponseKeepAlive_FieldPathArrayItemValue) *ListenForConnectionsResponse_FieldSubPathArrayItemValue {
	return &ListenForConnectionsResponse_FieldSubPathArrayItemValue{ListenForConnectionsResponse_FieldPath: s.WithSubPath(subPathArrayItemValue), subPathItemValue: subPathArrayItemValue}
}

type ListenForConnectionsResponseChannelRequestedFieldPathBuilder struct{}

func NewListenForConnectionsResponseChannelRequestedFieldPathBuilder() ListenForConnectionsResponseChannelRequestedFieldPathBuilder {
	return ListenForConnectionsResponseChannelRequestedFieldPathBuilder{}
}
func (ListenForConnectionsResponseChannelRequestedFieldPathBuilder) Channel() ListenForConnectionsResponse_ChannelRequestedPathSelectorChannel {
	return ListenForConnectionsResponse_ChannelRequestedPathSelectorChannel{}
}
func (ListenForConnectionsResponseChannelRequestedFieldPathBuilder) Service() ListenForConnectionsResponse_ChannelRequestedPathSelectorService {
	return ListenForConnectionsResponse_ChannelRequestedPathSelectorService{}
}
func (ListenForConnectionsResponseChannelRequestedFieldPathBuilder) Arg() ListenForConnectionsResponse_ChannelRequestedPathSelectorArg {
	return ListenForConnectionsResponse_ChannelRequestedPathSelectorArg{}
}

type ListenForConnectionsResponse_ChannelRequestedPathSelectorChannel struct{}

func (ListenForConnectionsResponse_ChannelRequestedPathSelectorChannel) FieldPath() *ListenForConnectionsResponseChannelRequested_FieldTerminalPath {
	return &ListenForConnectionsResponseChannelRequested_FieldTerminalPath{selector: ListenForConnectionsResponseChannelRequested_FieldPathSelectorChannel}
}

func (s ListenForConnectionsResponse_ChannelRequestedPathSelectorChannel) WithValue(value string) *ListenForConnectionsResponseChannelRequested_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*ListenForConnectionsResponseChannelRequested_FieldTerminalPathValue)
}

func (s ListenForConnectionsResponse_ChannelRequestedPathSelectorChannel) WithArrayOfValues(values []string) *ListenForConnectionsResponseChannelRequested_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListenForConnectionsResponseChannelRequested_FieldTerminalPathArrayOfValues)
}

type ListenForConnectionsResponse_ChannelRequestedPathSelectorService struct{}

func (ListenForConnectionsResponse_ChannelRequestedPathSelectorService) FieldPath() *ListenForConnectionsResponseChannelRequested_FieldTerminalPath {
	return &ListenForConnectionsResponseChannelRequested_FieldTerminalPath{selector: ListenForConnectionsResponseChannelRequested_FieldPathSelectorService}
}

func (s ListenForConnectionsResponse_ChannelRequestedPathSelectorService) WithValue(value BrokerServiceType) *ListenForConnectionsResponseChannelRequested_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*ListenForConnectionsResponseChannelRequested_FieldTerminalPathValue)
}

func (s ListenForConnectionsResponse_ChannelRequestedPathSelectorService) WithArrayOfValues(values []BrokerServiceType) *ListenForConnectionsResponseChannelRequested_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListenForConnectionsResponseChannelRequested_FieldTerminalPathArrayOfValues)
}

type ListenForConnectionsResponse_ChannelRequestedPathSelectorArg struct{}

func (ListenForConnectionsResponse_ChannelRequestedPathSelectorArg) FieldPath() *ListenForConnectionsResponseChannelRequested_FieldTerminalPath {
	return &ListenForConnectionsResponseChannelRequested_FieldTerminalPath{selector: ListenForConnectionsResponseChannelRequested_FieldPathSelectorArg}
}

func (s ListenForConnectionsResponse_ChannelRequestedPathSelectorArg) WithValue(value string) *ListenForConnectionsResponseChannelRequested_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*ListenForConnectionsResponseChannelRequested_FieldTerminalPathValue)
}

func (s ListenForConnectionsResponse_ChannelRequestedPathSelectorArg) WithArrayOfValues(values []string) *ListenForConnectionsResponseChannelRequested_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListenForConnectionsResponseChannelRequested_FieldTerminalPathArrayOfValues)
}

type ListenForConnectionsResponseKeepAliveFieldPathBuilder struct{}

func NewListenForConnectionsResponseKeepAliveFieldPathBuilder() ListenForConnectionsResponseKeepAliveFieldPathBuilder {
	return ListenForConnectionsResponseKeepAliveFieldPathBuilder{}
}

type OpenConnectionChannelSocketRequestFieldPathBuilder struct{}

func NewOpenConnectionChannelSocketRequestFieldPathBuilder() OpenConnectionChannelSocketRequestFieldPathBuilder {
	return OpenConnectionChannelSocketRequestFieldPathBuilder{}
}
func (OpenConnectionChannelSocketRequestFieldPathBuilder) RegisterSocket() OpenConnectionChannelSocketRequestPathSelectorRegisterSocket {
	return OpenConnectionChannelSocketRequestPathSelectorRegisterSocket{}
}
func (OpenConnectionChannelSocketRequestFieldPathBuilder) Data() OpenConnectionChannelSocketRequestPathSelectorData {
	return OpenConnectionChannelSocketRequestPathSelectorData{}
}
func (OpenConnectionChannelSocketRequestFieldPathBuilder) Error() OpenConnectionChannelSocketRequestPathSelectorError {
	return OpenConnectionChannelSocketRequestPathSelectorError{}
}
func (OpenConnectionChannelSocketRequestFieldPathBuilder) Ack() OpenConnectionChannelSocketRequestPathSelectorAck {
	return OpenConnectionChannelSocketRequestPathSelectorAck{}
}

type OpenConnectionChannelSocketRequestPathSelectorRegisterSocket struct{}

func (OpenConnectionChannelSocketRequestPathSelectorRegisterSocket) FieldPath() *OpenConnectionChannelSocketRequest_FieldTerminalPath {
	return &OpenConnectionChannelSocketRequest_FieldTerminalPath{selector: OpenConnectionChannelSocketRequest_FieldPathSelectorRegisterSocket}
}

func (s OpenConnectionChannelSocketRequestPathSelectorRegisterSocket) WithValue(value *OpenConnectionChannelSocketRequest_RegisterSocket) *OpenConnectionChannelSocketRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*OpenConnectionChannelSocketRequest_FieldTerminalPathValue)
}

func (s OpenConnectionChannelSocketRequestPathSelectorRegisterSocket) WithArrayOfValues(values []*OpenConnectionChannelSocketRequest_RegisterSocket) *OpenConnectionChannelSocketRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*OpenConnectionChannelSocketRequest_FieldTerminalPathArrayOfValues)
}

func (OpenConnectionChannelSocketRequestPathSelectorRegisterSocket) WithSubPath(subPath OpenConnectionChannelSocketRequestRegisterSocket_FieldPath) *OpenConnectionChannelSocketRequest_FieldSubPath {
	return &OpenConnectionChannelSocketRequest_FieldSubPath{selector: OpenConnectionChannelSocketRequest_FieldPathSelectorRegisterSocket, subPath: subPath}
}

func (s OpenConnectionChannelSocketRequestPathSelectorRegisterSocket) WithSubValue(subPathValue OpenConnectionChannelSocketRequestRegisterSocket_FieldPathValue) *OpenConnectionChannelSocketRequest_FieldSubPathValue {
	return &OpenConnectionChannelSocketRequest_FieldSubPathValue{OpenConnectionChannelSocketRequest_FieldPath: s.WithSubPath(subPathValue), subPathValue: subPathValue}
}

func (s OpenConnectionChannelSocketRequestPathSelectorRegisterSocket) WithSubArrayOfValues(subPathArrayOfValues OpenConnectionChannelSocketRequestRegisterSocket_FieldPathArrayOfValues) *OpenConnectionChannelSocketRequest_FieldSubPathArrayOfValues {
	return &OpenConnectionChannelSocketRequest_FieldSubPathArrayOfValues{OpenConnectionChannelSocketRequest_FieldPath: s.WithSubPath(subPathArrayOfValues), subPathArrayOfValues: subPathArrayOfValues}
}

func (s OpenConnectionChannelSocketRequestPathSelectorRegisterSocket) WithSubArrayItemValue(subPathArrayItemValue OpenConnectionChannelSocketRequestRegisterSocket_FieldPathArrayItemValue) *OpenConnectionChannelSocketRequest_FieldSubPathArrayItemValue {
	return &OpenConnectionChannelSocketRequest_FieldSubPathArrayItemValue{OpenConnectionChannelSocketRequest_FieldPath: s.WithSubPath(subPathArrayItemValue), subPathItemValue: subPathArrayItemValue}
}

func (OpenConnectionChannelSocketRequestPathSelectorRegisterSocket) Device() OpenConnectionChannelSocketRequestPathSelectorRegisterSocketDevice {
	return OpenConnectionChannelSocketRequestPathSelectorRegisterSocketDevice{}
}

func (OpenConnectionChannelSocketRequestPathSelectorRegisterSocket) Channel() OpenConnectionChannelSocketRequestPathSelectorRegisterSocketChannel {
	return OpenConnectionChannelSocketRequestPathSelectorRegisterSocketChannel{}
}

type OpenConnectionChannelSocketRequestPathSelectorRegisterSocketDevice struct{}

func (OpenConnectionChannelSocketRequestPathSelectorRegisterSocketDevice) FieldPath() *OpenConnectionChannelSocketRequest_FieldSubPath {
	return &OpenConnectionChannelSocketRequest_FieldSubPath{
		selector: OpenConnectionChannelSocketRequest_FieldPathSelectorRegisterSocket,
		subPath:  NewOpenConnectionChannelSocketRequestRegisterSocketFieldPathBuilder().Device().FieldPath(),
	}
}

func (s OpenConnectionChannelSocketRequestPathSelectorRegisterSocketDevice) WithValue(value *device.Reference) *OpenConnectionChannelSocketRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*OpenConnectionChannelSocketRequest_FieldSubPathValue)
}

func (s OpenConnectionChannelSocketRequestPathSelectorRegisterSocketDevice) WithArrayOfValues(values []*device.Reference) *OpenConnectionChannelSocketRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*OpenConnectionChannelSocketRequest_FieldSubPathArrayOfValues)
}

type OpenConnectionChannelSocketRequestPathSelectorRegisterSocketChannel struct{}

func (OpenConnectionChannelSocketRequestPathSelectorRegisterSocketChannel) FieldPath() *OpenConnectionChannelSocketRequest_FieldSubPath {
	return &OpenConnectionChannelSocketRequest_FieldSubPath{
		selector: OpenConnectionChannelSocketRequest_FieldPathSelectorRegisterSocket,
		subPath:  NewOpenConnectionChannelSocketRequestRegisterSocketFieldPathBuilder().Channel().FieldPath(),
	}
}

func (s OpenConnectionChannelSocketRequestPathSelectorRegisterSocketChannel) WithValue(value string) *OpenConnectionChannelSocketRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*OpenConnectionChannelSocketRequest_FieldSubPathValue)
}

func (s OpenConnectionChannelSocketRequestPathSelectorRegisterSocketChannel) WithArrayOfValues(values []string) *OpenConnectionChannelSocketRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*OpenConnectionChannelSocketRequest_FieldSubPathArrayOfValues)
}

type OpenConnectionChannelSocketRequestPathSelectorData struct{}

func (OpenConnectionChannelSocketRequestPathSelectorData) FieldPath() *OpenConnectionChannelSocketRequest_FieldTerminalPath {
	return &OpenConnectionChannelSocketRequest_FieldTerminalPath{selector: OpenConnectionChannelSocketRequest_FieldPathSelectorData}
}

func (s OpenConnectionChannelSocketRequestPathSelectorData) WithValue(value []byte) *OpenConnectionChannelSocketRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*OpenConnectionChannelSocketRequest_FieldTerminalPathValue)
}

func (s OpenConnectionChannelSocketRequestPathSelectorData) WithArrayOfValues(values [][]byte) *OpenConnectionChannelSocketRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*OpenConnectionChannelSocketRequest_FieldTerminalPathArrayOfValues)
}

type OpenConnectionChannelSocketRequestPathSelectorError struct{}

func (OpenConnectionChannelSocketRequestPathSelectorError) FieldPath() *OpenConnectionChannelSocketRequest_FieldTerminalPath {
	return &OpenConnectionChannelSocketRequest_FieldTerminalPath{selector: OpenConnectionChannelSocketRequest_FieldPathSelectorError}
}

func (s OpenConnectionChannelSocketRequestPathSelectorError) WithValue(value []byte) *OpenConnectionChannelSocketRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*OpenConnectionChannelSocketRequest_FieldTerminalPathValue)
}

func (s OpenConnectionChannelSocketRequestPathSelectorError) WithArrayOfValues(values [][]byte) *OpenConnectionChannelSocketRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*OpenConnectionChannelSocketRequest_FieldTerminalPathArrayOfValues)
}

type OpenConnectionChannelSocketRequestPathSelectorAck struct{}

func (OpenConnectionChannelSocketRequestPathSelectorAck) FieldPath() *OpenConnectionChannelSocketRequest_FieldTerminalPath {
	return &OpenConnectionChannelSocketRequest_FieldTerminalPath{selector: OpenConnectionChannelSocketRequest_FieldPathSelectorAck}
}

func (s OpenConnectionChannelSocketRequestPathSelectorAck) WithValue(value *Ack) *OpenConnectionChannelSocketRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*OpenConnectionChannelSocketRequest_FieldTerminalPathValue)
}

func (s OpenConnectionChannelSocketRequestPathSelectorAck) WithArrayOfValues(values []*Ack) *OpenConnectionChannelSocketRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*OpenConnectionChannelSocketRequest_FieldTerminalPathArrayOfValues)
}

func (OpenConnectionChannelSocketRequestPathSelectorAck) WithSubPath(subPath Ack_FieldPath) *OpenConnectionChannelSocketRequest_FieldSubPath {
	return &OpenConnectionChannelSocketRequest_FieldSubPath{selector: OpenConnectionChannelSocketRequest_FieldPathSelectorAck, subPath: subPath}
}

func (s OpenConnectionChannelSocketRequestPathSelectorAck) WithSubValue(subPathValue Ack_FieldPathValue) *OpenConnectionChannelSocketRequest_FieldSubPathValue {
	return &OpenConnectionChannelSocketRequest_FieldSubPathValue{OpenConnectionChannelSocketRequest_FieldPath: s.WithSubPath(subPathValue), subPathValue: subPathValue}
}

func (s OpenConnectionChannelSocketRequestPathSelectorAck) WithSubArrayOfValues(subPathArrayOfValues Ack_FieldPathArrayOfValues) *OpenConnectionChannelSocketRequest_FieldSubPathArrayOfValues {
	return &OpenConnectionChannelSocketRequest_FieldSubPathArrayOfValues{OpenConnectionChannelSocketRequest_FieldPath: s.WithSubPath(subPathArrayOfValues), subPathArrayOfValues: subPathArrayOfValues}
}

func (s OpenConnectionChannelSocketRequestPathSelectorAck) WithSubArrayItemValue(subPathArrayItemValue Ack_FieldPathArrayItemValue) *OpenConnectionChannelSocketRequest_FieldSubPathArrayItemValue {
	return &OpenConnectionChannelSocketRequest_FieldSubPathArrayItemValue{OpenConnectionChannelSocketRequest_FieldPath: s.WithSubPath(subPathArrayItemValue), subPathItemValue: subPathArrayItemValue}
}

func (OpenConnectionChannelSocketRequestPathSelectorAck) Processed() OpenConnectionChannelSocketRequestPathSelectorAckProcessed {
	return OpenConnectionChannelSocketRequestPathSelectorAckProcessed{}
}

type OpenConnectionChannelSocketRequestPathSelectorAckProcessed struct{}

func (OpenConnectionChannelSocketRequestPathSelectorAckProcessed) FieldPath() *OpenConnectionChannelSocketRequest_FieldSubPath {
	return &OpenConnectionChannelSocketRequest_FieldSubPath{
		selector: OpenConnectionChannelSocketRequest_FieldPathSelectorAck,
		subPath:  NewAckFieldPathBuilder().Processed().FieldPath(),
	}
}

func (s OpenConnectionChannelSocketRequestPathSelectorAckProcessed) WithValue(value uint64) *OpenConnectionChannelSocketRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*OpenConnectionChannelSocketRequest_FieldSubPathValue)
}

func (s OpenConnectionChannelSocketRequestPathSelectorAckProcessed) WithArrayOfValues(values []uint64) *OpenConnectionChannelSocketRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*OpenConnectionChannelSocketRequest_FieldSubPathArrayOfValues)
}

type OpenConnectionChannelSocketRequestRegisterSocketFieldPathBuilder struct{}

func NewOpenConnectionChannelSocketRequestRegisterSocketFieldPathBuilder() OpenConnectionChannelSocketRequestRegisterSocketFieldPathBuilder {
	return OpenConnectionChannelSocketRequestRegisterSocketFieldPathBuilder{}
}
func (OpenConnectionChannelSocketRequestRegisterSocketFieldPathBuilder) Device() OpenConnectionChannelSocketRequest_RegisterSocketPathSelectorDevice {
	return OpenConnectionChannelSocketRequest_RegisterSocketPathSelectorDevice{}
}
func (OpenConnectionChannelSocketRequestRegisterSocketFieldPathBuilder) Channel() OpenConnectionChannelSocketRequest_RegisterSocketPathSelectorChannel {
	return OpenConnectionChannelSocketRequest_RegisterSocketPathSelectorChannel{}
}

type OpenConnectionChannelSocketRequest_RegisterSocketPathSelectorDevice struct{}

func (OpenConnectionChannelSocketRequest_RegisterSocketPathSelectorDevice) FieldPath() *OpenConnectionChannelSocketRequestRegisterSocket_FieldTerminalPath {
	return &OpenConnectionChannelSocketRequestRegisterSocket_FieldTerminalPath{selector: OpenConnectionChannelSocketRequestRegisterSocket_FieldPathSelectorDevice}
}

func (s OpenConnectionChannelSocketRequest_RegisterSocketPathSelectorDevice) WithValue(value *device.Reference) *OpenConnectionChannelSocketRequestRegisterSocket_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*OpenConnectionChannelSocketRequestRegisterSocket_FieldTerminalPathValue)
}

func (s OpenConnectionChannelSocketRequest_RegisterSocketPathSelectorDevice) WithArrayOfValues(values []*device.Reference) *OpenConnectionChannelSocketRequestRegisterSocket_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*OpenConnectionChannelSocketRequestRegisterSocket_FieldTerminalPathArrayOfValues)
}

type OpenConnectionChannelSocketRequest_RegisterSocketPathSelectorChannel struct{}

func (OpenConnectionChannelSocketRequest_RegisterSocketPathSelectorChannel) FieldPath() *OpenConnectionChannelSocketRequestRegisterSocket_FieldTerminalPath {
	return &OpenConnectionChannelSocketRequestRegisterSocket_FieldTerminalPath{selector: OpenConnectionChannelSocketRequestRegisterSocket_FieldPathSelectorChannel}
}

func (s OpenConnectionChannelSocketRequest_RegisterSocketPathSelectorChannel) WithValue(value string) *OpenConnectionChannelSocketRequestRegisterSocket_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*OpenConnectionChannelSocketRequestRegisterSocket_FieldTerminalPathValue)
}

func (s OpenConnectionChannelSocketRequest_RegisterSocketPathSelectorChannel) WithArrayOfValues(values []string) *OpenConnectionChannelSocketRequestRegisterSocket_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*OpenConnectionChannelSocketRequestRegisterSocket_FieldTerminalPathArrayOfValues)
}

type OpenConnectionChannelSocketResponseFieldPathBuilder struct{}

func NewOpenConnectionChannelSocketResponseFieldPathBuilder() OpenConnectionChannelSocketResponseFieldPathBuilder {
	return OpenConnectionChannelSocketResponseFieldPathBuilder{}
}
func (OpenConnectionChannelSocketResponseFieldPathBuilder) Data() OpenConnectionChannelSocketResponsePathSelectorData {
	return OpenConnectionChannelSocketResponsePathSelectorData{}
}
func (OpenConnectionChannelSocketResponseFieldPathBuilder) Ack() OpenConnectionChannelSocketResponsePathSelectorAck {
	return OpenConnectionChannelSocketResponsePathSelectorAck{}
}

type OpenConnectionChannelSocketResponsePathSelectorData struct{}

func (OpenConnectionChannelSocketResponsePathSelectorData) FieldPath() *OpenConnectionChannelSocketResponse_FieldTerminalPath {
	return &OpenConnectionChannelSocketResponse_FieldTerminalPath{selector: OpenConnectionChannelSocketResponse_FieldPathSelectorData}
}

func (s OpenConnectionChannelSocketResponsePathSelectorData) WithValue(value []byte) *OpenConnectionChannelSocketResponse_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*OpenConnectionChannelSocketResponse_FieldTerminalPathValue)
}

func (s OpenConnectionChannelSocketResponsePathSelectorData) WithArrayOfValues(values [][]byte) *OpenConnectionChannelSocketResponse_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*OpenConnectionChannelSocketResponse_FieldTerminalPathArrayOfValues)
}

type OpenConnectionChannelSocketResponsePathSelectorAck struct{}

func (OpenConnectionChannelSocketResponsePathSelectorAck) FieldPath() *OpenConnectionChannelSocketResponse_FieldTerminalPath {
	return &OpenConnectionChannelSocketResponse_FieldTerminalPath{selector: OpenConnectionChannelSocketResponse_FieldPathSelectorAck}
}

func (s OpenConnectionChannelSocketResponsePathSelectorAck) WithValue(value *Ack) *OpenConnectionChannelSocketResponse_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*OpenConnectionChannelSocketResponse_FieldTerminalPathValue)
}

func (s OpenConnectionChannelSocketResponsePathSelectorAck) WithArrayOfValues(values []*Ack) *OpenConnectionChannelSocketResponse_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*OpenConnectionChannelSocketResponse_FieldTerminalPathArrayOfValues)
}

func (OpenConnectionChannelSocketResponsePathSelectorAck) WithSubPath(subPath Ack_FieldPath) *OpenConnectionChannelSocketResponse_FieldSubPath {
	return &OpenConnectionChannelSocketResponse_FieldSubPath{selector: OpenConnectionChannelSocketResponse_FieldPathSelectorAck, subPath: subPath}
}

func (s OpenConnectionChannelSocketResponsePathSelectorAck) WithSubValue(subPathValue Ack_FieldPathValue) *OpenConnectionChannelSocketResponse_FieldSubPathValue {
	return &OpenConnectionChannelSocketResponse_FieldSubPathValue{OpenConnectionChannelSocketResponse_FieldPath: s.WithSubPath(subPathValue), subPathValue: subPathValue}
}

func (s OpenConnectionChannelSocketResponsePathSelectorAck) WithSubArrayOfValues(subPathArrayOfValues Ack_FieldPathArrayOfValues) *OpenConnectionChannelSocketResponse_FieldSubPathArrayOfValues {
	return &OpenConnectionChannelSocketResponse_FieldSubPathArrayOfValues{OpenConnectionChannelSocketResponse_FieldPath: s.WithSubPath(subPathArrayOfValues), subPathArrayOfValues: subPathArrayOfValues}
}

func (s OpenConnectionChannelSocketResponsePathSelectorAck) WithSubArrayItemValue(subPathArrayItemValue Ack_FieldPathArrayItemValue) *OpenConnectionChannelSocketResponse_FieldSubPathArrayItemValue {
	return &OpenConnectionChannelSocketResponse_FieldSubPathArrayItemValue{OpenConnectionChannelSocketResponse_FieldPath: s.WithSubPath(subPathArrayItemValue), subPathItemValue: subPathArrayItemValue}
}

func (OpenConnectionChannelSocketResponsePathSelectorAck) Processed() OpenConnectionChannelSocketResponsePathSelectorAckProcessed {
	return OpenConnectionChannelSocketResponsePathSelectorAckProcessed{}
}

type OpenConnectionChannelSocketResponsePathSelectorAckProcessed struct{}

func (OpenConnectionChannelSocketResponsePathSelectorAckProcessed) FieldPath() *OpenConnectionChannelSocketResponse_FieldSubPath {
	return &OpenConnectionChannelSocketResponse_FieldSubPath{
		selector: OpenConnectionChannelSocketResponse_FieldPathSelectorAck,
		subPath:  NewAckFieldPathBuilder().Processed().FieldPath(),
	}
}

func (s OpenConnectionChannelSocketResponsePathSelectorAckProcessed) WithValue(value uint64) *OpenConnectionChannelSocketResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*OpenConnectionChannelSocketResponse_FieldSubPathValue)
}

func (s OpenConnectionChannelSocketResponsePathSelectorAckProcessed) WithArrayOfValues(values []uint64) *OpenConnectionChannelSocketResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*OpenConnectionChannelSocketResponse_FieldSubPathArrayOfValues)
}

type ConnectToDeviceRequestFieldPathBuilder struct{}

func NewConnectToDeviceRequestFieldPathBuilder() ConnectToDeviceRequestFieldPathBuilder {
	return ConnectToDeviceRequestFieldPathBuilder{}
}
func (ConnectToDeviceRequestFieldPathBuilder) OpenRequest() ConnectToDeviceRequestPathSelectorOpenRequest {
	return ConnectToDeviceRequestPathSelectorOpenRequest{}
}
func (ConnectToDeviceRequestFieldPathBuilder) Data() ConnectToDeviceRequestPathSelectorData {
	return ConnectToDeviceRequestPathSelectorData{}
}
func (ConnectToDeviceRequestFieldPathBuilder) Ack() ConnectToDeviceRequestPathSelectorAck {
	return ConnectToDeviceRequestPathSelectorAck{}
}
func (ConnectToDeviceRequestFieldPathBuilder) KeepAlive() ConnectToDeviceRequestPathSelectorKeepAlive {
	return ConnectToDeviceRequestPathSelectorKeepAlive{}
}

type ConnectToDeviceRequestPathSelectorOpenRequest struct{}

func (ConnectToDeviceRequestPathSelectorOpenRequest) FieldPath() *ConnectToDeviceRequest_FieldTerminalPath {
	return &ConnectToDeviceRequest_FieldTerminalPath{selector: ConnectToDeviceRequest_FieldPathSelectorOpenRequest}
}

func (s ConnectToDeviceRequestPathSelectorOpenRequest) WithValue(value *ConnectToDeviceRequest_OpenRequest) *ConnectToDeviceRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*ConnectToDeviceRequest_FieldTerminalPathValue)
}

func (s ConnectToDeviceRequestPathSelectorOpenRequest) WithArrayOfValues(values []*ConnectToDeviceRequest_OpenRequest) *ConnectToDeviceRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ConnectToDeviceRequest_FieldTerminalPathArrayOfValues)
}

func (ConnectToDeviceRequestPathSelectorOpenRequest) WithSubPath(subPath ConnectToDeviceRequestOpenRequest_FieldPath) *ConnectToDeviceRequest_FieldSubPath {
	return &ConnectToDeviceRequest_FieldSubPath{selector: ConnectToDeviceRequest_FieldPathSelectorOpenRequest, subPath: subPath}
}

func (s ConnectToDeviceRequestPathSelectorOpenRequest) WithSubValue(subPathValue ConnectToDeviceRequestOpenRequest_FieldPathValue) *ConnectToDeviceRequest_FieldSubPathValue {
	return &ConnectToDeviceRequest_FieldSubPathValue{ConnectToDeviceRequest_FieldPath: s.WithSubPath(subPathValue), subPathValue: subPathValue}
}

func (s ConnectToDeviceRequestPathSelectorOpenRequest) WithSubArrayOfValues(subPathArrayOfValues ConnectToDeviceRequestOpenRequest_FieldPathArrayOfValues) *ConnectToDeviceRequest_FieldSubPathArrayOfValues {
	return &ConnectToDeviceRequest_FieldSubPathArrayOfValues{ConnectToDeviceRequest_FieldPath: s.WithSubPath(subPathArrayOfValues), subPathArrayOfValues: subPathArrayOfValues}
}

func (s ConnectToDeviceRequestPathSelectorOpenRequest) WithSubArrayItemValue(subPathArrayItemValue ConnectToDeviceRequestOpenRequest_FieldPathArrayItemValue) *ConnectToDeviceRequest_FieldSubPathArrayItemValue {
	return &ConnectToDeviceRequest_FieldSubPathArrayItemValue{ConnectToDeviceRequest_FieldPath: s.WithSubPath(subPathArrayItemValue), subPathItemValue: subPathArrayItemValue}
}

func (ConnectToDeviceRequestPathSelectorOpenRequest) Device() ConnectToDeviceRequestPathSelectorOpenRequestDevice {
	return ConnectToDeviceRequestPathSelectorOpenRequestDevice{}
}

func (ConnectToDeviceRequestPathSelectorOpenRequest) Service() ConnectToDeviceRequestPathSelectorOpenRequestService {
	return ConnectToDeviceRequestPathSelectorOpenRequestService{}
}

func (ConnectToDeviceRequestPathSelectorOpenRequest) Arg() ConnectToDeviceRequestPathSelectorOpenRequestArg {
	return ConnectToDeviceRequestPathSelectorOpenRequestArg{}
}

type ConnectToDeviceRequestPathSelectorOpenRequestDevice struct{}

func (ConnectToDeviceRequestPathSelectorOpenRequestDevice) FieldPath() *ConnectToDeviceRequest_FieldSubPath {
	return &ConnectToDeviceRequest_FieldSubPath{
		selector: ConnectToDeviceRequest_FieldPathSelectorOpenRequest,
		subPath:  NewConnectToDeviceRequestOpenRequestFieldPathBuilder().Device().FieldPath(),
	}
}

func (s ConnectToDeviceRequestPathSelectorOpenRequestDevice) WithValue(value *device.Reference) *ConnectToDeviceRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ConnectToDeviceRequest_FieldSubPathValue)
}

func (s ConnectToDeviceRequestPathSelectorOpenRequestDevice) WithArrayOfValues(values []*device.Reference) *ConnectToDeviceRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ConnectToDeviceRequest_FieldSubPathArrayOfValues)
}

type ConnectToDeviceRequestPathSelectorOpenRequestService struct{}

func (ConnectToDeviceRequestPathSelectorOpenRequestService) FieldPath() *ConnectToDeviceRequest_FieldSubPath {
	return &ConnectToDeviceRequest_FieldSubPath{
		selector: ConnectToDeviceRequest_FieldPathSelectorOpenRequest,
		subPath:  NewConnectToDeviceRequestOpenRequestFieldPathBuilder().Service().FieldPath(),
	}
}

func (s ConnectToDeviceRequestPathSelectorOpenRequestService) WithValue(value BrokerServiceType) *ConnectToDeviceRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ConnectToDeviceRequest_FieldSubPathValue)
}

func (s ConnectToDeviceRequestPathSelectorOpenRequestService) WithArrayOfValues(values []BrokerServiceType) *ConnectToDeviceRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ConnectToDeviceRequest_FieldSubPathArrayOfValues)
}

type ConnectToDeviceRequestPathSelectorOpenRequestArg struct{}

func (ConnectToDeviceRequestPathSelectorOpenRequestArg) FieldPath() *ConnectToDeviceRequest_FieldSubPath {
	return &ConnectToDeviceRequest_FieldSubPath{
		selector: ConnectToDeviceRequest_FieldPathSelectorOpenRequest,
		subPath:  NewConnectToDeviceRequestOpenRequestFieldPathBuilder().Arg().FieldPath(),
	}
}

func (s ConnectToDeviceRequestPathSelectorOpenRequestArg) WithValue(value string) *ConnectToDeviceRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ConnectToDeviceRequest_FieldSubPathValue)
}

func (s ConnectToDeviceRequestPathSelectorOpenRequestArg) WithArrayOfValues(values []string) *ConnectToDeviceRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ConnectToDeviceRequest_FieldSubPathArrayOfValues)
}

type ConnectToDeviceRequestPathSelectorData struct{}

func (ConnectToDeviceRequestPathSelectorData) FieldPath() *ConnectToDeviceRequest_FieldTerminalPath {
	return &ConnectToDeviceRequest_FieldTerminalPath{selector: ConnectToDeviceRequest_FieldPathSelectorData}
}

func (s ConnectToDeviceRequestPathSelectorData) WithValue(value []byte) *ConnectToDeviceRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*ConnectToDeviceRequest_FieldTerminalPathValue)
}

func (s ConnectToDeviceRequestPathSelectorData) WithArrayOfValues(values [][]byte) *ConnectToDeviceRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ConnectToDeviceRequest_FieldTerminalPathArrayOfValues)
}

type ConnectToDeviceRequestPathSelectorAck struct{}

func (ConnectToDeviceRequestPathSelectorAck) FieldPath() *ConnectToDeviceRequest_FieldTerminalPath {
	return &ConnectToDeviceRequest_FieldTerminalPath{selector: ConnectToDeviceRequest_FieldPathSelectorAck}
}

func (s ConnectToDeviceRequestPathSelectorAck) WithValue(value *Ack) *ConnectToDeviceRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*ConnectToDeviceRequest_FieldTerminalPathValue)
}

func (s ConnectToDeviceRequestPathSelectorAck) WithArrayOfValues(values []*Ack) *ConnectToDeviceRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ConnectToDeviceRequest_FieldTerminalPathArrayOfValues)
}

func (ConnectToDeviceRequestPathSelectorAck) WithSubPath(subPath Ack_FieldPath) *ConnectToDeviceRequest_FieldSubPath {
	return &ConnectToDeviceRequest_FieldSubPath{selector: ConnectToDeviceRequest_FieldPathSelectorAck, subPath: subPath}
}

func (s ConnectToDeviceRequestPathSelectorAck) WithSubValue(subPathValue Ack_FieldPathValue) *ConnectToDeviceRequest_FieldSubPathValue {
	return &ConnectToDeviceRequest_FieldSubPathValue{ConnectToDeviceRequest_FieldPath: s.WithSubPath(subPathValue), subPathValue: subPathValue}
}

func (s ConnectToDeviceRequestPathSelectorAck) WithSubArrayOfValues(subPathArrayOfValues Ack_FieldPathArrayOfValues) *ConnectToDeviceRequest_FieldSubPathArrayOfValues {
	return &ConnectToDeviceRequest_FieldSubPathArrayOfValues{ConnectToDeviceRequest_FieldPath: s.WithSubPath(subPathArrayOfValues), subPathArrayOfValues: subPathArrayOfValues}
}

func (s ConnectToDeviceRequestPathSelectorAck) WithSubArrayItemValue(subPathArrayItemValue Ack_FieldPathArrayItemValue) *ConnectToDeviceRequest_FieldSubPathArrayItemValue {
	return &ConnectToDeviceRequest_FieldSubPathArrayItemValue{ConnectToDeviceRequest_FieldPath: s.WithSubPath(subPathArrayItemValue), subPathItemValue: subPathArrayItemValue}
}

func (ConnectToDeviceRequestPathSelectorAck) Processed() ConnectToDeviceRequestPathSelectorAckProcessed {
	return ConnectToDeviceRequestPathSelectorAckProcessed{}
}

type ConnectToDeviceRequestPathSelectorAckProcessed struct{}

func (ConnectToDeviceRequestPathSelectorAckProcessed) FieldPath() *ConnectToDeviceRequest_FieldSubPath {
	return &ConnectToDeviceRequest_FieldSubPath{
		selector: ConnectToDeviceRequest_FieldPathSelectorAck,
		subPath:  NewAckFieldPathBuilder().Processed().FieldPath(),
	}
}

func (s ConnectToDeviceRequestPathSelectorAckProcessed) WithValue(value uint64) *ConnectToDeviceRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ConnectToDeviceRequest_FieldSubPathValue)
}

func (s ConnectToDeviceRequestPathSelectorAckProcessed) WithArrayOfValues(values []uint64) *ConnectToDeviceRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ConnectToDeviceRequest_FieldSubPathArrayOfValues)
}

type ConnectToDeviceRequestPathSelectorKeepAlive struct{}

func (ConnectToDeviceRequestPathSelectorKeepAlive) FieldPath() *ConnectToDeviceRequest_FieldTerminalPath {
	return &ConnectToDeviceRequest_FieldTerminalPath{selector: ConnectToDeviceRequest_FieldPathSelectorKeepAlive}
}

func (s ConnectToDeviceRequestPathSelectorKeepAlive) WithValue(value *ConnectToDeviceRequest_KeepAlive) *ConnectToDeviceRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*ConnectToDeviceRequest_FieldTerminalPathValue)
}

func (s ConnectToDeviceRequestPathSelectorKeepAlive) WithArrayOfValues(values []*ConnectToDeviceRequest_KeepAlive) *ConnectToDeviceRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ConnectToDeviceRequest_FieldTerminalPathArrayOfValues)
}

func (ConnectToDeviceRequestPathSelectorKeepAlive) WithSubPath(subPath ConnectToDeviceRequestKeepAlive_FieldPath) *ConnectToDeviceRequest_FieldSubPath {
	return &ConnectToDeviceRequest_FieldSubPath{selector: ConnectToDeviceRequest_FieldPathSelectorKeepAlive, subPath: subPath}
}

func (s ConnectToDeviceRequestPathSelectorKeepAlive) WithSubValue(subPathValue ConnectToDeviceRequestKeepAlive_FieldPathValue) *ConnectToDeviceRequest_FieldSubPathValue {
	return &ConnectToDeviceRequest_FieldSubPathValue{ConnectToDeviceRequest_FieldPath: s.WithSubPath(subPathValue), subPathValue: subPathValue}
}

func (s ConnectToDeviceRequestPathSelectorKeepAlive) WithSubArrayOfValues(subPathArrayOfValues ConnectToDeviceRequestKeepAlive_FieldPathArrayOfValues) *ConnectToDeviceRequest_FieldSubPathArrayOfValues {
	return &ConnectToDeviceRequest_FieldSubPathArrayOfValues{ConnectToDeviceRequest_FieldPath: s.WithSubPath(subPathArrayOfValues), subPathArrayOfValues: subPathArrayOfValues}
}

func (s ConnectToDeviceRequestPathSelectorKeepAlive) WithSubArrayItemValue(subPathArrayItemValue ConnectToDeviceRequestKeepAlive_FieldPathArrayItemValue) *ConnectToDeviceRequest_FieldSubPathArrayItemValue {
	return &ConnectToDeviceRequest_FieldSubPathArrayItemValue{ConnectToDeviceRequest_FieldPath: s.WithSubPath(subPathArrayItemValue), subPathItemValue: subPathArrayItemValue}
}

type ConnectToDeviceRequestOpenRequestFieldPathBuilder struct{}

func NewConnectToDeviceRequestOpenRequestFieldPathBuilder() ConnectToDeviceRequestOpenRequestFieldPathBuilder {
	return ConnectToDeviceRequestOpenRequestFieldPathBuilder{}
}
func (ConnectToDeviceRequestOpenRequestFieldPathBuilder) Device() ConnectToDeviceRequest_OpenRequestPathSelectorDevice {
	return ConnectToDeviceRequest_OpenRequestPathSelectorDevice{}
}
func (ConnectToDeviceRequestOpenRequestFieldPathBuilder) Service() ConnectToDeviceRequest_OpenRequestPathSelectorService {
	return ConnectToDeviceRequest_OpenRequestPathSelectorService{}
}
func (ConnectToDeviceRequestOpenRequestFieldPathBuilder) Arg() ConnectToDeviceRequest_OpenRequestPathSelectorArg {
	return ConnectToDeviceRequest_OpenRequestPathSelectorArg{}
}

type ConnectToDeviceRequest_OpenRequestPathSelectorDevice struct{}

func (ConnectToDeviceRequest_OpenRequestPathSelectorDevice) FieldPath() *ConnectToDeviceRequestOpenRequest_FieldTerminalPath {
	return &ConnectToDeviceRequestOpenRequest_FieldTerminalPath{selector: ConnectToDeviceRequestOpenRequest_FieldPathSelectorDevice}
}

func (s ConnectToDeviceRequest_OpenRequestPathSelectorDevice) WithValue(value *device.Reference) *ConnectToDeviceRequestOpenRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*ConnectToDeviceRequestOpenRequest_FieldTerminalPathValue)
}

func (s ConnectToDeviceRequest_OpenRequestPathSelectorDevice) WithArrayOfValues(values []*device.Reference) *ConnectToDeviceRequestOpenRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ConnectToDeviceRequestOpenRequest_FieldTerminalPathArrayOfValues)
}

type ConnectToDeviceRequest_OpenRequestPathSelectorService struct{}

func (ConnectToDeviceRequest_OpenRequestPathSelectorService) FieldPath() *ConnectToDeviceRequestOpenRequest_FieldTerminalPath {
	return &ConnectToDeviceRequestOpenRequest_FieldTerminalPath{selector: ConnectToDeviceRequestOpenRequest_FieldPathSelectorService}
}

func (s ConnectToDeviceRequest_OpenRequestPathSelectorService) WithValue(value BrokerServiceType) *ConnectToDeviceRequestOpenRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*ConnectToDeviceRequestOpenRequest_FieldTerminalPathValue)
}

func (s ConnectToDeviceRequest_OpenRequestPathSelectorService) WithArrayOfValues(values []BrokerServiceType) *ConnectToDeviceRequestOpenRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ConnectToDeviceRequestOpenRequest_FieldTerminalPathArrayOfValues)
}

type ConnectToDeviceRequest_OpenRequestPathSelectorArg struct{}

func (ConnectToDeviceRequest_OpenRequestPathSelectorArg) FieldPath() *ConnectToDeviceRequestOpenRequest_FieldTerminalPath {
	return &ConnectToDeviceRequestOpenRequest_FieldTerminalPath{selector: ConnectToDeviceRequestOpenRequest_FieldPathSelectorArg}
}

func (s ConnectToDeviceRequest_OpenRequestPathSelectorArg) WithValue(value string) *ConnectToDeviceRequestOpenRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*ConnectToDeviceRequestOpenRequest_FieldTerminalPathValue)
}

func (s ConnectToDeviceRequest_OpenRequestPathSelectorArg) WithArrayOfValues(values []string) *ConnectToDeviceRequestOpenRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ConnectToDeviceRequestOpenRequest_FieldTerminalPathArrayOfValues)
}

type ConnectToDeviceRequestKeepAliveFieldPathBuilder struct{}

func NewConnectToDeviceRequestKeepAliveFieldPathBuilder() ConnectToDeviceRequestKeepAliveFieldPathBuilder {
	return ConnectToDeviceRequestKeepAliveFieldPathBuilder{}
}

type ConnectToDeviceResponseFieldPathBuilder struct{}

func NewConnectToDeviceResponseFieldPathBuilder() ConnectToDeviceResponseFieldPathBuilder {
	return ConnectToDeviceResponseFieldPathBuilder{}
}
func (ConnectToDeviceResponseFieldPathBuilder) OpenResponse() ConnectToDeviceResponsePathSelectorOpenResponse {
	return ConnectToDeviceResponsePathSelectorOpenResponse{}
}
func (ConnectToDeviceResponseFieldPathBuilder) Data() ConnectToDeviceResponsePathSelectorData {
	return ConnectToDeviceResponsePathSelectorData{}
}
func (ConnectToDeviceResponseFieldPathBuilder) Error() ConnectToDeviceResponsePathSelectorError {
	return ConnectToDeviceResponsePathSelectorError{}
}
func (ConnectToDeviceResponseFieldPathBuilder) Ack() ConnectToDeviceResponsePathSelectorAck {
	return ConnectToDeviceResponsePathSelectorAck{}
}

type ConnectToDeviceResponsePathSelectorOpenResponse struct{}

func (ConnectToDeviceResponsePathSelectorOpenResponse) FieldPath() *ConnectToDeviceResponse_FieldTerminalPath {
	return &ConnectToDeviceResponse_FieldTerminalPath{selector: ConnectToDeviceResponse_FieldPathSelectorOpenResponse}
}

func (s ConnectToDeviceResponsePathSelectorOpenResponse) WithValue(value *ConnectToDeviceResponse_OpenResponse) *ConnectToDeviceResponse_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*ConnectToDeviceResponse_FieldTerminalPathValue)
}

func (s ConnectToDeviceResponsePathSelectorOpenResponse) WithArrayOfValues(values []*ConnectToDeviceResponse_OpenResponse) *ConnectToDeviceResponse_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ConnectToDeviceResponse_FieldTerminalPathArrayOfValues)
}

func (ConnectToDeviceResponsePathSelectorOpenResponse) WithSubPath(subPath ConnectToDeviceResponseOpenResponse_FieldPath) *ConnectToDeviceResponse_FieldSubPath {
	return &ConnectToDeviceResponse_FieldSubPath{selector: ConnectToDeviceResponse_FieldPathSelectorOpenResponse, subPath: subPath}
}

func (s ConnectToDeviceResponsePathSelectorOpenResponse) WithSubValue(subPathValue ConnectToDeviceResponseOpenResponse_FieldPathValue) *ConnectToDeviceResponse_FieldSubPathValue {
	return &ConnectToDeviceResponse_FieldSubPathValue{ConnectToDeviceResponse_FieldPath: s.WithSubPath(subPathValue), subPathValue: subPathValue}
}

func (s ConnectToDeviceResponsePathSelectorOpenResponse) WithSubArrayOfValues(subPathArrayOfValues ConnectToDeviceResponseOpenResponse_FieldPathArrayOfValues) *ConnectToDeviceResponse_FieldSubPathArrayOfValues {
	return &ConnectToDeviceResponse_FieldSubPathArrayOfValues{ConnectToDeviceResponse_FieldPath: s.WithSubPath(subPathArrayOfValues), subPathArrayOfValues: subPathArrayOfValues}
}

func (s ConnectToDeviceResponsePathSelectorOpenResponse) WithSubArrayItemValue(subPathArrayItemValue ConnectToDeviceResponseOpenResponse_FieldPathArrayItemValue) *ConnectToDeviceResponse_FieldSubPathArrayItemValue {
	return &ConnectToDeviceResponse_FieldSubPathArrayItemValue{ConnectToDeviceResponse_FieldPath: s.WithSubPath(subPathArrayItemValue), subPathItemValue: subPathArrayItemValue}
}

type ConnectToDeviceResponsePathSelectorData struct{}

func (ConnectToDeviceResponsePathSelectorData) FieldPath() *ConnectToDeviceResponse_FieldTerminalPath {
	return &ConnectToDeviceResponse_FieldTerminalPath{selector: ConnectToDeviceResponse_FieldPathSelectorData}
}

func (s ConnectToDeviceResponsePathSelectorData) WithValue(value []byte) *ConnectToDeviceResponse_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*ConnectToDeviceResponse_FieldTerminalPathValue)
}

func (s ConnectToDeviceResponsePathSelectorData) WithArrayOfValues(values [][]byte) *ConnectToDeviceResponse_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ConnectToDeviceResponse_FieldTerminalPathArrayOfValues)
}

type ConnectToDeviceResponsePathSelectorError struct{}

func (ConnectToDeviceResponsePathSelectorError) FieldPath() *ConnectToDeviceResponse_FieldTerminalPath {
	return &ConnectToDeviceResponse_FieldTerminalPath{selector: ConnectToDeviceResponse_FieldPathSelectorError}
}

func (s ConnectToDeviceResponsePathSelectorError) WithValue(value []byte) *ConnectToDeviceResponse_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*ConnectToDeviceResponse_FieldTerminalPathValue)
}

func (s ConnectToDeviceResponsePathSelectorError) WithArrayOfValues(values [][]byte) *ConnectToDeviceResponse_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ConnectToDeviceResponse_FieldTerminalPathArrayOfValues)
}

type ConnectToDeviceResponsePathSelectorAck struct{}

func (ConnectToDeviceResponsePathSelectorAck) FieldPath() *ConnectToDeviceResponse_FieldTerminalPath {
	return &ConnectToDeviceResponse_FieldTerminalPath{selector: ConnectToDeviceResponse_FieldPathSelectorAck}
}

func (s ConnectToDeviceResponsePathSelectorAck) WithValue(value *Ack) *ConnectToDeviceResponse_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*ConnectToDeviceResponse_FieldTerminalPathValue)
}

func (s ConnectToDeviceResponsePathSelectorAck) WithArrayOfValues(values []*Ack) *ConnectToDeviceResponse_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ConnectToDeviceResponse_FieldTerminalPathArrayOfValues)
}

func (ConnectToDeviceResponsePathSelectorAck) WithSubPath(subPath Ack_FieldPath) *ConnectToDeviceResponse_FieldSubPath {
	return &ConnectToDeviceResponse_FieldSubPath{selector: ConnectToDeviceResponse_FieldPathSelectorAck, subPath: subPath}
}

func (s ConnectToDeviceResponsePathSelectorAck) WithSubValue(subPathValue Ack_FieldPathValue) *ConnectToDeviceResponse_FieldSubPathValue {
	return &ConnectToDeviceResponse_FieldSubPathValue{ConnectToDeviceResponse_FieldPath: s.WithSubPath(subPathValue), subPathValue: subPathValue}
}

func (s ConnectToDeviceResponsePathSelectorAck) WithSubArrayOfValues(subPathArrayOfValues Ack_FieldPathArrayOfValues) *ConnectToDeviceResponse_FieldSubPathArrayOfValues {
	return &ConnectToDeviceResponse_FieldSubPathArrayOfValues{ConnectToDeviceResponse_FieldPath: s.WithSubPath(subPathArrayOfValues), subPathArrayOfValues: subPathArrayOfValues}
}

func (s ConnectToDeviceResponsePathSelectorAck) WithSubArrayItemValue(subPathArrayItemValue Ack_FieldPathArrayItemValue) *ConnectToDeviceResponse_FieldSubPathArrayItemValue {
	return &ConnectToDeviceResponse_FieldSubPathArrayItemValue{ConnectToDeviceResponse_FieldPath: s.WithSubPath(subPathArrayItemValue), subPathItemValue: subPathArrayItemValue}
}

func (ConnectToDeviceResponsePathSelectorAck) Processed() ConnectToDeviceResponsePathSelectorAckProcessed {
	return ConnectToDeviceResponsePathSelectorAckProcessed{}
}

type ConnectToDeviceResponsePathSelectorAckProcessed struct{}

func (ConnectToDeviceResponsePathSelectorAckProcessed) FieldPath() *ConnectToDeviceResponse_FieldSubPath {
	return &ConnectToDeviceResponse_FieldSubPath{
		selector: ConnectToDeviceResponse_FieldPathSelectorAck,
		subPath:  NewAckFieldPathBuilder().Processed().FieldPath(),
	}
}

func (s ConnectToDeviceResponsePathSelectorAckProcessed) WithValue(value uint64) *ConnectToDeviceResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ConnectToDeviceResponse_FieldSubPathValue)
}

func (s ConnectToDeviceResponsePathSelectorAckProcessed) WithArrayOfValues(values []uint64) *ConnectToDeviceResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ConnectToDeviceResponse_FieldSubPathArrayOfValues)
}

type ConnectToDeviceResponseOpenResponseFieldPathBuilder struct{}

func NewConnectToDeviceResponseOpenResponseFieldPathBuilder() ConnectToDeviceResponseOpenResponseFieldPathBuilder {
	return ConnectToDeviceResponseOpenResponseFieldPathBuilder{}
}

type AckFieldPathBuilder struct{}

func NewAckFieldPathBuilder() AckFieldPathBuilder {
	return AckFieldPathBuilder{}
}
func (AckFieldPathBuilder) Processed() AckPathSelectorProcessed {
	return AckPathSelectorProcessed{}
}

type AckPathSelectorProcessed struct{}

func (AckPathSelectorProcessed) FieldPath() *Ack_FieldTerminalPath {
	return &Ack_FieldTerminalPath{selector: Ack_FieldPathSelectorProcessed}
}

func (s AckPathSelectorProcessed) WithValue(value uint64) *Ack_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*Ack_FieldTerminalPathValue)
}

func (s AckPathSelectorProcessed) WithArrayOfValues(values []uint64) *Ack_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*Ack_FieldTerminalPathArrayOfValues)
}
