// Code generated by protoc-gen-goten-client
// API: TpmAttestationCertService
// DO NOT EDIT!!!

package tpm_attestation_cert_client

import (
	"google.golang.org/protobuf/proto"

	gotenclient "github.com/cloudwan/goten-sdk/runtime/client"
	gotenresource "github.com/cloudwan/goten-sdk/runtime/resource"
)

// proto imports
import (
	tpm_attestation_cert "github.com/cloudwan/edgelq-sdk/devices/resources/v1/tpm_attestation_cert"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
)

// Reference imports to suppress errors if they are not otherwise used.
var (
	_ = new(proto.Message)
	_ = new(gotenclient.MethodDescriptor)
	_ = gotenresource.WildcardId
)

// make sure we're using proto imports
var (
	_ = &tpm_attestation_cert.TpmAttestationCert{}
	_ = &emptypb.Empty{}
)

var (
	descriptorsInitialized                bool
	tpmAttestationCertServiceDescriptor   *TpmAttestationCertServiceDescriptor
	getTpmAttestationCertDescriptor       *GetTpmAttestationCertDescriptor
	batchGetTpmAttestationCertsDescriptor *BatchGetTpmAttestationCertsDescriptor
	listTpmAttestationCertsDescriptor     *ListTpmAttestationCertsDescriptor
	watchTpmAttestationCertDescriptor     *WatchTpmAttestationCertDescriptor
	watchTpmAttestationCertsDescriptor    *WatchTpmAttestationCertsDescriptor
	createTpmAttestationCertDescriptor    *CreateTpmAttestationCertDescriptor
	updateTpmAttestationCertDescriptor    *UpdateTpmAttestationCertDescriptor
	deleteTpmAttestationCertDescriptor    *DeleteTpmAttestationCertDescriptor
)

type GetTpmAttestationCertDescriptor struct{}

type GetTpmAttestationCertDescriptorClientMsgHandle struct{}

type GetTpmAttestationCertDescriptorServerMsgHandle struct{}

func (d *GetTpmAttestationCertDescriptor) NewEmptyClientMsg() proto.Message {
	return &GetTpmAttestationCertRequest{}
}

func (d *GetTpmAttestationCertDescriptor) NewEmptyServerMsg() proto.Message {
	return &tpm_attestation_cert.TpmAttestationCert{}
}

func (d *GetTpmAttestationCertDescriptor) IsUnary() bool {
	return true
}

func (d *GetTpmAttestationCertDescriptor) IsClientStream() bool {
	return false
}

func (d *GetTpmAttestationCertDescriptor) IsServerStream() bool {
	return false
}

func (d *GetTpmAttestationCertDescriptor) IsCollection() bool {
	return false
}

func (d *GetTpmAttestationCertDescriptor) IsPlural() bool {
	return false
}

func (d *GetTpmAttestationCertDescriptor) HasResource() bool {
	return true
}

func (d *GetTpmAttestationCertDescriptor) RequestHasResourceBody() bool {
	return false
}

func (d *GetTpmAttestationCertDescriptor) GetVerb() string {
	return "get"
}

func (d *GetTpmAttestationCertDescriptor) GetMethodName() string {
	return "GetTpmAttestationCert"
}

func (d *GetTpmAttestationCertDescriptor) GetFullMethodName() string {
	return "/ntt.devices.v1.TpmAttestationCertService/GetTpmAttestationCert"
}

func (d *GetTpmAttestationCertDescriptor) GetProtoPkgName() string {
	return "ntt.devices.v1"
}

func (d *GetTpmAttestationCertDescriptor) GetApiName() string {
	return "TpmAttestationCertService"
}

func (d *GetTpmAttestationCertDescriptor) GetServiceDomain() string {
	return "devices.edgelq.com"
}

func (d *GetTpmAttestationCertDescriptor) GetServiceVersion() string {
	return "v1"
}

func (d *GetTpmAttestationCertDescriptor) GetApiDescriptor() gotenclient.ApiDescriptor {
	return tpmAttestationCertServiceDescriptor
}

func (d *GetTpmAttestationCertDescriptor) GetResourceDescriptor() gotenresource.Descriptor {
	return tpm_attestation_cert.GetDescriptor()
}

func (d *GetTpmAttestationCertDescriptor) GetClientMsgReflectHandle() gotenclient.MethodMsgHandle {
	return &GetTpmAttestationCertDescriptorClientMsgHandle{}
}

func (d *GetTpmAttestationCertDescriptor) GetServerMsgReflectHandle() gotenclient.MethodMsgHandle {
	return &GetTpmAttestationCertDescriptorServerMsgHandle{}
}

func (h *GetTpmAttestationCertDescriptorClientMsgHandle) ExtractResourceName(msg proto.Message) gotenresource.Name {
	typedMsg := msg.(*GetTpmAttestationCertRequest)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractResourceName(*GetTpmAttestationCertRequest) *tpm_attestation_cert.Name
	})
	if ok {
		return override.OverrideExtractResourceName(typedMsg)
	}
	{
		if name := typedMsg.GetName(); name != nil {
			return name
		}
	}
	return (*tpm_attestation_cert.Name)(nil)
}

func (h *GetTpmAttestationCertDescriptorClientMsgHandle) ExtractResourceNames(msg proto.Message) gotenresource.NameList {
	typedMsg := msg.(*GetTpmAttestationCertRequest)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractResourceNames(*GetTpmAttestationCertRequest) []*tpm_attestation_cert.Name
	})
	if ok {
		return tpm_attestation_cert.TpmAttestationCertNameList(override.OverrideExtractResourceNames(typedMsg))
	}
	return nil
}

func (h *GetTpmAttestationCertDescriptorClientMsgHandle) ExtractCollectionName(msg proto.Message) gotenresource.Name {
	typedMsg := msg.(*GetTpmAttestationCertRequest)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractCollectionName(*GetTpmAttestationCertRequest) *tpm_attestation_cert.ParentName
	})
	if ok {
		return override.OverrideExtractCollectionName(typedMsg)
	}
	return nil
}

func (h *GetTpmAttestationCertDescriptorClientMsgHandle) ExtractResourceBody(msg proto.Message) gotenresource.Resource {
	typedMsg := msg.(*GetTpmAttestationCertRequest)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractResourceBody(*GetTpmAttestationCertRequest) *tpm_attestation_cert.TpmAttestationCert
	})
	if ok {
		return override.OverrideExtractResourceBody(typedMsg)
	}
	return nil
}

func (h *GetTpmAttestationCertDescriptorClientMsgHandle) ExtractResourceBodies(msg proto.Message) gotenresource.ResourceList {
	typedMsg := msg.(*GetTpmAttestationCertRequest)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractResourceBodies(*GetTpmAttestationCertRequest) []*tpm_attestation_cert.TpmAttestationCert
	})
	if ok {
		return tpm_attestation_cert.TpmAttestationCertList(override.OverrideExtractResourceBodies(typedMsg))
	}
	return nil
}

func (h *GetTpmAttestationCertDescriptorServerMsgHandle) ExtractResourceName(msg proto.Message) gotenresource.Name {
	typedMsg := msg.(*tpm_attestation_cert.TpmAttestationCert)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractResourceName(*tpm_attestation_cert.TpmAttestationCert) *tpm_attestation_cert.Name
	})
	if ok {
		return override.OverrideExtractResourceName(typedMsg)
	}
	{
		if name := typedMsg.GetName(); name != nil {
			return name
		}
	}
	return (*tpm_attestation_cert.Name)(nil)
}

func (h *GetTpmAttestationCertDescriptorServerMsgHandle) ExtractResourceNames(msg proto.Message) gotenresource.NameList {
	typedMsg := msg.(*tpm_attestation_cert.TpmAttestationCert)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractResourceNames(*tpm_attestation_cert.TpmAttestationCert) []*tpm_attestation_cert.Name
	})
	if ok {
		return tpm_attestation_cert.TpmAttestationCertNameList(override.OverrideExtractResourceNames(typedMsg))
	}
	return nil
}

func (h *GetTpmAttestationCertDescriptorServerMsgHandle) ExtractCollectionName(msg proto.Message) gotenresource.Name {
	typedMsg := msg.(*tpm_attestation_cert.TpmAttestationCert)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractCollectionName(*tpm_attestation_cert.TpmAttestationCert) *tpm_attestation_cert.ParentName
	})
	if ok {
		return override.OverrideExtractCollectionName(typedMsg)
	}
	return nil
}

func (h *GetTpmAttestationCertDescriptorServerMsgHandle) ExtractResourceBody(msg proto.Message) gotenresource.Resource {
	return msg.(*tpm_attestation_cert.TpmAttestationCert)
}

func (h *GetTpmAttestationCertDescriptorServerMsgHandle) ExtractResourceBodies(msg proto.Message) gotenresource.ResourceList {
	typedMsg := msg.(*tpm_attestation_cert.TpmAttestationCert)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractResourceBodies(*tpm_attestation_cert.TpmAttestationCert) []*tpm_attestation_cert.TpmAttestationCert
	})
	if ok {
		return tpm_attestation_cert.TpmAttestationCertList(override.OverrideExtractResourceBodies(typedMsg))
	}
	return nil
}

func GetGetTpmAttestationCertDescriptor() *GetTpmAttestationCertDescriptor {
	return getTpmAttestationCertDescriptor
}

type BatchGetTpmAttestationCertsDescriptor struct{}

type BatchGetTpmAttestationCertsDescriptorClientMsgHandle struct{}

type BatchGetTpmAttestationCertsDescriptorServerMsgHandle struct{}

func (d *BatchGetTpmAttestationCertsDescriptor) NewEmptyClientMsg() proto.Message {
	return &BatchGetTpmAttestationCertsRequest{}
}

func (d *BatchGetTpmAttestationCertsDescriptor) NewEmptyServerMsg() proto.Message {
	return &BatchGetTpmAttestationCertsResponse{}
}

func (d *BatchGetTpmAttestationCertsDescriptor) IsUnary() bool {
	return true
}

func (d *BatchGetTpmAttestationCertsDescriptor) IsClientStream() bool {
	return false
}

func (d *BatchGetTpmAttestationCertsDescriptor) IsServerStream() bool {
	return false
}

func (d *BatchGetTpmAttestationCertsDescriptor) IsCollection() bool {
	return false
}

func (d *BatchGetTpmAttestationCertsDescriptor) IsPlural() bool {
	return true
}

func (d *BatchGetTpmAttestationCertsDescriptor) HasResource() bool {
	return true
}

func (d *BatchGetTpmAttestationCertsDescriptor) RequestHasResourceBody() bool {
	return false
}

func (d *BatchGetTpmAttestationCertsDescriptor) GetVerb() string {
	return "batchGet"
}

func (d *BatchGetTpmAttestationCertsDescriptor) GetMethodName() string {
	return "BatchGetTpmAttestationCerts"
}

func (d *BatchGetTpmAttestationCertsDescriptor) GetFullMethodName() string {
	return "/ntt.devices.v1.TpmAttestationCertService/BatchGetTpmAttestationCerts"
}

func (d *BatchGetTpmAttestationCertsDescriptor) GetProtoPkgName() string {
	return "ntt.devices.v1"
}

func (d *BatchGetTpmAttestationCertsDescriptor) GetApiName() string {
	return "TpmAttestationCertService"
}

func (d *BatchGetTpmAttestationCertsDescriptor) GetServiceDomain() string {
	return "devices.edgelq.com"
}

func (d *BatchGetTpmAttestationCertsDescriptor) GetServiceVersion() string {
	return "v1"
}

func (d *BatchGetTpmAttestationCertsDescriptor) GetApiDescriptor() gotenclient.ApiDescriptor {
	return tpmAttestationCertServiceDescriptor
}

func (d *BatchGetTpmAttestationCertsDescriptor) GetResourceDescriptor() gotenresource.Descriptor {
	return tpm_attestation_cert.GetDescriptor()
}

func (d *BatchGetTpmAttestationCertsDescriptor) GetClientMsgReflectHandle() gotenclient.MethodMsgHandle {
	return &BatchGetTpmAttestationCertsDescriptorClientMsgHandle{}
}

func (d *BatchGetTpmAttestationCertsDescriptor) GetServerMsgReflectHandle() gotenclient.MethodMsgHandle {
	return &BatchGetTpmAttestationCertsDescriptorServerMsgHandle{}
}

func (h *BatchGetTpmAttestationCertsDescriptorClientMsgHandle) ExtractResourceName(msg proto.Message) gotenresource.Name {
	typedMsg := msg.(*BatchGetTpmAttestationCertsRequest)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractResourceName(*BatchGetTpmAttestationCertsRequest) *tpm_attestation_cert.Name
	})
	if ok {
		return override.OverrideExtractResourceName(typedMsg)
	}
	return nil
}

func (h *BatchGetTpmAttestationCertsDescriptorClientMsgHandle) ExtractResourceNames(msg proto.Message) gotenresource.NameList {
	typedMsg := msg.(*BatchGetTpmAttestationCertsRequest)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractResourceNames(*BatchGetTpmAttestationCertsRequest) []*tpm_attestation_cert.Name
	})
	if ok {
		return tpm_attestation_cert.TpmAttestationCertNameList(override.OverrideExtractResourceNames(typedMsg))
	}
	{
		if names := typedMsg.GetNames(); len(names) > 0 {
			return tpm_attestation_cert.TpmAttestationCertNameList(names)
		}
	}
	return (tpm_attestation_cert.TpmAttestationCertNameList)(nil)
}

func (h *BatchGetTpmAttestationCertsDescriptorClientMsgHandle) ExtractCollectionName(msg proto.Message) gotenresource.Name {
	typedMsg := msg.(*BatchGetTpmAttestationCertsRequest)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractCollectionName(*BatchGetTpmAttestationCertsRequest) *tpm_attestation_cert.ParentName
	})
	if ok {
		return override.OverrideExtractCollectionName(typedMsg)
	}
	return nil
}

func (h *BatchGetTpmAttestationCertsDescriptorClientMsgHandle) ExtractResourceBody(msg proto.Message) gotenresource.Resource {
	typedMsg := msg.(*BatchGetTpmAttestationCertsRequest)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractResourceBody(*BatchGetTpmAttestationCertsRequest) *tpm_attestation_cert.TpmAttestationCert
	})
	if ok {
		return override.OverrideExtractResourceBody(typedMsg)
	}
	return nil
}

func (h *BatchGetTpmAttestationCertsDescriptorClientMsgHandle) ExtractResourceBodies(msg proto.Message) gotenresource.ResourceList {
	typedMsg := msg.(*BatchGetTpmAttestationCertsRequest)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractResourceBodies(*BatchGetTpmAttestationCertsRequest) []*tpm_attestation_cert.TpmAttestationCert
	})
	if ok {
		return tpm_attestation_cert.TpmAttestationCertList(override.OverrideExtractResourceBodies(typedMsg))
	}
	return nil
}

func (h *BatchGetTpmAttestationCertsDescriptorServerMsgHandle) ExtractResourceName(msg proto.Message) gotenresource.Name {
	typedMsg := msg.(*BatchGetTpmAttestationCertsResponse)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractResourceName(*BatchGetTpmAttestationCertsResponse) *tpm_attestation_cert.Name
	})
	if ok {
		return override.OverrideExtractResourceName(typedMsg)
	}
	return nil
}

func (h *BatchGetTpmAttestationCertsDescriptorServerMsgHandle) ExtractResourceNames(msg proto.Message) gotenresource.NameList {
	typedMsg := msg.(*BatchGetTpmAttestationCertsResponse)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractResourceNames(*BatchGetTpmAttestationCertsResponse) []*tpm_attestation_cert.Name
	})
	if ok {
		return tpm_attestation_cert.TpmAttestationCertNameList(override.OverrideExtractResourceNames(typedMsg))
	}
	{
		if resources := typedMsg.GetTpmAttestationCerts(); len(resources) > 0 {
			list := make(tpm_attestation_cert.TpmAttestationCertNameList, 0, len(resources))
			for _, res := range resources {
				list = append(list, res.GetName())
			}
			return list
		}
	}
	return (tpm_attestation_cert.TpmAttestationCertNameList)(nil)
}

func (h *BatchGetTpmAttestationCertsDescriptorServerMsgHandle) ExtractCollectionName(msg proto.Message) gotenresource.Name {
	typedMsg := msg.(*BatchGetTpmAttestationCertsResponse)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractCollectionName(*BatchGetTpmAttestationCertsResponse) *tpm_attestation_cert.ParentName
	})
	if ok {
		return override.OverrideExtractCollectionName(typedMsg)
	}
	return nil
}

func (h *BatchGetTpmAttestationCertsDescriptorServerMsgHandle) ExtractResourceBody(msg proto.Message) gotenresource.Resource {
	typedMsg := msg.(*BatchGetTpmAttestationCertsResponse)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractResourceBody(*BatchGetTpmAttestationCertsResponse) *tpm_attestation_cert.TpmAttestationCert
	})
	if ok {
		return override.OverrideExtractResourceBody(typedMsg)
	}
	return nil
}

func (h *BatchGetTpmAttestationCertsDescriptorServerMsgHandle) ExtractResourceBodies(msg proto.Message) gotenresource.ResourceList {
	typedMsg := msg.(*BatchGetTpmAttestationCertsResponse)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractResourceBodies(*BatchGetTpmAttestationCertsResponse) []*tpm_attestation_cert.TpmAttestationCert
	})
	if ok {
		return tpm_attestation_cert.TpmAttestationCertList(override.OverrideExtractResourceBodies(typedMsg))
	}
	{
		if resources := typedMsg.GetTpmAttestationCerts(); len(resources) > 0 {
			return tpm_attestation_cert.TpmAttestationCertList(resources)
		}
	}
	return (tpm_attestation_cert.TpmAttestationCertList)(nil)
}

func GetBatchGetTpmAttestationCertsDescriptor() *BatchGetTpmAttestationCertsDescriptor {
	return batchGetTpmAttestationCertsDescriptor
}

type ListTpmAttestationCertsDescriptor struct{}

type ListTpmAttestationCertsDescriptorClientMsgHandle struct{}

type ListTpmAttestationCertsDescriptorServerMsgHandle struct{}

func (d *ListTpmAttestationCertsDescriptor) NewEmptyClientMsg() proto.Message {
	return &ListTpmAttestationCertsRequest{}
}

func (d *ListTpmAttestationCertsDescriptor) NewEmptyServerMsg() proto.Message {
	return &ListTpmAttestationCertsResponse{}
}

func (d *ListTpmAttestationCertsDescriptor) IsUnary() bool {
	return true
}

func (d *ListTpmAttestationCertsDescriptor) IsClientStream() bool {
	return false
}

func (d *ListTpmAttestationCertsDescriptor) IsServerStream() bool {
	return false
}

func (d *ListTpmAttestationCertsDescriptor) IsCollection() bool {
	return true
}

func (d *ListTpmAttestationCertsDescriptor) IsPlural() bool {
	return true
}

func (d *ListTpmAttestationCertsDescriptor) HasResource() bool {
	return true
}

func (d *ListTpmAttestationCertsDescriptor) RequestHasResourceBody() bool {
	return false
}

func (d *ListTpmAttestationCertsDescriptor) GetVerb() string {
	return "list"
}

func (d *ListTpmAttestationCertsDescriptor) GetMethodName() string {
	return "ListTpmAttestationCerts"
}

func (d *ListTpmAttestationCertsDescriptor) GetFullMethodName() string {
	return "/ntt.devices.v1.TpmAttestationCertService/ListTpmAttestationCerts"
}

func (d *ListTpmAttestationCertsDescriptor) GetProtoPkgName() string {
	return "ntt.devices.v1"
}

func (d *ListTpmAttestationCertsDescriptor) GetApiName() string {
	return "TpmAttestationCertService"
}

func (d *ListTpmAttestationCertsDescriptor) GetServiceDomain() string {
	return "devices.edgelq.com"
}

func (d *ListTpmAttestationCertsDescriptor) GetServiceVersion() string {
	return "v1"
}

func (d *ListTpmAttestationCertsDescriptor) GetApiDescriptor() gotenclient.ApiDescriptor {
	return tpmAttestationCertServiceDescriptor
}

func (d *ListTpmAttestationCertsDescriptor) GetResourceDescriptor() gotenresource.Descriptor {
	return tpm_attestation_cert.GetDescriptor()
}

func (d *ListTpmAttestationCertsDescriptor) GetClientMsgReflectHandle() gotenclient.MethodMsgHandle {
	return &ListTpmAttestationCertsDescriptorClientMsgHandle{}
}

func (d *ListTpmAttestationCertsDescriptor) GetServerMsgReflectHandle() gotenclient.MethodMsgHandle {
	return &ListTpmAttestationCertsDescriptorServerMsgHandle{}
}

func (h *ListTpmAttestationCertsDescriptorClientMsgHandle) ExtractResourceName(msg proto.Message) gotenresource.Name {
	typedMsg := msg.(*ListTpmAttestationCertsRequest)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractResourceName(*ListTpmAttestationCertsRequest) *tpm_attestation_cert.Name
	})
	if ok {
		return override.OverrideExtractResourceName(typedMsg)
	}
	return nil
}

func (h *ListTpmAttestationCertsDescriptorClientMsgHandle) ExtractResourceNames(msg proto.Message) gotenresource.NameList {
	typedMsg := msg.(*ListTpmAttestationCertsRequest)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractResourceNames(*ListTpmAttestationCertsRequest) []*tpm_attestation_cert.Name
	})
	if ok {
		return tpm_attestation_cert.TpmAttestationCertNameList(override.OverrideExtractResourceNames(typedMsg))
	}
	return nil
}

func (h *ListTpmAttestationCertsDescriptorClientMsgHandle) ExtractCollectionName(msg proto.Message) gotenresource.Name {
	typedMsg := msg.(*ListTpmAttestationCertsRequest)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractCollectionName(*ListTpmAttestationCertsRequest) *tpm_attestation_cert.ParentName
	})
	if ok {
		return override.OverrideExtractCollectionName(typedMsg)
	}
	{
		if parentName := typedMsg.GetParent(); parentName != nil {
			return parentName
		}
	}
	return (*tpm_attestation_cert.ParentName)(nil)
}

func (h *ListTpmAttestationCertsDescriptorClientMsgHandle) ExtractResourceBody(msg proto.Message) gotenresource.Resource {
	typedMsg := msg.(*ListTpmAttestationCertsRequest)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractResourceBody(*ListTpmAttestationCertsRequest) *tpm_attestation_cert.TpmAttestationCert
	})
	if ok {
		return override.OverrideExtractResourceBody(typedMsg)
	}
	return nil
}

func (h *ListTpmAttestationCertsDescriptorClientMsgHandle) ExtractResourceBodies(msg proto.Message) gotenresource.ResourceList {
	typedMsg := msg.(*ListTpmAttestationCertsRequest)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractResourceBodies(*ListTpmAttestationCertsRequest) []*tpm_attestation_cert.TpmAttestationCert
	})
	if ok {
		return tpm_attestation_cert.TpmAttestationCertList(override.OverrideExtractResourceBodies(typedMsg))
	}
	return nil
}

func (h *ListTpmAttestationCertsDescriptorServerMsgHandle) ExtractResourceName(msg proto.Message) gotenresource.Name {
	typedMsg := msg.(*ListTpmAttestationCertsResponse)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractResourceName(*ListTpmAttestationCertsResponse) *tpm_attestation_cert.Name
	})
	if ok {
		return override.OverrideExtractResourceName(typedMsg)
	}
	return nil
}

func (h *ListTpmAttestationCertsDescriptorServerMsgHandle) ExtractResourceNames(msg proto.Message) gotenresource.NameList {
	typedMsg := msg.(*ListTpmAttestationCertsResponse)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractResourceNames(*ListTpmAttestationCertsResponse) []*tpm_attestation_cert.Name
	})
	if ok {
		return tpm_attestation_cert.TpmAttestationCertNameList(override.OverrideExtractResourceNames(typedMsg))
	}
	{
		if resources := typedMsg.GetTpmAttestationCerts(); len(resources) > 0 {
			list := make(tpm_attestation_cert.TpmAttestationCertNameList, 0, len(resources))
			for _, res := range resources {
				list = append(list, res.GetName())
			}
			return list
		}
	}
	return (tpm_attestation_cert.TpmAttestationCertNameList)(nil)
}

func (h *ListTpmAttestationCertsDescriptorServerMsgHandle) ExtractCollectionName(msg proto.Message) gotenresource.Name {
	typedMsg := msg.(*ListTpmAttestationCertsResponse)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractCollectionName(*ListTpmAttestationCertsResponse) *tpm_attestation_cert.ParentName
	})
	if ok {
		return override.OverrideExtractCollectionName(typedMsg)
	}
	return nil
}

func (h *ListTpmAttestationCertsDescriptorServerMsgHandle) ExtractResourceBody(msg proto.Message) gotenresource.Resource {
	typedMsg := msg.(*ListTpmAttestationCertsResponse)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractResourceBody(*ListTpmAttestationCertsResponse) *tpm_attestation_cert.TpmAttestationCert
	})
	if ok {
		return override.OverrideExtractResourceBody(typedMsg)
	}
	return nil
}

func (h *ListTpmAttestationCertsDescriptorServerMsgHandle) ExtractResourceBodies(msg proto.Message) gotenresource.ResourceList {
	typedMsg := msg.(*ListTpmAttestationCertsResponse)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractResourceBodies(*ListTpmAttestationCertsResponse) []*tpm_attestation_cert.TpmAttestationCert
	})
	if ok {
		return tpm_attestation_cert.TpmAttestationCertList(override.OverrideExtractResourceBodies(typedMsg))
	}
	{
		if resources := typedMsg.GetTpmAttestationCerts(); len(resources) > 0 {
			return tpm_attestation_cert.TpmAttestationCertList(resources)
		}
	}
	return (tpm_attestation_cert.TpmAttestationCertList)(nil)
}

func GetListTpmAttestationCertsDescriptor() *ListTpmAttestationCertsDescriptor {
	return listTpmAttestationCertsDescriptor
}

type WatchTpmAttestationCertDescriptor struct{}

type WatchTpmAttestationCertDescriptorClientMsgHandle struct{}

type WatchTpmAttestationCertDescriptorServerMsgHandle struct{}

func (d *WatchTpmAttestationCertDescriptor) NewEmptyClientMsg() proto.Message {
	return &WatchTpmAttestationCertRequest{}
}

func (d *WatchTpmAttestationCertDescriptor) NewEmptyServerMsg() proto.Message {
	return &WatchTpmAttestationCertResponse{}
}

func (d *WatchTpmAttestationCertDescriptor) IsUnary() bool {
	return false
}

func (d *WatchTpmAttestationCertDescriptor) IsClientStream() bool {
	return false
}

func (d *WatchTpmAttestationCertDescriptor) IsServerStream() bool {
	return true
}

func (d *WatchTpmAttestationCertDescriptor) IsCollection() bool {
	return false
}

func (d *WatchTpmAttestationCertDescriptor) IsPlural() bool {
	return false
}

func (d *WatchTpmAttestationCertDescriptor) HasResource() bool {
	return true
}

func (d *WatchTpmAttestationCertDescriptor) RequestHasResourceBody() bool {
	return false
}

func (d *WatchTpmAttestationCertDescriptor) GetVerb() string {
	return "watch"
}

func (d *WatchTpmAttestationCertDescriptor) GetMethodName() string {
	return "WatchTpmAttestationCert"
}

func (d *WatchTpmAttestationCertDescriptor) GetFullMethodName() string {
	return "/ntt.devices.v1.TpmAttestationCertService/WatchTpmAttestationCert"
}

func (d *WatchTpmAttestationCertDescriptor) GetProtoPkgName() string {
	return "ntt.devices.v1"
}

func (d *WatchTpmAttestationCertDescriptor) GetApiName() string {
	return "TpmAttestationCertService"
}

func (d *WatchTpmAttestationCertDescriptor) GetServiceDomain() string {
	return "devices.edgelq.com"
}

func (d *WatchTpmAttestationCertDescriptor) GetServiceVersion() string {
	return "v1"
}

func (d *WatchTpmAttestationCertDescriptor) GetApiDescriptor() gotenclient.ApiDescriptor {
	return tpmAttestationCertServiceDescriptor
}

func (d *WatchTpmAttestationCertDescriptor) GetResourceDescriptor() gotenresource.Descriptor {
	return tpm_attestation_cert.GetDescriptor()
}

func (d *WatchTpmAttestationCertDescriptor) GetClientMsgReflectHandle() gotenclient.MethodMsgHandle {
	return &WatchTpmAttestationCertDescriptorClientMsgHandle{}
}

func (d *WatchTpmAttestationCertDescriptor) GetServerMsgReflectHandle() gotenclient.MethodMsgHandle {
	return &WatchTpmAttestationCertDescriptorServerMsgHandle{}
}

func (h *WatchTpmAttestationCertDescriptorClientMsgHandle) ExtractResourceName(msg proto.Message) gotenresource.Name {
	typedMsg := msg.(*WatchTpmAttestationCertRequest)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractResourceName(*WatchTpmAttestationCertRequest) *tpm_attestation_cert.Name
	})
	if ok {
		return override.OverrideExtractResourceName(typedMsg)
	}
	{
		if name := typedMsg.GetName(); name != nil {
			return name
		}
	}
	return (*tpm_attestation_cert.Name)(nil)
}

func (h *WatchTpmAttestationCertDescriptorClientMsgHandle) ExtractResourceNames(msg proto.Message) gotenresource.NameList {
	typedMsg := msg.(*WatchTpmAttestationCertRequest)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractResourceNames(*WatchTpmAttestationCertRequest) []*tpm_attestation_cert.Name
	})
	if ok {
		return tpm_attestation_cert.TpmAttestationCertNameList(override.OverrideExtractResourceNames(typedMsg))
	}
	return nil
}

func (h *WatchTpmAttestationCertDescriptorClientMsgHandle) ExtractCollectionName(msg proto.Message) gotenresource.Name {
	typedMsg := msg.(*WatchTpmAttestationCertRequest)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractCollectionName(*WatchTpmAttestationCertRequest) *tpm_attestation_cert.ParentName
	})
	if ok {
		return override.OverrideExtractCollectionName(typedMsg)
	}
	return nil
}

func (h *WatchTpmAttestationCertDescriptorClientMsgHandle) ExtractResourceBody(msg proto.Message) gotenresource.Resource {
	typedMsg := msg.(*WatchTpmAttestationCertRequest)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractResourceBody(*WatchTpmAttestationCertRequest) *tpm_attestation_cert.TpmAttestationCert
	})
	if ok {
		return override.OverrideExtractResourceBody(typedMsg)
	}
	return nil
}

func (h *WatchTpmAttestationCertDescriptorClientMsgHandle) ExtractResourceBodies(msg proto.Message) gotenresource.ResourceList {
	typedMsg := msg.(*WatchTpmAttestationCertRequest)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractResourceBodies(*WatchTpmAttestationCertRequest) []*tpm_attestation_cert.TpmAttestationCert
	})
	if ok {
		return tpm_attestation_cert.TpmAttestationCertList(override.OverrideExtractResourceBodies(typedMsg))
	}
	return nil
}

func (h *WatchTpmAttestationCertDescriptorServerMsgHandle) ExtractResourceName(msg proto.Message) gotenresource.Name {
	typedMsg := msg.(*WatchTpmAttestationCertResponse)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractResourceName(*WatchTpmAttestationCertResponse) *tpm_attestation_cert.Name
	})
	if ok {
		return override.OverrideExtractResourceName(typedMsg)
	}
	{
		if resChange := typedMsg.GetChange(); resChange != nil {
			switch tResChange := resChange.ChangeType.(type) {
			case *tpm_attestation_cert.TpmAttestationCertChange_Added_:
				return tResChange.Added.GetTpmAttestationCert().GetName()
			case *tpm_attestation_cert.TpmAttestationCertChange_Modified_:
				return tResChange.Modified.GetName()
			case *tpm_attestation_cert.TpmAttestationCertChange_Removed_:
				return tResChange.Removed.GetName()
			case *tpm_attestation_cert.TpmAttestationCertChange_Current_:
				return tResChange.Current.GetTpmAttestationCert().GetName()
			}
		}
	}
	return (*tpm_attestation_cert.Name)(nil)
}

func (h *WatchTpmAttestationCertDescriptorServerMsgHandle) ExtractResourceNames(msg proto.Message) gotenresource.NameList {
	typedMsg := msg.(*WatchTpmAttestationCertResponse)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractResourceNames(*WatchTpmAttestationCertResponse) []*tpm_attestation_cert.Name
	})
	if ok {
		return tpm_attestation_cert.TpmAttestationCertNameList(override.OverrideExtractResourceNames(typedMsg))
	}
	return nil
}

func (h *WatchTpmAttestationCertDescriptorServerMsgHandle) ExtractCollectionName(msg proto.Message) gotenresource.Name {
	typedMsg := msg.(*WatchTpmAttestationCertResponse)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractCollectionName(*WatchTpmAttestationCertResponse) *tpm_attestation_cert.ParentName
	})
	if ok {
		return override.OverrideExtractCollectionName(typedMsg)
	}
	return nil
}

func (h *WatchTpmAttestationCertDescriptorServerMsgHandle) ExtractResourceBody(msg proto.Message) gotenresource.Resource {
	typedMsg := msg.(*WatchTpmAttestationCertResponse)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractResourceBody(*WatchTpmAttestationCertResponse) *tpm_attestation_cert.TpmAttestationCert
	})
	if ok {
		return override.OverrideExtractResourceBody(typedMsg)
	}
	{
		if resChange := typedMsg.GetChange(); resChange != nil {
			switch tResChange := resChange.ChangeType.(type) {
			case *tpm_attestation_cert.TpmAttestationCertChange_Added_:
				return tResChange.Added.GetTpmAttestationCert()
			case *tpm_attestation_cert.TpmAttestationCertChange_Modified_:
				return tResChange.Modified.GetTpmAttestationCert()
			case *tpm_attestation_cert.TpmAttestationCertChange_Current_:
				return tResChange.Current.GetTpmAttestationCert()
			}
		}
	}
	return (*tpm_attestation_cert.TpmAttestationCert)(nil)
}

func (h *WatchTpmAttestationCertDescriptorServerMsgHandle) ExtractResourceBodies(msg proto.Message) gotenresource.ResourceList {
	typedMsg := msg.(*WatchTpmAttestationCertResponse)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractResourceBodies(*WatchTpmAttestationCertResponse) []*tpm_attestation_cert.TpmAttestationCert
	})
	if ok {
		return tpm_attestation_cert.TpmAttestationCertList(override.OverrideExtractResourceBodies(typedMsg))
	}
	return nil
}

func GetWatchTpmAttestationCertDescriptor() *WatchTpmAttestationCertDescriptor {
	return watchTpmAttestationCertDescriptor
}

type WatchTpmAttestationCertsDescriptor struct{}

type WatchTpmAttestationCertsDescriptorClientMsgHandle struct{}

type WatchTpmAttestationCertsDescriptorServerMsgHandle struct{}

func (d *WatchTpmAttestationCertsDescriptor) NewEmptyClientMsg() proto.Message {
	return &WatchTpmAttestationCertsRequest{}
}

func (d *WatchTpmAttestationCertsDescriptor) NewEmptyServerMsg() proto.Message {
	return &WatchTpmAttestationCertsResponse{}
}

func (d *WatchTpmAttestationCertsDescriptor) IsUnary() bool {
	return false
}

func (d *WatchTpmAttestationCertsDescriptor) IsClientStream() bool {
	return false
}

func (d *WatchTpmAttestationCertsDescriptor) IsServerStream() bool {
	return true
}

func (d *WatchTpmAttestationCertsDescriptor) IsCollection() bool {
	return true
}

func (d *WatchTpmAttestationCertsDescriptor) IsPlural() bool {
	return true
}

func (d *WatchTpmAttestationCertsDescriptor) HasResource() bool {
	return true
}

func (d *WatchTpmAttestationCertsDescriptor) RequestHasResourceBody() bool {
	return false
}

func (d *WatchTpmAttestationCertsDescriptor) GetVerb() string {
	return "watch"
}

func (d *WatchTpmAttestationCertsDescriptor) GetMethodName() string {
	return "WatchTpmAttestationCerts"
}

func (d *WatchTpmAttestationCertsDescriptor) GetFullMethodName() string {
	return "/ntt.devices.v1.TpmAttestationCertService/WatchTpmAttestationCerts"
}

func (d *WatchTpmAttestationCertsDescriptor) GetProtoPkgName() string {
	return "ntt.devices.v1"
}

func (d *WatchTpmAttestationCertsDescriptor) GetApiName() string {
	return "TpmAttestationCertService"
}

func (d *WatchTpmAttestationCertsDescriptor) GetServiceDomain() string {
	return "devices.edgelq.com"
}

func (d *WatchTpmAttestationCertsDescriptor) GetServiceVersion() string {
	return "v1"
}

func (d *WatchTpmAttestationCertsDescriptor) GetApiDescriptor() gotenclient.ApiDescriptor {
	return tpmAttestationCertServiceDescriptor
}

func (d *WatchTpmAttestationCertsDescriptor) GetResourceDescriptor() gotenresource.Descriptor {
	return tpm_attestation_cert.GetDescriptor()
}

func (d *WatchTpmAttestationCertsDescriptor) GetClientMsgReflectHandle() gotenclient.MethodMsgHandle {
	return &WatchTpmAttestationCertsDescriptorClientMsgHandle{}
}

func (d *WatchTpmAttestationCertsDescriptor) GetServerMsgReflectHandle() gotenclient.MethodMsgHandle {
	return &WatchTpmAttestationCertsDescriptorServerMsgHandle{}
}

func (h *WatchTpmAttestationCertsDescriptorClientMsgHandle) ExtractResourceName(msg proto.Message) gotenresource.Name {
	typedMsg := msg.(*WatchTpmAttestationCertsRequest)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractResourceName(*WatchTpmAttestationCertsRequest) *tpm_attestation_cert.Name
	})
	if ok {
		return override.OverrideExtractResourceName(typedMsg)
	}
	return nil
}

func (h *WatchTpmAttestationCertsDescriptorClientMsgHandle) ExtractResourceNames(msg proto.Message) gotenresource.NameList {
	typedMsg := msg.(*WatchTpmAttestationCertsRequest)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractResourceNames(*WatchTpmAttestationCertsRequest) []*tpm_attestation_cert.Name
	})
	if ok {
		return tpm_attestation_cert.TpmAttestationCertNameList(override.OverrideExtractResourceNames(typedMsg))
	}
	return nil
}

func (h *WatchTpmAttestationCertsDescriptorClientMsgHandle) ExtractCollectionName(msg proto.Message) gotenresource.Name {
	typedMsg := msg.(*WatchTpmAttestationCertsRequest)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractCollectionName(*WatchTpmAttestationCertsRequest) *tpm_attestation_cert.ParentName
	})
	if ok {
		return override.OverrideExtractCollectionName(typedMsg)
	}
	{
		if parentName := typedMsg.GetParent(); parentName != nil {
			return parentName
		}
	}
	return (*tpm_attestation_cert.ParentName)(nil)
}

func (h *WatchTpmAttestationCertsDescriptorClientMsgHandle) ExtractResourceBody(msg proto.Message) gotenresource.Resource {
	typedMsg := msg.(*WatchTpmAttestationCertsRequest)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractResourceBody(*WatchTpmAttestationCertsRequest) *tpm_attestation_cert.TpmAttestationCert
	})
	if ok {
		return override.OverrideExtractResourceBody(typedMsg)
	}
	return nil
}

func (h *WatchTpmAttestationCertsDescriptorClientMsgHandle) ExtractResourceBodies(msg proto.Message) gotenresource.ResourceList {
	typedMsg := msg.(*WatchTpmAttestationCertsRequest)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractResourceBodies(*WatchTpmAttestationCertsRequest) []*tpm_attestation_cert.TpmAttestationCert
	})
	if ok {
		return tpm_attestation_cert.TpmAttestationCertList(override.OverrideExtractResourceBodies(typedMsg))
	}
	return nil
}

func (h *WatchTpmAttestationCertsDescriptorServerMsgHandle) ExtractResourceName(msg proto.Message) gotenresource.Name {
	typedMsg := msg.(*WatchTpmAttestationCertsResponse)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractResourceName(*WatchTpmAttestationCertsResponse) *tpm_attestation_cert.Name
	})
	if ok {
		return override.OverrideExtractResourceName(typedMsg)
	}
	return nil
}

func (h *WatchTpmAttestationCertsDescriptorServerMsgHandle) ExtractResourceNames(msg proto.Message) gotenresource.NameList {
	typedMsg := msg.(*WatchTpmAttestationCertsResponse)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractResourceNames(*WatchTpmAttestationCertsResponse) []*tpm_attestation_cert.Name
	})
	if ok {
		return tpm_attestation_cert.TpmAttestationCertNameList(override.OverrideExtractResourceNames(typedMsg))
	}
	{
		if resChanges := typedMsg.GetTpmAttestationCertChanges(); len(resChanges) > 0 {
			list := make(tpm_attestation_cert.TpmAttestationCertNameList, 0, len(resChanges))
			for _, resChange := range resChanges {
				switch tResChange := resChange.ChangeType.(type) {
				case *tpm_attestation_cert.TpmAttestationCertChange_Added_:
					list = append(list, tResChange.Added.GetTpmAttestationCert().GetName())
				case *tpm_attestation_cert.TpmAttestationCertChange_Modified_:
					list = append(list, tResChange.Modified.GetName())
				case *tpm_attestation_cert.TpmAttestationCertChange_Removed_:
					list = append(list, tResChange.Removed.GetName())
				case *tpm_attestation_cert.TpmAttestationCertChange_Current_:
					list = append(list, tResChange.Current.GetTpmAttestationCert().GetName())
				}
			}
			return list
		}
	}
	return (tpm_attestation_cert.TpmAttestationCertNameList)(nil)
}

func (h *WatchTpmAttestationCertsDescriptorServerMsgHandle) ExtractCollectionName(msg proto.Message) gotenresource.Name {
	typedMsg := msg.(*WatchTpmAttestationCertsResponse)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractCollectionName(*WatchTpmAttestationCertsResponse) *tpm_attestation_cert.ParentName
	})
	if ok {
		return override.OverrideExtractCollectionName(typedMsg)
	}
	return nil
}

func (h *WatchTpmAttestationCertsDescriptorServerMsgHandle) ExtractResourceBody(msg proto.Message) gotenresource.Resource {
	typedMsg := msg.(*WatchTpmAttestationCertsResponse)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractResourceBody(*WatchTpmAttestationCertsResponse) *tpm_attestation_cert.TpmAttestationCert
	})
	if ok {
		return override.OverrideExtractResourceBody(typedMsg)
	}
	return nil
}

func (h *WatchTpmAttestationCertsDescriptorServerMsgHandle) ExtractResourceBodies(msg proto.Message) gotenresource.ResourceList {
	typedMsg := msg.(*WatchTpmAttestationCertsResponse)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractResourceBodies(*WatchTpmAttestationCertsResponse) []*tpm_attestation_cert.TpmAttestationCert
	})
	if ok {
		return tpm_attestation_cert.TpmAttestationCertList(override.OverrideExtractResourceBodies(typedMsg))
	}
	{
		if resChanges := typedMsg.GetTpmAttestationCertChanges(); len(resChanges) > 0 {
			list := make(tpm_attestation_cert.TpmAttestationCertList, 0, len(resChanges))
			for _, resChange := range resChanges {
				switch tResChange := resChange.ChangeType.(type) {
				case *tpm_attestation_cert.TpmAttestationCertChange_Added_:
					list = append(list, tResChange.Added.GetTpmAttestationCert())
				case *tpm_attestation_cert.TpmAttestationCertChange_Modified_:
					list = append(list, tResChange.Modified.GetTpmAttestationCert())
				case *tpm_attestation_cert.TpmAttestationCertChange_Current_:
					list = append(list, tResChange.Current.GetTpmAttestationCert())
				}
			}
			return list
		}
	}
	return (tpm_attestation_cert.TpmAttestationCertList)(nil)
}

func GetWatchTpmAttestationCertsDescriptor() *WatchTpmAttestationCertsDescriptor {
	return watchTpmAttestationCertsDescriptor
}

type CreateTpmAttestationCertDescriptor struct{}

type CreateTpmAttestationCertDescriptorClientMsgHandle struct{}

type CreateTpmAttestationCertDescriptorServerMsgHandle struct{}

func (d *CreateTpmAttestationCertDescriptor) NewEmptyClientMsg() proto.Message {
	return &CreateTpmAttestationCertRequest{}
}

func (d *CreateTpmAttestationCertDescriptor) NewEmptyServerMsg() proto.Message {
	return &tpm_attestation_cert.TpmAttestationCert{}
}

func (d *CreateTpmAttestationCertDescriptor) IsUnary() bool {
	return true
}

func (d *CreateTpmAttestationCertDescriptor) IsClientStream() bool {
	return false
}

func (d *CreateTpmAttestationCertDescriptor) IsServerStream() bool {
	return false
}

func (d *CreateTpmAttestationCertDescriptor) IsCollection() bool {
	return true
}

func (d *CreateTpmAttestationCertDescriptor) IsPlural() bool {
	return false
}

func (d *CreateTpmAttestationCertDescriptor) HasResource() bool {
	return true
}

func (d *CreateTpmAttestationCertDescriptor) RequestHasResourceBody() bool {
	return true
}

func (d *CreateTpmAttestationCertDescriptor) GetVerb() string {
	return "create"
}

func (d *CreateTpmAttestationCertDescriptor) GetMethodName() string {
	return "CreateTpmAttestationCert"
}

func (d *CreateTpmAttestationCertDescriptor) GetFullMethodName() string {
	return "/ntt.devices.v1.TpmAttestationCertService/CreateTpmAttestationCert"
}

func (d *CreateTpmAttestationCertDescriptor) GetProtoPkgName() string {
	return "ntt.devices.v1"
}

func (d *CreateTpmAttestationCertDescriptor) GetApiName() string {
	return "TpmAttestationCertService"
}

func (d *CreateTpmAttestationCertDescriptor) GetServiceDomain() string {
	return "devices.edgelq.com"
}

func (d *CreateTpmAttestationCertDescriptor) GetServiceVersion() string {
	return "v1"
}

func (d *CreateTpmAttestationCertDescriptor) GetApiDescriptor() gotenclient.ApiDescriptor {
	return tpmAttestationCertServiceDescriptor
}

func (d *CreateTpmAttestationCertDescriptor) GetResourceDescriptor() gotenresource.Descriptor {
	return tpm_attestation_cert.GetDescriptor()
}

func (d *CreateTpmAttestationCertDescriptor) GetClientMsgReflectHandle() gotenclient.MethodMsgHandle {
	return &CreateTpmAttestationCertDescriptorClientMsgHandle{}
}

func (d *CreateTpmAttestationCertDescriptor) GetServerMsgReflectHandle() gotenclient.MethodMsgHandle {
	return &CreateTpmAttestationCertDescriptorServerMsgHandle{}
}

func (h *CreateTpmAttestationCertDescriptorClientMsgHandle) ExtractResourceName(msg proto.Message) gotenresource.Name {
	typedMsg := msg.(*CreateTpmAttestationCertRequest)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractResourceName(*CreateTpmAttestationCertRequest) *tpm_attestation_cert.Name
	})
	if ok {
		return override.OverrideExtractResourceName(typedMsg)
	}
	{
		res := typedMsg.GetTpmAttestationCert()
		if name := res.GetName(); name != nil {
			return name
		}
	}
	return (*tpm_attestation_cert.Name)(nil)
}

func (h *CreateTpmAttestationCertDescriptorClientMsgHandle) ExtractResourceNames(msg proto.Message) gotenresource.NameList {
	typedMsg := msg.(*CreateTpmAttestationCertRequest)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractResourceNames(*CreateTpmAttestationCertRequest) []*tpm_attestation_cert.Name
	})
	if ok {
		return tpm_attestation_cert.TpmAttestationCertNameList(override.OverrideExtractResourceNames(typedMsg))
	}
	return nil
}

func (h *CreateTpmAttestationCertDescriptorClientMsgHandle) ExtractCollectionName(msg proto.Message) gotenresource.Name {
	typedMsg := msg.(*CreateTpmAttestationCertRequest)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractCollectionName(*CreateTpmAttestationCertRequest) *tpm_attestation_cert.ParentName
	})
	if ok {
		return override.OverrideExtractCollectionName(typedMsg)
	}
	{
		if parentName := typedMsg.GetParent(); parentName != nil {
			return parentName
		}
	}
	return (*tpm_attestation_cert.ParentName)(nil)
}

func (h *CreateTpmAttestationCertDescriptorClientMsgHandle) ExtractResourceBody(msg proto.Message) gotenresource.Resource {
	typedMsg := msg.(*CreateTpmAttestationCertRequest)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractResourceBody(*CreateTpmAttestationCertRequest) *tpm_attestation_cert.TpmAttestationCert
	})
	if ok {
		return override.OverrideExtractResourceBody(typedMsg)
	}
	{
		return typedMsg.GetTpmAttestationCert()
	}
	return (*tpm_attestation_cert.TpmAttestationCert)(nil)
}

func (h *CreateTpmAttestationCertDescriptorClientMsgHandle) ExtractResourceBodies(msg proto.Message) gotenresource.ResourceList {
	typedMsg := msg.(*CreateTpmAttestationCertRequest)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractResourceBodies(*CreateTpmAttestationCertRequest) []*tpm_attestation_cert.TpmAttestationCert
	})
	if ok {
		return tpm_attestation_cert.TpmAttestationCertList(override.OverrideExtractResourceBodies(typedMsg))
	}
	return nil
}

func (h *CreateTpmAttestationCertDescriptorServerMsgHandle) ExtractResourceName(msg proto.Message) gotenresource.Name {
	typedMsg := msg.(*tpm_attestation_cert.TpmAttestationCert)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractResourceName(*tpm_attestation_cert.TpmAttestationCert) *tpm_attestation_cert.Name
	})
	if ok {
		return override.OverrideExtractResourceName(typedMsg)
	}
	{
		if name := typedMsg.GetName(); name != nil {
			return name
		}
	}
	return (*tpm_attestation_cert.Name)(nil)
}

func (h *CreateTpmAttestationCertDescriptorServerMsgHandle) ExtractResourceNames(msg proto.Message) gotenresource.NameList {
	typedMsg := msg.(*tpm_attestation_cert.TpmAttestationCert)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractResourceNames(*tpm_attestation_cert.TpmAttestationCert) []*tpm_attestation_cert.Name
	})
	if ok {
		return tpm_attestation_cert.TpmAttestationCertNameList(override.OverrideExtractResourceNames(typedMsg))
	}
	return nil
}

func (h *CreateTpmAttestationCertDescriptorServerMsgHandle) ExtractCollectionName(msg proto.Message) gotenresource.Name {
	typedMsg := msg.(*tpm_attestation_cert.TpmAttestationCert)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractCollectionName(*tpm_attestation_cert.TpmAttestationCert) *tpm_attestation_cert.ParentName
	})
	if ok {
		return override.OverrideExtractCollectionName(typedMsg)
	}
	return nil
}

func (h *CreateTpmAttestationCertDescriptorServerMsgHandle) ExtractResourceBody(msg proto.Message) gotenresource.Resource {
	return msg.(*tpm_attestation_cert.TpmAttestationCert)
}

func (h *CreateTpmAttestationCertDescriptorServerMsgHandle) ExtractResourceBodies(msg proto.Message) gotenresource.ResourceList {
	typedMsg := msg.(*tpm_attestation_cert.TpmAttestationCert)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractResourceBodies(*tpm_attestation_cert.TpmAttestationCert) []*tpm_attestation_cert.TpmAttestationCert
	})
	if ok {
		return tpm_attestation_cert.TpmAttestationCertList(override.OverrideExtractResourceBodies(typedMsg))
	}
	return nil
}

func GetCreateTpmAttestationCertDescriptor() *CreateTpmAttestationCertDescriptor {
	return createTpmAttestationCertDescriptor
}

type UpdateTpmAttestationCertDescriptor struct{}

type UpdateTpmAttestationCertDescriptorClientMsgHandle struct{}

type UpdateTpmAttestationCertDescriptorServerMsgHandle struct{}

func (d *UpdateTpmAttestationCertDescriptor) NewEmptyClientMsg() proto.Message {
	return &UpdateTpmAttestationCertRequest{}
}

func (d *UpdateTpmAttestationCertDescriptor) NewEmptyServerMsg() proto.Message {
	return &tpm_attestation_cert.TpmAttestationCert{}
}

func (d *UpdateTpmAttestationCertDescriptor) IsUnary() bool {
	return true
}

func (d *UpdateTpmAttestationCertDescriptor) IsClientStream() bool {
	return false
}

func (d *UpdateTpmAttestationCertDescriptor) IsServerStream() bool {
	return false
}

func (d *UpdateTpmAttestationCertDescriptor) IsCollection() bool {
	return false
}

func (d *UpdateTpmAttestationCertDescriptor) IsPlural() bool {
	return false
}

func (d *UpdateTpmAttestationCertDescriptor) HasResource() bool {
	return true
}

func (d *UpdateTpmAttestationCertDescriptor) RequestHasResourceBody() bool {
	return true
}

func (d *UpdateTpmAttestationCertDescriptor) GetVerb() string {
	return "update"
}

func (d *UpdateTpmAttestationCertDescriptor) GetMethodName() string {
	return "UpdateTpmAttestationCert"
}

func (d *UpdateTpmAttestationCertDescriptor) GetFullMethodName() string {
	return "/ntt.devices.v1.TpmAttestationCertService/UpdateTpmAttestationCert"
}

func (d *UpdateTpmAttestationCertDescriptor) GetProtoPkgName() string {
	return "ntt.devices.v1"
}

func (d *UpdateTpmAttestationCertDescriptor) GetApiName() string {
	return "TpmAttestationCertService"
}

func (d *UpdateTpmAttestationCertDescriptor) GetServiceDomain() string {
	return "devices.edgelq.com"
}

func (d *UpdateTpmAttestationCertDescriptor) GetServiceVersion() string {
	return "v1"
}

func (d *UpdateTpmAttestationCertDescriptor) GetApiDescriptor() gotenclient.ApiDescriptor {
	return tpmAttestationCertServiceDescriptor
}

func (d *UpdateTpmAttestationCertDescriptor) GetResourceDescriptor() gotenresource.Descriptor {
	return tpm_attestation_cert.GetDescriptor()
}

func (d *UpdateTpmAttestationCertDescriptor) GetClientMsgReflectHandle() gotenclient.MethodMsgHandle {
	return &UpdateTpmAttestationCertDescriptorClientMsgHandle{}
}

func (d *UpdateTpmAttestationCertDescriptor) GetServerMsgReflectHandle() gotenclient.MethodMsgHandle {
	return &UpdateTpmAttestationCertDescriptorServerMsgHandle{}
}

func (h *UpdateTpmAttestationCertDescriptorClientMsgHandle) ExtractResourceName(msg proto.Message) gotenresource.Name {
	typedMsg := msg.(*UpdateTpmAttestationCertRequest)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractResourceName(*UpdateTpmAttestationCertRequest) *tpm_attestation_cert.Name
	})
	if ok {
		return override.OverrideExtractResourceName(typedMsg)
	}
	{
		res := typedMsg.GetTpmAttestationCert()
		if name := res.GetName(); name != nil {
			return name
		}
	}
	return (*tpm_attestation_cert.Name)(nil)
}

func (h *UpdateTpmAttestationCertDescriptorClientMsgHandle) ExtractResourceNames(msg proto.Message) gotenresource.NameList {
	typedMsg := msg.(*UpdateTpmAttestationCertRequest)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractResourceNames(*UpdateTpmAttestationCertRequest) []*tpm_attestation_cert.Name
	})
	if ok {
		return tpm_attestation_cert.TpmAttestationCertNameList(override.OverrideExtractResourceNames(typedMsg))
	}
	return nil
}

func (h *UpdateTpmAttestationCertDescriptorClientMsgHandle) ExtractCollectionName(msg proto.Message) gotenresource.Name {
	typedMsg := msg.(*UpdateTpmAttestationCertRequest)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractCollectionName(*UpdateTpmAttestationCertRequest) *tpm_attestation_cert.ParentName
	})
	if ok {
		return override.OverrideExtractCollectionName(typedMsg)
	}
	return nil
}

func (h *UpdateTpmAttestationCertDescriptorClientMsgHandle) ExtractResourceBody(msg proto.Message) gotenresource.Resource {
	typedMsg := msg.(*UpdateTpmAttestationCertRequest)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractResourceBody(*UpdateTpmAttestationCertRequest) *tpm_attestation_cert.TpmAttestationCert
	})
	if ok {
		return override.OverrideExtractResourceBody(typedMsg)
	}
	{
		return typedMsg.GetTpmAttestationCert()
	}
	return (*tpm_attestation_cert.TpmAttestationCert)(nil)
}

func (h *UpdateTpmAttestationCertDescriptorClientMsgHandle) ExtractResourceBodies(msg proto.Message) gotenresource.ResourceList {
	typedMsg := msg.(*UpdateTpmAttestationCertRequest)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractResourceBodies(*UpdateTpmAttestationCertRequest) []*tpm_attestation_cert.TpmAttestationCert
	})
	if ok {
		return tpm_attestation_cert.TpmAttestationCertList(override.OverrideExtractResourceBodies(typedMsg))
	}
	return nil
}

func (h *UpdateTpmAttestationCertDescriptorServerMsgHandle) ExtractResourceName(msg proto.Message) gotenresource.Name {
	typedMsg := msg.(*tpm_attestation_cert.TpmAttestationCert)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractResourceName(*tpm_attestation_cert.TpmAttestationCert) *tpm_attestation_cert.Name
	})
	if ok {
		return override.OverrideExtractResourceName(typedMsg)
	}
	{
		if name := typedMsg.GetName(); name != nil {
			return name
		}
	}
	return (*tpm_attestation_cert.Name)(nil)
}

func (h *UpdateTpmAttestationCertDescriptorServerMsgHandle) ExtractResourceNames(msg proto.Message) gotenresource.NameList {
	typedMsg := msg.(*tpm_attestation_cert.TpmAttestationCert)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractResourceNames(*tpm_attestation_cert.TpmAttestationCert) []*tpm_attestation_cert.Name
	})
	if ok {
		return tpm_attestation_cert.TpmAttestationCertNameList(override.OverrideExtractResourceNames(typedMsg))
	}
	return nil
}

func (h *UpdateTpmAttestationCertDescriptorServerMsgHandle) ExtractCollectionName(msg proto.Message) gotenresource.Name {
	typedMsg := msg.(*tpm_attestation_cert.TpmAttestationCert)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractCollectionName(*tpm_attestation_cert.TpmAttestationCert) *tpm_attestation_cert.ParentName
	})
	if ok {
		return override.OverrideExtractCollectionName(typedMsg)
	}
	return nil
}

func (h *UpdateTpmAttestationCertDescriptorServerMsgHandle) ExtractResourceBody(msg proto.Message) gotenresource.Resource {
	return msg.(*tpm_attestation_cert.TpmAttestationCert)
}

func (h *UpdateTpmAttestationCertDescriptorServerMsgHandle) ExtractResourceBodies(msg proto.Message) gotenresource.ResourceList {
	typedMsg := msg.(*tpm_attestation_cert.TpmAttestationCert)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractResourceBodies(*tpm_attestation_cert.TpmAttestationCert) []*tpm_attestation_cert.TpmAttestationCert
	})
	if ok {
		return tpm_attestation_cert.TpmAttestationCertList(override.OverrideExtractResourceBodies(typedMsg))
	}
	return nil
}

func GetUpdateTpmAttestationCertDescriptor() *UpdateTpmAttestationCertDescriptor {
	return updateTpmAttestationCertDescriptor
}

type DeleteTpmAttestationCertDescriptor struct{}

type DeleteTpmAttestationCertDescriptorClientMsgHandle struct{}

type DeleteTpmAttestationCertDescriptorServerMsgHandle struct{}

func (d *DeleteTpmAttestationCertDescriptor) NewEmptyClientMsg() proto.Message {
	return &DeleteTpmAttestationCertRequest{}
}

func (d *DeleteTpmAttestationCertDescriptor) NewEmptyServerMsg() proto.Message {
	return &emptypb.Empty{}
}

func (d *DeleteTpmAttestationCertDescriptor) IsUnary() bool {
	return true
}

func (d *DeleteTpmAttestationCertDescriptor) IsClientStream() bool {
	return false
}

func (d *DeleteTpmAttestationCertDescriptor) IsServerStream() bool {
	return false
}

func (d *DeleteTpmAttestationCertDescriptor) IsCollection() bool {
	return false
}

func (d *DeleteTpmAttestationCertDescriptor) IsPlural() bool {
	return false
}

func (d *DeleteTpmAttestationCertDescriptor) HasResource() bool {
	return true
}

func (d *DeleteTpmAttestationCertDescriptor) RequestHasResourceBody() bool {
	return false
}

func (d *DeleteTpmAttestationCertDescriptor) GetVerb() string {
	return "delete"
}

func (d *DeleteTpmAttestationCertDescriptor) GetMethodName() string {
	return "DeleteTpmAttestationCert"
}

func (d *DeleteTpmAttestationCertDescriptor) GetFullMethodName() string {
	return "/ntt.devices.v1.TpmAttestationCertService/DeleteTpmAttestationCert"
}

func (d *DeleteTpmAttestationCertDescriptor) GetProtoPkgName() string {
	return "ntt.devices.v1"
}

func (d *DeleteTpmAttestationCertDescriptor) GetApiName() string {
	return "TpmAttestationCertService"
}

func (d *DeleteTpmAttestationCertDescriptor) GetServiceDomain() string {
	return "devices.edgelq.com"
}

func (d *DeleteTpmAttestationCertDescriptor) GetServiceVersion() string {
	return "v1"
}

func (d *DeleteTpmAttestationCertDescriptor) GetApiDescriptor() gotenclient.ApiDescriptor {
	return tpmAttestationCertServiceDescriptor
}

func (d *DeleteTpmAttestationCertDescriptor) GetResourceDescriptor() gotenresource.Descriptor {
	return tpm_attestation_cert.GetDescriptor()
}

func (d *DeleteTpmAttestationCertDescriptor) GetClientMsgReflectHandle() gotenclient.MethodMsgHandle {
	return &DeleteTpmAttestationCertDescriptorClientMsgHandle{}
}

func (d *DeleteTpmAttestationCertDescriptor) GetServerMsgReflectHandle() gotenclient.MethodMsgHandle {
	return &DeleteTpmAttestationCertDescriptorServerMsgHandle{}
}

func (h *DeleteTpmAttestationCertDescriptorClientMsgHandle) ExtractResourceName(msg proto.Message) gotenresource.Name {
	typedMsg := msg.(*DeleteTpmAttestationCertRequest)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractResourceName(*DeleteTpmAttestationCertRequest) *tpm_attestation_cert.Name
	})
	if ok {
		return override.OverrideExtractResourceName(typedMsg)
	}
	{
		if name := typedMsg.GetName(); name != nil {
			return name
		}
	}
	return (*tpm_attestation_cert.Name)(nil)
}

func (h *DeleteTpmAttestationCertDescriptorClientMsgHandle) ExtractResourceNames(msg proto.Message) gotenresource.NameList {
	typedMsg := msg.(*DeleteTpmAttestationCertRequest)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractResourceNames(*DeleteTpmAttestationCertRequest) []*tpm_attestation_cert.Name
	})
	if ok {
		return tpm_attestation_cert.TpmAttestationCertNameList(override.OverrideExtractResourceNames(typedMsg))
	}
	return nil
}

func (h *DeleteTpmAttestationCertDescriptorClientMsgHandle) ExtractCollectionName(msg proto.Message) gotenresource.Name {
	typedMsg := msg.(*DeleteTpmAttestationCertRequest)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractCollectionName(*DeleteTpmAttestationCertRequest) *tpm_attestation_cert.ParentName
	})
	if ok {
		return override.OverrideExtractCollectionName(typedMsg)
	}
	return nil
}

func (h *DeleteTpmAttestationCertDescriptorClientMsgHandle) ExtractResourceBody(msg proto.Message) gotenresource.Resource {
	typedMsg := msg.(*DeleteTpmAttestationCertRequest)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractResourceBody(*DeleteTpmAttestationCertRequest) *tpm_attestation_cert.TpmAttestationCert
	})
	if ok {
		return override.OverrideExtractResourceBody(typedMsg)
	}
	return nil
}

func (h *DeleteTpmAttestationCertDescriptorClientMsgHandle) ExtractResourceBodies(msg proto.Message) gotenresource.ResourceList {
	typedMsg := msg.(*DeleteTpmAttestationCertRequest)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractResourceBodies(*DeleteTpmAttestationCertRequest) []*tpm_attestation_cert.TpmAttestationCert
	})
	if ok {
		return tpm_attestation_cert.TpmAttestationCertList(override.OverrideExtractResourceBodies(typedMsg))
	}
	return nil
}

func (h *DeleteTpmAttestationCertDescriptorServerMsgHandle) ExtractResourceName(msg proto.Message) gotenresource.Name {
	typedMsg := msg.(*emptypb.Empty)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractResourceName(*emptypb.Empty) *tpm_attestation_cert.Name
	})
	if ok {
		return override.OverrideExtractResourceName(typedMsg)
	}
	return nil
}

func (h *DeleteTpmAttestationCertDescriptorServerMsgHandle) ExtractResourceNames(msg proto.Message) gotenresource.NameList {
	typedMsg := msg.(*emptypb.Empty)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractResourceNames(*emptypb.Empty) []*tpm_attestation_cert.Name
	})
	if ok {
		return tpm_attestation_cert.TpmAttestationCertNameList(override.OverrideExtractResourceNames(typedMsg))
	}
	return nil
}

func (h *DeleteTpmAttestationCertDescriptorServerMsgHandle) ExtractCollectionName(msg proto.Message) gotenresource.Name {
	typedMsg := msg.(*emptypb.Empty)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractCollectionName(*emptypb.Empty) *tpm_attestation_cert.ParentName
	})
	if ok {
		return override.OverrideExtractCollectionName(typedMsg)
	}
	return nil
}

func (h *DeleteTpmAttestationCertDescriptorServerMsgHandle) ExtractResourceBody(msg proto.Message) gotenresource.Resource {
	typedMsg := msg.(*emptypb.Empty)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractResourceBody(*emptypb.Empty) *tpm_attestation_cert.TpmAttestationCert
	})
	if ok {
		return override.OverrideExtractResourceBody(typedMsg)
	}
	return nil
}

func (h *DeleteTpmAttestationCertDescriptorServerMsgHandle) ExtractResourceBodies(msg proto.Message) gotenresource.ResourceList {
	typedMsg := msg.(*emptypb.Empty)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractResourceBodies(*emptypb.Empty) []*tpm_attestation_cert.TpmAttestationCert
	})
	if ok {
		return tpm_attestation_cert.TpmAttestationCertList(override.OverrideExtractResourceBodies(typedMsg))
	}
	return nil
}

func GetDeleteTpmAttestationCertDescriptor() *DeleteTpmAttestationCertDescriptor {
	return deleteTpmAttestationCertDescriptor
}

type TpmAttestationCertServiceDescriptor struct{}

func (d *TpmAttestationCertServiceDescriptor) AllMethodDescriptors() []gotenclient.MethodDescriptor {
	return []gotenclient.MethodDescriptor{
		getTpmAttestationCertDescriptor,
		batchGetTpmAttestationCertsDescriptor,
		listTpmAttestationCertsDescriptor,
		watchTpmAttestationCertDescriptor,
		watchTpmAttestationCertsDescriptor,
		createTpmAttestationCertDescriptor,
		updateTpmAttestationCertDescriptor,
		deleteTpmAttestationCertDescriptor,
	}
}

func (d *TpmAttestationCertServiceDescriptor) GetFullAPIName() string {
	return "/ntt.devices.v1.TpmAttestationCertService"
}

func (d *TpmAttestationCertServiceDescriptor) GetProtoPkgName() string {
	return "ntt.devices.v1"
}

func (d *TpmAttestationCertServiceDescriptor) GetApiName() string {
	return "TpmAttestationCertService"
}

func (d *TpmAttestationCertServiceDescriptor) GetServiceDomain() string {
	return "devices.edgelq.com"
}

func (d *TpmAttestationCertServiceDescriptor) GetServiceVersion() string {
	return "v1"
}

func GetTpmAttestationCertServiceDescriptor() *TpmAttestationCertServiceDescriptor {
	return tpmAttestationCertServiceDescriptor
}

func initDescriptors() {
	tpmAttestationCertServiceDescriptor = &TpmAttestationCertServiceDescriptor{}
	getTpmAttestationCertDescriptor = &GetTpmAttestationCertDescriptor{}
	batchGetTpmAttestationCertsDescriptor = &BatchGetTpmAttestationCertsDescriptor{}
	listTpmAttestationCertsDescriptor = &ListTpmAttestationCertsDescriptor{}
	watchTpmAttestationCertDescriptor = &WatchTpmAttestationCertDescriptor{}
	watchTpmAttestationCertsDescriptor = &WatchTpmAttestationCertsDescriptor{}
	createTpmAttestationCertDescriptor = &CreateTpmAttestationCertDescriptor{}
	updateTpmAttestationCertDescriptor = &UpdateTpmAttestationCertDescriptor{}
	deleteTpmAttestationCertDescriptor = &DeleteTpmAttestationCertDescriptor{}
	gotenclient.GetRegistry().RegisterApiDescriptor(tpmAttestationCertServiceDescriptor)
	gotenclient.GetRegistry().RegisterMethodDescriptor(getTpmAttestationCertDescriptor)
	gotenclient.GetRegistry().RegisterMethodDescriptor(batchGetTpmAttestationCertsDescriptor)
	gotenclient.GetRegistry().RegisterMethodDescriptor(listTpmAttestationCertsDescriptor)
	gotenclient.GetRegistry().RegisterMethodDescriptor(watchTpmAttestationCertDescriptor)
	gotenclient.GetRegistry().RegisterMethodDescriptor(watchTpmAttestationCertsDescriptor)
	gotenclient.GetRegistry().RegisterMethodDescriptor(createTpmAttestationCertDescriptor)
	gotenclient.GetRegistry().RegisterMethodDescriptor(updateTpmAttestationCertDescriptor)
	gotenclient.GetRegistry().RegisterMethodDescriptor(deleteTpmAttestationCertDescriptor)
}

func init() {
	if !descriptorsInitialized {
		initDescriptors()
		descriptorsInitialized = true
	}
}
