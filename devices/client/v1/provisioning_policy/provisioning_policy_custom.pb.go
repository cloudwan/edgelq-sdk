// Code generated by protoc-gen-goten-go
// File: edgelq/devices/proto/v1/provisioning_policy_custom.proto
// DO NOT EDIT!!!

package provisioning_policy_client

import (
	"fmt"
	"reflect"
	"sync"

	"google.golang.org/protobuf/encoding/protojson"
	"google.golang.org/protobuf/proto"
	preflect "google.golang.org/protobuf/reflect/protoreflect"
	"google.golang.org/protobuf/runtime/protoimpl"
)

// proto imports
import (
	api "github.com/cloudwan/edgelq-sdk/common/api"
	device "github.com/cloudwan/edgelq-sdk/devices/resources/v1/device"
	project "github.com/cloudwan/edgelq-sdk/devices/resources/v1/project"
	provisioning_approval_request "github.com/cloudwan/edgelq-sdk/devices/resources/v1/provisioning_approval_request"
	provisioning_policy "github.com/cloudwan/edgelq-sdk/devices/resources/v1/provisioning_policy"
)

// Reference imports to suppress errors if they are not otherwise used.
var (
	_ = fmt.Errorf
	_ = reflect.Method{}
	_ = sync.Once{}

	_ = protojson.MarshalOptions{}
	_ = proto.MarshalOptions{}
	_ = preflect.Value{}
	_ = protoimpl.DescBuilder{}
)

// make sure we're using proto imports
var (
	_ = &api.Account{}
	_ = &device.Device{}
	_ = &project.Project{}
	_ = &provisioning_approval_request.ProvisioningApprovalRequest{}
	_ = &provisioning_policy.ProvisioningPolicy{}
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Request message for method
// [ProvisionServiceAccountToProvisioningPolicy][ntt.devices.v1.ProvisionServiceAccountToProvisioningPolicy]
type ProvisionServiceAccountToProvisioningPolicyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
	// Name of ntt.devices.v1.ProvisioningPolicy
	Name *provisioning_policy.Name `protobuf:"bytes,1,opt,customtype=Name,name=name,proto3" json:"name,omitempty" firestore:"name"`
}

func (m *ProvisionServiceAccountToProvisioningPolicyRequest) Reset() {
	*m = ProvisionServiceAccountToProvisioningPolicyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &edgelq_devices_proto_v1_provisioning_policy_custom_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(m))
		ms.StoreMessageInfo(mi)
	}
}

func (m *ProvisionServiceAccountToProvisioningPolicyRequest) String() string {
	return protoimpl.X.MessageStringOf(m)
}

func (*ProvisionServiceAccountToProvisioningPolicyRequest) ProtoMessage() {}

func (m *ProvisionServiceAccountToProvisioningPolicyRequest) ProtoReflect() preflect.Message {
	mi := &edgelq_devices_proto_v1_provisioning_policy_custom_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && m != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(m))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(m)
}

func (*ProvisionServiceAccountToProvisioningPolicyRequest) GotenMessage() {}

// Deprecated, Use ProvisionServiceAccountToProvisioningPolicyRequest.ProtoReflect.Descriptor instead.
func (*ProvisionServiceAccountToProvisioningPolicyRequest) Descriptor() ([]byte, []int) {
	return edgelq_devices_proto_v1_provisioning_policy_custom_proto_rawDescGZIP(), []int{0}
}

func (m *ProvisionServiceAccountToProvisioningPolicyRequest) Unmarshal(b []byte) error {
	return proto.Unmarshal(b, m)
}

func (m *ProvisionServiceAccountToProvisioningPolicyRequest) Marshal() ([]byte, error) {
	return proto.Marshal(m)
}

func (m *ProvisionServiceAccountToProvisioningPolicyRequest) MarshalJSON() ([]byte, error) {
	return protojson.MarshalOptions{}.Marshal(m)
}

func (m *ProvisionServiceAccountToProvisioningPolicyRequest) UnmarshalJSON(data []byte) error {
	return protojson.Unmarshal(data, m)
}

func (m *ProvisionServiceAccountToProvisioningPolicyRequest) GetName() *provisioning_policy.Name {
	if m != nil {
		return m.Name
	}
	return nil
}

func (m *ProvisionServiceAccountToProvisioningPolicyRequest) SetName(fv *provisioning_policy.Name) {
	if m == nil {
		panic(fmt.Errorf("can't set %s on nil %s", "Name", "ProvisionServiceAccountToProvisioningPolicyRequest"))
	}
	m.Name = fv
}

// Response message for method
// [ProvisionServiceAccountToProvisioningPolicy][ntt.devices.v1.ProvisionServiceAccountToProvisioningPolicy]
type ProvisionServiceAccountToProvisioningPolicyResponse struct {
	state          protoimpl.MessageState
	sizeCache      protoimpl.SizeCache
	unknownFields  protoimpl.UnknownFields
	ServiceAccount *api.ServiceAccount `protobuf:"bytes,1,opt,name=service_account,json=serviceAccount,proto3" json:"service_account,omitempty" firestore:"serviceAccount"`
}

func (m *ProvisionServiceAccountToProvisioningPolicyResponse) Reset() {
	*m = ProvisionServiceAccountToProvisioningPolicyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &edgelq_devices_proto_v1_provisioning_policy_custom_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(m))
		ms.StoreMessageInfo(mi)
	}
}

func (m *ProvisionServiceAccountToProvisioningPolicyResponse) String() string {
	return protoimpl.X.MessageStringOf(m)
}

func (*ProvisionServiceAccountToProvisioningPolicyResponse) ProtoMessage() {}

func (m *ProvisionServiceAccountToProvisioningPolicyResponse) ProtoReflect() preflect.Message {
	mi := &edgelq_devices_proto_v1_provisioning_policy_custom_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && m != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(m))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(m)
}

func (*ProvisionServiceAccountToProvisioningPolicyResponse) GotenMessage() {}

// Deprecated, Use ProvisionServiceAccountToProvisioningPolicyResponse.ProtoReflect.Descriptor instead.
func (*ProvisionServiceAccountToProvisioningPolicyResponse) Descriptor() ([]byte, []int) {
	return edgelq_devices_proto_v1_provisioning_policy_custom_proto_rawDescGZIP(), []int{1}
}

func (m *ProvisionServiceAccountToProvisioningPolicyResponse) Unmarshal(b []byte) error {
	return proto.Unmarshal(b, m)
}

func (m *ProvisionServiceAccountToProvisioningPolicyResponse) Marshal() ([]byte, error) {
	return proto.Marshal(m)
}

func (m *ProvisionServiceAccountToProvisioningPolicyResponse) MarshalJSON() ([]byte, error) {
	return protojson.MarshalOptions{}.Marshal(m)
}

func (m *ProvisionServiceAccountToProvisioningPolicyResponse) UnmarshalJSON(data []byte) error {
	return protojson.Unmarshal(data, m)
}

func (m *ProvisionServiceAccountToProvisioningPolicyResponse) GetServiceAccount() *api.ServiceAccount {
	if m != nil {
		return m.ServiceAccount
	}
	return nil
}

func (m *ProvisionServiceAccountToProvisioningPolicyResponse) SetServiceAccount(fv *api.ServiceAccount) {
	if m == nil {
		panic(fmt.Errorf("can't set %s on nil %s", "ServiceAccount", "ProvisionServiceAccountToProvisioningPolicyResponse"))
	}
	m.ServiceAccount = fv
}

// Request message for method
// [RemoveServiceAccountFromProvisioningPolicy][ntt.devices.v1.RemoveServiceAccountFromProvisioningPolicy]
type RemoveServiceAccountFromProvisioningPolicyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
	// Name of ntt.devices.v1.ProvisioningPolicy
	Name *provisioning_policy.Name `protobuf:"bytes,1,opt,customtype=Name,name=name,proto3" json:"name,omitempty" firestore:"name"`
}

func (m *RemoveServiceAccountFromProvisioningPolicyRequest) Reset() {
	*m = RemoveServiceAccountFromProvisioningPolicyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &edgelq_devices_proto_v1_provisioning_policy_custom_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(m))
		ms.StoreMessageInfo(mi)
	}
}

func (m *RemoveServiceAccountFromProvisioningPolicyRequest) String() string {
	return protoimpl.X.MessageStringOf(m)
}

func (*RemoveServiceAccountFromProvisioningPolicyRequest) ProtoMessage() {}

func (m *RemoveServiceAccountFromProvisioningPolicyRequest) ProtoReflect() preflect.Message {
	mi := &edgelq_devices_proto_v1_provisioning_policy_custom_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && m != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(m))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(m)
}

func (*RemoveServiceAccountFromProvisioningPolicyRequest) GotenMessage() {}

// Deprecated, Use RemoveServiceAccountFromProvisioningPolicyRequest.ProtoReflect.Descriptor instead.
func (*RemoveServiceAccountFromProvisioningPolicyRequest) Descriptor() ([]byte, []int) {
	return edgelq_devices_proto_v1_provisioning_policy_custom_proto_rawDescGZIP(), []int{2}
}

func (m *RemoveServiceAccountFromProvisioningPolicyRequest) Unmarshal(b []byte) error {
	return proto.Unmarshal(b, m)
}

func (m *RemoveServiceAccountFromProvisioningPolicyRequest) Marshal() ([]byte, error) {
	return proto.Marshal(m)
}

func (m *RemoveServiceAccountFromProvisioningPolicyRequest) MarshalJSON() ([]byte, error) {
	return protojson.MarshalOptions{}.Marshal(m)
}

func (m *RemoveServiceAccountFromProvisioningPolicyRequest) UnmarshalJSON(data []byte) error {
	return protojson.Unmarshal(data, m)
}

func (m *RemoveServiceAccountFromProvisioningPolicyRequest) GetName() *provisioning_policy.Name {
	if m != nil {
		return m.Name
	}
	return nil
}

func (m *RemoveServiceAccountFromProvisioningPolicyRequest) SetName(fv *provisioning_policy.Name) {
	if m == nil {
		panic(fmt.Errorf("can't set %s on nil %s", "Name", "RemoveServiceAccountFromProvisioningPolicyRequest"))
	}
	m.Name = fv
}

// Response message for method
// [RemoveServiceAccountFromProvisioningPolicy][ntt.devices.v1.RemoveServiceAccountFromProvisioningPolicy]
type RemoveServiceAccountFromProvisioningPolicyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
	Removed       bool `protobuf:"varint,1,opt,name=removed,proto3" json:"removed,omitempty" firestore:"removed"`
}

func (m *RemoveServiceAccountFromProvisioningPolicyResponse) Reset() {
	*m = RemoveServiceAccountFromProvisioningPolicyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &edgelq_devices_proto_v1_provisioning_policy_custom_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(m))
		ms.StoreMessageInfo(mi)
	}
}

func (m *RemoveServiceAccountFromProvisioningPolicyResponse) String() string {
	return protoimpl.X.MessageStringOf(m)
}

func (*RemoveServiceAccountFromProvisioningPolicyResponse) ProtoMessage() {}

func (m *RemoveServiceAccountFromProvisioningPolicyResponse) ProtoReflect() preflect.Message {
	mi := &edgelq_devices_proto_v1_provisioning_policy_custom_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && m != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(m))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(m)
}

func (*RemoveServiceAccountFromProvisioningPolicyResponse) GotenMessage() {}

// Deprecated, Use RemoveServiceAccountFromProvisioningPolicyResponse.ProtoReflect.Descriptor instead.
func (*RemoveServiceAccountFromProvisioningPolicyResponse) Descriptor() ([]byte, []int) {
	return edgelq_devices_proto_v1_provisioning_policy_custom_proto_rawDescGZIP(), []int{3}
}

func (m *RemoveServiceAccountFromProvisioningPolicyResponse) Unmarshal(b []byte) error {
	return proto.Unmarshal(b, m)
}

func (m *RemoveServiceAccountFromProvisioningPolicyResponse) Marshal() ([]byte, error) {
	return proto.Marshal(m)
}

func (m *RemoveServiceAccountFromProvisioningPolicyResponse) MarshalJSON() ([]byte, error) {
	return protojson.MarshalOptions{}.Marshal(m)
}

func (m *RemoveServiceAccountFromProvisioningPolicyResponse) UnmarshalJSON(data []byte) error {
	return protojson.Unmarshal(data, m)
}

func (m *RemoveServiceAccountFromProvisioningPolicyResponse) GetRemoved() bool {
	if m != nil {
		return m.Removed
	}
	return false
}

func (m *RemoveServiceAccountFromProvisioningPolicyResponse) SetRemoved(fv bool) {
	if m == nil {
		panic(fmt.Errorf("can't set %s on nil %s", "Removed", "RemoveServiceAccountFromProvisioningPolicyResponse"))
	}
	m.Removed = fv
}

// Request message for method
// [ProvisionDeviceViaPolicy][ntt.devices.v1.ProvisionDeviceViaPolicy]
type ProvisionDeviceViaPolicyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
	// Name of ntt.devices.v1.ProvisioningPolicy
	Name         *provisioning_policy.Name `protobuf:"bytes,1,opt,customtype=Name,name=name,proto3" json:"name,omitempty" firestore:"name"`
	DeviceStatus *device.Device_Status     `protobuf:"bytes,2,opt,name=device_status,json=deviceStatus,proto3" json:"device_status,omitempty" firestore:"deviceStatus"`
	// external public key to use for service account for this device.
	// If not present, a keypair will be generated by the server.
	ExternalPubkey string `protobuf:"bytes,3,opt,name=external_pubkey,json=externalPubkey,proto3" json:"external_pubkey,omitempty" firestore:"externalPubkey"`
}

func (m *ProvisionDeviceViaPolicyRequest) Reset() {
	*m = ProvisionDeviceViaPolicyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &edgelq_devices_proto_v1_provisioning_policy_custom_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(m))
		ms.StoreMessageInfo(mi)
	}
}

func (m *ProvisionDeviceViaPolicyRequest) String() string {
	return protoimpl.X.MessageStringOf(m)
}

func (*ProvisionDeviceViaPolicyRequest) ProtoMessage() {}

func (m *ProvisionDeviceViaPolicyRequest) ProtoReflect() preflect.Message {
	mi := &edgelq_devices_proto_v1_provisioning_policy_custom_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && m != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(m))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(m)
}

func (*ProvisionDeviceViaPolicyRequest) GotenMessage() {}

// Deprecated, Use ProvisionDeviceViaPolicyRequest.ProtoReflect.Descriptor instead.
func (*ProvisionDeviceViaPolicyRequest) Descriptor() ([]byte, []int) {
	return edgelq_devices_proto_v1_provisioning_policy_custom_proto_rawDescGZIP(), []int{4}
}

func (m *ProvisionDeviceViaPolicyRequest) Unmarshal(b []byte) error {
	return proto.Unmarshal(b, m)
}

func (m *ProvisionDeviceViaPolicyRequest) Marshal() ([]byte, error) {
	return proto.Marshal(m)
}

func (m *ProvisionDeviceViaPolicyRequest) MarshalJSON() ([]byte, error) {
	return protojson.MarshalOptions{}.Marshal(m)
}

func (m *ProvisionDeviceViaPolicyRequest) UnmarshalJSON(data []byte) error {
	return protojson.Unmarshal(data, m)
}

func (m *ProvisionDeviceViaPolicyRequest) GetName() *provisioning_policy.Name {
	if m != nil {
		return m.Name
	}
	return nil
}

func (m *ProvisionDeviceViaPolicyRequest) GetDeviceStatus() *device.Device_Status {
	if m != nil {
		return m.DeviceStatus
	}
	return nil
}

func (m *ProvisionDeviceViaPolicyRequest) GetExternalPubkey() string {
	if m != nil {
		return m.ExternalPubkey
	}
	return ""
}

func (m *ProvisionDeviceViaPolicyRequest) SetName(fv *provisioning_policy.Name) {
	if m == nil {
		panic(fmt.Errorf("can't set %s on nil %s", "Name", "ProvisionDeviceViaPolicyRequest"))
	}
	m.Name = fv
}

func (m *ProvisionDeviceViaPolicyRequest) SetDeviceStatus(fv *device.Device_Status) {
	if m == nil {
		panic(fmt.Errorf("can't set %s on nil %s", "DeviceStatus", "ProvisionDeviceViaPolicyRequest"))
	}
	m.DeviceStatus = fv
}

func (m *ProvisionDeviceViaPolicyRequest) SetExternalPubkey(fv string) {
	if m == nil {
		panic(fmt.Errorf("can't set %s on nil %s", "ExternalPubkey", "ProvisionDeviceViaPolicyRequest"))
	}
	m.ExternalPubkey = fv
}

// Response message for method
// [ProvisionDeviceViaPolicy][ntt.devices.v1.ProvisionDeviceViaPolicy]
type ProvisionDeviceViaPolicyResponse struct {
	state          protoimpl.MessageState
	sizeCache      protoimpl.SizeCache
	unknownFields  protoimpl.UnknownFields
	Device         *device.Device      `protobuf:"bytes,1,opt,name=device,proto3" json:"device,omitempty" firestore:"device"`
	ServiceAccount *api.ServiceAccount `protobuf:"bytes,2,opt,name=service_account,json=serviceAccount,proto3" json:"service_account,omitempty" firestore:"serviceAccount"`
}

func (m *ProvisionDeviceViaPolicyResponse) Reset() {
	*m = ProvisionDeviceViaPolicyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &edgelq_devices_proto_v1_provisioning_policy_custom_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(m))
		ms.StoreMessageInfo(mi)
	}
}

func (m *ProvisionDeviceViaPolicyResponse) String() string {
	return protoimpl.X.MessageStringOf(m)
}

func (*ProvisionDeviceViaPolicyResponse) ProtoMessage() {}

func (m *ProvisionDeviceViaPolicyResponse) ProtoReflect() preflect.Message {
	mi := &edgelq_devices_proto_v1_provisioning_policy_custom_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && m != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(m))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(m)
}

func (*ProvisionDeviceViaPolicyResponse) GotenMessage() {}

// Deprecated, Use ProvisionDeviceViaPolicyResponse.ProtoReflect.Descriptor instead.
func (*ProvisionDeviceViaPolicyResponse) Descriptor() ([]byte, []int) {
	return edgelq_devices_proto_v1_provisioning_policy_custom_proto_rawDescGZIP(), []int{5}
}

func (m *ProvisionDeviceViaPolicyResponse) Unmarshal(b []byte) error {
	return proto.Unmarshal(b, m)
}

func (m *ProvisionDeviceViaPolicyResponse) Marshal() ([]byte, error) {
	return proto.Marshal(m)
}

func (m *ProvisionDeviceViaPolicyResponse) MarshalJSON() ([]byte, error) {
	return protojson.MarshalOptions{}.Marshal(m)
}

func (m *ProvisionDeviceViaPolicyResponse) UnmarshalJSON(data []byte) error {
	return protojson.Unmarshal(data, m)
}

func (m *ProvisionDeviceViaPolicyResponse) GetDevice() *device.Device {
	if m != nil {
		return m.Device
	}
	return nil
}

func (m *ProvisionDeviceViaPolicyResponse) GetServiceAccount() *api.ServiceAccount {
	if m != nil {
		return m.ServiceAccount
	}
	return nil
}

func (m *ProvisionDeviceViaPolicyResponse) SetDevice(fv *device.Device) {
	if m == nil {
		panic(fmt.Errorf("can't set %s on nil %s", "Device", "ProvisionDeviceViaPolicyResponse"))
	}
	m.Device = fv
}

func (m *ProvisionDeviceViaPolicyResponse) SetServiceAccount(fv *api.ServiceAccount) {
	if m == nil {
		panic(fmt.Errorf("can't set %s on nil %s", "ServiceAccount", "ProvisionDeviceViaPolicyResponse"))
	}
	m.ServiceAccount = fv
}

// Request message for method
// [RequestProvisioningApproval][ntt.devices.v1.RequestProvisioningApproval]
type RequestProvisioningApprovalRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
	// Name of ntt.devices.v1.ProvisioningPolicy
	Name *provisioning_policy.Name `protobuf:"bytes,1,opt,customtype=Name,name=name,proto3" json:"name,omitempty" firestore:"name"`
	// Device status to get serial number.
	DeviceStatus *device.Device_Status `protobuf:"bytes,2,opt,name=device_status,json=deviceStatus,proto3" json:"device_status,omitempty" firestore:"deviceStatus"`
	// external public key to use for service account for this device.
	// If not present, a keypair will be generated by the server.
	ExternalPubkey string `protobuf:"bytes,3,opt,name=external_pubkey,json=externalPubkey,proto3" json:"external_pubkey,omitempty" firestore:"externalPubkey"`
}

func (m *RequestProvisioningApprovalRequest) Reset() {
	*m = RequestProvisioningApprovalRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &edgelq_devices_proto_v1_provisioning_policy_custom_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(m))
		ms.StoreMessageInfo(mi)
	}
}

func (m *RequestProvisioningApprovalRequest) String() string {
	return protoimpl.X.MessageStringOf(m)
}

func (*RequestProvisioningApprovalRequest) ProtoMessage() {}

func (m *RequestProvisioningApprovalRequest) ProtoReflect() preflect.Message {
	mi := &edgelq_devices_proto_v1_provisioning_policy_custom_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && m != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(m))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(m)
}

func (*RequestProvisioningApprovalRequest) GotenMessage() {}

// Deprecated, Use RequestProvisioningApprovalRequest.ProtoReflect.Descriptor instead.
func (*RequestProvisioningApprovalRequest) Descriptor() ([]byte, []int) {
	return edgelq_devices_proto_v1_provisioning_policy_custom_proto_rawDescGZIP(), []int{6}
}

func (m *RequestProvisioningApprovalRequest) Unmarshal(b []byte) error {
	return proto.Unmarshal(b, m)
}

func (m *RequestProvisioningApprovalRequest) Marshal() ([]byte, error) {
	return proto.Marshal(m)
}

func (m *RequestProvisioningApprovalRequest) MarshalJSON() ([]byte, error) {
	return protojson.MarshalOptions{}.Marshal(m)
}

func (m *RequestProvisioningApprovalRequest) UnmarshalJSON(data []byte) error {
	return protojson.Unmarshal(data, m)
}

func (m *RequestProvisioningApprovalRequest) GetName() *provisioning_policy.Name {
	if m != nil {
		return m.Name
	}
	return nil
}

func (m *RequestProvisioningApprovalRequest) GetDeviceStatus() *device.Device_Status {
	if m != nil {
		return m.DeviceStatus
	}
	return nil
}

func (m *RequestProvisioningApprovalRequest) GetExternalPubkey() string {
	if m != nil {
		return m.ExternalPubkey
	}
	return ""
}

func (m *RequestProvisioningApprovalRequest) SetName(fv *provisioning_policy.Name) {
	if m == nil {
		panic(fmt.Errorf("can't set %s on nil %s", "Name", "RequestProvisioningApprovalRequest"))
	}
	m.Name = fv
}

func (m *RequestProvisioningApprovalRequest) SetDeviceStatus(fv *device.Device_Status) {
	if m == nil {
		panic(fmt.Errorf("can't set %s on nil %s", "DeviceStatus", "RequestProvisioningApprovalRequest"))
	}
	m.DeviceStatus = fv
}

func (m *RequestProvisioningApprovalRequest) SetExternalPubkey(fv string) {
	if m == nil {
		panic(fmt.Errorf("can't set %s on nil %s", "ExternalPubkey", "RequestProvisioningApprovalRequest"))
	}
	m.ExternalPubkey = fv
}

// Response message for method
// [RequestProvisioningApproval][ntt.devices.v1.RequestProvisioningApproval]
type RequestProvisioningApprovalResponse struct {
	state          protoimpl.MessageState
	sizeCache      protoimpl.SizeCache
	unknownFields  protoimpl.UnknownFields
	Request        *provisioning_approval_request.ProvisioningApprovalRequest `protobuf:"bytes,1,opt,name=request,proto3" json:"request,omitempty" firestore:"request"`
	ServiceAccount *api.ServiceAccount                                        `protobuf:"bytes,2,opt,name=service_account,json=serviceAccount,proto3" json:"service_account,omitempty" firestore:"serviceAccount"`
}

func (m *RequestProvisioningApprovalResponse) Reset() {
	*m = RequestProvisioningApprovalResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &edgelq_devices_proto_v1_provisioning_policy_custom_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(m))
		ms.StoreMessageInfo(mi)
	}
}

func (m *RequestProvisioningApprovalResponse) String() string {
	return protoimpl.X.MessageStringOf(m)
}

func (*RequestProvisioningApprovalResponse) ProtoMessage() {}

func (m *RequestProvisioningApprovalResponse) ProtoReflect() preflect.Message {
	mi := &edgelq_devices_proto_v1_provisioning_policy_custom_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && m != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(m))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(m)
}

func (*RequestProvisioningApprovalResponse) GotenMessage() {}

// Deprecated, Use RequestProvisioningApprovalResponse.ProtoReflect.Descriptor instead.
func (*RequestProvisioningApprovalResponse) Descriptor() ([]byte, []int) {
	return edgelq_devices_proto_v1_provisioning_policy_custom_proto_rawDescGZIP(), []int{7}
}

func (m *RequestProvisioningApprovalResponse) Unmarshal(b []byte) error {
	return proto.Unmarshal(b, m)
}

func (m *RequestProvisioningApprovalResponse) Marshal() ([]byte, error) {
	return proto.Marshal(m)
}

func (m *RequestProvisioningApprovalResponse) MarshalJSON() ([]byte, error) {
	return protojson.MarshalOptions{}.Marshal(m)
}

func (m *RequestProvisioningApprovalResponse) UnmarshalJSON(data []byte) error {
	return protojson.Unmarshal(data, m)
}

func (m *RequestProvisioningApprovalResponse) GetRequest() *provisioning_approval_request.ProvisioningApprovalRequest {
	if m != nil {
		return m.Request
	}
	return nil
}

func (m *RequestProvisioningApprovalResponse) GetServiceAccount() *api.ServiceAccount {
	if m != nil {
		return m.ServiceAccount
	}
	return nil
}

func (m *RequestProvisioningApprovalResponse) SetRequest(fv *provisioning_approval_request.ProvisioningApprovalRequest) {
	if m == nil {
		panic(fmt.Errorf("can't set %s on nil %s", "Request", "RequestProvisioningApprovalResponse"))
	}
	m.Request = fv
}

func (m *RequestProvisioningApprovalResponse) SetServiceAccount(fv *api.ServiceAccount) {
	if m == nil {
		panic(fmt.Errorf("can't set %s on nil %s", "ServiceAccount", "RequestProvisioningApprovalResponse"))
	}
	m.ServiceAccount = fv
}

var edgelq_devices_proto_v1_provisioning_policy_custom_proto preflect.FileDescriptor

var edgelq_devices_proto_v1_provisioning_policy_custom_proto_rawDesc = []byte{
	0x0a, 0x38, 0x65, 0x64, 0x67, 0x65, 0x6c, 0x71, 0x2f, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x73,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x73,
	0x69, 0x6f, 0x6e, 0x69, 0x6e, 0x67, 0x5f, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x5f, 0x63, 0x75,
	0x73, 0x74, 0x6f, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0e, 0x6e, 0x74, 0x74, 0x2e,
	0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x1a, 0x20, 0x67, 0x6f, 0x74, 0x65,
	0x6e, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x76, 0x61,
	0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1d, 0x67, 0x6f,
	0x74, 0x65, 0x6e, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f,
	0x67, 0x6f, 0x74, 0x65, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x74,
	0x65, 0x6e, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x24, 0x67, 0x6f,
	0x74, 0x65, 0x6e, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f,
	0x6d, 0x75, 0x6c, 0x74, 0x69, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x24, 0x65, 0x64, 0x67, 0x65, 0x6c, 0x71, 0x2f, 0x61, 0x75, 0x64, 0x69, 0x74,
	0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x61, 0x75, 0x64,
	0x69, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x23, 0x65, 0x64, 0x67, 0x65, 0x6c, 0x71,
	0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x63, 0x72, 0x65, 0x64,
	0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x31, 0x65,
	0x64, 0x67, 0x65, 0x6c, 0x71, 0x2f, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e,
	0x69, 0x6e, 0x67, 0x5f, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x38, 0x65, 0x64, 0x67, 0x65, 0x6c, 0x71, 0x2f, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x73,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x73,
	0x69, 0x6f, 0x6e, 0x69, 0x6e, 0x67, 0x5f, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x5f, 0x63, 0x68,
	0x61, 0x6e, 0x67, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x24, 0x65, 0x64, 0x67, 0x65,
	0x6c, 0x71, 0x2f, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2f, 0x76, 0x31, 0x2f, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x3b, 0x65, 0x64, 0x67, 0x65, 0x6c, 0x71, 0x2f, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x73,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x73,
	0x69, 0x6f, 0x6e, 0x69, 0x6e, 0x67, 0x5f, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x61, 0x6c, 0x5f,
	0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x8c, 0x01,
	0x0a, 0x32, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x6f, 0x50, 0x72, 0x6f, 0x76, 0x69,
	0x73, 0x69, 0x6f, 0x6e, 0x69, 0x6e, 0x67, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x2e, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x1a, 0xb2, 0xda, 0x21, 0x16, 0x0a, 0x14, 0x0a, 0x12, 0x50, 0x72, 0x6f, 0x76,
	0x69, 0x73, 0x69, 0x6f, 0x6e, 0x69, 0x6e, 0x67, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x3a, 0x26, 0xc2, 0x85, 0x2c, 0x22, 0x0a, 0x20, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x18, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x69, 0x6e, 0x67,
	0x5f, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x9a, 0x01, 0x0a,
	0x33, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x6f, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x73,
	0x69, 0x6f, 0x6e, 0x69, 0x6e, 0x67, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x40, 0x0a, 0x0f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f,
	0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e,
	0x6e, 0x74, 0x74, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x0e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x3a, 0x21, 0xc2, 0x85, 0x2c, 0x1d, 0x1a, 0x1b, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x70, 0x72,
	0x69, 0x76, 0x61, 0x74, 0x65, 0x5f, 0x6b, 0x65, 0x79, 0x22, 0x8b, 0x01, 0x0a, 0x31, 0x52, 0x65,
	0x6d, 0x6f, 0x76, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x46, 0x72, 0x6f, 0x6d, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x69,
	0x6e, 0x67, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x2e, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x1a, 0xb2,
	0xda, 0x21, 0x16, 0x0a, 0x14, 0x0a, 0x12, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e,
	0x69, 0x6e, 0x67, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x3a,
	0x26, 0xc2, 0x85, 0x2c, 0x22, 0x0a, 0x20, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x70,
	0x72, 0x6f, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x69, 0x6e, 0x67, 0x5f, 0x70, 0x6f, 0x6c, 0x69,
	0x63, 0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x4e, 0x0a, 0x32, 0x52, 0x65, 0x6d, 0x6f, 0x76,
	0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x46,
	0x72, 0x6f, 0x6d, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x69, 0x6e, 0x67, 0x50,
	0x6f, 0x6c, 0x69, 0x63, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07,
	0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x64, 0x22, 0xe6, 0x01, 0x0a, 0x1f, 0x50, 0x72, 0x6f, 0x76,
	0x69, 0x73, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x56, 0x69, 0x61, 0x50, 0x6f,
	0x6c, 0x69, 0x63, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2e, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x1a, 0xb2, 0xda, 0x21, 0x16, 0x0a,
	0x14, 0x0a, 0x12, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x69, 0x6e, 0x67, 0x50,
	0x6f, 0x6c, 0x69, 0x63, 0x79, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x42, 0x0a, 0x0d, 0x64,
	0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x6e, 0x74, 0x74, 0x2e, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x73,
	0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x52, 0x0c, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x27, 0x0a, 0x0f, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x5f, 0x70, 0x75, 0x62, 0x6b,
	0x65, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e,
	0x61, 0x6c, 0x50, 0x75, 0x62, 0x6b, 0x65, 0x79, 0x3a, 0x26, 0xc2, 0x85, 0x2c, 0x22, 0x0a, 0x20,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x73, 0x69, 0x6f,
	0x6e, 0x69, 0x6e, 0x67, 0x5f, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x22, 0xb7, 0x01, 0x0a, 0x20, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x44, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x56, 0x69, 0x61, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2e, 0x0a, 0x06, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x6e, 0x74, 0x74, 0x2e, 0x64, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x52, 0x06, 0x64,
	0x65, 0x76, 0x69, 0x63, 0x65, 0x12, 0x40, 0x0a, 0x0f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17,
	0x2e, 0x6e, 0x74, 0x74, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x0e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x3a, 0x21, 0xc2, 0x85, 0x2c, 0x1d, 0x1a, 0x1b, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x70,
	0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x5f, 0x6b, 0x65, 0x79, 0x22, 0xe9, 0x01, 0x0a, 0x22, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x69,
	0x6e, 0x67, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x61, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x2e, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x1a, 0xb2, 0xda, 0x21, 0x16, 0x0a, 0x14, 0x0a, 0x12, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x73, 0x69,
	0x6f, 0x6e, 0x69, 0x6e, 0x67, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x42, 0x0a, 0x0d, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x6e, 0x74, 0x74, 0x2e, 0x64,
	0x65, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x0c, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x27, 0x0a, 0x0f, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61,
	0x6c, 0x5f, 0x70, 0x75, 0x62, 0x6b, 0x65, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e,
	0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x50, 0x75, 0x62, 0x6b, 0x65, 0x79, 0x3a, 0x26,
	0xc2, 0x85, 0x2c, 0x22, 0x0a, 0x20, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x70, 0x72,
	0x6f, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x69, 0x6e, 0x67, 0x5f, 0x70, 0x6f, 0x6c, 0x69, 0x63,
	0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0xd1, 0x01, 0x0a, 0x23, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x69, 0x6e, 0x67, 0x41, 0x70,
	0x70, 0x72, 0x6f, 0x76, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x45,
	0x0a, 0x07, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x2b, 0x2e, 0x6e, 0x74, 0x74, 0x2e, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x76, 0x31,
	0x2e, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x69, 0x6e, 0x67, 0x41, 0x70, 0x70,
	0x72, 0x6f, 0x76, 0x61, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x07, 0x72, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x40, 0x0a, 0x0f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17,
	0x2e, 0x6e, 0x74, 0x74, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x0e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x3a, 0x21, 0xc2, 0x85, 0x2c, 0x1d, 0x1a, 0x1b, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x70,
	0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x5f, 0x6b, 0x65, 0x79, 0x42, 0x99, 0x01, 0xe8, 0xde, 0x21,
	0x00, 0x0a, 0x15, 0x63, 0x6f, 0x6d, 0x2e, 0x6e, 0x74, 0x74, 0x2e, 0x64, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x73, 0x2e, 0x70, 0x62, 0x2e, 0x76, 0x31, 0x42, 0x1d, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x73,
	0x69, 0x6f, 0x6e, 0x69, 0x6e, 0x67, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x43, 0x75, 0x73, 0x74,
	0x6f, 0x6d, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x00, 0x5a, 0x5b, 0x67, 0x69, 0x74, 0x68, 0x75,
	0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x77, 0x61, 0x6e, 0x2f, 0x65,
	0x64, 0x67, 0x65, 0x6c, 0x71, 0x2f, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2f, 0x63, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x73, 0x69, 0x6f,
	0x6e, 0x69, 0x6e, 0x67, 0x5f, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x3b, 0x70, 0x72, 0x6f, 0x76,
	0x69, 0x73, 0x69, 0x6f, 0x6e, 0x69, 0x6e, 0x67, 0x5f, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x5f,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	edgelq_devices_proto_v1_provisioning_policy_custom_proto_rawDescOnce sync.Once
	edgelq_devices_proto_v1_provisioning_policy_custom_proto_rawDescData = edgelq_devices_proto_v1_provisioning_policy_custom_proto_rawDesc
)

func edgelq_devices_proto_v1_provisioning_policy_custom_proto_rawDescGZIP() []byte {
	edgelq_devices_proto_v1_provisioning_policy_custom_proto_rawDescOnce.Do(func() {
		edgelq_devices_proto_v1_provisioning_policy_custom_proto_rawDescData = protoimpl.X.CompressGZIP(edgelq_devices_proto_v1_provisioning_policy_custom_proto_rawDescData)
	})
	return edgelq_devices_proto_v1_provisioning_policy_custom_proto_rawDescData
}

var edgelq_devices_proto_v1_provisioning_policy_custom_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var edgelq_devices_proto_v1_provisioning_policy_custom_proto_goTypes = []interface{}{
	(*ProvisionServiceAccountToProvisioningPolicyRequest)(nil),        // 0: ntt.devices.v1.ProvisionServiceAccountToProvisioningPolicyRequest
	(*ProvisionServiceAccountToProvisioningPolicyResponse)(nil),       // 1: ntt.devices.v1.ProvisionServiceAccountToProvisioningPolicyResponse
	(*RemoveServiceAccountFromProvisioningPolicyRequest)(nil),         // 2: ntt.devices.v1.RemoveServiceAccountFromProvisioningPolicyRequest
	(*RemoveServiceAccountFromProvisioningPolicyResponse)(nil),        // 3: ntt.devices.v1.RemoveServiceAccountFromProvisioningPolicyResponse
	(*ProvisionDeviceViaPolicyRequest)(nil),                           // 4: ntt.devices.v1.ProvisionDeviceViaPolicyRequest
	(*ProvisionDeviceViaPolicyResponse)(nil),                          // 5: ntt.devices.v1.ProvisionDeviceViaPolicyResponse
	(*RequestProvisioningApprovalRequest)(nil),                        // 6: ntt.devices.v1.RequestProvisioningApprovalRequest
	(*RequestProvisioningApprovalResponse)(nil),                       // 7: ntt.devices.v1.RequestProvisioningApprovalResponse
	(*api.ServiceAccount)(nil),                                        // 8: ntt.api.ServiceAccount
	(*device.Device_Status)(nil),                                      // 9: ntt.devices.v1.Device.Status
	(*device.Device)(nil),                                             // 10: ntt.devices.v1.Device
	(*provisioning_approval_request.ProvisioningApprovalRequest)(nil), // 11: ntt.devices.v1.ProvisioningApprovalRequest
}
var edgelq_devices_proto_v1_provisioning_policy_custom_proto_depIdxs = []int32{
	8,  // 0: ntt.devices.v1.ProvisionServiceAccountToProvisioningPolicyResponse.service_account:type_name -> ntt.api.ServiceAccount
	9,  // 1: ntt.devices.v1.ProvisionDeviceViaPolicyRequest.device_status:type_name -> ntt.devices.v1.Device.Status
	10, // 2: ntt.devices.v1.ProvisionDeviceViaPolicyResponse.device:type_name -> ntt.devices.v1.Device
	8,  // 3: ntt.devices.v1.ProvisionDeviceViaPolicyResponse.service_account:type_name -> ntt.api.ServiceAccount
	9,  // 4: ntt.devices.v1.RequestProvisioningApprovalRequest.device_status:type_name -> ntt.devices.v1.Device.Status
	11, // 5: ntt.devices.v1.RequestProvisioningApprovalResponse.request:type_name -> ntt.devices.v1.ProvisioningApprovalRequest
	8,  // 6: ntt.devices.v1.RequestProvisioningApprovalResponse.service_account:type_name -> ntt.api.ServiceAccount
	7,  // [7:7] is the sub-list for method output_type
	7,  // [7:7] is the sub-list for method input_type
	7,  // [7:7] is the sub-list for extension type_name
	7,  // [7:7] is the sub-list for extension extendee
	0,  // [0:7] is the sub-list for field type_name
}

func init() { edgelq_devices_proto_v1_provisioning_policy_custom_proto_init() }
func edgelq_devices_proto_v1_provisioning_policy_custom_proto_init() {
	if edgelq_devices_proto_v1_provisioning_policy_custom_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {

		edgelq_devices_proto_v1_provisioning_policy_custom_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProvisionServiceAccountToProvisioningPolicyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		edgelq_devices_proto_v1_provisioning_policy_custom_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProvisionServiceAccountToProvisioningPolicyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		edgelq_devices_proto_v1_provisioning_policy_custom_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveServiceAccountFromProvisioningPolicyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		edgelq_devices_proto_v1_provisioning_policy_custom_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveServiceAccountFromProvisioningPolicyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		edgelq_devices_proto_v1_provisioning_policy_custom_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProvisionDeviceViaPolicyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		edgelq_devices_proto_v1_provisioning_policy_custom_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProvisionDeviceViaPolicyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		edgelq_devices_proto_v1_provisioning_policy_custom_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RequestProvisioningApprovalRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		edgelq_devices_proto_v1_provisioning_policy_custom_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RequestProvisioningApprovalResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}

	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: edgelq_devices_proto_v1_provisioning_policy_custom_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           edgelq_devices_proto_v1_provisioning_policy_custom_proto_goTypes,
		DependencyIndexes: edgelq_devices_proto_v1_provisioning_policy_custom_proto_depIdxs,
		MessageInfos:      edgelq_devices_proto_v1_provisioning_policy_custom_proto_msgTypes,
	}.Build()
	edgelq_devices_proto_v1_provisioning_policy_custom_proto = out.File
	edgelq_devices_proto_v1_provisioning_policy_custom_proto_rawDesc = nil
	edgelq_devices_proto_v1_provisioning_policy_custom_proto_goTypes = nil
	edgelq_devices_proto_v1_provisioning_policy_custom_proto_depIdxs = nil
}
