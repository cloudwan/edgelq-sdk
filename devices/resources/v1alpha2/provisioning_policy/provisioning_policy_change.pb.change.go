// Code generated by protoc-gen-goten-resource
// Resource change: ProvisioningPolicyChange
// DO NOT EDIT!!!

package provisioning_policy

import (
	gotenresource "github.com/cloudwan/goten-sdk/runtime/resource"
)

// proto imports
import (
	project "github.com/cloudwan/edgelq-sdk/devices/resources/v1alpha2/project"
	fieldmaskpb "google.golang.org/protobuf/types/known/fieldmaskpb"
)

// ensure the imports are used
var (
	_ = new(gotenresource.ListQuery)
)

// make sure we're using proto imports
var (
	_ = &project.Project{}
	_ = &fieldmaskpb.FieldMask{}
)

func (c *ProvisioningPolicyChange) IsAdd() bool {
	if c == nil {
		return false
	}
	_, ok := c.ChangeType.(*ProvisioningPolicyChange_Added_)
	return ok
}

func (c *ProvisioningPolicyChange) IsModify() bool {
	if c == nil {
		return false
	}
	_, ok := c.ChangeType.(*ProvisioningPolicyChange_Modified_)
	return ok
}

func (c *ProvisioningPolicyChange) IsCurrent() bool {
	if c == nil {
		return false
	}
	_, ok := c.ChangeType.(*ProvisioningPolicyChange_Current_)
	return ok
}

func (c *ProvisioningPolicyChange) IsDelete() bool {
	if c == nil {
		return false
	}
	_, ok := c.ChangeType.(*ProvisioningPolicyChange_Removed_)
	return ok
}

func (c *ProvisioningPolicyChange) GetCurrentViewIndex() int32 {
	switch cType := c.ChangeType.(type) {
	case *ProvisioningPolicyChange_Added_:
		return cType.Added.ViewIndex
	case *ProvisioningPolicyChange_Modified_:
		return cType.Modified.ViewIndex
	}
	return 0
}

func (c *ProvisioningPolicyChange) GetPreviousViewIndex() int32 {
	switch cType := c.ChangeType.(type) {
	case *ProvisioningPolicyChange_Removed_:
		return cType.Removed.ViewIndex
	case *ProvisioningPolicyChange_Modified_:
		return cType.Modified.PreviousViewIndex
	}
	return 0
}

func (c *ProvisioningPolicyChange) GetProvisioningPolicy() *ProvisioningPolicy {
	if c == nil {
		return nil
	}
	switch cType := c.ChangeType.(type) {
	case *ProvisioningPolicyChange_Added_:
		return cType.Added.ProvisioningPolicy
	case *ProvisioningPolicyChange_Modified_:
		return cType.Modified.ProvisioningPolicy
	case *ProvisioningPolicyChange_Current_:
		return cType.Current.ProvisioningPolicy
	case *ProvisioningPolicyChange_Removed_:
		return nil
	}
	return nil
}

func (c *ProvisioningPolicyChange) GetRawResource() gotenresource.Resource {
	return c.GetProvisioningPolicy()
}

func (c *ProvisioningPolicyChange) GetProvisioningPolicyName() *Name {
	if c == nil {
		return nil
	}
	switch cType := c.ChangeType.(type) {
	case *ProvisioningPolicyChange_Added_:
		return cType.Added.ProvisioningPolicy.GetName()
	case *ProvisioningPolicyChange_Modified_:
		return cType.Modified.Name
	case *ProvisioningPolicyChange_Current_:
		return cType.Current.ProvisioningPolicy.GetName()
	case *ProvisioningPolicyChange_Removed_:
		return cType.Removed.Name
	}
	return nil
}

func (c *ProvisioningPolicyChange) GetRawName() gotenresource.Name {
	return c.GetProvisioningPolicyName()
}

func (c *ProvisioningPolicyChange) SetAddedRaw(snapshot gotenresource.Resource, idx int) {
	c.ChangeType = &ProvisioningPolicyChange_Added_{
		Added: &ProvisioningPolicyChange_Added{
			ProvisioningPolicy: snapshot.(*ProvisioningPolicy),
			ViewIndex:          int32(idx),
		},
	}
}

func (c *ProvisioningPolicyChange) SetModifiedRaw(name gotenresource.Name, snapshot gotenresource.Resource, prevIdx int, newIdx int) {
	c.ChangeType = &ProvisioningPolicyChange_Modified_{
		Modified: &ProvisioningPolicyChange_Modified{
			Name:               name.(*Name),
			ProvisioningPolicy: snapshot.(*ProvisioningPolicy),
			PreviousViewIndex:  int32(prevIdx),
			ViewIndex:          int32(newIdx),
		},
	}
}

func (c *ProvisioningPolicyChange) SetCurrentRaw(snapshot gotenresource.Resource) {
	c.ChangeType = &ProvisioningPolicyChange_Current_{
		Current: &ProvisioningPolicyChange_Current{
			ProvisioningPolicy: snapshot.(*ProvisioningPolicy),
		},
	}
}

func (c *ProvisioningPolicyChange) SetDeletedRaw(name gotenresource.Name, idx int) {
	c.ChangeType = &ProvisioningPolicyChange_Removed_{
		Removed: &ProvisioningPolicyChange_Removed{
			Name:      name.(*Name),
			ViewIndex: int32(idx),
		},
	}
}
