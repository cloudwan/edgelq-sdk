// Code generated by protoc-gen-goten-go
// File: edgelq/devices/proto/v1alpha2/provisioning_policy_change.proto
// DO NOT EDIT!!!

package provisioning_policy

import (
	"fmt"
	"reflect"
	"sync"

	"google.golang.org/protobuf/encoding/protojson"
	"google.golang.org/protobuf/proto"
	preflect "google.golang.org/protobuf/reflect/protoreflect"
	"google.golang.org/protobuf/runtime/protoimpl"
)

// proto imports
import (
	project "github.com/cloudwan/edgelq-sdk/devices/resources/v1alpha2/project"
	field_mask "google.golang.org/genproto/protobuf/field_mask"
)

// Reference imports to suppress errors if they are not otherwise used.
var (
	_ = fmt.Errorf
	_ = reflect.Method{}
	_ = sync.Once{}

	_ = protojson.MarshalOptions{}
	_ = proto.MarshalOptions{}
	_ = preflect.Value{}
	_ = protoimpl.DescBuilder{}
)

// make sure we're using proto imports
var (
	_ = &project.Project{}
	_ = &field_mask.FieldMask{}
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// ProvisioningPolicyChange is used by Watch notifications Responses to describe
// change of single ProvisioningPolicy One of Added, Modified, Removed
type ProvisioningPolicyChange struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
	// ProvisioningPolicy change
	//
	// Types that are valid to be assigned to ChangeType:
	//	*ProvisioningPolicyChange_Added_
	//	*ProvisioningPolicyChange_Modified_
	//	*ProvisioningPolicyChange_Current_
	//	*ProvisioningPolicyChange_Removed_
	ChangeType isProvisioningPolicyChange_ChangeType `protobuf_oneof:"change_type"`
}

func (m *ProvisioningPolicyChange) Reset() {
	*m = ProvisioningPolicyChange{}
	if protoimpl.UnsafeEnabled {
		mi := &edgelq_devices_proto_v1alpha2_provisioning_policy_change_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(m))
		ms.StoreMessageInfo(mi)
	}
}

func (m *ProvisioningPolicyChange) String() string {
	return protoimpl.X.MessageStringOf(m)
}

func (*ProvisioningPolicyChange) ProtoMessage() {}

func (m *ProvisioningPolicyChange) ProtoReflect() preflect.Message {
	mi := &edgelq_devices_proto_v1alpha2_provisioning_policy_change_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && m != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(m))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(m)
}

func (*ProvisioningPolicyChange) GotenMessage() {}

// Deprecated, Use ProvisioningPolicyChange.ProtoReflect.Descriptor instead.
func (*ProvisioningPolicyChange) Descriptor() ([]byte, []int) {
	return edgelq_devices_proto_v1alpha2_provisioning_policy_change_proto_rawDescGZIP(), []int{0}
}

func (m *ProvisioningPolicyChange) Unmarshal(b []byte) error {
	return proto.Unmarshal(b, m)
}

func (m *ProvisioningPolicyChange) Marshal() ([]byte, error) {
	return proto.Marshal(m)
}

func (m *ProvisioningPolicyChange) MarshalJSON() ([]byte, error) {
	return protojson.MarshalOptions{}.Marshal(m)
}

func (m *ProvisioningPolicyChange) UnmarshalJSON(data []byte) error {
	return protojson.Unmarshal(data, m)
}

type isProvisioningPolicyChange_ChangeType interface {
	isProvisioningPolicyChange_ChangeType()
}

type ProvisioningPolicyChange_Added_ struct {
	// Added is returned when watched document is added, either created or
	// enters Query view
	Added *ProvisioningPolicyChange_Added `protobuf:"bytes,1,opt,name=added,proto3,oneof" firestore:"added"`
}
type ProvisioningPolicyChange_Modified_ struct {
	// Modified is returned when watched document is modified
	Modified *ProvisioningPolicyChange_Modified `protobuf:"bytes,2,opt,name=modified,proto3,oneof" firestore:"modified"`
}
type ProvisioningPolicyChange_Current_ struct {
	// Current is returned in stateless watch when document enters query view or
	// is modified within.
	Current *ProvisioningPolicyChange_Current `protobuf:"bytes,4,opt,name=current,proto3,oneof" firestore:"current"`
}
type ProvisioningPolicyChange_Removed_ struct {
	// Removed is returned when ProvisioningPolicy is deleted or leaves Query
	// view
	Removed *ProvisioningPolicyChange_Removed `protobuf:"bytes,3,opt,name=removed,proto3,oneof" firestore:"removed"`
}

func (*ProvisioningPolicyChange_Added_) isProvisioningPolicyChange_ChangeType()    {}
func (*ProvisioningPolicyChange_Modified_) isProvisioningPolicyChange_ChangeType() {}
func (*ProvisioningPolicyChange_Current_) isProvisioningPolicyChange_ChangeType()  {}
func (*ProvisioningPolicyChange_Removed_) isProvisioningPolicyChange_ChangeType()  {}
func (m *ProvisioningPolicyChange) GetChangeType() isProvisioningPolicyChange_ChangeType {
	if m != nil {
		return m.ChangeType
	}
	return nil
}
func (m *ProvisioningPolicyChange) GetAdded() *ProvisioningPolicyChange_Added {
	if x, ok := m.GetChangeType().(*ProvisioningPolicyChange_Added_); ok {
		return x.Added
	}
	return nil
}
func (m *ProvisioningPolicyChange) GetModified() *ProvisioningPolicyChange_Modified {
	if x, ok := m.GetChangeType().(*ProvisioningPolicyChange_Modified_); ok {
		return x.Modified
	}
	return nil
}
func (m *ProvisioningPolicyChange) GetCurrent() *ProvisioningPolicyChange_Current {
	if x, ok := m.GetChangeType().(*ProvisioningPolicyChange_Current_); ok {
		return x.Current
	}
	return nil
}
func (m *ProvisioningPolicyChange) GetRemoved() *ProvisioningPolicyChange_Removed {
	if x, ok := m.GetChangeType().(*ProvisioningPolicyChange_Removed_); ok {
		return x.Removed
	}
	return nil
}
func (m *ProvisioningPolicyChange) SetChangeType(ofv isProvisioningPolicyChange_ChangeType) {
	if m == nil {
		panic(fmt.Errorf("can't set %s on nil %s", "isProvisioningPolicyChange_ChangeType", "ProvisioningPolicyChange"))
	}
	m.ChangeType = ofv
}
func (m *ProvisioningPolicyChange) SetAdded(fv *ProvisioningPolicyChange_Added) {
	m.SetChangeType(&ProvisioningPolicyChange_Added_{Added: fv})
}
func (m *ProvisioningPolicyChange) SetModified(fv *ProvisioningPolicyChange_Modified) {
	m.SetChangeType(&ProvisioningPolicyChange_Modified_{Modified: fv})
}
func (m *ProvisioningPolicyChange) SetCurrent(fv *ProvisioningPolicyChange_Current) {
	m.SetChangeType(&ProvisioningPolicyChange_Current_{Current: fv})
}
func (m *ProvisioningPolicyChange) SetRemoved(fv *ProvisioningPolicyChange_Removed) {
	m.SetChangeType(&ProvisioningPolicyChange_Removed_{Removed: fv})
}

// ProvisioningPolicy has been added to query view
type ProvisioningPolicyChange_Added struct {
	state              protoimpl.MessageState
	sizeCache          protoimpl.SizeCache
	unknownFields      protoimpl.UnknownFields
	ProvisioningPolicy *ProvisioningPolicy `protobuf:"bytes,1,opt,name=provisioning_policy,json=provisioningPolicy,proto3" json:"provisioning_policy,omitempty" firestore:"provisioningPolicy"`
	// Integer describing index of added ProvisioningPolicy in resulting query
	// view.
	ViewIndex int32 `protobuf:"varint,2,opt,name=view_index,json=viewIndex,proto3" json:"view_index,omitempty" firestore:"viewIndex"`
}

func (m *ProvisioningPolicyChange_Added) Reset() {
	*m = ProvisioningPolicyChange_Added{}
	if protoimpl.UnsafeEnabled {
		mi := &edgelq_devices_proto_v1alpha2_provisioning_policy_change_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(m))
		ms.StoreMessageInfo(mi)
	}
}

func (m *ProvisioningPolicyChange_Added) String() string {
	return protoimpl.X.MessageStringOf(m)
}

func (*ProvisioningPolicyChange_Added) ProtoMessage() {}

func (m *ProvisioningPolicyChange_Added) ProtoReflect() preflect.Message {
	mi := &edgelq_devices_proto_v1alpha2_provisioning_policy_change_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && m != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(m))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(m)
}

func (*ProvisioningPolicyChange_Added) GotenMessage() {}

// Deprecated, Use ProvisioningPolicyChange_Added.ProtoReflect.Descriptor instead.
func (*ProvisioningPolicyChange_Added) Descriptor() ([]byte, []int) {
	return edgelq_devices_proto_v1alpha2_provisioning_policy_change_proto_rawDescGZIP(), []int{0, 0}
}

func (m *ProvisioningPolicyChange_Added) Unmarshal(b []byte) error {
	return proto.Unmarshal(b, m)
}

func (m *ProvisioningPolicyChange_Added) Marshal() ([]byte, error) {
	return proto.Marshal(m)
}

func (m *ProvisioningPolicyChange_Added) MarshalJSON() ([]byte, error) {
	return protojson.MarshalOptions{}.Marshal(m)
}

func (m *ProvisioningPolicyChange_Added) UnmarshalJSON(data []byte) error {
	return protojson.Unmarshal(data, m)
}

func (m *ProvisioningPolicyChange_Added) GetProvisioningPolicy() *ProvisioningPolicy {
	if m != nil {
		return m.ProvisioningPolicy
	}
	return nil
}

func (m *ProvisioningPolicyChange_Added) GetViewIndex() int32 {
	if m != nil {
		return m.ViewIndex
	}
	return int32(0)
}

func (m *ProvisioningPolicyChange_Added) SetProvisioningPolicy(fv *ProvisioningPolicy) {
	if m == nil {
		panic(fmt.Errorf("can't set %s on nil %s", "ProvisioningPolicy", "ProvisioningPolicyChange_Added"))
	}
	m.ProvisioningPolicy = fv
}

func (m *ProvisioningPolicyChange_Added) SetViewIndex(fv int32) {
	if m == nil {
		panic(fmt.Errorf("can't set %s on nil %s", "ViewIndex", "ProvisioningPolicyChange_Added"))
	}
	m.ViewIndex = fv
}

// ProvisioningPolicy changed some of it's fields - contains either full
// document or masked change
type ProvisioningPolicyChange_Modified struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
	// Name of modified ProvisioningPolicy
	Name *Name `protobuf:"bytes,1,opt,customtype=Name,name=name,proto3" json:"name,omitempty" firestore:"name"`
	// New version of ProvisioningPolicy or masked difference, depending on
	// mask_changes instrumentation of issued [WatchProvisioningPolicyRequest]
	// or [WatchProvisioningPoliciesRequest]
	ProvisioningPolicy *ProvisioningPolicy `protobuf:"bytes,2,opt,name=provisioning_policy,json=provisioningPolicy,proto3" json:"provisioning_policy,omitempty" firestore:"provisioningPolicy"`
	// Used when mask_changes is set, contains field paths of modified
	// properties.
	FieldMask *ProvisioningPolicy_FieldMask `protobuf:"bytes,3,opt,customtype=ProvisioningPolicy_FieldMask,name=field_mask,json=fieldMask,proto3" json:"field_mask,omitempty" firestore:"fieldMask"`
	// Previous view index specifies previous position of modified
	// ProvisioningPolicy. When modification doesn't affect sorted order, value
	// will remain identical to [view_index].
	PreviousViewIndex int32 `protobuf:"varint,4,opt,name=previous_view_index,json=previousViewIndex,proto3" json:"previous_view_index,omitempty" firestore:"previousViewIndex"`
	// Integer specifying ProvisioningPolicy new index in resulting query view.
	ViewIndex int32 `protobuf:"varint,5,opt,name=view_index,json=viewIndex,proto3" json:"view_index,omitempty" firestore:"viewIndex"`
}

func (m *ProvisioningPolicyChange_Modified) Reset() {
	*m = ProvisioningPolicyChange_Modified{}
	if protoimpl.UnsafeEnabled {
		mi := &edgelq_devices_proto_v1alpha2_provisioning_policy_change_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(m))
		ms.StoreMessageInfo(mi)
	}
}

func (m *ProvisioningPolicyChange_Modified) String() string {
	return protoimpl.X.MessageStringOf(m)
}

func (*ProvisioningPolicyChange_Modified) ProtoMessage() {}

func (m *ProvisioningPolicyChange_Modified) ProtoReflect() preflect.Message {
	mi := &edgelq_devices_proto_v1alpha2_provisioning_policy_change_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && m != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(m))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(m)
}

func (*ProvisioningPolicyChange_Modified) GotenMessage() {}

// Deprecated, Use ProvisioningPolicyChange_Modified.ProtoReflect.Descriptor instead.
func (*ProvisioningPolicyChange_Modified) Descriptor() ([]byte, []int) {
	return edgelq_devices_proto_v1alpha2_provisioning_policy_change_proto_rawDescGZIP(), []int{0, 1}
}

func (m *ProvisioningPolicyChange_Modified) Unmarshal(b []byte) error {
	return proto.Unmarshal(b, m)
}

func (m *ProvisioningPolicyChange_Modified) Marshal() ([]byte, error) {
	return proto.Marshal(m)
}

func (m *ProvisioningPolicyChange_Modified) MarshalJSON() ([]byte, error) {
	return protojson.MarshalOptions{}.Marshal(m)
}

func (m *ProvisioningPolicyChange_Modified) UnmarshalJSON(data []byte) error {
	return protojson.Unmarshal(data, m)
}

func (m *ProvisioningPolicyChange_Modified) GetName() *Name {
	if m != nil {
		return m.Name
	}
	return nil
}

func (m *ProvisioningPolicyChange_Modified) GetProvisioningPolicy() *ProvisioningPolicy {
	if m != nil {
		return m.ProvisioningPolicy
	}
	return nil
}

func (m *ProvisioningPolicyChange_Modified) GetFieldMask() *ProvisioningPolicy_FieldMask {
	if m != nil {
		return m.FieldMask
	}
	return nil
}

func (m *ProvisioningPolicyChange_Modified) GetPreviousViewIndex() int32 {
	if m != nil {
		return m.PreviousViewIndex
	}
	return int32(0)
}

func (m *ProvisioningPolicyChange_Modified) GetViewIndex() int32 {
	if m != nil {
		return m.ViewIndex
	}
	return int32(0)
}

func (m *ProvisioningPolicyChange_Modified) SetName(fv *Name) {
	if m == nil {
		panic(fmt.Errorf("can't set %s on nil %s", "Name", "ProvisioningPolicyChange_Modified"))
	}
	m.Name = fv
}

func (m *ProvisioningPolicyChange_Modified) SetProvisioningPolicy(fv *ProvisioningPolicy) {
	if m == nil {
		panic(fmt.Errorf("can't set %s on nil %s", "ProvisioningPolicy", "ProvisioningPolicyChange_Modified"))
	}
	m.ProvisioningPolicy = fv
}

func (m *ProvisioningPolicyChange_Modified) SetFieldMask(fv *ProvisioningPolicy_FieldMask) {
	if m == nil {
		panic(fmt.Errorf("can't set %s on nil %s", "FieldMask", "ProvisioningPolicyChange_Modified"))
	}
	m.FieldMask = fv
}

func (m *ProvisioningPolicyChange_Modified) SetPreviousViewIndex(fv int32) {
	if m == nil {
		panic(fmt.Errorf("can't set %s on nil %s", "PreviousViewIndex", "ProvisioningPolicyChange_Modified"))
	}
	m.PreviousViewIndex = fv
}

func (m *ProvisioningPolicyChange_Modified) SetViewIndex(fv int32) {
	if m == nil {
		panic(fmt.Errorf("can't set %s on nil %s", "ViewIndex", "ProvisioningPolicyChange_Modified"))
	}
	m.ViewIndex = fv
}

// ProvisioningPolicy has been added or modified in a query view. Version used
// for stateless watching
type ProvisioningPolicyChange_Current struct {
	state              protoimpl.MessageState
	sizeCache          protoimpl.SizeCache
	unknownFields      protoimpl.UnknownFields
	ProvisioningPolicy *ProvisioningPolicy `protobuf:"bytes,1,opt,name=provisioning_policy,json=provisioningPolicy,proto3" json:"provisioning_policy,omitempty" firestore:"provisioningPolicy"`
}

func (m *ProvisioningPolicyChange_Current) Reset() {
	*m = ProvisioningPolicyChange_Current{}
	if protoimpl.UnsafeEnabled {
		mi := &edgelq_devices_proto_v1alpha2_provisioning_policy_change_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(m))
		ms.StoreMessageInfo(mi)
	}
}

func (m *ProvisioningPolicyChange_Current) String() string {
	return protoimpl.X.MessageStringOf(m)
}

func (*ProvisioningPolicyChange_Current) ProtoMessage() {}

func (m *ProvisioningPolicyChange_Current) ProtoReflect() preflect.Message {
	mi := &edgelq_devices_proto_v1alpha2_provisioning_policy_change_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && m != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(m))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(m)
}

func (*ProvisioningPolicyChange_Current) GotenMessage() {}

// Deprecated, Use ProvisioningPolicyChange_Current.ProtoReflect.Descriptor instead.
func (*ProvisioningPolicyChange_Current) Descriptor() ([]byte, []int) {
	return edgelq_devices_proto_v1alpha2_provisioning_policy_change_proto_rawDescGZIP(), []int{0, 2}
}

func (m *ProvisioningPolicyChange_Current) Unmarshal(b []byte) error {
	return proto.Unmarshal(b, m)
}

func (m *ProvisioningPolicyChange_Current) Marshal() ([]byte, error) {
	return proto.Marshal(m)
}

func (m *ProvisioningPolicyChange_Current) MarshalJSON() ([]byte, error) {
	return protojson.MarshalOptions{}.Marshal(m)
}

func (m *ProvisioningPolicyChange_Current) UnmarshalJSON(data []byte) error {
	return protojson.Unmarshal(data, m)
}

func (m *ProvisioningPolicyChange_Current) GetProvisioningPolicy() *ProvisioningPolicy {
	if m != nil {
		return m.ProvisioningPolicy
	}
	return nil
}

func (m *ProvisioningPolicyChange_Current) SetProvisioningPolicy(fv *ProvisioningPolicy) {
	if m == nil {
		panic(fmt.Errorf("can't set %s on nil %s", "ProvisioningPolicy", "ProvisioningPolicyChange_Current"))
	}
	m.ProvisioningPolicy = fv
}

// Removed is returned when ProvisioningPolicy is deleted or leaves Query view
type ProvisioningPolicyChange_Removed struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
	Name          *Name `protobuf:"bytes,1,opt,customtype=Name,name=name,proto3" json:"name,omitempty" firestore:"name"`
	// Integer specifying removed ProvisioningPolicy index. Not populated in
	// stateless watch type.
	ViewIndex int32 `protobuf:"varint,2,opt,name=view_index,json=viewIndex,proto3" json:"view_index,omitempty" firestore:"viewIndex"`
}

func (m *ProvisioningPolicyChange_Removed) Reset() {
	*m = ProvisioningPolicyChange_Removed{}
	if protoimpl.UnsafeEnabled {
		mi := &edgelq_devices_proto_v1alpha2_provisioning_policy_change_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(m))
		ms.StoreMessageInfo(mi)
	}
}

func (m *ProvisioningPolicyChange_Removed) String() string {
	return protoimpl.X.MessageStringOf(m)
}

func (*ProvisioningPolicyChange_Removed) ProtoMessage() {}

func (m *ProvisioningPolicyChange_Removed) ProtoReflect() preflect.Message {
	mi := &edgelq_devices_proto_v1alpha2_provisioning_policy_change_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && m != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(m))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(m)
}

func (*ProvisioningPolicyChange_Removed) GotenMessage() {}

// Deprecated, Use ProvisioningPolicyChange_Removed.ProtoReflect.Descriptor instead.
func (*ProvisioningPolicyChange_Removed) Descriptor() ([]byte, []int) {
	return edgelq_devices_proto_v1alpha2_provisioning_policy_change_proto_rawDescGZIP(), []int{0, 3}
}

func (m *ProvisioningPolicyChange_Removed) Unmarshal(b []byte) error {
	return proto.Unmarshal(b, m)
}

func (m *ProvisioningPolicyChange_Removed) Marshal() ([]byte, error) {
	return proto.Marshal(m)
}

func (m *ProvisioningPolicyChange_Removed) MarshalJSON() ([]byte, error) {
	return protojson.MarshalOptions{}.Marshal(m)
}

func (m *ProvisioningPolicyChange_Removed) UnmarshalJSON(data []byte) error {
	return protojson.Unmarshal(data, m)
}

func (m *ProvisioningPolicyChange_Removed) GetName() *Name {
	if m != nil {
		return m.Name
	}
	return nil
}

func (m *ProvisioningPolicyChange_Removed) GetViewIndex() int32 {
	if m != nil {
		return m.ViewIndex
	}
	return int32(0)
}

func (m *ProvisioningPolicyChange_Removed) SetName(fv *Name) {
	if m == nil {
		panic(fmt.Errorf("can't set %s on nil %s", "Name", "ProvisioningPolicyChange_Removed"))
	}
	m.Name = fv
}

func (m *ProvisioningPolicyChange_Removed) SetViewIndex(fv int32) {
	if m == nil {
		panic(fmt.Errorf("can't set %s on nil %s", "ViewIndex", "ProvisioningPolicyChange_Removed"))
	}
	m.ViewIndex = fv
}

var edgelq_devices_proto_v1alpha2_provisioning_policy_change_proto preflect.FileDescriptor

var edgelq_devices_proto_v1alpha2_provisioning_policy_change_proto_rawDesc = []byte{
	0x0a, 0x3e, 0x65, 0x64, 0x67, 0x65, 0x6c, 0x71, 0x2f, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x73,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x32, 0x2f,
	0x70, 0x72, 0x6f, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x69, 0x6e, 0x67, 0x5f, 0x70, 0x6f, 0x6c,
	0x69, 0x63, 0x79, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x14, 0x6e, 0x74, 0x74, 0x2e, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x76, 0x31,
	0x61, 0x6c, 0x70, 0x68, 0x61, 0x32, 0x1a, 0x19, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61,
	0x70, 0x69, 0x2f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x20, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x6d, 0x61, 0x73, 0x6b, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x1d, 0x67, 0x6f, 0x74, 0x65, 0x6e, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x67, 0x6f, 0x74, 0x65, 0x6e, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x20, 0x67, 0x6f, 0x74, 0x65, 0x6e, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x37, 0x65, 0x64, 0x67, 0x65, 0x6c, 0x71, 0x2f, 0x64, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x73, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70,
	0x68, 0x61, 0x32, 0x2f, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x69, 0x6e, 0x67,
	0x5f, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x92, 0x08,
	0x0a, 0x18, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x69, 0x6e, 0x67, 0x50, 0x6f,
	0x6c, 0x69, 0x63, 0x79, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x4c, 0x0a, 0x05, 0x61, 0x64,
	0x64, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x34, 0x2e, 0x6e, 0x74, 0x74, 0x2e,
	0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x32,
	0x2e, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x69, 0x6e, 0x67, 0x50, 0x6f, 0x6c,
	0x69, 0x63, 0x79, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x2e, 0x41, 0x64, 0x64, 0x65, 0x64, 0x48,
	0x00, 0x52, 0x05, 0x61, 0x64, 0x64, 0x65, 0x64, 0x12, 0x55, 0x0a, 0x08, 0x6d, 0x6f, 0x64, 0x69,
	0x66, 0x69, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x37, 0x2e, 0x6e, 0x74, 0x74,
	0x2e, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61,
	0x32, 0x2e, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x69, 0x6e, 0x67, 0x50, 0x6f,
	0x6c, 0x69, 0x63, 0x79, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x2e, 0x4d, 0x6f, 0x64, 0x69, 0x66,
	0x69, 0x65, 0x64, 0x48, 0x00, 0x52, 0x08, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x64, 0x12,
	0x52, 0x0a, 0x07, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x36, 0x2e, 0x6e, 0x74, 0x74, 0x2e, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x76,
	0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x32, 0x2e, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x73, 0x69, 0x6f,
	0x6e, 0x69, 0x6e, 0x67, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65,
	0x2e, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x48, 0x00, 0x52, 0x07, 0x63, 0x75, 0x72, 0x72,
	0x65, 0x6e, 0x74, 0x12, 0x52, 0x0a, 0x07, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x36, 0x2e, 0x6e, 0x74, 0x74, 0x2e, 0x64, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x32, 0x2e, 0x50, 0x72, 0x6f, 0x76,
	0x69, 0x73, 0x69, 0x6f, 0x6e, 0x69, 0x6e, 0x67, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x43, 0x68,
	0x61, 0x6e, 0x67, 0x65, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x64, 0x48, 0x00, 0x52, 0x07,
	0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x64, 0x1a, 0x81, 0x01, 0x0a, 0x05, 0x41, 0x64, 0x64, 0x65,
	0x64, 0x12, 0x59, 0x0a, 0x13, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x69, 0x6e,
	0x67, 0x5f, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28,
	0x2e, 0x6e, 0x74, 0x74, 0x2e, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x32, 0x2e, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x69,
	0x6e, 0x67, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x52, 0x12, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x73,
	0x69, 0x6f, 0x6e, 0x69, 0x6e, 0x67, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x12, 0x1d, 0x0a, 0x0a,
	0x76, 0x69, 0x65, 0x77, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x09, 0x76, 0x69, 0x65, 0x77, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x1a, 0xbb, 0x02, 0x0a, 0x08,
	0x4d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x64, 0x12, 0x2e, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x1a, 0xb2, 0xda, 0x21, 0x16, 0x0a, 0x14, 0x0a, 0x12,
	0x50, 0x72, 0x6f, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x69, 0x6e, 0x67, 0x50, 0x6f, 0x6c, 0x69,
	0x63, 0x79, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x59, 0x0a, 0x13, 0x70, 0x72, 0x6f, 0x76,
	0x69, 0x73, 0x69, 0x6f, 0x6e, 0x69, 0x6e, 0x67, 0x5f, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x6e, 0x74, 0x74, 0x2e, 0x64, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x32, 0x2e, 0x50, 0x72, 0x6f,
	0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x69, 0x6e, 0x67, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x52,
	0x12, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x69, 0x6e, 0x67, 0x50, 0x6f, 0x6c,
	0x69, 0x63, 0x79, 0x12, 0x55, 0x0a, 0x0a, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x6d, 0x61, 0x73,
	0x6b, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4d,
	0x61, 0x73, 0x6b, 0x42, 0x1a, 0xb2, 0xda, 0x21, 0x16, 0x32, 0x14, 0x0a, 0x12, 0x50, 0x72, 0x6f,
	0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x69, 0x6e, 0x67, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x52,
	0x09, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x4d, 0x61, 0x73, 0x6b, 0x12, 0x2e, 0x0a, 0x13, 0x70, 0x72,
	0x65, 0x76, 0x69, 0x6f, 0x75, 0x73, 0x5f, 0x76, 0x69, 0x65, 0x77, 0x5f, 0x69, 0x6e, 0x64, 0x65,
	0x78, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x11, 0x70, 0x72, 0x65, 0x76, 0x69, 0x6f, 0x75,
	0x73, 0x56, 0x69, 0x65, 0x77, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x1d, 0x0a, 0x0a, 0x76, 0x69,
	0x65, 0x77, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09,
	0x76, 0x69, 0x65, 0x77, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x1a, 0x64, 0x0a, 0x07, 0x43, 0x75, 0x72,
	0x72, 0x65, 0x6e, 0x74, 0x12, 0x59, 0x0a, 0x13, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x73, 0x69, 0x6f,
	0x6e, 0x69, 0x6e, 0x67, 0x5f, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x28, 0x2e, 0x6e, 0x74, 0x74, 0x2e, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e,
	0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x32, 0x2e, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x73, 0x69,
	0x6f, 0x6e, 0x69, 0x6e, 0x67, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x52, 0x12, 0x70, 0x72, 0x6f,
	0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x69, 0x6e, 0x67, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x1a,
	0x58, 0x0a, 0x07, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x64, 0x12, 0x2e, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x1a, 0xb2, 0xda, 0x21, 0x16, 0x0a, 0x14,
	0x0a, 0x12, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x69, 0x6e, 0x67, 0x50, 0x6f,
	0x6c, 0x69, 0x63, 0x79, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x76, 0x69,
	0x65, 0x77, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09,
	0x76, 0x69, 0x65, 0x77, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x3a, 0x18, 0x9a, 0xd9, 0x21, 0x14, 0x0a,
	0x12, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x69, 0x6e, 0x67, 0x50, 0x6f, 0x6c,
	0x69, 0x63, 0x79, 0x42, 0x0d, 0x0a, 0x0b, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x42, 0xa1, 0x01, 0xe8, 0xde, 0x21, 0x00, 0x0a, 0x1b, 0x63, 0x6f, 0x6d, 0x2e, 0x6e,
	0x74, 0x74, 0x2e, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x70, 0x62, 0x2e, 0x76, 0x31,
	0x61, 0x6c, 0x70, 0x68, 0x61, 0x32, 0x42, 0x1d, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x73, 0x69, 0x6f,
	0x6e, 0x69, 0x6e, 0x67, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65,
	0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x00, 0x5a, 0x5d, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x77, 0x61, 0x6e, 0x2f, 0x65, 0x64, 0x67,
	0x65, 0x6c, 0x71, 0x2f, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2f, 0x72, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x73, 0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x32, 0x2f, 0x70,
	0x72, 0x6f, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x69, 0x6e, 0x67, 0x5f, 0x70, 0x6f, 0x6c, 0x69,
	0x63, 0x79, 0x3b, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x69, 0x6e, 0x67, 0x5f,
	0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	edgelq_devices_proto_v1alpha2_provisioning_policy_change_proto_rawDescOnce sync.Once
	edgelq_devices_proto_v1alpha2_provisioning_policy_change_proto_rawDescData = edgelq_devices_proto_v1alpha2_provisioning_policy_change_proto_rawDesc
)

func edgelq_devices_proto_v1alpha2_provisioning_policy_change_proto_rawDescGZIP() []byte {
	edgelq_devices_proto_v1alpha2_provisioning_policy_change_proto_rawDescOnce.Do(func() {
		edgelq_devices_proto_v1alpha2_provisioning_policy_change_proto_rawDescData = protoimpl.X.CompressGZIP(edgelq_devices_proto_v1alpha2_provisioning_policy_change_proto_rawDescData)
	})
	return edgelq_devices_proto_v1alpha2_provisioning_policy_change_proto_rawDescData
}

var edgelq_devices_proto_v1alpha2_provisioning_policy_change_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var edgelq_devices_proto_v1alpha2_provisioning_policy_change_proto_goTypes = []interface{}{
	(*ProvisioningPolicyChange)(nil),          // 0: ntt.devices.v1alpha2.ProvisioningPolicyChange
	(*ProvisioningPolicyChange_Added)(nil),    // 1: ntt.devices.v1alpha2.ProvisioningPolicyChange.Added
	(*ProvisioningPolicyChange_Modified)(nil), // 2: ntt.devices.v1alpha2.ProvisioningPolicyChange.Modified
	(*ProvisioningPolicyChange_Current)(nil),  // 3: ntt.devices.v1alpha2.ProvisioningPolicyChange.Current
	(*ProvisioningPolicyChange_Removed)(nil),  // 4: ntt.devices.v1alpha2.ProvisioningPolicyChange.Removed
	(*ProvisioningPolicy)(nil),                // 5: ntt.devices.v1alpha2.ProvisioningPolicy
	(*ProvisioningPolicy_FieldMask)(nil),      // 6: ntt.devices.v1alpha2.ProvisioningPolicy_FieldMask
}
var edgelq_devices_proto_v1alpha2_provisioning_policy_change_proto_depIdxs = []int32{
	1, // 0: ntt.devices.v1alpha2.ProvisioningPolicyChange.added:type_name -> ntt.devices.v1alpha2.ProvisioningPolicyChange.Added
	2, // 1: ntt.devices.v1alpha2.ProvisioningPolicyChange.modified:type_name -> ntt.devices.v1alpha2.ProvisioningPolicyChange.Modified
	3, // 2: ntt.devices.v1alpha2.ProvisioningPolicyChange.current:type_name -> ntt.devices.v1alpha2.ProvisioningPolicyChange.Current
	4, // 3: ntt.devices.v1alpha2.ProvisioningPolicyChange.removed:type_name -> ntt.devices.v1alpha2.ProvisioningPolicyChange.Removed
	5, // 4: ntt.devices.v1alpha2.ProvisioningPolicyChange.Added.provisioning_policy:type_name -> ntt.devices.v1alpha2.ProvisioningPolicy
	5, // 5: ntt.devices.v1alpha2.ProvisioningPolicyChange.Modified.provisioning_policy:type_name -> ntt.devices.v1alpha2.ProvisioningPolicy
	6, // 6: ntt.devices.v1alpha2.ProvisioningPolicyChange.Modified.field_mask:type_name -> ntt.devices.v1alpha2.ProvisioningPolicy_FieldMask
	5, // 7: ntt.devices.v1alpha2.ProvisioningPolicyChange.Current.provisioning_policy:type_name -> ntt.devices.v1alpha2.ProvisioningPolicy
	8, // [8:8] is the sub-list for method output_type
	8, // [8:8] is the sub-list for method input_type
	8, // [8:8] is the sub-list for extension type_name
	8, // [8:8] is the sub-list for extension extendee
	0, // [0:8] is the sub-list for field type_name
}

func init() { edgelq_devices_proto_v1alpha2_provisioning_policy_change_proto_init() }
func edgelq_devices_proto_v1alpha2_provisioning_policy_change_proto_init() {
	if edgelq_devices_proto_v1alpha2_provisioning_policy_change_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {

		edgelq_devices_proto_v1alpha2_provisioning_policy_change_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProvisioningPolicyChange); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		edgelq_devices_proto_v1alpha2_provisioning_policy_change_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProvisioningPolicyChange_Added); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		edgelq_devices_proto_v1alpha2_provisioning_policy_change_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProvisioningPolicyChange_Modified); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		edgelq_devices_proto_v1alpha2_provisioning_policy_change_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProvisioningPolicyChange_Current); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		edgelq_devices_proto_v1alpha2_provisioning_policy_change_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProvisioningPolicyChange_Removed); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}

	edgelq_devices_proto_v1alpha2_provisioning_policy_change_proto_msgTypes[0].OneofWrappers = []interface{}{
		(*ProvisioningPolicyChange_Added_)(nil),
		(*ProvisioningPolicyChange_Modified_)(nil),
		(*ProvisioningPolicyChange_Current_)(nil),
		(*ProvisioningPolicyChange_Removed_)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: edgelq_devices_proto_v1alpha2_provisioning_policy_change_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           edgelq_devices_proto_v1alpha2_provisioning_policy_change_proto_goTypes,
		DependencyIndexes: edgelq_devices_proto_v1alpha2_provisioning_policy_change_proto_depIdxs,
		MessageInfos:      edgelq_devices_proto_v1alpha2_provisioning_policy_change_proto_msgTypes,
	}.Build()
	edgelq_devices_proto_v1alpha2_provisioning_policy_change_proto = out.File
	edgelq_devices_proto_v1alpha2_provisioning_policy_change_proto_rawDesc = nil
	edgelq_devices_proto_v1alpha2_provisioning_policy_change_proto_goTypes = nil
	edgelq_devices_proto_v1alpha2_provisioning_policy_change_proto_depIdxs = nil
}
