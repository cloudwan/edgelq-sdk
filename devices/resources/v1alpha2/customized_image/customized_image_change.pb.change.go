// Code generated by protoc-gen-goten-resource
// Resource change: CustomizedImageChange
// DO NOT EDIT!!!

package customized_image

import (
	gotenresource "github.com/cloudwan/goten-sdk/runtime/resource"
)

// proto imports
import (
	project "github.com/cloudwan/edgelq-sdk/devices/resources/v1alpha2/project"
	field_mask "google.golang.org/genproto/protobuf/field_mask"
)

// ensure the imports are used
var (
	_ = new(gotenresource.ListQuery)
)

// make sure we're using proto imports
var (
	_ = &project.Project{}
	_ = &field_mask.FieldMask{}
)

func (c *CustomizedImageChange) IsAdd() bool {
	if c == nil {
		return false
	}
	_, ok := c.ChangeType.(*CustomizedImageChange_Added_)
	return ok
}

func (c *CustomizedImageChange) IsModify() bool {
	if c == nil {
		return false
	}
	_, ok := c.ChangeType.(*CustomizedImageChange_Modified_)
	return ok
}

func (c *CustomizedImageChange) IsCurrent() bool {
	if c == nil {
		return false
	}
	_, ok := c.ChangeType.(*CustomizedImageChange_Current_)
	return ok
}

func (c *CustomizedImageChange) IsDelete() bool {
	if c == nil {
		return false
	}
	_, ok := c.ChangeType.(*CustomizedImageChange_Removed_)
	return ok
}

func (c *CustomizedImageChange) GetCurrentViewIndex() int32 {
	switch cType := c.ChangeType.(type) {
	case *CustomizedImageChange_Added_:
		return cType.Added.ViewIndex
	case *CustomizedImageChange_Modified_:
		return cType.Modified.ViewIndex
	}
	return 0
}

func (c *CustomizedImageChange) GetPreviousViewIndex() int32 {
	switch cType := c.ChangeType.(type) {
	case *CustomizedImageChange_Removed_:
		return cType.Removed.ViewIndex
	case *CustomizedImageChange_Modified_:
		return cType.Modified.PreviousViewIndex
	}
	return 0
}

func (c *CustomizedImageChange) GetCustomizedImage() *CustomizedImage {
	if c == nil {
		return nil
	}
	switch cType := c.ChangeType.(type) {
	case *CustomizedImageChange_Added_:
		return cType.Added.CustomizedImage
	case *CustomizedImageChange_Modified_:
		return cType.Modified.CustomizedImage
	case *CustomizedImageChange_Current_:
		return cType.Current.CustomizedImage
	case *CustomizedImageChange_Removed_:
		return nil
	}
	return nil
}

func (c *CustomizedImageChange) GetRawResource() gotenresource.Resource {
	return c.GetCustomizedImage()
}

func (c *CustomizedImageChange) GetCustomizedImageName() *Name {
	if c == nil {
		return nil
	}
	switch cType := c.ChangeType.(type) {
	case *CustomizedImageChange_Added_:
		return cType.Added.CustomizedImage.GetName()
	case *CustomizedImageChange_Modified_:
		return cType.Modified.Name
	case *CustomizedImageChange_Current_:
		return cType.Current.CustomizedImage.GetName()
	case *CustomizedImageChange_Removed_:
		return cType.Removed.Name
	}
	return nil
}

func (c *CustomizedImageChange) GetRawName() gotenresource.Name {
	return c.GetCustomizedImageName()
}

func (c *CustomizedImageChange) SetAddedRaw(snapshot gotenresource.Resource, idx int) {
	c.ChangeType = &CustomizedImageChange_Added_{
		Added: &CustomizedImageChange_Added{
			CustomizedImage: snapshot.(*CustomizedImage),
			ViewIndex:       int32(idx),
		},
	}
}

func (c *CustomizedImageChange) SetModifiedRaw(name gotenresource.Name, snapshot gotenresource.Resource, prevIdx int, newIdx int) {
	c.ChangeType = &CustomizedImageChange_Modified_{
		Modified: &CustomizedImageChange_Modified{
			Name:              name.(*Name),
			CustomizedImage:   snapshot.(*CustomizedImage),
			PreviousViewIndex: int32(prevIdx),
			ViewIndex:         int32(newIdx),
		},
	}
}

func (c *CustomizedImageChange) SetCurrentRaw(snapshot gotenresource.Resource) {
	c.ChangeType = &CustomizedImageChange_Current_{
		Current: &CustomizedImageChange_Current{
			CustomizedImage: snapshot.(*CustomizedImage),
		},
	}
}

func (c *CustomizedImageChange) SetDeletedRaw(name gotenresource.Name, idx int) {
	c.ChangeType = &CustomizedImageChange_Removed_{
		Removed: &CustomizedImageChange_Removed{
			Name:      name.(*Name),
			ViewIndex: int32(idx),
		},
	}
}
