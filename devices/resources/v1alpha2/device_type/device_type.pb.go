// Code generated by protoc-gen-goten-go
// File: edgelq/devices/proto/v1alpha2/device_type.proto
// DO NOT EDIT!!!

package device_type

import (
	"fmt"
	"reflect"
	"sync"

	"google.golang.org/protobuf/encoding/protojson"
	"google.golang.org/protobuf/proto"
	preflect "google.golang.org/protobuf/reflect/protoreflect"
	"google.golang.org/protobuf/runtime/protoimpl"
)

// proto imports
import (
	meta "github.com/cloudwan/goten-sdk/types/meta"
)

// Reference imports to suppress errors if they are not otherwise used.
var (
	_ = fmt.Errorf
	_ = reflect.Method{}
	_ = sync.Once{}

	_ = protojson.MarshalOptions{}
	_ = proto.MarshalOptions{}
	_ = preflect.Value{}
	_ = protoimpl.DescBuilder{}
)

// make sure we're using proto imports
var (
	_ = &meta.Meta{}
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Hardware (e.g. Generic, Raspberry Pi)
type DeviceType_Hardware int32

const (
	DeviceType_HARDWARE_UNSPECIFIED DeviceType_Hardware = 0
	DeviceType_GENERIC              DeviceType_Hardware = 1
	DeviceType_RASPBERRYPI          DeviceType_Hardware = 2
)

var (
	DeviceType_Hardware_name = map[int32]string{
		0: "HARDWARE_UNSPECIFIED",
		1: "GENERIC",
		2: "RASPBERRYPI",
	}

	DeviceType_Hardware_value = map[string]int32{
		"HARDWARE_UNSPECIFIED": 0,
		"GENERIC":              1,
		"RASPBERRYPI":          2,
	}
)

func (x DeviceType_Hardware) Enum() *DeviceType_Hardware {
	p := new(DeviceType_Hardware)
	*p = x
	return p
}

func (x DeviceType_Hardware) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), preflect.EnumNumber(x))
}

func (DeviceType_Hardware) Descriptor() preflect.EnumDescriptor {
	return edgelq_devices_proto_v1alpha2_device_type_proto_enumTypes[0].Descriptor()
}

func (DeviceType_Hardware) Type() preflect.EnumType {
	return &edgelq_devices_proto_v1alpha2_device_type_proto_enumTypes[0]
}

func (x DeviceType_Hardware) Number() preflect.EnumNumber {
	return preflect.EnumNumber(x)
}

// Deprecated, Use DeviceType_Hardware.ProtoReflect.Descriptor instead.
func (DeviceType_Hardware) EnumDescriptor() ([]byte, []int) {
	return edgelq_devices_proto_v1alpha2_device_type_proto_rawDescGZIP(), []int{0, 0}
}

// Architecture name (e.g. amd64)
type DeviceType_Architecture int32

const (
	DeviceType_ARCHITECTURE_UNSPECIFIED DeviceType_Architecture = 0
	DeviceType_AMD64                    DeviceType_Architecture = 1
	DeviceType_ARM64                    DeviceType_Architecture = 2
)

var (
	DeviceType_Architecture_name = map[int32]string{
		0: "ARCHITECTURE_UNSPECIFIED",
		1: "AMD64",
		2: "ARM64",
	}

	DeviceType_Architecture_value = map[string]int32{
		"ARCHITECTURE_UNSPECIFIED": 0,
		"AMD64":                    1,
		"ARM64":                    2,
	}
)

func (x DeviceType_Architecture) Enum() *DeviceType_Architecture {
	p := new(DeviceType_Architecture)
	*p = x
	return p
}

func (x DeviceType_Architecture) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), preflect.EnumNumber(x))
}

func (DeviceType_Architecture) Descriptor() preflect.EnumDescriptor {
	return edgelq_devices_proto_v1alpha2_device_type_proto_enumTypes[1].Descriptor()
}

func (DeviceType_Architecture) Type() preflect.EnumType {
	return &edgelq_devices_proto_v1alpha2_device_type_proto_enumTypes[1]
}

func (x DeviceType_Architecture) Number() preflect.EnumNumber {
	return preflect.EnumNumber(x)
}

// Deprecated, Use DeviceType_Architecture.ProtoReflect.Descriptor instead.
func (DeviceType_Architecture) EnumDescriptor() ([]byte, []int) {
	return edgelq_devices_proto_v1alpha2_device_type_proto_rawDescGZIP(), []int{0, 1}
}

// DeviceType Resource
type DeviceType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
	// Name of DeviceType
	// When creating a new instance, this field is optional and if not provided,
	// it will be generated automatically. Last ID segment must conform to the
	// following regex: [a-z][a-z0-9\\-]{0,28}[a-z0-9]
	Name     *Name      `protobuf:"bytes,1,opt,customtype=Name,name=name,proto3" json:"name,omitempty" firestore:"name"`
	Metadata *meta.Meta `protobuf:"bytes,2,opt,name=metadata,proto3" json:"metadata,omitempty" firestore:"metadata"`
	// Display name of Device Type
	DisplayName  string                  `protobuf:"bytes,3,opt,name=display_name,json=displayName,proto3" json:"display_name,omitempty" firestore:"displayName"`
	Hardware     DeviceType_Hardware     `protobuf:"varint,4,opt,name=hardware,proto3,enum=ntt.devices.v1alpha2.DeviceType_Hardware" json:"hardware,omitempty" firestore:"hardware"`
	Architecture DeviceType_Architecture `protobuf:"varint,5,opt,name=architecture,proto3,enum=ntt.devices.v1alpha2.DeviceType_Architecture" json:"architecture,omitempty" firestore:"architecture"`
	// Description of the Device Type
	Description string `protobuf:"bytes,6,opt,name=description,proto3" json:"description,omitempty" firestore:"description"`
}

func (m *DeviceType) Reset() {
	*m = DeviceType{}
	if protoimpl.UnsafeEnabled {
		mi := &edgelq_devices_proto_v1alpha2_device_type_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(m))
		ms.StoreMessageInfo(mi)
	}
}

func (m *DeviceType) String() string {
	return protoimpl.X.MessageStringOf(m)
}

func (*DeviceType) ProtoMessage() {}

func (m *DeviceType) ProtoReflect() preflect.Message {
	mi := &edgelq_devices_proto_v1alpha2_device_type_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && m != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(m))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(m)
}

func (*DeviceType) GotenMessage() {}

// Deprecated, Use DeviceType.ProtoReflect.Descriptor instead.
func (*DeviceType) Descriptor() ([]byte, []int) {
	return edgelq_devices_proto_v1alpha2_device_type_proto_rawDescGZIP(), []int{0}
}

func (m *DeviceType) Unmarshal(b []byte) error {
	return proto.Unmarshal(b, m)
}

func (m *DeviceType) Marshal() ([]byte, error) {
	return proto.Marshal(m)
}

func (m *DeviceType) MarshalJSON() ([]byte, error) {
	return protojson.MarshalOptions{}.Marshal(m)
}

func (m *DeviceType) UnmarshalJSON(data []byte) error {
	return protojson.Unmarshal(data, m)
}

func (m *DeviceType) GetName() *Name {
	if m != nil {
		return m.Name
	}
	return nil
}

func (m *DeviceType) GetMetadata() *meta.Meta {
	if m != nil {
		return m.Metadata
	}
	return nil
}

func (m *DeviceType) GetDisplayName() string {
	if m != nil {
		return m.DisplayName
	}
	return ""
}

func (m *DeviceType) GetHardware() DeviceType_Hardware {
	if m != nil {
		return m.Hardware
	}
	return DeviceType_HARDWARE_UNSPECIFIED
}

func (m *DeviceType) GetArchitecture() DeviceType_Architecture {
	if m != nil {
		return m.Architecture
	}
	return DeviceType_ARCHITECTURE_UNSPECIFIED
}

func (m *DeviceType) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *DeviceType) SetName(fv *Name) {
	if m == nil {
		panic(fmt.Errorf("can't set %s on nil %s", "Name", "DeviceType"))
	}
	m.Name = fv
}

func (m *DeviceType) SetMetadata(fv *meta.Meta) {
	if m == nil {
		panic(fmt.Errorf("can't set %s on nil %s", "Metadata", "DeviceType"))
	}
	m.Metadata = fv
}

func (m *DeviceType) SetDisplayName(fv string) {
	if m == nil {
		panic(fmt.Errorf("can't set %s on nil %s", "DisplayName", "DeviceType"))
	}
	m.DisplayName = fv
}

func (m *DeviceType) SetHardware(fv DeviceType_Hardware) {
	if m == nil {
		panic(fmt.Errorf("can't set %s on nil %s", "Hardware", "DeviceType"))
	}
	m.Hardware = fv
}

func (m *DeviceType) SetArchitecture(fv DeviceType_Architecture) {
	if m == nil {
		panic(fmt.Errorf("can't set %s on nil %s", "Architecture", "DeviceType"))
	}
	m.Architecture = fv
}

func (m *DeviceType) SetDescription(fv string) {
	if m == nil {
		panic(fmt.Errorf("can't set %s on nil %s", "Description", "DeviceType"))
	}
	m.Description = fv
}

var edgelq_devices_proto_v1alpha2_device_type_proto preflect.FileDescriptor

var edgelq_devices_proto_v1alpha2_device_type_proto_rawDesc = []byte{
	0x0a, 0x2f, 0x65, 0x64, 0x67, 0x65, 0x6c, 0x71, 0x2f, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x73,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x32, 0x2f,
	0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x14, 0x6e, 0x74, 0x74, 0x2e, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x76,
	0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x32, 0x1a, 0x19, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f,
	0x61, 0x70, 0x69, 0x2f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x20, 0x67, 0x6f, 0x74, 0x65, 0x6e, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1d, 0x67, 0x6f, 0x74, 0x65, 0x6e, 0x2f, 0x61, 0x6e, 0x6e, 0x6f,
	0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x67, 0x6f, 0x74, 0x65, 0x6e, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x20, 0x67, 0x6f, 0x74, 0x65, 0x6e, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1d, 0x67, 0x6f, 0x74, 0x65, 0x6e, 0x2f, 0x61, 0x6e, 0x6e,
	0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x74, 0x65, 0x6e, 0x2f, 0x61, 0x6e, 0x6e, 0x6f,
	0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x20, 0x65, 0x64, 0x67, 0x65, 0x6c, 0x71, 0x2f, 0x69, 0x61,
	0x6d, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x69, 0x61,
	0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x24, 0x65, 0x64, 0x67, 0x65, 0x6c, 0x71, 0x2f,
	0x61, 0x75, 0x64, 0x69, 0x74, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x2f, 0x61, 0x75, 0x64, 0x69, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x16, 0x67,
	0x6f, 0x74, 0x65, 0x6e, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2f, 0x6d, 0x65, 0x74, 0x61, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x26, 0x65, 0x64, 0x67, 0x65, 0x6c, 0x71, 0x2f, 0x69, 0x61,
	0x6d, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x32,
	0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xb3, 0x04,
	0x0a, 0x0a, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x26, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x12, 0xb2, 0xda, 0x21, 0x0e,
	0x0a, 0x0c, 0x0a, 0x0a, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x2d, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x67, 0x6f, 0x74, 0x65, 0x6e, 0x2e, 0x74,
	0x79, 0x70, 0x65, 0x73, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x12, 0x21, 0x0a, 0x0c, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x69, 0x73, 0x70, 0x6c,
	0x61, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x45, 0x0a, 0x08, 0x68, 0x61, 0x72, 0x64, 0x77, 0x61,
	0x72, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x29, 0x2e, 0x6e, 0x74, 0x74, 0x2e, 0x64,
	0x65, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x32, 0x2e,
	0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x2e, 0x48, 0x61, 0x72, 0x64, 0x77,
	0x61, 0x72, 0x65, 0x52, 0x08, 0x68, 0x61, 0x72, 0x64, 0x77, 0x61, 0x72, 0x65, 0x12, 0x51, 0x0a,
	0x0c, 0x61, 0x72, 0x63, 0x68, 0x69, 0x74, 0x65, 0x63, 0x74, 0x75, 0x72, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x2d, 0x2e, 0x6e, 0x74, 0x74, 0x2e, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65,
	0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x32, 0x2e, 0x44, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x54, 0x79, 0x70, 0x65, 0x2e, 0x41, 0x72, 0x63, 0x68, 0x69, 0x74, 0x65, 0x63, 0x74, 0x75,
	0x72, 0x65, 0x52, 0x0c, 0x61, 0x72, 0x63, 0x68, 0x69, 0x74, 0x65, 0x63, 0x74, 0x75, 0x72, 0x65,
	0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x22, 0x42, 0x0a, 0x08, 0x48, 0x61, 0x72, 0x64, 0x77, 0x61, 0x72, 0x65, 0x12, 0x18,
	0x0a, 0x14, 0x48, 0x41, 0x52, 0x44, 0x57, 0x41, 0x52, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45,
	0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x47, 0x45, 0x4e, 0x45,
	0x52, 0x49, 0x43, 0x10, 0x01, 0x12, 0x0f, 0x0a, 0x0b, 0x52, 0x41, 0x53, 0x50, 0x42, 0x45, 0x52,
	0x52, 0x59, 0x50, 0x49, 0x10, 0x02, 0x22, 0x42, 0x0a, 0x0c, 0x41, 0x72, 0x63, 0x68, 0x69, 0x74,
	0x65, 0x63, 0x74, 0x75, 0x72, 0x65, 0x12, 0x1c, 0x0a, 0x18, 0x41, 0x52, 0x43, 0x48, 0x49, 0x54,
	0x45, 0x43, 0x54, 0x55, 0x52, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49,
	0x45, 0x44, 0x10, 0x00, 0x12, 0x09, 0x0a, 0x05, 0x41, 0x4d, 0x44, 0x36, 0x34, 0x10, 0x01, 0x12,
	0x09, 0x0a, 0x05, 0x41, 0x52, 0x4d, 0x36, 0x34, 0x10, 0x02, 0x3a, 0x67, 0xea, 0x41, 0x3a, 0x0a,
	0x1d, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x6c, 0x71, 0x2e,
	0x63, 0x6f, 0x6d, 0x2f, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x19,
	0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x73, 0x2f, 0x7b, 0x64, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x7d, 0x92, 0xd9, 0x21, 0x1a, 0x0a, 0x0b, 0x64,
	0x65, 0x76, 0x69, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x73, 0x12, 0x0b, 0x64, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x73, 0xda, 0x94, 0x23, 0x08, 0x12, 0x06, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x42, 0xb3, 0x02, 0xe8, 0xde, 0x21, 0x01, 0xd2, 0xff, 0xd0, 0x02, 0x52, 0x0a,
	0x11, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x73, 0x74, 0x6f,
	0x72, 0x65, 0x12, 0x3d, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x63,
	0x6c, 0x6f, 0x75, 0x64, 0x77, 0x61, 0x6e, 0x2f, 0x65, 0x64, 0x67, 0x65, 0x6c, 0x71, 0x2f, 0x64,
	0x65, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2f, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2f, 0x76, 0x31, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x32, 0x2f, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0xa2, 0x80, 0xd1, 0x02, 0x54, 0x0a, 0x12, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x5f, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x3e, 0x67, 0x69, 0x74, 0x68,
	0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x77, 0x61, 0x6e, 0x2f,
	0x65, 0x64, 0x67, 0x65, 0x6c, 0x71, 0x2f, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2f, 0x61,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x32, 0x2f, 0x64,
	0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x0a, 0x1b, 0x63, 0x6f, 0x6d, 0x2e,
	0x6e, 0x74, 0x74, 0x2e, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x70, 0x62, 0x2e, 0x76,
	0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x32, 0x42, 0x0f, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x54,
	0x79, 0x70, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x4d, 0x67, 0x69, 0x74, 0x68,
	0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x77, 0x61, 0x6e, 0x2f,
	0x65, 0x64, 0x67, 0x65, 0x6c, 0x71, 0x2f, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2f, 0x72,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61,
	0x32, 0x2f, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x3b, 0x64, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	edgelq_devices_proto_v1alpha2_device_type_proto_rawDescOnce sync.Once
	edgelq_devices_proto_v1alpha2_device_type_proto_rawDescData = edgelq_devices_proto_v1alpha2_device_type_proto_rawDesc
)

func edgelq_devices_proto_v1alpha2_device_type_proto_rawDescGZIP() []byte {
	edgelq_devices_proto_v1alpha2_device_type_proto_rawDescOnce.Do(func() {
		edgelq_devices_proto_v1alpha2_device_type_proto_rawDescData = protoimpl.X.CompressGZIP(edgelq_devices_proto_v1alpha2_device_type_proto_rawDescData)
	})
	return edgelq_devices_proto_v1alpha2_device_type_proto_rawDescData
}

var edgelq_devices_proto_v1alpha2_device_type_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var edgelq_devices_proto_v1alpha2_device_type_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var edgelq_devices_proto_v1alpha2_device_type_proto_goTypes = []interface{}{
	(DeviceType_Hardware)(0),     // 0: ntt.devices.v1alpha2.DeviceType_Hardware
	(DeviceType_Architecture)(0), // 1: ntt.devices.v1alpha2.DeviceType_Architecture
	(*DeviceType)(nil),           // 2: ntt.devices.v1alpha2.DeviceType
	(*meta.Meta)(nil),            // 3: goten.types.Meta
}
var edgelq_devices_proto_v1alpha2_device_type_proto_depIdxs = []int32{
	3, // 0: ntt.devices.v1alpha2.DeviceType.metadata:type_name -> goten.types.Meta
	0, // 1: ntt.devices.v1alpha2.DeviceType.hardware:type_name -> ntt.devices.v1alpha2.DeviceType_Hardware
	1, // 2: ntt.devices.v1alpha2.DeviceType.architecture:type_name -> ntt.devices.v1alpha2.DeviceType_Architecture
	3, // [3:3] is the sub-list for method output_type
	3, // [3:3] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { edgelq_devices_proto_v1alpha2_device_type_proto_init() }
func edgelq_devices_proto_v1alpha2_device_type_proto_init() {
	if edgelq_devices_proto_v1alpha2_device_type_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {

		edgelq_devices_proto_v1alpha2_device_type_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeviceType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}

	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: edgelq_devices_proto_v1alpha2_device_type_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           edgelq_devices_proto_v1alpha2_device_type_proto_goTypes,
		DependencyIndexes: edgelq_devices_proto_v1alpha2_device_type_proto_depIdxs,
		EnumInfos:         edgelq_devices_proto_v1alpha2_device_type_proto_enumTypes,
		MessageInfos:      edgelq_devices_proto_v1alpha2_device_type_proto_msgTypes,
	}.Build()
	edgelq_devices_proto_v1alpha2_device_type_proto = out.File
	edgelq_devices_proto_v1alpha2_device_type_proto_rawDesc = nil
	edgelq_devices_proto_v1alpha2_device_type_proto_goTypes = nil
	edgelq_devices_proto_v1alpha2_device_type_proto_depIdxs = nil
}
