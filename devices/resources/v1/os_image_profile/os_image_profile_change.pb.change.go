// Code generated by protoc-gen-goten-resource
// Resource change: OsImageProfileChange
// DO NOT EDIT!!!

package os_image_profile

import (
	gotenresource "github.com/cloudwan/goten-sdk/runtime/resource"
)

// proto imports
import (
	project "github.com/cloudwan/edgelq-sdk/devices/resources/v1/project"
	fieldmaskpb "google.golang.org/protobuf/types/known/fieldmaskpb"
)

// ensure the imports are used
var (
	_ = new(gotenresource.ListQuery)
)

// make sure we're using proto imports
var (
	_ = &project.Project{}
	_ = &fieldmaskpb.FieldMask{}
)

func (c *OsImageProfileChange) IsAdd() bool {
	if c == nil {
		return false
	}
	_, ok := c.ChangeType.(*OsImageProfileChange_Added_)
	return ok
}

func (c *OsImageProfileChange) IsModify() bool {
	if c == nil {
		return false
	}
	_, ok := c.ChangeType.(*OsImageProfileChange_Modified_)
	return ok
}

func (c *OsImageProfileChange) IsCurrent() bool {
	if c == nil {
		return false
	}
	_, ok := c.ChangeType.(*OsImageProfileChange_Current_)
	return ok
}

func (c *OsImageProfileChange) IsDelete() bool {
	if c == nil {
		return false
	}
	_, ok := c.ChangeType.(*OsImageProfileChange_Removed_)
	return ok
}

func (c *OsImageProfileChange) GetCurrentViewIndex() int32 {
	switch cType := c.ChangeType.(type) {
	case *OsImageProfileChange_Added_:
		return cType.Added.ViewIndex
	case *OsImageProfileChange_Modified_:
		return cType.Modified.ViewIndex
	}
	return 0
}

func (c *OsImageProfileChange) GetPreviousViewIndex() int32 {
	switch cType := c.ChangeType.(type) {
	case *OsImageProfileChange_Removed_:
		return cType.Removed.ViewIndex
	case *OsImageProfileChange_Modified_:
		return cType.Modified.PreviousViewIndex
	}
	return 0
}

func (c *OsImageProfileChange) GetOsImageProfile() *OsImageProfile {
	if c == nil {
		return nil
	}
	switch cType := c.ChangeType.(type) {
	case *OsImageProfileChange_Added_:
		return cType.Added.OsImageProfile
	case *OsImageProfileChange_Modified_:
		return cType.Modified.OsImageProfile
	case *OsImageProfileChange_Current_:
		return cType.Current.OsImageProfile
	case *OsImageProfileChange_Removed_:
		return nil
	}
	return nil
}

func (c *OsImageProfileChange) GetRawResource() gotenresource.Resource {
	return c.GetOsImageProfile()
}

func (c *OsImageProfileChange) GetOsImageProfileName() *Name {
	if c == nil {
		return nil
	}
	switch cType := c.ChangeType.(type) {
	case *OsImageProfileChange_Added_:
		return cType.Added.OsImageProfile.GetName()
	case *OsImageProfileChange_Modified_:
		return cType.Modified.Name
	case *OsImageProfileChange_Current_:
		return cType.Current.OsImageProfile.GetName()
	case *OsImageProfileChange_Removed_:
		return cType.Removed.Name
	}
	return nil
}

func (c *OsImageProfileChange) GetRawName() gotenresource.Name {
	return c.GetOsImageProfileName()
}

func (c *OsImageProfileChange) SetAddedRaw(snapshot gotenresource.Resource, idx int) {
	c.ChangeType = &OsImageProfileChange_Added_{
		Added: &OsImageProfileChange_Added{
			OsImageProfile: snapshot.(*OsImageProfile),
			ViewIndex:      int32(idx),
		},
	}
}

func (c *OsImageProfileChange) SetModifiedRaw(name gotenresource.Name, snapshot gotenresource.Resource, prevIdx int, newIdx int) {
	c.ChangeType = &OsImageProfileChange_Modified_{
		Modified: &OsImageProfileChange_Modified{
			Name:              name.(*Name),
			OsImageProfile:    snapshot.(*OsImageProfile),
			PreviousViewIndex: int32(prevIdx),
			ViewIndex:         int32(newIdx),
		},
	}
}

func (c *OsImageProfileChange) SetCurrentRaw(snapshot gotenresource.Resource) {
	c.ChangeType = &OsImageProfileChange_Current_{
		Current: &OsImageProfileChange_Current{
			OsImageProfile: snapshot.(*OsImageProfile),
		},
	}
}

func (c *OsImageProfileChange) SetDeletedRaw(name gotenresource.Name, idx int) {
	c.ChangeType = &OsImageProfileChange_Removed_{
		Removed: &OsImageProfileChange_Removed{
			Name:      name.(*Name),
			ViewIndex: int32(idx),
		},
	}
}
