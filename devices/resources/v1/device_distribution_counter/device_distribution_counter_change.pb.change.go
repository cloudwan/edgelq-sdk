// Code generated by protoc-gen-goten-resource
// Resource change: DeviceDistributionCounterChange
// DO NOT EDIT!!!

package device_distribution_counter

import (
	gotenresource "github.com/cloudwan/goten-sdk/runtime/resource"
)

// proto imports
import (
	project "github.com/cloudwan/edgelq-sdk/devices/resources/v1/project"
	fieldmaskpb "google.golang.org/protobuf/types/known/fieldmaskpb"
)

// ensure the imports are used
var (
	_ = new(gotenresource.ListQuery)
)

// make sure we're using proto imports
var (
	_ = &project.Project{}
	_ = &fieldmaskpb.FieldMask{}
)

func (c *DeviceDistributionCounterChange) IsAdd() bool {
	if c == nil {
		return false
	}
	_, ok := c.ChangeType.(*DeviceDistributionCounterChange_Added_)
	return ok
}

func (c *DeviceDistributionCounterChange) IsModify() bool {
	if c == nil {
		return false
	}
	_, ok := c.ChangeType.(*DeviceDistributionCounterChange_Modified_)
	return ok
}

func (c *DeviceDistributionCounterChange) IsCurrent() bool {
	if c == nil {
		return false
	}
	_, ok := c.ChangeType.(*DeviceDistributionCounterChange_Current_)
	return ok
}

func (c *DeviceDistributionCounterChange) IsDelete() bool {
	if c == nil {
		return false
	}
	_, ok := c.ChangeType.(*DeviceDistributionCounterChange_Removed_)
	return ok
}

func (c *DeviceDistributionCounterChange) GetCurrentViewIndex() int32 {
	switch cType := c.ChangeType.(type) {
	case *DeviceDistributionCounterChange_Added_:
		return cType.Added.ViewIndex
	case *DeviceDistributionCounterChange_Modified_:
		return cType.Modified.ViewIndex
	}
	return 0
}

func (c *DeviceDistributionCounterChange) GetPreviousViewIndex() int32 {
	switch cType := c.ChangeType.(type) {
	case *DeviceDistributionCounterChange_Removed_:
		return cType.Removed.ViewIndex
	case *DeviceDistributionCounterChange_Modified_:
		return cType.Modified.PreviousViewIndex
	}
	return 0
}

func (c *DeviceDistributionCounterChange) GetDeviceDistributionCounter() *DeviceDistributionCounter {
	if c == nil {
		return nil
	}
	switch cType := c.ChangeType.(type) {
	case *DeviceDistributionCounterChange_Added_:
		return cType.Added.DeviceDistributionCounter
	case *DeviceDistributionCounterChange_Modified_:
		return cType.Modified.DeviceDistributionCounter
	case *DeviceDistributionCounterChange_Current_:
		return cType.Current.DeviceDistributionCounter
	case *DeviceDistributionCounterChange_Removed_:
		return nil
	}
	return nil
}

func (c *DeviceDistributionCounterChange) GetRawResource() gotenresource.Resource {
	return c.GetDeviceDistributionCounter()
}

func (c *DeviceDistributionCounterChange) GetDeviceDistributionCounterName() *Name {
	if c == nil {
		return nil
	}
	switch cType := c.ChangeType.(type) {
	case *DeviceDistributionCounterChange_Added_:
		return cType.Added.DeviceDistributionCounter.GetName()
	case *DeviceDistributionCounterChange_Modified_:
		return cType.Modified.Name
	case *DeviceDistributionCounterChange_Current_:
		return cType.Current.DeviceDistributionCounter.GetName()
	case *DeviceDistributionCounterChange_Removed_:
		return cType.Removed.Name
	}
	return nil
}

func (c *DeviceDistributionCounterChange) GetRawName() gotenresource.Name {
	return c.GetDeviceDistributionCounterName()
}

func (c *DeviceDistributionCounterChange) SetAddedRaw(snapshot gotenresource.Resource, idx int) {
	c.ChangeType = &DeviceDistributionCounterChange_Added_{
		Added: &DeviceDistributionCounterChange_Added{
			DeviceDistributionCounter: snapshot.(*DeviceDistributionCounter),
			ViewIndex:                 int32(idx),
		},
	}
}

func (c *DeviceDistributionCounterChange) SetModifiedRaw(name gotenresource.Name, snapshot gotenresource.Resource, prevIdx int, newIdx int) {
	c.ChangeType = &DeviceDistributionCounterChange_Modified_{
		Modified: &DeviceDistributionCounterChange_Modified{
			Name:                      name.(*Name),
			DeviceDistributionCounter: snapshot.(*DeviceDistributionCounter),
			PreviousViewIndex:         int32(prevIdx),
			ViewIndex:                 int32(newIdx),
		},
	}
}

func (c *DeviceDistributionCounterChange) SetCurrentRaw(snapshot gotenresource.Resource) {
	c.ChangeType = &DeviceDistributionCounterChange_Current_{
		Current: &DeviceDistributionCounterChange_Current{
			DeviceDistributionCounter: snapshot.(*DeviceDistributionCounter),
		},
	}
}

func (c *DeviceDistributionCounterChange) SetDeletedRaw(name gotenresource.Name, idx int) {
	c.ChangeType = &DeviceDistributionCounterChange_Removed_{
		Removed: &DeviceDistributionCounterChange_Removed{
			Name:      name.(*Name),
			ViewIndex: int32(idx),
		},
	}
}
