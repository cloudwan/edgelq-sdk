// Code generated by protoc-gen-goten-resource
// Resource: TpmAttestationCert
// DO NOT EDIT!!!

package tpm_attestation_cert

import (
	gotenresource "github.com/cloudwan/goten-sdk/runtime/resource"
)

// proto imports
import (
	project "github.com/cloudwan/edgelq-sdk/devices/resources/v1/project"
	meta "github.com/cloudwan/goten-sdk/types/meta"
)

// ensure the imports are used
var (
	_ = new(gotenresource.ListQuery)
)

// make sure we're using proto imports
var (
	_ = &project.Project{}
	_ = &meta.Meta{}
)

type TpmAttestationCertList []*TpmAttestationCert

func (l TpmAttestationCertList) Append(item gotenresource.Resource) gotenresource.ResourceList {
	return append(l, item.(*TpmAttestationCert))
}

func (l TpmAttestationCertList) AppendList(list gotenresource.ResourceList) gotenresource.ResourceList {
	return append(l, list.(TpmAttestationCertList)...)
}

func (l TpmAttestationCertList) Slice(first, second int) gotenresource.ResourceList {
	if first > 0 && second > 0 {
		return l[first:second]
	} else if first > 0 {
		return l[first:]
	} else if second > 0 {
		return l[:second]
	}
	return l[:]
}

func (l TpmAttestationCertList) At(idx int) gotenresource.Resource {
	return l[idx]
}

func (l TpmAttestationCertList) Set(idx int, res gotenresource.Resource) {
	l[idx] = res.(*TpmAttestationCert)
}

func (l TpmAttestationCertList) Length() int {
	return len(l)
}

type TpmAttestationCertChangeList []*TpmAttestationCertChange

func (l TpmAttestationCertChangeList) Append(item gotenresource.ResourceChange) gotenresource.ResourceChangeList {
	return append(l, item.(*TpmAttestationCertChange))
}

func (l TpmAttestationCertChangeList) AppendList(list gotenresource.ResourceChangeList) gotenresource.ResourceChangeList {
	return append(l, list.(TpmAttestationCertChangeList)...)
}

func (l TpmAttestationCertChangeList) Slice(first, second int) gotenresource.ResourceChangeList {
	if first > 0 && second > 0 {
		return l[first:second]
	} else if first > 0 {
		return l[first:]
	} else if second > 0 {
		return l[:second]
	}
	return l[:]
}

func (l TpmAttestationCertChangeList) At(idx int) gotenresource.ResourceChange {
	return l[idx]
}

func (l TpmAttestationCertChangeList) Set(idx int, change gotenresource.ResourceChange) {
	l[idx] = change.(*TpmAttestationCertChange)
}

func (l TpmAttestationCertChangeList) Length() int {
	return len(l)
}

type TpmAttestationCertNameList []*Name

func (l TpmAttestationCertNameList) Append(name gotenresource.Name) gotenresource.NameList {
	return append(l, name.(*Name))
}

func (l TpmAttestationCertNameList) AppendList(list gotenresource.NameList) gotenresource.NameList {
	return append(l, list.(TpmAttestationCertNameList)...)
}

func (l TpmAttestationCertNameList) Slice(first, second int) gotenresource.NameList {
	if first > 0 && second > 0 {
		return l[first:second]
	} else if first > 0 {
		return l[first:]
	} else if second > 0 {
		return l[:second]
	}
	return l[:]
}

func (l TpmAttestationCertNameList) At(idx int) gotenresource.Name {
	return l[idx]
}

func (l TpmAttestationCertNameList) Set(idx int, name gotenresource.Name) {
	l[idx] = name.(*Name)
}

func (l TpmAttestationCertNameList) Length() int {
	return len(l)
}

type TpmAttestationCertReferenceList []*Reference

func (l TpmAttestationCertReferenceList) Append(ref gotenresource.Reference) gotenresource.ReferenceList {
	return append(l, ref.(*Reference))
}

func (l TpmAttestationCertReferenceList) AppendList(list gotenresource.ReferenceList) gotenresource.ReferenceList {
	return append(l, list.(TpmAttestationCertReferenceList)...)
}

func (l TpmAttestationCertReferenceList) Slice(first, second int) gotenresource.ReferenceList {
	if first > 0 && second > 0 {
		return l[first:second]
	} else if first > 0 {
		return l[first:]
	} else if second > 0 {
		return l[:second]
	}
	return l[:]
}

func (l TpmAttestationCertReferenceList) At(idx int) gotenresource.Reference {
	return l[idx]
}

func (l TpmAttestationCertReferenceList) Set(idx int, ref gotenresource.Reference) {
	l[idx] = ref.(*Reference)
}

func (l TpmAttestationCertReferenceList) Length() int {
	return len(l)
}

type TpmAttestationCertParentNameList []*ParentName

func (l TpmAttestationCertParentNameList) Append(name gotenresource.Name) gotenresource.ParentNameList {
	return append(l, name.(*ParentName))
}

func (l TpmAttestationCertParentNameList) AppendList(list gotenresource.ParentNameList) gotenresource.ParentNameList {
	return append(l, list.(TpmAttestationCertParentNameList)...)
}

func (l TpmAttestationCertParentNameList) Slice(first, second int) gotenresource.ParentNameList {
	if first > 0 && second > 0 {
		return l[first:second]
	} else if first > 0 {
		return l[first:]
	} else if second > 0 {
		return l[:second]
	}
	return l[:]
}

func (l TpmAttestationCertParentNameList) At(idx int) gotenresource.Name {
	return l[idx]
}

func (l TpmAttestationCertParentNameList) Set(idx int, name gotenresource.Name) {
	l[idx] = name.(*ParentName)
}

func (l TpmAttestationCertParentNameList) Length() int {
	return len(l)
}

type TpmAttestationCertParentReferenceList []*ParentReference

func (l TpmAttestationCertParentReferenceList) Append(ref gotenresource.Reference) gotenresource.ParentReferenceList {
	return append(l, ref.(*ParentReference))
}

func (l TpmAttestationCertParentReferenceList) AppendList(list gotenresource.ParentReferenceList) gotenresource.ParentReferenceList {
	return append(l, list.(TpmAttestationCertParentReferenceList)...)
}

func (l TpmAttestationCertParentReferenceList) Slice(first, second int) gotenresource.ParentReferenceList {
	if first > 0 && second > 0 {
		return l[first:second]
	} else if first > 0 {
		return l[first:]
	} else if second > 0 {
		return l[:second]
	}
	return l[:]
}

func (l TpmAttestationCertParentReferenceList) At(idx int) gotenresource.Reference {
	return l[idx]
}

func (l TpmAttestationCertParentReferenceList) Set(idx int, ref gotenresource.Reference) {
	l[idx] = ref.(*ParentReference)
}

func (l TpmAttestationCertParentReferenceList) Length() int {
	return len(l)
}

type TpmAttestationCertMap map[Name]*TpmAttestationCert

func (m TpmAttestationCertMap) Get(name gotenresource.Name) gotenresource.Resource {
	return m[*name.(*Name)]
}

func (m TpmAttestationCertMap) Set(res gotenresource.Resource) {
	tRes := res.(*TpmAttestationCert)
	m[*tRes.Name] = tRes
}

func (m TpmAttestationCertMap) Delete(name gotenresource.Name) {
	delete(m, *name.(*Name))
}

func (m TpmAttestationCertMap) Length() int {
	return len(m)
}

func (m TpmAttestationCertMap) ForEach(cb func(gotenresource.Name, gotenresource.Resource) bool) {
	for name, res := range m {
		if !cb(&name, res) {
			break
		}
	}
}

type TpmAttestationCertChangeMap map[Name]*TpmAttestationCertChange

func (m TpmAttestationCertChangeMap) Get(name gotenresource.Name) gotenresource.ResourceChange {
	return m[*name.(*Name)]
}

func (m TpmAttestationCertChangeMap) Set(change gotenresource.ResourceChange) {
	tChange := change.(*TpmAttestationCertChange)
	m[*tChange.GetTpmAttestationCertName()] = tChange
}

func (m TpmAttestationCertChangeMap) Delete(name gotenresource.Name) {
	delete(m, *name.(*Name))
}

func (m TpmAttestationCertChangeMap) Length() int {
	return len(m)
}

func (m TpmAttestationCertChangeMap) ForEach(cb func(gotenresource.Name, gotenresource.ResourceChange) bool) {
	for name, res := range m {
		if !cb(&name, res) {
			break
		}
	}
}
