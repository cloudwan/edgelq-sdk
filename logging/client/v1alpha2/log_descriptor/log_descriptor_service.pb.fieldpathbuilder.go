// Code generated by protoc-gen-goten-object
// File: edgelq/logging/proto/v1alpha2/log_descriptor_service.proto
// DO NOT EDIT!!!

package log_descriptor_client

// proto imports
import (
	ntt_meta "github.com/cloudwan/edgelq-sdk/common/types/meta"
	multi_region_policy "github.com/cloudwan/edgelq-sdk/common/types/multi_region_policy"
	iam_organization "github.com/cloudwan/edgelq-sdk/iam/resources/v1alpha2/organization"
	iam_project "github.com/cloudwan/edgelq-sdk/iam/resources/v1alpha2/project"
	logging_common "github.com/cloudwan/edgelq-sdk/logging/common/v1alpha2"
	log_descriptor "github.com/cloudwan/edgelq-sdk/logging/resources/v1alpha2/log_descriptor"
	meta_service "github.com/cloudwan/edgelq-sdk/meta/resources/v1alpha2/service"
	view "github.com/cloudwan/goten-sdk/runtime/api/view"
	watch_type "github.com/cloudwan/goten-sdk/runtime/api/watch_type"
	empty "github.com/golang/protobuf/ptypes/empty"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	field_mask "google.golang.org/genproto/protobuf/field_mask"
)

// make sure we're using proto imports
var (
	_ = &ntt_meta.Meta{}
	_ = &multi_region_policy.MultiRegionPolicy{}
	_ = &iam_organization.Organization{}
	_ = &iam_project.Project{}
	_ = &logging_common.LabelDescriptor{}
	_ = &log_descriptor.LogDescriptor{}
	_ = &meta_service.Service{}
	_ = &empty.Empty{}
	_ = &field_mask.FieldMask{}
	_ = &timestamp.Timestamp{}
	_ = view.View(0)
	_ = watch_type.WatchType(0)
)

type GetLogDescriptorRequestFieldPathBuilder struct{}

func NewGetLogDescriptorRequestFieldPathBuilder() GetLogDescriptorRequestFieldPathBuilder {
	return GetLogDescriptorRequestFieldPathBuilder{}
}
func (GetLogDescriptorRequestFieldPathBuilder) Name() GetLogDescriptorRequestPathSelectorName {
	return GetLogDescriptorRequestPathSelectorName{}
}
func (GetLogDescriptorRequestFieldPathBuilder) FieldMask() GetLogDescriptorRequestPathSelectorFieldMask {
	return GetLogDescriptorRequestPathSelectorFieldMask{}
}
func (GetLogDescriptorRequestFieldPathBuilder) View() GetLogDescriptorRequestPathSelectorView {
	return GetLogDescriptorRequestPathSelectorView{}
}

type GetLogDescriptorRequestPathSelectorName struct{}

func (GetLogDescriptorRequestPathSelectorName) FieldPath() *GetLogDescriptorRequest_FieldTerminalPath {
	return &GetLogDescriptorRequest_FieldTerminalPath{selector: GetLogDescriptorRequest_FieldPathSelectorName}
}

func (s GetLogDescriptorRequestPathSelectorName) WithValue(value *log_descriptor.Reference) *GetLogDescriptorRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*GetLogDescriptorRequest_FieldTerminalPathValue)
}

func (s GetLogDescriptorRequestPathSelectorName) WithArrayOfValues(values []*log_descriptor.Reference) *GetLogDescriptorRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*GetLogDescriptorRequest_FieldTerminalPathArrayOfValues)
}

type GetLogDescriptorRequestPathSelectorFieldMask struct{}

func (GetLogDescriptorRequestPathSelectorFieldMask) FieldPath() *GetLogDescriptorRequest_FieldTerminalPath {
	return &GetLogDescriptorRequest_FieldTerminalPath{selector: GetLogDescriptorRequest_FieldPathSelectorFieldMask}
}

func (s GetLogDescriptorRequestPathSelectorFieldMask) WithValue(value *log_descriptor.LogDescriptor_FieldMask) *GetLogDescriptorRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*GetLogDescriptorRequest_FieldTerminalPathValue)
}

func (s GetLogDescriptorRequestPathSelectorFieldMask) WithArrayOfValues(values []*log_descriptor.LogDescriptor_FieldMask) *GetLogDescriptorRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*GetLogDescriptorRequest_FieldTerminalPathArrayOfValues)
}

type GetLogDescriptorRequestPathSelectorView struct{}

func (GetLogDescriptorRequestPathSelectorView) FieldPath() *GetLogDescriptorRequest_FieldTerminalPath {
	return &GetLogDescriptorRequest_FieldTerminalPath{selector: GetLogDescriptorRequest_FieldPathSelectorView}
}

func (s GetLogDescriptorRequestPathSelectorView) WithValue(value view.View) *GetLogDescriptorRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*GetLogDescriptorRequest_FieldTerminalPathValue)
}

func (s GetLogDescriptorRequestPathSelectorView) WithArrayOfValues(values []view.View) *GetLogDescriptorRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*GetLogDescriptorRequest_FieldTerminalPathArrayOfValues)
}

type BatchGetLogDescriptorsRequestFieldPathBuilder struct{}

func NewBatchGetLogDescriptorsRequestFieldPathBuilder() BatchGetLogDescriptorsRequestFieldPathBuilder {
	return BatchGetLogDescriptorsRequestFieldPathBuilder{}
}
func (BatchGetLogDescriptorsRequestFieldPathBuilder) Names() BatchGetLogDescriptorsRequestPathSelectorNames {
	return BatchGetLogDescriptorsRequestPathSelectorNames{}
}
func (BatchGetLogDescriptorsRequestFieldPathBuilder) FieldMask() BatchGetLogDescriptorsRequestPathSelectorFieldMask {
	return BatchGetLogDescriptorsRequestPathSelectorFieldMask{}
}
func (BatchGetLogDescriptorsRequestFieldPathBuilder) View() BatchGetLogDescriptorsRequestPathSelectorView {
	return BatchGetLogDescriptorsRequestPathSelectorView{}
}

type BatchGetLogDescriptorsRequestPathSelectorNames struct{}

func (BatchGetLogDescriptorsRequestPathSelectorNames) FieldPath() *BatchGetLogDescriptorsRequest_FieldTerminalPath {
	return &BatchGetLogDescriptorsRequest_FieldTerminalPath{selector: BatchGetLogDescriptorsRequest_FieldPathSelectorNames}
}

func (s BatchGetLogDescriptorsRequestPathSelectorNames) WithValue(value []*log_descriptor.Reference) *BatchGetLogDescriptorsRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetLogDescriptorsRequest_FieldTerminalPathValue)
}

func (s BatchGetLogDescriptorsRequestPathSelectorNames) WithArrayOfValues(values [][]*log_descriptor.Reference) *BatchGetLogDescriptorsRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetLogDescriptorsRequest_FieldTerminalPathArrayOfValues)
}

func (s BatchGetLogDescriptorsRequestPathSelectorNames) WithItemValue(value *log_descriptor.Reference) *BatchGetLogDescriptorsRequest_FieldTerminalPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*BatchGetLogDescriptorsRequest_FieldTerminalPathArrayItemValue)
}

type BatchGetLogDescriptorsRequestPathSelectorFieldMask struct{}

func (BatchGetLogDescriptorsRequestPathSelectorFieldMask) FieldPath() *BatchGetLogDescriptorsRequest_FieldTerminalPath {
	return &BatchGetLogDescriptorsRequest_FieldTerminalPath{selector: BatchGetLogDescriptorsRequest_FieldPathSelectorFieldMask}
}

func (s BatchGetLogDescriptorsRequestPathSelectorFieldMask) WithValue(value *log_descriptor.LogDescriptor_FieldMask) *BatchGetLogDescriptorsRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetLogDescriptorsRequest_FieldTerminalPathValue)
}

func (s BatchGetLogDescriptorsRequestPathSelectorFieldMask) WithArrayOfValues(values []*log_descriptor.LogDescriptor_FieldMask) *BatchGetLogDescriptorsRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetLogDescriptorsRequest_FieldTerminalPathArrayOfValues)
}

type BatchGetLogDescriptorsRequestPathSelectorView struct{}

func (BatchGetLogDescriptorsRequestPathSelectorView) FieldPath() *BatchGetLogDescriptorsRequest_FieldTerminalPath {
	return &BatchGetLogDescriptorsRequest_FieldTerminalPath{selector: BatchGetLogDescriptorsRequest_FieldPathSelectorView}
}

func (s BatchGetLogDescriptorsRequestPathSelectorView) WithValue(value view.View) *BatchGetLogDescriptorsRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetLogDescriptorsRequest_FieldTerminalPathValue)
}

func (s BatchGetLogDescriptorsRequestPathSelectorView) WithArrayOfValues(values []view.View) *BatchGetLogDescriptorsRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetLogDescriptorsRequest_FieldTerminalPathArrayOfValues)
}

type BatchGetLogDescriptorsResponseFieldPathBuilder struct{}

func NewBatchGetLogDescriptorsResponseFieldPathBuilder() BatchGetLogDescriptorsResponseFieldPathBuilder {
	return BatchGetLogDescriptorsResponseFieldPathBuilder{}
}
func (BatchGetLogDescriptorsResponseFieldPathBuilder) LogDescriptors() BatchGetLogDescriptorsResponsePathSelectorLogDescriptors {
	return BatchGetLogDescriptorsResponsePathSelectorLogDescriptors{}
}
func (BatchGetLogDescriptorsResponseFieldPathBuilder) Missing() BatchGetLogDescriptorsResponsePathSelectorMissing {
	return BatchGetLogDescriptorsResponsePathSelectorMissing{}
}

type BatchGetLogDescriptorsResponsePathSelectorLogDescriptors struct{}

func (BatchGetLogDescriptorsResponsePathSelectorLogDescriptors) FieldPath() *BatchGetLogDescriptorsResponse_FieldTerminalPath {
	return &BatchGetLogDescriptorsResponse_FieldTerminalPath{selector: BatchGetLogDescriptorsResponse_FieldPathSelectorLogDescriptors}
}

func (s BatchGetLogDescriptorsResponsePathSelectorLogDescriptors) WithValue(value []*log_descriptor.LogDescriptor) *BatchGetLogDescriptorsResponse_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetLogDescriptorsResponse_FieldTerminalPathValue)
}

func (s BatchGetLogDescriptorsResponsePathSelectorLogDescriptors) WithArrayOfValues(values [][]*log_descriptor.LogDescriptor) *BatchGetLogDescriptorsResponse_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetLogDescriptorsResponse_FieldTerminalPathArrayOfValues)
}

func (s BatchGetLogDescriptorsResponsePathSelectorLogDescriptors) WithItemValue(value *log_descriptor.LogDescriptor) *BatchGetLogDescriptorsResponse_FieldTerminalPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*BatchGetLogDescriptorsResponse_FieldTerminalPathArrayItemValue)
}
func (BatchGetLogDescriptorsResponsePathSelectorLogDescriptors) WithSubPath(subPath log_descriptor.LogDescriptor_FieldPath) *BatchGetLogDescriptorsResponse_FieldSubPath {
	return &BatchGetLogDescriptorsResponse_FieldSubPath{selector: BatchGetLogDescriptorsResponse_FieldPathSelectorLogDescriptors, subPath: subPath}
}

func (s BatchGetLogDescriptorsResponsePathSelectorLogDescriptors) WithSubValue(subPathValue log_descriptor.LogDescriptor_FieldPathValue) *BatchGetLogDescriptorsResponse_FieldSubPathValue {
	return &BatchGetLogDescriptorsResponse_FieldSubPathValue{BatchGetLogDescriptorsResponse_FieldPath: s.WithSubPath(subPathValue), subPathValue: subPathValue}
}

func (s BatchGetLogDescriptorsResponsePathSelectorLogDescriptors) WithSubArrayOfValues(subPathArrayOfValues log_descriptor.LogDescriptor_FieldPathArrayOfValues) *BatchGetLogDescriptorsResponse_FieldSubPathArrayOfValues {
	return &BatchGetLogDescriptorsResponse_FieldSubPathArrayOfValues{BatchGetLogDescriptorsResponse_FieldPath: s.WithSubPath(subPathArrayOfValues), subPathArrayOfValues: subPathArrayOfValues}
}

func (s BatchGetLogDescriptorsResponsePathSelectorLogDescriptors) WithSubArrayItemValue(subPathArrayItemValue log_descriptor.LogDescriptor_FieldPathArrayItemValue) *BatchGetLogDescriptorsResponse_FieldSubPathArrayItemValue {
	return &BatchGetLogDescriptorsResponse_FieldSubPathArrayItemValue{BatchGetLogDescriptorsResponse_FieldPath: s.WithSubPath(subPathArrayItemValue), subPathItemValue: subPathArrayItemValue}
}

func (BatchGetLogDescriptorsResponsePathSelectorLogDescriptors) Name() BatchGetLogDescriptorsResponsePathSelectorLogDescriptorsName {
	return BatchGetLogDescriptorsResponsePathSelectorLogDescriptorsName{}
}

func (BatchGetLogDescriptorsResponsePathSelectorLogDescriptors) DisplayName() BatchGetLogDescriptorsResponsePathSelectorLogDescriptorsDisplayName {
	return BatchGetLogDescriptorsResponsePathSelectorLogDescriptorsDisplayName{}
}

func (BatchGetLogDescriptorsResponsePathSelectorLogDescriptors) Description() BatchGetLogDescriptorsResponsePathSelectorLogDescriptorsDescription {
	return BatchGetLogDescriptorsResponsePathSelectorLogDescriptorsDescription{}
}

func (BatchGetLogDescriptorsResponsePathSelectorLogDescriptors) Labels() BatchGetLogDescriptorsResponsePathSelectorLogDescriptorsLabels {
	return BatchGetLogDescriptorsResponsePathSelectorLogDescriptorsLabels{}
}

func (BatchGetLogDescriptorsResponsePathSelectorLogDescriptors) PromotedLabelKeySets() BatchGetLogDescriptorsResponsePathSelectorLogDescriptorsPromotedLabelKeySets {
	return BatchGetLogDescriptorsResponsePathSelectorLogDescriptorsPromotedLabelKeySets{}
}

func (BatchGetLogDescriptorsResponsePathSelectorLogDescriptors) Metadata() BatchGetLogDescriptorsResponsePathSelectorLogDescriptorsMetadata {
	return BatchGetLogDescriptorsResponsePathSelectorLogDescriptorsMetadata{}
}

type BatchGetLogDescriptorsResponsePathSelectorLogDescriptorsName struct{}

func (BatchGetLogDescriptorsResponsePathSelectorLogDescriptorsName) FieldPath() *BatchGetLogDescriptorsResponse_FieldSubPath {
	return &BatchGetLogDescriptorsResponse_FieldSubPath{
		selector: BatchGetLogDescriptorsResponse_FieldPathSelectorLogDescriptors,
		subPath:  log_descriptor.NewLogDescriptorFieldPathBuilder().Name().FieldPath(),
	}
}

func (s BatchGetLogDescriptorsResponsePathSelectorLogDescriptorsName) WithValue(value *log_descriptor.Name) *BatchGetLogDescriptorsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetLogDescriptorsResponse_FieldSubPathValue)
}

func (s BatchGetLogDescriptorsResponsePathSelectorLogDescriptorsName) WithArrayOfValues(values []*log_descriptor.Name) *BatchGetLogDescriptorsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetLogDescriptorsResponse_FieldSubPathArrayOfValues)
}

type BatchGetLogDescriptorsResponsePathSelectorLogDescriptorsDisplayName struct{}

func (BatchGetLogDescriptorsResponsePathSelectorLogDescriptorsDisplayName) FieldPath() *BatchGetLogDescriptorsResponse_FieldSubPath {
	return &BatchGetLogDescriptorsResponse_FieldSubPath{
		selector: BatchGetLogDescriptorsResponse_FieldPathSelectorLogDescriptors,
		subPath:  log_descriptor.NewLogDescriptorFieldPathBuilder().DisplayName().FieldPath(),
	}
}

func (s BatchGetLogDescriptorsResponsePathSelectorLogDescriptorsDisplayName) WithValue(value string) *BatchGetLogDescriptorsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetLogDescriptorsResponse_FieldSubPathValue)
}

func (s BatchGetLogDescriptorsResponsePathSelectorLogDescriptorsDisplayName) WithArrayOfValues(values []string) *BatchGetLogDescriptorsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetLogDescriptorsResponse_FieldSubPathArrayOfValues)
}

type BatchGetLogDescriptorsResponsePathSelectorLogDescriptorsDescription struct{}

func (BatchGetLogDescriptorsResponsePathSelectorLogDescriptorsDescription) FieldPath() *BatchGetLogDescriptorsResponse_FieldSubPath {
	return &BatchGetLogDescriptorsResponse_FieldSubPath{
		selector: BatchGetLogDescriptorsResponse_FieldPathSelectorLogDescriptors,
		subPath:  log_descriptor.NewLogDescriptorFieldPathBuilder().Description().FieldPath(),
	}
}

func (s BatchGetLogDescriptorsResponsePathSelectorLogDescriptorsDescription) WithValue(value string) *BatchGetLogDescriptorsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetLogDescriptorsResponse_FieldSubPathValue)
}

func (s BatchGetLogDescriptorsResponsePathSelectorLogDescriptorsDescription) WithArrayOfValues(values []string) *BatchGetLogDescriptorsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetLogDescriptorsResponse_FieldSubPathArrayOfValues)
}

type BatchGetLogDescriptorsResponsePathSelectorLogDescriptorsLabels struct{}

func (BatchGetLogDescriptorsResponsePathSelectorLogDescriptorsLabels) FieldPath() *BatchGetLogDescriptorsResponse_FieldSubPath {
	return &BatchGetLogDescriptorsResponse_FieldSubPath{
		selector: BatchGetLogDescriptorsResponse_FieldPathSelectorLogDescriptors,
		subPath:  log_descriptor.NewLogDescriptorFieldPathBuilder().Labels().FieldPath(),
	}
}

func (s BatchGetLogDescriptorsResponsePathSelectorLogDescriptorsLabels) WithValue(value []*logging_common.LabelDescriptor) *BatchGetLogDescriptorsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetLogDescriptorsResponse_FieldSubPathValue)
}

func (s BatchGetLogDescriptorsResponsePathSelectorLogDescriptorsLabels) WithArrayOfValues(values [][]*logging_common.LabelDescriptor) *BatchGetLogDescriptorsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetLogDescriptorsResponse_FieldSubPathArrayOfValues)
}

func (s BatchGetLogDescriptorsResponsePathSelectorLogDescriptorsLabels) WithItemValue(value *logging_common.LabelDescriptor) *BatchGetLogDescriptorsResponse_FieldSubPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*BatchGetLogDescriptorsResponse_FieldSubPathArrayItemValue)
}

func (BatchGetLogDescriptorsResponsePathSelectorLogDescriptorsLabels) Key() BatchGetLogDescriptorsResponsePathSelectorLogDescriptorsLabelsKey {
	return BatchGetLogDescriptorsResponsePathSelectorLogDescriptorsLabelsKey{}
}

func (BatchGetLogDescriptorsResponsePathSelectorLogDescriptorsLabels) Description() BatchGetLogDescriptorsResponsePathSelectorLogDescriptorsLabelsDescription {
	return BatchGetLogDescriptorsResponsePathSelectorLogDescriptorsLabelsDescription{}
}

type BatchGetLogDescriptorsResponsePathSelectorLogDescriptorsLabelsKey struct{}

func (BatchGetLogDescriptorsResponsePathSelectorLogDescriptorsLabelsKey) FieldPath() *BatchGetLogDescriptorsResponse_FieldSubPath {
	return &BatchGetLogDescriptorsResponse_FieldSubPath{
		selector: BatchGetLogDescriptorsResponse_FieldPathSelectorLogDescriptors,
		subPath:  log_descriptor.NewLogDescriptorFieldPathBuilder().Labels().Key().FieldPath(),
	}
}

func (s BatchGetLogDescriptorsResponsePathSelectorLogDescriptorsLabelsKey) WithValue(value string) *BatchGetLogDescriptorsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetLogDescriptorsResponse_FieldSubPathValue)
}

func (s BatchGetLogDescriptorsResponsePathSelectorLogDescriptorsLabelsKey) WithArrayOfValues(values []string) *BatchGetLogDescriptorsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetLogDescriptorsResponse_FieldSubPathArrayOfValues)
}

type BatchGetLogDescriptorsResponsePathSelectorLogDescriptorsLabelsDescription struct{}

func (BatchGetLogDescriptorsResponsePathSelectorLogDescriptorsLabelsDescription) FieldPath() *BatchGetLogDescriptorsResponse_FieldSubPath {
	return &BatchGetLogDescriptorsResponse_FieldSubPath{
		selector: BatchGetLogDescriptorsResponse_FieldPathSelectorLogDescriptors,
		subPath:  log_descriptor.NewLogDescriptorFieldPathBuilder().Labels().Description().FieldPath(),
	}
}

func (s BatchGetLogDescriptorsResponsePathSelectorLogDescriptorsLabelsDescription) WithValue(value string) *BatchGetLogDescriptorsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetLogDescriptorsResponse_FieldSubPathValue)
}

func (s BatchGetLogDescriptorsResponsePathSelectorLogDescriptorsLabelsDescription) WithArrayOfValues(values []string) *BatchGetLogDescriptorsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetLogDescriptorsResponse_FieldSubPathArrayOfValues)
}

type BatchGetLogDescriptorsResponsePathSelectorLogDescriptorsPromotedLabelKeySets struct{}

func (BatchGetLogDescriptorsResponsePathSelectorLogDescriptorsPromotedLabelKeySets) FieldPath() *BatchGetLogDescriptorsResponse_FieldSubPath {
	return &BatchGetLogDescriptorsResponse_FieldSubPath{
		selector: BatchGetLogDescriptorsResponse_FieldPathSelectorLogDescriptors,
		subPath:  log_descriptor.NewLogDescriptorFieldPathBuilder().PromotedLabelKeySets().FieldPath(),
	}
}

func (s BatchGetLogDescriptorsResponsePathSelectorLogDescriptorsPromotedLabelKeySets) WithValue(value []*logging_common.LabelKeySet) *BatchGetLogDescriptorsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetLogDescriptorsResponse_FieldSubPathValue)
}

func (s BatchGetLogDescriptorsResponsePathSelectorLogDescriptorsPromotedLabelKeySets) WithArrayOfValues(values [][]*logging_common.LabelKeySet) *BatchGetLogDescriptorsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetLogDescriptorsResponse_FieldSubPathArrayOfValues)
}

func (s BatchGetLogDescriptorsResponsePathSelectorLogDescriptorsPromotedLabelKeySets) WithItemValue(value *logging_common.LabelKeySet) *BatchGetLogDescriptorsResponse_FieldSubPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*BatchGetLogDescriptorsResponse_FieldSubPathArrayItemValue)
}

func (BatchGetLogDescriptorsResponsePathSelectorLogDescriptorsPromotedLabelKeySets) LabelKeys() BatchGetLogDescriptorsResponsePathSelectorLogDescriptorsPromotedLabelKeySetsLabelKeys {
	return BatchGetLogDescriptorsResponsePathSelectorLogDescriptorsPromotedLabelKeySetsLabelKeys{}
}

type BatchGetLogDescriptorsResponsePathSelectorLogDescriptorsPromotedLabelKeySetsLabelKeys struct{}

func (BatchGetLogDescriptorsResponsePathSelectorLogDescriptorsPromotedLabelKeySetsLabelKeys) FieldPath() *BatchGetLogDescriptorsResponse_FieldSubPath {
	return &BatchGetLogDescriptorsResponse_FieldSubPath{
		selector: BatchGetLogDescriptorsResponse_FieldPathSelectorLogDescriptors,
		subPath:  log_descriptor.NewLogDescriptorFieldPathBuilder().PromotedLabelKeySets().LabelKeys().FieldPath(),
	}
}

func (s BatchGetLogDescriptorsResponsePathSelectorLogDescriptorsPromotedLabelKeySetsLabelKeys) WithValue(value []string) *BatchGetLogDescriptorsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetLogDescriptorsResponse_FieldSubPathValue)
}

func (s BatchGetLogDescriptorsResponsePathSelectorLogDescriptorsPromotedLabelKeySetsLabelKeys) WithArrayOfValues(values [][]string) *BatchGetLogDescriptorsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetLogDescriptorsResponse_FieldSubPathArrayOfValues)
}

func (s BatchGetLogDescriptorsResponsePathSelectorLogDescriptorsPromotedLabelKeySetsLabelKeys) WithItemValue(value string) *BatchGetLogDescriptorsResponse_FieldSubPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*BatchGetLogDescriptorsResponse_FieldSubPathArrayItemValue)
}

type BatchGetLogDescriptorsResponsePathSelectorLogDescriptorsMetadata struct{}

func (BatchGetLogDescriptorsResponsePathSelectorLogDescriptorsMetadata) FieldPath() *BatchGetLogDescriptorsResponse_FieldSubPath {
	return &BatchGetLogDescriptorsResponse_FieldSubPath{
		selector: BatchGetLogDescriptorsResponse_FieldPathSelectorLogDescriptors,
		subPath:  log_descriptor.NewLogDescriptorFieldPathBuilder().Metadata().FieldPath(),
	}
}

func (s BatchGetLogDescriptorsResponsePathSelectorLogDescriptorsMetadata) WithValue(value *ntt_meta.Meta) *BatchGetLogDescriptorsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetLogDescriptorsResponse_FieldSubPathValue)
}

func (s BatchGetLogDescriptorsResponsePathSelectorLogDescriptorsMetadata) WithArrayOfValues(values []*ntt_meta.Meta) *BatchGetLogDescriptorsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetLogDescriptorsResponse_FieldSubPathArrayOfValues)
}

func (BatchGetLogDescriptorsResponsePathSelectorLogDescriptorsMetadata) CreateTime() BatchGetLogDescriptorsResponsePathSelectorLogDescriptorsMetadataCreateTime {
	return BatchGetLogDescriptorsResponsePathSelectorLogDescriptorsMetadataCreateTime{}
}

func (BatchGetLogDescriptorsResponsePathSelectorLogDescriptorsMetadata) UpdateTime() BatchGetLogDescriptorsResponsePathSelectorLogDescriptorsMetadataUpdateTime {
	return BatchGetLogDescriptorsResponsePathSelectorLogDescriptorsMetadataUpdateTime{}
}

func (BatchGetLogDescriptorsResponsePathSelectorLogDescriptorsMetadata) Uuid() BatchGetLogDescriptorsResponsePathSelectorLogDescriptorsMetadataUuid {
	return BatchGetLogDescriptorsResponsePathSelectorLogDescriptorsMetadataUuid{}
}

func (BatchGetLogDescriptorsResponsePathSelectorLogDescriptorsMetadata) Tags() BatchGetLogDescriptorsResponsePathSelectorLogDescriptorsMetadataTags {
	return BatchGetLogDescriptorsResponsePathSelectorLogDescriptorsMetadataTags{}
}

func (BatchGetLogDescriptorsResponsePathSelectorLogDescriptorsMetadata) Labels() BatchGetLogDescriptorsResponsePathSelectorLogDescriptorsMetadataLabels {
	return BatchGetLogDescriptorsResponsePathSelectorLogDescriptorsMetadataLabels{}
}

func (BatchGetLogDescriptorsResponsePathSelectorLogDescriptorsMetadata) Annotations() BatchGetLogDescriptorsResponsePathSelectorLogDescriptorsMetadataAnnotations {
	return BatchGetLogDescriptorsResponsePathSelectorLogDescriptorsMetadataAnnotations{}
}

func (BatchGetLogDescriptorsResponsePathSelectorLogDescriptorsMetadata) Generation() BatchGetLogDescriptorsResponsePathSelectorLogDescriptorsMetadataGeneration {
	return BatchGetLogDescriptorsResponsePathSelectorLogDescriptorsMetadataGeneration{}
}

func (BatchGetLogDescriptorsResponsePathSelectorLogDescriptorsMetadata) ResourceVersion() BatchGetLogDescriptorsResponsePathSelectorLogDescriptorsMetadataResourceVersion {
	return BatchGetLogDescriptorsResponsePathSelectorLogDescriptorsMetadataResourceVersion{}
}

func (BatchGetLogDescriptorsResponsePathSelectorLogDescriptorsMetadata) OwnerReferences() BatchGetLogDescriptorsResponsePathSelectorLogDescriptorsMetadataOwnerReferences {
	return BatchGetLogDescriptorsResponsePathSelectorLogDescriptorsMetadataOwnerReferences{}
}

func (BatchGetLogDescriptorsResponsePathSelectorLogDescriptorsMetadata) Shards() BatchGetLogDescriptorsResponsePathSelectorLogDescriptorsMetadataShards {
	return BatchGetLogDescriptorsResponsePathSelectorLogDescriptorsMetadataShards{}
}

func (BatchGetLogDescriptorsResponsePathSelectorLogDescriptorsMetadata) Syncing() BatchGetLogDescriptorsResponsePathSelectorLogDescriptorsMetadataSyncing {
	return BatchGetLogDescriptorsResponsePathSelectorLogDescriptorsMetadataSyncing{}
}

type BatchGetLogDescriptorsResponsePathSelectorLogDescriptorsMetadataCreateTime struct{}

func (BatchGetLogDescriptorsResponsePathSelectorLogDescriptorsMetadataCreateTime) FieldPath() *BatchGetLogDescriptorsResponse_FieldSubPath {
	return &BatchGetLogDescriptorsResponse_FieldSubPath{
		selector: BatchGetLogDescriptorsResponse_FieldPathSelectorLogDescriptors,
		subPath:  log_descriptor.NewLogDescriptorFieldPathBuilder().Metadata().CreateTime().FieldPath(),
	}
}

func (s BatchGetLogDescriptorsResponsePathSelectorLogDescriptorsMetadataCreateTime) WithValue(value *timestamp.Timestamp) *BatchGetLogDescriptorsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetLogDescriptorsResponse_FieldSubPathValue)
}

func (s BatchGetLogDescriptorsResponsePathSelectorLogDescriptorsMetadataCreateTime) WithArrayOfValues(values []*timestamp.Timestamp) *BatchGetLogDescriptorsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetLogDescriptorsResponse_FieldSubPathArrayOfValues)
}

type BatchGetLogDescriptorsResponsePathSelectorLogDescriptorsMetadataUpdateTime struct{}

func (BatchGetLogDescriptorsResponsePathSelectorLogDescriptorsMetadataUpdateTime) FieldPath() *BatchGetLogDescriptorsResponse_FieldSubPath {
	return &BatchGetLogDescriptorsResponse_FieldSubPath{
		selector: BatchGetLogDescriptorsResponse_FieldPathSelectorLogDescriptors,
		subPath:  log_descriptor.NewLogDescriptorFieldPathBuilder().Metadata().UpdateTime().FieldPath(),
	}
}

func (s BatchGetLogDescriptorsResponsePathSelectorLogDescriptorsMetadataUpdateTime) WithValue(value *timestamp.Timestamp) *BatchGetLogDescriptorsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetLogDescriptorsResponse_FieldSubPathValue)
}

func (s BatchGetLogDescriptorsResponsePathSelectorLogDescriptorsMetadataUpdateTime) WithArrayOfValues(values []*timestamp.Timestamp) *BatchGetLogDescriptorsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetLogDescriptorsResponse_FieldSubPathArrayOfValues)
}

type BatchGetLogDescriptorsResponsePathSelectorLogDescriptorsMetadataUuid struct{}

func (BatchGetLogDescriptorsResponsePathSelectorLogDescriptorsMetadataUuid) FieldPath() *BatchGetLogDescriptorsResponse_FieldSubPath {
	return &BatchGetLogDescriptorsResponse_FieldSubPath{
		selector: BatchGetLogDescriptorsResponse_FieldPathSelectorLogDescriptors,
		subPath:  log_descriptor.NewLogDescriptorFieldPathBuilder().Metadata().Uuid().FieldPath(),
	}
}

func (s BatchGetLogDescriptorsResponsePathSelectorLogDescriptorsMetadataUuid) WithValue(value string) *BatchGetLogDescriptorsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetLogDescriptorsResponse_FieldSubPathValue)
}

func (s BatchGetLogDescriptorsResponsePathSelectorLogDescriptorsMetadataUuid) WithArrayOfValues(values []string) *BatchGetLogDescriptorsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetLogDescriptorsResponse_FieldSubPathArrayOfValues)
}

type BatchGetLogDescriptorsResponsePathSelectorLogDescriptorsMetadataTags struct{}

func (BatchGetLogDescriptorsResponsePathSelectorLogDescriptorsMetadataTags) FieldPath() *BatchGetLogDescriptorsResponse_FieldSubPath {
	return &BatchGetLogDescriptorsResponse_FieldSubPath{
		selector: BatchGetLogDescriptorsResponse_FieldPathSelectorLogDescriptors,
		subPath:  log_descriptor.NewLogDescriptorFieldPathBuilder().Metadata().Tags().FieldPath(),
	}
}

func (s BatchGetLogDescriptorsResponsePathSelectorLogDescriptorsMetadataTags) WithValue(value []string) *BatchGetLogDescriptorsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetLogDescriptorsResponse_FieldSubPathValue)
}

func (s BatchGetLogDescriptorsResponsePathSelectorLogDescriptorsMetadataTags) WithArrayOfValues(values [][]string) *BatchGetLogDescriptorsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetLogDescriptorsResponse_FieldSubPathArrayOfValues)
}

func (s BatchGetLogDescriptorsResponsePathSelectorLogDescriptorsMetadataTags) WithItemValue(value string) *BatchGetLogDescriptorsResponse_FieldSubPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*BatchGetLogDescriptorsResponse_FieldSubPathArrayItemValue)
}

type BatchGetLogDescriptorsResponsePathSelectorLogDescriptorsMetadataLabels struct{}

func (BatchGetLogDescriptorsResponsePathSelectorLogDescriptorsMetadataLabels) FieldPath() *BatchGetLogDescriptorsResponse_FieldSubPath {
	return &BatchGetLogDescriptorsResponse_FieldSubPath{
		selector: BatchGetLogDescriptorsResponse_FieldPathSelectorLogDescriptors,
		subPath:  log_descriptor.NewLogDescriptorFieldPathBuilder().Metadata().Labels().FieldPath(),
	}
}

func (s BatchGetLogDescriptorsResponsePathSelectorLogDescriptorsMetadataLabels) WithValue(value map[string]string) *BatchGetLogDescriptorsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetLogDescriptorsResponse_FieldSubPathValue)
}

func (s BatchGetLogDescriptorsResponsePathSelectorLogDescriptorsMetadataLabels) WithArrayOfValues(values []map[string]string) *BatchGetLogDescriptorsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetLogDescriptorsResponse_FieldSubPathArrayOfValues)
}

func (BatchGetLogDescriptorsResponsePathSelectorLogDescriptorsMetadataLabels) WithKey(key string) BatchGetLogDescriptorsResponseMapPathSelectorLogDescriptorsMetadataLabels {
	return BatchGetLogDescriptorsResponseMapPathSelectorLogDescriptorsMetadataLabels{key: key}
}

type BatchGetLogDescriptorsResponseMapPathSelectorLogDescriptorsMetadataLabels struct {
	key string
}

func (s BatchGetLogDescriptorsResponseMapPathSelectorLogDescriptorsMetadataLabels) FieldPath() *BatchGetLogDescriptorsResponse_FieldSubPath {
	return &BatchGetLogDescriptorsResponse_FieldSubPath{
		selector: BatchGetLogDescriptorsResponse_FieldPathSelectorLogDescriptors,
		subPath:  log_descriptor.NewLogDescriptorFieldPathBuilder().Metadata().Labels().WithKey(s.key).FieldPath(),
	}
}

func (s BatchGetLogDescriptorsResponseMapPathSelectorLogDescriptorsMetadataLabels) WithValue(value string) *BatchGetLogDescriptorsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetLogDescriptorsResponse_FieldSubPathValue)
}

func (s BatchGetLogDescriptorsResponseMapPathSelectorLogDescriptorsMetadataLabels) WithArrayOfValues(values []string) *BatchGetLogDescriptorsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetLogDescriptorsResponse_FieldSubPathArrayOfValues)
}

type BatchGetLogDescriptorsResponsePathSelectorLogDescriptorsMetadataAnnotations struct{}

func (BatchGetLogDescriptorsResponsePathSelectorLogDescriptorsMetadataAnnotations) FieldPath() *BatchGetLogDescriptorsResponse_FieldSubPath {
	return &BatchGetLogDescriptorsResponse_FieldSubPath{
		selector: BatchGetLogDescriptorsResponse_FieldPathSelectorLogDescriptors,
		subPath:  log_descriptor.NewLogDescriptorFieldPathBuilder().Metadata().Annotations().FieldPath(),
	}
}

func (s BatchGetLogDescriptorsResponsePathSelectorLogDescriptorsMetadataAnnotations) WithValue(value map[string]string) *BatchGetLogDescriptorsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetLogDescriptorsResponse_FieldSubPathValue)
}

func (s BatchGetLogDescriptorsResponsePathSelectorLogDescriptorsMetadataAnnotations) WithArrayOfValues(values []map[string]string) *BatchGetLogDescriptorsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetLogDescriptorsResponse_FieldSubPathArrayOfValues)
}

func (BatchGetLogDescriptorsResponsePathSelectorLogDescriptorsMetadataAnnotations) WithKey(key string) BatchGetLogDescriptorsResponseMapPathSelectorLogDescriptorsMetadataAnnotations {
	return BatchGetLogDescriptorsResponseMapPathSelectorLogDescriptorsMetadataAnnotations{key: key}
}

type BatchGetLogDescriptorsResponseMapPathSelectorLogDescriptorsMetadataAnnotations struct {
	key string
}

func (s BatchGetLogDescriptorsResponseMapPathSelectorLogDescriptorsMetadataAnnotations) FieldPath() *BatchGetLogDescriptorsResponse_FieldSubPath {
	return &BatchGetLogDescriptorsResponse_FieldSubPath{
		selector: BatchGetLogDescriptorsResponse_FieldPathSelectorLogDescriptors,
		subPath:  log_descriptor.NewLogDescriptorFieldPathBuilder().Metadata().Annotations().WithKey(s.key).FieldPath(),
	}
}

func (s BatchGetLogDescriptorsResponseMapPathSelectorLogDescriptorsMetadataAnnotations) WithValue(value string) *BatchGetLogDescriptorsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetLogDescriptorsResponse_FieldSubPathValue)
}

func (s BatchGetLogDescriptorsResponseMapPathSelectorLogDescriptorsMetadataAnnotations) WithArrayOfValues(values []string) *BatchGetLogDescriptorsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetLogDescriptorsResponse_FieldSubPathArrayOfValues)
}

type BatchGetLogDescriptorsResponsePathSelectorLogDescriptorsMetadataGeneration struct{}

func (BatchGetLogDescriptorsResponsePathSelectorLogDescriptorsMetadataGeneration) FieldPath() *BatchGetLogDescriptorsResponse_FieldSubPath {
	return &BatchGetLogDescriptorsResponse_FieldSubPath{
		selector: BatchGetLogDescriptorsResponse_FieldPathSelectorLogDescriptors,
		subPath:  log_descriptor.NewLogDescriptorFieldPathBuilder().Metadata().Generation().FieldPath(),
	}
}

func (s BatchGetLogDescriptorsResponsePathSelectorLogDescriptorsMetadataGeneration) WithValue(value int64) *BatchGetLogDescriptorsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetLogDescriptorsResponse_FieldSubPathValue)
}

func (s BatchGetLogDescriptorsResponsePathSelectorLogDescriptorsMetadataGeneration) WithArrayOfValues(values []int64) *BatchGetLogDescriptorsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetLogDescriptorsResponse_FieldSubPathArrayOfValues)
}

type BatchGetLogDescriptorsResponsePathSelectorLogDescriptorsMetadataResourceVersion struct{}

func (BatchGetLogDescriptorsResponsePathSelectorLogDescriptorsMetadataResourceVersion) FieldPath() *BatchGetLogDescriptorsResponse_FieldSubPath {
	return &BatchGetLogDescriptorsResponse_FieldSubPath{
		selector: BatchGetLogDescriptorsResponse_FieldPathSelectorLogDescriptors,
		subPath:  log_descriptor.NewLogDescriptorFieldPathBuilder().Metadata().ResourceVersion().FieldPath(),
	}
}

func (s BatchGetLogDescriptorsResponsePathSelectorLogDescriptorsMetadataResourceVersion) WithValue(value string) *BatchGetLogDescriptorsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetLogDescriptorsResponse_FieldSubPathValue)
}

func (s BatchGetLogDescriptorsResponsePathSelectorLogDescriptorsMetadataResourceVersion) WithArrayOfValues(values []string) *BatchGetLogDescriptorsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetLogDescriptorsResponse_FieldSubPathArrayOfValues)
}

type BatchGetLogDescriptorsResponsePathSelectorLogDescriptorsMetadataOwnerReferences struct{}

func (BatchGetLogDescriptorsResponsePathSelectorLogDescriptorsMetadataOwnerReferences) FieldPath() *BatchGetLogDescriptorsResponse_FieldSubPath {
	return &BatchGetLogDescriptorsResponse_FieldSubPath{
		selector: BatchGetLogDescriptorsResponse_FieldPathSelectorLogDescriptors,
		subPath:  log_descriptor.NewLogDescriptorFieldPathBuilder().Metadata().OwnerReferences().FieldPath(),
	}
}

func (s BatchGetLogDescriptorsResponsePathSelectorLogDescriptorsMetadataOwnerReferences) WithValue(value []*ntt_meta.OwnerReference) *BatchGetLogDescriptorsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetLogDescriptorsResponse_FieldSubPathValue)
}

func (s BatchGetLogDescriptorsResponsePathSelectorLogDescriptorsMetadataOwnerReferences) WithArrayOfValues(values [][]*ntt_meta.OwnerReference) *BatchGetLogDescriptorsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetLogDescriptorsResponse_FieldSubPathArrayOfValues)
}

func (s BatchGetLogDescriptorsResponsePathSelectorLogDescriptorsMetadataOwnerReferences) WithItemValue(value *ntt_meta.OwnerReference) *BatchGetLogDescriptorsResponse_FieldSubPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*BatchGetLogDescriptorsResponse_FieldSubPathArrayItemValue)
}

func (BatchGetLogDescriptorsResponsePathSelectorLogDescriptorsMetadataOwnerReferences) ApiVersion() BatchGetLogDescriptorsResponsePathSelectorLogDescriptorsMetadataOwnerReferencesApiVersion {
	return BatchGetLogDescriptorsResponsePathSelectorLogDescriptorsMetadataOwnerReferencesApiVersion{}
}

func (BatchGetLogDescriptorsResponsePathSelectorLogDescriptorsMetadataOwnerReferences) Kind() BatchGetLogDescriptorsResponsePathSelectorLogDescriptorsMetadataOwnerReferencesKind {
	return BatchGetLogDescriptorsResponsePathSelectorLogDescriptorsMetadataOwnerReferencesKind{}
}

func (BatchGetLogDescriptorsResponsePathSelectorLogDescriptorsMetadataOwnerReferences) Name() BatchGetLogDescriptorsResponsePathSelectorLogDescriptorsMetadataOwnerReferencesName {
	return BatchGetLogDescriptorsResponsePathSelectorLogDescriptorsMetadataOwnerReferencesName{}
}

func (BatchGetLogDescriptorsResponsePathSelectorLogDescriptorsMetadataOwnerReferences) Uid() BatchGetLogDescriptorsResponsePathSelectorLogDescriptorsMetadataOwnerReferencesUid {
	return BatchGetLogDescriptorsResponsePathSelectorLogDescriptorsMetadataOwnerReferencesUid{}
}

func (BatchGetLogDescriptorsResponsePathSelectorLogDescriptorsMetadataOwnerReferences) Controller() BatchGetLogDescriptorsResponsePathSelectorLogDescriptorsMetadataOwnerReferencesController {
	return BatchGetLogDescriptorsResponsePathSelectorLogDescriptorsMetadataOwnerReferencesController{}
}

func (BatchGetLogDescriptorsResponsePathSelectorLogDescriptorsMetadataOwnerReferences) BlockOwnerDeletion() BatchGetLogDescriptorsResponsePathSelectorLogDescriptorsMetadataOwnerReferencesBlockOwnerDeletion {
	return BatchGetLogDescriptorsResponsePathSelectorLogDescriptorsMetadataOwnerReferencesBlockOwnerDeletion{}
}

type BatchGetLogDescriptorsResponsePathSelectorLogDescriptorsMetadataOwnerReferencesApiVersion struct{}

func (BatchGetLogDescriptorsResponsePathSelectorLogDescriptorsMetadataOwnerReferencesApiVersion) FieldPath() *BatchGetLogDescriptorsResponse_FieldSubPath {
	return &BatchGetLogDescriptorsResponse_FieldSubPath{
		selector: BatchGetLogDescriptorsResponse_FieldPathSelectorLogDescriptors,
		subPath:  log_descriptor.NewLogDescriptorFieldPathBuilder().Metadata().OwnerReferences().ApiVersion().FieldPath(),
	}
}

func (s BatchGetLogDescriptorsResponsePathSelectorLogDescriptorsMetadataOwnerReferencesApiVersion) WithValue(value string) *BatchGetLogDescriptorsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetLogDescriptorsResponse_FieldSubPathValue)
}

func (s BatchGetLogDescriptorsResponsePathSelectorLogDescriptorsMetadataOwnerReferencesApiVersion) WithArrayOfValues(values []string) *BatchGetLogDescriptorsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetLogDescriptorsResponse_FieldSubPathArrayOfValues)
}

type BatchGetLogDescriptorsResponsePathSelectorLogDescriptorsMetadataOwnerReferencesKind struct{}

func (BatchGetLogDescriptorsResponsePathSelectorLogDescriptorsMetadataOwnerReferencesKind) FieldPath() *BatchGetLogDescriptorsResponse_FieldSubPath {
	return &BatchGetLogDescriptorsResponse_FieldSubPath{
		selector: BatchGetLogDescriptorsResponse_FieldPathSelectorLogDescriptors,
		subPath:  log_descriptor.NewLogDescriptorFieldPathBuilder().Metadata().OwnerReferences().Kind().FieldPath(),
	}
}

func (s BatchGetLogDescriptorsResponsePathSelectorLogDescriptorsMetadataOwnerReferencesKind) WithValue(value string) *BatchGetLogDescriptorsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetLogDescriptorsResponse_FieldSubPathValue)
}

func (s BatchGetLogDescriptorsResponsePathSelectorLogDescriptorsMetadataOwnerReferencesKind) WithArrayOfValues(values []string) *BatchGetLogDescriptorsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetLogDescriptorsResponse_FieldSubPathArrayOfValues)
}

type BatchGetLogDescriptorsResponsePathSelectorLogDescriptorsMetadataOwnerReferencesName struct{}

func (BatchGetLogDescriptorsResponsePathSelectorLogDescriptorsMetadataOwnerReferencesName) FieldPath() *BatchGetLogDescriptorsResponse_FieldSubPath {
	return &BatchGetLogDescriptorsResponse_FieldSubPath{
		selector: BatchGetLogDescriptorsResponse_FieldPathSelectorLogDescriptors,
		subPath:  log_descriptor.NewLogDescriptorFieldPathBuilder().Metadata().OwnerReferences().Name().FieldPath(),
	}
}

func (s BatchGetLogDescriptorsResponsePathSelectorLogDescriptorsMetadataOwnerReferencesName) WithValue(value string) *BatchGetLogDescriptorsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetLogDescriptorsResponse_FieldSubPathValue)
}

func (s BatchGetLogDescriptorsResponsePathSelectorLogDescriptorsMetadataOwnerReferencesName) WithArrayOfValues(values []string) *BatchGetLogDescriptorsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetLogDescriptorsResponse_FieldSubPathArrayOfValues)
}

type BatchGetLogDescriptorsResponsePathSelectorLogDescriptorsMetadataOwnerReferencesUid struct{}

func (BatchGetLogDescriptorsResponsePathSelectorLogDescriptorsMetadataOwnerReferencesUid) FieldPath() *BatchGetLogDescriptorsResponse_FieldSubPath {
	return &BatchGetLogDescriptorsResponse_FieldSubPath{
		selector: BatchGetLogDescriptorsResponse_FieldPathSelectorLogDescriptors,
		subPath:  log_descriptor.NewLogDescriptorFieldPathBuilder().Metadata().OwnerReferences().Uid().FieldPath(),
	}
}

func (s BatchGetLogDescriptorsResponsePathSelectorLogDescriptorsMetadataOwnerReferencesUid) WithValue(value string) *BatchGetLogDescriptorsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetLogDescriptorsResponse_FieldSubPathValue)
}

func (s BatchGetLogDescriptorsResponsePathSelectorLogDescriptorsMetadataOwnerReferencesUid) WithArrayOfValues(values []string) *BatchGetLogDescriptorsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetLogDescriptorsResponse_FieldSubPathArrayOfValues)
}

type BatchGetLogDescriptorsResponsePathSelectorLogDescriptorsMetadataOwnerReferencesController struct{}

func (BatchGetLogDescriptorsResponsePathSelectorLogDescriptorsMetadataOwnerReferencesController) FieldPath() *BatchGetLogDescriptorsResponse_FieldSubPath {
	return &BatchGetLogDescriptorsResponse_FieldSubPath{
		selector: BatchGetLogDescriptorsResponse_FieldPathSelectorLogDescriptors,
		subPath:  log_descriptor.NewLogDescriptorFieldPathBuilder().Metadata().OwnerReferences().Controller().FieldPath(),
	}
}

func (s BatchGetLogDescriptorsResponsePathSelectorLogDescriptorsMetadataOwnerReferencesController) WithValue(value bool) *BatchGetLogDescriptorsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetLogDescriptorsResponse_FieldSubPathValue)
}

func (s BatchGetLogDescriptorsResponsePathSelectorLogDescriptorsMetadataOwnerReferencesController) WithArrayOfValues(values []bool) *BatchGetLogDescriptorsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetLogDescriptorsResponse_FieldSubPathArrayOfValues)
}

type BatchGetLogDescriptorsResponsePathSelectorLogDescriptorsMetadataOwnerReferencesBlockOwnerDeletion struct{}

func (BatchGetLogDescriptorsResponsePathSelectorLogDescriptorsMetadataOwnerReferencesBlockOwnerDeletion) FieldPath() *BatchGetLogDescriptorsResponse_FieldSubPath {
	return &BatchGetLogDescriptorsResponse_FieldSubPath{
		selector: BatchGetLogDescriptorsResponse_FieldPathSelectorLogDescriptors,
		subPath:  log_descriptor.NewLogDescriptorFieldPathBuilder().Metadata().OwnerReferences().BlockOwnerDeletion().FieldPath(),
	}
}

func (s BatchGetLogDescriptorsResponsePathSelectorLogDescriptorsMetadataOwnerReferencesBlockOwnerDeletion) WithValue(value bool) *BatchGetLogDescriptorsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetLogDescriptorsResponse_FieldSubPathValue)
}

func (s BatchGetLogDescriptorsResponsePathSelectorLogDescriptorsMetadataOwnerReferencesBlockOwnerDeletion) WithArrayOfValues(values []bool) *BatchGetLogDescriptorsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetLogDescriptorsResponse_FieldSubPathArrayOfValues)
}

type BatchGetLogDescriptorsResponsePathSelectorLogDescriptorsMetadataShards struct{}

func (BatchGetLogDescriptorsResponsePathSelectorLogDescriptorsMetadataShards) FieldPath() *BatchGetLogDescriptorsResponse_FieldSubPath {
	return &BatchGetLogDescriptorsResponse_FieldSubPath{
		selector: BatchGetLogDescriptorsResponse_FieldPathSelectorLogDescriptors,
		subPath:  log_descriptor.NewLogDescriptorFieldPathBuilder().Metadata().Shards().FieldPath(),
	}
}

func (s BatchGetLogDescriptorsResponsePathSelectorLogDescriptorsMetadataShards) WithValue(value map[string]int64) *BatchGetLogDescriptorsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetLogDescriptorsResponse_FieldSubPathValue)
}

func (s BatchGetLogDescriptorsResponsePathSelectorLogDescriptorsMetadataShards) WithArrayOfValues(values []map[string]int64) *BatchGetLogDescriptorsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetLogDescriptorsResponse_FieldSubPathArrayOfValues)
}

func (BatchGetLogDescriptorsResponsePathSelectorLogDescriptorsMetadataShards) WithKey(key string) BatchGetLogDescriptorsResponseMapPathSelectorLogDescriptorsMetadataShards {
	return BatchGetLogDescriptorsResponseMapPathSelectorLogDescriptorsMetadataShards{key: key}
}

type BatchGetLogDescriptorsResponseMapPathSelectorLogDescriptorsMetadataShards struct {
	key string
}

func (s BatchGetLogDescriptorsResponseMapPathSelectorLogDescriptorsMetadataShards) FieldPath() *BatchGetLogDescriptorsResponse_FieldSubPath {
	return &BatchGetLogDescriptorsResponse_FieldSubPath{
		selector: BatchGetLogDescriptorsResponse_FieldPathSelectorLogDescriptors,
		subPath:  log_descriptor.NewLogDescriptorFieldPathBuilder().Metadata().Shards().WithKey(s.key).FieldPath(),
	}
}

func (s BatchGetLogDescriptorsResponseMapPathSelectorLogDescriptorsMetadataShards) WithValue(value int64) *BatchGetLogDescriptorsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetLogDescriptorsResponse_FieldSubPathValue)
}

func (s BatchGetLogDescriptorsResponseMapPathSelectorLogDescriptorsMetadataShards) WithArrayOfValues(values []int64) *BatchGetLogDescriptorsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetLogDescriptorsResponse_FieldSubPathArrayOfValues)
}

type BatchGetLogDescriptorsResponsePathSelectorLogDescriptorsMetadataSyncing struct{}

func (BatchGetLogDescriptorsResponsePathSelectorLogDescriptorsMetadataSyncing) FieldPath() *BatchGetLogDescriptorsResponse_FieldSubPath {
	return &BatchGetLogDescriptorsResponse_FieldSubPath{
		selector: BatchGetLogDescriptorsResponse_FieldPathSelectorLogDescriptors,
		subPath:  log_descriptor.NewLogDescriptorFieldPathBuilder().Metadata().Syncing().FieldPath(),
	}
}

func (s BatchGetLogDescriptorsResponsePathSelectorLogDescriptorsMetadataSyncing) WithValue(value *ntt_meta.SyncingMeta) *BatchGetLogDescriptorsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetLogDescriptorsResponse_FieldSubPathValue)
}

func (s BatchGetLogDescriptorsResponsePathSelectorLogDescriptorsMetadataSyncing) WithArrayOfValues(values []*ntt_meta.SyncingMeta) *BatchGetLogDescriptorsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetLogDescriptorsResponse_FieldSubPathArrayOfValues)
}

func (BatchGetLogDescriptorsResponsePathSelectorLogDescriptorsMetadataSyncing) OwningRegion() BatchGetLogDescriptorsResponsePathSelectorLogDescriptorsMetadataSyncingOwningRegion {
	return BatchGetLogDescriptorsResponsePathSelectorLogDescriptorsMetadataSyncingOwningRegion{}
}

func (BatchGetLogDescriptorsResponsePathSelectorLogDescriptorsMetadataSyncing) Regions() BatchGetLogDescriptorsResponsePathSelectorLogDescriptorsMetadataSyncingRegions {
	return BatchGetLogDescriptorsResponsePathSelectorLogDescriptorsMetadataSyncingRegions{}
}

type BatchGetLogDescriptorsResponsePathSelectorLogDescriptorsMetadataSyncingOwningRegion struct{}

func (BatchGetLogDescriptorsResponsePathSelectorLogDescriptorsMetadataSyncingOwningRegion) FieldPath() *BatchGetLogDescriptorsResponse_FieldSubPath {
	return &BatchGetLogDescriptorsResponse_FieldSubPath{
		selector: BatchGetLogDescriptorsResponse_FieldPathSelectorLogDescriptors,
		subPath:  log_descriptor.NewLogDescriptorFieldPathBuilder().Metadata().Syncing().OwningRegion().FieldPath(),
	}
}

func (s BatchGetLogDescriptorsResponsePathSelectorLogDescriptorsMetadataSyncingOwningRegion) WithValue(value string) *BatchGetLogDescriptorsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetLogDescriptorsResponse_FieldSubPathValue)
}

func (s BatchGetLogDescriptorsResponsePathSelectorLogDescriptorsMetadataSyncingOwningRegion) WithArrayOfValues(values []string) *BatchGetLogDescriptorsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetLogDescriptorsResponse_FieldSubPathArrayOfValues)
}

type BatchGetLogDescriptorsResponsePathSelectorLogDescriptorsMetadataSyncingRegions struct{}

func (BatchGetLogDescriptorsResponsePathSelectorLogDescriptorsMetadataSyncingRegions) FieldPath() *BatchGetLogDescriptorsResponse_FieldSubPath {
	return &BatchGetLogDescriptorsResponse_FieldSubPath{
		selector: BatchGetLogDescriptorsResponse_FieldPathSelectorLogDescriptors,
		subPath:  log_descriptor.NewLogDescriptorFieldPathBuilder().Metadata().Syncing().Regions().FieldPath(),
	}
}

func (s BatchGetLogDescriptorsResponsePathSelectorLogDescriptorsMetadataSyncingRegions) WithValue(value []string) *BatchGetLogDescriptorsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetLogDescriptorsResponse_FieldSubPathValue)
}

func (s BatchGetLogDescriptorsResponsePathSelectorLogDescriptorsMetadataSyncingRegions) WithArrayOfValues(values [][]string) *BatchGetLogDescriptorsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetLogDescriptorsResponse_FieldSubPathArrayOfValues)
}

func (s BatchGetLogDescriptorsResponsePathSelectorLogDescriptorsMetadataSyncingRegions) WithItemValue(value string) *BatchGetLogDescriptorsResponse_FieldSubPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*BatchGetLogDescriptorsResponse_FieldSubPathArrayItemValue)
}

type BatchGetLogDescriptorsResponsePathSelectorMissing struct{}

func (BatchGetLogDescriptorsResponsePathSelectorMissing) FieldPath() *BatchGetLogDescriptorsResponse_FieldTerminalPath {
	return &BatchGetLogDescriptorsResponse_FieldTerminalPath{selector: BatchGetLogDescriptorsResponse_FieldPathSelectorMissing}
}

func (s BatchGetLogDescriptorsResponsePathSelectorMissing) WithValue(value []*log_descriptor.Reference) *BatchGetLogDescriptorsResponse_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetLogDescriptorsResponse_FieldTerminalPathValue)
}

func (s BatchGetLogDescriptorsResponsePathSelectorMissing) WithArrayOfValues(values [][]*log_descriptor.Reference) *BatchGetLogDescriptorsResponse_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetLogDescriptorsResponse_FieldTerminalPathArrayOfValues)
}

func (s BatchGetLogDescriptorsResponsePathSelectorMissing) WithItemValue(value *log_descriptor.Reference) *BatchGetLogDescriptorsResponse_FieldTerminalPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*BatchGetLogDescriptorsResponse_FieldTerminalPathArrayItemValue)
}

type ListLogDescriptorsRequestFieldPathBuilder struct{}

func NewListLogDescriptorsRequestFieldPathBuilder() ListLogDescriptorsRequestFieldPathBuilder {
	return ListLogDescriptorsRequestFieldPathBuilder{}
}
func (ListLogDescriptorsRequestFieldPathBuilder) Parent() ListLogDescriptorsRequestPathSelectorParent {
	return ListLogDescriptorsRequestPathSelectorParent{}
}
func (ListLogDescriptorsRequestFieldPathBuilder) PageSize() ListLogDescriptorsRequestPathSelectorPageSize {
	return ListLogDescriptorsRequestPathSelectorPageSize{}
}
func (ListLogDescriptorsRequestFieldPathBuilder) PageToken() ListLogDescriptorsRequestPathSelectorPageToken {
	return ListLogDescriptorsRequestPathSelectorPageToken{}
}
func (ListLogDescriptorsRequestFieldPathBuilder) OrderBy() ListLogDescriptorsRequestPathSelectorOrderBy {
	return ListLogDescriptorsRequestPathSelectorOrderBy{}
}
func (ListLogDescriptorsRequestFieldPathBuilder) Filter() ListLogDescriptorsRequestPathSelectorFilter {
	return ListLogDescriptorsRequestPathSelectorFilter{}
}
func (ListLogDescriptorsRequestFieldPathBuilder) FieldMask() ListLogDescriptorsRequestPathSelectorFieldMask {
	return ListLogDescriptorsRequestPathSelectorFieldMask{}
}
func (ListLogDescriptorsRequestFieldPathBuilder) View() ListLogDescriptorsRequestPathSelectorView {
	return ListLogDescriptorsRequestPathSelectorView{}
}

type ListLogDescriptorsRequestPathSelectorParent struct{}

func (ListLogDescriptorsRequestPathSelectorParent) FieldPath() *ListLogDescriptorsRequest_FieldTerminalPath {
	return &ListLogDescriptorsRequest_FieldTerminalPath{selector: ListLogDescriptorsRequest_FieldPathSelectorParent}
}

func (s ListLogDescriptorsRequestPathSelectorParent) WithValue(value *log_descriptor.ParentName) *ListLogDescriptorsRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*ListLogDescriptorsRequest_FieldTerminalPathValue)
}

func (s ListLogDescriptorsRequestPathSelectorParent) WithArrayOfValues(values []*log_descriptor.ParentName) *ListLogDescriptorsRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListLogDescriptorsRequest_FieldTerminalPathArrayOfValues)
}

type ListLogDescriptorsRequestPathSelectorPageSize struct{}

func (ListLogDescriptorsRequestPathSelectorPageSize) FieldPath() *ListLogDescriptorsRequest_FieldTerminalPath {
	return &ListLogDescriptorsRequest_FieldTerminalPath{selector: ListLogDescriptorsRequest_FieldPathSelectorPageSize}
}

func (s ListLogDescriptorsRequestPathSelectorPageSize) WithValue(value int32) *ListLogDescriptorsRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*ListLogDescriptorsRequest_FieldTerminalPathValue)
}

func (s ListLogDescriptorsRequestPathSelectorPageSize) WithArrayOfValues(values []int32) *ListLogDescriptorsRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListLogDescriptorsRequest_FieldTerminalPathArrayOfValues)
}

type ListLogDescriptorsRequestPathSelectorPageToken struct{}

func (ListLogDescriptorsRequestPathSelectorPageToken) FieldPath() *ListLogDescriptorsRequest_FieldTerminalPath {
	return &ListLogDescriptorsRequest_FieldTerminalPath{selector: ListLogDescriptorsRequest_FieldPathSelectorPageToken}
}

func (s ListLogDescriptorsRequestPathSelectorPageToken) WithValue(value *log_descriptor.PagerCursor) *ListLogDescriptorsRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*ListLogDescriptorsRequest_FieldTerminalPathValue)
}

func (s ListLogDescriptorsRequestPathSelectorPageToken) WithArrayOfValues(values []*log_descriptor.PagerCursor) *ListLogDescriptorsRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListLogDescriptorsRequest_FieldTerminalPathArrayOfValues)
}

type ListLogDescriptorsRequestPathSelectorOrderBy struct{}

func (ListLogDescriptorsRequestPathSelectorOrderBy) FieldPath() *ListLogDescriptorsRequest_FieldTerminalPath {
	return &ListLogDescriptorsRequest_FieldTerminalPath{selector: ListLogDescriptorsRequest_FieldPathSelectorOrderBy}
}

func (s ListLogDescriptorsRequestPathSelectorOrderBy) WithValue(value *log_descriptor.OrderBy) *ListLogDescriptorsRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*ListLogDescriptorsRequest_FieldTerminalPathValue)
}

func (s ListLogDescriptorsRequestPathSelectorOrderBy) WithArrayOfValues(values []*log_descriptor.OrderBy) *ListLogDescriptorsRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListLogDescriptorsRequest_FieldTerminalPathArrayOfValues)
}

type ListLogDescriptorsRequestPathSelectorFilter struct{}

func (ListLogDescriptorsRequestPathSelectorFilter) FieldPath() *ListLogDescriptorsRequest_FieldTerminalPath {
	return &ListLogDescriptorsRequest_FieldTerminalPath{selector: ListLogDescriptorsRequest_FieldPathSelectorFilter}
}

func (s ListLogDescriptorsRequestPathSelectorFilter) WithValue(value *log_descriptor.Filter) *ListLogDescriptorsRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*ListLogDescriptorsRequest_FieldTerminalPathValue)
}

func (s ListLogDescriptorsRequestPathSelectorFilter) WithArrayOfValues(values []*log_descriptor.Filter) *ListLogDescriptorsRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListLogDescriptorsRequest_FieldTerminalPathArrayOfValues)
}

type ListLogDescriptorsRequestPathSelectorFieldMask struct{}

func (ListLogDescriptorsRequestPathSelectorFieldMask) FieldPath() *ListLogDescriptorsRequest_FieldTerminalPath {
	return &ListLogDescriptorsRequest_FieldTerminalPath{selector: ListLogDescriptorsRequest_FieldPathSelectorFieldMask}
}

func (s ListLogDescriptorsRequestPathSelectorFieldMask) WithValue(value *log_descriptor.LogDescriptor_FieldMask) *ListLogDescriptorsRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*ListLogDescriptorsRequest_FieldTerminalPathValue)
}

func (s ListLogDescriptorsRequestPathSelectorFieldMask) WithArrayOfValues(values []*log_descriptor.LogDescriptor_FieldMask) *ListLogDescriptorsRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListLogDescriptorsRequest_FieldTerminalPathArrayOfValues)
}

type ListLogDescriptorsRequestPathSelectorView struct{}

func (ListLogDescriptorsRequestPathSelectorView) FieldPath() *ListLogDescriptorsRequest_FieldTerminalPath {
	return &ListLogDescriptorsRequest_FieldTerminalPath{selector: ListLogDescriptorsRequest_FieldPathSelectorView}
}

func (s ListLogDescriptorsRequestPathSelectorView) WithValue(value view.View) *ListLogDescriptorsRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*ListLogDescriptorsRequest_FieldTerminalPathValue)
}

func (s ListLogDescriptorsRequestPathSelectorView) WithArrayOfValues(values []view.View) *ListLogDescriptorsRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListLogDescriptorsRequest_FieldTerminalPathArrayOfValues)
}

type ListLogDescriptorsResponseFieldPathBuilder struct{}

func NewListLogDescriptorsResponseFieldPathBuilder() ListLogDescriptorsResponseFieldPathBuilder {
	return ListLogDescriptorsResponseFieldPathBuilder{}
}
func (ListLogDescriptorsResponseFieldPathBuilder) LogDescriptors() ListLogDescriptorsResponsePathSelectorLogDescriptors {
	return ListLogDescriptorsResponsePathSelectorLogDescriptors{}
}
func (ListLogDescriptorsResponseFieldPathBuilder) PrevPageToken() ListLogDescriptorsResponsePathSelectorPrevPageToken {
	return ListLogDescriptorsResponsePathSelectorPrevPageToken{}
}
func (ListLogDescriptorsResponseFieldPathBuilder) NextPageToken() ListLogDescriptorsResponsePathSelectorNextPageToken {
	return ListLogDescriptorsResponsePathSelectorNextPageToken{}
}

type ListLogDescriptorsResponsePathSelectorLogDescriptors struct{}

func (ListLogDescriptorsResponsePathSelectorLogDescriptors) FieldPath() *ListLogDescriptorsResponse_FieldTerminalPath {
	return &ListLogDescriptorsResponse_FieldTerminalPath{selector: ListLogDescriptorsResponse_FieldPathSelectorLogDescriptors}
}

func (s ListLogDescriptorsResponsePathSelectorLogDescriptors) WithValue(value []*log_descriptor.LogDescriptor) *ListLogDescriptorsResponse_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*ListLogDescriptorsResponse_FieldTerminalPathValue)
}

func (s ListLogDescriptorsResponsePathSelectorLogDescriptors) WithArrayOfValues(values [][]*log_descriptor.LogDescriptor) *ListLogDescriptorsResponse_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListLogDescriptorsResponse_FieldTerminalPathArrayOfValues)
}

func (s ListLogDescriptorsResponsePathSelectorLogDescriptors) WithItemValue(value *log_descriptor.LogDescriptor) *ListLogDescriptorsResponse_FieldTerminalPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*ListLogDescriptorsResponse_FieldTerminalPathArrayItemValue)
}
func (ListLogDescriptorsResponsePathSelectorLogDescriptors) WithSubPath(subPath log_descriptor.LogDescriptor_FieldPath) *ListLogDescriptorsResponse_FieldSubPath {
	return &ListLogDescriptorsResponse_FieldSubPath{selector: ListLogDescriptorsResponse_FieldPathSelectorLogDescriptors, subPath: subPath}
}

func (s ListLogDescriptorsResponsePathSelectorLogDescriptors) WithSubValue(subPathValue log_descriptor.LogDescriptor_FieldPathValue) *ListLogDescriptorsResponse_FieldSubPathValue {
	return &ListLogDescriptorsResponse_FieldSubPathValue{ListLogDescriptorsResponse_FieldPath: s.WithSubPath(subPathValue), subPathValue: subPathValue}
}

func (s ListLogDescriptorsResponsePathSelectorLogDescriptors) WithSubArrayOfValues(subPathArrayOfValues log_descriptor.LogDescriptor_FieldPathArrayOfValues) *ListLogDescriptorsResponse_FieldSubPathArrayOfValues {
	return &ListLogDescriptorsResponse_FieldSubPathArrayOfValues{ListLogDescriptorsResponse_FieldPath: s.WithSubPath(subPathArrayOfValues), subPathArrayOfValues: subPathArrayOfValues}
}

func (s ListLogDescriptorsResponsePathSelectorLogDescriptors) WithSubArrayItemValue(subPathArrayItemValue log_descriptor.LogDescriptor_FieldPathArrayItemValue) *ListLogDescriptorsResponse_FieldSubPathArrayItemValue {
	return &ListLogDescriptorsResponse_FieldSubPathArrayItemValue{ListLogDescriptorsResponse_FieldPath: s.WithSubPath(subPathArrayItemValue), subPathItemValue: subPathArrayItemValue}
}

func (ListLogDescriptorsResponsePathSelectorLogDescriptors) Name() ListLogDescriptorsResponsePathSelectorLogDescriptorsName {
	return ListLogDescriptorsResponsePathSelectorLogDescriptorsName{}
}

func (ListLogDescriptorsResponsePathSelectorLogDescriptors) DisplayName() ListLogDescriptorsResponsePathSelectorLogDescriptorsDisplayName {
	return ListLogDescriptorsResponsePathSelectorLogDescriptorsDisplayName{}
}

func (ListLogDescriptorsResponsePathSelectorLogDescriptors) Description() ListLogDescriptorsResponsePathSelectorLogDescriptorsDescription {
	return ListLogDescriptorsResponsePathSelectorLogDescriptorsDescription{}
}

func (ListLogDescriptorsResponsePathSelectorLogDescriptors) Labels() ListLogDescriptorsResponsePathSelectorLogDescriptorsLabels {
	return ListLogDescriptorsResponsePathSelectorLogDescriptorsLabels{}
}

func (ListLogDescriptorsResponsePathSelectorLogDescriptors) PromotedLabelKeySets() ListLogDescriptorsResponsePathSelectorLogDescriptorsPromotedLabelKeySets {
	return ListLogDescriptorsResponsePathSelectorLogDescriptorsPromotedLabelKeySets{}
}

func (ListLogDescriptorsResponsePathSelectorLogDescriptors) Metadata() ListLogDescriptorsResponsePathSelectorLogDescriptorsMetadata {
	return ListLogDescriptorsResponsePathSelectorLogDescriptorsMetadata{}
}

type ListLogDescriptorsResponsePathSelectorLogDescriptorsName struct{}

func (ListLogDescriptorsResponsePathSelectorLogDescriptorsName) FieldPath() *ListLogDescriptorsResponse_FieldSubPath {
	return &ListLogDescriptorsResponse_FieldSubPath{
		selector: ListLogDescriptorsResponse_FieldPathSelectorLogDescriptors,
		subPath:  log_descriptor.NewLogDescriptorFieldPathBuilder().Name().FieldPath(),
	}
}

func (s ListLogDescriptorsResponsePathSelectorLogDescriptorsName) WithValue(value *log_descriptor.Name) *ListLogDescriptorsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListLogDescriptorsResponse_FieldSubPathValue)
}

func (s ListLogDescriptorsResponsePathSelectorLogDescriptorsName) WithArrayOfValues(values []*log_descriptor.Name) *ListLogDescriptorsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListLogDescriptorsResponse_FieldSubPathArrayOfValues)
}

type ListLogDescriptorsResponsePathSelectorLogDescriptorsDisplayName struct{}

func (ListLogDescriptorsResponsePathSelectorLogDescriptorsDisplayName) FieldPath() *ListLogDescriptorsResponse_FieldSubPath {
	return &ListLogDescriptorsResponse_FieldSubPath{
		selector: ListLogDescriptorsResponse_FieldPathSelectorLogDescriptors,
		subPath:  log_descriptor.NewLogDescriptorFieldPathBuilder().DisplayName().FieldPath(),
	}
}

func (s ListLogDescriptorsResponsePathSelectorLogDescriptorsDisplayName) WithValue(value string) *ListLogDescriptorsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListLogDescriptorsResponse_FieldSubPathValue)
}

func (s ListLogDescriptorsResponsePathSelectorLogDescriptorsDisplayName) WithArrayOfValues(values []string) *ListLogDescriptorsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListLogDescriptorsResponse_FieldSubPathArrayOfValues)
}

type ListLogDescriptorsResponsePathSelectorLogDescriptorsDescription struct{}

func (ListLogDescriptorsResponsePathSelectorLogDescriptorsDescription) FieldPath() *ListLogDescriptorsResponse_FieldSubPath {
	return &ListLogDescriptorsResponse_FieldSubPath{
		selector: ListLogDescriptorsResponse_FieldPathSelectorLogDescriptors,
		subPath:  log_descriptor.NewLogDescriptorFieldPathBuilder().Description().FieldPath(),
	}
}

func (s ListLogDescriptorsResponsePathSelectorLogDescriptorsDescription) WithValue(value string) *ListLogDescriptorsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListLogDescriptorsResponse_FieldSubPathValue)
}

func (s ListLogDescriptorsResponsePathSelectorLogDescriptorsDescription) WithArrayOfValues(values []string) *ListLogDescriptorsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListLogDescriptorsResponse_FieldSubPathArrayOfValues)
}

type ListLogDescriptorsResponsePathSelectorLogDescriptorsLabels struct{}

func (ListLogDescriptorsResponsePathSelectorLogDescriptorsLabels) FieldPath() *ListLogDescriptorsResponse_FieldSubPath {
	return &ListLogDescriptorsResponse_FieldSubPath{
		selector: ListLogDescriptorsResponse_FieldPathSelectorLogDescriptors,
		subPath:  log_descriptor.NewLogDescriptorFieldPathBuilder().Labels().FieldPath(),
	}
}

func (s ListLogDescriptorsResponsePathSelectorLogDescriptorsLabels) WithValue(value []*logging_common.LabelDescriptor) *ListLogDescriptorsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListLogDescriptorsResponse_FieldSubPathValue)
}

func (s ListLogDescriptorsResponsePathSelectorLogDescriptorsLabels) WithArrayOfValues(values [][]*logging_common.LabelDescriptor) *ListLogDescriptorsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListLogDescriptorsResponse_FieldSubPathArrayOfValues)
}

func (s ListLogDescriptorsResponsePathSelectorLogDescriptorsLabels) WithItemValue(value *logging_common.LabelDescriptor) *ListLogDescriptorsResponse_FieldSubPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*ListLogDescriptorsResponse_FieldSubPathArrayItemValue)
}

func (ListLogDescriptorsResponsePathSelectorLogDescriptorsLabels) Key() ListLogDescriptorsResponsePathSelectorLogDescriptorsLabelsKey {
	return ListLogDescriptorsResponsePathSelectorLogDescriptorsLabelsKey{}
}

func (ListLogDescriptorsResponsePathSelectorLogDescriptorsLabels) Description() ListLogDescriptorsResponsePathSelectorLogDescriptorsLabelsDescription {
	return ListLogDescriptorsResponsePathSelectorLogDescriptorsLabelsDescription{}
}

type ListLogDescriptorsResponsePathSelectorLogDescriptorsLabelsKey struct{}

func (ListLogDescriptorsResponsePathSelectorLogDescriptorsLabelsKey) FieldPath() *ListLogDescriptorsResponse_FieldSubPath {
	return &ListLogDescriptorsResponse_FieldSubPath{
		selector: ListLogDescriptorsResponse_FieldPathSelectorLogDescriptors,
		subPath:  log_descriptor.NewLogDescriptorFieldPathBuilder().Labels().Key().FieldPath(),
	}
}

func (s ListLogDescriptorsResponsePathSelectorLogDescriptorsLabelsKey) WithValue(value string) *ListLogDescriptorsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListLogDescriptorsResponse_FieldSubPathValue)
}

func (s ListLogDescriptorsResponsePathSelectorLogDescriptorsLabelsKey) WithArrayOfValues(values []string) *ListLogDescriptorsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListLogDescriptorsResponse_FieldSubPathArrayOfValues)
}

type ListLogDescriptorsResponsePathSelectorLogDescriptorsLabelsDescription struct{}

func (ListLogDescriptorsResponsePathSelectorLogDescriptorsLabelsDescription) FieldPath() *ListLogDescriptorsResponse_FieldSubPath {
	return &ListLogDescriptorsResponse_FieldSubPath{
		selector: ListLogDescriptorsResponse_FieldPathSelectorLogDescriptors,
		subPath:  log_descriptor.NewLogDescriptorFieldPathBuilder().Labels().Description().FieldPath(),
	}
}

func (s ListLogDescriptorsResponsePathSelectorLogDescriptorsLabelsDescription) WithValue(value string) *ListLogDescriptorsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListLogDescriptorsResponse_FieldSubPathValue)
}

func (s ListLogDescriptorsResponsePathSelectorLogDescriptorsLabelsDescription) WithArrayOfValues(values []string) *ListLogDescriptorsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListLogDescriptorsResponse_FieldSubPathArrayOfValues)
}

type ListLogDescriptorsResponsePathSelectorLogDescriptorsPromotedLabelKeySets struct{}

func (ListLogDescriptorsResponsePathSelectorLogDescriptorsPromotedLabelKeySets) FieldPath() *ListLogDescriptorsResponse_FieldSubPath {
	return &ListLogDescriptorsResponse_FieldSubPath{
		selector: ListLogDescriptorsResponse_FieldPathSelectorLogDescriptors,
		subPath:  log_descriptor.NewLogDescriptorFieldPathBuilder().PromotedLabelKeySets().FieldPath(),
	}
}

func (s ListLogDescriptorsResponsePathSelectorLogDescriptorsPromotedLabelKeySets) WithValue(value []*logging_common.LabelKeySet) *ListLogDescriptorsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListLogDescriptorsResponse_FieldSubPathValue)
}

func (s ListLogDescriptorsResponsePathSelectorLogDescriptorsPromotedLabelKeySets) WithArrayOfValues(values [][]*logging_common.LabelKeySet) *ListLogDescriptorsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListLogDescriptorsResponse_FieldSubPathArrayOfValues)
}

func (s ListLogDescriptorsResponsePathSelectorLogDescriptorsPromotedLabelKeySets) WithItemValue(value *logging_common.LabelKeySet) *ListLogDescriptorsResponse_FieldSubPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*ListLogDescriptorsResponse_FieldSubPathArrayItemValue)
}

func (ListLogDescriptorsResponsePathSelectorLogDescriptorsPromotedLabelKeySets) LabelKeys() ListLogDescriptorsResponsePathSelectorLogDescriptorsPromotedLabelKeySetsLabelKeys {
	return ListLogDescriptorsResponsePathSelectorLogDescriptorsPromotedLabelKeySetsLabelKeys{}
}

type ListLogDescriptorsResponsePathSelectorLogDescriptorsPromotedLabelKeySetsLabelKeys struct{}

func (ListLogDescriptorsResponsePathSelectorLogDescriptorsPromotedLabelKeySetsLabelKeys) FieldPath() *ListLogDescriptorsResponse_FieldSubPath {
	return &ListLogDescriptorsResponse_FieldSubPath{
		selector: ListLogDescriptorsResponse_FieldPathSelectorLogDescriptors,
		subPath:  log_descriptor.NewLogDescriptorFieldPathBuilder().PromotedLabelKeySets().LabelKeys().FieldPath(),
	}
}

func (s ListLogDescriptorsResponsePathSelectorLogDescriptorsPromotedLabelKeySetsLabelKeys) WithValue(value []string) *ListLogDescriptorsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListLogDescriptorsResponse_FieldSubPathValue)
}

func (s ListLogDescriptorsResponsePathSelectorLogDescriptorsPromotedLabelKeySetsLabelKeys) WithArrayOfValues(values [][]string) *ListLogDescriptorsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListLogDescriptorsResponse_FieldSubPathArrayOfValues)
}

func (s ListLogDescriptorsResponsePathSelectorLogDescriptorsPromotedLabelKeySetsLabelKeys) WithItemValue(value string) *ListLogDescriptorsResponse_FieldSubPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*ListLogDescriptorsResponse_FieldSubPathArrayItemValue)
}

type ListLogDescriptorsResponsePathSelectorLogDescriptorsMetadata struct{}

func (ListLogDescriptorsResponsePathSelectorLogDescriptorsMetadata) FieldPath() *ListLogDescriptorsResponse_FieldSubPath {
	return &ListLogDescriptorsResponse_FieldSubPath{
		selector: ListLogDescriptorsResponse_FieldPathSelectorLogDescriptors,
		subPath:  log_descriptor.NewLogDescriptorFieldPathBuilder().Metadata().FieldPath(),
	}
}

func (s ListLogDescriptorsResponsePathSelectorLogDescriptorsMetadata) WithValue(value *ntt_meta.Meta) *ListLogDescriptorsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListLogDescriptorsResponse_FieldSubPathValue)
}

func (s ListLogDescriptorsResponsePathSelectorLogDescriptorsMetadata) WithArrayOfValues(values []*ntt_meta.Meta) *ListLogDescriptorsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListLogDescriptorsResponse_FieldSubPathArrayOfValues)
}

func (ListLogDescriptorsResponsePathSelectorLogDescriptorsMetadata) CreateTime() ListLogDescriptorsResponsePathSelectorLogDescriptorsMetadataCreateTime {
	return ListLogDescriptorsResponsePathSelectorLogDescriptorsMetadataCreateTime{}
}

func (ListLogDescriptorsResponsePathSelectorLogDescriptorsMetadata) UpdateTime() ListLogDescriptorsResponsePathSelectorLogDescriptorsMetadataUpdateTime {
	return ListLogDescriptorsResponsePathSelectorLogDescriptorsMetadataUpdateTime{}
}

func (ListLogDescriptorsResponsePathSelectorLogDescriptorsMetadata) Uuid() ListLogDescriptorsResponsePathSelectorLogDescriptorsMetadataUuid {
	return ListLogDescriptorsResponsePathSelectorLogDescriptorsMetadataUuid{}
}

func (ListLogDescriptorsResponsePathSelectorLogDescriptorsMetadata) Tags() ListLogDescriptorsResponsePathSelectorLogDescriptorsMetadataTags {
	return ListLogDescriptorsResponsePathSelectorLogDescriptorsMetadataTags{}
}

func (ListLogDescriptorsResponsePathSelectorLogDescriptorsMetadata) Labels() ListLogDescriptorsResponsePathSelectorLogDescriptorsMetadataLabels {
	return ListLogDescriptorsResponsePathSelectorLogDescriptorsMetadataLabels{}
}

func (ListLogDescriptorsResponsePathSelectorLogDescriptorsMetadata) Annotations() ListLogDescriptorsResponsePathSelectorLogDescriptorsMetadataAnnotations {
	return ListLogDescriptorsResponsePathSelectorLogDescriptorsMetadataAnnotations{}
}

func (ListLogDescriptorsResponsePathSelectorLogDescriptorsMetadata) Generation() ListLogDescriptorsResponsePathSelectorLogDescriptorsMetadataGeneration {
	return ListLogDescriptorsResponsePathSelectorLogDescriptorsMetadataGeneration{}
}

func (ListLogDescriptorsResponsePathSelectorLogDescriptorsMetadata) ResourceVersion() ListLogDescriptorsResponsePathSelectorLogDescriptorsMetadataResourceVersion {
	return ListLogDescriptorsResponsePathSelectorLogDescriptorsMetadataResourceVersion{}
}

func (ListLogDescriptorsResponsePathSelectorLogDescriptorsMetadata) OwnerReferences() ListLogDescriptorsResponsePathSelectorLogDescriptorsMetadataOwnerReferences {
	return ListLogDescriptorsResponsePathSelectorLogDescriptorsMetadataOwnerReferences{}
}

func (ListLogDescriptorsResponsePathSelectorLogDescriptorsMetadata) Shards() ListLogDescriptorsResponsePathSelectorLogDescriptorsMetadataShards {
	return ListLogDescriptorsResponsePathSelectorLogDescriptorsMetadataShards{}
}

func (ListLogDescriptorsResponsePathSelectorLogDescriptorsMetadata) Syncing() ListLogDescriptorsResponsePathSelectorLogDescriptorsMetadataSyncing {
	return ListLogDescriptorsResponsePathSelectorLogDescriptorsMetadataSyncing{}
}

type ListLogDescriptorsResponsePathSelectorLogDescriptorsMetadataCreateTime struct{}

func (ListLogDescriptorsResponsePathSelectorLogDescriptorsMetadataCreateTime) FieldPath() *ListLogDescriptorsResponse_FieldSubPath {
	return &ListLogDescriptorsResponse_FieldSubPath{
		selector: ListLogDescriptorsResponse_FieldPathSelectorLogDescriptors,
		subPath:  log_descriptor.NewLogDescriptorFieldPathBuilder().Metadata().CreateTime().FieldPath(),
	}
}

func (s ListLogDescriptorsResponsePathSelectorLogDescriptorsMetadataCreateTime) WithValue(value *timestamp.Timestamp) *ListLogDescriptorsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListLogDescriptorsResponse_FieldSubPathValue)
}

func (s ListLogDescriptorsResponsePathSelectorLogDescriptorsMetadataCreateTime) WithArrayOfValues(values []*timestamp.Timestamp) *ListLogDescriptorsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListLogDescriptorsResponse_FieldSubPathArrayOfValues)
}

type ListLogDescriptorsResponsePathSelectorLogDescriptorsMetadataUpdateTime struct{}

func (ListLogDescriptorsResponsePathSelectorLogDescriptorsMetadataUpdateTime) FieldPath() *ListLogDescriptorsResponse_FieldSubPath {
	return &ListLogDescriptorsResponse_FieldSubPath{
		selector: ListLogDescriptorsResponse_FieldPathSelectorLogDescriptors,
		subPath:  log_descriptor.NewLogDescriptorFieldPathBuilder().Metadata().UpdateTime().FieldPath(),
	}
}

func (s ListLogDescriptorsResponsePathSelectorLogDescriptorsMetadataUpdateTime) WithValue(value *timestamp.Timestamp) *ListLogDescriptorsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListLogDescriptorsResponse_FieldSubPathValue)
}

func (s ListLogDescriptorsResponsePathSelectorLogDescriptorsMetadataUpdateTime) WithArrayOfValues(values []*timestamp.Timestamp) *ListLogDescriptorsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListLogDescriptorsResponse_FieldSubPathArrayOfValues)
}

type ListLogDescriptorsResponsePathSelectorLogDescriptorsMetadataUuid struct{}

func (ListLogDescriptorsResponsePathSelectorLogDescriptorsMetadataUuid) FieldPath() *ListLogDescriptorsResponse_FieldSubPath {
	return &ListLogDescriptorsResponse_FieldSubPath{
		selector: ListLogDescriptorsResponse_FieldPathSelectorLogDescriptors,
		subPath:  log_descriptor.NewLogDescriptorFieldPathBuilder().Metadata().Uuid().FieldPath(),
	}
}

func (s ListLogDescriptorsResponsePathSelectorLogDescriptorsMetadataUuid) WithValue(value string) *ListLogDescriptorsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListLogDescriptorsResponse_FieldSubPathValue)
}

func (s ListLogDescriptorsResponsePathSelectorLogDescriptorsMetadataUuid) WithArrayOfValues(values []string) *ListLogDescriptorsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListLogDescriptorsResponse_FieldSubPathArrayOfValues)
}

type ListLogDescriptorsResponsePathSelectorLogDescriptorsMetadataTags struct{}

func (ListLogDescriptorsResponsePathSelectorLogDescriptorsMetadataTags) FieldPath() *ListLogDescriptorsResponse_FieldSubPath {
	return &ListLogDescriptorsResponse_FieldSubPath{
		selector: ListLogDescriptorsResponse_FieldPathSelectorLogDescriptors,
		subPath:  log_descriptor.NewLogDescriptorFieldPathBuilder().Metadata().Tags().FieldPath(),
	}
}

func (s ListLogDescriptorsResponsePathSelectorLogDescriptorsMetadataTags) WithValue(value []string) *ListLogDescriptorsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListLogDescriptorsResponse_FieldSubPathValue)
}

func (s ListLogDescriptorsResponsePathSelectorLogDescriptorsMetadataTags) WithArrayOfValues(values [][]string) *ListLogDescriptorsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListLogDescriptorsResponse_FieldSubPathArrayOfValues)
}

func (s ListLogDescriptorsResponsePathSelectorLogDescriptorsMetadataTags) WithItemValue(value string) *ListLogDescriptorsResponse_FieldSubPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*ListLogDescriptorsResponse_FieldSubPathArrayItemValue)
}

type ListLogDescriptorsResponsePathSelectorLogDescriptorsMetadataLabels struct{}

func (ListLogDescriptorsResponsePathSelectorLogDescriptorsMetadataLabels) FieldPath() *ListLogDescriptorsResponse_FieldSubPath {
	return &ListLogDescriptorsResponse_FieldSubPath{
		selector: ListLogDescriptorsResponse_FieldPathSelectorLogDescriptors,
		subPath:  log_descriptor.NewLogDescriptorFieldPathBuilder().Metadata().Labels().FieldPath(),
	}
}

func (s ListLogDescriptorsResponsePathSelectorLogDescriptorsMetadataLabels) WithValue(value map[string]string) *ListLogDescriptorsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListLogDescriptorsResponse_FieldSubPathValue)
}

func (s ListLogDescriptorsResponsePathSelectorLogDescriptorsMetadataLabels) WithArrayOfValues(values []map[string]string) *ListLogDescriptorsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListLogDescriptorsResponse_FieldSubPathArrayOfValues)
}

func (ListLogDescriptorsResponsePathSelectorLogDescriptorsMetadataLabels) WithKey(key string) ListLogDescriptorsResponseMapPathSelectorLogDescriptorsMetadataLabels {
	return ListLogDescriptorsResponseMapPathSelectorLogDescriptorsMetadataLabels{key: key}
}

type ListLogDescriptorsResponseMapPathSelectorLogDescriptorsMetadataLabels struct {
	key string
}

func (s ListLogDescriptorsResponseMapPathSelectorLogDescriptorsMetadataLabels) FieldPath() *ListLogDescriptorsResponse_FieldSubPath {
	return &ListLogDescriptorsResponse_FieldSubPath{
		selector: ListLogDescriptorsResponse_FieldPathSelectorLogDescriptors,
		subPath:  log_descriptor.NewLogDescriptorFieldPathBuilder().Metadata().Labels().WithKey(s.key).FieldPath(),
	}
}

func (s ListLogDescriptorsResponseMapPathSelectorLogDescriptorsMetadataLabels) WithValue(value string) *ListLogDescriptorsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListLogDescriptorsResponse_FieldSubPathValue)
}

func (s ListLogDescriptorsResponseMapPathSelectorLogDescriptorsMetadataLabels) WithArrayOfValues(values []string) *ListLogDescriptorsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListLogDescriptorsResponse_FieldSubPathArrayOfValues)
}

type ListLogDescriptorsResponsePathSelectorLogDescriptorsMetadataAnnotations struct{}

func (ListLogDescriptorsResponsePathSelectorLogDescriptorsMetadataAnnotations) FieldPath() *ListLogDescriptorsResponse_FieldSubPath {
	return &ListLogDescriptorsResponse_FieldSubPath{
		selector: ListLogDescriptorsResponse_FieldPathSelectorLogDescriptors,
		subPath:  log_descriptor.NewLogDescriptorFieldPathBuilder().Metadata().Annotations().FieldPath(),
	}
}

func (s ListLogDescriptorsResponsePathSelectorLogDescriptorsMetadataAnnotations) WithValue(value map[string]string) *ListLogDescriptorsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListLogDescriptorsResponse_FieldSubPathValue)
}

func (s ListLogDescriptorsResponsePathSelectorLogDescriptorsMetadataAnnotations) WithArrayOfValues(values []map[string]string) *ListLogDescriptorsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListLogDescriptorsResponse_FieldSubPathArrayOfValues)
}

func (ListLogDescriptorsResponsePathSelectorLogDescriptorsMetadataAnnotations) WithKey(key string) ListLogDescriptorsResponseMapPathSelectorLogDescriptorsMetadataAnnotations {
	return ListLogDescriptorsResponseMapPathSelectorLogDescriptorsMetadataAnnotations{key: key}
}

type ListLogDescriptorsResponseMapPathSelectorLogDescriptorsMetadataAnnotations struct {
	key string
}

func (s ListLogDescriptorsResponseMapPathSelectorLogDescriptorsMetadataAnnotations) FieldPath() *ListLogDescriptorsResponse_FieldSubPath {
	return &ListLogDescriptorsResponse_FieldSubPath{
		selector: ListLogDescriptorsResponse_FieldPathSelectorLogDescriptors,
		subPath:  log_descriptor.NewLogDescriptorFieldPathBuilder().Metadata().Annotations().WithKey(s.key).FieldPath(),
	}
}

func (s ListLogDescriptorsResponseMapPathSelectorLogDescriptorsMetadataAnnotations) WithValue(value string) *ListLogDescriptorsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListLogDescriptorsResponse_FieldSubPathValue)
}

func (s ListLogDescriptorsResponseMapPathSelectorLogDescriptorsMetadataAnnotations) WithArrayOfValues(values []string) *ListLogDescriptorsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListLogDescriptorsResponse_FieldSubPathArrayOfValues)
}

type ListLogDescriptorsResponsePathSelectorLogDescriptorsMetadataGeneration struct{}

func (ListLogDescriptorsResponsePathSelectorLogDescriptorsMetadataGeneration) FieldPath() *ListLogDescriptorsResponse_FieldSubPath {
	return &ListLogDescriptorsResponse_FieldSubPath{
		selector: ListLogDescriptorsResponse_FieldPathSelectorLogDescriptors,
		subPath:  log_descriptor.NewLogDescriptorFieldPathBuilder().Metadata().Generation().FieldPath(),
	}
}

func (s ListLogDescriptorsResponsePathSelectorLogDescriptorsMetadataGeneration) WithValue(value int64) *ListLogDescriptorsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListLogDescriptorsResponse_FieldSubPathValue)
}

func (s ListLogDescriptorsResponsePathSelectorLogDescriptorsMetadataGeneration) WithArrayOfValues(values []int64) *ListLogDescriptorsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListLogDescriptorsResponse_FieldSubPathArrayOfValues)
}

type ListLogDescriptorsResponsePathSelectorLogDescriptorsMetadataResourceVersion struct{}

func (ListLogDescriptorsResponsePathSelectorLogDescriptorsMetadataResourceVersion) FieldPath() *ListLogDescriptorsResponse_FieldSubPath {
	return &ListLogDescriptorsResponse_FieldSubPath{
		selector: ListLogDescriptorsResponse_FieldPathSelectorLogDescriptors,
		subPath:  log_descriptor.NewLogDescriptorFieldPathBuilder().Metadata().ResourceVersion().FieldPath(),
	}
}

func (s ListLogDescriptorsResponsePathSelectorLogDescriptorsMetadataResourceVersion) WithValue(value string) *ListLogDescriptorsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListLogDescriptorsResponse_FieldSubPathValue)
}

func (s ListLogDescriptorsResponsePathSelectorLogDescriptorsMetadataResourceVersion) WithArrayOfValues(values []string) *ListLogDescriptorsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListLogDescriptorsResponse_FieldSubPathArrayOfValues)
}

type ListLogDescriptorsResponsePathSelectorLogDescriptorsMetadataOwnerReferences struct{}

func (ListLogDescriptorsResponsePathSelectorLogDescriptorsMetadataOwnerReferences) FieldPath() *ListLogDescriptorsResponse_FieldSubPath {
	return &ListLogDescriptorsResponse_FieldSubPath{
		selector: ListLogDescriptorsResponse_FieldPathSelectorLogDescriptors,
		subPath:  log_descriptor.NewLogDescriptorFieldPathBuilder().Metadata().OwnerReferences().FieldPath(),
	}
}

func (s ListLogDescriptorsResponsePathSelectorLogDescriptorsMetadataOwnerReferences) WithValue(value []*ntt_meta.OwnerReference) *ListLogDescriptorsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListLogDescriptorsResponse_FieldSubPathValue)
}

func (s ListLogDescriptorsResponsePathSelectorLogDescriptorsMetadataOwnerReferences) WithArrayOfValues(values [][]*ntt_meta.OwnerReference) *ListLogDescriptorsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListLogDescriptorsResponse_FieldSubPathArrayOfValues)
}

func (s ListLogDescriptorsResponsePathSelectorLogDescriptorsMetadataOwnerReferences) WithItemValue(value *ntt_meta.OwnerReference) *ListLogDescriptorsResponse_FieldSubPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*ListLogDescriptorsResponse_FieldSubPathArrayItemValue)
}

func (ListLogDescriptorsResponsePathSelectorLogDescriptorsMetadataOwnerReferences) ApiVersion() ListLogDescriptorsResponsePathSelectorLogDescriptorsMetadataOwnerReferencesApiVersion {
	return ListLogDescriptorsResponsePathSelectorLogDescriptorsMetadataOwnerReferencesApiVersion{}
}

func (ListLogDescriptorsResponsePathSelectorLogDescriptorsMetadataOwnerReferences) Kind() ListLogDescriptorsResponsePathSelectorLogDescriptorsMetadataOwnerReferencesKind {
	return ListLogDescriptorsResponsePathSelectorLogDescriptorsMetadataOwnerReferencesKind{}
}

func (ListLogDescriptorsResponsePathSelectorLogDescriptorsMetadataOwnerReferences) Name() ListLogDescriptorsResponsePathSelectorLogDescriptorsMetadataOwnerReferencesName {
	return ListLogDescriptorsResponsePathSelectorLogDescriptorsMetadataOwnerReferencesName{}
}

func (ListLogDescriptorsResponsePathSelectorLogDescriptorsMetadataOwnerReferences) Uid() ListLogDescriptorsResponsePathSelectorLogDescriptorsMetadataOwnerReferencesUid {
	return ListLogDescriptorsResponsePathSelectorLogDescriptorsMetadataOwnerReferencesUid{}
}

func (ListLogDescriptorsResponsePathSelectorLogDescriptorsMetadataOwnerReferences) Controller() ListLogDescriptorsResponsePathSelectorLogDescriptorsMetadataOwnerReferencesController {
	return ListLogDescriptorsResponsePathSelectorLogDescriptorsMetadataOwnerReferencesController{}
}

func (ListLogDescriptorsResponsePathSelectorLogDescriptorsMetadataOwnerReferences) BlockOwnerDeletion() ListLogDescriptorsResponsePathSelectorLogDescriptorsMetadataOwnerReferencesBlockOwnerDeletion {
	return ListLogDescriptorsResponsePathSelectorLogDescriptorsMetadataOwnerReferencesBlockOwnerDeletion{}
}

type ListLogDescriptorsResponsePathSelectorLogDescriptorsMetadataOwnerReferencesApiVersion struct{}

func (ListLogDescriptorsResponsePathSelectorLogDescriptorsMetadataOwnerReferencesApiVersion) FieldPath() *ListLogDescriptorsResponse_FieldSubPath {
	return &ListLogDescriptorsResponse_FieldSubPath{
		selector: ListLogDescriptorsResponse_FieldPathSelectorLogDescriptors,
		subPath:  log_descriptor.NewLogDescriptorFieldPathBuilder().Metadata().OwnerReferences().ApiVersion().FieldPath(),
	}
}

func (s ListLogDescriptorsResponsePathSelectorLogDescriptorsMetadataOwnerReferencesApiVersion) WithValue(value string) *ListLogDescriptorsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListLogDescriptorsResponse_FieldSubPathValue)
}

func (s ListLogDescriptorsResponsePathSelectorLogDescriptorsMetadataOwnerReferencesApiVersion) WithArrayOfValues(values []string) *ListLogDescriptorsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListLogDescriptorsResponse_FieldSubPathArrayOfValues)
}

type ListLogDescriptorsResponsePathSelectorLogDescriptorsMetadataOwnerReferencesKind struct{}

func (ListLogDescriptorsResponsePathSelectorLogDescriptorsMetadataOwnerReferencesKind) FieldPath() *ListLogDescriptorsResponse_FieldSubPath {
	return &ListLogDescriptorsResponse_FieldSubPath{
		selector: ListLogDescriptorsResponse_FieldPathSelectorLogDescriptors,
		subPath:  log_descriptor.NewLogDescriptorFieldPathBuilder().Metadata().OwnerReferences().Kind().FieldPath(),
	}
}

func (s ListLogDescriptorsResponsePathSelectorLogDescriptorsMetadataOwnerReferencesKind) WithValue(value string) *ListLogDescriptorsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListLogDescriptorsResponse_FieldSubPathValue)
}

func (s ListLogDescriptorsResponsePathSelectorLogDescriptorsMetadataOwnerReferencesKind) WithArrayOfValues(values []string) *ListLogDescriptorsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListLogDescriptorsResponse_FieldSubPathArrayOfValues)
}

type ListLogDescriptorsResponsePathSelectorLogDescriptorsMetadataOwnerReferencesName struct{}

func (ListLogDescriptorsResponsePathSelectorLogDescriptorsMetadataOwnerReferencesName) FieldPath() *ListLogDescriptorsResponse_FieldSubPath {
	return &ListLogDescriptorsResponse_FieldSubPath{
		selector: ListLogDescriptorsResponse_FieldPathSelectorLogDescriptors,
		subPath:  log_descriptor.NewLogDescriptorFieldPathBuilder().Metadata().OwnerReferences().Name().FieldPath(),
	}
}

func (s ListLogDescriptorsResponsePathSelectorLogDescriptorsMetadataOwnerReferencesName) WithValue(value string) *ListLogDescriptorsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListLogDescriptorsResponse_FieldSubPathValue)
}

func (s ListLogDescriptorsResponsePathSelectorLogDescriptorsMetadataOwnerReferencesName) WithArrayOfValues(values []string) *ListLogDescriptorsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListLogDescriptorsResponse_FieldSubPathArrayOfValues)
}

type ListLogDescriptorsResponsePathSelectorLogDescriptorsMetadataOwnerReferencesUid struct{}

func (ListLogDescriptorsResponsePathSelectorLogDescriptorsMetadataOwnerReferencesUid) FieldPath() *ListLogDescriptorsResponse_FieldSubPath {
	return &ListLogDescriptorsResponse_FieldSubPath{
		selector: ListLogDescriptorsResponse_FieldPathSelectorLogDescriptors,
		subPath:  log_descriptor.NewLogDescriptorFieldPathBuilder().Metadata().OwnerReferences().Uid().FieldPath(),
	}
}

func (s ListLogDescriptorsResponsePathSelectorLogDescriptorsMetadataOwnerReferencesUid) WithValue(value string) *ListLogDescriptorsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListLogDescriptorsResponse_FieldSubPathValue)
}

func (s ListLogDescriptorsResponsePathSelectorLogDescriptorsMetadataOwnerReferencesUid) WithArrayOfValues(values []string) *ListLogDescriptorsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListLogDescriptorsResponse_FieldSubPathArrayOfValues)
}

type ListLogDescriptorsResponsePathSelectorLogDescriptorsMetadataOwnerReferencesController struct{}

func (ListLogDescriptorsResponsePathSelectorLogDescriptorsMetadataOwnerReferencesController) FieldPath() *ListLogDescriptorsResponse_FieldSubPath {
	return &ListLogDescriptorsResponse_FieldSubPath{
		selector: ListLogDescriptorsResponse_FieldPathSelectorLogDescriptors,
		subPath:  log_descriptor.NewLogDescriptorFieldPathBuilder().Metadata().OwnerReferences().Controller().FieldPath(),
	}
}

func (s ListLogDescriptorsResponsePathSelectorLogDescriptorsMetadataOwnerReferencesController) WithValue(value bool) *ListLogDescriptorsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListLogDescriptorsResponse_FieldSubPathValue)
}

func (s ListLogDescriptorsResponsePathSelectorLogDescriptorsMetadataOwnerReferencesController) WithArrayOfValues(values []bool) *ListLogDescriptorsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListLogDescriptorsResponse_FieldSubPathArrayOfValues)
}

type ListLogDescriptorsResponsePathSelectorLogDescriptorsMetadataOwnerReferencesBlockOwnerDeletion struct{}

func (ListLogDescriptorsResponsePathSelectorLogDescriptorsMetadataOwnerReferencesBlockOwnerDeletion) FieldPath() *ListLogDescriptorsResponse_FieldSubPath {
	return &ListLogDescriptorsResponse_FieldSubPath{
		selector: ListLogDescriptorsResponse_FieldPathSelectorLogDescriptors,
		subPath:  log_descriptor.NewLogDescriptorFieldPathBuilder().Metadata().OwnerReferences().BlockOwnerDeletion().FieldPath(),
	}
}

func (s ListLogDescriptorsResponsePathSelectorLogDescriptorsMetadataOwnerReferencesBlockOwnerDeletion) WithValue(value bool) *ListLogDescriptorsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListLogDescriptorsResponse_FieldSubPathValue)
}

func (s ListLogDescriptorsResponsePathSelectorLogDescriptorsMetadataOwnerReferencesBlockOwnerDeletion) WithArrayOfValues(values []bool) *ListLogDescriptorsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListLogDescriptorsResponse_FieldSubPathArrayOfValues)
}

type ListLogDescriptorsResponsePathSelectorLogDescriptorsMetadataShards struct{}

func (ListLogDescriptorsResponsePathSelectorLogDescriptorsMetadataShards) FieldPath() *ListLogDescriptorsResponse_FieldSubPath {
	return &ListLogDescriptorsResponse_FieldSubPath{
		selector: ListLogDescriptorsResponse_FieldPathSelectorLogDescriptors,
		subPath:  log_descriptor.NewLogDescriptorFieldPathBuilder().Metadata().Shards().FieldPath(),
	}
}

func (s ListLogDescriptorsResponsePathSelectorLogDescriptorsMetadataShards) WithValue(value map[string]int64) *ListLogDescriptorsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListLogDescriptorsResponse_FieldSubPathValue)
}

func (s ListLogDescriptorsResponsePathSelectorLogDescriptorsMetadataShards) WithArrayOfValues(values []map[string]int64) *ListLogDescriptorsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListLogDescriptorsResponse_FieldSubPathArrayOfValues)
}

func (ListLogDescriptorsResponsePathSelectorLogDescriptorsMetadataShards) WithKey(key string) ListLogDescriptorsResponseMapPathSelectorLogDescriptorsMetadataShards {
	return ListLogDescriptorsResponseMapPathSelectorLogDescriptorsMetadataShards{key: key}
}

type ListLogDescriptorsResponseMapPathSelectorLogDescriptorsMetadataShards struct {
	key string
}

func (s ListLogDescriptorsResponseMapPathSelectorLogDescriptorsMetadataShards) FieldPath() *ListLogDescriptorsResponse_FieldSubPath {
	return &ListLogDescriptorsResponse_FieldSubPath{
		selector: ListLogDescriptorsResponse_FieldPathSelectorLogDescriptors,
		subPath:  log_descriptor.NewLogDescriptorFieldPathBuilder().Metadata().Shards().WithKey(s.key).FieldPath(),
	}
}

func (s ListLogDescriptorsResponseMapPathSelectorLogDescriptorsMetadataShards) WithValue(value int64) *ListLogDescriptorsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListLogDescriptorsResponse_FieldSubPathValue)
}

func (s ListLogDescriptorsResponseMapPathSelectorLogDescriptorsMetadataShards) WithArrayOfValues(values []int64) *ListLogDescriptorsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListLogDescriptorsResponse_FieldSubPathArrayOfValues)
}

type ListLogDescriptorsResponsePathSelectorLogDescriptorsMetadataSyncing struct{}

func (ListLogDescriptorsResponsePathSelectorLogDescriptorsMetadataSyncing) FieldPath() *ListLogDescriptorsResponse_FieldSubPath {
	return &ListLogDescriptorsResponse_FieldSubPath{
		selector: ListLogDescriptorsResponse_FieldPathSelectorLogDescriptors,
		subPath:  log_descriptor.NewLogDescriptorFieldPathBuilder().Metadata().Syncing().FieldPath(),
	}
}

func (s ListLogDescriptorsResponsePathSelectorLogDescriptorsMetadataSyncing) WithValue(value *ntt_meta.SyncingMeta) *ListLogDescriptorsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListLogDescriptorsResponse_FieldSubPathValue)
}

func (s ListLogDescriptorsResponsePathSelectorLogDescriptorsMetadataSyncing) WithArrayOfValues(values []*ntt_meta.SyncingMeta) *ListLogDescriptorsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListLogDescriptorsResponse_FieldSubPathArrayOfValues)
}

func (ListLogDescriptorsResponsePathSelectorLogDescriptorsMetadataSyncing) OwningRegion() ListLogDescriptorsResponsePathSelectorLogDescriptorsMetadataSyncingOwningRegion {
	return ListLogDescriptorsResponsePathSelectorLogDescriptorsMetadataSyncingOwningRegion{}
}

func (ListLogDescriptorsResponsePathSelectorLogDescriptorsMetadataSyncing) Regions() ListLogDescriptorsResponsePathSelectorLogDescriptorsMetadataSyncingRegions {
	return ListLogDescriptorsResponsePathSelectorLogDescriptorsMetadataSyncingRegions{}
}

type ListLogDescriptorsResponsePathSelectorLogDescriptorsMetadataSyncingOwningRegion struct{}

func (ListLogDescriptorsResponsePathSelectorLogDescriptorsMetadataSyncingOwningRegion) FieldPath() *ListLogDescriptorsResponse_FieldSubPath {
	return &ListLogDescriptorsResponse_FieldSubPath{
		selector: ListLogDescriptorsResponse_FieldPathSelectorLogDescriptors,
		subPath:  log_descriptor.NewLogDescriptorFieldPathBuilder().Metadata().Syncing().OwningRegion().FieldPath(),
	}
}

func (s ListLogDescriptorsResponsePathSelectorLogDescriptorsMetadataSyncingOwningRegion) WithValue(value string) *ListLogDescriptorsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListLogDescriptorsResponse_FieldSubPathValue)
}

func (s ListLogDescriptorsResponsePathSelectorLogDescriptorsMetadataSyncingOwningRegion) WithArrayOfValues(values []string) *ListLogDescriptorsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListLogDescriptorsResponse_FieldSubPathArrayOfValues)
}

type ListLogDescriptorsResponsePathSelectorLogDescriptorsMetadataSyncingRegions struct{}

func (ListLogDescriptorsResponsePathSelectorLogDescriptorsMetadataSyncingRegions) FieldPath() *ListLogDescriptorsResponse_FieldSubPath {
	return &ListLogDescriptorsResponse_FieldSubPath{
		selector: ListLogDescriptorsResponse_FieldPathSelectorLogDescriptors,
		subPath:  log_descriptor.NewLogDescriptorFieldPathBuilder().Metadata().Syncing().Regions().FieldPath(),
	}
}

func (s ListLogDescriptorsResponsePathSelectorLogDescriptorsMetadataSyncingRegions) WithValue(value []string) *ListLogDescriptorsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListLogDescriptorsResponse_FieldSubPathValue)
}

func (s ListLogDescriptorsResponsePathSelectorLogDescriptorsMetadataSyncingRegions) WithArrayOfValues(values [][]string) *ListLogDescriptorsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListLogDescriptorsResponse_FieldSubPathArrayOfValues)
}

func (s ListLogDescriptorsResponsePathSelectorLogDescriptorsMetadataSyncingRegions) WithItemValue(value string) *ListLogDescriptorsResponse_FieldSubPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*ListLogDescriptorsResponse_FieldSubPathArrayItemValue)
}

type ListLogDescriptorsResponsePathSelectorPrevPageToken struct{}

func (ListLogDescriptorsResponsePathSelectorPrevPageToken) FieldPath() *ListLogDescriptorsResponse_FieldTerminalPath {
	return &ListLogDescriptorsResponse_FieldTerminalPath{selector: ListLogDescriptorsResponse_FieldPathSelectorPrevPageToken}
}

func (s ListLogDescriptorsResponsePathSelectorPrevPageToken) WithValue(value *log_descriptor.PagerCursor) *ListLogDescriptorsResponse_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*ListLogDescriptorsResponse_FieldTerminalPathValue)
}

func (s ListLogDescriptorsResponsePathSelectorPrevPageToken) WithArrayOfValues(values []*log_descriptor.PagerCursor) *ListLogDescriptorsResponse_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListLogDescriptorsResponse_FieldTerminalPathArrayOfValues)
}

type ListLogDescriptorsResponsePathSelectorNextPageToken struct{}

func (ListLogDescriptorsResponsePathSelectorNextPageToken) FieldPath() *ListLogDescriptorsResponse_FieldTerminalPath {
	return &ListLogDescriptorsResponse_FieldTerminalPath{selector: ListLogDescriptorsResponse_FieldPathSelectorNextPageToken}
}

func (s ListLogDescriptorsResponsePathSelectorNextPageToken) WithValue(value *log_descriptor.PagerCursor) *ListLogDescriptorsResponse_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*ListLogDescriptorsResponse_FieldTerminalPathValue)
}

func (s ListLogDescriptorsResponsePathSelectorNextPageToken) WithArrayOfValues(values []*log_descriptor.PagerCursor) *ListLogDescriptorsResponse_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListLogDescriptorsResponse_FieldTerminalPathArrayOfValues)
}

type WatchLogDescriptorRequestFieldPathBuilder struct{}

func NewWatchLogDescriptorRequestFieldPathBuilder() WatchLogDescriptorRequestFieldPathBuilder {
	return WatchLogDescriptorRequestFieldPathBuilder{}
}
func (WatchLogDescriptorRequestFieldPathBuilder) Name() WatchLogDescriptorRequestPathSelectorName {
	return WatchLogDescriptorRequestPathSelectorName{}
}
func (WatchLogDescriptorRequestFieldPathBuilder) FieldMask() WatchLogDescriptorRequestPathSelectorFieldMask {
	return WatchLogDescriptorRequestPathSelectorFieldMask{}
}
func (WatchLogDescriptorRequestFieldPathBuilder) View() WatchLogDescriptorRequestPathSelectorView {
	return WatchLogDescriptorRequestPathSelectorView{}
}

type WatchLogDescriptorRequestPathSelectorName struct{}

func (WatchLogDescriptorRequestPathSelectorName) FieldPath() *WatchLogDescriptorRequest_FieldTerminalPath {
	return &WatchLogDescriptorRequest_FieldTerminalPath{selector: WatchLogDescriptorRequest_FieldPathSelectorName}
}

func (s WatchLogDescriptorRequestPathSelectorName) WithValue(value *log_descriptor.Reference) *WatchLogDescriptorRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*WatchLogDescriptorRequest_FieldTerminalPathValue)
}

func (s WatchLogDescriptorRequestPathSelectorName) WithArrayOfValues(values []*log_descriptor.Reference) *WatchLogDescriptorRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*WatchLogDescriptorRequest_FieldTerminalPathArrayOfValues)
}

type WatchLogDescriptorRequestPathSelectorFieldMask struct{}

func (WatchLogDescriptorRequestPathSelectorFieldMask) FieldPath() *WatchLogDescriptorRequest_FieldTerminalPath {
	return &WatchLogDescriptorRequest_FieldTerminalPath{selector: WatchLogDescriptorRequest_FieldPathSelectorFieldMask}
}

func (s WatchLogDescriptorRequestPathSelectorFieldMask) WithValue(value *log_descriptor.LogDescriptor_FieldMask) *WatchLogDescriptorRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*WatchLogDescriptorRequest_FieldTerminalPathValue)
}

func (s WatchLogDescriptorRequestPathSelectorFieldMask) WithArrayOfValues(values []*log_descriptor.LogDescriptor_FieldMask) *WatchLogDescriptorRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*WatchLogDescriptorRequest_FieldTerminalPathArrayOfValues)
}

type WatchLogDescriptorRequestPathSelectorView struct{}

func (WatchLogDescriptorRequestPathSelectorView) FieldPath() *WatchLogDescriptorRequest_FieldTerminalPath {
	return &WatchLogDescriptorRequest_FieldTerminalPath{selector: WatchLogDescriptorRequest_FieldPathSelectorView}
}

func (s WatchLogDescriptorRequestPathSelectorView) WithValue(value view.View) *WatchLogDescriptorRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*WatchLogDescriptorRequest_FieldTerminalPathValue)
}

func (s WatchLogDescriptorRequestPathSelectorView) WithArrayOfValues(values []view.View) *WatchLogDescriptorRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*WatchLogDescriptorRequest_FieldTerminalPathArrayOfValues)
}

type WatchLogDescriptorResponseFieldPathBuilder struct{}

func NewWatchLogDescriptorResponseFieldPathBuilder() WatchLogDescriptorResponseFieldPathBuilder {
	return WatchLogDescriptorResponseFieldPathBuilder{}
}
func (WatchLogDescriptorResponseFieldPathBuilder) Change() WatchLogDescriptorResponsePathSelectorChange {
	return WatchLogDescriptorResponsePathSelectorChange{}
}

type WatchLogDescriptorResponsePathSelectorChange struct{}

func (WatchLogDescriptorResponsePathSelectorChange) FieldPath() *WatchLogDescriptorResponse_FieldTerminalPath {
	return &WatchLogDescriptorResponse_FieldTerminalPath{selector: WatchLogDescriptorResponse_FieldPathSelectorChange}
}

func (s WatchLogDescriptorResponsePathSelectorChange) WithValue(value *log_descriptor.LogDescriptorChange) *WatchLogDescriptorResponse_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*WatchLogDescriptorResponse_FieldTerminalPathValue)
}

func (s WatchLogDescriptorResponsePathSelectorChange) WithArrayOfValues(values []*log_descriptor.LogDescriptorChange) *WatchLogDescriptorResponse_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*WatchLogDescriptorResponse_FieldTerminalPathArrayOfValues)
}

type WatchLogDescriptorsRequestFieldPathBuilder struct{}

func NewWatchLogDescriptorsRequestFieldPathBuilder() WatchLogDescriptorsRequestFieldPathBuilder {
	return WatchLogDescriptorsRequestFieldPathBuilder{}
}
func (WatchLogDescriptorsRequestFieldPathBuilder) Type() WatchLogDescriptorsRequestPathSelectorType {
	return WatchLogDescriptorsRequestPathSelectorType{}
}
func (WatchLogDescriptorsRequestFieldPathBuilder) Parent() WatchLogDescriptorsRequestPathSelectorParent {
	return WatchLogDescriptorsRequestPathSelectorParent{}
}
func (WatchLogDescriptorsRequestFieldPathBuilder) PageSize() WatchLogDescriptorsRequestPathSelectorPageSize {
	return WatchLogDescriptorsRequestPathSelectorPageSize{}
}
func (WatchLogDescriptorsRequestFieldPathBuilder) PageToken() WatchLogDescriptorsRequestPathSelectorPageToken {
	return WatchLogDescriptorsRequestPathSelectorPageToken{}
}
func (WatchLogDescriptorsRequestFieldPathBuilder) OrderBy() WatchLogDescriptorsRequestPathSelectorOrderBy {
	return WatchLogDescriptorsRequestPathSelectorOrderBy{}
}
func (WatchLogDescriptorsRequestFieldPathBuilder) ResumeToken() WatchLogDescriptorsRequestPathSelectorResumeToken {
	return WatchLogDescriptorsRequestPathSelectorResumeToken{}
}
func (WatchLogDescriptorsRequestFieldPathBuilder) Filter() WatchLogDescriptorsRequestPathSelectorFilter {
	return WatchLogDescriptorsRequestPathSelectorFilter{}
}
func (WatchLogDescriptorsRequestFieldPathBuilder) FieldMask() WatchLogDescriptorsRequestPathSelectorFieldMask {
	return WatchLogDescriptorsRequestPathSelectorFieldMask{}
}
func (WatchLogDescriptorsRequestFieldPathBuilder) View() WatchLogDescriptorsRequestPathSelectorView {
	return WatchLogDescriptorsRequestPathSelectorView{}
}
func (WatchLogDescriptorsRequestFieldPathBuilder) MaxChunkSize() WatchLogDescriptorsRequestPathSelectorMaxChunkSize {
	return WatchLogDescriptorsRequestPathSelectorMaxChunkSize{}
}

type WatchLogDescriptorsRequestPathSelectorType struct{}

func (WatchLogDescriptorsRequestPathSelectorType) FieldPath() *WatchLogDescriptorsRequest_FieldTerminalPath {
	return &WatchLogDescriptorsRequest_FieldTerminalPath{selector: WatchLogDescriptorsRequest_FieldPathSelectorType}
}

func (s WatchLogDescriptorsRequestPathSelectorType) WithValue(value watch_type.WatchType) *WatchLogDescriptorsRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*WatchLogDescriptorsRequest_FieldTerminalPathValue)
}

func (s WatchLogDescriptorsRequestPathSelectorType) WithArrayOfValues(values []watch_type.WatchType) *WatchLogDescriptorsRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*WatchLogDescriptorsRequest_FieldTerminalPathArrayOfValues)
}

type WatchLogDescriptorsRequestPathSelectorParent struct{}

func (WatchLogDescriptorsRequestPathSelectorParent) FieldPath() *WatchLogDescriptorsRequest_FieldTerminalPath {
	return &WatchLogDescriptorsRequest_FieldTerminalPath{selector: WatchLogDescriptorsRequest_FieldPathSelectorParent}
}

func (s WatchLogDescriptorsRequestPathSelectorParent) WithValue(value *log_descriptor.ParentReference) *WatchLogDescriptorsRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*WatchLogDescriptorsRequest_FieldTerminalPathValue)
}

func (s WatchLogDescriptorsRequestPathSelectorParent) WithArrayOfValues(values []*log_descriptor.ParentReference) *WatchLogDescriptorsRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*WatchLogDescriptorsRequest_FieldTerminalPathArrayOfValues)
}

type WatchLogDescriptorsRequestPathSelectorPageSize struct{}

func (WatchLogDescriptorsRequestPathSelectorPageSize) FieldPath() *WatchLogDescriptorsRequest_FieldTerminalPath {
	return &WatchLogDescriptorsRequest_FieldTerminalPath{selector: WatchLogDescriptorsRequest_FieldPathSelectorPageSize}
}

func (s WatchLogDescriptorsRequestPathSelectorPageSize) WithValue(value int32) *WatchLogDescriptorsRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*WatchLogDescriptorsRequest_FieldTerminalPathValue)
}

func (s WatchLogDescriptorsRequestPathSelectorPageSize) WithArrayOfValues(values []int32) *WatchLogDescriptorsRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*WatchLogDescriptorsRequest_FieldTerminalPathArrayOfValues)
}

type WatchLogDescriptorsRequestPathSelectorPageToken struct{}

func (WatchLogDescriptorsRequestPathSelectorPageToken) FieldPath() *WatchLogDescriptorsRequest_FieldTerminalPath {
	return &WatchLogDescriptorsRequest_FieldTerminalPath{selector: WatchLogDescriptorsRequest_FieldPathSelectorPageToken}
}

func (s WatchLogDescriptorsRequestPathSelectorPageToken) WithValue(value *log_descriptor.PagerCursor) *WatchLogDescriptorsRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*WatchLogDescriptorsRequest_FieldTerminalPathValue)
}

func (s WatchLogDescriptorsRequestPathSelectorPageToken) WithArrayOfValues(values []*log_descriptor.PagerCursor) *WatchLogDescriptorsRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*WatchLogDescriptorsRequest_FieldTerminalPathArrayOfValues)
}

type WatchLogDescriptorsRequestPathSelectorOrderBy struct{}

func (WatchLogDescriptorsRequestPathSelectorOrderBy) FieldPath() *WatchLogDescriptorsRequest_FieldTerminalPath {
	return &WatchLogDescriptorsRequest_FieldTerminalPath{selector: WatchLogDescriptorsRequest_FieldPathSelectorOrderBy}
}

func (s WatchLogDescriptorsRequestPathSelectorOrderBy) WithValue(value *log_descriptor.OrderBy) *WatchLogDescriptorsRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*WatchLogDescriptorsRequest_FieldTerminalPathValue)
}

func (s WatchLogDescriptorsRequestPathSelectorOrderBy) WithArrayOfValues(values []*log_descriptor.OrderBy) *WatchLogDescriptorsRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*WatchLogDescriptorsRequest_FieldTerminalPathArrayOfValues)
}

type WatchLogDescriptorsRequestPathSelectorResumeToken struct{}

func (WatchLogDescriptorsRequestPathSelectorResumeToken) FieldPath() *WatchLogDescriptorsRequest_FieldTerminalPath {
	return &WatchLogDescriptorsRequest_FieldTerminalPath{selector: WatchLogDescriptorsRequest_FieldPathSelectorResumeToken}
}

func (s WatchLogDescriptorsRequestPathSelectorResumeToken) WithValue(value string) *WatchLogDescriptorsRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*WatchLogDescriptorsRequest_FieldTerminalPathValue)
}

func (s WatchLogDescriptorsRequestPathSelectorResumeToken) WithArrayOfValues(values []string) *WatchLogDescriptorsRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*WatchLogDescriptorsRequest_FieldTerminalPathArrayOfValues)
}

type WatchLogDescriptorsRequestPathSelectorFilter struct{}

func (WatchLogDescriptorsRequestPathSelectorFilter) FieldPath() *WatchLogDescriptorsRequest_FieldTerminalPath {
	return &WatchLogDescriptorsRequest_FieldTerminalPath{selector: WatchLogDescriptorsRequest_FieldPathSelectorFilter}
}

func (s WatchLogDescriptorsRequestPathSelectorFilter) WithValue(value *log_descriptor.Filter) *WatchLogDescriptorsRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*WatchLogDescriptorsRequest_FieldTerminalPathValue)
}

func (s WatchLogDescriptorsRequestPathSelectorFilter) WithArrayOfValues(values []*log_descriptor.Filter) *WatchLogDescriptorsRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*WatchLogDescriptorsRequest_FieldTerminalPathArrayOfValues)
}

type WatchLogDescriptorsRequestPathSelectorFieldMask struct{}

func (WatchLogDescriptorsRequestPathSelectorFieldMask) FieldPath() *WatchLogDescriptorsRequest_FieldTerminalPath {
	return &WatchLogDescriptorsRequest_FieldTerminalPath{selector: WatchLogDescriptorsRequest_FieldPathSelectorFieldMask}
}

func (s WatchLogDescriptorsRequestPathSelectorFieldMask) WithValue(value *log_descriptor.LogDescriptor_FieldMask) *WatchLogDescriptorsRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*WatchLogDescriptorsRequest_FieldTerminalPathValue)
}

func (s WatchLogDescriptorsRequestPathSelectorFieldMask) WithArrayOfValues(values []*log_descriptor.LogDescriptor_FieldMask) *WatchLogDescriptorsRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*WatchLogDescriptorsRequest_FieldTerminalPathArrayOfValues)
}

type WatchLogDescriptorsRequestPathSelectorView struct{}

func (WatchLogDescriptorsRequestPathSelectorView) FieldPath() *WatchLogDescriptorsRequest_FieldTerminalPath {
	return &WatchLogDescriptorsRequest_FieldTerminalPath{selector: WatchLogDescriptorsRequest_FieldPathSelectorView}
}

func (s WatchLogDescriptorsRequestPathSelectorView) WithValue(value view.View) *WatchLogDescriptorsRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*WatchLogDescriptorsRequest_FieldTerminalPathValue)
}

func (s WatchLogDescriptorsRequestPathSelectorView) WithArrayOfValues(values []view.View) *WatchLogDescriptorsRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*WatchLogDescriptorsRequest_FieldTerminalPathArrayOfValues)
}

type WatchLogDescriptorsRequestPathSelectorMaxChunkSize struct{}

func (WatchLogDescriptorsRequestPathSelectorMaxChunkSize) FieldPath() *WatchLogDescriptorsRequest_FieldTerminalPath {
	return &WatchLogDescriptorsRequest_FieldTerminalPath{selector: WatchLogDescriptorsRequest_FieldPathSelectorMaxChunkSize}
}

func (s WatchLogDescriptorsRequestPathSelectorMaxChunkSize) WithValue(value int32) *WatchLogDescriptorsRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*WatchLogDescriptorsRequest_FieldTerminalPathValue)
}

func (s WatchLogDescriptorsRequestPathSelectorMaxChunkSize) WithArrayOfValues(values []int32) *WatchLogDescriptorsRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*WatchLogDescriptorsRequest_FieldTerminalPathArrayOfValues)
}

type WatchLogDescriptorsResponseFieldPathBuilder struct{}

func NewWatchLogDescriptorsResponseFieldPathBuilder() WatchLogDescriptorsResponseFieldPathBuilder {
	return WatchLogDescriptorsResponseFieldPathBuilder{}
}
func (WatchLogDescriptorsResponseFieldPathBuilder) LogDescriptorChanges() WatchLogDescriptorsResponsePathSelectorLogDescriptorChanges {
	return WatchLogDescriptorsResponsePathSelectorLogDescriptorChanges{}
}
func (WatchLogDescriptorsResponseFieldPathBuilder) IsCurrent() WatchLogDescriptorsResponsePathSelectorIsCurrent {
	return WatchLogDescriptorsResponsePathSelectorIsCurrent{}
}
func (WatchLogDescriptorsResponseFieldPathBuilder) PageTokenChange() WatchLogDescriptorsResponsePathSelectorPageTokenChange {
	return WatchLogDescriptorsResponsePathSelectorPageTokenChange{}
}
func (WatchLogDescriptorsResponseFieldPathBuilder) ResumeToken() WatchLogDescriptorsResponsePathSelectorResumeToken {
	return WatchLogDescriptorsResponsePathSelectorResumeToken{}
}
func (WatchLogDescriptorsResponseFieldPathBuilder) SnapshotSize() WatchLogDescriptorsResponsePathSelectorSnapshotSize {
	return WatchLogDescriptorsResponsePathSelectorSnapshotSize{}
}
func (WatchLogDescriptorsResponseFieldPathBuilder) IsSoftReset() WatchLogDescriptorsResponsePathSelectorIsSoftReset {
	return WatchLogDescriptorsResponsePathSelectorIsSoftReset{}
}
func (WatchLogDescriptorsResponseFieldPathBuilder) IsHardReset() WatchLogDescriptorsResponsePathSelectorIsHardReset {
	return WatchLogDescriptorsResponsePathSelectorIsHardReset{}
}

type WatchLogDescriptorsResponsePathSelectorLogDescriptorChanges struct{}

func (WatchLogDescriptorsResponsePathSelectorLogDescriptorChanges) FieldPath() *WatchLogDescriptorsResponse_FieldTerminalPath {
	return &WatchLogDescriptorsResponse_FieldTerminalPath{selector: WatchLogDescriptorsResponse_FieldPathSelectorLogDescriptorChanges}
}

func (s WatchLogDescriptorsResponsePathSelectorLogDescriptorChanges) WithValue(value []*log_descriptor.LogDescriptorChange) *WatchLogDescriptorsResponse_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*WatchLogDescriptorsResponse_FieldTerminalPathValue)
}

func (s WatchLogDescriptorsResponsePathSelectorLogDescriptorChanges) WithArrayOfValues(values [][]*log_descriptor.LogDescriptorChange) *WatchLogDescriptorsResponse_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*WatchLogDescriptorsResponse_FieldTerminalPathArrayOfValues)
}

func (s WatchLogDescriptorsResponsePathSelectorLogDescriptorChanges) WithItemValue(value *log_descriptor.LogDescriptorChange) *WatchLogDescriptorsResponse_FieldTerminalPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*WatchLogDescriptorsResponse_FieldTerminalPathArrayItemValue)
}

type WatchLogDescriptorsResponsePathSelectorIsCurrent struct{}

func (WatchLogDescriptorsResponsePathSelectorIsCurrent) FieldPath() *WatchLogDescriptorsResponse_FieldTerminalPath {
	return &WatchLogDescriptorsResponse_FieldTerminalPath{selector: WatchLogDescriptorsResponse_FieldPathSelectorIsCurrent}
}

func (s WatchLogDescriptorsResponsePathSelectorIsCurrent) WithValue(value bool) *WatchLogDescriptorsResponse_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*WatchLogDescriptorsResponse_FieldTerminalPathValue)
}

func (s WatchLogDescriptorsResponsePathSelectorIsCurrent) WithArrayOfValues(values []bool) *WatchLogDescriptorsResponse_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*WatchLogDescriptorsResponse_FieldTerminalPathArrayOfValues)
}

type WatchLogDescriptorsResponsePathSelectorPageTokenChange struct{}

func (WatchLogDescriptorsResponsePathSelectorPageTokenChange) FieldPath() *WatchLogDescriptorsResponse_FieldTerminalPath {
	return &WatchLogDescriptorsResponse_FieldTerminalPath{selector: WatchLogDescriptorsResponse_FieldPathSelectorPageTokenChange}
}

func (s WatchLogDescriptorsResponsePathSelectorPageTokenChange) WithValue(value *WatchLogDescriptorsResponse_PageTokenChange) *WatchLogDescriptorsResponse_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*WatchLogDescriptorsResponse_FieldTerminalPathValue)
}

func (s WatchLogDescriptorsResponsePathSelectorPageTokenChange) WithArrayOfValues(values []*WatchLogDescriptorsResponse_PageTokenChange) *WatchLogDescriptorsResponse_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*WatchLogDescriptorsResponse_FieldTerminalPathArrayOfValues)
}

func (WatchLogDescriptorsResponsePathSelectorPageTokenChange) WithSubPath(subPath WatchLogDescriptorsResponsePageTokenChange_FieldPath) *WatchLogDescriptorsResponse_FieldSubPath {
	return &WatchLogDescriptorsResponse_FieldSubPath{selector: WatchLogDescriptorsResponse_FieldPathSelectorPageTokenChange, subPath: subPath}
}

func (s WatchLogDescriptorsResponsePathSelectorPageTokenChange) WithSubValue(subPathValue WatchLogDescriptorsResponsePageTokenChange_FieldPathValue) *WatchLogDescriptorsResponse_FieldSubPathValue {
	return &WatchLogDescriptorsResponse_FieldSubPathValue{WatchLogDescriptorsResponse_FieldPath: s.WithSubPath(subPathValue), subPathValue: subPathValue}
}

func (s WatchLogDescriptorsResponsePathSelectorPageTokenChange) WithSubArrayOfValues(subPathArrayOfValues WatchLogDescriptorsResponsePageTokenChange_FieldPathArrayOfValues) *WatchLogDescriptorsResponse_FieldSubPathArrayOfValues {
	return &WatchLogDescriptorsResponse_FieldSubPathArrayOfValues{WatchLogDescriptorsResponse_FieldPath: s.WithSubPath(subPathArrayOfValues), subPathArrayOfValues: subPathArrayOfValues}
}

func (s WatchLogDescriptorsResponsePathSelectorPageTokenChange) WithSubArrayItemValue(subPathArrayItemValue WatchLogDescriptorsResponsePageTokenChange_FieldPathArrayItemValue) *WatchLogDescriptorsResponse_FieldSubPathArrayItemValue {
	return &WatchLogDescriptorsResponse_FieldSubPathArrayItemValue{WatchLogDescriptorsResponse_FieldPath: s.WithSubPath(subPathArrayItemValue), subPathItemValue: subPathArrayItemValue}
}

func (WatchLogDescriptorsResponsePathSelectorPageTokenChange) PrevPageToken() WatchLogDescriptorsResponsePathSelectorPageTokenChangePrevPageToken {
	return WatchLogDescriptorsResponsePathSelectorPageTokenChangePrevPageToken{}
}

func (WatchLogDescriptorsResponsePathSelectorPageTokenChange) NextPageToken() WatchLogDescriptorsResponsePathSelectorPageTokenChangeNextPageToken {
	return WatchLogDescriptorsResponsePathSelectorPageTokenChangeNextPageToken{}
}

type WatchLogDescriptorsResponsePathSelectorPageTokenChangePrevPageToken struct{}

func (WatchLogDescriptorsResponsePathSelectorPageTokenChangePrevPageToken) FieldPath() *WatchLogDescriptorsResponse_FieldSubPath {
	return &WatchLogDescriptorsResponse_FieldSubPath{
		selector: WatchLogDescriptorsResponse_FieldPathSelectorPageTokenChange,
		subPath:  NewWatchLogDescriptorsResponsePageTokenChangeFieldPathBuilder().PrevPageToken().FieldPath(),
	}
}

func (s WatchLogDescriptorsResponsePathSelectorPageTokenChangePrevPageToken) WithValue(value *log_descriptor.PagerCursor) *WatchLogDescriptorsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*WatchLogDescriptorsResponse_FieldSubPathValue)
}

func (s WatchLogDescriptorsResponsePathSelectorPageTokenChangePrevPageToken) WithArrayOfValues(values []*log_descriptor.PagerCursor) *WatchLogDescriptorsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*WatchLogDescriptorsResponse_FieldSubPathArrayOfValues)
}

type WatchLogDescriptorsResponsePathSelectorPageTokenChangeNextPageToken struct{}

func (WatchLogDescriptorsResponsePathSelectorPageTokenChangeNextPageToken) FieldPath() *WatchLogDescriptorsResponse_FieldSubPath {
	return &WatchLogDescriptorsResponse_FieldSubPath{
		selector: WatchLogDescriptorsResponse_FieldPathSelectorPageTokenChange,
		subPath:  NewWatchLogDescriptorsResponsePageTokenChangeFieldPathBuilder().NextPageToken().FieldPath(),
	}
}

func (s WatchLogDescriptorsResponsePathSelectorPageTokenChangeNextPageToken) WithValue(value *log_descriptor.PagerCursor) *WatchLogDescriptorsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*WatchLogDescriptorsResponse_FieldSubPathValue)
}

func (s WatchLogDescriptorsResponsePathSelectorPageTokenChangeNextPageToken) WithArrayOfValues(values []*log_descriptor.PagerCursor) *WatchLogDescriptorsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*WatchLogDescriptorsResponse_FieldSubPathArrayOfValues)
}

type WatchLogDescriptorsResponsePathSelectorResumeToken struct{}

func (WatchLogDescriptorsResponsePathSelectorResumeToken) FieldPath() *WatchLogDescriptorsResponse_FieldTerminalPath {
	return &WatchLogDescriptorsResponse_FieldTerminalPath{selector: WatchLogDescriptorsResponse_FieldPathSelectorResumeToken}
}

func (s WatchLogDescriptorsResponsePathSelectorResumeToken) WithValue(value string) *WatchLogDescriptorsResponse_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*WatchLogDescriptorsResponse_FieldTerminalPathValue)
}

func (s WatchLogDescriptorsResponsePathSelectorResumeToken) WithArrayOfValues(values []string) *WatchLogDescriptorsResponse_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*WatchLogDescriptorsResponse_FieldTerminalPathArrayOfValues)
}

type WatchLogDescriptorsResponsePathSelectorSnapshotSize struct{}

func (WatchLogDescriptorsResponsePathSelectorSnapshotSize) FieldPath() *WatchLogDescriptorsResponse_FieldTerminalPath {
	return &WatchLogDescriptorsResponse_FieldTerminalPath{selector: WatchLogDescriptorsResponse_FieldPathSelectorSnapshotSize}
}

func (s WatchLogDescriptorsResponsePathSelectorSnapshotSize) WithValue(value int64) *WatchLogDescriptorsResponse_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*WatchLogDescriptorsResponse_FieldTerminalPathValue)
}

func (s WatchLogDescriptorsResponsePathSelectorSnapshotSize) WithArrayOfValues(values []int64) *WatchLogDescriptorsResponse_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*WatchLogDescriptorsResponse_FieldTerminalPathArrayOfValues)
}

type WatchLogDescriptorsResponsePathSelectorIsSoftReset struct{}

func (WatchLogDescriptorsResponsePathSelectorIsSoftReset) FieldPath() *WatchLogDescriptorsResponse_FieldTerminalPath {
	return &WatchLogDescriptorsResponse_FieldTerminalPath{selector: WatchLogDescriptorsResponse_FieldPathSelectorIsSoftReset}
}

func (s WatchLogDescriptorsResponsePathSelectorIsSoftReset) WithValue(value bool) *WatchLogDescriptorsResponse_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*WatchLogDescriptorsResponse_FieldTerminalPathValue)
}

func (s WatchLogDescriptorsResponsePathSelectorIsSoftReset) WithArrayOfValues(values []bool) *WatchLogDescriptorsResponse_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*WatchLogDescriptorsResponse_FieldTerminalPathArrayOfValues)
}

type WatchLogDescriptorsResponsePathSelectorIsHardReset struct{}

func (WatchLogDescriptorsResponsePathSelectorIsHardReset) FieldPath() *WatchLogDescriptorsResponse_FieldTerminalPath {
	return &WatchLogDescriptorsResponse_FieldTerminalPath{selector: WatchLogDescriptorsResponse_FieldPathSelectorIsHardReset}
}

func (s WatchLogDescriptorsResponsePathSelectorIsHardReset) WithValue(value bool) *WatchLogDescriptorsResponse_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*WatchLogDescriptorsResponse_FieldTerminalPathValue)
}

func (s WatchLogDescriptorsResponsePathSelectorIsHardReset) WithArrayOfValues(values []bool) *WatchLogDescriptorsResponse_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*WatchLogDescriptorsResponse_FieldTerminalPathArrayOfValues)
}

type WatchLogDescriptorsResponsePageTokenChangeFieldPathBuilder struct{}

func NewWatchLogDescriptorsResponsePageTokenChangeFieldPathBuilder() WatchLogDescriptorsResponsePageTokenChangeFieldPathBuilder {
	return WatchLogDescriptorsResponsePageTokenChangeFieldPathBuilder{}
}
func (WatchLogDescriptorsResponsePageTokenChangeFieldPathBuilder) PrevPageToken() WatchLogDescriptorsResponse_PageTokenChangePathSelectorPrevPageToken {
	return WatchLogDescriptorsResponse_PageTokenChangePathSelectorPrevPageToken{}
}
func (WatchLogDescriptorsResponsePageTokenChangeFieldPathBuilder) NextPageToken() WatchLogDescriptorsResponse_PageTokenChangePathSelectorNextPageToken {
	return WatchLogDescriptorsResponse_PageTokenChangePathSelectorNextPageToken{}
}

type WatchLogDescriptorsResponse_PageTokenChangePathSelectorPrevPageToken struct{}

func (WatchLogDescriptorsResponse_PageTokenChangePathSelectorPrevPageToken) FieldPath() *WatchLogDescriptorsResponsePageTokenChange_FieldTerminalPath {
	return &WatchLogDescriptorsResponsePageTokenChange_FieldTerminalPath{selector: WatchLogDescriptorsResponsePageTokenChange_FieldPathSelectorPrevPageToken}
}

func (s WatchLogDescriptorsResponse_PageTokenChangePathSelectorPrevPageToken) WithValue(value *log_descriptor.PagerCursor) *WatchLogDescriptorsResponsePageTokenChange_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*WatchLogDescriptorsResponsePageTokenChange_FieldTerminalPathValue)
}

func (s WatchLogDescriptorsResponse_PageTokenChangePathSelectorPrevPageToken) WithArrayOfValues(values []*log_descriptor.PagerCursor) *WatchLogDescriptorsResponsePageTokenChange_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*WatchLogDescriptorsResponsePageTokenChange_FieldTerminalPathArrayOfValues)
}

type WatchLogDescriptorsResponse_PageTokenChangePathSelectorNextPageToken struct{}

func (WatchLogDescriptorsResponse_PageTokenChangePathSelectorNextPageToken) FieldPath() *WatchLogDescriptorsResponsePageTokenChange_FieldTerminalPath {
	return &WatchLogDescriptorsResponsePageTokenChange_FieldTerminalPath{selector: WatchLogDescriptorsResponsePageTokenChange_FieldPathSelectorNextPageToken}
}

func (s WatchLogDescriptorsResponse_PageTokenChangePathSelectorNextPageToken) WithValue(value *log_descriptor.PagerCursor) *WatchLogDescriptorsResponsePageTokenChange_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*WatchLogDescriptorsResponsePageTokenChange_FieldTerminalPathValue)
}

func (s WatchLogDescriptorsResponse_PageTokenChangePathSelectorNextPageToken) WithArrayOfValues(values []*log_descriptor.PagerCursor) *WatchLogDescriptorsResponsePageTokenChange_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*WatchLogDescriptorsResponsePageTokenChange_FieldTerminalPathArrayOfValues)
}

type CreateLogDescriptorRequestFieldPathBuilder struct{}

func NewCreateLogDescriptorRequestFieldPathBuilder() CreateLogDescriptorRequestFieldPathBuilder {
	return CreateLogDescriptorRequestFieldPathBuilder{}
}
func (CreateLogDescriptorRequestFieldPathBuilder) Parent() CreateLogDescriptorRequestPathSelectorParent {
	return CreateLogDescriptorRequestPathSelectorParent{}
}
func (CreateLogDescriptorRequestFieldPathBuilder) LogDescriptor() CreateLogDescriptorRequestPathSelectorLogDescriptor {
	return CreateLogDescriptorRequestPathSelectorLogDescriptor{}
}

type CreateLogDescriptorRequestPathSelectorParent struct{}

func (CreateLogDescriptorRequestPathSelectorParent) FieldPath() *CreateLogDescriptorRequest_FieldTerminalPath {
	return &CreateLogDescriptorRequest_FieldTerminalPath{selector: CreateLogDescriptorRequest_FieldPathSelectorParent}
}

func (s CreateLogDescriptorRequestPathSelectorParent) WithValue(value *log_descriptor.ParentReference) *CreateLogDescriptorRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*CreateLogDescriptorRequest_FieldTerminalPathValue)
}

func (s CreateLogDescriptorRequestPathSelectorParent) WithArrayOfValues(values []*log_descriptor.ParentReference) *CreateLogDescriptorRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CreateLogDescriptorRequest_FieldTerminalPathArrayOfValues)
}

type CreateLogDescriptorRequestPathSelectorLogDescriptor struct{}

func (CreateLogDescriptorRequestPathSelectorLogDescriptor) FieldPath() *CreateLogDescriptorRequest_FieldTerminalPath {
	return &CreateLogDescriptorRequest_FieldTerminalPath{selector: CreateLogDescriptorRequest_FieldPathSelectorLogDescriptor}
}

func (s CreateLogDescriptorRequestPathSelectorLogDescriptor) WithValue(value *log_descriptor.LogDescriptor) *CreateLogDescriptorRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*CreateLogDescriptorRequest_FieldTerminalPathValue)
}

func (s CreateLogDescriptorRequestPathSelectorLogDescriptor) WithArrayOfValues(values []*log_descriptor.LogDescriptor) *CreateLogDescriptorRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CreateLogDescriptorRequest_FieldTerminalPathArrayOfValues)
}

func (CreateLogDescriptorRequestPathSelectorLogDescriptor) WithSubPath(subPath log_descriptor.LogDescriptor_FieldPath) *CreateLogDescriptorRequest_FieldSubPath {
	return &CreateLogDescriptorRequest_FieldSubPath{selector: CreateLogDescriptorRequest_FieldPathSelectorLogDescriptor, subPath: subPath}
}

func (s CreateLogDescriptorRequestPathSelectorLogDescriptor) WithSubValue(subPathValue log_descriptor.LogDescriptor_FieldPathValue) *CreateLogDescriptorRequest_FieldSubPathValue {
	return &CreateLogDescriptorRequest_FieldSubPathValue{CreateLogDescriptorRequest_FieldPath: s.WithSubPath(subPathValue), subPathValue: subPathValue}
}

func (s CreateLogDescriptorRequestPathSelectorLogDescriptor) WithSubArrayOfValues(subPathArrayOfValues log_descriptor.LogDescriptor_FieldPathArrayOfValues) *CreateLogDescriptorRequest_FieldSubPathArrayOfValues {
	return &CreateLogDescriptorRequest_FieldSubPathArrayOfValues{CreateLogDescriptorRequest_FieldPath: s.WithSubPath(subPathArrayOfValues), subPathArrayOfValues: subPathArrayOfValues}
}

func (s CreateLogDescriptorRequestPathSelectorLogDescriptor) WithSubArrayItemValue(subPathArrayItemValue log_descriptor.LogDescriptor_FieldPathArrayItemValue) *CreateLogDescriptorRequest_FieldSubPathArrayItemValue {
	return &CreateLogDescriptorRequest_FieldSubPathArrayItemValue{CreateLogDescriptorRequest_FieldPath: s.WithSubPath(subPathArrayItemValue), subPathItemValue: subPathArrayItemValue}
}

func (CreateLogDescriptorRequestPathSelectorLogDescriptor) Name() CreateLogDescriptorRequestPathSelectorLogDescriptorName {
	return CreateLogDescriptorRequestPathSelectorLogDescriptorName{}
}

func (CreateLogDescriptorRequestPathSelectorLogDescriptor) DisplayName() CreateLogDescriptorRequestPathSelectorLogDescriptorDisplayName {
	return CreateLogDescriptorRequestPathSelectorLogDescriptorDisplayName{}
}

func (CreateLogDescriptorRequestPathSelectorLogDescriptor) Description() CreateLogDescriptorRequestPathSelectorLogDescriptorDescription {
	return CreateLogDescriptorRequestPathSelectorLogDescriptorDescription{}
}

func (CreateLogDescriptorRequestPathSelectorLogDescriptor) Labels() CreateLogDescriptorRequestPathSelectorLogDescriptorLabels {
	return CreateLogDescriptorRequestPathSelectorLogDescriptorLabels{}
}

func (CreateLogDescriptorRequestPathSelectorLogDescriptor) PromotedLabelKeySets() CreateLogDescriptorRequestPathSelectorLogDescriptorPromotedLabelKeySets {
	return CreateLogDescriptorRequestPathSelectorLogDescriptorPromotedLabelKeySets{}
}

func (CreateLogDescriptorRequestPathSelectorLogDescriptor) Metadata() CreateLogDescriptorRequestPathSelectorLogDescriptorMetadata {
	return CreateLogDescriptorRequestPathSelectorLogDescriptorMetadata{}
}

type CreateLogDescriptorRequestPathSelectorLogDescriptorName struct{}

func (CreateLogDescriptorRequestPathSelectorLogDescriptorName) FieldPath() *CreateLogDescriptorRequest_FieldSubPath {
	return &CreateLogDescriptorRequest_FieldSubPath{
		selector: CreateLogDescriptorRequest_FieldPathSelectorLogDescriptor,
		subPath:  log_descriptor.NewLogDescriptorFieldPathBuilder().Name().FieldPath(),
	}
}

func (s CreateLogDescriptorRequestPathSelectorLogDescriptorName) WithValue(value *log_descriptor.Name) *CreateLogDescriptorRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*CreateLogDescriptorRequest_FieldSubPathValue)
}

func (s CreateLogDescriptorRequestPathSelectorLogDescriptorName) WithArrayOfValues(values []*log_descriptor.Name) *CreateLogDescriptorRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CreateLogDescriptorRequest_FieldSubPathArrayOfValues)
}

type CreateLogDescriptorRequestPathSelectorLogDescriptorDisplayName struct{}

func (CreateLogDescriptorRequestPathSelectorLogDescriptorDisplayName) FieldPath() *CreateLogDescriptorRequest_FieldSubPath {
	return &CreateLogDescriptorRequest_FieldSubPath{
		selector: CreateLogDescriptorRequest_FieldPathSelectorLogDescriptor,
		subPath:  log_descriptor.NewLogDescriptorFieldPathBuilder().DisplayName().FieldPath(),
	}
}

func (s CreateLogDescriptorRequestPathSelectorLogDescriptorDisplayName) WithValue(value string) *CreateLogDescriptorRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*CreateLogDescriptorRequest_FieldSubPathValue)
}

func (s CreateLogDescriptorRequestPathSelectorLogDescriptorDisplayName) WithArrayOfValues(values []string) *CreateLogDescriptorRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CreateLogDescriptorRequest_FieldSubPathArrayOfValues)
}

type CreateLogDescriptorRequestPathSelectorLogDescriptorDescription struct{}

func (CreateLogDescriptorRequestPathSelectorLogDescriptorDescription) FieldPath() *CreateLogDescriptorRequest_FieldSubPath {
	return &CreateLogDescriptorRequest_FieldSubPath{
		selector: CreateLogDescriptorRequest_FieldPathSelectorLogDescriptor,
		subPath:  log_descriptor.NewLogDescriptorFieldPathBuilder().Description().FieldPath(),
	}
}

func (s CreateLogDescriptorRequestPathSelectorLogDescriptorDescription) WithValue(value string) *CreateLogDescriptorRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*CreateLogDescriptorRequest_FieldSubPathValue)
}

func (s CreateLogDescriptorRequestPathSelectorLogDescriptorDescription) WithArrayOfValues(values []string) *CreateLogDescriptorRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CreateLogDescriptorRequest_FieldSubPathArrayOfValues)
}

type CreateLogDescriptorRequestPathSelectorLogDescriptorLabels struct{}

func (CreateLogDescriptorRequestPathSelectorLogDescriptorLabels) FieldPath() *CreateLogDescriptorRequest_FieldSubPath {
	return &CreateLogDescriptorRequest_FieldSubPath{
		selector: CreateLogDescriptorRequest_FieldPathSelectorLogDescriptor,
		subPath:  log_descriptor.NewLogDescriptorFieldPathBuilder().Labels().FieldPath(),
	}
}

func (s CreateLogDescriptorRequestPathSelectorLogDescriptorLabels) WithValue(value []*logging_common.LabelDescriptor) *CreateLogDescriptorRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*CreateLogDescriptorRequest_FieldSubPathValue)
}

func (s CreateLogDescriptorRequestPathSelectorLogDescriptorLabels) WithArrayOfValues(values [][]*logging_common.LabelDescriptor) *CreateLogDescriptorRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CreateLogDescriptorRequest_FieldSubPathArrayOfValues)
}

func (s CreateLogDescriptorRequestPathSelectorLogDescriptorLabels) WithItemValue(value *logging_common.LabelDescriptor) *CreateLogDescriptorRequest_FieldSubPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*CreateLogDescriptorRequest_FieldSubPathArrayItemValue)
}

func (CreateLogDescriptorRequestPathSelectorLogDescriptorLabels) Key() CreateLogDescriptorRequestPathSelectorLogDescriptorLabelsKey {
	return CreateLogDescriptorRequestPathSelectorLogDescriptorLabelsKey{}
}

func (CreateLogDescriptorRequestPathSelectorLogDescriptorLabels) Description() CreateLogDescriptorRequestPathSelectorLogDescriptorLabelsDescription {
	return CreateLogDescriptorRequestPathSelectorLogDescriptorLabelsDescription{}
}

type CreateLogDescriptorRequestPathSelectorLogDescriptorLabelsKey struct{}

func (CreateLogDescriptorRequestPathSelectorLogDescriptorLabelsKey) FieldPath() *CreateLogDescriptorRequest_FieldSubPath {
	return &CreateLogDescriptorRequest_FieldSubPath{
		selector: CreateLogDescriptorRequest_FieldPathSelectorLogDescriptor,
		subPath:  log_descriptor.NewLogDescriptorFieldPathBuilder().Labels().Key().FieldPath(),
	}
}

func (s CreateLogDescriptorRequestPathSelectorLogDescriptorLabelsKey) WithValue(value string) *CreateLogDescriptorRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*CreateLogDescriptorRequest_FieldSubPathValue)
}

func (s CreateLogDescriptorRequestPathSelectorLogDescriptorLabelsKey) WithArrayOfValues(values []string) *CreateLogDescriptorRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CreateLogDescriptorRequest_FieldSubPathArrayOfValues)
}

type CreateLogDescriptorRequestPathSelectorLogDescriptorLabelsDescription struct{}

func (CreateLogDescriptorRequestPathSelectorLogDescriptorLabelsDescription) FieldPath() *CreateLogDescriptorRequest_FieldSubPath {
	return &CreateLogDescriptorRequest_FieldSubPath{
		selector: CreateLogDescriptorRequest_FieldPathSelectorLogDescriptor,
		subPath:  log_descriptor.NewLogDescriptorFieldPathBuilder().Labels().Description().FieldPath(),
	}
}

func (s CreateLogDescriptorRequestPathSelectorLogDescriptorLabelsDescription) WithValue(value string) *CreateLogDescriptorRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*CreateLogDescriptorRequest_FieldSubPathValue)
}

func (s CreateLogDescriptorRequestPathSelectorLogDescriptorLabelsDescription) WithArrayOfValues(values []string) *CreateLogDescriptorRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CreateLogDescriptorRequest_FieldSubPathArrayOfValues)
}

type CreateLogDescriptorRequestPathSelectorLogDescriptorPromotedLabelKeySets struct{}

func (CreateLogDescriptorRequestPathSelectorLogDescriptorPromotedLabelKeySets) FieldPath() *CreateLogDescriptorRequest_FieldSubPath {
	return &CreateLogDescriptorRequest_FieldSubPath{
		selector: CreateLogDescriptorRequest_FieldPathSelectorLogDescriptor,
		subPath:  log_descriptor.NewLogDescriptorFieldPathBuilder().PromotedLabelKeySets().FieldPath(),
	}
}

func (s CreateLogDescriptorRequestPathSelectorLogDescriptorPromotedLabelKeySets) WithValue(value []*logging_common.LabelKeySet) *CreateLogDescriptorRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*CreateLogDescriptorRequest_FieldSubPathValue)
}

func (s CreateLogDescriptorRequestPathSelectorLogDescriptorPromotedLabelKeySets) WithArrayOfValues(values [][]*logging_common.LabelKeySet) *CreateLogDescriptorRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CreateLogDescriptorRequest_FieldSubPathArrayOfValues)
}

func (s CreateLogDescriptorRequestPathSelectorLogDescriptorPromotedLabelKeySets) WithItemValue(value *logging_common.LabelKeySet) *CreateLogDescriptorRequest_FieldSubPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*CreateLogDescriptorRequest_FieldSubPathArrayItemValue)
}

func (CreateLogDescriptorRequestPathSelectorLogDescriptorPromotedLabelKeySets) LabelKeys() CreateLogDescriptorRequestPathSelectorLogDescriptorPromotedLabelKeySetsLabelKeys {
	return CreateLogDescriptorRequestPathSelectorLogDescriptorPromotedLabelKeySetsLabelKeys{}
}

type CreateLogDescriptorRequestPathSelectorLogDescriptorPromotedLabelKeySetsLabelKeys struct{}

func (CreateLogDescriptorRequestPathSelectorLogDescriptorPromotedLabelKeySetsLabelKeys) FieldPath() *CreateLogDescriptorRequest_FieldSubPath {
	return &CreateLogDescriptorRequest_FieldSubPath{
		selector: CreateLogDescriptorRequest_FieldPathSelectorLogDescriptor,
		subPath:  log_descriptor.NewLogDescriptorFieldPathBuilder().PromotedLabelKeySets().LabelKeys().FieldPath(),
	}
}

func (s CreateLogDescriptorRequestPathSelectorLogDescriptorPromotedLabelKeySetsLabelKeys) WithValue(value []string) *CreateLogDescriptorRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*CreateLogDescriptorRequest_FieldSubPathValue)
}

func (s CreateLogDescriptorRequestPathSelectorLogDescriptorPromotedLabelKeySetsLabelKeys) WithArrayOfValues(values [][]string) *CreateLogDescriptorRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CreateLogDescriptorRequest_FieldSubPathArrayOfValues)
}

func (s CreateLogDescriptorRequestPathSelectorLogDescriptorPromotedLabelKeySetsLabelKeys) WithItemValue(value string) *CreateLogDescriptorRequest_FieldSubPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*CreateLogDescriptorRequest_FieldSubPathArrayItemValue)
}

type CreateLogDescriptorRequestPathSelectorLogDescriptorMetadata struct{}

func (CreateLogDescriptorRequestPathSelectorLogDescriptorMetadata) FieldPath() *CreateLogDescriptorRequest_FieldSubPath {
	return &CreateLogDescriptorRequest_FieldSubPath{
		selector: CreateLogDescriptorRequest_FieldPathSelectorLogDescriptor,
		subPath:  log_descriptor.NewLogDescriptorFieldPathBuilder().Metadata().FieldPath(),
	}
}

func (s CreateLogDescriptorRequestPathSelectorLogDescriptorMetadata) WithValue(value *ntt_meta.Meta) *CreateLogDescriptorRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*CreateLogDescriptorRequest_FieldSubPathValue)
}

func (s CreateLogDescriptorRequestPathSelectorLogDescriptorMetadata) WithArrayOfValues(values []*ntt_meta.Meta) *CreateLogDescriptorRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CreateLogDescriptorRequest_FieldSubPathArrayOfValues)
}

func (CreateLogDescriptorRequestPathSelectorLogDescriptorMetadata) CreateTime() CreateLogDescriptorRequestPathSelectorLogDescriptorMetadataCreateTime {
	return CreateLogDescriptorRequestPathSelectorLogDescriptorMetadataCreateTime{}
}

func (CreateLogDescriptorRequestPathSelectorLogDescriptorMetadata) UpdateTime() CreateLogDescriptorRequestPathSelectorLogDescriptorMetadataUpdateTime {
	return CreateLogDescriptorRequestPathSelectorLogDescriptorMetadataUpdateTime{}
}

func (CreateLogDescriptorRequestPathSelectorLogDescriptorMetadata) Uuid() CreateLogDescriptorRequestPathSelectorLogDescriptorMetadataUuid {
	return CreateLogDescriptorRequestPathSelectorLogDescriptorMetadataUuid{}
}

func (CreateLogDescriptorRequestPathSelectorLogDescriptorMetadata) Tags() CreateLogDescriptorRequestPathSelectorLogDescriptorMetadataTags {
	return CreateLogDescriptorRequestPathSelectorLogDescriptorMetadataTags{}
}

func (CreateLogDescriptorRequestPathSelectorLogDescriptorMetadata) Labels() CreateLogDescriptorRequestPathSelectorLogDescriptorMetadataLabels {
	return CreateLogDescriptorRequestPathSelectorLogDescriptorMetadataLabels{}
}

func (CreateLogDescriptorRequestPathSelectorLogDescriptorMetadata) Annotations() CreateLogDescriptorRequestPathSelectorLogDescriptorMetadataAnnotations {
	return CreateLogDescriptorRequestPathSelectorLogDescriptorMetadataAnnotations{}
}

func (CreateLogDescriptorRequestPathSelectorLogDescriptorMetadata) Generation() CreateLogDescriptorRequestPathSelectorLogDescriptorMetadataGeneration {
	return CreateLogDescriptorRequestPathSelectorLogDescriptorMetadataGeneration{}
}

func (CreateLogDescriptorRequestPathSelectorLogDescriptorMetadata) ResourceVersion() CreateLogDescriptorRequestPathSelectorLogDescriptorMetadataResourceVersion {
	return CreateLogDescriptorRequestPathSelectorLogDescriptorMetadataResourceVersion{}
}

func (CreateLogDescriptorRequestPathSelectorLogDescriptorMetadata) OwnerReferences() CreateLogDescriptorRequestPathSelectorLogDescriptorMetadataOwnerReferences {
	return CreateLogDescriptorRequestPathSelectorLogDescriptorMetadataOwnerReferences{}
}

func (CreateLogDescriptorRequestPathSelectorLogDescriptorMetadata) Shards() CreateLogDescriptorRequestPathSelectorLogDescriptorMetadataShards {
	return CreateLogDescriptorRequestPathSelectorLogDescriptorMetadataShards{}
}

func (CreateLogDescriptorRequestPathSelectorLogDescriptorMetadata) Syncing() CreateLogDescriptorRequestPathSelectorLogDescriptorMetadataSyncing {
	return CreateLogDescriptorRequestPathSelectorLogDescriptorMetadataSyncing{}
}

type CreateLogDescriptorRequestPathSelectorLogDescriptorMetadataCreateTime struct{}

func (CreateLogDescriptorRequestPathSelectorLogDescriptorMetadataCreateTime) FieldPath() *CreateLogDescriptorRequest_FieldSubPath {
	return &CreateLogDescriptorRequest_FieldSubPath{
		selector: CreateLogDescriptorRequest_FieldPathSelectorLogDescriptor,
		subPath:  log_descriptor.NewLogDescriptorFieldPathBuilder().Metadata().CreateTime().FieldPath(),
	}
}

func (s CreateLogDescriptorRequestPathSelectorLogDescriptorMetadataCreateTime) WithValue(value *timestamp.Timestamp) *CreateLogDescriptorRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*CreateLogDescriptorRequest_FieldSubPathValue)
}

func (s CreateLogDescriptorRequestPathSelectorLogDescriptorMetadataCreateTime) WithArrayOfValues(values []*timestamp.Timestamp) *CreateLogDescriptorRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CreateLogDescriptorRequest_FieldSubPathArrayOfValues)
}

type CreateLogDescriptorRequestPathSelectorLogDescriptorMetadataUpdateTime struct{}

func (CreateLogDescriptorRequestPathSelectorLogDescriptorMetadataUpdateTime) FieldPath() *CreateLogDescriptorRequest_FieldSubPath {
	return &CreateLogDescriptorRequest_FieldSubPath{
		selector: CreateLogDescriptorRequest_FieldPathSelectorLogDescriptor,
		subPath:  log_descriptor.NewLogDescriptorFieldPathBuilder().Metadata().UpdateTime().FieldPath(),
	}
}

func (s CreateLogDescriptorRequestPathSelectorLogDescriptorMetadataUpdateTime) WithValue(value *timestamp.Timestamp) *CreateLogDescriptorRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*CreateLogDescriptorRequest_FieldSubPathValue)
}

func (s CreateLogDescriptorRequestPathSelectorLogDescriptorMetadataUpdateTime) WithArrayOfValues(values []*timestamp.Timestamp) *CreateLogDescriptorRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CreateLogDescriptorRequest_FieldSubPathArrayOfValues)
}

type CreateLogDescriptorRequestPathSelectorLogDescriptorMetadataUuid struct{}

func (CreateLogDescriptorRequestPathSelectorLogDescriptorMetadataUuid) FieldPath() *CreateLogDescriptorRequest_FieldSubPath {
	return &CreateLogDescriptorRequest_FieldSubPath{
		selector: CreateLogDescriptorRequest_FieldPathSelectorLogDescriptor,
		subPath:  log_descriptor.NewLogDescriptorFieldPathBuilder().Metadata().Uuid().FieldPath(),
	}
}

func (s CreateLogDescriptorRequestPathSelectorLogDescriptorMetadataUuid) WithValue(value string) *CreateLogDescriptorRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*CreateLogDescriptorRequest_FieldSubPathValue)
}

func (s CreateLogDescriptorRequestPathSelectorLogDescriptorMetadataUuid) WithArrayOfValues(values []string) *CreateLogDescriptorRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CreateLogDescriptorRequest_FieldSubPathArrayOfValues)
}

type CreateLogDescriptorRequestPathSelectorLogDescriptorMetadataTags struct{}

func (CreateLogDescriptorRequestPathSelectorLogDescriptorMetadataTags) FieldPath() *CreateLogDescriptorRequest_FieldSubPath {
	return &CreateLogDescriptorRequest_FieldSubPath{
		selector: CreateLogDescriptorRequest_FieldPathSelectorLogDescriptor,
		subPath:  log_descriptor.NewLogDescriptorFieldPathBuilder().Metadata().Tags().FieldPath(),
	}
}

func (s CreateLogDescriptorRequestPathSelectorLogDescriptorMetadataTags) WithValue(value []string) *CreateLogDescriptorRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*CreateLogDescriptorRequest_FieldSubPathValue)
}

func (s CreateLogDescriptorRequestPathSelectorLogDescriptorMetadataTags) WithArrayOfValues(values [][]string) *CreateLogDescriptorRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CreateLogDescriptorRequest_FieldSubPathArrayOfValues)
}

func (s CreateLogDescriptorRequestPathSelectorLogDescriptorMetadataTags) WithItemValue(value string) *CreateLogDescriptorRequest_FieldSubPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*CreateLogDescriptorRequest_FieldSubPathArrayItemValue)
}

type CreateLogDescriptorRequestPathSelectorLogDescriptorMetadataLabels struct{}

func (CreateLogDescriptorRequestPathSelectorLogDescriptorMetadataLabels) FieldPath() *CreateLogDescriptorRequest_FieldSubPath {
	return &CreateLogDescriptorRequest_FieldSubPath{
		selector: CreateLogDescriptorRequest_FieldPathSelectorLogDescriptor,
		subPath:  log_descriptor.NewLogDescriptorFieldPathBuilder().Metadata().Labels().FieldPath(),
	}
}

func (s CreateLogDescriptorRequestPathSelectorLogDescriptorMetadataLabels) WithValue(value map[string]string) *CreateLogDescriptorRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*CreateLogDescriptorRequest_FieldSubPathValue)
}

func (s CreateLogDescriptorRequestPathSelectorLogDescriptorMetadataLabels) WithArrayOfValues(values []map[string]string) *CreateLogDescriptorRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CreateLogDescriptorRequest_FieldSubPathArrayOfValues)
}

func (CreateLogDescriptorRequestPathSelectorLogDescriptorMetadataLabels) WithKey(key string) CreateLogDescriptorRequestMapPathSelectorLogDescriptorMetadataLabels {
	return CreateLogDescriptorRequestMapPathSelectorLogDescriptorMetadataLabels{key: key}
}

type CreateLogDescriptorRequestMapPathSelectorLogDescriptorMetadataLabels struct {
	key string
}

func (s CreateLogDescriptorRequestMapPathSelectorLogDescriptorMetadataLabels) FieldPath() *CreateLogDescriptorRequest_FieldSubPath {
	return &CreateLogDescriptorRequest_FieldSubPath{
		selector: CreateLogDescriptorRequest_FieldPathSelectorLogDescriptor,
		subPath:  log_descriptor.NewLogDescriptorFieldPathBuilder().Metadata().Labels().WithKey(s.key).FieldPath(),
	}
}

func (s CreateLogDescriptorRequestMapPathSelectorLogDescriptorMetadataLabels) WithValue(value string) *CreateLogDescriptorRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*CreateLogDescriptorRequest_FieldSubPathValue)
}

func (s CreateLogDescriptorRequestMapPathSelectorLogDescriptorMetadataLabels) WithArrayOfValues(values []string) *CreateLogDescriptorRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CreateLogDescriptorRequest_FieldSubPathArrayOfValues)
}

type CreateLogDescriptorRequestPathSelectorLogDescriptorMetadataAnnotations struct{}

func (CreateLogDescriptorRequestPathSelectorLogDescriptorMetadataAnnotations) FieldPath() *CreateLogDescriptorRequest_FieldSubPath {
	return &CreateLogDescriptorRequest_FieldSubPath{
		selector: CreateLogDescriptorRequest_FieldPathSelectorLogDescriptor,
		subPath:  log_descriptor.NewLogDescriptorFieldPathBuilder().Metadata().Annotations().FieldPath(),
	}
}

func (s CreateLogDescriptorRequestPathSelectorLogDescriptorMetadataAnnotations) WithValue(value map[string]string) *CreateLogDescriptorRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*CreateLogDescriptorRequest_FieldSubPathValue)
}

func (s CreateLogDescriptorRequestPathSelectorLogDescriptorMetadataAnnotations) WithArrayOfValues(values []map[string]string) *CreateLogDescriptorRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CreateLogDescriptorRequest_FieldSubPathArrayOfValues)
}

func (CreateLogDescriptorRequestPathSelectorLogDescriptorMetadataAnnotations) WithKey(key string) CreateLogDescriptorRequestMapPathSelectorLogDescriptorMetadataAnnotations {
	return CreateLogDescriptorRequestMapPathSelectorLogDescriptorMetadataAnnotations{key: key}
}

type CreateLogDescriptorRequestMapPathSelectorLogDescriptorMetadataAnnotations struct {
	key string
}

func (s CreateLogDescriptorRequestMapPathSelectorLogDescriptorMetadataAnnotations) FieldPath() *CreateLogDescriptorRequest_FieldSubPath {
	return &CreateLogDescriptorRequest_FieldSubPath{
		selector: CreateLogDescriptorRequest_FieldPathSelectorLogDescriptor,
		subPath:  log_descriptor.NewLogDescriptorFieldPathBuilder().Metadata().Annotations().WithKey(s.key).FieldPath(),
	}
}

func (s CreateLogDescriptorRequestMapPathSelectorLogDescriptorMetadataAnnotations) WithValue(value string) *CreateLogDescriptorRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*CreateLogDescriptorRequest_FieldSubPathValue)
}

func (s CreateLogDescriptorRequestMapPathSelectorLogDescriptorMetadataAnnotations) WithArrayOfValues(values []string) *CreateLogDescriptorRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CreateLogDescriptorRequest_FieldSubPathArrayOfValues)
}

type CreateLogDescriptorRequestPathSelectorLogDescriptorMetadataGeneration struct{}

func (CreateLogDescriptorRequestPathSelectorLogDescriptorMetadataGeneration) FieldPath() *CreateLogDescriptorRequest_FieldSubPath {
	return &CreateLogDescriptorRequest_FieldSubPath{
		selector: CreateLogDescriptorRequest_FieldPathSelectorLogDescriptor,
		subPath:  log_descriptor.NewLogDescriptorFieldPathBuilder().Metadata().Generation().FieldPath(),
	}
}

func (s CreateLogDescriptorRequestPathSelectorLogDescriptorMetadataGeneration) WithValue(value int64) *CreateLogDescriptorRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*CreateLogDescriptorRequest_FieldSubPathValue)
}

func (s CreateLogDescriptorRequestPathSelectorLogDescriptorMetadataGeneration) WithArrayOfValues(values []int64) *CreateLogDescriptorRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CreateLogDescriptorRequest_FieldSubPathArrayOfValues)
}

type CreateLogDescriptorRequestPathSelectorLogDescriptorMetadataResourceVersion struct{}

func (CreateLogDescriptorRequestPathSelectorLogDescriptorMetadataResourceVersion) FieldPath() *CreateLogDescriptorRequest_FieldSubPath {
	return &CreateLogDescriptorRequest_FieldSubPath{
		selector: CreateLogDescriptorRequest_FieldPathSelectorLogDescriptor,
		subPath:  log_descriptor.NewLogDescriptorFieldPathBuilder().Metadata().ResourceVersion().FieldPath(),
	}
}

func (s CreateLogDescriptorRequestPathSelectorLogDescriptorMetadataResourceVersion) WithValue(value string) *CreateLogDescriptorRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*CreateLogDescriptorRequest_FieldSubPathValue)
}

func (s CreateLogDescriptorRequestPathSelectorLogDescriptorMetadataResourceVersion) WithArrayOfValues(values []string) *CreateLogDescriptorRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CreateLogDescriptorRequest_FieldSubPathArrayOfValues)
}

type CreateLogDescriptorRequestPathSelectorLogDescriptorMetadataOwnerReferences struct{}

func (CreateLogDescriptorRequestPathSelectorLogDescriptorMetadataOwnerReferences) FieldPath() *CreateLogDescriptorRequest_FieldSubPath {
	return &CreateLogDescriptorRequest_FieldSubPath{
		selector: CreateLogDescriptorRequest_FieldPathSelectorLogDescriptor,
		subPath:  log_descriptor.NewLogDescriptorFieldPathBuilder().Metadata().OwnerReferences().FieldPath(),
	}
}

func (s CreateLogDescriptorRequestPathSelectorLogDescriptorMetadataOwnerReferences) WithValue(value []*ntt_meta.OwnerReference) *CreateLogDescriptorRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*CreateLogDescriptorRequest_FieldSubPathValue)
}

func (s CreateLogDescriptorRequestPathSelectorLogDescriptorMetadataOwnerReferences) WithArrayOfValues(values [][]*ntt_meta.OwnerReference) *CreateLogDescriptorRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CreateLogDescriptorRequest_FieldSubPathArrayOfValues)
}

func (s CreateLogDescriptorRequestPathSelectorLogDescriptorMetadataOwnerReferences) WithItemValue(value *ntt_meta.OwnerReference) *CreateLogDescriptorRequest_FieldSubPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*CreateLogDescriptorRequest_FieldSubPathArrayItemValue)
}

func (CreateLogDescriptorRequestPathSelectorLogDescriptorMetadataOwnerReferences) ApiVersion() CreateLogDescriptorRequestPathSelectorLogDescriptorMetadataOwnerReferencesApiVersion {
	return CreateLogDescriptorRequestPathSelectorLogDescriptorMetadataOwnerReferencesApiVersion{}
}

func (CreateLogDescriptorRequestPathSelectorLogDescriptorMetadataOwnerReferences) Kind() CreateLogDescriptorRequestPathSelectorLogDescriptorMetadataOwnerReferencesKind {
	return CreateLogDescriptorRequestPathSelectorLogDescriptorMetadataOwnerReferencesKind{}
}

func (CreateLogDescriptorRequestPathSelectorLogDescriptorMetadataOwnerReferences) Name() CreateLogDescriptorRequestPathSelectorLogDescriptorMetadataOwnerReferencesName {
	return CreateLogDescriptorRequestPathSelectorLogDescriptorMetadataOwnerReferencesName{}
}

func (CreateLogDescriptorRequestPathSelectorLogDescriptorMetadataOwnerReferences) Uid() CreateLogDescriptorRequestPathSelectorLogDescriptorMetadataOwnerReferencesUid {
	return CreateLogDescriptorRequestPathSelectorLogDescriptorMetadataOwnerReferencesUid{}
}

func (CreateLogDescriptorRequestPathSelectorLogDescriptorMetadataOwnerReferences) Controller() CreateLogDescriptorRequestPathSelectorLogDescriptorMetadataOwnerReferencesController {
	return CreateLogDescriptorRequestPathSelectorLogDescriptorMetadataOwnerReferencesController{}
}

func (CreateLogDescriptorRequestPathSelectorLogDescriptorMetadataOwnerReferences) BlockOwnerDeletion() CreateLogDescriptorRequestPathSelectorLogDescriptorMetadataOwnerReferencesBlockOwnerDeletion {
	return CreateLogDescriptorRequestPathSelectorLogDescriptorMetadataOwnerReferencesBlockOwnerDeletion{}
}

type CreateLogDescriptorRequestPathSelectorLogDescriptorMetadataOwnerReferencesApiVersion struct{}

func (CreateLogDescriptorRequestPathSelectorLogDescriptorMetadataOwnerReferencesApiVersion) FieldPath() *CreateLogDescriptorRequest_FieldSubPath {
	return &CreateLogDescriptorRequest_FieldSubPath{
		selector: CreateLogDescriptorRequest_FieldPathSelectorLogDescriptor,
		subPath:  log_descriptor.NewLogDescriptorFieldPathBuilder().Metadata().OwnerReferences().ApiVersion().FieldPath(),
	}
}

func (s CreateLogDescriptorRequestPathSelectorLogDescriptorMetadataOwnerReferencesApiVersion) WithValue(value string) *CreateLogDescriptorRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*CreateLogDescriptorRequest_FieldSubPathValue)
}

func (s CreateLogDescriptorRequestPathSelectorLogDescriptorMetadataOwnerReferencesApiVersion) WithArrayOfValues(values []string) *CreateLogDescriptorRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CreateLogDescriptorRequest_FieldSubPathArrayOfValues)
}

type CreateLogDescriptorRequestPathSelectorLogDescriptorMetadataOwnerReferencesKind struct{}

func (CreateLogDescriptorRequestPathSelectorLogDescriptorMetadataOwnerReferencesKind) FieldPath() *CreateLogDescriptorRequest_FieldSubPath {
	return &CreateLogDescriptorRequest_FieldSubPath{
		selector: CreateLogDescriptorRequest_FieldPathSelectorLogDescriptor,
		subPath:  log_descriptor.NewLogDescriptorFieldPathBuilder().Metadata().OwnerReferences().Kind().FieldPath(),
	}
}

func (s CreateLogDescriptorRequestPathSelectorLogDescriptorMetadataOwnerReferencesKind) WithValue(value string) *CreateLogDescriptorRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*CreateLogDescriptorRequest_FieldSubPathValue)
}

func (s CreateLogDescriptorRequestPathSelectorLogDescriptorMetadataOwnerReferencesKind) WithArrayOfValues(values []string) *CreateLogDescriptorRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CreateLogDescriptorRequest_FieldSubPathArrayOfValues)
}

type CreateLogDescriptorRequestPathSelectorLogDescriptorMetadataOwnerReferencesName struct{}

func (CreateLogDescriptorRequestPathSelectorLogDescriptorMetadataOwnerReferencesName) FieldPath() *CreateLogDescriptorRequest_FieldSubPath {
	return &CreateLogDescriptorRequest_FieldSubPath{
		selector: CreateLogDescriptorRequest_FieldPathSelectorLogDescriptor,
		subPath:  log_descriptor.NewLogDescriptorFieldPathBuilder().Metadata().OwnerReferences().Name().FieldPath(),
	}
}

func (s CreateLogDescriptorRequestPathSelectorLogDescriptorMetadataOwnerReferencesName) WithValue(value string) *CreateLogDescriptorRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*CreateLogDescriptorRequest_FieldSubPathValue)
}

func (s CreateLogDescriptorRequestPathSelectorLogDescriptorMetadataOwnerReferencesName) WithArrayOfValues(values []string) *CreateLogDescriptorRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CreateLogDescriptorRequest_FieldSubPathArrayOfValues)
}

type CreateLogDescriptorRequestPathSelectorLogDescriptorMetadataOwnerReferencesUid struct{}

func (CreateLogDescriptorRequestPathSelectorLogDescriptorMetadataOwnerReferencesUid) FieldPath() *CreateLogDescriptorRequest_FieldSubPath {
	return &CreateLogDescriptorRequest_FieldSubPath{
		selector: CreateLogDescriptorRequest_FieldPathSelectorLogDescriptor,
		subPath:  log_descriptor.NewLogDescriptorFieldPathBuilder().Metadata().OwnerReferences().Uid().FieldPath(),
	}
}

func (s CreateLogDescriptorRequestPathSelectorLogDescriptorMetadataOwnerReferencesUid) WithValue(value string) *CreateLogDescriptorRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*CreateLogDescriptorRequest_FieldSubPathValue)
}

func (s CreateLogDescriptorRequestPathSelectorLogDescriptorMetadataOwnerReferencesUid) WithArrayOfValues(values []string) *CreateLogDescriptorRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CreateLogDescriptorRequest_FieldSubPathArrayOfValues)
}

type CreateLogDescriptorRequestPathSelectorLogDescriptorMetadataOwnerReferencesController struct{}

func (CreateLogDescriptorRequestPathSelectorLogDescriptorMetadataOwnerReferencesController) FieldPath() *CreateLogDescriptorRequest_FieldSubPath {
	return &CreateLogDescriptorRequest_FieldSubPath{
		selector: CreateLogDescriptorRequest_FieldPathSelectorLogDescriptor,
		subPath:  log_descriptor.NewLogDescriptorFieldPathBuilder().Metadata().OwnerReferences().Controller().FieldPath(),
	}
}

func (s CreateLogDescriptorRequestPathSelectorLogDescriptorMetadataOwnerReferencesController) WithValue(value bool) *CreateLogDescriptorRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*CreateLogDescriptorRequest_FieldSubPathValue)
}

func (s CreateLogDescriptorRequestPathSelectorLogDescriptorMetadataOwnerReferencesController) WithArrayOfValues(values []bool) *CreateLogDescriptorRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CreateLogDescriptorRequest_FieldSubPathArrayOfValues)
}

type CreateLogDescriptorRequestPathSelectorLogDescriptorMetadataOwnerReferencesBlockOwnerDeletion struct{}

func (CreateLogDescriptorRequestPathSelectorLogDescriptorMetadataOwnerReferencesBlockOwnerDeletion) FieldPath() *CreateLogDescriptorRequest_FieldSubPath {
	return &CreateLogDescriptorRequest_FieldSubPath{
		selector: CreateLogDescriptorRequest_FieldPathSelectorLogDescriptor,
		subPath:  log_descriptor.NewLogDescriptorFieldPathBuilder().Metadata().OwnerReferences().BlockOwnerDeletion().FieldPath(),
	}
}

func (s CreateLogDescriptorRequestPathSelectorLogDescriptorMetadataOwnerReferencesBlockOwnerDeletion) WithValue(value bool) *CreateLogDescriptorRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*CreateLogDescriptorRequest_FieldSubPathValue)
}

func (s CreateLogDescriptorRequestPathSelectorLogDescriptorMetadataOwnerReferencesBlockOwnerDeletion) WithArrayOfValues(values []bool) *CreateLogDescriptorRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CreateLogDescriptorRequest_FieldSubPathArrayOfValues)
}

type CreateLogDescriptorRequestPathSelectorLogDescriptorMetadataShards struct{}

func (CreateLogDescriptorRequestPathSelectorLogDescriptorMetadataShards) FieldPath() *CreateLogDescriptorRequest_FieldSubPath {
	return &CreateLogDescriptorRequest_FieldSubPath{
		selector: CreateLogDescriptorRequest_FieldPathSelectorLogDescriptor,
		subPath:  log_descriptor.NewLogDescriptorFieldPathBuilder().Metadata().Shards().FieldPath(),
	}
}

func (s CreateLogDescriptorRequestPathSelectorLogDescriptorMetadataShards) WithValue(value map[string]int64) *CreateLogDescriptorRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*CreateLogDescriptorRequest_FieldSubPathValue)
}

func (s CreateLogDescriptorRequestPathSelectorLogDescriptorMetadataShards) WithArrayOfValues(values []map[string]int64) *CreateLogDescriptorRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CreateLogDescriptorRequest_FieldSubPathArrayOfValues)
}

func (CreateLogDescriptorRequestPathSelectorLogDescriptorMetadataShards) WithKey(key string) CreateLogDescriptorRequestMapPathSelectorLogDescriptorMetadataShards {
	return CreateLogDescriptorRequestMapPathSelectorLogDescriptorMetadataShards{key: key}
}

type CreateLogDescriptorRequestMapPathSelectorLogDescriptorMetadataShards struct {
	key string
}

func (s CreateLogDescriptorRequestMapPathSelectorLogDescriptorMetadataShards) FieldPath() *CreateLogDescriptorRequest_FieldSubPath {
	return &CreateLogDescriptorRequest_FieldSubPath{
		selector: CreateLogDescriptorRequest_FieldPathSelectorLogDescriptor,
		subPath:  log_descriptor.NewLogDescriptorFieldPathBuilder().Metadata().Shards().WithKey(s.key).FieldPath(),
	}
}

func (s CreateLogDescriptorRequestMapPathSelectorLogDescriptorMetadataShards) WithValue(value int64) *CreateLogDescriptorRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*CreateLogDescriptorRequest_FieldSubPathValue)
}

func (s CreateLogDescriptorRequestMapPathSelectorLogDescriptorMetadataShards) WithArrayOfValues(values []int64) *CreateLogDescriptorRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CreateLogDescriptorRequest_FieldSubPathArrayOfValues)
}

type CreateLogDescriptorRequestPathSelectorLogDescriptorMetadataSyncing struct{}

func (CreateLogDescriptorRequestPathSelectorLogDescriptorMetadataSyncing) FieldPath() *CreateLogDescriptorRequest_FieldSubPath {
	return &CreateLogDescriptorRequest_FieldSubPath{
		selector: CreateLogDescriptorRequest_FieldPathSelectorLogDescriptor,
		subPath:  log_descriptor.NewLogDescriptorFieldPathBuilder().Metadata().Syncing().FieldPath(),
	}
}

func (s CreateLogDescriptorRequestPathSelectorLogDescriptorMetadataSyncing) WithValue(value *ntt_meta.SyncingMeta) *CreateLogDescriptorRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*CreateLogDescriptorRequest_FieldSubPathValue)
}

func (s CreateLogDescriptorRequestPathSelectorLogDescriptorMetadataSyncing) WithArrayOfValues(values []*ntt_meta.SyncingMeta) *CreateLogDescriptorRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CreateLogDescriptorRequest_FieldSubPathArrayOfValues)
}

func (CreateLogDescriptorRequestPathSelectorLogDescriptorMetadataSyncing) OwningRegion() CreateLogDescriptorRequestPathSelectorLogDescriptorMetadataSyncingOwningRegion {
	return CreateLogDescriptorRequestPathSelectorLogDescriptorMetadataSyncingOwningRegion{}
}

func (CreateLogDescriptorRequestPathSelectorLogDescriptorMetadataSyncing) Regions() CreateLogDescriptorRequestPathSelectorLogDescriptorMetadataSyncingRegions {
	return CreateLogDescriptorRequestPathSelectorLogDescriptorMetadataSyncingRegions{}
}

type CreateLogDescriptorRequestPathSelectorLogDescriptorMetadataSyncingOwningRegion struct{}

func (CreateLogDescriptorRequestPathSelectorLogDescriptorMetadataSyncingOwningRegion) FieldPath() *CreateLogDescriptorRequest_FieldSubPath {
	return &CreateLogDescriptorRequest_FieldSubPath{
		selector: CreateLogDescriptorRequest_FieldPathSelectorLogDescriptor,
		subPath:  log_descriptor.NewLogDescriptorFieldPathBuilder().Metadata().Syncing().OwningRegion().FieldPath(),
	}
}

func (s CreateLogDescriptorRequestPathSelectorLogDescriptorMetadataSyncingOwningRegion) WithValue(value string) *CreateLogDescriptorRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*CreateLogDescriptorRequest_FieldSubPathValue)
}

func (s CreateLogDescriptorRequestPathSelectorLogDescriptorMetadataSyncingOwningRegion) WithArrayOfValues(values []string) *CreateLogDescriptorRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CreateLogDescriptorRequest_FieldSubPathArrayOfValues)
}

type CreateLogDescriptorRequestPathSelectorLogDescriptorMetadataSyncingRegions struct{}

func (CreateLogDescriptorRequestPathSelectorLogDescriptorMetadataSyncingRegions) FieldPath() *CreateLogDescriptorRequest_FieldSubPath {
	return &CreateLogDescriptorRequest_FieldSubPath{
		selector: CreateLogDescriptorRequest_FieldPathSelectorLogDescriptor,
		subPath:  log_descriptor.NewLogDescriptorFieldPathBuilder().Metadata().Syncing().Regions().FieldPath(),
	}
}

func (s CreateLogDescriptorRequestPathSelectorLogDescriptorMetadataSyncingRegions) WithValue(value []string) *CreateLogDescriptorRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*CreateLogDescriptorRequest_FieldSubPathValue)
}

func (s CreateLogDescriptorRequestPathSelectorLogDescriptorMetadataSyncingRegions) WithArrayOfValues(values [][]string) *CreateLogDescriptorRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CreateLogDescriptorRequest_FieldSubPathArrayOfValues)
}

func (s CreateLogDescriptorRequestPathSelectorLogDescriptorMetadataSyncingRegions) WithItemValue(value string) *CreateLogDescriptorRequest_FieldSubPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*CreateLogDescriptorRequest_FieldSubPathArrayItemValue)
}

type UpdateLogDescriptorRequestFieldPathBuilder struct{}

func NewUpdateLogDescriptorRequestFieldPathBuilder() UpdateLogDescriptorRequestFieldPathBuilder {
	return UpdateLogDescriptorRequestFieldPathBuilder{}
}
func (UpdateLogDescriptorRequestFieldPathBuilder) LogDescriptor() UpdateLogDescriptorRequestPathSelectorLogDescriptor {
	return UpdateLogDescriptorRequestPathSelectorLogDescriptor{}
}
func (UpdateLogDescriptorRequestFieldPathBuilder) UpdateMask() UpdateLogDescriptorRequestPathSelectorUpdateMask {
	return UpdateLogDescriptorRequestPathSelectorUpdateMask{}
}
func (UpdateLogDescriptorRequestFieldPathBuilder) Cas() UpdateLogDescriptorRequestPathSelectorCas {
	return UpdateLogDescriptorRequestPathSelectorCas{}
}

type UpdateLogDescriptorRequestPathSelectorLogDescriptor struct{}

func (UpdateLogDescriptorRequestPathSelectorLogDescriptor) FieldPath() *UpdateLogDescriptorRequest_FieldTerminalPath {
	return &UpdateLogDescriptorRequest_FieldTerminalPath{selector: UpdateLogDescriptorRequest_FieldPathSelectorLogDescriptor}
}

func (s UpdateLogDescriptorRequestPathSelectorLogDescriptor) WithValue(value *log_descriptor.LogDescriptor) *UpdateLogDescriptorRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateLogDescriptorRequest_FieldTerminalPathValue)
}

func (s UpdateLogDescriptorRequestPathSelectorLogDescriptor) WithArrayOfValues(values []*log_descriptor.LogDescriptor) *UpdateLogDescriptorRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateLogDescriptorRequest_FieldTerminalPathArrayOfValues)
}

func (UpdateLogDescriptorRequestPathSelectorLogDescriptor) WithSubPath(subPath log_descriptor.LogDescriptor_FieldPath) *UpdateLogDescriptorRequest_FieldSubPath {
	return &UpdateLogDescriptorRequest_FieldSubPath{selector: UpdateLogDescriptorRequest_FieldPathSelectorLogDescriptor, subPath: subPath}
}

func (s UpdateLogDescriptorRequestPathSelectorLogDescriptor) WithSubValue(subPathValue log_descriptor.LogDescriptor_FieldPathValue) *UpdateLogDescriptorRequest_FieldSubPathValue {
	return &UpdateLogDescriptorRequest_FieldSubPathValue{UpdateLogDescriptorRequest_FieldPath: s.WithSubPath(subPathValue), subPathValue: subPathValue}
}

func (s UpdateLogDescriptorRequestPathSelectorLogDescriptor) WithSubArrayOfValues(subPathArrayOfValues log_descriptor.LogDescriptor_FieldPathArrayOfValues) *UpdateLogDescriptorRequest_FieldSubPathArrayOfValues {
	return &UpdateLogDescriptorRequest_FieldSubPathArrayOfValues{UpdateLogDescriptorRequest_FieldPath: s.WithSubPath(subPathArrayOfValues), subPathArrayOfValues: subPathArrayOfValues}
}

func (s UpdateLogDescriptorRequestPathSelectorLogDescriptor) WithSubArrayItemValue(subPathArrayItemValue log_descriptor.LogDescriptor_FieldPathArrayItemValue) *UpdateLogDescriptorRequest_FieldSubPathArrayItemValue {
	return &UpdateLogDescriptorRequest_FieldSubPathArrayItemValue{UpdateLogDescriptorRequest_FieldPath: s.WithSubPath(subPathArrayItemValue), subPathItemValue: subPathArrayItemValue}
}

func (UpdateLogDescriptorRequestPathSelectorLogDescriptor) Name() UpdateLogDescriptorRequestPathSelectorLogDescriptorName {
	return UpdateLogDescriptorRequestPathSelectorLogDescriptorName{}
}

func (UpdateLogDescriptorRequestPathSelectorLogDescriptor) DisplayName() UpdateLogDescriptorRequestPathSelectorLogDescriptorDisplayName {
	return UpdateLogDescriptorRequestPathSelectorLogDescriptorDisplayName{}
}

func (UpdateLogDescriptorRequestPathSelectorLogDescriptor) Description() UpdateLogDescriptorRequestPathSelectorLogDescriptorDescription {
	return UpdateLogDescriptorRequestPathSelectorLogDescriptorDescription{}
}

func (UpdateLogDescriptorRequestPathSelectorLogDescriptor) Labels() UpdateLogDescriptorRequestPathSelectorLogDescriptorLabels {
	return UpdateLogDescriptorRequestPathSelectorLogDescriptorLabels{}
}

func (UpdateLogDescriptorRequestPathSelectorLogDescriptor) PromotedLabelKeySets() UpdateLogDescriptorRequestPathSelectorLogDescriptorPromotedLabelKeySets {
	return UpdateLogDescriptorRequestPathSelectorLogDescriptorPromotedLabelKeySets{}
}

func (UpdateLogDescriptorRequestPathSelectorLogDescriptor) Metadata() UpdateLogDescriptorRequestPathSelectorLogDescriptorMetadata {
	return UpdateLogDescriptorRequestPathSelectorLogDescriptorMetadata{}
}

type UpdateLogDescriptorRequestPathSelectorLogDescriptorName struct{}

func (UpdateLogDescriptorRequestPathSelectorLogDescriptorName) FieldPath() *UpdateLogDescriptorRequest_FieldSubPath {
	return &UpdateLogDescriptorRequest_FieldSubPath{
		selector: UpdateLogDescriptorRequest_FieldPathSelectorLogDescriptor,
		subPath:  log_descriptor.NewLogDescriptorFieldPathBuilder().Name().FieldPath(),
	}
}

func (s UpdateLogDescriptorRequestPathSelectorLogDescriptorName) WithValue(value *log_descriptor.Name) *UpdateLogDescriptorRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateLogDescriptorRequest_FieldSubPathValue)
}

func (s UpdateLogDescriptorRequestPathSelectorLogDescriptorName) WithArrayOfValues(values []*log_descriptor.Name) *UpdateLogDescriptorRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateLogDescriptorRequest_FieldSubPathArrayOfValues)
}

type UpdateLogDescriptorRequestPathSelectorLogDescriptorDisplayName struct{}

func (UpdateLogDescriptorRequestPathSelectorLogDescriptorDisplayName) FieldPath() *UpdateLogDescriptorRequest_FieldSubPath {
	return &UpdateLogDescriptorRequest_FieldSubPath{
		selector: UpdateLogDescriptorRequest_FieldPathSelectorLogDescriptor,
		subPath:  log_descriptor.NewLogDescriptorFieldPathBuilder().DisplayName().FieldPath(),
	}
}

func (s UpdateLogDescriptorRequestPathSelectorLogDescriptorDisplayName) WithValue(value string) *UpdateLogDescriptorRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateLogDescriptorRequest_FieldSubPathValue)
}

func (s UpdateLogDescriptorRequestPathSelectorLogDescriptorDisplayName) WithArrayOfValues(values []string) *UpdateLogDescriptorRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateLogDescriptorRequest_FieldSubPathArrayOfValues)
}

type UpdateLogDescriptorRequestPathSelectorLogDescriptorDescription struct{}

func (UpdateLogDescriptorRequestPathSelectorLogDescriptorDescription) FieldPath() *UpdateLogDescriptorRequest_FieldSubPath {
	return &UpdateLogDescriptorRequest_FieldSubPath{
		selector: UpdateLogDescriptorRequest_FieldPathSelectorLogDescriptor,
		subPath:  log_descriptor.NewLogDescriptorFieldPathBuilder().Description().FieldPath(),
	}
}

func (s UpdateLogDescriptorRequestPathSelectorLogDescriptorDescription) WithValue(value string) *UpdateLogDescriptorRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateLogDescriptorRequest_FieldSubPathValue)
}

func (s UpdateLogDescriptorRequestPathSelectorLogDescriptorDescription) WithArrayOfValues(values []string) *UpdateLogDescriptorRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateLogDescriptorRequest_FieldSubPathArrayOfValues)
}

type UpdateLogDescriptorRequestPathSelectorLogDescriptorLabels struct{}

func (UpdateLogDescriptorRequestPathSelectorLogDescriptorLabels) FieldPath() *UpdateLogDescriptorRequest_FieldSubPath {
	return &UpdateLogDescriptorRequest_FieldSubPath{
		selector: UpdateLogDescriptorRequest_FieldPathSelectorLogDescriptor,
		subPath:  log_descriptor.NewLogDescriptorFieldPathBuilder().Labels().FieldPath(),
	}
}

func (s UpdateLogDescriptorRequestPathSelectorLogDescriptorLabels) WithValue(value []*logging_common.LabelDescriptor) *UpdateLogDescriptorRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateLogDescriptorRequest_FieldSubPathValue)
}

func (s UpdateLogDescriptorRequestPathSelectorLogDescriptorLabels) WithArrayOfValues(values [][]*logging_common.LabelDescriptor) *UpdateLogDescriptorRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateLogDescriptorRequest_FieldSubPathArrayOfValues)
}

func (s UpdateLogDescriptorRequestPathSelectorLogDescriptorLabels) WithItemValue(value *logging_common.LabelDescriptor) *UpdateLogDescriptorRequest_FieldSubPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*UpdateLogDescriptorRequest_FieldSubPathArrayItemValue)
}

func (UpdateLogDescriptorRequestPathSelectorLogDescriptorLabels) Key() UpdateLogDescriptorRequestPathSelectorLogDescriptorLabelsKey {
	return UpdateLogDescriptorRequestPathSelectorLogDescriptorLabelsKey{}
}

func (UpdateLogDescriptorRequestPathSelectorLogDescriptorLabels) Description() UpdateLogDescriptorRequestPathSelectorLogDescriptorLabelsDescription {
	return UpdateLogDescriptorRequestPathSelectorLogDescriptorLabelsDescription{}
}

type UpdateLogDescriptorRequestPathSelectorLogDescriptorLabelsKey struct{}

func (UpdateLogDescriptorRequestPathSelectorLogDescriptorLabelsKey) FieldPath() *UpdateLogDescriptorRequest_FieldSubPath {
	return &UpdateLogDescriptorRequest_FieldSubPath{
		selector: UpdateLogDescriptorRequest_FieldPathSelectorLogDescriptor,
		subPath:  log_descriptor.NewLogDescriptorFieldPathBuilder().Labels().Key().FieldPath(),
	}
}

func (s UpdateLogDescriptorRequestPathSelectorLogDescriptorLabelsKey) WithValue(value string) *UpdateLogDescriptorRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateLogDescriptorRequest_FieldSubPathValue)
}

func (s UpdateLogDescriptorRequestPathSelectorLogDescriptorLabelsKey) WithArrayOfValues(values []string) *UpdateLogDescriptorRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateLogDescriptorRequest_FieldSubPathArrayOfValues)
}

type UpdateLogDescriptorRequestPathSelectorLogDescriptorLabelsDescription struct{}

func (UpdateLogDescriptorRequestPathSelectorLogDescriptorLabelsDescription) FieldPath() *UpdateLogDescriptorRequest_FieldSubPath {
	return &UpdateLogDescriptorRequest_FieldSubPath{
		selector: UpdateLogDescriptorRequest_FieldPathSelectorLogDescriptor,
		subPath:  log_descriptor.NewLogDescriptorFieldPathBuilder().Labels().Description().FieldPath(),
	}
}

func (s UpdateLogDescriptorRequestPathSelectorLogDescriptorLabelsDescription) WithValue(value string) *UpdateLogDescriptorRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateLogDescriptorRequest_FieldSubPathValue)
}

func (s UpdateLogDescriptorRequestPathSelectorLogDescriptorLabelsDescription) WithArrayOfValues(values []string) *UpdateLogDescriptorRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateLogDescriptorRequest_FieldSubPathArrayOfValues)
}

type UpdateLogDescriptorRequestPathSelectorLogDescriptorPromotedLabelKeySets struct{}

func (UpdateLogDescriptorRequestPathSelectorLogDescriptorPromotedLabelKeySets) FieldPath() *UpdateLogDescriptorRequest_FieldSubPath {
	return &UpdateLogDescriptorRequest_FieldSubPath{
		selector: UpdateLogDescriptorRequest_FieldPathSelectorLogDescriptor,
		subPath:  log_descriptor.NewLogDescriptorFieldPathBuilder().PromotedLabelKeySets().FieldPath(),
	}
}

func (s UpdateLogDescriptorRequestPathSelectorLogDescriptorPromotedLabelKeySets) WithValue(value []*logging_common.LabelKeySet) *UpdateLogDescriptorRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateLogDescriptorRequest_FieldSubPathValue)
}

func (s UpdateLogDescriptorRequestPathSelectorLogDescriptorPromotedLabelKeySets) WithArrayOfValues(values [][]*logging_common.LabelKeySet) *UpdateLogDescriptorRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateLogDescriptorRequest_FieldSubPathArrayOfValues)
}

func (s UpdateLogDescriptorRequestPathSelectorLogDescriptorPromotedLabelKeySets) WithItemValue(value *logging_common.LabelKeySet) *UpdateLogDescriptorRequest_FieldSubPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*UpdateLogDescriptorRequest_FieldSubPathArrayItemValue)
}

func (UpdateLogDescriptorRequestPathSelectorLogDescriptorPromotedLabelKeySets) LabelKeys() UpdateLogDescriptorRequestPathSelectorLogDescriptorPromotedLabelKeySetsLabelKeys {
	return UpdateLogDescriptorRequestPathSelectorLogDescriptorPromotedLabelKeySetsLabelKeys{}
}

type UpdateLogDescriptorRequestPathSelectorLogDescriptorPromotedLabelKeySetsLabelKeys struct{}

func (UpdateLogDescriptorRequestPathSelectorLogDescriptorPromotedLabelKeySetsLabelKeys) FieldPath() *UpdateLogDescriptorRequest_FieldSubPath {
	return &UpdateLogDescriptorRequest_FieldSubPath{
		selector: UpdateLogDescriptorRequest_FieldPathSelectorLogDescriptor,
		subPath:  log_descriptor.NewLogDescriptorFieldPathBuilder().PromotedLabelKeySets().LabelKeys().FieldPath(),
	}
}

func (s UpdateLogDescriptorRequestPathSelectorLogDescriptorPromotedLabelKeySetsLabelKeys) WithValue(value []string) *UpdateLogDescriptorRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateLogDescriptorRequest_FieldSubPathValue)
}

func (s UpdateLogDescriptorRequestPathSelectorLogDescriptorPromotedLabelKeySetsLabelKeys) WithArrayOfValues(values [][]string) *UpdateLogDescriptorRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateLogDescriptorRequest_FieldSubPathArrayOfValues)
}

func (s UpdateLogDescriptorRequestPathSelectorLogDescriptorPromotedLabelKeySetsLabelKeys) WithItemValue(value string) *UpdateLogDescriptorRequest_FieldSubPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*UpdateLogDescriptorRequest_FieldSubPathArrayItemValue)
}

type UpdateLogDescriptorRequestPathSelectorLogDescriptorMetadata struct{}

func (UpdateLogDescriptorRequestPathSelectorLogDescriptorMetadata) FieldPath() *UpdateLogDescriptorRequest_FieldSubPath {
	return &UpdateLogDescriptorRequest_FieldSubPath{
		selector: UpdateLogDescriptorRequest_FieldPathSelectorLogDescriptor,
		subPath:  log_descriptor.NewLogDescriptorFieldPathBuilder().Metadata().FieldPath(),
	}
}

func (s UpdateLogDescriptorRequestPathSelectorLogDescriptorMetadata) WithValue(value *ntt_meta.Meta) *UpdateLogDescriptorRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateLogDescriptorRequest_FieldSubPathValue)
}

func (s UpdateLogDescriptorRequestPathSelectorLogDescriptorMetadata) WithArrayOfValues(values []*ntt_meta.Meta) *UpdateLogDescriptorRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateLogDescriptorRequest_FieldSubPathArrayOfValues)
}

func (UpdateLogDescriptorRequestPathSelectorLogDescriptorMetadata) CreateTime() UpdateLogDescriptorRequestPathSelectorLogDescriptorMetadataCreateTime {
	return UpdateLogDescriptorRequestPathSelectorLogDescriptorMetadataCreateTime{}
}

func (UpdateLogDescriptorRequestPathSelectorLogDescriptorMetadata) UpdateTime() UpdateLogDescriptorRequestPathSelectorLogDescriptorMetadataUpdateTime {
	return UpdateLogDescriptorRequestPathSelectorLogDescriptorMetadataUpdateTime{}
}

func (UpdateLogDescriptorRequestPathSelectorLogDescriptorMetadata) Uuid() UpdateLogDescriptorRequestPathSelectorLogDescriptorMetadataUuid {
	return UpdateLogDescriptorRequestPathSelectorLogDescriptorMetadataUuid{}
}

func (UpdateLogDescriptorRequestPathSelectorLogDescriptorMetadata) Tags() UpdateLogDescriptorRequestPathSelectorLogDescriptorMetadataTags {
	return UpdateLogDescriptorRequestPathSelectorLogDescriptorMetadataTags{}
}

func (UpdateLogDescriptorRequestPathSelectorLogDescriptorMetadata) Labels() UpdateLogDescriptorRequestPathSelectorLogDescriptorMetadataLabels {
	return UpdateLogDescriptorRequestPathSelectorLogDescriptorMetadataLabels{}
}

func (UpdateLogDescriptorRequestPathSelectorLogDescriptorMetadata) Annotations() UpdateLogDescriptorRequestPathSelectorLogDescriptorMetadataAnnotations {
	return UpdateLogDescriptorRequestPathSelectorLogDescriptorMetadataAnnotations{}
}

func (UpdateLogDescriptorRequestPathSelectorLogDescriptorMetadata) Generation() UpdateLogDescriptorRequestPathSelectorLogDescriptorMetadataGeneration {
	return UpdateLogDescriptorRequestPathSelectorLogDescriptorMetadataGeneration{}
}

func (UpdateLogDescriptorRequestPathSelectorLogDescriptorMetadata) ResourceVersion() UpdateLogDescriptorRequestPathSelectorLogDescriptorMetadataResourceVersion {
	return UpdateLogDescriptorRequestPathSelectorLogDescriptorMetadataResourceVersion{}
}

func (UpdateLogDescriptorRequestPathSelectorLogDescriptorMetadata) OwnerReferences() UpdateLogDescriptorRequestPathSelectorLogDescriptorMetadataOwnerReferences {
	return UpdateLogDescriptorRequestPathSelectorLogDescriptorMetadataOwnerReferences{}
}

func (UpdateLogDescriptorRequestPathSelectorLogDescriptorMetadata) Shards() UpdateLogDescriptorRequestPathSelectorLogDescriptorMetadataShards {
	return UpdateLogDescriptorRequestPathSelectorLogDescriptorMetadataShards{}
}

func (UpdateLogDescriptorRequestPathSelectorLogDescriptorMetadata) Syncing() UpdateLogDescriptorRequestPathSelectorLogDescriptorMetadataSyncing {
	return UpdateLogDescriptorRequestPathSelectorLogDescriptorMetadataSyncing{}
}

type UpdateLogDescriptorRequestPathSelectorLogDescriptorMetadataCreateTime struct{}

func (UpdateLogDescriptorRequestPathSelectorLogDescriptorMetadataCreateTime) FieldPath() *UpdateLogDescriptorRequest_FieldSubPath {
	return &UpdateLogDescriptorRequest_FieldSubPath{
		selector: UpdateLogDescriptorRequest_FieldPathSelectorLogDescriptor,
		subPath:  log_descriptor.NewLogDescriptorFieldPathBuilder().Metadata().CreateTime().FieldPath(),
	}
}

func (s UpdateLogDescriptorRequestPathSelectorLogDescriptorMetadataCreateTime) WithValue(value *timestamp.Timestamp) *UpdateLogDescriptorRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateLogDescriptorRequest_FieldSubPathValue)
}

func (s UpdateLogDescriptorRequestPathSelectorLogDescriptorMetadataCreateTime) WithArrayOfValues(values []*timestamp.Timestamp) *UpdateLogDescriptorRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateLogDescriptorRequest_FieldSubPathArrayOfValues)
}

type UpdateLogDescriptorRequestPathSelectorLogDescriptorMetadataUpdateTime struct{}

func (UpdateLogDescriptorRequestPathSelectorLogDescriptorMetadataUpdateTime) FieldPath() *UpdateLogDescriptorRequest_FieldSubPath {
	return &UpdateLogDescriptorRequest_FieldSubPath{
		selector: UpdateLogDescriptorRequest_FieldPathSelectorLogDescriptor,
		subPath:  log_descriptor.NewLogDescriptorFieldPathBuilder().Metadata().UpdateTime().FieldPath(),
	}
}

func (s UpdateLogDescriptorRequestPathSelectorLogDescriptorMetadataUpdateTime) WithValue(value *timestamp.Timestamp) *UpdateLogDescriptorRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateLogDescriptorRequest_FieldSubPathValue)
}

func (s UpdateLogDescriptorRequestPathSelectorLogDescriptorMetadataUpdateTime) WithArrayOfValues(values []*timestamp.Timestamp) *UpdateLogDescriptorRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateLogDescriptorRequest_FieldSubPathArrayOfValues)
}

type UpdateLogDescriptorRequestPathSelectorLogDescriptorMetadataUuid struct{}

func (UpdateLogDescriptorRequestPathSelectorLogDescriptorMetadataUuid) FieldPath() *UpdateLogDescriptorRequest_FieldSubPath {
	return &UpdateLogDescriptorRequest_FieldSubPath{
		selector: UpdateLogDescriptorRequest_FieldPathSelectorLogDescriptor,
		subPath:  log_descriptor.NewLogDescriptorFieldPathBuilder().Metadata().Uuid().FieldPath(),
	}
}

func (s UpdateLogDescriptorRequestPathSelectorLogDescriptorMetadataUuid) WithValue(value string) *UpdateLogDescriptorRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateLogDescriptorRequest_FieldSubPathValue)
}

func (s UpdateLogDescriptorRequestPathSelectorLogDescriptorMetadataUuid) WithArrayOfValues(values []string) *UpdateLogDescriptorRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateLogDescriptorRequest_FieldSubPathArrayOfValues)
}

type UpdateLogDescriptorRequestPathSelectorLogDescriptorMetadataTags struct{}

func (UpdateLogDescriptorRequestPathSelectorLogDescriptorMetadataTags) FieldPath() *UpdateLogDescriptorRequest_FieldSubPath {
	return &UpdateLogDescriptorRequest_FieldSubPath{
		selector: UpdateLogDescriptorRequest_FieldPathSelectorLogDescriptor,
		subPath:  log_descriptor.NewLogDescriptorFieldPathBuilder().Metadata().Tags().FieldPath(),
	}
}

func (s UpdateLogDescriptorRequestPathSelectorLogDescriptorMetadataTags) WithValue(value []string) *UpdateLogDescriptorRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateLogDescriptorRequest_FieldSubPathValue)
}

func (s UpdateLogDescriptorRequestPathSelectorLogDescriptorMetadataTags) WithArrayOfValues(values [][]string) *UpdateLogDescriptorRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateLogDescriptorRequest_FieldSubPathArrayOfValues)
}

func (s UpdateLogDescriptorRequestPathSelectorLogDescriptorMetadataTags) WithItemValue(value string) *UpdateLogDescriptorRequest_FieldSubPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*UpdateLogDescriptorRequest_FieldSubPathArrayItemValue)
}

type UpdateLogDescriptorRequestPathSelectorLogDescriptorMetadataLabels struct{}

func (UpdateLogDescriptorRequestPathSelectorLogDescriptorMetadataLabels) FieldPath() *UpdateLogDescriptorRequest_FieldSubPath {
	return &UpdateLogDescriptorRequest_FieldSubPath{
		selector: UpdateLogDescriptorRequest_FieldPathSelectorLogDescriptor,
		subPath:  log_descriptor.NewLogDescriptorFieldPathBuilder().Metadata().Labels().FieldPath(),
	}
}

func (s UpdateLogDescriptorRequestPathSelectorLogDescriptorMetadataLabels) WithValue(value map[string]string) *UpdateLogDescriptorRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateLogDescriptorRequest_FieldSubPathValue)
}

func (s UpdateLogDescriptorRequestPathSelectorLogDescriptorMetadataLabels) WithArrayOfValues(values []map[string]string) *UpdateLogDescriptorRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateLogDescriptorRequest_FieldSubPathArrayOfValues)
}

func (UpdateLogDescriptorRequestPathSelectorLogDescriptorMetadataLabels) WithKey(key string) UpdateLogDescriptorRequestMapPathSelectorLogDescriptorMetadataLabels {
	return UpdateLogDescriptorRequestMapPathSelectorLogDescriptorMetadataLabels{key: key}
}

type UpdateLogDescriptorRequestMapPathSelectorLogDescriptorMetadataLabels struct {
	key string
}

func (s UpdateLogDescriptorRequestMapPathSelectorLogDescriptorMetadataLabels) FieldPath() *UpdateLogDescriptorRequest_FieldSubPath {
	return &UpdateLogDescriptorRequest_FieldSubPath{
		selector: UpdateLogDescriptorRequest_FieldPathSelectorLogDescriptor,
		subPath:  log_descriptor.NewLogDescriptorFieldPathBuilder().Metadata().Labels().WithKey(s.key).FieldPath(),
	}
}

func (s UpdateLogDescriptorRequestMapPathSelectorLogDescriptorMetadataLabels) WithValue(value string) *UpdateLogDescriptorRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateLogDescriptorRequest_FieldSubPathValue)
}

func (s UpdateLogDescriptorRequestMapPathSelectorLogDescriptorMetadataLabels) WithArrayOfValues(values []string) *UpdateLogDescriptorRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateLogDescriptorRequest_FieldSubPathArrayOfValues)
}

type UpdateLogDescriptorRequestPathSelectorLogDescriptorMetadataAnnotations struct{}

func (UpdateLogDescriptorRequestPathSelectorLogDescriptorMetadataAnnotations) FieldPath() *UpdateLogDescriptorRequest_FieldSubPath {
	return &UpdateLogDescriptorRequest_FieldSubPath{
		selector: UpdateLogDescriptorRequest_FieldPathSelectorLogDescriptor,
		subPath:  log_descriptor.NewLogDescriptorFieldPathBuilder().Metadata().Annotations().FieldPath(),
	}
}

func (s UpdateLogDescriptorRequestPathSelectorLogDescriptorMetadataAnnotations) WithValue(value map[string]string) *UpdateLogDescriptorRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateLogDescriptorRequest_FieldSubPathValue)
}

func (s UpdateLogDescriptorRequestPathSelectorLogDescriptorMetadataAnnotations) WithArrayOfValues(values []map[string]string) *UpdateLogDescriptorRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateLogDescriptorRequest_FieldSubPathArrayOfValues)
}

func (UpdateLogDescriptorRequestPathSelectorLogDescriptorMetadataAnnotations) WithKey(key string) UpdateLogDescriptorRequestMapPathSelectorLogDescriptorMetadataAnnotations {
	return UpdateLogDescriptorRequestMapPathSelectorLogDescriptorMetadataAnnotations{key: key}
}

type UpdateLogDescriptorRequestMapPathSelectorLogDescriptorMetadataAnnotations struct {
	key string
}

func (s UpdateLogDescriptorRequestMapPathSelectorLogDescriptorMetadataAnnotations) FieldPath() *UpdateLogDescriptorRequest_FieldSubPath {
	return &UpdateLogDescriptorRequest_FieldSubPath{
		selector: UpdateLogDescriptorRequest_FieldPathSelectorLogDescriptor,
		subPath:  log_descriptor.NewLogDescriptorFieldPathBuilder().Metadata().Annotations().WithKey(s.key).FieldPath(),
	}
}

func (s UpdateLogDescriptorRequestMapPathSelectorLogDescriptorMetadataAnnotations) WithValue(value string) *UpdateLogDescriptorRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateLogDescriptorRequest_FieldSubPathValue)
}

func (s UpdateLogDescriptorRequestMapPathSelectorLogDescriptorMetadataAnnotations) WithArrayOfValues(values []string) *UpdateLogDescriptorRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateLogDescriptorRequest_FieldSubPathArrayOfValues)
}

type UpdateLogDescriptorRequestPathSelectorLogDescriptorMetadataGeneration struct{}

func (UpdateLogDescriptorRequestPathSelectorLogDescriptorMetadataGeneration) FieldPath() *UpdateLogDescriptorRequest_FieldSubPath {
	return &UpdateLogDescriptorRequest_FieldSubPath{
		selector: UpdateLogDescriptorRequest_FieldPathSelectorLogDescriptor,
		subPath:  log_descriptor.NewLogDescriptorFieldPathBuilder().Metadata().Generation().FieldPath(),
	}
}

func (s UpdateLogDescriptorRequestPathSelectorLogDescriptorMetadataGeneration) WithValue(value int64) *UpdateLogDescriptorRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateLogDescriptorRequest_FieldSubPathValue)
}

func (s UpdateLogDescriptorRequestPathSelectorLogDescriptorMetadataGeneration) WithArrayOfValues(values []int64) *UpdateLogDescriptorRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateLogDescriptorRequest_FieldSubPathArrayOfValues)
}

type UpdateLogDescriptorRequestPathSelectorLogDescriptorMetadataResourceVersion struct{}

func (UpdateLogDescriptorRequestPathSelectorLogDescriptorMetadataResourceVersion) FieldPath() *UpdateLogDescriptorRequest_FieldSubPath {
	return &UpdateLogDescriptorRequest_FieldSubPath{
		selector: UpdateLogDescriptorRequest_FieldPathSelectorLogDescriptor,
		subPath:  log_descriptor.NewLogDescriptorFieldPathBuilder().Metadata().ResourceVersion().FieldPath(),
	}
}

func (s UpdateLogDescriptorRequestPathSelectorLogDescriptorMetadataResourceVersion) WithValue(value string) *UpdateLogDescriptorRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateLogDescriptorRequest_FieldSubPathValue)
}

func (s UpdateLogDescriptorRequestPathSelectorLogDescriptorMetadataResourceVersion) WithArrayOfValues(values []string) *UpdateLogDescriptorRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateLogDescriptorRequest_FieldSubPathArrayOfValues)
}

type UpdateLogDescriptorRequestPathSelectorLogDescriptorMetadataOwnerReferences struct{}

func (UpdateLogDescriptorRequestPathSelectorLogDescriptorMetadataOwnerReferences) FieldPath() *UpdateLogDescriptorRequest_FieldSubPath {
	return &UpdateLogDescriptorRequest_FieldSubPath{
		selector: UpdateLogDescriptorRequest_FieldPathSelectorLogDescriptor,
		subPath:  log_descriptor.NewLogDescriptorFieldPathBuilder().Metadata().OwnerReferences().FieldPath(),
	}
}

func (s UpdateLogDescriptorRequestPathSelectorLogDescriptorMetadataOwnerReferences) WithValue(value []*ntt_meta.OwnerReference) *UpdateLogDescriptorRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateLogDescriptorRequest_FieldSubPathValue)
}

func (s UpdateLogDescriptorRequestPathSelectorLogDescriptorMetadataOwnerReferences) WithArrayOfValues(values [][]*ntt_meta.OwnerReference) *UpdateLogDescriptorRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateLogDescriptorRequest_FieldSubPathArrayOfValues)
}

func (s UpdateLogDescriptorRequestPathSelectorLogDescriptorMetadataOwnerReferences) WithItemValue(value *ntt_meta.OwnerReference) *UpdateLogDescriptorRequest_FieldSubPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*UpdateLogDescriptorRequest_FieldSubPathArrayItemValue)
}

func (UpdateLogDescriptorRequestPathSelectorLogDescriptorMetadataOwnerReferences) ApiVersion() UpdateLogDescriptorRequestPathSelectorLogDescriptorMetadataOwnerReferencesApiVersion {
	return UpdateLogDescriptorRequestPathSelectorLogDescriptorMetadataOwnerReferencesApiVersion{}
}

func (UpdateLogDescriptorRequestPathSelectorLogDescriptorMetadataOwnerReferences) Kind() UpdateLogDescriptorRequestPathSelectorLogDescriptorMetadataOwnerReferencesKind {
	return UpdateLogDescriptorRequestPathSelectorLogDescriptorMetadataOwnerReferencesKind{}
}

func (UpdateLogDescriptorRequestPathSelectorLogDescriptorMetadataOwnerReferences) Name() UpdateLogDescriptorRequestPathSelectorLogDescriptorMetadataOwnerReferencesName {
	return UpdateLogDescriptorRequestPathSelectorLogDescriptorMetadataOwnerReferencesName{}
}

func (UpdateLogDescriptorRequestPathSelectorLogDescriptorMetadataOwnerReferences) Uid() UpdateLogDescriptorRequestPathSelectorLogDescriptorMetadataOwnerReferencesUid {
	return UpdateLogDescriptorRequestPathSelectorLogDescriptorMetadataOwnerReferencesUid{}
}

func (UpdateLogDescriptorRequestPathSelectorLogDescriptorMetadataOwnerReferences) Controller() UpdateLogDescriptorRequestPathSelectorLogDescriptorMetadataOwnerReferencesController {
	return UpdateLogDescriptorRequestPathSelectorLogDescriptorMetadataOwnerReferencesController{}
}

func (UpdateLogDescriptorRequestPathSelectorLogDescriptorMetadataOwnerReferences) BlockOwnerDeletion() UpdateLogDescriptorRequestPathSelectorLogDescriptorMetadataOwnerReferencesBlockOwnerDeletion {
	return UpdateLogDescriptorRequestPathSelectorLogDescriptorMetadataOwnerReferencesBlockOwnerDeletion{}
}

type UpdateLogDescriptorRequestPathSelectorLogDescriptorMetadataOwnerReferencesApiVersion struct{}

func (UpdateLogDescriptorRequestPathSelectorLogDescriptorMetadataOwnerReferencesApiVersion) FieldPath() *UpdateLogDescriptorRequest_FieldSubPath {
	return &UpdateLogDescriptorRequest_FieldSubPath{
		selector: UpdateLogDescriptorRequest_FieldPathSelectorLogDescriptor,
		subPath:  log_descriptor.NewLogDescriptorFieldPathBuilder().Metadata().OwnerReferences().ApiVersion().FieldPath(),
	}
}

func (s UpdateLogDescriptorRequestPathSelectorLogDescriptorMetadataOwnerReferencesApiVersion) WithValue(value string) *UpdateLogDescriptorRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateLogDescriptorRequest_FieldSubPathValue)
}

func (s UpdateLogDescriptorRequestPathSelectorLogDescriptorMetadataOwnerReferencesApiVersion) WithArrayOfValues(values []string) *UpdateLogDescriptorRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateLogDescriptorRequest_FieldSubPathArrayOfValues)
}

type UpdateLogDescriptorRequestPathSelectorLogDescriptorMetadataOwnerReferencesKind struct{}

func (UpdateLogDescriptorRequestPathSelectorLogDescriptorMetadataOwnerReferencesKind) FieldPath() *UpdateLogDescriptorRequest_FieldSubPath {
	return &UpdateLogDescriptorRequest_FieldSubPath{
		selector: UpdateLogDescriptorRequest_FieldPathSelectorLogDescriptor,
		subPath:  log_descriptor.NewLogDescriptorFieldPathBuilder().Metadata().OwnerReferences().Kind().FieldPath(),
	}
}

func (s UpdateLogDescriptorRequestPathSelectorLogDescriptorMetadataOwnerReferencesKind) WithValue(value string) *UpdateLogDescriptorRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateLogDescriptorRequest_FieldSubPathValue)
}

func (s UpdateLogDescriptorRequestPathSelectorLogDescriptorMetadataOwnerReferencesKind) WithArrayOfValues(values []string) *UpdateLogDescriptorRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateLogDescriptorRequest_FieldSubPathArrayOfValues)
}

type UpdateLogDescriptorRequestPathSelectorLogDescriptorMetadataOwnerReferencesName struct{}

func (UpdateLogDescriptorRequestPathSelectorLogDescriptorMetadataOwnerReferencesName) FieldPath() *UpdateLogDescriptorRequest_FieldSubPath {
	return &UpdateLogDescriptorRequest_FieldSubPath{
		selector: UpdateLogDescriptorRequest_FieldPathSelectorLogDescriptor,
		subPath:  log_descriptor.NewLogDescriptorFieldPathBuilder().Metadata().OwnerReferences().Name().FieldPath(),
	}
}

func (s UpdateLogDescriptorRequestPathSelectorLogDescriptorMetadataOwnerReferencesName) WithValue(value string) *UpdateLogDescriptorRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateLogDescriptorRequest_FieldSubPathValue)
}

func (s UpdateLogDescriptorRequestPathSelectorLogDescriptorMetadataOwnerReferencesName) WithArrayOfValues(values []string) *UpdateLogDescriptorRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateLogDescriptorRequest_FieldSubPathArrayOfValues)
}

type UpdateLogDescriptorRequestPathSelectorLogDescriptorMetadataOwnerReferencesUid struct{}

func (UpdateLogDescriptorRequestPathSelectorLogDescriptorMetadataOwnerReferencesUid) FieldPath() *UpdateLogDescriptorRequest_FieldSubPath {
	return &UpdateLogDescriptorRequest_FieldSubPath{
		selector: UpdateLogDescriptorRequest_FieldPathSelectorLogDescriptor,
		subPath:  log_descriptor.NewLogDescriptorFieldPathBuilder().Metadata().OwnerReferences().Uid().FieldPath(),
	}
}

func (s UpdateLogDescriptorRequestPathSelectorLogDescriptorMetadataOwnerReferencesUid) WithValue(value string) *UpdateLogDescriptorRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateLogDescriptorRequest_FieldSubPathValue)
}

func (s UpdateLogDescriptorRequestPathSelectorLogDescriptorMetadataOwnerReferencesUid) WithArrayOfValues(values []string) *UpdateLogDescriptorRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateLogDescriptorRequest_FieldSubPathArrayOfValues)
}

type UpdateLogDescriptorRequestPathSelectorLogDescriptorMetadataOwnerReferencesController struct{}

func (UpdateLogDescriptorRequestPathSelectorLogDescriptorMetadataOwnerReferencesController) FieldPath() *UpdateLogDescriptorRequest_FieldSubPath {
	return &UpdateLogDescriptorRequest_FieldSubPath{
		selector: UpdateLogDescriptorRequest_FieldPathSelectorLogDescriptor,
		subPath:  log_descriptor.NewLogDescriptorFieldPathBuilder().Metadata().OwnerReferences().Controller().FieldPath(),
	}
}

func (s UpdateLogDescriptorRequestPathSelectorLogDescriptorMetadataOwnerReferencesController) WithValue(value bool) *UpdateLogDescriptorRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateLogDescriptorRequest_FieldSubPathValue)
}

func (s UpdateLogDescriptorRequestPathSelectorLogDescriptorMetadataOwnerReferencesController) WithArrayOfValues(values []bool) *UpdateLogDescriptorRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateLogDescriptorRequest_FieldSubPathArrayOfValues)
}

type UpdateLogDescriptorRequestPathSelectorLogDescriptorMetadataOwnerReferencesBlockOwnerDeletion struct{}

func (UpdateLogDescriptorRequestPathSelectorLogDescriptorMetadataOwnerReferencesBlockOwnerDeletion) FieldPath() *UpdateLogDescriptorRequest_FieldSubPath {
	return &UpdateLogDescriptorRequest_FieldSubPath{
		selector: UpdateLogDescriptorRequest_FieldPathSelectorLogDescriptor,
		subPath:  log_descriptor.NewLogDescriptorFieldPathBuilder().Metadata().OwnerReferences().BlockOwnerDeletion().FieldPath(),
	}
}

func (s UpdateLogDescriptorRequestPathSelectorLogDescriptorMetadataOwnerReferencesBlockOwnerDeletion) WithValue(value bool) *UpdateLogDescriptorRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateLogDescriptorRequest_FieldSubPathValue)
}

func (s UpdateLogDescriptorRequestPathSelectorLogDescriptorMetadataOwnerReferencesBlockOwnerDeletion) WithArrayOfValues(values []bool) *UpdateLogDescriptorRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateLogDescriptorRequest_FieldSubPathArrayOfValues)
}

type UpdateLogDescriptorRequestPathSelectorLogDescriptorMetadataShards struct{}

func (UpdateLogDescriptorRequestPathSelectorLogDescriptorMetadataShards) FieldPath() *UpdateLogDescriptorRequest_FieldSubPath {
	return &UpdateLogDescriptorRequest_FieldSubPath{
		selector: UpdateLogDescriptorRequest_FieldPathSelectorLogDescriptor,
		subPath:  log_descriptor.NewLogDescriptorFieldPathBuilder().Metadata().Shards().FieldPath(),
	}
}

func (s UpdateLogDescriptorRequestPathSelectorLogDescriptorMetadataShards) WithValue(value map[string]int64) *UpdateLogDescriptorRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateLogDescriptorRequest_FieldSubPathValue)
}

func (s UpdateLogDescriptorRequestPathSelectorLogDescriptorMetadataShards) WithArrayOfValues(values []map[string]int64) *UpdateLogDescriptorRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateLogDescriptorRequest_FieldSubPathArrayOfValues)
}

func (UpdateLogDescriptorRequestPathSelectorLogDescriptorMetadataShards) WithKey(key string) UpdateLogDescriptorRequestMapPathSelectorLogDescriptorMetadataShards {
	return UpdateLogDescriptorRequestMapPathSelectorLogDescriptorMetadataShards{key: key}
}

type UpdateLogDescriptorRequestMapPathSelectorLogDescriptorMetadataShards struct {
	key string
}

func (s UpdateLogDescriptorRequestMapPathSelectorLogDescriptorMetadataShards) FieldPath() *UpdateLogDescriptorRequest_FieldSubPath {
	return &UpdateLogDescriptorRequest_FieldSubPath{
		selector: UpdateLogDescriptorRequest_FieldPathSelectorLogDescriptor,
		subPath:  log_descriptor.NewLogDescriptorFieldPathBuilder().Metadata().Shards().WithKey(s.key).FieldPath(),
	}
}

func (s UpdateLogDescriptorRequestMapPathSelectorLogDescriptorMetadataShards) WithValue(value int64) *UpdateLogDescriptorRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateLogDescriptorRequest_FieldSubPathValue)
}

func (s UpdateLogDescriptorRequestMapPathSelectorLogDescriptorMetadataShards) WithArrayOfValues(values []int64) *UpdateLogDescriptorRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateLogDescriptorRequest_FieldSubPathArrayOfValues)
}

type UpdateLogDescriptorRequestPathSelectorLogDescriptorMetadataSyncing struct{}

func (UpdateLogDescriptorRequestPathSelectorLogDescriptorMetadataSyncing) FieldPath() *UpdateLogDescriptorRequest_FieldSubPath {
	return &UpdateLogDescriptorRequest_FieldSubPath{
		selector: UpdateLogDescriptorRequest_FieldPathSelectorLogDescriptor,
		subPath:  log_descriptor.NewLogDescriptorFieldPathBuilder().Metadata().Syncing().FieldPath(),
	}
}

func (s UpdateLogDescriptorRequestPathSelectorLogDescriptorMetadataSyncing) WithValue(value *ntt_meta.SyncingMeta) *UpdateLogDescriptorRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateLogDescriptorRequest_FieldSubPathValue)
}

func (s UpdateLogDescriptorRequestPathSelectorLogDescriptorMetadataSyncing) WithArrayOfValues(values []*ntt_meta.SyncingMeta) *UpdateLogDescriptorRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateLogDescriptorRequest_FieldSubPathArrayOfValues)
}

func (UpdateLogDescriptorRequestPathSelectorLogDescriptorMetadataSyncing) OwningRegion() UpdateLogDescriptorRequestPathSelectorLogDescriptorMetadataSyncingOwningRegion {
	return UpdateLogDescriptorRequestPathSelectorLogDescriptorMetadataSyncingOwningRegion{}
}

func (UpdateLogDescriptorRequestPathSelectorLogDescriptorMetadataSyncing) Regions() UpdateLogDescriptorRequestPathSelectorLogDescriptorMetadataSyncingRegions {
	return UpdateLogDescriptorRequestPathSelectorLogDescriptorMetadataSyncingRegions{}
}

type UpdateLogDescriptorRequestPathSelectorLogDescriptorMetadataSyncingOwningRegion struct{}

func (UpdateLogDescriptorRequestPathSelectorLogDescriptorMetadataSyncingOwningRegion) FieldPath() *UpdateLogDescriptorRequest_FieldSubPath {
	return &UpdateLogDescriptorRequest_FieldSubPath{
		selector: UpdateLogDescriptorRequest_FieldPathSelectorLogDescriptor,
		subPath:  log_descriptor.NewLogDescriptorFieldPathBuilder().Metadata().Syncing().OwningRegion().FieldPath(),
	}
}

func (s UpdateLogDescriptorRequestPathSelectorLogDescriptorMetadataSyncingOwningRegion) WithValue(value string) *UpdateLogDescriptorRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateLogDescriptorRequest_FieldSubPathValue)
}

func (s UpdateLogDescriptorRequestPathSelectorLogDescriptorMetadataSyncingOwningRegion) WithArrayOfValues(values []string) *UpdateLogDescriptorRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateLogDescriptorRequest_FieldSubPathArrayOfValues)
}

type UpdateLogDescriptorRequestPathSelectorLogDescriptorMetadataSyncingRegions struct{}

func (UpdateLogDescriptorRequestPathSelectorLogDescriptorMetadataSyncingRegions) FieldPath() *UpdateLogDescriptorRequest_FieldSubPath {
	return &UpdateLogDescriptorRequest_FieldSubPath{
		selector: UpdateLogDescriptorRequest_FieldPathSelectorLogDescriptor,
		subPath:  log_descriptor.NewLogDescriptorFieldPathBuilder().Metadata().Syncing().Regions().FieldPath(),
	}
}

func (s UpdateLogDescriptorRequestPathSelectorLogDescriptorMetadataSyncingRegions) WithValue(value []string) *UpdateLogDescriptorRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateLogDescriptorRequest_FieldSubPathValue)
}

func (s UpdateLogDescriptorRequestPathSelectorLogDescriptorMetadataSyncingRegions) WithArrayOfValues(values [][]string) *UpdateLogDescriptorRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateLogDescriptorRequest_FieldSubPathArrayOfValues)
}

func (s UpdateLogDescriptorRequestPathSelectorLogDescriptorMetadataSyncingRegions) WithItemValue(value string) *UpdateLogDescriptorRequest_FieldSubPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*UpdateLogDescriptorRequest_FieldSubPathArrayItemValue)
}

type UpdateLogDescriptorRequestPathSelectorUpdateMask struct{}

func (UpdateLogDescriptorRequestPathSelectorUpdateMask) FieldPath() *UpdateLogDescriptorRequest_FieldTerminalPath {
	return &UpdateLogDescriptorRequest_FieldTerminalPath{selector: UpdateLogDescriptorRequest_FieldPathSelectorUpdateMask}
}

func (s UpdateLogDescriptorRequestPathSelectorUpdateMask) WithValue(value *log_descriptor.LogDescriptor_FieldMask) *UpdateLogDescriptorRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateLogDescriptorRequest_FieldTerminalPathValue)
}

func (s UpdateLogDescriptorRequestPathSelectorUpdateMask) WithArrayOfValues(values []*log_descriptor.LogDescriptor_FieldMask) *UpdateLogDescriptorRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateLogDescriptorRequest_FieldTerminalPathArrayOfValues)
}

type UpdateLogDescriptorRequestPathSelectorCas struct{}

func (UpdateLogDescriptorRequestPathSelectorCas) FieldPath() *UpdateLogDescriptorRequest_FieldTerminalPath {
	return &UpdateLogDescriptorRequest_FieldTerminalPath{selector: UpdateLogDescriptorRequest_FieldPathSelectorCas}
}

func (s UpdateLogDescriptorRequestPathSelectorCas) WithValue(value *UpdateLogDescriptorRequest_CAS) *UpdateLogDescriptorRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateLogDescriptorRequest_FieldTerminalPathValue)
}

func (s UpdateLogDescriptorRequestPathSelectorCas) WithArrayOfValues(values []*UpdateLogDescriptorRequest_CAS) *UpdateLogDescriptorRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateLogDescriptorRequest_FieldTerminalPathArrayOfValues)
}

func (UpdateLogDescriptorRequestPathSelectorCas) WithSubPath(subPath UpdateLogDescriptorRequestCAS_FieldPath) *UpdateLogDescriptorRequest_FieldSubPath {
	return &UpdateLogDescriptorRequest_FieldSubPath{selector: UpdateLogDescriptorRequest_FieldPathSelectorCas, subPath: subPath}
}

func (s UpdateLogDescriptorRequestPathSelectorCas) WithSubValue(subPathValue UpdateLogDescriptorRequestCAS_FieldPathValue) *UpdateLogDescriptorRequest_FieldSubPathValue {
	return &UpdateLogDescriptorRequest_FieldSubPathValue{UpdateLogDescriptorRequest_FieldPath: s.WithSubPath(subPathValue), subPathValue: subPathValue}
}

func (s UpdateLogDescriptorRequestPathSelectorCas) WithSubArrayOfValues(subPathArrayOfValues UpdateLogDescriptorRequestCAS_FieldPathArrayOfValues) *UpdateLogDescriptorRequest_FieldSubPathArrayOfValues {
	return &UpdateLogDescriptorRequest_FieldSubPathArrayOfValues{UpdateLogDescriptorRequest_FieldPath: s.WithSubPath(subPathArrayOfValues), subPathArrayOfValues: subPathArrayOfValues}
}

func (s UpdateLogDescriptorRequestPathSelectorCas) WithSubArrayItemValue(subPathArrayItemValue UpdateLogDescriptorRequestCAS_FieldPathArrayItemValue) *UpdateLogDescriptorRequest_FieldSubPathArrayItemValue {
	return &UpdateLogDescriptorRequest_FieldSubPathArrayItemValue{UpdateLogDescriptorRequest_FieldPath: s.WithSubPath(subPathArrayItemValue), subPathItemValue: subPathArrayItemValue}
}

func (UpdateLogDescriptorRequestPathSelectorCas) ConditionalState() UpdateLogDescriptorRequestPathSelectorCasConditionalState {
	return UpdateLogDescriptorRequestPathSelectorCasConditionalState{}
}

func (UpdateLogDescriptorRequestPathSelectorCas) FieldMask() UpdateLogDescriptorRequestPathSelectorCasFieldMask {
	return UpdateLogDescriptorRequestPathSelectorCasFieldMask{}
}

type UpdateLogDescriptorRequestPathSelectorCasConditionalState struct{}

func (UpdateLogDescriptorRequestPathSelectorCasConditionalState) FieldPath() *UpdateLogDescriptorRequest_FieldSubPath {
	return &UpdateLogDescriptorRequest_FieldSubPath{
		selector: UpdateLogDescriptorRequest_FieldPathSelectorCas,
		subPath:  NewUpdateLogDescriptorRequestCASFieldPathBuilder().ConditionalState().FieldPath(),
	}
}

func (s UpdateLogDescriptorRequestPathSelectorCasConditionalState) WithValue(value *log_descriptor.LogDescriptor) *UpdateLogDescriptorRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateLogDescriptorRequest_FieldSubPathValue)
}

func (s UpdateLogDescriptorRequestPathSelectorCasConditionalState) WithArrayOfValues(values []*log_descriptor.LogDescriptor) *UpdateLogDescriptorRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateLogDescriptorRequest_FieldSubPathArrayOfValues)
}

func (UpdateLogDescriptorRequestPathSelectorCasConditionalState) Name() UpdateLogDescriptorRequestPathSelectorCasConditionalStateName {
	return UpdateLogDescriptorRequestPathSelectorCasConditionalStateName{}
}

func (UpdateLogDescriptorRequestPathSelectorCasConditionalState) DisplayName() UpdateLogDescriptorRequestPathSelectorCasConditionalStateDisplayName {
	return UpdateLogDescriptorRequestPathSelectorCasConditionalStateDisplayName{}
}

func (UpdateLogDescriptorRequestPathSelectorCasConditionalState) Description() UpdateLogDescriptorRequestPathSelectorCasConditionalStateDescription {
	return UpdateLogDescriptorRequestPathSelectorCasConditionalStateDescription{}
}

func (UpdateLogDescriptorRequestPathSelectorCasConditionalState) Labels() UpdateLogDescriptorRequestPathSelectorCasConditionalStateLabels {
	return UpdateLogDescriptorRequestPathSelectorCasConditionalStateLabels{}
}

func (UpdateLogDescriptorRequestPathSelectorCasConditionalState) PromotedLabelKeySets() UpdateLogDescriptorRequestPathSelectorCasConditionalStatePromotedLabelKeySets {
	return UpdateLogDescriptorRequestPathSelectorCasConditionalStatePromotedLabelKeySets{}
}

func (UpdateLogDescriptorRequestPathSelectorCasConditionalState) Metadata() UpdateLogDescriptorRequestPathSelectorCasConditionalStateMetadata {
	return UpdateLogDescriptorRequestPathSelectorCasConditionalStateMetadata{}
}

type UpdateLogDescriptorRequestPathSelectorCasConditionalStateName struct{}

func (UpdateLogDescriptorRequestPathSelectorCasConditionalStateName) FieldPath() *UpdateLogDescriptorRequest_FieldSubPath {
	return &UpdateLogDescriptorRequest_FieldSubPath{
		selector: UpdateLogDescriptorRequest_FieldPathSelectorCas,
		subPath:  NewUpdateLogDescriptorRequestCASFieldPathBuilder().ConditionalState().Name().FieldPath(),
	}
}

func (s UpdateLogDescriptorRequestPathSelectorCasConditionalStateName) WithValue(value *log_descriptor.Name) *UpdateLogDescriptorRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateLogDescriptorRequest_FieldSubPathValue)
}

func (s UpdateLogDescriptorRequestPathSelectorCasConditionalStateName) WithArrayOfValues(values []*log_descriptor.Name) *UpdateLogDescriptorRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateLogDescriptorRequest_FieldSubPathArrayOfValues)
}

type UpdateLogDescriptorRequestPathSelectorCasConditionalStateDisplayName struct{}

func (UpdateLogDescriptorRequestPathSelectorCasConditionalStateDisplayName) FieldPath() *UpdateLogDescriptorRequest_FieldSubPath {
	return &UpdateLogDescriptorRequest_FieldSubPath{
		selector: UpdateLogDescriptorRequest_FieldPathSelectorCas,
		subPath:  NewUpdateLogDescriptorRequestCASFieldPathBuilder().ConditionalState().DisplayName().FieldPath(),
	}
}

func (s UpdateLogDescriptorRequestPathSelectorCasConditionalStateDisplayName) WithValue(value string) *UpdateLogDescriptorRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateLogDescriptorRequest_FieldSubPathValue)
}

func (s UpdateLogDescriptorRequestPathSelectorCasConditionalStateDisplayName) WithArrayOfValues(values []string) *UpdateLogDescriptorRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateLogDescriptorRequest_FieldSubPathArrayOfValues)
}

type UpdateLogDescriptorRequestPathSelectorCasConditionalStateDescription struct{}

func (UpdateLogDescriptorRequestPathSelectorCasConditionalStateDescription) FieldPath() *UpdateLogDescriptorRequest_FieldSubPath {
	return &UpdateLogDescriptorRequest_FieldSubPath{
		selector: UpdateLogDescriptorRequest_FieldPathSelectorCas,
		subPath:  NewUpdateLogDescriptorRequestCASFieldPathBuilder().ConditionalState().Description().FieldPath(),
	}
}

func (s UpdateLogDescriptorRequestPathSelectorCasConditionalStateDescription) WithValue(value string) *UpdateLogDescriptorRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateLogDescriptorRequest_FieldSubPathValue)
}

func (s UpdateLogDescriptorRequestPathSelectorCasConditionalStateDescription) WithArrayOfValues(values []string) *UpdateLogDescriptorRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateLogDescriptorRequest_FieldSubPathArrayOfValues)
}

type UpdateLogDescriptorRequestPathSelectorCasConditionalStateLabels struct{}

func (UpdateLogDescriptorRequestPathSelectorCasConditionalStateLabels) FieldPath() *UpdateLogDescriptorRequest_FieldSubPath {
	return &UpdateLogDescriptorRequest_FieldSubPath{
		selector: UpdateLogDescriptorRequest_FieldPathSelectorCas,
		subPath:  NewUpdateLogDescriptorRequestCASFieldPathBuilder().ConditionalState().Labels().FieldPath(),
	}
}

func (s UpdateLogDescriptorRequestPathSelectorCasConditionalStateLabels) WithValue(value []*logging_common.LabelDescriptor) *UpdateLogDescriptorRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateLogDescriptorRequest_FieldSubPathValue)
}

func (s UpdateLogDescriptorRequestPathSelectorCasConditionalStateLabels) WithArrayOfValues(values [][]*logging_common.LabelDescriptor) *UpdateLogDescriptorRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateLogDescriptorRequest_FieldSubPathArrayOfValues)
}

func (s UpdateLogDescriptorRequestPathSelectorCasConditionalStateLabels) WithItemValue(value *logging_common.LabelDescriptor) *UpdateLogDescriptorRequest_FieldSubPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*UpdateLogDescriptorRequest_FieldSubPathArrayItemValue)
}

func (UpdateLogDescriptorRequestPathSelectorCasConditionalStateLabels) Key() UpdateLogDescriptorRequestPathSelectorCasConditionalStateLabelsKey {
	return UpdateLogDescriptorRequestPathSelectorCasConditionalStateLabelsKey{}
}

func (UpdateLogDescriptorRequestPathSelectorCasConditionalStateLabels) Description() UpdateLogDescriptorRequestPathSelectorCasConditionalStateLabelsDescription {
	return UpdateLogDescriptorRequestPathSelectorCasConditionalStateLabelsDescription{}
}

type UpdateLogDescriptorRequestPathSelectorCasConditionalStateLabelsKey struct{}

func (UpdateLogDescriptorRequestPathSelectorCasConditionalStateLabelsKey) FieldPath() *UpdateLogDescriptorRequest_FieldSubPath {
	return &UpdateLogDescriptorRequest_FieldSubPath{
		selector: UpdateLogDescriptorRequest_FieldPathSelectorCas,
		subPath:  NewUpdateLogDescriptorRequestCASFieldPathBuilder().ConditionalState().Labels().Key().FieldPath(),
	}
}

func (s UpdateLogDescriptorRequestPathSelectorCasConditionalStateLabelsKey) WithValue(value string) *UpdateLogDescriptorRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateLogDescriptorRequest_FieldSubPathValue)
}

func (s UpdateLogDescriptorRequestPathSelectorCasConditionalStateLabelsKey) WithArrayOfValues(values []string) *UpdateLogDescriptorRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateLogDescriptorRequest_FieldSubPathArrayOfValues)
}

type UpdateLogDescriptorRequestPathSelectorCasConditionalStateLabelsDescription struct{}

func (UpdateLogDescriptorRequestPathSelectorCasConditionalStateLabelsDescription) FieldPath() *UpdateLogDescriptorRequest_FieldSubPath {
	return &UpdateLogDescriptorRequest_FieldSubPath{
		selector: UpdateLogDescriptorRequest_FieldPathSelectorCas,
		subPath:  NewUpdateLogDescriptorRequestCASFieldPathBuilder().ConditionalState().Labels().Description().FieldPath(),
	}
}

func (s UpdateLogDescriptorRequestPathSelectorCasConditionalStateLabelsDescription) WithValue(value string) *UpdateLogDescriptorRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateLogDescriptorRequest_FieldSubPathValue)
}

func (s UpdateLogDescriptorRequestPathSelectorCasConditionalStateLabelsDescription) WithArrayOfValues(values []string) *UpdateLogDescriptorRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateLogDescriptorRequest_FieldSubPathArrayOfValues)
}

type UpdateLogDescriptorRequestPathSelectorCasConditionalStatePromotedLabelKeySets struct{}

func (UpdateLogDescriptorRequestPathSelectorCasConditionalStatePromotedLabelKeySets) FieldPath() *UpdateLogDescriptorRequest_FieldSubPath {
	return &UpdateLogDescriptorRequest_FieldSubPath{
		selector: UpdateLogDescriptorRequest_FieldPathSelectorCas,
		subPath:  NewUpdateLogDescriptorRequestCASFieldPathBuilder().ConditionalState().PromotedLabelKeySets().FieldPath(),
	}
}

func (s UpdateLogDescriptorRequestPathSelectorCasConditionalStatePromotedLabelKeySets) WithValue(value []*logging_common.LabelKeySet) *UpdateLogDescriptorRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateLogDescriptorRequest_FieldSubPathValue)
}

func (s UpdateLogDescriptorRequestPathSelectorCasConditionalStatePromotedLabelKeySets) WithArrayOfValues(values [][]*logging_common.LabelKeySet) *UpdateLogDescriptorRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateLogDescriptorRequest_FieldSubPathArrayOfValues)
}

func (s UpdateLogDescriptorRequestPathSelectorCasConditionalStatePromotedLabelKeySets) WithItemValue(value *logging_common.LabelKeySet) *UpdateLogDescriptorRequest_FieldSubPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*UpdateLogDescriptorRequest_FieldSubPathArrayItemValue)
}

func (UpdateLogDescriptorRequestPathSelectorCasConditionalStatePromotedLabelKeySets) LabelKeys() UpdateLogDescriptorRequestPathSelectorCasConditionalStatePromotedLabelKeySetsLabelKeys {
	return UpdateLogDescriptorRequestPathSelectorCasConditionalStatePromotedLabelKeySetsLabelKeys{}
}

type UpdateLogDescriptorRequestPathSelectorCasConditionalStatePromotedLabelKeySetsLabelKeys struct{}

func (UpdateLogDescriptorRequestPathSelectorCasConditionalStatePromotedLabelKeySetsLabelKeys) FieldPath() *UpdateLogDescriptorRequest_FieldSubPath {
	return &UpdateLogDescriptorRequest_FieldSubPath{
		selector: UpdateLogDescriptorRequest_FieldPathSelectorCas,
		subPath:  NewUpdateLogDescriptorRequestCASFieldPathBuilder().ConditionalState().PromotedLabelKeySets().LabelKeys().FieldPath(),
	}
}

func (s UpdateLogDescriptorRequestPathSelectorCasConditionalStatePromotedLabelKeySetsLabelKeys) WithValue(value []string) *UpdateLogDescriptorRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateLogDescriptorRequest_FieldSubPathValue)
}

func (s UpdateLogDescriptorRequestPathSelectorCasConditionalStatePromotedLabelKeySetsLabelKeys) WithArrayOfValues(values [][]string) *UpdateLogDescriptorRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateLogDescriptorRequest_FieldSubPathArrayOfValues)
}

func (s UpdateLogDescriptorRequestPathSelectorCasConditionalStatePromotedLabelKeySetsLabelKeys) WithItemValue(value string) *UpdateLogDescriptorRequest_FieldSubPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*UpdateLogDescriptorRequest_FieldSubPathArrayItemValue)
}

type UpdateLogDescriptorRequestPathSelectorCasConditionalStateMetadata struct{}

func (UpdateLogDescriptorRequestPathSelectorCasConditionalStateMetadata) FieldPath() *UpdateLogDescriptorRequest_FieldSubPath {
	return &UpdateLogDescriptorRequest_FieldSubPath{
		selector: UpdateLogDescriptorRequest_FieldPathSelectorCas,
		subPath:  NewUpdateLogDescriptorRequestCASFieldPathBuilder().ConditionalState().Metadata().FieldPath(),
	}
}

func (s UpdateLogDescriptorRequestPathSelectorCasConditionalStateMetadata) WithValue(value *ntt_meta.Meta) *UpdateLogDescriptorRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateLogDescriptorRequest_FieldSubPathValue)
}

func (s UpdateLogDescriptorRequestPathSelectorCasConditionalStateMetadata) WithArrayOfValues(values []*ntt_meta.Meta) *UpdateLogDescriptorRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateLogDescriptorRequest_FieldSubPathArrayOfValues)
}

func (UpdateLogDescriptorRequestPathSelectorCasConditionalStateMetadata) CreateTime() UpdateLogDescriptorRequestPathSelectorCasConditionalStateMetadataCreateTime {
	return UpdateLogDescriptorRequestPathSelectorCasConditionalStateMetadataCreateTime{}
}

func (UpdateLogDescriptorRequestPathSelectorCasConditionalStateMetadata) UpdateTime() UpdateLogDescriptorRequestPathSelectorCasConditionalStateMetadataUpdateTime {
	return UpdateLogDescriptorRequestPathSelectorCasConditionalStateMetadataUpdateTime{}
}

func (UpdateLogDescriptorRequestPathSelectorCasConditionalStateMetadata) Uuid() UpdateLogDescriptorRequestPathSelectorCasConditionalStateMetadataUuid {
	return UpdateLogDescriptorRequestPathSelectorCasConditionalStateMetadataUuid{}
}

func (UpdateLogDescriptorRequestPathSelectorCasConditionalStateMetadata) Tags() UpdateLogDescriptorRequestPathSelectorCasConditionalStateMetadataTags {
	return UpdateLogDescriptorRequestPathSelectorCasConditionalStateMetadataTags{}
}

func (UpdateLogDescriptorRequestPathSelectorCasConditionalStateMetadata) Labels() UpdateLogDescriptorRequestPathSelectorCasConditionalStateMetadataLabels {
	return UpdateLogDescriptorRequestPathSelectorCasConditionalStateMetadataLabels{}
}

func (UpdateLogDescriptorRequestPathSelectorCasConditionalStateMetadata) Annotations() UpdateLogDescriptorRequestPathSelectorCasConditionalStateMetadataAnnotations {
	return UpdateLogDescriptorRequestPathSelectorCasConditionalStateMetadataAnnotations{}
}

func (UpdateLogDescriptorRequestPathSelectorCasConditionalStateMetadata) Generation() UpdateLogDescriptorRequestPathSelectorCasConditionalStateMetadataGeneration {
	return UpdateLogDescriptorRequestPathSelectorCasConditionalStateMetadataGeneration{}
}

func (UpdateLogDescriptorRequestPathSelectorCasConditionalStateMetadata) ResourceVersion() UpdateLogDescriptorRequestPathSelectorCasConditionalStateMetadataResourceVersion {
	return UpdateLogDescriptorRequestPathSelectorCasConditionalStateMetadataResourceVersion{}
}

func (UpdateLogDescriptorRequestPathSelectorCasConditionalStateMetadata) OwnerReferences() UpdateLogDescriptorRequestPathSelectorCasConditionalStateMetadataOwnerReferences {
	return UpdateLogDescriptorRequestPathSelectorCasConditionalStateMetadataOwnerReferences{}
}

func (UpdateLogDescriptorRequestPathSelectorCasConditionalStateMetadata) Shards() UpdateLogDescriptorRequestPathSelectorCasConditionalStateMetadataShards {
	return UpdateLogDescriptorRequestPathSelectorCasConditionalStateMetadataShards{}
}

func (UpdateLogDescriptorRequestPathSelectorCasConditionalStateMetadata) Syncing() UpdateLogDescriptorRequestPathSelectorCasConditionalStateMetadataSyncing {
	return UpdateLogDescriptorRequestPathSelectorCasConditionalStateMetadataSyncing{}
}

type UpdateLogDescriptorRequestPathSelectorCasConditionalStateMetadataCreateTime struct{}

func (UpdateLogDescriptorRequestPathSelectorCasConditionalStateMetadataCreateTime) FieldPath() *UpdateLogDescriptorRequest_FieldSubPath {
	return &UpdateLogDescriptorRequest_FieldSubPath{
		selector: UpdateLogDescriptorRequest_FieldPathSelectorCas,
		subPath:  NewUpdateLogDescriptorRequestCASFieldPathBuilder().ConditionalState().Metadata().CreateTime().FieldPath(),
	}
}

func (s UpdateLogDescriptorRequestPathSelectorCasConditionalStateMetadataCreateTime) WithValue(value *timestamp.Timestamp) *UpdateLogDescriptorRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateLogDescriptorRequest_FieldSubPathValue)
}

func (s UpdateLogDescriptorRequestPathSelectorCasConditionalStateMetadataCreateTime) WithArrayOfValues(values []*timestamp.Timestamp) *UpdateLogDescriptorRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateLogDescriptorRequest_FieldSubPathArrayOfValues)
}

type UpdateLogDescriptorRequestPathSelectorCasConditionalStateMetadataUpdateTime struct{}

func (UpdateLogDescriptorRequestPathSelectorCasConditionalStateMetadataUpdateTime) FieldPath() *UpdateLogDescriptorRequest_FieldSubPath {
	return &UpdateLogDescriptorRequest_FieldSubPath{
		selector: UpdateLogDescriptorRequest_FieldPathSelectorCas,
		subPath:  NewUpdateLogDescriptorRequestCASFieldPathBuilder().ConditionalState().Metadata().UpdateTime().FieldPath(),
	}
}

func (s UpdateLogDescriptorRequestPathSelectorCasConditionalStateMetadataUpdateTime) WithValue(value *timestamp.Timestamp) *UpdateLogDescriptorRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateLogDescriptorRequest_FieldSubPathValue)
}

func (s UpdateLogDescriptorRequestPathSelectorCasConditionalStateMetadataUpdateTime) WithArrayOfValues(values []*timestamp.Timestamp) *UpdateLogDescriptorRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateLogDescriptorRequest_FieldSubPathArrayOfValues)
}

type UpdateLogDescriptorRequestPathSelectorCasConditionalStateMetadataUuid struct{}

func (UpdateLogDescriptorRequestPathSelectorCasConditionalStateMetadataUuid) FieldPath() *UpdateLogDescriptorRequest_FieldSubPath {
	return &UpdateLogDescriptorRequest_FieldSubPath{
		selector: UpdateLogDescriptorRequest_FieldPathSelectorCas,
		subPath:  NewUpdateLogDescriptorRequestCASFieldPathBuilder().ConditionalState().Metadata().Uuid().FieldPath(),
	}
}

func (s UpdateLogDescriptorRequestPathSelectorCasConditionalStateMetadataUuid) WithValue(value string) *UpdateLogDescriptorRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateLogDescriptorRequest_FieldSubPathValue)
}

func (s UpdateLogDescriptorRequestPathSelectorCasConditionalStateMetadataUuid) WithArrayOfValues(values []string) *UpdateLogDescriptorRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateLogDescriptorRequest_FieldSubPathArrayOfValues)
}

type UpdateLogDescriptorRequestPathSelectorCasConditionalStateMetadataTags struct{}

func (UpdateLogDescriptorRequestPathSelectorCasConditionalStateMetadataTags) FieldPath() *UpdateLogDescriptorRequest_FieldSubPath {
	return &UpdateLogDescriptorRequest_FieldSubPath{
		selector: UpdateLogDescriptorRequest_FieldPathSelectorCas,
		subPath:  NewUpdateLogDescriptorRequestCASFieldPathBuilder().ConditionalState().Metadata().Tags().FieldPath(),
	}
}

func (s UpdateLogDescriptorRequestPathSelectorCasConditionalStateMetadataTags) WithValue(value []string) *UpdateLogDescriptorRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateLogDescriptorRequest_FieldSubPathValue)
}

func (s UpdateLogDescriptorRequestPathSelectorCasConditionalStateMetadataTags) WithArrayOfValues(values [][]string) *UpdateLogDescriptorRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateLogDescriptorRequest_FieldSubPathArrayOfValues)
}

func (s UpdateLogDescriptorRequestPathSelectorCasConditionalStateMetadataTags) WithItemValue(value string) *UpdateLogDescriptorRequest_FieldSubPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*UpdateLogDescriptorRequest_FieldSubPathArrayItemValue)
}

type UpdateLogDescriptorRequestPathSelectorCasConditionalStateMetadataLabels struct{}

func (UpdateLogDescriptorRequestPathSelectorCasConditionalStateMetadataLabels) FieldPath() *UpdateLogDescriptorRequest_FieldSubPath {
	return &UpdateLogDescriptorRequest_FieldSubPath{
		selector: UpdateLogDescriptorRequest_FieldPathSelectorCas,
		subPath:  NewUpdateLogDescriptorRequestCASFieldPathBuilder().ConditionalState().Metadata().Labels().FieldPath(),
	}
}

func (s UpdateLogDescriptorRequestPathSelectorCasConditionalStateMetadataLabels) WithValue(value map[string]string) *UpdateLogDescriptorRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateLogDescriptorRequest_FieldSubPathValue)
}

func (s UpdateLogDescriptorRequestPathSelectorCasConditionalStateMetadataLabels) WithArrayOfValues(values []map[string]string) *UpdateLogDescriptorRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateLogDescriptorRequest_FieldSubPathArrayOfValues)
}

func (UpdateLogDescriptorRequestPathSelectorCasConditionalStateMetadataLabels) WithKey(key string) UpdateLogDescriptorRequestMapPathSelectorCasConditionalStateMetadataLabels {
	return UpdateLogDescriptorRequestMapPathSelectorCasConditionalStateMetadataLabels{key: key}
}

type UpdateLogDescriptorRequestMapPathSelectorCasConditionalStateMetadataLabels struct {
	key string
}

func (s UpdateLogDescriptorRequestMapPathSelectorCasConditionalStateMetadataLabels) FieldPath() *UpdateLogDescriptorRequest_FieldSubPath {
	return &UpdateLogDescriptorRequest_FieldSubPath{
		selector: UpdateLogDescriptorRequest_FieldPathSelectorCas,
		subPath:  NewUpdateLogDescriptorRequestCASFieldPathBuilder().ConditionalState().Metadata().Labels().WithKey(s.key).FieldPath(),
	}
}

func (s UpdateLogDescriptorRequestMapPathSelectorCasConditionalStateMetadataLabels) WithValue(value string) *UpdateLogDescriptorRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateLogDescriptorRequest_FieldSubPathValue)
}

func (s UpdateLogDescriptorRequestMapPathSelectorCasConditionalStateMetadataLabels) WithArrayOfValues(values []string) *UpdateLogDescriptorRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateLogDescriptorRequest_FieldSubPathArrayOfValues)
}

type UpdateLogDescriptorRequestPathSelectorCasConditionalStateMetadataAnnotations struct{}

func (UpdateLogDescriptorRequestPathSelectorCasConditionalStateMetadataAnnotations) FieldPath() *UpdateLogDescriptorRequest_FieldSubPath {
	return &UpdateLogDescriptorRequest_FieldSubPath{
		selector: UpdateLogDescriptorRequest_FieldPathSelectorCas,
		subPath:  NewUpdateLogDescriptorRequestCASFieldPathBuilder().ConditionalState().Metadata().Annotations().FieldPath(),
	}
}

func (s UpdateLogDescriptorRequestPathSelectorCasConditionalStateMetadataAnnotations) WithValue(value map[string]string) *UpdateLogDescriptorRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateLogDescriptorRequest_FieldSubPathValue)
}

func (s UpdateLogDescriptorRequestPathSelectorCasConditionalStateMetadataAnnotations) WithArrayOfValues(values []map[string]string) *UpdateLogDescriptorRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateLogDescriptorRequest_FieldSubPathArrayOfValues)
}

func (UpdateLogDescriptorRequestPathSelectorCasConditionalStateMetadataAnnotations) WithKey(key string) UpdateLogDescriptorRequestMapPathSelectorCasConditionalStateMetadataAnnotations {
	return UpdateLogDescriptorRequestMapPathSelectorCasConditionalStateMetadataAnnotations{key: key}
}

type UpdateLogDescriptorRequestMapPathSelectorCasConditionalStateMetadataAnnotations struct {
	key string
}

func (s UpdateLogDescriptorRequestMapPathSelectorCasConditionalStateMetadataAnnotations) FieldPath() *UpdateLogDescriptorRequest_FieldSubPath {
	return &UpdateLogDescriptorRequest_FieldSubPath{
		selector: UpdateLogDescriptorRequest_FieldPathSelectorCas,
		subPath:  NewUpdateLogDescriptorRequestCASFieldPathBuilder().ConditionalState().Metadata().Annotations().WithKey(s.key).FieldPath(),
	}
}

func (s UpdateLogDescriptorRequestMapPathSelectorCasConditionalStateMetadataAnnotations) WithValue(value string) *UpdateLogDescriptorRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateLogDescriptorRequest_FieldSubPathValue)
}

func (s UpdateLogDescriptorRequestMapPathSelectorCasConditionalStateMetadataAnnotations) WithArrayOfValues(values []string) *UpdateLogDescriptorRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateLogDescriptorRequest_FieldSubPathArrayOfValues)
}

type UpdateLogDescriptorRequestPathSelectorCasConditionalStateMetadataGeneration struct{}

func (UpdateLogDescriptorRequestPathSelectorCasConditionalStateMetadataGeneration) FieldPath() *UpdateLogDescriptorRequest_FieldSubPath {
	return &UpdateLogDescriptorRequest_FieldSubPath{
		selector: UpdateLogDescriptorRequest_FieldPathSelectorCas,
		subPath:  NewUpdateLogDescriptorRequestCASFieldPathBuilder().ConditionalState().Metadata().Generation().FieldPath(),
	}
}

func (s UpdateLogDescriptorRequestPathSelectorCasConditionalStateMetadataGeneration) WithValue(value int64) *UpdateLogDescriptorRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateLogDescriptorRequest_FieldSubPathValue)
}

func (s UpdateLogDescriptorRequestPathSelectorCasConditionalStateMetadataGeneration) WithArrayOfValues(values []int64) *UpdateLogDescriptorRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateLogDescriptorRequest_FieldSubPathArrayOfValues)
}

type UpdateLogDescriptorRequestPathSelectorCasConditionalStateMetadataResourceVersion struct{}

func (UpdateLogDescriptorRequestPathSelectorCasConditionalStateMetadataResourceVersion) FieldPath() *UpdateLogDescriptorRequest_FieldSubPath {
	return &UpdateLogDescriptorRequest_FieldSubPath{
		selector: UpdateLogDescriptorRequest_FieldPathSelectorCas,
		subPath:  NewUpdateLogDescriptorRequestCASFieldPathBuilder().ConditionalState().Metadata().ResourceVersion().FieldPath(),
	}
}

func (s UpdateLogDescriptorRequestPathSelectorCasConditionalStateMetadataResourceVersion) WithValue(value string) *UpdateLogDescriptorRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateLogDescriptorRequest_FieldSubPathValue)
}

func (s UpdateLogDescriptorRequestPathSelectorCasConditionalStateMetadataResourceVersion) WithArrayOfValues(values []string) *UpdateLogDescriptorRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateLogDescriptorRequest_FieldSubPathArrayOfValues)
}

type UpdateLogDescriptorRequestPathSelectorCasConditionalStateMetadataOwnerReferences struct{}

func (UpdateLogDescriptorRequestPathSelectorCasConditionalStateMetadataOwnerReferences) FieldPath() *UpdateLogDescriptorRequest_FieldSubPath {
	return &UpdateLogDescriptorRequest_FieldSubPath{
		selector: UpdateLogDescriptorRequest_FieldPathSelectorCas,
		subPath:  NewUpdateLogDescriptorRequestCASFieldPathBuilder().ConditionalState().Metadata().OwnerReferences().FieldPath(),
	}
}

func (s UpdateLogDescriptorRequestPathSelectorCasConditionalStateMetadataOwnerReferences) WithValue(value []*ntt_meta.OwnerReference) *UpdateLogDescriptorRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateLogDescriptorRequest_FieldSubPathValue)
}

func (s UpdateLogDescriptorRequestPathSelectorCasConditionalStateMetadataOwnerReferences) WithArrayOfValues(values [][]*ntt_meta.OwnerReference) *UpdateLogDescriptorRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateLogDescriptorRequest_FieldSubPathArrayOfValues)
}

func (s UpdateLogDescriptorRequestPathSelectorCasConditionalStateMetadataOwnerReferences) WithItemValue(value *ntt_meta.OwnerReference) *UpdateLogDescriptorRequest_FieldSubPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*UpdateLogDescriptorRequest_FieldSubPathArrayItemValue)
}

func (UpdateLogDescriptorRequestPathSelectorCasConditionalStateMetadataOwnerReferences) ApiVersion() UpdateLogDescriptorRequestPathSelectorCasConditionalStateMetadataOwnerReferencesApiVersion {
	return UpdateLogDescriptorRequestPathSelectorCasConditionalStateMetadataOwnerReferencesApiVersion{}
}

func (UpdateLogDescriptorRequestPathSelectorCasConditionalStateMetadataOwnerReferences) Kind() UpdateLogDescriptorRequestPathSelectorCasConditionalStateMetadataOwnerReferencesKind {
	return UpdateLogDescriptorRequestPathSelectorCasConditionalStateMetadataOwnerReferencesKind{}
}

func (UpdateLogDescriptorRequestPathSelectorCasConditionalStateMetadataOwnerReferences) Name() UpdateLogDescriptorRequestPathSelectorCasConditionalStateMetadataOwnerReferencesName {
	return UpdateLogDescriptorRequestPathSelectorCasConditionalStateMetadataOwnerReferencesName{}
}

func (UpdateLogDescriptorRequestPathSelectorCasConditionalStateMetadataOwnerReferences) Uid() UpdateLogDescriptorRequestPathSelectorCasConditionalStateMetadataOwnerReferencesUid {
	return UpdateLogDescriptorRequestPathSelectorCasConditionalStateMetadataOwnerReferencesUid{}
}

func (UpdateLogDescriptorRequestPathSelectorCasConditionalStateMetadataOwnerReferences) Controller() UpdateLogDescriptorRequestPathSelectorCasConditionalStateMetadataOwnerReferencesController {
	return UpdateLogDescriptorRequestPathSelectorCasConditionalStateMetadataOwnerReferencesController{}
}

func (UpdateLogDescriptorRequestPathSelectorCasConditionalStateMetadataOwnerReferences) BlockOwnerDeletion() UpdateLogDescriptorRequestPathSelectorCasConditionalStateMetadataOwnerReferencesBlockOwnerDeletion {
	return UpdateLogDescriptorRequestPathSelectorCasConditionalStateMetadataOwnerReferencesBlockOwnerDeletion{}
}

type UpdateLogDescriptorRequestPathSelectorCasConditionalStateMetadataOwnerReferencesApiVersion struct{}

func (UpdateLogDescriptorRequestPathSelectorCasConditionalStateMetadataOwnerReferencesApiVersion) FieldPath() *UpdateLogDescriptorRequest_FieldSubPath {
	return &UpdateLogDescriptorRequest_FieldSubPath{
		selector: UpdateLogDescriptorRequest_FieldPathSelectorCas,
		subPath:  NewUpdateLogDescriptorRequestCASFieldPathBuilder().ConditionalState().Metadata().OwnerReferences().ApiVersion().FieldPath(),
	}
}

func (s UpdateLogDescriptorRequestPathSelectorCasConditionalStateMetadataOwnerReferencesApiVersion) WithValue(value string) *UpdateLogDescriptorRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateLogDescriptorRequest_FieldSubPathValue)
}

func (s UpdateLogDescriptorRequestPathSelectorCasConditionalStateMetadataOwnerReferencesApiVersion) WithArrayOfValues(values []string) *UpdateLogDescriptorRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateLogDescriptorRequest_FieldSubPathArrayOfValues)
}

type UpdateLogDescriptorRequestPathSelectorCasConditionalStateMetadataOwnerReferencesKind struct{}

func (UpdateLogDescriptorRequestPathSelectorCasConditionalStateMetadataOwnerReferencesKind) FieldPath() *UpdateLogDescriptorRequest_FieldSubPath {
	return &UpdateLogDescriptorRequest_FieldSubPath{
		selector: UpdateLogDescriptorRequest_FieldPathSelectorCas,
		subPath:  NewUpdateLogDescriptorRequestCASFieldPathBuilder().ConditionalState().Metadata().OwnerReferences().Kind().FieldPath(),
	}
}

func (s UpdateLogDescriptorRequestPathSelectorCasConditionalStateMetadataOwnerReferencesKind) WithValue(value string) *UpdateLogDescriptorRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateLogDescriptorRequest_FieldSubPathValue)
}

func (s UpdateLogDescriptorRequestPathSelectorCasConditionalStateMetadataOwnerReferencesKind) WithArrayOfValues(values []string) *UpdateLogDescriptorRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateLogDescriptorRequest_FieldSubPathArrayOfValues)
}

type UpdateLogDescriptorRequestPathSelectorCasConditionalStateMetadataOwnerReferencesName struct{}

func (UpdateLogDescriptorRequestPathSelectorCasConditionalStateMetadataOwnerReferencesName) FieldPath() *UpdateLogDescriptorRequest_FieldSubPath {
	return &UpdateLogDescriptorRequest_FieldSubPath{
		selector: UpdateLogDescriptorRequest_FieldPathSelectorCas,
		subPath:  NewUpdateLogDescriptorRequestCASFieldPathBuilder().ConditionalState().Metadata().OwnerReferences().Name().FieldPath(),
	}
}

func (s UpdateLogDescriptorRequestPathSelectorCasConditionalStateMetadataOwnerReferencesName) WithValue(value string) *UpdateLogDescriptorRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateLogDescriptorRequest_FieldSubPathValue)
}

func (s UpdateLogDescriptorRequestPathSelectorCasConditionalStateMetadataOwnerReferencesName) WithArrayOfValues(values []string) *UpdateLogDescriptorRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateLogDescriptorRequest_FieldSubPathArrayOfValues)
}

type UpdateLogDescriptorRequestPathSelectorCasConditionalStateMetadataOwnerReferencesUid struct{}

func (UpdateLogDescriptorRequestPathSelectorCasConditionalStateMetadataOwnerReferencesUid) FieldPath() *UpdateLogDescriptorRequest_FieldSubPath {
	return &UpdateLogDescriptorRequest_FieldSubPath{
		selector: UpdateLogDescriptorRequest_FieldPathSelectorCas,
		subPath:  NewUpdateLogDescriptorRequestCASFieldPathBuilder().ConditionalState().Metadata().OwnerReferences().Uid().FieldPath(),
	}
}

func (s UpdateLogDescriptorRequestPathSelectorCasConditionalStateMetadataOwnerReferencesUid) WithValue(value string) *UpdateLogDescriptorRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateLogDescriptorRequest_FieldSubPathValue)
}

func (s UpdateLogDescriptorRequestPathSelectorCasConditionalStateMetadataOwnerReferencesUid) WithArrayOfValues(values []string) *UpdateLogDescriptorRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateLogDescriptorRequest_FieldSubPathArrayOfValues)
}

type UpdateLogDescriptorRequestPathSelectorCasConditionalStateMetadataOwnerReferencesController struct{}

func (UpdateLogDescriptorRequestPathSelectorCasConditionalStateMetadataOwnerReferencesController) FieldPath() *UpdateLogDescriptorRequest_FieldSubPath {
	return &UpdateLogDescriptorRequest_FieldSubPath{
		selector: UpdateLogDescriptorRequest_FieldPathSelectorCas,
		subPath:  NewUpdateLogDescriptorRequestCASFieldPathBuilder().ConditionalState().Metadata().OwnerReferences().Controller().FieldPath(),
	}
}

func (s UpdateLogDescriptorRequestPathSelectorCasConditionalStateMetadataOwnerReferencesController) WithValue(value bool) *UpdateLogDescriptorRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateLogDescriptorRequest_FieldSubPathValue)
}

func (s UpdateLogDescriptorRequestPathSelectorCasConditionalStateMetadataOwnerReferencesController) WithArrayOfValues(values []bool) *UpdateLogDescriptorRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateLogDescriptorRequest_FieldSubPathArrayOfValues)
}

type UpdateLogDescriptorRequestPathSelectorCasConditionalStateMetadataOwnerReferencesBlockOwnerDeletion struct{}

func (UpdateLogDescriptorRequestPathSelectorCasConditionalStateMetadataOwnerReferencesBlockOwnerDeletion) FieldPath() *UpdateLogDescriptorRequest_FieldSubPath {
	return &UpdateLogDescriptorRequest_FieldSubPath{
		selector: UpdateLogDescriptorRequest_FieldPathSelectorCas,
		subPath:  NewUpdateLogDescriptorRequestCASFieldPathBuilder().ConditionalState().Metadata().OwnerReferences().BlockOwnerDeletion().FieldPath(),
	}
}

func (s UpdateLogDescriptorRequestPathSelectorCasConditionalStateMetadataOwnerReferencesBlockOwnerDeletion) WithValue(value bool) *UpdateLogDescriptorRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateLogDescriptorRequest_FieldSubPathValue)
}

func (s UpdateLogDescriptorRequestPathSelectorCasConditionalStateMetadataOwnerReferencesBlockOwnerDeletion) WithArrayOfValues(values []bool) *UpdateLogDescriptorRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateLogDescriptorRequest_FieldSubPathArrayOfValues)
}

type UpdateLogDescriptorRequestPathSelectorCasConditionalStateMetadataShards struct{}

func (UpdateLogDescriptorRequestPathSelectorCasConditionalStateMetadataShards) FieldPath() *UpdateLogDescriptorRequest_FieldSubPath {
	return &UpdateLogDescriptorRequest_FieldSubPath{
		selector: UpdateLogDescriptorRequest_FieldPathSelectorCas,
		subPath:  NewUpdateLogDescriptorRequestCASFieldPathBuilder().ConditionalState().Metadata().Shards().FieldPath(),
	}
}

func (s UpdateLogDescriptorRequestPathSelectorCasConditionalStateMetadataShards) WithValue(value map[string]int64) *UpdateLogDescriptorRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateLogDescriptorRequest_FieldSubPathValue)
}

func (s UpdateLogDescriptorRequestPathSelectorCasConditionalStateMetadataShards) WithArrayOfValues(values []map[string]int64) *UpdateLogDescriptorRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateLogDescriptorRequest_FieldSubPathArrayOfValues)
}

func (UpdateLogDescriptorRequestPathSelectorCasConditionalStateMetadataShards) WithKey(key string) UpdateLogDescriptorRequestMapPathSelectorCasConditionalStateMetadataShards {
	return UpdateLogDescriptorRequestMapPathSelectorCasConditionalStateMetadataShards{key: key}
}

type UpdateLogDescriptorRequestMapPathSelectorCasConditionalStateMetadataShards struct {
	key string
}

func (s UpdateLogDescriptorRequestMapPathSelectorCasConditionalStateMetadataShards) FieldPath() *UpdateLogDescriptorRequest_FieldSubPath {
	return &UpdateLogDescriptorRequest_FieldSubPath{
		selector: UpdateLogDescriptorRequest_FieldPathSelectorCas,
		subPath:  NewUpdateLogDescriptorRequestCASFieldPathBuilder().ConditionalState().Metadata().Shards().WithKey(s.key).FieldPath(),
	}
}

func (s UpdateLogDescriptorRequestMapPathSelectorCasConditionalStateMetadataShards) WithValue(value int64) *UpdateLogDescriptorRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateLogDescriptorRequest_FieldSubPathValue)
}

func (s UpdateLogDescriptorRequestMapPathSelectorCasConditionalStateMetadataShards) WithArrayOfValues(values []int64) *UpdateLogDescriptorRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateLogDescriptorRequest_FieldSubPathArrayOfValues)
}

type UpdateLogDescriptorRequestPathSelectorCasConditionalStateMetadataSyncing struct{}

func (UpdateLogDescriptorRequestPathSelectorCasConditionalStateMetadataSyncing) FieldPath() *UpdateLogDescriptorRequest_FieldSubPath {
	return &UpdateLogDescriptorRequest_FieldSubPath{
		selector: UpdateLogDescriptorRequest_FieldPathSelectorCas,
		subPath:  NewUpdateLogDescriptorRequestCASFieldPathBuilder().ConditionalState().Metadata().Syncing().FieldPath(),
	}
}

func (s UpdateLogDescriptorRequestPathSelectorCasConditionalStateMetadataSyncing) WithValue(value *ntt_meta.SyncingMeta) *UpdateLogDescriptorRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateLogDescriptorRequest_FieldSubPathValue)
}

func (s UpdateLogDescriptorRequestPathSelectorCasConditionalStateMetadataSyncing) WithArrayOfValues(values []*ntt_meta.SyncingMeta) *UpdateLogDescriptorRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateLogDescriptorRequest_FieldSubPathArrayOfValues)
}

func (UpdateLogDescriptorRequestPathSelectorCasConditionalStateMetadataSyncing) OwningRegion() UpdateLogDescriptorRequestPathSelectorCasConditionalStateMetadataSyncingOwningRegion {
	return UpdateLogDescriptorRequestPathSelectorCasConditionalStateMetadataSyncingOwningRegion{}
}

func (UpdateLogDescriptorRequestPathSelectorCasConditionalStateMetadataSyncing) Regions() UpdateLogDescriptorRequestPathSelectorCasConditionalStateMetadataSyncingRegions {
	return UpdateLogDescriptorRequestPathSelectorCasConditionalStateMetadataSyncingRegions{}
}

type UpdateLogDescriptorRequestPathSelectorCasConditionalStateMetadataSyncingOwningRegion struct{}

func (UpdateLogDescriptorRequestPathSelectorCasConditionalStateMetadataSyncingOwningRegion) FieldPath() *UpdateLogDescriptorRequest_FieldSubPath {
	return &UpdateLogDescriptorRequest_FieldSubPath{
		selector: UpdateLogDescriptorRequest_FieldPathSelectorCas,
		subPath:  NewUpdateLogDescriptorRequestCASFieldPathBuilder().ConditionalState().Metadata().Syncing().OwningRegion().FieldPath(),
	}
}

func (s UpdateLogDescriptorRequestPathSelectorCasConditionalStateMetadataSyncingOwningRegion) WithValue(value string) *UpdateLogDescriptorRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateLogDescriptorRequest_FieldSubPathValue)
}

func (s UpdateLogDescriptorRequestPathSelectorCasConditionalStateMetadataSyncingOwningRegion) WithArrayOfValues(values []string) *UpdateLogDescriptorRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateLogDescriptorRequest_FieldSubPathArrayOfValues)
}

type UpdateLogDescriptorRequestPathSelectorCasConditionalStateMetadataSyncingRegions struct{}

func (UpdateLogDescriptorRequestPathSelectorCasConditionalStateMetadataSyncingRegions) FieldPath() *UpdateLogDescriptorRequest_FieldSubPath {
	return &UpdateLogDescriptorRequest_FieldSubPath{
		selector: UpdateLogDescriptorRequest_FieldPathSelectorCas,
		subPath:  NewUpdateLogDescriptorRequestCASFieldPathBuilder().ConditionalState().Metadata().Syncing().Regions().FieldPath(),
	}
}

func (s UpdateLogDescriptorRequestPathSelectorCasConditionalStateMetadataSyncingRegions) WithValue(value []string) *UpdateLogDescriptorRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateLogDescriptorRequest_FieldSubPathValue)
}

func (s UpdateLogDescriptorRequestPathSelectorCasConditionalStateMetadataSyncingRegions) WithArrayOfValues(values [][]string) *UpdateLogDescriptorRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateLogDescriptorRequest_FieldSubPathArrayOfValues)
}

func (s UpdateLogDescriptorRequestPathSelectorCasConditionalStateMetadataSyncingRegions) WithItemValue(value string) *UpdateLogDescriptorRequest_FieldSubPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*UpdateLogDescriptorRequest_FieldSubPathArrayItemValue)
}

type UpdateLogDescriptorRequestPathSelectorCasFieldMask struct{}

func (UpdateLogDescriptorRequestPathSelectorCasFieldMask) FieldPath() *UpdateLogDescriptorRequest_FieldSubPath {
	return &UpdateLogDescriptorRequest_FieldSubPath{
		selector: UpdateLogDescriptorRequest_FieldPathSelectorCas,
		subPath:  NewUpdateLogDescriptorRequestCASFieldPathBuilder().FieldMask().FieldPath(),
	}
}

func (s UpdateLogDescriptorRequestPathSelectorCasFieldMask) WithValue(value *log_descriptor.LogDescriptor_FieldMask) *UpdateLogDescriptorRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateLogDescriptorRequest_FieldSubPathValue)
}

func (s UpdateLogDescriptorRequestPathSelectorCasFieldMask) WithArrayOfValues(values []*log_descriptor.LogDescriptor_FieldMask) *UpdateLogDescriptorRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateLogDescriptorRequest_FieldSubPathArrayOfValues)
}

type UpdateLogDescriptorRequestCASFieldPathBuilder struct{}

func NewUpdateLogDescriptorRequestCASFieldPathBuilder() UpdateLogDescriptorRequestCASFieldPathBuilder {
	return UpdateLogDescriptorRequestCASFieldPathBuilder{}
}
func (UpdateLogDescriptorRequestCASFieldPathBuilder) ConditionalState() UpdateLogDescriptorRequest_CASPathSelectorConditionalState {
	return UpdateLogDescriptorRequest_CASPathSelectorConditionalState{}
}
func (UpdateLogDescriptorRequestCASFieldPathBuilder) FieldMask() UpdateLogDescriptorRequest_CASPathSelectorFieldMask {
	return UpdateLogDescriptorRequest_CASPathSelectorFieldMask{}
}

type UpdateLogDescriptorRequest_CASPathSelectorConditionalState struct{}

func (UpdateLogDescriptorRequest_CASPathSelectorConditionalState) FieldPath() *UpdateLogDescriptorRequestCAS_FieldTerminalPath {
	return &UpdateLogDescriptorRequestCAS_FieldTerminalPath{selector: UpdateLogDescriptorRequestCAS_FieldPathSelectorConditionalState}
}

func (s UpdateLogDescriptorRequest_CASPathSelectorConditionalState) WithValue(value *log_descriptor.LogDescriptor) *UpdateLogDescriptorRequestCAS_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateLogDescriptorRequestCAS_FieldTerminalPathValue)
}

func (s UpdateLogDescriptorRequest_CASPathSelectorConditionalState) WithArrayOfValues(values []*log_descriptor.LogDescriptor) *UpdateLogDescriptorRequestCAS_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateLogDescriptorRequestCAS_FieldTerminalPathArrayOfValues)
}

func (UpdateLogDescriptorRequest_CASPathSelectorConditionalState) WithSubPath(subPath log_descriptor.LogDescriptor_FieldPath) *UpdateLogDescriptorRequestCAS_FieldSubPath {
	return &UpdateLogDescriptorRequestCAS_FieldSubPath{selector: UpdateLogDescriptorRequestCAS_FieldPathSelectorConditionalState, subPath: subPath}
}

func (s UpdateLogDescriptorRequest_CASPathSelectorConditionalState) WithSubValue(subPathValue log_descriptor.LogDescriptor_FieldPathValue) *UpdateLogDescriptorRequestCAS_FieldSubPathValue {
	return &UpdateLogDescriptorRequestCAS_FieldSubPathValue{UpdateLogDescriptorRequestCAS_FieldPath: s.WithSubPath(subPathValue), subPathValue: subPathValue}
}

func (s UpdateLogDescriptorRequest_CASPathSelectorConditionalState) WithSubArrayOfValues(subPathArrayOfValues log_descriptor.LogDescriptor_FieldPathArrayOfValues) *UpdateLogDescriptorRequestCAS_FieldSubPathArrayOfValues {
	return &UpdateLogDescriptorRequestCAS_FieldSubPathArrayOfValues{UpdateLogDescriptorRequestCAS_FieldPath: s.WithSubPath(subPathArrayOfValues), subPathArrayOfValues: subPathArrayOfValues}
}

func (s UpdateLogDescriptorRequest_CASPathSelectorConditionalState) WithSubArrayItemValue(subPathArrayItemValue log_descriptor.LogDescriptor_FieldPathArrayItemValue) *UpdateLogDescriptorRequestCAS_FieldSubPathArrayItemValue {
	return &UpdateLogDescriptorRequestCAS_FieldSubPathArrayItemValue{UpdateLogDescriptorRequestCAS_FieldPath: s.WithSubPath(subPathArrayItemValue), subPathItemValue: subPathArrayItemValue}
}

func (UpdateLogDescriptorRequest_CASPathSelectorConditionalState) Name() UpdateLogDescriptorRequest_CASPathSelectorConditionalStateName {
	return UpdateLogDescriptorRequest_CASPathSelectorConditionalStateName{}
}

func (UpdateLogDescriptorRequest_CASPathSelectorConditionalState) DisplayName() UpdateLogDescriptorRequest_CASPathSelectorConditionalStateDisplayName {
	return UpdateLogDescriptorRequest_CASPathSelectorConditionalStateDisplayName{}
}

func (UpdateLogDescriptorRequest_CASPathSelectorConditionalState) Description() UpdateLogDescriptorRequest_CASPathSelectorConditionalStateDescription {
	return UpdateLogDescriptorRequest_CASPathSelectorConditionalStateDescription{}
}

func (UpdateLogDescriptorRequest_CASPathSelectorConditionalState) Labels() UpdateLogDescriptorRequest_CASPathSelectorConditionalStateLabels {
	return UpdateLogDescriptorRequest_CASPathSelectorConditionalStateLabels{}
}

func (UpdateLogDescriptorRequest_CASPathSelectorConditionalState) PromotedLabelKeySets() UpdateLogDescriptorRequest_CASPathSelectorConditionalStatePromotedLabelKeySets {
	return UpdateLogDescriptorRequest_CASPathSelectorConditionalStatePromotedLabelKeySets{}
}

func (UpdateLogDescriptorRequest_CASPathSelectorConditionalState) Metadata() UpdateLogDescriptorRequest_CASPathSelectorConditionalStateMetadata {
	return UpdateLogDescriptorRequest_CASPathSelectorConditionalStateMetadata{}
}

type UpdateLogDescriptorRequest_CASPathSelectorConditionalStateName struct{}

func (UpdateLogDescriptorRequest_CASPathSelectorConditionalStateName) FieldPath() *UpdateLogDescriptorRequestCAS_FieldSubPath {
	return &UpdateLogDescriptorRequestCAS_FieldSubPath{
		selector: UpdateLogDescriptorRequestCAS_FieldPathSelectorConditionalState,
		subPath:  log_descriptor.NewLogDescriptorFieldPathBuilder().Name().FieldPath(),
	}
}

func (s UpdateLogDescriptorRequest_CASPathSelectorConditionalStateName) WithValue(value *log_descriptor.Name) *UpdateLogDescriptorRequestCAS_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateLogDescriptorRequestCAS_FieldSubPathValue)
}

func (s UpdateLogDescriptorRequest_CASPathSelectorConditionalStateName) WithArrayOfValues(values []*log_descriptor.Name) *UpdateLogDescriptorRequestCAS_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateLogDescriptorRequestCAS_FieldSubPathArrayOfValues)
}

type UpdateLogDescriptorRequest_CASPathSelectorConditionalStateDisplayName struct{}

func (UpdateLogDescriptorRequest_CASPathSelectorConditionalStateDisplayName) FieldPath() *UpdateLogDescriptorRequestCAS_FieldSubPath {
	return &UpdateLogDescriptorRequestCAS_FieldSubPath{
		selector: UpdateLogDescriptorRequestCAS_FieldPathSelectorConditionalState,
		subPath:  log_descriptor.NewLogDescriptorFieldPathBuilder().DisplayName().FieldPath(),
	}
}

func (s UpdateLogDescriptorRequest_CASPathSelectorConditionalStateDisplayName) WithValue(value string) *UpdateLogDescriptorRequestCAS_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateLogDescriptorRequestCAS_FieldSubPathValue)
}

func (s UpdateLogDescriptorRequest_CASPathSelectorConditionalStateDisplayName) WithArrayOfValues(values []string) *UpdateLogDescriptorRequestCAS_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateLogDescriptorRequestCAS_FieldSubPathArrayOfValues)
}

type UpdateLogDescriptorRequest_CASPathSelectorConditionalStateDescription struct{}

func (UpdateLogDescriptorRequest_CASPathSelectorConditionalStateDescription) FieldPath() *UpdateLogDescriptorRequestCAS_FieldSubPath {
	return &UpdateLogDescriptorRequestCAS_FieldSubPath{
		selector: UpdateLogDescriptorRequestCAS_FieldPathSelectorConditionalState,
		subPath:  log_descriptor.NewLogDescriptorFieldPathBuilder().Description().FieldPath(),
	}
}

func (s UpdateLogDescriptorRequest_CASPathSelectorConditionalStateDescription) WithValue(value string) *UpdateLogDescriptorRequestCAS_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateLogDescriptorRequestCAS_FieldSubPathValue)
}

func (s UpdateLogDescriptorRequest_CASPathSelectorConditionalStateDescription) WithArrayOfValues(values []string) *UpdateLogDescriptorRequestCAS_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateLogDescriptorRequestCAS_FieldSubPathArrayOfValues)
}

type UpdateLogDescriptorRequest_CASPathSelectorConditionalStateLabels struct{}

func (UpdateLogDescriptorRequest_CASPathSelectorConditionalStateLabels) FieldPath() *UpdateLogDescriptorRequestCAS_FieldSubPath {
	return &UpdateLogDescriptorRequestCAS_FieldSubPath{
		selector: UpdateLogDescriptorRequestCAS_FieldPathSelectorConditionalState,
		subPath:  log_descriptor.NewLogDescriptorFieldPathBuilder().Labels().FieldPath(),
	}
}

func (s UpdateLogDescriptorRequest_CASPathSelectorConditionalStateLabels) WithValue(value []*logging_common.LabelDescriptor) *UpdateLogDescriptorRequestCAS_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateLogDescriptorRequestCAS_FieldSubPathValue)
}

func (s UpdateLogDescriptorRequest_CASPathSelectorConditionalStateLabels) WithArrayOfValues(values [][]*logging_common.LabelDescriptor) *UpdateLogDescriptorRequestCAS_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateLogDescriptorRequestCAS_FieldSubPathArrayOfValues)
}

func (s UpdateLogDescriptorRequest_CASPathSelectorConditionalStateLabels) WithItemValue(value *logging_common.LabelDescriptor) *UpdateLogDescriptorRequestCAS_FieldSubPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*UpdateLogDescriptorRequestCAS_FieldSubPathArrayItemValue)
}

func (UpdateLogDescriptorRequest_CASPathSelectorConditionalStateLabels) Key() UpdateLogDescriptorRequest_CASPathSelectorConditionalStateLabelsKey {
	return UpdateLogDescriptorRequest_CASPathSelectorConditionalStateLabelsKey{}
}

func (UpdateLogDescriptorRequest_CASPathSelectorConditionalStateLabels) Description() UpdateLogDescriptorRequest_CASPathSelectorConditionalStateLabelsDescription {
	return UpdateLogDescriptorRequest_CASPathSelectorConditionalStateLabelsDescription{}
}

type UpdateLogDescriptorRequest_CASPathSelectorConditionalStateLabelsKey struct{}

func (UpdateLogDescriptorRequest_CASPathSelectorConditionalStateLabelsKey) FieldPath() *UpdateLogDescriptorRequestCAS_FieldSubPath {
	return &UpdateLogDescriptorRequestCAS_FieldSubPath{
		selector: UpdateLogDescriptorRequestCAS_FieldPathSelectorConditionalState,
		subPath:  log_descriptor.NewLogDescriptorFieldPathBuilder().Labels().Key().FieldPath(),
	}
}

func (s UpdateLogDescriptorRequest_CASPathSelectorConditionalStateLabelsKey) WithValue(value string) *UpdateLogDescriptorRequestCAS_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateLogDescriptorRequestCAS_FieldSubPathValue)
}

func (s UpdateLogDescriptorRequest_CASPathSelectorConditionalStateLabelsKey) WithArrayOfValues(values []string) *UpdateLogDescriptorRequestCAS_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateLogDescriptorRequestCAS_FieldSubPathArrayOfValues)
}

type UpdateLogDescriptorRequest_CASPathSelectorConditionalStateLabelsDescription struct{}

func (UpdateLogDescriptorRequest_CASPathSelectorConditionalStateLabelsDescription) FieldPath() *UpdateLogDescriptorRequestCAS_FieldSubPath {
	return &UpdateLogDescriptorRequestCAS_FieldSubPath{
		selector: UpdateLogDescriptorRequestCAS_FieldPathSelectorConditionalState,
		subPath:  log_descriptor.NewLogDescriptorFieldPathBuilder().Labels().Description().FieldPath(),
	}
}

func (s UpdateLogDescriptorRequest_CASPathSelectorConditionalStateLabelsDescription) WithValue(value string) *UpdateLogDescriptorRequestCAS_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateLogDescriptorRequestCAS_FieldSubPathValue)
}

func (s UpdateLogDescriptorRequest_CASPathSelectorConditionalStateLabelsDescription) WithArrayOfValues(values []string) *UpdateLogDescriptorRequestCAS_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateLogDescriptorRequestCAS_FieldSubPathArrayOfValues)
}

type UpdateLogDescriptorRequest_CASPathSelectorConditionalStatePromotedLabelKeySets struct{}

func (UpdateLogDescriptorRequest_CASPathSelectorConditionalStatePromotedLabelKeySets) FieldPath() *UpdateLogDescriptorRequestCAS_FieldSubPath {
	return &UpdateLogDescriptorRequestCAS_FieldSubPath{
		selector: UpdateLogDescriptorRequestCAS_FieldPathSelectorConditionalState,
		subPath:  log_descriptor.NewLogDescriptorFieldPathBuilder().PromotedLabelKeySets().FieldPath(),
	}
}

func (s UpdateLogDescriptorRequest_CASPathSelectorConditionalStatePromotedLabelKeySets) WithValue(value []*logging_common.LabelKeySet) *UpdateLogDescriptorRequestCAS_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateLogDescriptorRequestCAS_FieldSubPathValue)
}

func (s UpdateLogDescriptorRequest_CASPathSelectorConditionalStatePromotedLabelKeySets) WithArrayOfValues(values [][]*logging_common.LabelKeySet) *UpdateLogDescriptorRequestCAS_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateLogDescriptorRequestCAS_FieldSubPathArrayOfValues)
}

func (s UpdateLogDescriptorRequest_CASPathSelectorConditionalStatePromotedLabelKeySets) WithItemValue(value *logging_common.LabelKeySet) *UpdateLogDescriptorRequestCAS_FieldSubPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*UpdateLogDescriptorRequestCAS_FieldSubPathArrayItemValue)
}

func (UpdateLogDescriptorRequest_CASPathSelectorConditionalStatePromotedLabelKeySets) LabelKeys() UpdateLogDescriptorRequest_CASPathSelectorConditionalStatePromotedLabelKeySetsLabelKeys {
	return UpdateLogDescriptorRequest_CASPathSelectorConditionalStatePromotedLabelKeySetsLabelKeys{}
}

type UpdateLogDescriptorRequest_CASPathSelectorConditionalStatePromotedLabelKeySetsLabelKeys struct{}

func (UpdateLogDescriptorRequest_CASPathSelectorConditionalStatePromotedLabelKeySetsLabelKeys) FieldPath() *UpdateLogDescriptorRequestCAS_FieldSubPath {
	return &UpdateLogDescriptorRequestCAS_FieldSubPath{
		selector: UpdateLogDescriptorRequestCAS_FieldPathSelectorConditionalState,
		subPath:  log_descriptor.NewLogDescriptorFieldPathBuilder().PromotedLabelKeySets().LabelKeys().FieldPath(),
	}
}

func (s UpdateLogDescriptorRequest_CASPathSelectorConditionalStatePromotedLabelKeySetsLabelKeys) WithValue(value []string) *UpdateLogDescriptorRequestCAS_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateLogDescriptorRequestCAS_FieldSubPathValue)
}

func (s UpdateLogDescriptorRequest_CASPathSelectorConditionalStatePromotedLabelKeySetsLabelKeys) WithArrayOfValues(values [][]string) *UpdateLogDescriptorRequestCAS_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateLogDescriptorRequestCAS_FieldSubPathArrayOfValues)
}

func (s UpdateLogDescriptorRequest_CASPathSelectorConditionalStatePromotedLabelKeySetsLabelKeys) WithItemValue(value string) *UpdateLogDescriptorRequestCAS_FieldSubPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*UpdateLogDescriptorRequestCAS_FieldSubPathArrayItemValue)
}

type UpdateLogDescriptorRequest_CASPathSelectorConditionalStateMetadata struct{}

func (UpdateLogDescriptorRequest_CASPathSelectorConditionalStateMetadata) FieldPath() *UpdateLogDescriptorRequestCAS_FieldSubPath {
	return &UpdateLogDescriptorRequestCAS_FieldSubPath{
		selector: UpdateLogDescriptorRequestCAS_FieldPathSelectorConditionalState,
		subPath:  log_descriptor.NewLogDescriptorFieldPathBuilder().Metadata().FieldPath(),
	}
}

func (s UpdateLogDescriptorRequest_CASPathSelectorConditionalStateMetadata) WithValue(value *ntt_meta.Meta) *UpdateLogDescriptorRequestCAS_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateLogDescriptorRequestCAS_FieldSubPathValue)
}

func (s UpdateLogDescriptorRequest_CASPathSelectorConditionalStateMetadata) WithArrayOfValues(values []*ntt_meta.Meta) *UpdateLogDescriptorRequestCAS_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateLogDescriptorRequestCAS_FieldSubPathArrayOfValues)
}

func (UpdateLogDescriptorRequest_CASPathSelectorConditionalStateMetadata) CreateTime() UpdateLogDescriptorRequest_CASPathSelectorConditionalStateMetadataCreateTime {
	return UpdateLogDescriptorRequest_CASPathSelectorConditionalStateMetadataCreateTime{}
}

func (UpdateLogDescriptorRequest_CASPathSelectorConditionalStateMetadata) UpdateTime() UpdateLogDescriptorRequest_CASPathSelectorConditionalStateMetadataUpdateTime {
	return UpdateLogDescriptorRequest_CASPathSelectorConditionalStateMetadataUpdateTime{}
}

func (UpdateLogDescriptorRequest_CASPathSelectorConditionalStateMetadata) Uuid() UpdateLogDescriptorRequest_CASPathSelectorConditionalStateMetadataUuid {
	return UpdateLogDescriptorRequest_CASPathSelectorConditionalStateMetadataUuid{}
}

func (UpdateLogDescriptorRequest_CASPathSelectorConditionalStateMetadata) Tags() UpdateLogDescriptorRequest_CASPathSelectorConditionalStateMetadataTags {
	return UpdateLogDescriptorRequest_CASPathSelectorConditionalStateMetadataTags{}
}

func (UpdateLogDescriptorRequest_CASPathSelectorConditionalStateMetadata) Labels() UpdateLogDescriptorRequest_CASPathSelectorConditionalStateMetadataLabels {
	return UpdateLogDescriptorRequest_CASPathSelectorConditionalStateMetadataLabels{}
}

func (UpdateLogDescriptorRequest_CASPathSelectorConditionalStateMetadata) Annotations() UpdateLogDescriptorRequest_CASPathSelectorConditionalStateMetadataAnnotations {
	return UpdateLogDescriptorRequest_CASPathSelectorConditionalStateMetadataAnnotations{}
}

func (UpdateLogDescriptorRequest_CASPathSelectorConditionalStateMetadata) Generation() UpdateLogDescriptorRequest_CASPathSelectorConditionalStateMetadataGeneration {
	return UpdateLogDescriptorRequest_CASPathSelectorConditionalStateMetadataGeneration{}
}

func (UpdateLogDescriptorRequest_CASPathSelectorConditionalStateMetadata) ResourceVersion() UpdateLogDescriptorRequest_CASPathSelectorConditionalStateMetadataResourceVersion {
	return UpdateLogDescriptorRequest_CASPathSelectorConditionalStateMetadataResourceVersion{}
}

func (UpdateLogDescriptorRequest_CASPathSelectorConditionalStateMetadata) OwnerReferences() UpdateLogDescriptorRequest_CASPathSelectorConditionalStateMetadataOwnerReferences {
	return UpdateLogDescriptorRequest_CASPathSelectorConditionalStateMetadataOwnerReferences{}
}

func (UpdateLogDescriptorRequest_CASPathSelectorConditionalStateMetadata) Shards() UpdateLogDescriptorRequest_CASPathSelectorConditionalStateMetadataShards {
	return UpdateLogDescriptorRequest_CASPathSelectorConditionalStateMetadataShards{}
}

func (UpdateLogDescriptorRequest_CASPathSelectorConditionalStateMetadata) Syncing() UpdateLogDescriptorRequest_CASPathSelectorConditionalStateMetadataSyncing {
	return UpdateLogDescriptorRequest_CASPathSelectorConditionalStateMetadataSyncing{}
}

type UpdateLogDescriptorRequest_CASPathSelectorConditionalStateMetadataCreateTime struct{}

func (UpdateLogDescriptorRequest_CASPathSelectorConditionalStateMetadataCreateTime) FieldPath() *UpdateLogDescriptorRequestCAS_FieldSubPath {
	return &UpdateLogDescriptorRequestCAS_FieldSubPath{
		selector: UpdateLogDescriptorRequestCAS_FieldPathSelectorConditionalState,
		subPath:  log_descriptor.NewLogDescriptorFieldPathBuilder().Metadata().CreateTime().FieldPath(),
	}
}

func (s UpdateLogDescriptorRequest_CASPathSelectorConditionalStateMetadataCreateTime) WithValue(value *timestamp.Timestamp) *UpdateLogDescriptorRequestCAS_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateLogDescriptorRequestCAS_FieldSubPathValue)
}

func (s UpdateLogDescriptorRequest_CASPathSelectorConditionalStateMetadataCreateTime) WithArrayOfValues(values []*timestamp.Timestamp) *UpdateLogDescriptorRequestCAS_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateLogDescriptorRequestCAS_FieldSubPathArrayOfValues)
}

type UpdateLogDescriptorRequest_CASPathSelectorConditionalStateMetadataUpdateTime struct{}

func (UpdateLogDescriptorRequest_CASPathSelectorConditionalStateMetadataUpdateTime) FieldPath() *UpdateLogDescriptorRequestCAS_FieldSubPath {
	return &UpdateLogDescriptorRequestCAS_FieldSubPath{
		selector: UpdateLogDescriptorRequestCAS_FieldPathSelectorConditionalState,
		subPath:  log_descriptor.NewLogDescriptorFieldPathBuilder().Metadata().UpdateTime().FieldPath(),
	}
}

func (s UpdateLogDescriptorRequest_CASPathSelectorConditionalStateMetadataUpdateTime) WithValue(value *timestamp.Timestamp) *UpdateLogDescriptorRequestCAS_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateLogDescriptorRequestCAS_FieldSubPathValue)
}

func (s UpdateLogDescriptorRequest_CASPathSelectorConditionalStateMetadataUpdateTime) WithArrayOfValues(values []*timestamp.Timestamp) *UpdateLogDescriptorRequestCAS_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateLogDescriptorRequestCAS_FieldSubPathArrayOfValues)
}

type UpdateLogDescriptorRequest_CASPathSelectorConditionalStateMetadataUuid struct{}

func (UpdateLogDescriptorRequest_CASPathSelectorConditionalStateMetadataUuid) FieldPath() *UpdateLogDescriptorRequestCAS_FieldSubPath {
	return &UpdateLogDescriptorRequestCAS_FieldSubPath{
		selector: UpdateLogDescriptorRequestCAS_FieldPathSelectorConditionalState,
		subPath:  log_descriptor.NewLogDescriptorFieldPathBuilder().Metadata().Uuid().FieldPath(),
	}
}

func (s UpdateLogDescriptorRequest_CASPathSelectorConditionalStateMetadataUuid) WithValue(value string) *UpdateLogDescriptorRequestCAS_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateLogDescriptorRequestCAS_FieldSubPathValue)
}

func (s UpdateLogDescriptorRequest_CASPathSelectorConditionalStateMetadataUuid) WithArrayOfValues(values []string) *UpdateLogDescriptorRequestCAS_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateLogDescriptorRequestCAS_FieldSubPathArrayOfValues)
}

type UpdateLogDescriptorRequest_CASPathSelectorConditionalStateMetadataTags struct{}

func (UpdateLogDescriptorRequest_CASPathSelectorConditionalStateMetadataTags) FieldPath() *UpdateLogDescriptorRequestCAS_FieldSubPath {
	return &UpdateLogDescriptorRequestCAS_FieldSubPath{
		selector: UpdateLogDescriptorRequestCAS_FieldPathSelectorConditionalState,
		subPath:  log_descriptor.NewLogDescriptorFieldPathBuilder().Metadata().Tags().FieldPath(),
	}
}

func (s UpdateLogDescriptorRequest_CASPathSelectorConditionalStateMetadataTags) WithValue(value []string) *UpdateLogDescriptorRequestCAS_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateLogDescriptorRequestCAS_FieldSubPathValue)
}

func (s UpdateLogDescriptorRequest_CASPathSelectorConditionalStateMetadataTags) WithArrayOfValues(values [][]string) *UpdateLogDescriptorRequestCAS_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateLogDescriptorRequestCAS_FieldSubPathArrayOfValues)
}

func (s UpdateLogDescriptorRequest_CASPathSelectorConditionalStateMetadataTags) WithItemValue(value string) *UpdateLogDescriptorRequestCAS_FieldSubPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*UpdateLogDescriptorRequestCAS_FieldSubPathArrayItemValue)
}

type UpdateLogDescriptorRequest_CASPathSelectorConditionalStateMetadataLabels struct{}

func (UpdateLogDescriptorRequest_CASPathSelectorConditionalStateMetadataLabels) FieldPath() *UpdateLogDescriptorRequestCAS_FieldSubPath {
	return &UpdateLogDescriptorRequestCAS_FieldSubPath{
		selector: UpdateLogDescriptorRequestCAS_FieldPathSelectorConditionalState,
		subPath:  log_descriptor.NewLogDescriptorFieldPathBuilder().Metadata().Labels().FieldPath(),
	}
}

func (s UpdateLogDescriptorRequest_CASPathSelectorConditionalStateMetadataLabels) WithValue(value map[string]string) *UpdateLogDescriptorRequestCAS_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateLogDescriptorRequestCAS_FieldSubPathValue)
}

func (s UpdateLogDescriptorRequest_CASPathSelectorConditionalStateMetadataLabels) WithArrayOfValues(values []map[string]string) *UpdateLogDescriptorRequestCAS_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateLogDescriptorRequestCAS_FieldSubPathArrayOfValues)
}

func (UpdateLogDescriptorRequest_CASPathSelectorConditionalStateMetadataLabels) WithKey(key string) UpdateLogDescriptorRequest_CASMapPathSelectorConditionalStateMetadataLabels {
	return UpdateLogDescriptorRequest_CASMapPathSelectorConditionalStateMetadataLabels{key: key}
}

type UpdateLogDescriptorRequest_CASMapPathSelectorConditionalStateMetadataLabels struct {
	key string
}

func (s UpdateLogDescriptorRequest_CASMapPathSelectorConditionalStateMetadataLabels) FieldPath() *UpdateLogDescriptorRequestCAS_FieldSubPath {
	return &UpdateLogDescriptorRequestCAS_FieldSubPath{
		selector: UpdateLogDescriptorRequestCAS_FieldPathSelectorConditionalState,
		subPath:  log_descriptor.NewLogDescriptorFieldPathBuilder().Metadata().Labels().WithKey(s.key).FieldPath(),
	}
}

func (s UpdateLogDescriptorRequest_CASMapPathSelectorConditionalStateMetadataLabels) WithValue(value string) *UpdateLogDescriptorRequestCAS_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateLogDescriptorRequestCAS_FieldSubPathValue)
}

func (s UpdateLogDescriptorRequest_CASMapPathSelectorConditionalStateMetadataLabels) WithArrayOfValues(values []string) *UpdateLogDescriptorRequestCAS_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateLogDescriptorRequestCAS_FieldSubPathArrayOfValues)
}

type UpdateLogDescriptorRequest_CASPathSelectorConditionalStateMetadataAnnotations struct{}

func (UpdateLogDescriptorRequest_CASPathSelectorConditionalStateMetadataAnnotations) FieldPath() *UpdateLogDescriptorRequestCAS_FieldSubPath {
	return &UpdateLogDescriptorRequestCAS_FieldSubPath{
		selector: UpdateLogDescriptorRequestCAS_FieldPathSelectorConditionalState,
		subPath:  log_descriptor.NewLogDescriptorFieldPathBuilder().Metadata().Annotations().FieldPath(),
	}
}

func (s UpdateLogDescriptorRequest_CASPathSelectorConditionalStateMetadataAnnotations) WithValue(value map[string]string) *UpdateLogDescriptorRequestCAS_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateLogDescriptorRequestCAS_FieldSubPathValue)
}

func (s UpdateLogDescriptorRequest_CASPathSelectorConditionalStateMetadataAnnotations) WithArrayOfValues(values []map[string]string) *UpdateLogDescriptorRequestCAS_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateLogDescriptorRequestCAS_FieldSubPathArrayOfValues)
}

func (UpdateLogDescriptorRequest_CASPathSelectorConditionalStateMetadataAnnotations) WithKey(key string) UpdateLogDescriptorRequest_CASMapPathSelectorConditionalStateMetadataAnnotations {
	return UpdateLogDescriptorRequest_CASMapPathSelectorConditionalStateMetadataAnnotations{key: key}
}

type UpdateLogDescriptorRequest_CASMapPathSelectorConditionalStateMetadataAnnotations struct {
	key string
}

func (s UpdateLogDescriptorRequest_CASMapPathSelectorConditionalStateMetadataAnnotations) FieldPath() *UpdateLogDescriptorRequestCAS_FieldSubPath {
	return &UpdateLogDescriptorRequestCAS_FieldSubPath{
		selector: UpdateLogDescriptorRequestCAS_FieldPathSelectorConditionalState,
		subPath:  log_descriptor.NewLogDescriptorFieldPathBuilder().Metadata().Annotations().WithKey(s.key).FieldPath(),
	}
}

func (s UpdateLogDescriptorRequest_CASMapPathSelectorConditionalStateMetadataAnnotations) WithValue(value string) *UpdateLogDescriptorRequestCAS_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateLogDescriptorRequestCAS_FieldSubPathValue)
}

func (s UpdateLogDescriptorRequest_CASMapPathSelectorConditionalStateMetadataAnnotations) WithArrayOfValues(values []string) *UpdateLogDescriptorRequestCAS_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateLogDescriptorRequestCAS_FieldSubPathArrayOfValues)
}

type UpdateLogDescriptorRequest_CASPathSelectorConditionalStateMetadataGeneration struct{}

func (UpdateLogDescriptorRequest_CASPathSelectorConditionalStateMetadataGeneration) FieldPath() *UpdateLogDescriptorRequestCAS_FieldSubPath {
	return &UpdateLogDescriptorRequestCAS_FieldSubPath{
		selector: UpdateLogDescriptorRequestCAS_FieldPathSelectorConditionalState,
		subPath:  log_descriptor.NewLogDescriptorFieldPathBuilder().Metadata().Generation().FieldPath(),
	}
}

func (s UpdateLogDescriptorRequest_CASPathSelectorConditionalStateMetadataGeneration) WithValue(value int64) *UpdateLogDescriptorRequestCAS_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateLogDescriptorRequestCAS_FieldSubPathValue)
}

func (s UpdateLogDescriptorRequest_CASPathSelectorConditionalStateMetadataGeneration) WithArrayOfValues(values []int64) *UpdateLogDescriptorRequestCAS_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateLogDescriptorRequestCAS_FieldSubPathArrayOfValues)
}

type UpdateLogDescriptorRequest_CASPathSelectorConditionalStateMetadataResourceVersion struct{}

func (UpdateLogDescriptorRequest_CASPathSelectorConditionalStateMetadataResourceVersion) FieldPath() *UpdateLogDescriptorRequestCAS_FieldSubPath {
	return &UpdateLogDescriptorRequestCAS_FieldSubPath{
		selector: UpdateLogDescriptorRequestCAS_FieldPathSelectorConditionalState,
		subPath:  log_descriptor.NewLogDescriptorFieldPathBuilder().Metadata().ResourceVersion().FieldPath(),
	}
}

func (s UpdateLogDescriptorRequest_CASPathSelectorConditionalStateMetadataResourceVersion) WithValue(value string) *UpdateLogDescriptorRequestCAS_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateLogDescriptorRequestCAS_FieldSubPathValue)
}

func (s UpdateLogDescriptorRequest_CASPathSelectorConditionalStateMetadataResourceVersion) WithArrayOfValues(values []string) *UpdateLogDescriptorRequestCAS_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateLogDescriptorRequestCAS_FieldSubPathArrayOfValues)
}

type UpdateLogDescriptorRequest_CASPathSelectorConditionalStateMetadataOwnerReferences struct{}

func (UpdateLogDescriptorRequest_CASPathSelectorConditionalStateMetadataOwnerReferences) FieldPath() *UpdateLogDescriptorRequestCAS_FieldSubPath {
	return &UpdateLogDescriptorRequestCAS_FieldSubPath{
		selector: UpdateLogDescriptorRequestCAS_FieldPathSelectorConditionalState,
		subPath:  log_descriptor.NewLogDescriptorFieldPathBuilder().Metadata().OwnerReferences().FieldPath(),
	}
}

func (s UpdateLogDescriptorRequest_CASPathSelectorConditionalStateMetadataOwnerReferences) WithValue(value []*ntt_meta.OwnerReference) *UpdateLogDescriptorRequestCAS_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateLogDescriptorRequestCAS_FieldSubPathValue)
}

func (s UpdateLogDescriptorRequest_CASPathSelectorConditionalStateMetadataOwnerReferences) WithArrayOfValues(values [][]*ntt_meta.OwnerReference) *UpdateLogDescriptorRequestCAS_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateLogDescriptorRequestCAS_FieldSubPathArrayOfValues)
}

func (s UpdateLogDescriptorRequest_CASPathSelectorConditionalStateMetadataOwnerReferences) WithItemValue(value *ntt_meta.OwnerReference) *UpdateLogDescriptorRequestCAS_FieldSubPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*UpdateLogDescriptorRequestCAS_FieldSubPathArrayItemValue)
}

func (UpdateLogDescriptorRequest_CASPathSelectorConditionalStateMetadataOwnerReferences) ApiVersion() UpdateLogDescriptorRequest_CASPathSelectorConditionalStateMetadataOwnerReferencesApiVersion {
	return UpdateLogDescriptorRequest_CASPathSelectorConditionalStateMetadataOwnerReferencesApiVersion{}
}

func (UpdateLogDescriptorRequest_CASPathSelectorConditionalStateMetadataOwnerReferences) Kind() UpdateLogDescriptorRequest_CASPathSelectorConditionalStateMetadataOwnerReferencesKind {
	return UpdateLogDescriptorRequest_CASPathSelectorConditionalStateMetadataOwnerReferencesKind{}
}

func (UpdateLogDescriptorRequest_CASPathSelectorConditionalStateMetadataOwnerReferences) Name() UpdateLogDescriptorRequest_CASPathSelectorConditionalStateMetadataOwnerReferencesName {
	return UpdateLogDescriptorRequest_CASPathSelectorConditionalStateMetadataOwnerReferencesName{}
}

func (UpdateLogDescriptorRequest_CASPathSelectorConditionalStateMetadataOwnerReferences) Uid() UpdateLogDescriptorRequest_CASPathSelectorConditionalStateMetadataOwnerReferencesUid {
	return UpdateLogDescriptorRequest_CASPathSelectorConditionalStateMetadataOwnerReferencesUid{}
}

func (UpdateLogDescriptorRequest_CASPathSelectorConditionalStateMetadataOwnerReferences) Controller() UpdateLogDescriptorRequest_CASPathSelectorConditionalStateMetadataOwnerReferencesController {
	return UpdateLogDescriptorRequest_CASPathSelectorConditionalStateMetadataOwnerReferencesController{}
}

func (UpdateLogDescriptorRequest_CASPathSelectorConditionalStateMetadataOwnerReferences) BlockOwnerDeletion() UpdateLogDescriptorRequest_CASPathSelectorConditionalStateMetadataOwnerReferencesBlockOwnerDeletion {
	return UpdateLogDescriptorRequest_CASPathSelectorConditionalStateMetadataOwnerReferencesBlockOwnerDeletion{}
}

type UpdateLogDescriptorRequest_CASPathSelectorConditionalStateMetadataOwnerReferencesApiVersion struct{}

func (UpdateLogDescriptorRequest_CASPathSelectorConditionalStateMetadataOwnerReferencesApiVersion) FieldPath() *UpdateLogDescriptorRequestCAS_FieldSubPath {
	return &UpdateLogDescriptorRequestCAS_FieldSubPath{
		selector: UpdateLogDescriptorRequestCAS_FieldPathSelectorConditionalState,
		subPath:  log_descriptor.NewLogDescriptorFieldPathBuilder().Metadata().OwnerReferences().ApiVersion().FieldPath(),
	}
}

func (s UpdateLogDescriptorRequest_CASPathSelectorConditionalStateMetadataOwnerReferencesApiVersion) WithValue(value string) *UpdateLogDescriptorRequestCAS_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateLogDescriptorRequestCAS_FieldSubPathValue)
}

func (s UpdateLogDescriptorRequest_CASPathSelectorConditionalStateMetadataOwnerReferencesApiVersion) WithArrayOfValues(values []string) *UpdateLogDescriptorRequestCAS_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateLogDescriptorRequestCAS_FieldSubPathArrayOfValues)
}

type UpdateLogDescriptorRequest_CASPathSelectorConditionalStateMetadataOwnerReferencesKind struct{}

func (UpdateLogDescriptorRequest_CASPathSelectorConditionalStateMetadataOwnerReferencesKind) FieldPath() *UpdateLogDescriptorRequestCAS_FieldSubPath {
	return &UpdateLogDescriptorRequestCAS_FieldSubPath{
		selector: UpdateLogDescriptorRequestCAS_FieldPathSelectorConditionalState,
		subPath:  log_descriptor.NewLogDescriptorFieldPathBuilder().Metadata().OwnerReferences().Kind().FieldPath(),
	}
}

func (s UpdateLogDescriptorRequest_CASPathSelectorConditionalStateMetadataOwnerReferencesKind) WithValue(value string) *UpdateLogDescriptorRequestCAS_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateLogDescriptorRequestCAS_FieldSubPathValue)
}

func (s UpdateLogDescriptorRequest_CASPathSelectorConditionalStateMetadataOwnerReferencesKind) WithArrayOfValues(values []string) *UpdateLogDescriptorRequestCAS_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateLogDescriptorRequestCAS_FieldSubPathArrayOfValues)
}

type UpdateLogDescriptorRequest_CASPathSelectorConditionalStateMetadataOwnerReferencesName struct{}

func (UpdateLogDescriptorRequest_CASPathSelectorConditionalStateMetadataOwnerReferencesName) FieldPath() *UpdateLogDescriptorRequestCAS_FieldSubPath {
	return &UpdateLogDescriptorRequestCAS_FieldSubPath{
		selector: UpdateLogDescriptorRequestCAS_FieldPathSelectorConditionalState,
		subPath:  log_descriptor.NewLogDescriptorFieldPathBuilder().Metadata().OwnerReferences().Name().FieldPath(),
	}
}

func (s UpdateLogDescriptorRequest_CASPathSelectorConditionalStateMetadataOwnerReferencesName) WithValue(value string) *UpdateLogDescriptorRequestCAS_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateLogDescriptorRequestCAS_FieldSubPathValue)
}

func (s UpdateLogDescriptorRequest_CASPathSelectorConditionalStateMetadataOwnerReferencesName) WithArrayOfValues(values []string) *UpdateLogDescriptorRequestCAS_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateLogDescriptorRequestCAS_FieldSubPathArrayOfValues)
}

type UpdateLogDescriptorRequest_CASPathSelectorConditionalStateMetadataOwnerReferencesUid struct{}

func (UpdateLogDescriptorRequest_CASPathSelectorConditionalStateMetadataOwnerReferencesUid) FieldPath() *UpdateLogDescriptorRequestCAS_FieldSubPath {
	return &UpdateLogDescriptorRequestCAS_FieldSubPath{
		selector: UpdateLogDescriptorRequestCAS_FieldPathSelectorConditionalState,
		subPath:  log_descriptor.NewLogDescriptorFieldPathBuilder().Metadata().OwnerReferences().Uid().FieldPath(),
	}
}

func (s UpdateLogDescriptorRequest_CASPathSelectorConditionalStateMetadataOwnerReferencesUid) WithValue(value string) *UpdateLogDescriptorRequestCAS_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateLogDescriptorRequestCAS_FieldSubPathValue)
}

func (s UpdateLogDescriptorRequest_CASPathSelectorConditionalStateMetadataOwnerReferencesUid) WithArrayOfValues(values []string) *UpdateLogDescriptorRequestCAS_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateLogDescriptorRequestCAS_FieldSubPathArrayOfValues)
}

type UpdateLogDescriptorRequest_CASPathSelectorConditionalStateMetadataOwnerReferencesController struct{}

func (UpdateLogDescriptorRequest_CASPathSelectorConditionalStateMetadataOwnerReferencesController) FieldPath() *UpdateLogDescriptorRequestCAS_FieldSubPath {
	return &UpdateLogDescriptorRequestCAS_FieldSubPath{
		selector: UpdateLogDescriptorRequestCAS_FieldPathSelectorConditionalState,
		subPath:  log_descriptor.NewLogDescriptorFieldPathBuilder().Metadata().OwnerReferences().Controller().FieldPath(),
	}
}

func (s UpdateLogDescriptorRequest_CASPathSelectorConditionalStateMetadataOwnerReferencesController) WithValue(value bool) *UpdateLogDescriptorRequestCAS_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateLogDescriptorRequestCAS_FieldSubPathValue)
}

func (s UpdateLogDescriptorRequest_CASPathSelectorConditionalStateMetadataOwnerReferencesController) WithArrayOfValues(values []bool) *UpdateLogDescriptorRequestCAS_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateLogDescriptorRequestCAS_FieldSubPathArrayOfValues)
}

type UpdateLogDescriptorRequest_CASPathSelectorConditionalStateMetadataOwnerReferencesBlockOwnerDeletion struct{}

func (UpdateLogDescriptorRequest_CASPathSelectorConditionalStateMetadataOwnerReferencesBlockOwnerDeletion) FieldPath() *UpdateLogDescriptorRequestCAS_FieldSubPath {
	return &UpdateLogDescriptorRequestCAS_FieldSubPath{
		selector: UpdateLogDescriptorRequestCAS_FieldPathSelectorConditionalState,
		subPath:  log_descriptor.NewLogDescriptorFieldPathBuilder().Metadata().OwnerReferences().BlockOwnerDeletion().FieldPath(),
	}
}

func (s UpdateLogDescriptorRequest_CASPathSelectorConditionalStateMetadataOwnerReferencesBlockOwnerDeletion) WithValue(value bool) *UpdateLogDescriptorRequestCAS_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateLogDescriptorRequestCAS_FieldSubPathValue)
}

func (s UpdateLogDescriptorRequest_CASPathSelectorConditionalStateMetadataOwnerReferencesBlockOwnerDeletion) WithArrayOfValues(values []bool) *UpdateLogDescriptorRequestCAS_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateLogDescriptorRequestCAS_FieldSubPathArrayOfValues)
}

type UpdateLogDescriptorRequest_CASPathSelectorConditionalStateMetadataShards struct{}

func (UpdateLogDescriptorRequest_CASPathSelectorConditionalStateMetadataShards) FieldPath() *UpdateLogDescriptorRequestCAS_FieldSubPath {
	return &UpdateLogDescriptorRequestCAS_FieldSubPath{
		selector: UpdateLogDescriptorRequestCAS_FieldPathSelectorConditionalState,
		subPath:  log_descriptor.NewLogDescriptorFieldPathBuilder().Metadata().Shards().FieldPath(),
	}
}

func (s UpdateLogDescriptorRequest_CASPathSelectorConditionalStateMetadataShards) WithValue(value map[string]int64) *UpdateLogDescriptorRequestCAS_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateLogDescriptorRequestCAS_FieldSubPathValue)
}

func (s UpdateLogDescriptorRequest_CASPathSelectorConditionalStateMetadataShards) WithArrayOfValues(values []map[string]int64) *UpdateLogDescriptorRequestCAS_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateLogDescriptorRequestCAS_FieldSubPathArrayOfValues)
}

func (UpdateLogDescriptorRequest_CASPathSelectorConditionalStateMetadataShards) WithKey(key string) UpdateLogDescriptorRequest_CASMapPathSelectorConditionalStateMetadataShards {
	return UpdateLogDescriptorRequest_CASMapPathSelectorConditionalStateMetadataShards{key: key}
}

type UpdateLogDescriptorRequest_CASMapPathSelectorConditionalStateMetadataShards struct {
	key string
}

func (s UpdateLogDescriptorRequest_CASMapPathSelectorConditionalStateMetadataShards) FieldPath() *UpdateLogDescriptorRequestCAS_FieldSubPath {
	return &UpdateLogDescriptorRequestCAS_FieldSubPath{
		selector: UpdateLogDescriptorRequestCAS_FieldPathSelectorConditionalState,
		subPath:  log_descriptor.NewLogDescriptorFieldPathBuilder().Metadata().Shards().WithKey(s.key).FieldPath(),
	}
}

func (s UpdateLogDescriptorRequest_CASMapPathSelectorConditionalStateMetadataShards) WithValue(value int64) *UpdateLogDescriptorRequestCAS_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateLogDescriptorRequestCAS_FieldSubPathValue)
}

func (s UpdateLogDescriptorRequest_CASMapPathSelectorConditionalStateMetadataShards) WithArrayOfValues(values []int64) *UpdateLogDescriptorRequestCAS_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateLogDescriptorRequestCAS_FieldSubPathArrayOfValues)
}

type UpdateLogDescriptorRequest_CASPathSelectorConditionalStateMetadataSyncing struct{}

func (UpdateLogDescriptorRequest_CASPathSelectorConditionalStateMetadataSyncing) FieldPath() *UpdateLogDescriptorRequestCAS_FieldSubPath {
	return &UpdateLogDescriptorRequestCAS_FieldSubPath{
		selector: UpdateLogDescriptorRequestCAS_FieldPathSelectorConditionalState,
		subPath:  log_descriptor.NewLogDescriptorFieldPathBuilder().Metadata().Syncing().FieldPath(),
	}
}

func (s UpdateLogDescriptorRequest_CASPathSelectorConditionalStateMetadataSyncing) WithValue(value *ntt_meta.SyncingMeta) *UpdateLogDescriptorRequestCAS_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateLogDescriptorRequestCAS_FieldSubPathValue)
}

func (s UpdateLogDescriptorRequest_CASPathSelectorConditionalStateMetadataSyncing) WithArrayOfValues(values []*ntt_meta.SyncingMeta) *UpdateLogDescriptorRequestCAS_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateLogDescriptorRequestCAS_FieldSubPathArrayOfValues)
}

func (UpdateLogDescriptorRequest_CASPathSelectorConditionalStateMetadataSyncing) OwningRegion() UpdateLogDescriptorRequest_CASPathSelectorConditionalStateMetadataSyncingOwningRegion {
	return UpdateLogDescriptorRequest_CASPathSelectorConditionalStateMetadataSyncingOwningRegion{}
}

func (UpdateLogDescriptorRequest_CASPathSelectorConditionalStateMetadataSyncing) Regions() UpdateLogDescriptorRequest_CASPathSelectorConditionalStateMetadataSyncingRegions {
	return UpdateLogDescriptorRequest_CASPathSelectorConditionalStateMetadataSyncingRegions{}
}

type UpdateLogDescriptorRequest_CASPathSelectorConditionalStateMetadataSyncingOwningRegion struct{}

func (UpdateLogDescriptorRequest_CASPathSelectorConditionalStateMetadataSyncingOwningRegion) FieldPath() *UpdateLogDescriptorRequestCAS_FieldSubPath {
	return &UpdateLogDescriptorRequestCAS_FieldSubPath{
		selector: UpdateLogDescriptorRequestCAS_FieldPathSelectorConditionalState,
		subPath:  log_descriptor.NewLogDescriptorFieldPathBuilder().Metadata().Syncing().OwningRegion().FieldPath(),
	}
}

func (s UpdateLogDescriptorRequest_CASPathSelectorConditionalStateMetadataSyncingOwningRegion) WithValue(value string) *UpdateLogDescriptorRequestCAS_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateLogDescriptorRequestCAS_FieldSubPathValue)
}

func (s UpdateLogDescriptorRequest_CASPathSelectorConditionalStateMetadataSyncingOwningRegion) WithArrayOfValues(values []string) *UpdateLogDescriptorRequestCAS_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateLogDescriptorRequestCAS_FieldSubPathArrayOfValues)
}

type UpdateLogDescriptorRequest_CASPathSelectorConditionalStateMetadataSyncingRegions struct{}

func (UpdateLogDescriptorRequest_CASPathSelectorConditionalStateMetadataSyncingRegions) FieldPath() *UpdateLogDescriptorRequestCAS_FieldSubPath {
	return &UpdateLogDescriptorRequestCAS_FieldSubPath{
		selector: UpdateLogDescriptorRequestCAS_FieldPathSelectorConditionalState,
		subPath:  log_descriptor.NewLogDescriptorFieldPathBuilder().Metadata().Syncing().Regions().FieldPath(),
	}
}

func (s UpdateLogDescriptorRequest_CASPathSelectorConditionalStateMetadataSyncingRegions) WithValue(value []string) *UpdateLogDescriptorRequestCAS_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateLogDescriptorRequestCAS_FieldSubPathValue)
}

func (s UpdateLogDescriptorRequest_CASPathSelectorConditionalStateMetadataSyncingRegions) WithArrayOfValues(values [][]string) *UpdateLogDescriptorRequestCAS_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateLogDescriptorRequestCAS_FieldSubPathArrayOfValues)
}

func (s UpdateLogDescriptorRequest_CASPathSelectorConditionalStateMetadataSyncingRegions) WithItemValue(value string) *UpdateLogDescriptorRequestCAS_FieldSubPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*UpdateLogDescriptorRequestCAS_FieldSubPathArrayItemValue)
}

type UpdateLogDescriptorRequest_CASPathSelectorFieldMask struct{}

func (UpdateLogDescriptorRequest_CASPathSelectorFieldMask) FieldPath() *UpdateLogDescriptorRequestCAS_FieldTerminalPath {
	return &UpdateLogDescriptorRequestCAS_FieldTerminalPath{selector: UpdateLogDescriptorRequestCAS_FieldPathSelectorFieldMask}
}

func (s UpdateLogDescriptorRequest_CASPathSelectorFieldMask) WithValue(value *log_descriptor.LogDescriptor_FieldMask) *UpdateLogDescriptorRequestCAS_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateLogDescriptorRequestCAS_FieldTerminalPathValue)
}

func (s UpdateLogDescriptorRequest_CASPathSelectorFieldMask) WithArrayOfValues(values []*log_descriptor.LogDescriptor_FieldMask) *UpdateLogDescriptorRequestCAS_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateLogDescriptorRequestCAS_FieldTerminalPathArrayOfValues)
}

type DeleteLogDescriptorRequestFieldPathBuilder struct{}

func NewDeleteLogDescriptorRequestFieldPathBuilder() DeleteLogDescriptorRequestFieldPathBuilder {
	return DeleteLogDescriptorRequestFieldPathBuilder{}
}
func (DeleteLogDescriptorRequestFieldPathBuilder) Name() DeleteLogDescriptorRequestPathSelectorName {
	return DeleteLogDescriptorRequestPathSelectorName{}
}

type DeleteLogDescriptorRequestPathSelectorName struct{}

func (DeleteLogDescriptorRequestPathSelectorName) FieldPath() *DeleteLogDescriptorRequest_FieldTerminalPath {
	return &DeleteLogDescriptorRequest_FieldTerminalPath{selector: DeleteLogDescriptorRequest_FieldPathSelectorName}
}

func (s DeleteLogDescriptorRequestPathSelectorName) WithValue(value *log_descriptor.Reference) *DeleteLogDescriptorRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*DeleteLogDescriptorRequest_FieldTerminalPathValue)
}

func (s DeleteLogDescriptorRequestPathSelectorName) WithArrayOfValues(values []*log_descriptor.Reference) *DeleteLogDescriptorRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*DeleteLogDescriptorRequest_FieldTerminalPathArrayOfValues)
}
