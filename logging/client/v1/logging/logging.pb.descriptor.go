// Code generated by protoc-gen-goten-client
// Service: Logging
// DO NOT EDIT!!!

package logging_client

import (
	gotenclient "github.com/cloudwan/goten-sdk/runtime/client"
	gotenresource "github.com/cloudwan/goten-sdk/runtime/resource"
)

// proto imports
import (
	bucket_client "github.com/cloudwan/edgelq-sdk/logging/client/v1/bucket"
	log_client "github.com/cloudwan/edgelq-sdk/logging/client/v1/log"
	log_descriptor_client "github.com/cloudwan/edgelq-sdk/logging/client/v1/log_descriptor"
	bucket "github.com/cloudwan/edgelq-sdk/logging/resources/v1/bucket"
	log "github.com/cloudwan/edgelq-sdk/logging/resources/v1/log"
	log_descriptor "github.com/cloudwan/edgelq-sdk/logging/resources/v1/log_descriptor"
)

// Reference imports to suppress errors if they are not otherwise used.
var (
	_ = new(gotenclient.MethodDescriptor)
	_ = gotenresource.WildcardId
)

// make sure we're using proto imports
var (
	_ = &bucket.Bucket{}
	_ = &bucket_client.GetBucketRequest{}
	_ = &log.Log{}
	_ = &log_descriptor.LogDescriptor{}
	_ = &log_descriptor_client.GetLogDescriptorRequest{}
)

var (
	descriptorInitialized bool
	loggingDescriptor     *LoggingDescriptor
)

type LoggingDescriptor struct{}

func (d *LoggingDescriptor) GetServiceName() string {
	return "logging"
}

func (d *LoggingDescriptor) GetServiceDomain() string {
	return "logging.edgelq.com"
}

func (d *LoggingDescriptor) GetVersion() string {
	return "v1"
}

func (d *LoggingDescriptor) GetNextVersion() string {

	return ""
}

func (d *LoggingDescriptor) AllResourceDescriptors() []gotenresource.Descriptor {
	return []gotenresource.Descriptor{
		bucket.GetDescriptor(),
		log.GetDescriptor(),
		log_descriptor.GetDescriptor(),
	}
}

func (d *LoggingDescriptor) AllApiDescriptors() []gotenclient.ApiDescriptor {
	return []gotenclient.ApiDescriptor{
		bucket_client.GetBucketServiceDescriptor(),
		log_descriptor_client.GetLogDescriptorServiceDescriptor(),
		log_client.GetLogServiceDescriptor(),
	}
}

func (d *LoggingDescriptor) AllImportedServiceInfos() []gotenclient.ServiceImportInfo {
	return []gotenclient.ServiceImportInfo{
		{
			Domain:  "iam.edgelq.com",
			Version: "v1",
		},
		{
			Domain:  "meta.goten.com",
			Version: "v1",
		},
	}
}

func GetLoggingDescriptor() *LoggingDescriptor {
	return loggingDescriptor
}

func initDescriptor() {
	loggingDescriptor = &LoggingDescriptor{}
	gotenclient.GetRegistry().RegisterSvcDescriptor(loggingDescriptor)
}

func init() {
	if !descriptorInitialized {
		initDescriptor()
		descriptorInitialized = true
	}
}
