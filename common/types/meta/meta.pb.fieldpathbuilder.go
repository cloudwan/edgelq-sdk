// Code generated by protoc-gen-goten-object
// File: edgelq/common/types/meta.proto
// DO NOT EDIT!!!

package ntt_meta

// proto imports
import (
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
)

// make sure we're using proto imports
var (
	_ = &timestamp.Timestamp{}
)

type MetaFieldPathBuilder struct{}

func NewMetaFieldPathBuilder() MetaFieldPathBuilder {
	return MetaFieldPathBuilder{}
}
func (MetaFieldPathBuilder) CreateTime() MetaPathSelectorCreateTime {
	return MetaPathSelectorCreateTime{}
}
func (MetaFieldPathBuilder) UpdateTime() MetaPathSelectorUpdateTime {
	return MetaPathSelectorUpdateTime{}
}
func (MetaFieldPathBuilder) Uuid() MetaPathSelectorUuid {
	return MetaPathSelectorUuid{}
}
func (MetaFieldPathBuilder) Tags() MetaPathSelectorTags {
	return MetaPathSelectorTags{}
}
func (MetaFieldPathBuilder) Labels() MetaPathSelectorLabels {
	return MetaPathSelectorLabels{}
}
func (MetaFieldPathBuilder) Annotations() MetaPathSelectorAnnotations {
	return MetaPathSelectorAnnotations{}
}
func (MetaFieldPathBuilder) Generation() MetaPathSelectorGeneration {
	return MetaPathSelectorGeneration{}
}
func (MetaFieldPathBuilder) ResourceVersion() MetaPathSelectorResourceVersion {
	return MetaPathSelectorResourceVersion{}
}
func (MetaFieldPathBuilder) OwnerReferences() MetaPathSelectorOwnerReferences {
	return MetaPathSelectorOwnerReferences{}
}
func (MetaFieldPathBuilder) Shards() MetaPathSelectorShards {
	return MetaPathSelectorShards{}
}
func (MetaFieldPathBuilder) Syncing() MetaPathSelectorSyncing {
	return MetaPathSelectorSyncing{}
}

type MetaPathSelectorCreateTime struct{}

func (MetaPathSelectorCreateTime) FieldPath() *Meta_FieldTerminalPath {
	return &Meta_FieldTerminalPath{selector: Meta_FieldPathSelectorCreateTime}
}

func (s MetaPathSelectorCreateTime) WithValue(value *timestamp.Timestamp) *Meta_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*Meta_FieldTerminalPathValue)
}

func (s MetaPathSelectorCreateTime) WithArrayOfValues(values []*timestamp.Timestamp) *Meta_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*Meta_FieldTerminalPathArrayOfValues)
}

type MetaPathSelectorUpdateTime struct{}

func (MetaPathSelectorUpdateTime) FieldPath() *Meta_FieldTerminalPath {
	return &Meta_FieldTerminalPath{selector: Meta_FieldPathSelectorUpdateTime}
}

func (s MetaPathSelectorUpdateTime) WithValue(value *timestamp.Timestamp) *Meta_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*Meta_FieldTerminalPathValue)
}

func (s MetaPathSelectorUpdateTime) WithArrayOfValues(values []*timestamp.Timestamp) *Meta_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*Meta_FieldTerminalPathArrayOfValues)
}

type MetaPathSelectorUuid struct{}

func (MetaPathSelectorUuid) FieldPath() *Meta_FieldTerminalPath {
	return &Meta_FieldTerminalPath{selector: Meta_FieldPathSelectorUuid}
}

func (s MetaPathSelectorUuid) WithValue(value string) *Meta_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*Meta_FieldTerminalPathValue)
}

func (s MetaPathSelectorUuid) WithArrayOfValues(values []string) *Meta_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*Meta_FieldTerminalPathArrayOfValues)
}

type MetaPathSelectorTags struct{}

func (MetaPathSelectorTags) FieldPath() *Meta_FieldTerminalPath {
	return &Meta_FieldTerminalPath{selector: Meta_FieldPathSelectorTags}
}

func (s MetaPathSelectorTags) WithValue(value []string) *Meta_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*Meta_FieldTerminalPathValue)
}

func (s MetaPathSelectorTags) WithArrayOfValues(values [][]string) *Meta_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*Meta_FieldTerminalPathArrayOfValues)
}

func (s MetaPathSelectorTags) WithItemValue(value string) *Meta_FieldTerminalPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*Meta_FieldTerminalPathArrayItemValue)
}

type MetaPathSelectorLabels struct{}

func (MetaPathSelectorLabels) FieldPath() *Meta_FieldTerminalPath {
	return &Meta_FieldTerminalPath{selector: Meta_FieldPathSelectorLabels}
}

func (s MetaPathSelectorLabels) WithValue(value map[string]string) *Meta_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*Meta_FieldTerminalPathValue)
}

func (s MetaPathSelectorLabels) WithArrayOfValues(values []map[string]string) *Meta_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*Meta_FieldTerminalPathArrayOfValues)
}

func (MetaPathSelectorLabels) WithKey(key string) MetaMapPathSelectorLabels {
	return MetaMapPathSelectorLabels{key: key}
}

type MetaMapPathSelectorLabels struct {
	key string
}

func (s MetaMapPathSelectorLabels) FieldPath() *Meta_FieldPathMap {
	return &Meta_FieldPathMap{selector: Meta_FieldPathSelectorLabels, key: s.key}
}

func (s MetaMapPathSelectorLabels) WithValue(value string) *Meta_FieldPathMapValue {
	return s.FieldPath().WithIValue(value).(*Meta_FieldPathMapValue)
}

func (s MetaMapPathSelectorLabels) WithArrayOfValues(values []string) *Meta_FieldPathMapArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*Meta_FieldPathMapArrayOfValues)
}

type MetaPathSelectorAnnotations struct{}

func (MetaPathSelectorAnnotations) FieldPath() *Meta_FieldTerminalPath {
	return &Meta_FieldTerminalPath{selector: Meta_FieldPathSelectorAnnotations}
}

func (s MetaPathSelectorAnnotations) WithValue(value map[string]string) *Meta_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*Meta_FieldTerminalPathValue)
}

func (s MetaPathSelectorAnnotations) WithArrayOfValues(values []map[string]string) *Meta_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*Meta_FieldTerminalPathArrayOfValues)
}

func (MetaPathSelectorAnnotations) WithKey(key string) MetaMapPathSelectorAnnotations {
	return MetaMapPathSelectorAnnotations{key: key}
}

type MetaMapPathSelectorAnnotations struct {
	key string
}

func (s MetaMapPathSelectorAnnotations) FieldPath() *Meta_FieldPathMap {
	return &Meta_FieldPathMap{selector: Meta_FieldPathSelectorAnnotations, key: s.key}
}

func (s MetaMapPathSelectorAnnotations) WithValue(value string) *Meta_FieldPathMapValue {
	return s.FieldPath().WithIValue(value).(*Meta_FieldPathMapValue)
}

func (s MetaMapPathSelectorAnnotations) WithArrayOfValues(values []string) *Meta_FieldPathMapArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*Meta_FieldPathMapArrayOfValues)
}

type MetaPathSelectorGeneration struct{}

func (MetaPathSelectorGeneration) FieldPath() *Meta_FieldTerminalPath {
	return &Meta_FieldTerminalPath{selector: Meta_FieldPathSelectorGeneration}
}

func (s MetaPathSelectorGeneration) WithValue(value int64) *Meta_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*Meta_FieldTerminalPathValue)
}

func (s MetaPathSelectorGeneration) WithArrayOfValues(values []int64) *Meta_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*Meta_FieldTerminalPathArrayOfValues)
}

type MetaPathSelectorResourceVersion struct{}

func (MetaPathSelectorResourceVersion) FieldPath() *Meta_FieldTerminalPath {
	return &Meta_FieldTerminalPath{selector: Meta_FieldPathSelectorResourceVersion}
}

func (s MetaPathSelectorResourceVersion) WithValue(value string) *Meta_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*Meta_FieldTerminalPathValue)
}

func (s MetaPathSelectorResourceVersion) WithArrayOfValues(values []string) *Meta_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*Meta_FieldTerminalPathArrayOfValues)
}

type MetaPathSelectorOwnerReferences struct{}

func (MetaPathSelectorOwnerReferences) FieldPath() *Meta_FieldTerminalPath {
	return &Meta_FieldTerminalPath{selector: Meta_FieldPathSelectorOwnerReferences}
}

func (s MetaPathSelectorOwnerReferences) WithValue(value []*OwnerReference) *Meta_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*Meta_FieldTerminalPathValue)
}

func (s MetaPathSelectorOwnerReferences) WithArrayOfValues(values [][]*OwnerReference) *Meta_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*Meta_FieldTerminalPathArrayOfValues)
}

func (s MetaPathSelectorOwnerReferences) WithItemValue(value *OwnerReference) *Meta_FieldTerminalPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*Meta_FieldTerminalPathArrayItemValue)
}
func (MetaPathSelectorOwnerReferences) WithSubPath(subPath OwnerReference_FieldPath) *Meta_FieldSubPath {
	return &Meta_FieldSubPath{selector: Meta_FieldPathSelectorOwnerReferences, subPath: subPath}
}

func (s MetaPathSelectorOwnerReferences) WithSubValue(subPathValue OwnerReference_FieldPathValue) *Meta_FieldSubPathValue {
	return &Meta_FieldSubPathValue{Meta_FieldPath: s.WithSubPath(subPathValue), subPathValue: subPathValue}
}

func (s MetaPathSelectorOwnerReferences) WithSubArrayOfValues(subPathArrayOfValues OwnerReference_FieldPathArrayOfValues) *Meta_FieldSubPathArrayOfValues {
	return &Meta_FieldSubPathArrayOfValues{Meta_FieldPath: s.WithSubPath(subPathArrayOfValues), subPathArrayOfValues: subPathArrayOfValues}
}

func (s MetaPathSelectorOwnerReferences) WithSubArrayItemValue(subPathArrayItemValue OwnerReference_FieldPathArrayItemValue) *Meta_FieldSubPathArrayItemValue {
	return &Meta_FieldSubPathArrayItemValue{Meta_FieldPath: s.WithSubPath(subPathArrayItemValue), subPathItemValue: subPathArrayItemValue}
}

func (MetaPathSelectorOwnerReferences) ApiVersion() MetaPathSelectorOwnerReferencesApiVersion {
	return MetaPathSelectorOwnerReferencesApiVersion{}
}

func (MetaPathSelectorOwnerReferences) Kind() MetaPathSelectorOwnerReferencesKind {
	return MetaPathSelectorOwnerReferencesKind{}
}

func (MetaPathSelectorOwnerReferences) Name() MetaPathSelectorOwnerReferencesName {
	return MetaPathSelectorOwnerReferencesName{}
}

func (MetaPathSelectorOwnerReferences) Uid() MetaPathSelectorOwnerReferencesUid {
	return MetaPathSelectorOwnerReferencesUid{}
}

func (MetaPathSelectorOwnerReferences) Controller() MetaPathSelectorOwnerReferencesController {
	return MetaPathSelectorOwnerReferencesController{}
}

func (MetaPathSelectorOwnerReferences) BlockOwnerDeletion() MetaPathSelectorOwnerReferencesBlockOwnerDeletion {
	return MetaPathSelectorOwnerReferencesBlockOwnerDeletion{}
}

type MetaPathSelectorOwnerReferencesApiVersion struct{}

func (MetaPathSelectorOwnerReferencesApiVersion) FieldPath() *Meta_FieldSubPath {
	return &Meta_FieldSubPath{
		selector: Meta_FieldPathSelectorOwnerReferences,
		subPath:  NewOwnerReferenceFieldPathBuilder().ApiVersion().FieldPath(),
	}
}

func (s MetaPathSelectorOwnerReferencesApiVersion) WithValue(value string) *Meta_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*Meta_FieldSubPathValue)
}

func (s MetaPathSelectorOwnerReferencesApiVersion) WithArrayOfValues(values []string) *Meta_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*Meta_FieldSubPathArrayOfValues)
}

type MetaPathSelectorOwnerReferencesKind struct{}

func (MetaPathSelectorOwnerReferencesKind) FieldPath() *Meta_FieldSubPath {
	return &Meta_FieldSubPath{
		selector: Meta_FieldPathSelectorOwnerReferences,
		subPath:  NewOwnerReferenceFieldPathBuilder().Kind().FieldPath(),
	}
}

func (s MetaPathSelectorOwnerReferencesKind) WithValue(value string) *Meta_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*Meta_FieldSubPathValue)
}

func (s MetaPathSelectorOwnerReferencesKind) WithArrayOfValues(values []string) *Meta_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*Meta_FieldSubPathArrayOfValues)
}

type MetaPathSelectorOwnerReferencesName struct{}

func (MetaPathSelectorOwnerReferencesName) FieldPath() *Meta_FieldSubPath {
	return &Meta_FieldSubPath{
		selector: Meta_FieldPathSelectorOwnerReferences,
		subPath:  NewOwnerReferenceFieldPathBuilder().Name().FieldPath(),
	}
}

func (s MetaPathSelectorOwnerReferencesName) WithValue(value string) *Meta_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*Meta_FieldSubPathValue)
}

func (s MetaPathSelectorOwnerReferencesName) WithArrayOfValues(values []string) *Meta_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*Meta_FieldSubPathArrayOfValues)
}

type MetaPathSelectorOwnerReferencesUid struct{}

func (MetaPathSelectorOwnerReferencesUid) FieldPath() *Meta_FieldSubPath {
	return &Meta_FieldSubPath{
		selector: Meta_FieldPathSelectorOwnerReferences,
		subPath:  NewOwnerReferenceFieldPathBuilder().Uid().FieldPath(),
	}
}

func (s MetaPathSelectorOwnerReferencesUid) WithValue(value string) *Meta_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*Meta_FieldSubPathValue)
}

func (s MetaPathSelectorOwnerReferencesUid) WithArrayOfValues(values []string) *Meta_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*Meta_FieldSubPathArrayOfValues)
}

type MetaPathSelectorOwnerReferencesController struct{}

func (MetaPathSelectorOwnerReferencesController) FieldPath() *Meta_FieldSubPath {
	return &Meta_FieldSubPath{
		selector: Meta_FieldPathSelectorOwnerReferences,
		subPath:  NewOwnerReferenceFieldPathBuilder().Controller().FieldPath(),
	}
}

func (s MetaPathSelectorOwnerReferencesController) WithValue(value bool) *Meta_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*Meta_FieldSubPathValue)
}

func (s MetaPathSelectorOwnerReferencesController) WithArrayOfValues(values []bool) *Meta_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*Meta_FieldSubPathArrayOfValues)
}

type MetaPathSelectorOwnerReferencesBlockOwnerDeletion struct{}

func (MetaPathSelectorOwnerReferencesBlockOwnerDeletion) FieldPath() *Meta_FieldSubPath {
	return &Meta_FieldSubPath{
		selector: Meta_FieldPathSelectorOwnerReferences,
		subPath:  NewOwnerReferenceFieldPathBuilder().BlockOwnerDeletion().FieldPath(),
	}
}

func (s MetaPathSelectorOwnerReferencesBlockOwnerDeletion) WithValue(value bool) *Meta_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*Meta_FieldSubPathValue)
}

func (s MetaPathSelectorOwnerReferencesBlockOwnerDeletion) WithArrayOfValues(values []bool) *Meta_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*Meta_FieldSubPathArrayOfValues)
}

type MetaPathSelectorShards struct{}

func (MetaPathSelectorShards) FieldPath() *Meta_FieldTerminalPath {
	return &Meta_FieldTerminalPath{selector: Meta_FieldPathSelectorShards}
}

func (s MetaPathSelectorShards) WithValue(value map[string]int64) *Meta_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*Meta_FieldTerminalPathValue)
}

func (s MetaPathSelectorShards) WithArrayOfValues(values []map[string]int64) *Meta_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*Meta_FieldTerminalPathArrayOfValues)
}

func (MetaPathSelectorShards) WithKey(key string) MetaMapPathSelectorShards {
	return MetaMapPathSelectorShards{key: key}
}

type MetaMapPathSelectorShards struct {
	key string
}

func (s MetaMapPathSelectorShards) FieldPath() *Meta_FieldPathMap {
	return &Meta_FieldPathMap{selector: Meta_FieldPathSelectorShards, key: s.key}
}

func (s MetaMapPathSelectorShards) WithValue(value int64) *Meta_FieldPathMapValue {
	return s.FieldPath().WithIValue(value).(*Meta_FieldPathMapValue)
}

func (s MetaMapPathSelectorShards) WithArrayOfValues(values []int64) *Meta_FieldPathMapArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*Meta_FieldPathMapArrayOfValues)
}

type MetaPathSelectorSyncing struct{}

func (MetaPathSelectorSyncing) FieldPath() *Meta_FieldTerminalPath {
	return &Meta_FieldTerminalPath{selector: Meta_FieldPathSelectorSyncing}
}

func (s MetaPathSelectorSyncing) WithValue(value *SyncingMeta) *Meta_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*Meta_FieldTerminalPathValue)
}

func (s MetaPathSelectorSyncing) WithArrayOfValues(values []*SyncingMeta) *Meta_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*Meta_FieldTerminalPathArrayOfValues)
}

func (MetaPathSelectorSyncing) WithSubPath(subPath SyncingMeta_FieldPath) *Meta_FieldSubPath {
	return &Meta_FieldSubPath{selector: Meta_FieldPathSelectorSyncing, subPath: subPath}
}

func (s MetaPathSelectorSyncing) WithSubValue(subPathValue SyncingMeta_FieldPathValue) *Meta_FieldSubPathValue {
	return &Meta_FieldSubPathValue{Meta_FieldPath: s.WithSubPath(subPathValue), subPathValue: subPathValue}
}

func (s MetaPathSelectorSyncing) WithSubArrayOfValues(subPathArrayOfValues SyncingMeta_FieldPathArrayOfValues) *Meta_FieldSubPathArrayOfValues {
	return &Meta_FieldSubPathArrayOfValues{Meta_FieldPath: s.WithSubPath(subPathArrayOfValues), subPathArrayOfValues: subPathArrayOfValues}
}

func (s MetaPathSelectorSyncing) WithSubArrayItemValue(subPathArrayItemValue SyncingMeta_FieldPathArrayItemValue) *Meta_FieldSubPathArrayItemValue {
	return &Meta_FieldSubPathArrayItemValue{Meta_FieldPath: s.WithSubPath(subPathArrayItemValue), subPathItemValue: subPathArrayItemValue}
}

func (MetaPathSelectorSyncing) OwningRegion() MetaPathSelectorSyncingOwningRegion {
	return MetaPathSelectorSyncingOwningRegion{}
}

func (MetaPathSelectorSyncing) Regions() MetaPathSelectorSyncingRegions {
	return MetaPathSelectorSyncingRegions{}
}

type MetaPathSelectorSyncingOwningRegion struct{}

func (MetaPathSelectorSyncingOwningRegion) FieldPath() *Meta_FieldSubPath {
	return &Meta_FieldSubPath{
		selector: Meta_FieldPathSelectorSyncing,
		subPath:  NewSyncingMetaFieldPathBuilder().OwningRegion().FieldPath(),
	}
}

func (s MetaPathSelectorSyncingOwningRegion) WithValue(value string) *Meta_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*Meta_FieldSubPathValue)
}

func (s MetaPathSelectorSyncingOwningRegion) WithArrayOfValues(values []string) *Meta_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*Meta_FieldSubPathArrayOfValues)
}

type MetaPathSelectorSyncingRegions struct{}

func (MetaPathSelectorSyncingRegions) FieldPath() *Meta_FieldSubPath {
	return &Meta_FieldSubPath{
		selector: Meta_FieldPathSelectorSyncing,
		subPath:  NewSyncingMetaFieldPathBuilder().Regions().FieldPath(),
	}
}

func (s MetaPathSelectorSyncingRegions) WithValue(value []string) *Meta_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*Meta_FieldSubPathValue)
}

func (s MetaPathSelectorSyncingRegions) WithArrayOfValues(values [][]string) *Meta_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*Meta_FieldSubPathArrayOfValues)
}

func (s MetaPathSelectorSyncingRegions) WithItemValue(value string) *Meta_FieldSubPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*Meta_FieldSubPathArrayItemValue)
}

type LabelSelectorFieldPathBuilder struct{}

func NewLabelSelectorFieldPathBuilder() LabelSelectorFieldPathBuilder {
	return LabelSelectorFieldPathBuilder{}
}
func (LabelSelectorFieldPathBuilder) MatchLabels() LabelSelectorPathSelectorMatchLabels {
	return LabelSelectorPathSelectorMatchLabels{}
}
func (LabelSelectorFieldPathBuilder) MatchExpressions() LabelSelectorPathSelectorMatchExpressions {
	return LabelSelectorPathSelectorMatchExpressions{}
}

type LabelSelectorPathSelectorMatchLabels struct{}

func (LabelSelectorPathSelectorMatchLabels) FieldPath() *LabelSelector_FieldTerminalPath {
	return &LabelSelector_FieldTerminalPath{selector: LabelSelector_FieldPathSelectorMatchLabels}
}

func (s LabelSelectorPathSelectorMatchLabels) WithValue(value map[string]string) *LabelSelector_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*LabelSelector_FieldTerminalPathValue)
}

func (s LabelSelectorPathSelectorMatchLabels) WithArrayOfValues(values []map[string]string) *LabelSelector_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*LabelSelector_FieldTerminalPathArrayOfValues)
}

func (LabelSelectorPathSelectorMatchLabels) WithKey(key string) LabelSelectorMapPathSelectorMatchLabels {
	return LabelSelectorMapPathSelectorMatchLabels{key: key}
}

type LabelSelectorMapPathSelectorMatchLabels struct {
	key string
}

func (s LabelSelectorMapPathSelectorMatchLabels) FieldPath() *LabelSelector_FieldPathMap {
	return &LabelSelector_FieldPathMap{selector: LabelSelector_FieldPathSelectorMatchLabels, key: s.key}
}

func (s LabelSelectorMapPathSelectorMatchLabels) WithValue(value string) *LabelSelector_FieldPathMapValue {
	return s.FieldPath().WithIValue(value).(*LabelSelector_FieldPathMapValue)
}

func (s LabelSelectorMapPathSelectorMatchLabels) WithArrayOfValues(values []string) *LabelSelector_FieldPathMapArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*LabelSelector_FieldPathMapArrayOfValues)
}

type LabelSelectorPathSelectorMatchExpressions struct{}

func (LabelSelectorPathSelectorMatchExpressions) FieldPath() *LabelSelector_FieldTerminalPath {
	return &LabelSelector_FieldTerminalPath{selector: LabelSelector_FieldPathSelectorMatchExpressions}
}

func (s LabelSelectorPathSelectorMatchExpressions) WithValue(value []*LabelSelectorRequirement) *LabelSelector_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*LabelSelector_FieldTerminalPathValue)
}

func (s LabelSelectorPathSelectorMatchExpressions) WithArrayOfValues(values [][]*LabelSelectorRequirement) *LabelSelector_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*LabelSelector_FieldTerminalPathArrayOfValues)
}

func (s LabelSelectorPathSelectorMatchExpressions) WithItemValue(value *LabelSelectorRequirement) *LabelSelector_FieldTerminalPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*LabelSelector_FieldTerminalPathArrayItemValue)
}
func (LabelSelectorPathSelectorMatchExpressions) WithSubPath(subPath LabelSelectorRequirement_FieldPath) *LabelSelector_FieldSubPath {
	return &LabelSelector_FieldSubPath{selector: LabelSelector_FieldPathSelectorMatchExpressions, subPath: subPath}
}

func (s LabelSelectorPathSelectorMatchExpressions) WithSubValue(subPathValue LabelSelectorRequirement_FieldPathValue) *LabelSelector_FieldSubPathValue {
	return &LabelSelector_FieldSubPathValue{LabelSelector_FieldPath: s.WithSubPath(subPathValue), subPathValue: subPathValue}
}

func (s LabelSelectorPathSelectorMatchExpressions) WithSubArrayOfValues(subPathArrayOfValues LabelSelectorRequirement_FieldPathArrayOfValues) *LabelSelector_FieldSubPathArrayOfValues {
	return &LabelSelector_FieldSubPathArrayOfValues{LabelSelector_FieldPath: s.WithSubPath(subPathArrayOfValues), subPathArrayOfValues: subPathArrayOfValues}
}

func (s LabelSelectorPathSelectorMatchExpressions) WithSubArrayItemValue(subPathArrayItemValue LabelSelectorRequirement_FieldPathArrayItemValue) *LabelSelector_FieldSubPathArrayItemValue {
	return &LabelSelector_FieldSubPathArrayItemValue{LabelSelector_FieldPath: s.WithSubPath(subPathArrayItemValue), subPathItemValue: subPathArrayItemValue}
}

func (LabelSelectorPathSelectorMatchExpressions) Key() LabelSelectorPathSelectorMatchExpressionsKey {
	return LabelSelectorPathSelectorMatchExpressionsKey{}
}

func (LabelSelectorPathSelectorMatchExpressions) Operator() LabelSelectorPathSelectorMatchExpressionsOperator {
	return LabelSelectorPathSelectorMatchExpressionsOperator{}
}

func (LabelSelectorPathSelectorMatchExpressions) Values() LabelSelectorPathSelectorMatchExpressionsValues {
	return LabelSelectorPathSelectorMatchExpressionsValues{}
}

type LabelSelectorPathSelectorMatchExpressionsKey struct{}

func (LabelSelectorPathSelectorMatchExpressionsKey) FieldPath() *LabelSelector_FieldSubPath {
	return &LabelSelector_FieldSubPath{
		selector: LabelSelector_FieldPathSelectorMatchExpressions,
		subPath:  NewLabelSelectorRequirementFieldPathBuilder().Key().FieldPath(),
	}
}

func (s LabelSelectorPathSelectorMatchExpressionsKey) WithValue(value string) *LabelSelector_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*LabelSelector_FieldSubPathValue)
}

func (s LabelSelectorPathSelectorMatchExpressionsKey) WithArrayOfValues(values []string) *LabelSelector_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*LabelSelector_FieldSubPathArrayOfValues)
}

type LabelSelectorPathSelectorMatchExpressionsOperator struct{}

func (LabelSelectorPathSelectorMatchExpressionsOperator) FieldPath() *LabelSelector_FieldSubPath {
	return &LabelSelector_FieldSubPath{
		selector: LabelSelector_FieldPathSelectorMatchExpressions,
		subPath:  NewLabelSelectorRequirementFieldPathBuilder().Operator().FieldPath(),
	}
}

func (s LabelSelectorPathSelectorMatchExpressionsOperator) WithValue(value string) *LabelSelector_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*LabelSelector_FieldSubPathValue)
}

func (s LabelSelectorPathSelectorMatchExpressionsOperator) WithArrayOfValues(values []string) *LabelSelector_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*LabelSelector_FieldSubPathArrayOfValues)
}

type LabelSelectorPathSelectorMatchExpressionsValues struct{}

func (LabelSelectorPathSelectorMatchExpressionsValues) FieldPath() *LabelSelector_FieldSubPath {
	return &LabelSelector_FieldSubPath{
		selector: LabelSelector_FieldPathSelectorMatchExpressions,
		subPath:  NewLabelSelectorRequirementFieldPathBuilder().Values().FieldPath(),
	}
}

func (s LabelSelectorPathSelectorMatchExpressionsValues) WithValue(value []string) *LabelSelector_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*LabelSelector_FieldSubPathValue)
}

func (s LabelSelectorPathSelectorMatchExpressionsValues) WithArrayOfValues(values [][]string) *LabelSelector_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*LabelSelector_FieldSubPathArrayOfValues)
}

func (s LabelSelectorPathSelectorMatchExpressionsValues) WithItemValue(value string) *LabelSelector_FieldSubPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*LabelSelector_FieldSubPathArrayItemValue)
}

type LabelSelectorRequirementFieldPathBuilder struct{}

func NewLabelSelectorRequirementFieldPathBuilder() LabelSelectorRequirementFieldPathBuilder {
	return LabelSelectorRequirementFieldPathBuilder{}
}
func (LabelSelectorRequirementFieldPathBuilder) Key() LabelSelectorRequirementPathSelectorKey {
	return LabelSelectorRequirementPathSelectorKey{}
}
func (LabelSelectorRequirementFieldPathBuilder) Operator() LabelSelectorRequirementPathSelectorOperator {
	return LabelSelectorRequirementPathSelectorOperator{}
}
func (LabelSelectorRequirementFieldPathBuilder) Values() LabelSelectorRequirementPathSelectorValues {
	return LabelSelectorRequirementPathSelectorValues{}
}

type LabelSelectorRequirementPathSelectorKey struct{}

func (LabelSelectorRequirementPathSelectorKey) FieldPath() *LabelSelectorRequirement_FieldTerminalPath {
	return &LabelSelectorRequirement_FieldTerminalPath{selector: LabelSelectorRequirement_FieldPathSelectorKey}
}

func (s LabelSelectorRequirementPathSelectorKey) WithValue(value string) *LabelSelectorRequirement_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*LabelSelectorRequirement_FieldTerminalPathValue)
}

func (s LabelSelectorRequirementPathSelectorKey) WithArrayOfValues(values []string) *LabelSelectorRequirement_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*LabelSelectorRequirement_FieldTerminalPathArrayOfValues)
}

type LabelSelectorRequirementPathSelectorOperator struct{}

func (LabelSelectorRequirementPathSelectorOperator) FieldPath() *LabelSelectorRequirement_FieldTerminalPath {
	return &LabelSelectorRequirement_FieldTerminalPath{selector: LabelSelectorRequirement_FieldPathSelectorOperator}
}

func (s LabelSelectorRequirementPathSelectorOperator) WithValue(value string) *LabelSelectorRequirement_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*LabelSelectorRequirement_FieldTerminalPathValue)
}

func (s LabelSelectorRequirementPathSelectorOperator) WithArrayOfValues(values []string) *LabelSelectorRequirement_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*LabelSelectorRequirement_FieldTerminalPathArrayOfValues)
}

type LabelSelectorRequirementPathSelectorValues struct{}

func (LabelSelectorRequirementPathSelectorValues) FieldPath() *LabelSelectorRequirement_FieldTerminalPath {
	return &LabelSelectorRequirement_FieldTerminalPath{selector: LabelSelectorRequirement_FieldPathSelectorValues}
}

func (s LabelSelectorRequirementPathSelectorValues) WithValue(value []string) *LabelSelectorRequirement_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*LabelSelectorRequirement_FieldTerminalPathValue)
}

func (s LabelSelectorRequirementPathSelectorValues) WithArrayOfValues(values [][]string) *LabelSelectorRequirement_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*LabelSelectorRequirement_FieldTerminalPathArrayOfValues)
}

func (s LabelSelectorRequirementPathSelectorValues) WithItemValue(value string) *LabelSelectorRequirement_FieldTerminalPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*LabelSelectorRequirement_FieldTerminalPathArrayItemValue)
}

type OwnerReferenceFieldPathBuilder struct{}

func NewOwnerReferenceFieldPathBuilder() OwnerReferenceFieldPathBuilder {
	return OwnerReferenceFieldPathBuilder{}
}
func (OwnerReferenceFieldPathBuilder) ApiVersion() OwnerReferencePathSelectorApiVersion {
	return OwnerReferencePathSelectorApiVersion{}
}
func (OwnerReferenceFieldPathBuilder) Kind() OwnerReferencePathSelectorKind {
	return OwnerReferencePathSelectorKind{}
}
func (OwnerReferenceFieldPathBuilder) Name() OwnerReferencePathSelectorName {
	return OwnerReferencePathSelectorName{}
}
func (OwnerReferenceFieldPathBuilder) Uid() OwnerReferencePathSelectorUid {
	return OwnerReferencePathSelectorUid{}
}
func (OwnerReferenceFieldPathBuilder) Controller() OwnerReferencePathSelectorController {
	return OwnerReferencePathSelectorController{}
}
func (OwnerReferenceFieldPathBuilder) BlockOwnerDeletion() OwnerReferencePathSelectorBlockOwnerDeletion {
	return OwnerReferencePathSelectorBlockOwnerDeletion{}
}

type OwnerReferencePathSelectorApiVersion struct{}

func (OwnerReferencePathSelectorApiVersion) FieldPath() *OwnerReference_FieldTerminalPath {
	return &OwnerReference_FieldTerminalPath{selector: OwnerReference_FieldPathSelectorApiVersion}
}

func (s OwnerReferencePathSelectorApiVersion) WithValue(value string) *OwnerReference_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*OwnerReference_FieldTerminalPathValue)
}

func (s OwnerReferencePathSelectorApiVersion) WithArrayOfValues(values []string) *OwnerReference_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*OwnerReference_FieldTerminalPathArrayOfValues)
}

type OwnerReferencePathSelectorKind struct{}

func (OwnerReferencePathSelectorKind) FieldPath() *OwnerReference_FieldTerminalPath {
	return &OwnerReference_FieldTerminalPath{selector: OwnerReference_FieldPathSelectorKind}
}

func (s OwnerReferencePathSelectorKind) WithValue(value string) *OwnerReference_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*OwnerReference_FieldTerminalPathValue)
}

func (s OwnerReferencePathSelectorKind) WithArrayOfValues(values []string) *OwnerReference_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*OwnerReference_FieldTerminalPathArrayOfValues)
}

type OwnerReferencePathSelectorName struct{}

func (OwnerReferencePathSelectorName) FieldPath() *OwnerReference_FieldTerminalPath {
	return &OwnerReference_FieldTerminalPath{selector: OwnerReference_FieldPathSelectorName}
}

func (s OwnerReferencePathSelectorName) WithValue(value string) *OwnerReference_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*OwnerReference_FieldTerminalPathValue)
}

func (s OwnerReferencePathSelectorName) WithArrayOfValues(values []string) *OwnerReference_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*OwnerReference_FieldTerminalPathArrayOfValues)
}

type OwnerReferencePathSelectorUid struct{}

func (OwnerReferencePathSelectorUid) FieldPath() *OwnerReference_FieldTerminalPath {
	return &OwnerReference_FieldTerminalPath{selector: OwnerReference_FieldPathSelectorUid}
}

func (s OwnerReferencePathSelectorUid) WithValue(value string) *OwnerReference_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*OwnerReference_FieldTerminalPathValue)
}

func (s OwnerReferencePathSelectorUid) WithArrayOfValues(values []string) *OwnerReference_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*OwnerReference_FieldTerminalPathArrayOfValues)
}

type OwnerReferencePathSelectorController struct{}

func (OwnerReferencePathSelectorController) FieldPath() *OwnerReference_FieldTerminalPath {
	return &OwnerReference_FieldTerminalPath{selector: OwnerReference_FieldPathSelectorController}
}

func (s OwnerReferencePathSelectorController) WithValue(value bool) *OwnerReference_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*OwnerReference_FieldTerminalPathValue)
}

func (s OwnerReferencePathSelectorController) WithArrayOfValues(values []bool) *OwnerReference_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*OwnerReference_FieldTerminalPathArrayOfValues)
}

type OwnerReferencePathSelectorBlockOwnerDeletion struct{}

func (OwnerReferencePathSelectorBlockOwnerDeletion) FieldPath() *OwnerReference_FieldTerminalPath {
	return &OwnerReference_FieldTerminalPath{selector: OwnerReference_FieldPathSelectorBlockOwnerDeletion}
}

func (s OwnerReferencePathSelectorBlockOwnerDeletion) WithValue(value bool) *OwnerReference_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*OwnerReference_FieldTerminalPathValue)
}

func (s OwnerReferencePathSelectorBlockOwnerDeletion) WithArrayOfValues(values []bool) *OwnerReference_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*OwnerReference_FieldTerminalPathArrayOfValues)
}

type SyncingMetaFieldPathBuilder struct{}

func NewSyncingMetaFieldPathBuilder() SyncingMetaFieldPathBuilder {
	return SyncingMetaFieldPathBuilder{}
}
func (SyncingMetaFieldPathBuilder) OwningRegion() SyncingMetaPathSelectorOwningRegion {
	return SyncingMetaPathSelectorOwningRegion{}
}
func (SyncingMetaFieldPathBuilder) Regions() SyncingMetaPathSelectorRegions {
	return SyncingMetaPathSelectorRegions{}
}

type SyncingMetaPathSelectorOwningRegion struct{}

func (SyncingMetaPathSelectorOwningRegion) FieldPath() *SyncingMeta_FieldTerminalPath {
	return &SyncingMeta_FieldTerminalPath{selector: SyncingMeta_FieldPathSelectorOwningRegion}
}

func (s SyncingMetaPathSelectorOwningRegion) WithValue(value string) *SyncingMeta_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*SyncingMeta_FieldTerminalPathValue)
}

func (s SyncingMetaPathSelectorOwningRegion) WithArrayOfValues(values []string) *SyncingMeta_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*SyncingMeta_FieldTerminalPathArrayOfValues)
}

type SyncingMetaPathSelectorRegions struct{}

func (SyncingMetaPathSelectorRegions) FieldPath() *SyncingMeta_FieldTerminalPath {
	return &SyncingMeta_FieldTerminalPath{selector: SyncingMeta_FieldPathSelectorRegions}
}

func (s SyncingMetaPathSelectorRegions) WithValue(value []string) *SyncingMeta_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*SyncingMeta_FieldTerminalPathValue)
}

func (s SyncingMetaPathSelectorRegions) WithArrayOfValues(values [][]string) *SyncingMeta_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*SyncingMeta_FieldTerminalPathArrayOfValues)
}

func (s SyncingMetaPathSelectorRegions) WithItemValue(value string) *SyncingMeta_FieldTerminalPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*SyncingMeta_FieldTerminalPathArrayItemValue)
}
