syntax = "proto3";

package ntt.iam.v1alpha;

import "edgelq-sdk/iam/proto/v1alpha/user.proto";

import "google/protobuf/field_mask.proto";

import "goten-sdk/runtime/api/view.proto";

option java_multiple_files = false;

option go_package = "github.com/cloudwan/edgelq-sdk/iam/client/v1alpha/user;user_client";

option java_package = "com.ntt.iam.pb.v1alpha";

option java_outer_classname = "UserCustomProto";

// Request message for method [GetUserByEmail][ntt.iam.v1alpha.GetUserByEmail]
message GetUserByEmailRequest {
  //  reference of ntt.iam.v1alpha.User
  string email = 1;

  // A list of extra fields to be obtained for each response item on top of
  // fields defined by request field view
  google.protobuf.FieldMask field_mask = 3;

  // View defines list of standard response fields present in response items.
  // Additional fields can be amended by request field field_mask
  goten.view.View view = 4;

  // If true, server will skip checking if query result is present in it's cache
  bool skip_cache = 5;
}

// Request message for method
// [BatchGetUsersByEmail][ntt.iam.v1alpha.BatchGetUsersByEmail]
message BatchGetUsersByEmailRequest {
  // Emails of users
  repeated string emails = 2;

  // A list of extra fields to be obtained for each response item on top of
  // fields defined by request field view
  google.protobuf.FieldMask field_mask = 3;

  // View defines list of standard response fields present in response items.
  // Additional fields can be amended by request field field_mask
  goten.view.View view = 4;

  // If true, server will skip checking if query result is present in it's cache
  bool skip_cache = 5;
}

// Response message for method
// [BatchGetUsersByEmail][ntt.iam.v1alpha.BatchGetUsersByEmail]
message BatchGetUsersByEmailResponse {
  // found Users
  repeated User users = 1;

  // list of not found user emails
  repeated string missing = 2;
}

// Request message for method
// [RefreshUserFromIdToken][ntt.iam.v1alpha.RefreshUserFromIdToken]
message RefreshUserFromIdTokenRequest {
  // JWT-encoded ID token
  string id_token = 1;
}

// Response message for method
// [RefreshUserFromIdToken][ntt.iam.v1alpha.RefreshUserFromIdToken]
message RefreshUserFromIdTokenResponse {}

message GetMySettingsRequest {
  // list of keys to retrieve
  repeated string keys = 1;
}

message GetMySettingsResponse {
  // resulting settings
  map<string, string> settings = 1;
}

message SetMySettingsRequest {
  // Settings to update. Leave empty value to unset key
  map<string, string> settings = 1;
}
