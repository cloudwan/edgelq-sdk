syntax = "proto3";

package ntt.iam.v1;

import "edgelq-sdk/iam/proto/v1/condition.proto";
import "edgelq-sdk/iam/proto/v1/role.proto";
import "edgelq-sdk/iam/proto/v1/role_binding.proto";
import "edgelq-sdk/iam/proto/v1/service_account.proto";
import "edgelq-sdk/iam/proto/v1/user.proto";
import "google/api/field_behavior.proto";
import "google/api/resource.proto";
import "google/protobuf/struct.proto";
import "google/protobuf/timestamp.proto";

option go_package = "github.com/cloudwan/edgelq-sdk/iam/resources/v1/invitation;iam_invitation";
option java_multiple_files = true;
option java_package = "com.ntt.iam.pb.v1";

// Actor is a party performing an action
message Actor {
  string user = 1;

  string service_account = 2;
}

// Common invitation body. It's used in Project/Organization Invitations
message Invitation {
  // Invitee Email address
  string invitee_email = 3;

  // Inviter User
  Actor inviter_actor = 6;

  // Denormalized data - TODO: remove it
  string inviter_full_name = 5;

  // Inviter Email
  string inviter_email = 10;

  // Invitation ISO language code. Defaults to "en-us" (American English).
  string language_code = 11;

  // List of role bindings for this invitation. They are used for creation
  // of proper RoleBinding resources.
  repeated BindingRole binding_roles = 13;

  // List of groups where invitee should join after accepting invitation
  repeated string groups = 14;

  // Expiration date
  google.protobuf.Timestamp expiration_date = 8;

  // Extra custom fields to further customize invitation experience.
  // Fields should be agreed between sender (usually UI) and documented in
  // the template of email service provider.
  map<string, string> extras = 12;

  // Status of Invitation
  State state = 9 [ (google.api.field_behavior) = OUTPUT_ONLY ];

  // BindingRole is used to create RoleBinding when invitation is accepted.
  message BindingRole {
    // Role to be granted
    string role = 1 [ (google.api.resource_reference) = {type : "Role"} ];

    // List of all applicable condition bindings to be applied when creating
    // RoleBinding.
    repeated ExecutableCondition executable_conditions = 2;

    // List of applicable scope params to be applied when creating RoleBinding.
    repeated ScopeParam scope_params = 3;
  }

  // Invitation FSM States
  enum State {
    STATE_UNSPECIFIED = 0;

    PENDING = 1;

    ACCEPTED = 2;

    DECLINED = 3;

    EXPIRED = 4;
  }

  reserved 7;
}
