syntax = "proto3";

package ntt.iam.v1;

import "edgelq-sdk/iam/proto/v1/organization.proto";
import "edgelq-sdk/iam/proto/v1/organization_change.proto";
import "google/protobuf/field_mask.proto";

option go_package = "github.com/cloudwan/edgelq-sdk/iam/client/v1/organization;organization_client";
option java_multiple_files = false;
option java_outer_classname = "OrganizationCustomProto";
option java_package = "com.ntt.iam.pb.v1";

// Request message for method
// [ListMyOrganizations][ntt.iam.v1.ListMyOrganizations]
message ListMyOrganizationsRequest {
  // Requested page size. Server may return fewer Organizations than requested.
  // If unspecified, server will pick an appropriate default.
  int32 page_size = 2;

  // A token identifying a page of results the server should return.
  // Typically, this is the value of
  // [ListOrganizationsResponse.next_page_token][ntt.iam.v1alpha2.ListOrganizationsResponse.next_page_token]
  string page_token = 3;

  // Order By -
  // https://cloud.google.com/apis/design/design_patterns#list_pagination list
  // of field path with order directive, either 'asc' or 'desc'. If direction is
  // not provided, 'asc' is assumed. e.g. "state.nested_field asc,
  // state.something.else desc, theme"
  string order_by = 4;

  // Filter - filter results by field criteria. Simplified SQL-like syntax with
  // following operators:
  // <=, >=, =, !=, <, >, LIKE, CONTAINS (aliases CONTAIN, HAS, HAVE), IN, IS
  // [NOT] NULL | NaN . Combine conditions with OR | AND example: 'meta.labels
  // CONTAINS "severity:important" OR (state.last_error_time >
  // "2018-11-15T10:00:00Z" AND state.status = "ERROR")'
  string filter = 5;

  // A FieldMask used to filter response fields. When present, only requested
  // fields will be present in each response item. Omitting field_mask results
  // will cause response items to contain all present fields.
  google.protobuf.FieldMask field_mask = 6;

  bool include_paging_info = 7;
}

// Response message for method
// [ListMyOrganizations][ntt.iam.v1.ListMyOrganizations]
message ListMyOrganizationsResponse {
  // The list of Organizations
  repeated Organization organizations = 1;

  // A token to retrieve previous page of results. Pass this value in the
  // [ListOrganizationsRequest.page_token][ntt.iam.v1alpha2.ListOrganizationsRequest.page_token]
  string prev_page_token = 3;

  // A token to retrieve next page of results. Pass this value in the
  // [ListOrganizationsRequest.page_token][ntt.iam.v1alpha2.ListOrganizationsRequest.page_token]
  string next_page_token = 4;

  int32 total_count = 5;

  int32 cursor_offset = 6;
}

// Request message for method
// [SearchMyOrganizations][ntt.iam.v1.SearchMyOrganizations]
message SearchMyOrganizationsRequest {
  // Requested page size. Server may return fewer Organizations than requested.
  // If unspecified, server will pick an appropriate default.
  int32 page_size = 2;

  // A token identifying a page of results the server should return.
  // Typically, this is the value of
  // [SearchOrganizationsResponse.next_page_token][ntt.iam.v1alpha2.SearchOrganizationsResponse.next_page_token]
  string page_token = 3;

  // Order By -
  // https://cloud.google.com/apis/design/design_patterns#list_pagination list
  // of field path with order directive, either 'asc' or 'desc'. If direction is
  // not provided, 'asc' is assumed. e.g. "state.nested_field asc,
  // state.something.else desc, theme"
  string order_by = 4;

  // Filter - filter results by field criteria. Simplified SQL-like syntax with
  // following operators:
  // <=, >=, =, !=, <, >, LIKE, CONTAINS (aliases CONTAIN, HAS, HAVE), IN, IS
  // [NOT] NULL | NaN . Combine conditions with OR | AND example: 'meta.labels
  // CONTAINS "severity:important" OR (state.last_error_time >
  // "2018-11-15T10:00:00Z" AND state.status = "ERROR")'
  string filter = 5;

  // A FieldMask used to filter response fields. When present, only requested
  // fields will be present in each response item. Omitting field_mask results
  // will cause response items to contain all present fields.
  google.protobuf.FieldMask field_mask = 6;

  bool include_paging_info = 7;

  string phrase = 8;
}

// Response message for method
// [SearchMyOrganizations][ntt.iam.v1.SearchMyOrganizations]
message SearchMyOrganizationsResponse {
  // The list of Organizations
  repeated Organization organizations = 1;

  // A token to retrieve previous page of results. Pass this value in the
  // [SearchOrganizationsRequest.page_token][ntt.iam.v1alpha2.SearchOrganizationsRequest.page_token]
  string prev_page_token = 3;

  // A token to retrieve next page of results. Pass this value in the
  // [SearchOrganizationsRequest.page_token][ntt.iam.v1alpha2.SearchOrganizationsRequest.page_token]
  string next_page_token = 4;

  int32 total_count = 5;

  int32 cursor_offset = 6;
}
