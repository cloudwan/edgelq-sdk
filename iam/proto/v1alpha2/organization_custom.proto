syntax = "proto3";

package ntt.iam.v1alpha2;

import "edgelq-sdk/iam/proto/v1alpha2/organization.proto";

import "edgelq-sdk/iam/proto/v1alpha2/organization_change.proto";

import "google/protobuf/field_mask.proto";

option java_package = "com.ntt.iam.pb.v1alpha2";

option java_outer_classname = "OrganizationCustomProto";

option java_multiple_files = false;

option go_package = "github.com/cloudwan/edgelq-sdk/iam/client/v1alpha2/organization;organization_client";

// Request message for method
// [ListMyOrganizations][ntt.iam.v1alpha2.ListMyOrganizations]
message ListMyOrganizationsRequest {
  // Filter - filter results by field criteria. Simplified SQL-like syntax with
  // following operators:
  // <=, >=, =, !=, <, >, LIKE, CONTAINS (aliases CONTAIN, HAS, HAVE), IN, IS
  // [NOT] NULL | NaN . Combine conditions with OR | AND example: 'meta.labels
  // CONTAINS "severity:important" OR (state.last_error_time >
  // "2018-11-15T10:00:00Z" AND state.status = "ERROR")'
  string filter = 5;

  // A FieldMask used to filter response fields. When present, only requested
  // fields will be present in each response item. Omitting field_mask results
  // will cause response items to contain all present fields.
  google.protobuf.FieldMask field_mask = 6;
}

// Response message for method
// [ListMyOrganizations][ntt.iam.v1alpha2.ListMyOrganizations]
message ListMyOrganizationsResponse {
  // The list of Organizations
  repeated Organization organizations = 1;
}
