// Code generated by protoc-gen-goten-object
// File: edgelq/iam/proto/v1alpha2/project_service.proto
// DO NOT EDIT!!!

package project_client

// proto imports
import (
	ntt_meta "github.com/cloudwan/edgelq-sdk/common/types/meta"
	multi_region_policy "github.com/cloudwan/edgelq-sdk/common/types/multi_region_policy"
	organization "github.com/cloudwan/edgelq-sdk/iam/resources/v1alpha2/organization"
	project "github.com/cloudwan/edgelq-sdk/iam/resources/v1alpha2/project"
	meta_service "github.com/cloudwan/edgelq-sdk/meta/resources/v1alpha2/service"
	view "github.com/cloudwan/goten-sdk/runtime/api/view"
	watch_type "github.com/cloudwan/goten-sdk/runtime/api/watch_type"
	empty "github.com/golang/protobuf/ptypes/empty"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	field_mask "google.golang.org/genproto/protobuf/field_mask"
)

// make sure we're using proto imports
var (
	_ = &ntt_meta.Meta{}
	_ = &multi_region_policy.MultiRegionPolicy{}
	_ = &organization.Organization{}
	_ = &project.Project{}
	_ = &meta_service.Service{}
	_ = &empty.Empty{}
	_ = &field_mask.FieldMask{}
	_ = &timestamp.Timestamp{}
	_ = view.View(0)
	_ = watch_type.WatchType(0)
)

type GetProjectRequestFieldPathBuilder struct{}

func NewGetProjectRequestFieldPathBuilder() GetProjectRequestFieldPathBuilder {
	return GetProjectRequestFieldPathBuilder{}
}
func (GetProjectRequestFieldPathBuilder) Name() GetProjectRequestPathSelectorName {
	return GetProjectRequestPathSelectorName{}
}
func (GetProjectRequestFieldPathBuilder) FieldMask() GetProjectRequestPathSelectorFieldMask {
	return GetProjectRequestPathSelectorFieldMask{}
}
func (GetProjectRequestFieldPathBuilder) View() GetProjectRequestPathSelectorView {
	return GetProjectRequestPathSelectorView{}
}

type GetProjectRequestPathSelectorName struct{}

func (GetProjectRequestPathSelectorName) FieldPath() *GetProjectRequest_FieldTerminalPath {
	return &GetProjectRequest_FieldTerminalPath{selector: GetProjectRequest_FieldPathSelectorName}
}

func (s GetProjectRequestPathSelectorName) WithValue(value *project.Reference) *GetProjectRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*GetProjectRequest_FieldTerminalPathValue)
}

func (s GetProjectRequestPathSelectorName) WithArrayOfValues(values []*project.Reference) *GetProjectRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*GetProjectRequest_FieldTerminalPathArrayOfValues)
}

type GetProjectRequestPathSelectorFieldMask struct{}

func (GetProjectRequestPathSelectorFieldMask) FieldPath() *GetProjectRequest_FieldTerminalPath {
	return &GetProjectRequest_FieldTerminalPath{selector: GetProjectRequest_FieldPathSelectorFieldMask}
}

func (s GetProjectRequestPathSelectorFieldMask) WithValue(value *project.Project_FieldMask) *GetProjectRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*GetProjectRequest_FieldTerminalPathValue)
}

func (s GetProjectRequestPathSelectorFieldMask) WithArrayOfValues(values []*project.Project_FieldMask) *GetProjectRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*GetProjectRequest_FieldTerminalPathArrayOfValues)
}

type GetProjectRequestPathSelectorView struct{}

func (GetProjectRequestPathSelectorView) FieldPath() *GetProjectRequest_FieldTerminalPath {
	return &GetProjectRequest_FieldTerminalPath{selector: GetProjectRequest_FieldPathSelectorView}
}

func (s GetProjectRequestPathSelectorView) WithValue(value view.View) *GetProjectRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*GetProjectRequest_FieldTerminalPathValue)
}

func (s GetProjectRequestPathSelectorView) WithArrayOfValues(values []view.View) *GetProjectRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*GetProjectRequest_FieldTerminalPathArrayOfValues)
}

type BatchGetProjectsRequestFieldPathBuilder struct{}

func NewBatchGetProjectsRequestFieldPathBuilder() BatchGetProjectsRequestFieldPathBuilder {
	return BatchGetProjectsRequestFieldPathBuilder{}
}
func (BatchGetProjectsRequestFieldPathBuilder) Names() BatchGetProjectsRequestPathSelectorNames {
	return BatchGetProjectsRequestPathSelectorNames{}
}
func (BatchGetProjectsRequestFieldPathBuilder) FieldMask() BatchGetProjectsRequestPathSelectorFieldMask {
	return BatchGetProjectsRequestPathSelectorFieldMask{}
}
func (BatchGetProjectsRequestFieldPathBuilder) View() BatchGetProjectsRequestPathSelectorView {
	return BatchGetProjectsRequestPathSelectorView{}
}

type BatchGetProjectsRequestPathSelectorNames struct{}

func (BatchGetProjectsRequestPathSelectorNames) FieldPath() *BatchGetProjectsRequest_FieldTerminalPath {
	return &BatchGetProjectsRequest_FieldTerminalPath{selector: BatchGetProjectsRequest_FieldPathSelectorNames}
}

func (s BatchGetProjectsRequestPathSelectorNames) WithValue(value []*project.Reference) *BatchGetProjectsRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetProjectsRequest_FieldTerminalPathValue)
}

func (s BatchGetProjectsRequestPathSelectorNames) WithArrayOfValues(values [][]*project.Reference) *BatchGetProjectsRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetProjectsRequest_FieldTerminalPathArrayOfValues)
}

func (s BatchGetProjectsRequestPathSelectorNames) WithItemValue(value *project.Reference) *BatchGetProjectsRequest_FieldTerminalPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*BatchGetProjectsRequest_FieldTerminalPathArrayItemValue)
}

type BatchGetProjectsRequestPathSelectorFieldMask struct{}

func (BatchGetProjectsRequestPathSelectorFieldMask) FieldPath() *BatchGetProjectsRequest_FieldTerminalPath {
	return &BatchGetProjectsRequest_FieldTerminalPath{selector: BatchGetProjectsRequest_FieldPathSelectorFieldMask}
}

func (s BatchGetProjectsRequestPathSelectorFieldMask) WithValue(value *project.Project_FieldMask) *BatchGetProjectsRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetProjectsRequest_FieldTerminalPathValue)
}

func (s BatchGetProjectsRequestPathSelectorFieldMask) WithArrayOfValues(values []*project.Project_FieldMask) *BatchGetProjectsRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetProjectsRequest_FieldTerminalPathArrayOfValues)
}

type BatchGetProjectsRequestPathSelectorView struct{}

func (BatchGetProjectsRequestPathSelectorView) FieldPath() *BatchGetProjectsRequest_FieldTerminalPath {
	return &BatchGetProjectsRequest_FieldTerminalPath{selector: BatchGetProjectsRequest_FieldPathSelectorView}
}

func (s BatchGetProjectsRequestPathSelectorView) WithValue(value view.View) *BatchGetProjectsRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetProjectsRequest_FieldTerminalPathValue)
}

func (s BatchGetProjectsRequestPathSelectorView) WithArrayOfValues(values []view.View) *BatchGetProjectsRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetProjectsRequest_FieldTerminalPathArrayOfValues)
}

type BatchGetProjectsResponseFieldPathBuilder struct{}

func NewBatchGetProjectsResponseFieldPathBuilder() BatchGetProjectsResponseFieldPathBuilder {
	return BatchGetProjectsResponseFieldPathBuilder{}
}
func (BatchGetProjectsResponseFieldPathBuilder) Projects() BatchGetProjectsResponsePathSelectorProjects {
	return BatchGetProjectsResponsePathSelectorProjects{}
}
func (BatchGetProjectsResponseFieldPathBuilder) Missing() BatchGetProjectsResponsePathSelectorMissing {
	return BatchGetProjectsResponsePathSelectorMissing{}
}

type BatchGetProjectsResponsePathSelectorProjects struct{}

func (BatchGetProjectsResponsePathSelectorProjects) FieldPath() *BatchGetProjectsResponse_FieldTerminalPath {
	return &BatchGetProjectsResponse_FieldTerminalPath{selector: BatchGetProjectsResponse_FieldPathSelectorProjects}
}

func (s BatchGetProjectsResponsePathSelectorProjects) WithValue(value []*project.Project) *BatchGetProjectsResponse_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetProjectsResponse_FieldTerminalPathValue)
}

func (s BatchGetProjectsResponsePathSelectorProjects) WithArrayOfValues(values [][]*project.Project) *BatchGetProjectsResponse_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetProjectsResponse_FieldTerminalPathArrayOfValues)
}

func (s BatchGetProjectsResponsePathSelectorProjects) WithItemValue(value *project.Project) *BatchGetProjectsResponse_FieldTerminalPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*BatchGetProjectsResponse_FieldTerminalPathArrayItemValue)
}
func (BatchGetProjectsResponsePathSelectorProjects) WithSubPath(subPath project.Project_FieldPath) *BatchGetProjectsResponse_FieldSubPath {
	return &BatchGetProjectsResponse_FieldSubPath{selector: BatchGetProjectsResponse_FieldPathSelectorProjects, subPath: subPath}
}

func (s BatchGetProjectsResponsePathSelectorProjects) WithSubValue(subPathValue project.Project_FieldPathValue) *BatchGetProjectsResponse_FieldSubPathValue {
	return &BatchGetProjectsResponse_FieldSubPathValue{BatchGetProjectsResponse_FieldPath: s.WithSubPath(subPathValue), subPathValue: subPathValue}
}

func (s BatchGetProjectsResponsePathSelectorProjects) WithSubArrayOfValues(subPathArrayOfValues project.Project_FieldPathArrayOfValues) *BatchGetProjectsResponse_FieldSubPathArrayOfValues {
	return &BatchGetProjectsResponse_FieldSubPathArrayOfValues{BatchGetProjectsResponse_FieldPath: s.WithSubPath(subPathArrayOfValues), subPathArrayOfValues: subPathArrayOfValues}
}

func (s BatchGetProjectsResponsePathSelectorProjects) WithSubArrayItemValue(subPathArrayItemValue project.Project_FieldPathArrayItemValue) *BatchGetProjectsResponse_FieldSubPathArrayItemValue {
	return &BatchGetProjectsResponse_FieldSubPathArrayItemValue{BatchGetProjectsResponse_FieldPath: s.WithSubPath(subPathArrayItemValue), subPathItemValue: subPathArrayItemValue}
}

func (BatchGetProjectsResponsePathSelectorProjects) Name() BatchGetProjectsResponsePathSelectorProjectsName {
	return BatchGetProjectsResponsePathSelectorProjectsName{}
}

func (BatchGetProjectsResponsePathSelectorProjects) Title() BatchGetProjectsResponsePathSelectorProjectsTitle {
	return BatchGetProjectsResponsePathSelectorProjectsTitle{}
}

func (BatchGetProjectsResponsePathSelectorProjects) ParentOrganization() BatchGetProjectsResponsePathSelectorProjectsParentOrganization {
	return BatchGetProjectsResponsePathSelectorProjectsParentOrganization{}
}

func (BatchGetProjectsResponsePathSelectorProjects) RootOrganization() BatchGetProjectsResponsePathSelectorProjectsRootOrganization {
	return BatchGetProjectsResponsePathSelectorProjectsRootOrganization{}
}

func (BatchGetProjectsResponsePathSelectorProjects) AncestryPath() BatchGetProjectsResponsePathSelectorProjectsAncestryPath {
	return BatchGetProjectsResponsePathSelectorProjectsAncestryPath{}
}

func (BatchGetProjectsResponsePathSelectorProjects) Metadata() BatchGetProjectsResponsePathSelectorProjectsMetadata {
	return BatchGetProjectsResponsePathSelectorProjectsMetadata{}
}

func (BatchGetProjectsResponsePathSelectorProjects) MultiRegionPolicy() BatchGetProjectsResponsePathSelectorProjectsMultiRegionPolicy {
	return BatchGetProjectsResponsePathSelectorProjectsMultiRegionPolicy{}
}

func (BatchGetProjectsResponsePathSelectorProjects) EnabledServices() BatchGetProjectsResponsePathSelectorProjectsEnabledServices {
	return BatchGetProjectsResponsePathSelectorProjectsEnabledServices{}
}

type BatchGetProjectsResponsePathSelectorProjectsName struct{}

func (BatchGetProjectsResponsePathSelectorProjectsName) FieldPath() *BatchGetProjectsResponse_FieldSubPath {
	return &BatchGetProjectsResponse_FieldSubPath{
		selector: BatchGetProjectsResponse_FieldPathSelectorProjects,
		subPath:  project.NewProjectFieldPathBuilder().Name().FieldPath(),
	}
}

func (s BatchGetProjectsResponsePathSelectorProjectsName) WithValue(value *project.Name) *BatchGetProjectsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetProjectsResponse_FieldSubPathValue)
}

func (s BatchGetProjectsResponsePathSelectorProjectsName) WithArrayOfValues(values []*project.Name) *BatchGetProjectsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetProjectsResponse_FieldSubPathArrayOfValues)
}

type BatchGetProjectsResponsePathSelectorProjectsTitle struct{}

func (BatchGetProjectsResponsePathSelectorProjectsTitle) FieldPath() *BatchGetProjectsResponse_FieldSubPath {
	return &BatchGetProjectsResponse_FieldSubPath{
		selector: BatchGetProjectsResponse_FieldPathSelectorProjects,
		subPath:  project.NewProjectFieldPathBuilder().Title().FieldPath(),
	}
}

func (s BatchGetProjectsResponsePathSelectorProjectsTitle) WithValue(value string) *BatchGetProjectsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetProjectsResponse_FieldSubPathValue)
}

func (s BatchGetProjectsResponsePathSelectorProjectsTitle) WithArrayOfValues(values []string) *BatchGetProjectsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetProjectsResponse_FieldSubPathArrayOfValues)
}

type BatchGetProjectsResponsePathSelectorProjectsParentOrganization struct{}

func (BatchGetProjectsResponsePathSelectorProjectsParentOrganization) FieldPath() *BatchGetProjectsResponse_FieldSubPath {
	return &BatchGetProjectsResponse_FieldSubPath{
		selector: BatchGetProjectsResponse_FieldPathSelectorProjects,
		subPath:  project.NewProjectFieldPathBuilder().ParentOrganization().FieldPath(),
	}
}

func (s BatchGetProjectsResponsePathSelectorProjectsParentOrganization) WithValue(value *organization.Reference) *BatchGetProjectsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetProjectsResponse_FieldSubPathValue)
}

func (s BatchGetProjectsResponsePathSelectorProjectsParentOrganization) WithArrayOfValues(values []*organization.Reference) *BatchGetProjectsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetProjectsResponse_FieldSubPathArrayOfValues)
}

type BatchGetProjectsResponsePathSelectorProjectsRootOrganization struct{}

func (BatchGetProjectsResponsePathSelectorProjectsRootOrganization) FieldPath() *BatchGetProjectsResponse_FieldSubPath {
	return &BatchGetProjectsResponse_FieldSubPath{
		selector: BatchGetProjectsResponse_FieldPathSelectorProjects,
		subPath:  project.NewProjectFieldPathBuilder().RootOrganization().FieldPath(),
	}
}

func (s BatchGetProjectsResponsePathSelectorProjectsRootOrganization) WithValue(value *organization.Reference) *BatchGetProjectsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetProjectsResponse_FieldSubPathValue)
}

func (s BatchGetProjectsResponsePathSelectorProjectsRootOrganization) WithArrayOfValues(values []*organization.Reference) *BatchGetProjectsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetProjectsResponse_FieldSubPathArrayOfValues)
}

type BatchGetProjectsResponsePathSelectorProjectsAncestryPath struct{}

func (BatchGetProjectsResponsePathSelectorProjectsAncestryPath) FieldPath() *BatchGetProjectsResponse_FieldSubPath {
	return &BatchGetProjectsResponse_FieldSubPath{
		selector: BatchGetProjectsResponse_FieldPathSelectorProjects,
		subPath:  project.NewProjectFieldPathBuilder().AncestryPath().FieldPath(),
	}
}

func (s BatchGetProjectsResponsePathSelectorProjectsAncestryPath) WithValue(value []*organization.Reference) *BatchGetProjectsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetProjectsResponse_FieldSubPathValue)
}

func (s BatchGetProjectsResponsePathSelectorProjectsAncestryPath) WithArrayOfValues(values [][]*organization.Reference) *BatchGetProjectsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetProjectsResponse_FieldSubPathArrayOfValues)
}

func (s BatchGetProjectsResponsePathSelectorProjectsAncestryPath) WithItemValue(value *organization.Reference) *BatchGetProjectsResponse_FieldSubPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*BatchGetProjectsResponse_FieldSubPathArrayItemValue)
}

type BatchGetProjectsResponsePathSelectorProjectsMetadata struct{}

func (BatchGetProjectsResponsePathSelectorProjectsMetadata) FieldPath() *BatchGetProjectsResponse_FieldSubPath {
	return &BatchGetProjectsResponse_FieldSubPath{
		selector: BatchGetProjectsResponse_FieldPathSelectorProjects,
		subPath:  project.NewProjectFieldPathBuilder().Metadata().FieldPath(),
	}
}

func (s BatchGetProjectsResponsePathSelectorProjectsMetadata) WithValue(value *ntt_meta.Meta) *BatchGetProjectsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetProjectsResponse_FieldSubPathValue)
}

func (s BatchGetProjectsResponsePathSelectorProjectsMetadata) WithArrayOfValues(values []*ntt_meta.Meta) *BatchGetProjectsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetProjectsResponse_FieldSubPathArrayOfValues)
}

func (BatchGetProjectsResponsePathSelectorProjectsMetadata) CreateTime() BatchGetProjectsResponsePathSelectorProjectsMetadataCreateTime {
	return BatchGetProjectsResponsePathSelectorProjectsMetadataCreateTime{}
}

func (BatchGetProjectsResponsePathSelectorProjectsMetadata) UpdateTime() BatchGetProjectsResponsePathSelectorProjectsMetadataUpdateTime {
	return BatchGetProjectsResponsePathSelectorProjectsMetadataUpdateTime{}
}

func (BatchGetProjectsResponsePathSelectorProjectsMetadata) Uuid() BatchGetProjectsResponsePathSelectorProjectsMetadataUuid {
	return BatchGetProjectsResponsePathSelectorProjectsMetadataUuid{}
}

func (BatchGetProjectsResponsePathSelectorProjectsMetadata) Tags() BatchGetProjectsResponsePathSelectorProjectsMetadataTags {
	return BatchGetProjectsResponsePathSelectorProjectsMetadataTags{}
}

func (BatchGetProjectsResponsePathSelectorProjectsMetadata) Labels() BatchGetProjectsResponsePathSelectorProjectsMetadataLabels {
	return BatchGetProjectsResponsePathSelectorProjectsMetadataLabels{}
}

func (BatchGetProjectsResponsePathSelectorProjectsMetadata) Annotations() BatchGetProjectsResponsePathSelectorProjectsMetadataAnnotations {
	return BatchGetProjectsResponsePathSelectorProjectsMetadataAnnotations{}
}

func (BatchGetProjectsResponsePathSelectorProjectsMetadata) Generation() BatchGetProjectsResponsePathSelectorProjectsMetadataGeneration {
	return BatchGetProjectsResponsePathSelectorProjectsMetadataGeneration{}
}

func (BatchGetProjectsResponsePathSelectorProjectsMetadata) ResourceVersion() BatchGetProjectsResponsePathSelectorProjectsMetadataResourceVersion {
	return BatchGetProjectsResponsePathSelectorProjectsMetadataResourceVersion{}
}

func (BatchGetProjectsResponsePathSelectorProjectsMetadata) OwnerReferences() BatchGetProjectsResponsePathSelectorProjectsMetadataOwnerReferences {
	return BatchGetProjectsResponsePathSelectorProjectsMetadataOwnerReferences{}
}

func (BatchGetProjectsResponsePathSelectorProjectsMetadata) Shards() BatchGetProjectsResponsePathSelectorProjectsMetadataShards {
	return BatchGetProjectsResponsePathSelectorProjectsMetadataShards{}
}

func (BatchGetProjectsResponsePathSelectorProjectsMetadata) Syncing() BatchGetProjectsResponsePathSelectorProjectsMetadataSyncing {
	return BatchGetProjectsResponsePathSelectorProjectsMetadataSyncing{}
}

type BatchGetProjectsResponsePathSelectorProjectsMetadataCreateTime struct{}

func (BatchGetProjectsResponsePathSelectorProjectsMetadataCreateTime) FieldPath() *BatchGetProjectsResponse_FieldSubPath {
	return &BatchGetProjectsResponse_FieldSubPath{
		selector: BatchGetProjectsResponse_FieldPathSelectorProjects,
		subPath:  project.NewProjectFieldPathBuilder().Metadata().CreateTime().FieldPath(),
	}
}

func (s BatchGetProjectsResponsePathSelectorProjectsMetadataCreateTime) WithValue(value *timestamp.Timestamp) *BatchGetProjectsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetProjectsResponse_FieldSubPathValue)
}

func (s BatchGetProjectsResponsePathSelectorProjectsMetadataCreateTime) WithArrayOfValues(values []*timestamp.Timestamp) *BatchGetProjectsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetProjectsResponse_FieldSubPathArrayOfValues)
}

type BatchGetProjectsResponsePathSelectorProjectsMetadataUpdateTime struct{}

func (BatchGetProjectsResponsePathSelectorProjectsMetadataUpdateTime) FieldPath() *BatchGetProjectsResponse_FieldSubPath {
	return &BatchGetProjectsResponse_FieldSubPath{
		selector: BatchGetProjectsResponse_FieldPathSelectorProjects,
		subPath:  project.NewProjectFieldPathBuilder().Metadata().UpdateTime().FieldPath(),
	}
}

func (s BatchGetProjectsResponsePathSelectorProjectsMetadataUpdateTime) WithValue(value *timestamp.Timestamp) *BatchGetProjectsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetProjectsResponse_FieldSubPathValue)
}

func (s BatchGetProjectsResponsePathSelectorProjectsMetadataUpdateTime) WithArrayOfValues(values []*timestamp.Timestamp) *BatchGetProjectsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetProjectsResponse_FieldSubPathArrayOfValues)
}

type BatchGetProjectsResponsePathSelectorProjectsMetadataUuid struct{}

func (BatchGetProjectsResponsePathSelectorProjectsMetadataUuid) FieldPath() *BatchGetProjectsResponse_FieldSubPath {
	return &BatchGetProjectsResponse_FieldSubPath{
		selector: BatchGetProjectsResponse_FieldPathSelectorProjects,
		subPath:  project.NewProjectFieldPathBuilder().Metadata().Uuid().FieldPath(),
	}
}

func (s BatchGetProjectsResponsePathSelectorProjectsMetadataUuid) WithValue(value string) *BatchGetProjectsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetProjectsResponse_FieldSubPathValue)
}

func (s BatchGetProjectsResponsePathSelectorProjectsMetadataUuid) WithArrayOfValues(values []string) *BatchGetProjectsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetProjectsResponse_FieldSubPathArrayOfValues)
}

type BatchGetProjectsResponsePathSelectorProjectsMetadataTags struct{}

func (BatchGetProjectsResponsePathSelectorProjectsMetadataTags) FieldPath() *BatchGetProjectsResponse_FieldSubPath {
	return &BatchGetProjectsResponse_FieldSubPath{
		selector: BatchGetProjectsResponse_FieldPathSelectorProjects,
		subPath:  project.NewProjectFieldPathBuilder().Metadata().Tags().FieldPath(),
	}
}

func (s BatchGetProjectsResponsePathSelectorProjectsMetadataTags) WithValue(value []string) *BatchGetProjectsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetProjectsResponse_FieldSubPathValue)
}

func (s BatchGetProjectsResponsePathSelectorProjectsMetadataTags) WithArrayOfValues(values [][]string) *BatchGetProjectsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetProjectsResponse_FieldSubPathArrayOfValues)
}

func (s BatchGetProjectsResponsePathSelectorProjectsMetadataTags) WithItemValue(value string) *BatchGetProjectsResponse_FieldSubPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*BatchGetProjectsResponse_FieldSubPathArrayItemValue)
}

type BatchGetProjectsResponsePathSelectorProjectsMetadataLabels struct{}

func (BatchGetProjectsResponsePathSelectorProjectsMetadataLabels) FieldPath() *BatchGetProjectsResponse_FieldSubPath {
	return &BatchGetProjectsResponse_FieldSubPath{
		selector: BatchGetProjectsResponse_FieldPathSelectorProjects,
		subPath:  project.NewProjectFieldPathBuilder().Metadata().Labels().FieldPath(),
	}
}

func (s BatchGetProjectsResponsePathSelectorProjectsMetadataLabels) WithValue(value map[string]string) *BatchGetProjectsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetProjectsResponse_FieldSubPathValue)
}

func (s BatchGetProjectsResponsePathSelectorProjectsMetadataLabels) WithArrayOfValues(values []map[string]string) *BatchGetProjectsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetProjectsResponse_FieldSubPathArrayOfValues)
}

func (BatchGetProjectsResponsePathSelectorProjectsMetadataLabels) WithKey(key string) BatchGetProjectsResponseMapPathSelectorProjectsMetadataLabels {
	return BatchGetProjectsResponseMapPathSelectorProjectsMetadataLabels{key: key}
}

type BatchGetProjectsResponseMapPathSelectorProjectsMetadataLabels struct {
	key string
}

func (s BatchGetProjectsResponseMapPathSelectorProjectsMetadataLabels) FieldPath() *BatchGetProjectsResponse_FieldSubPath {
	return &BatchGetProjectsResponse_FieldSubPath{
		selector: BatchGetProjectsResponse_FieldPathSelectorProjects,
		subPath:  project.NewProjectFieldPathBuilder().Metadata().Labels().WithKey(s.key).FieldPath(),
	}
}

func (s BatchGetProjectsResponseMapPathSelectorProjectsMetadataLabels) WithValue(value string) *BatchGetProjectsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetProjectsResponse_FieldSubPathValue)
}

func (s BatchGetProjectsResponseMapPathSelectorProjectsMetadataLabels) WithArrayOfValues(values []string) *BatchGetProjectsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetProjectsResponse_FieldSubPathArrayOfValues)
}

type BatchGetProjectsResponsePathSelectorProjectsMetadataAnnotations struct{}

func (BatchGetProjectsResponsePathSelectorProjectsMetadataAnnotations) FieldPath() *BatchGetProjectsResponse_FieldSubPath {
	return &BatchGetProjectsResponse_FieldSubPath{
		selector: BatchGetProjectsResponse_FieldPathSelectorProjects,
		subPath:  project.NewProjectFieldPathBuilder().Metadata().Annotations().FieldPath(),
	}
}

func (s BatchGetProjectsResponsePathSelectorProjectsMetadataAnnotations) WithValue(value map[string]string) *BatchGetProjectsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetProjectsResponse_FieldSubPathValue)
}

func (s BatchGetProjectsResponsePathSelectorProjectsMetadataAnnotations) WithArrayOfValues(values []map[string]string) *BatchGetProjectsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetProjectsResponse_FieldSubPathArrayOfValues)
}

func (BatchGetProjectsResponsePathSelectorProjectsMetadataAnnotations) WithKey(key string) BatchGetProjectsResponseMapPathSelectorProjectsMetadataAnnotations {
	return BatchGetProjectsResponseMapPathSelectorProjectsMetadataAnnotations{key: key}
}

type BatchGetProjectsResponseMapPathSelectorProjectsMetadataAnnotations struct {
	key string
}

func (s BatchGetProjectsResponseMapPathSelectorProjectsMetadataAnnotations) FieldPath() *BatchGetProjectsResponse_FieldSubPath {
	return &BatchGetProjectsResponse_FieldSubPath{
		selector: BatchGetProjectsResponse_FieldPathSelectorProjects,
		subPath:  project.NewProjectFieldPathBuilder().Metadata().Annotations().WithKey(s.key).FieldPath(),
	}
}

func (s BatchGetProjectsResponseMapPathSelectorProjectsMetadataAnnotations) WithValue(value string) *BatchGetProjectsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetProjectsResponse_FieldSubPathValue)
}

func (s BatchGetProjectsResponseMapPathSelectorProjectsMetadataAnnotations) WithArrayOfValues(values []string) *BatchGetProjectsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetProjectsResponse_FieldSubPathArrayOfValues)
}

type BatchGetProjectsResponsePathSelectorProjectsMetadataGeneration struct{}

func (BatchGetProjectsResponsePathSelectorProjectsMetadataGeneration) FieldPath() *BatchGetProjectsResponse_FieldSubPath {
	return &BatchGetProjectsResponse_FieldSubPath{
		selector: BatchGetProjectsResponse_FieldPathSelectorProjects,
		subPath:  project.NewProjectFieldPathBuilder().Metadata().Generation().FieldPath(),
	}
}

func (s BatchGetProjectsResponsePathSelectorProjectsMetadataGeneration) WithValue(value int64) *BatchGetProjectsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetProjectsResponse_FieldSubPathValue)
}

func (s BatchGetProjectsResponsePathSelectorProjectsMetadataGeneration) WithArrayOfValues(values []int64) *BatchGetProjectsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetProjectsResponse_FieldSubPathArrayOfValues)
}

type BatchGetProjectsResponsePathSelectorProjectsMetadataResourceVersion struct{}

func (BatchGetProjectsResponsePathSelectorProjectsMetadataResourceVersion) FieldPath() *BatchGetProjectsResponse_FieldSubPath {
	return &BatchGetProjectsResponse_FieldSubPath{
		selector: BatchGetProjectsResponse_FieldPathSelectorProjects,
		subPath:  project.NewProjectFieldPathBuilder().Metadata().ResourceVersion().FieldPath(),
	}
}

func (s BatchGetProjectsResponsePathSelectorProjectsMetadataResourceVersion) WithValue(value string) *BatchGetProjectsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetProjectsResponse_FieldSubPathValue)
}

func (s BatchGetProjectsResponsePathSelectorProjectsMetadataResourceVersion) WithArrayOfValues(values []string) *BatchGetProjectsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetProjectsResponse_FieldSubPathArrayOfValues)
}

type BatchGetProjectsResponsePathSelectorProjectsMetadataOwnerReferences struct{}

func (BatchGetProjectsResponsePathSelectorProjectsMetadataOwnerReferences) FieldPath() *BatchGetProjectsResponse_FieldSubPath {
	return &BatchGetProjectsResponse_FieldSubPath{
		selector: BatchGetProjectsResponse_FieldPathSelectorProjects,
		subPath:  project.NewProjectFieldPathBuilder().Metadata().OwnerReferences().FieldPath(),
	}
}

func (s BatchGetProjectsResponsePathSelectorProjectsMetadataOwnerReferences) WithValue(value []*ntt_meta.OwnerReference) *BatchGetProjectsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetProjectsResponse_FieldSubPathValue)
}

func (s BatchGetProjectsResponsePathSelectorProjectsMetadataOwnerReferences) WithArrayOfValues(values [][]*ntt_meta.OwnerReference) *BatchGetProjectsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetProjectsResponse_FieldSubPathArrayOfValues)
}

func (s BatchGetProjectsResponsePathSelectorProjectsMetadataOwnerReferences) WithItemValue(value *ntt_meta.OwnerReference) *BatchGetProjectsResponse_FieldSubPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*BatchGetProjectsResponse_FieldSubPathArrayItemValue)
}

func (BatchGetProjectsResponsePathSelectorProjectsMetadataOwnerReferences) ApiVersion() BatchGetProjectsResponsePathSelectorProjectsMetadataOwnerReferencesApiVersion {
	return BatchGetProjectsResponsePathSelectorProjectsMetadataOwnerReferencesApiVersion{}
}

func (BatchGetProjectsResponsePathSelectorProjectsMetadataOwnerReferences) Kind() BatchGetProjectsResponsePathSelectorProjectsMetadataOwnerReferencesKind {
	return BatchGetProjectsResponsePathSelectorProjectsMetadataOwnerReferencesKind{}
}

func (BatchGetProjectsResponsePathSelectorProjectsMetadataOwnerReferences) Name() BatchGetProjectsResponsePathSelectorProjectsMetadataOwnerReferencesName {
	return BatchGetProjectsResponsePathSelectorProjectsMetadataOwnerReferencesName{}
}

func (BatchGetProjectsResponsePathSelectorProjectsMetadataOwnerReferences) Uid() BatchGetProjectsResponsePathSelectorProjectsMetadataOwnerReferencesUid {
	return BatchGetProjectsResponsePathSelectorProjectsMetadataOwnerReferencesUid{}
}

func (BatchGetProjectsResponsePathSelectorProjectsMetadataOwnerReferences) Controller() BatchGetProjectsResponsePathSelectorProjectsMetadataOwnerReferencesController {
	return BatchGetProjectsResponsePathSelectorProjectsMetadataOwnerReferencesController{}
}

func (BatchGetProjectsResponsePathSelectorProjectsMetadataOwnerReferences) BlockOwnerDeletion() BatchGetProjectsResponsePathSelectorProjectsMetadataOwnerReferencesBlockOwnerDeletion {
	return BatchGetProjectsResponsePathSelectorProjectsMetadataOwnerReferencesBlockOwnerDeletion{}
}

type BatchGetProjectsResponsePathSelectorProjectsMetadataOwnerReferencesApiVersion struct{}

func (BatchGetProjectsResponsePathSelectorProjectsMetadataOwnerReferencesApiVersion) FieldPath() *BatchGetProjectsResponse_FieldSubPath {
	return &BatchGetProjectsResponse_FieldSubPath{
		selector: BatchGetProjectsResponse_FieldPathSelectorProjects,
		subPath:  project.NewProjectFieldPathBuilder().Metadata().OwnerReferences().ApiVersion().FieldPath(),
	}
}

func (s BatchGetProjectsResponsePathSelectorProjectsMetadataOwnerReferencesApiVersion) WithValue(value string) *BatchGetProjectsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetProjectsResponse_FieldSubPathValue)
}

func (s BatchGetProjectsResponsePathSelectorProjectsMetadataOwnerReferencesApiVersion) WithArrayOfValues(values []string) *BatchGetProjectsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetProjectsResponse_FieldSubPathArrayOfValues)
}

type BatchGetProjectsResponsePathSelectorProjectsMetadataOwnerReferencesKind struct{}

func (BatchGetProjectsResponsePathSelectorProjectsMetadataOwnerReferencesKind) FieldPath() *BatchGetProjectsResponse_FieldSubPath {
	return &BatchGetProjectsResponse_FieldSubPath{
		selector: BatchGetProjectsResponse_FieldPathSelectorProjects,
		subPath:  project.NewProjectFieldPathBuilder().Metadata().OwnerReferences().Kind().FieldPath(),
	}
}

func (s BatchGetProjectsResponsePathSelectorProjectsMetadataOwnerReferencesKind) WithValue(value string) *BatchGetProjectsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetProjectsResponse_FieldSubPathValue)
}

func (s BatchGetProjectsResponsePathSelectorProjectsMetadataOwnerReferencesKind) WithArrayOfValues(values []string) *BatchGetProjectsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetProjectsResponse_FieldSubPathArrayOfValues)
}

type BatchGetProjectsResponsePathSelectorProjectsMetadataOwnerReferencesName struct{}

func (BatchGetProjectsResponsePathSelectorProjectsMetadataOwnerReferencesName) FieldPath() *BatchGetProjectsResponse_FieldSubPath {
	return &BatchGetProjectsResponse_FieldSubPath{
		selector: BatchGetProjectsResponse_FieldPathSelectorProjects,
		subPath:  project.NewProjectFieldPathBuilder().Metadata().OwnerReferences().Name().FieldPath(),
	}
}

func (s BatchGetProjectsResponsePathSelectorProjectsMetadataOwnerReferencesName) WithValue(value string) *BatchGetProjectsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetProjectsResponse_FieldSubPathValue)
}

func (s BatchGetProjectsResponsePathSelectorProjectsMetadataOwnerReferencesName) WithArrayOfValues(values []string) *BatchGetProjectsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetProjectsResponse_FieldSubPathArrayOfValues)
}

type BatchGetProjectsResponsePathSelectorProjectsMetadataOwnerReferencesUid struct{}

func (BatchGetProjectsResponsePathSelectorProjectsMetadataOwnerReferencesUid) FieldPath() *BatchGetProjectsResponse_FieldSubPath {
	return &BatchGetProjectsResponse_FieldSubPath{
		selector: BatchGetProjectsResponse_FieldPathSelectorProjects,
		subPath:  project.NewProjectFieldPathBuilder().Metadata().OwnerReferences().Uid().FieldPath(),
	}
}

func (s BatchGetProjectsResponsePathSelectorProjectsMetadataOwnerReferencesUid) WithValue(value string) *BatchGetProjectsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetProjectsResponse_FieldSubPathValue)
}

func (s BatchGetProjectsResponsePathSelectorProjectsMetadataOwnerReferencesUid) WithArrayOfValues(values []string) *BatchGetProjectsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetProjectsResponse_FieldSubPathArrayOfValues)
}

type BatchGetProjectsResponsePathSelectorProjectsMetadataOwnerReferencesController struct{}

func (BatchGetProjectsResponsePathSelectorProjectsMetadataOwnerReferencesController) FieldPath() *BatchGetProjectsResponse_FieldSubPath {
	return &BatchGetProjectsResponse_FieldSubPath{
		selector: BatchGetProjectsResponse_FieldPathSelectorProjects,
		subPath:  project.NewProjectFieldPathBuilder().Metadata().OwnerReferences().Controller().FieldPath(),
	}
}

func (s BatchGetProjectsResponsePathSelectorProjectsMetadataOwnerReferencesController) WithValue(value bool) *BatchGetProjectsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetProjectsResponse_FieldSubPathValue)
}

func (s BatchGetProjectsResponsePathSelectorProjectsMetadataOwnerReferencesController) WithArrayOfValues(values []bool) *BatchGetProjectsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetProjectsResponse_FieldSubPathArrayOfValues)
}

type BatchGetProjectsResponsePathSelectorProjectsMetadataOwnerReferencesBlockOwnerDeletion struct{}

func (BatchGetProjectsResponsePathSelectorProjectsMetadataOwnerReferencesBlockOwnerDeletion) FieldPath() *BatchGetProjectsResponse_FieldSubPath {
	return &BatchGetProjectsResponse_FieldSubPath{
		selector: BatchGetProjectsResponse_FieldPathSelectorProjects,
		subPath:  project.NewProjectFieldPathBuilder().Metadata().OwnerReferences().BlockOwnerDeletion().FieldPath(),
	}
}

func (s BatchGetProjectsResponsePathSelectorProjectsMetadataOwnerReferencesBlockOwnerDeletion) WithValue(value bool) *BatchGetProjectsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetProjectsResponse_FieldSubPathValue)
}

func (s BatchGetProjectsResponsePathSelectorProjectsMetadataOwnerReferencesBlockOwnerDeletion) WithArrayOfValues(values []bool) *BatchGetProjectsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetProjectsResponse_FieldSubPathArrayOfValues)
}

type BatchGetProjectsResponsePathSelectorProjectsMetadataShards struct{}

func (BatchGetProjectsResponsePathSelectorProjectsMetadataShards) FieldPath() *BatchGetProjectsResponse_FieldSubPath {
	return &BatchGetProjectsResponse_FieldSubPath{
		selector: BatchGetProjectsResponse_FieldPathSelectorProjects,
		subPath:  project.NewProjectFieldPathBuilder().Metadata().Shards().FieldPath(),
	}
}

func (s BatchGetProjectsResponsePathSelectorProjectsMetadataShards) WithValue(value map[string]int64) *BatchGetProjectsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetProjectsResponse_FieldSubPathValue)
}

func (s BatchGetProjectsResponsePathSelectorProjectsMetadataShards) WithArrayOfValues(values []map[string]int64) *BatchGetProjectsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetProjectsResponse_FieldSubPathArrayOfValues)
}

func (BatchGetProjectsResponsePathSelectorProjectsMetadataShards) WithKey(key string) BatchGetProjectsResponseMapPathSelectorProjectsMetadataShards {
	return BatchGetProjectsResponseMapPathSelectorProjectsMetadataShards{key: key}
}

type BatchGetProjectsResponseMapPathSelectorProjectsMetadataShards struct {
	key string
}

func (s BatchGetProjectsResponseMapPathSelectorProjectsMetadataShards) FieldPath() *BatchGetProjectsResponse_FieldSubPath {
	return &BatchGetProjectsResponse_FieldSubPath{
		selector: BatchGetProjectsResponse_FieldPathSelectorProjects,
		subPath:  project.NewProjectFieldPathBuilder().Metadata().Shards().WithKey(s.key).FieldPath(),
	}
}

func (s BatchGetProjectsResponseMapPathSelectorProjectsMetadataShards) WithValue(value int64) *BatchGetProjectsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetProjectsResponse_FieldSubPathValue)
}

func (s BatchGetProjectsResponseMapPathSelectorProjectsMetadataShards) WithArrayOfValues(values []int64) *BatchGetProjectsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetProjectsResponse_FieldSubPathArrayOfValues)
}

type BatchGetProjectsResponsePathSelectorProjectsMetadataSyncing struct{}

func (BatchGetProjectsResponsePathSelectorProjectsMetadataSyncing) FieldPath() *BatchGetProjectsResponse_FieldSubPath {
	return &BatchGetProjectsResponse_FieldSubPath{
		selector: BatchGetProjectsResponse_FieldPathSelectorProjects,
		subPath:  project.NewProjectFieldPathBuilder().Metadata().Syncing().FieldPath(),
	}
}

func (s BatchGetProjectsResponsePathSelectorProjectsMetadataSyncing) WithValue(value *ntt_meta.SyncingMeta) *BatchGetProjectsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetProjectsResponse_FieldSubPathValue)
}

func (s BatchGetProjectsResponsePathSelectorProjectsMetadataSyncing) WithArrayOfValues(values []*ntt_meta.SyncingMeta) *BatchGetProjectsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetProjectsResponse_FieldSubPathArrayOfValues)
}

func (BatchGetProjectsResponsePathSelectorProjectsMetadataSyncing) OwningRegion() BatchGetProjectsResponsePathSelectorProjectsMetadataSyncingOwningRegion {
	return BatchGetProjectsResponsePathSelectorProjectsMetadataSyncingOwningRegion{}
}

func (BatchGetProjectsResponsePathSelectorProjectsMetadataSyncing) Regions() BatchGetProjectsResponsePathSelectorProjectsMetadataSyncingRegions {
	return BatchGetProjectsResponsePathSelectorProjectsMetadataSyncingRegions{}
}

type BatchGetProjectsResponsePathSelectorProjectsMetadataSyncingOwningRegion struct{}

func (BatchGetProjectsResponsePathSelectorProjectsMetadataSyncingOwningRegion) FieldPath() *BatchGetProjectsResponse_FieldSubPath {
	return &BatchGetProjectsResponse_FieldSubPath{
		selector: BatchGetProjectsResponse_FieldPathSelectorProjects,
		subPath:  project.NewProjectFieldPathBuilder().Metadata().Syncing().OwningRegion().FieldPath(),
	}
}

func (s BatchGetProjectsResponsePathSelectorProjectsMetadataSyncingOwningRegion) WithValue(value string) *BatchGetProjectsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetProjectsResponse_FieldSubPathValue)
}

func (s BatchGetProjectsResponsePathSelectorProjectsMetadataSyncingOwningRegion) WithArrayOfValues(values []string) *BatchGetProjectsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetProjectsResponse_FieldSubPathArrayOfValues)
}

type BatchGetProjectsResponsePathSelectorProjectsMetadataSyncingRegions struct{}

func (BatchGetProjectsResponsePathSelectorProjectsMetadataSyncingRegions) FieldPath() *BatchGetProjectsResponse_FieldSubPath {
	return &BatchGetProjectsResponse_FieldSubPath{
		selector: BatchGetProjectsResponse_FieldPathSelectorProjects,
		subPath:  project.NewProjectFieldPathBuilder().Metadata().Syncing().Regions().FieldPath(),
	}
}

func (s BatchGetProjectsResponsePathSelectorProjectsMetadataSyncingRegions) WithValue(value []string) *BatchGetProjectsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetProjectsResponse_FieldSubPathValue)
}

func (s BatchGetProjectsResponsePathSelectorProjectsMetadataSyncingRegions) WithArrayOfValues(values [][]string) *BatchGetProjectsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetProjectsResponse_FieldSubPathArrayOfValues)
}

func (s BatchGetProjectsResponsePathSelectorProjectsMetadataSyncingRegions) WithItemValue(value string) *BatchGetProjectsResponse_FieldSubPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*BatchGetProjectsResponse_FieldSubPathArrayItemValue)
}

type BatchGetProjectsResponsePathSelectorProjectsMultiRegionPolicy struct{}

func (BatchGetProjectsResponsePathSelectorProjectsMultiRegionPolicy) FieldPath() *BatchGetProjectsResponse_FieldSubPath {
	return &BatchGetProjectsResponse_FieldSubPath{
		selector: BatchGetProjectsResponse_FieldPathSelectorProjects,
		subPath:  project.NewProjectFieldPathBuilder().MultiRegionPolicy().FieldPath(),
	}
}

func (s BatchGetProjectsResponsePathSelectorProjectsMultiRegionPolicy) WithValue(value *multi_region_policy.MultiRegionPolicy) *BatchGetProjectsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetProjectsResponse_FieldSubPathValue)
}

func (s BatchGetProjectsResponsePathSelectorProjectsMultiRegionPolicy) WithArrayOfValues(values []*multi_region_policy.MultiRegionPolicy) *BatchGetProjectsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetProjectsResponse_FieldSubPathArrayOfValues)
}

func (BatchGetProjectsResponsePathSelectorProjectsMultiRegionPolicy) EnabledRegions() BatchGetProjectsResponsePathSelectorProjectsMultiRegionPolicyEnabledRegions {
	return BatchGetProjectsResponsePathSelectorProjectsMultiRegionPolicyEnabledRegions{}
}

func (BatchGetProjectsResponsePathSelectorProjectsMultiRegionPolicy) DefaultControlRegion() BatchGetProjectsResponsePathSelectorProjectsMultiRegionPolicyDefaultControlRegion {
	return BatchGetProjectsResponsePathSelectorProjectsMultiRegionPolicyDefaultControlRegion{}
}

func (BatchGetProjectsResponsePathSelectorProjectsMultiRegionPolicy) CriteriaForDisabledSync() BatchGetProjectsResponsePathSelectorProjectsMultiRegionPolicyCriteriaForDisabledSync {
	return BatchGetProjectsResponsePathSelectorProjectsMultiRegionPolicyCriteriaForDisabledSync{}
}

type BatchGetProjectsResponsePathSelectorProjectsMultiRegionPolicyEnabledRegions struct{}

func (BatchGetProjectsResponsePathSelectorProjectsMultiRegionPolicyEnabledRegions) FieldPath() *BatchGetProjectsResponse_FieldSubPath {
	return &BatchGetProjectsResponse_FieldSubPath{
		selector: BatchGetProjectsResponse_FieldPathSelectorProjects,
		subPath:  project.NewProjectFieldPathBuilder().MultiRegionPolicy().EnabledRegions().FieldPath(),
	}
}

func (s BatchGetProjectsResponsePathSelectorProjectsMultiRegionPolicyEnabledRegions) WithValue(value []string) *BatchGetProjectsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetProjectsResponse_FieldSubPathValue)
}

func (s BatchGetProjectsResponsePathSelectorProjectsMultiRegionPolicyEnabledRegions) WithArrayOfValues(values [][]string) *BatchGetProjectsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetProjectsResponse_FieldSubPathArrayOfValues)
}

func (s BatchGetProjectsResponsePathSelectorProjectsMultiRegionPolicyEnabledRegions) WithItemValue(value string) *BatchGetProjectsResponse_FieldSubPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*BatchGetProjectsResponse_FieldSubPathArrayItemValue)
}

type BatchGetProjectsResponsePathSelectorProjectsMultiRegionPolicyDefaultControlRegion struct{}

func (BatchGetProjectsResponsePathSelectorProjectsMultiRegionPolicyDefaultControlRegion) FieldPath() *BatchGetProjectsResponse_FieldSubPath {
	return &BatchGetProjectsResponse_FieldSubPath{
		selector: BatchGetProjectsResponse_FieldPathSelectorProjects,
		subPath:  project.NewProjectFieldPathBuilder().MultiRegionPolicy().DefaultControlRegion().FieldPath(),
	}
}

func (s BatchGetProjectsResponsePathSelectorProjectsMultiRegionPolicyDefaultControlRegion) WithValue(value string) *BatchGetProjectsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetProjectsResponse_FieldSubPathValue)
}

func (s BatchGetProjectsResponsePathSelectorProjectsMultiRegionPolicyDefaultControlRegion) WithArrayOfValues(values []string) *BatchGetProjectsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetProjectsResponse_FieldSubPathArrayOfValues)
}

type BatchGetProjectsResponsePathSelectorProjectsMultiRegionPolicyCriteriaForDisabledSync struct{}

func (BatchGetProjectsResponsePathSelectorProjectsMultiRegionPolicyCriteriaForDisabledSync) FieldPath() *BatchGetProjectsResponse_FieldSubPath {
	return &BatchGetProjectsResponse_FieldSubPath{
		selector: BatchGetProjectsResponse_FieldPathSelectorProjects,
		subPath:  project.NewProjectFieldPathBuilder().MultiRegionPolicy().CriteriaForDisabledSync().FieldPath(),
	}
}

func (s BatchGetProjectsResponsePathSelectorProjectsMultiRegionPolicyCriteriaForDisabledSync) WithValue(value []*multi_region_policy.MultiRegionPolicy_CriteriaForDisabledSync) *BatchGetProjectsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetProjectsResponse_FieldSubPathValue)
}

func (s BatchGetProjectsResponsePathSelectorProjectsMultiRegionPolicyCriteriaForDisabledSync) WithArrayOfValues(values [][]*multi_region_policy.MultiRegionPolicy_CriteriaForDisabledSync) *BatchGetProjectsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetProjectsResponse_FieldSubPathArrayOfValues)
}

func (s BatchGetProjectsResponsePathSelectorProjectsMultiRegionPolicyCriteriaForDisabledSync) WithItemValue(value *multi_region_policy.MultiRegionPolicy_CriteriaForDisabledSync) *BatchGetProjectsResponse_FieldSubPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*BatchGetProjectsResponse_FieldSubPathArrayItemValue)
}

func (BatchGetProjectsResponsePathSelectorProjectsMultiRegionPolicyCriteriaForDisabledSync) ResourceTypeName() BatchGetProjectsResponsePathSelectorProjectsMultiRegionPolicyCriteriaForDisabledSyncResourceTypeName {
	return BatchGetProjectsResponsePathSelectorProjectsMultiRegionPolicyCriteriaForDisabledSyncResourceTypeName{}
}

func (BatchGetProjectsResponsePathSelectorProjectsMultiRegionPolicyCriteriaForDisabledSync) SourceRegion() BatchGetProjectsResponsePathSelectorProjectsMultiRegionPolicyCriteriaForDisabledSyncSourceRegion {
	return BatchGetProjectsResponsePathSelectorProjectsMultiRegionPolicyCriteriaForDisabledSyncSourceRegion{}
}

func (BatchGetProjectsResponsePathSelectorProjectsMultiRegionPolicyCriteriaForDisabledSync) DestRegion() BatchGetProjectsResponsePathSelectorProjectsMultiRegionPolicyCriteriaForDisabledSyncDestRegion {
	return BatchGetProjectsResponsePathSelectorProjectsMultiRegionPolicyCriteriaForDisabledSyncDestRegion{}
}

type BatchGetProjectsResponsePathSelectorProjectsMultiRegionPolicyCriteriaForDisabledSyncResourceTypeName struct{}

func (BatchGetProjectsResponsePathSelectorProjectsMultiRegionPolicyCriteriaForDisabledSyncResourceTypeName) FieldPath() *BatchGetProjectsResponse_FieldSubPath {
	return &BatchGetProjectsResponse_FieldSubPath{
		selector: BatchGetProjectsResponse_FieldPathSelectorProjects,
		subPath:  project.NewProjectFieldPathBuilder().MultiRegionPolicy().CriteriaForDisabledSync().ResourceTypeName().FieldPath(),
	}
}

func (s BatchGetProjectsResponsePathSelectorProjectsMultiRegionPolicyCriteriaForDisabledSyncResourceTypeName) WithValue(value string) *BatchGetProjectsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetProjectsResponse_FieldSubPathValue)
}

func (s BatchGetProjectsResponsePathSelectorProjectsMultiRegionPolicyCriteriaForDisabledSyncResourceTypeName) WithArrayOfValues(values []string) *BatchGetProjectsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetProjectsResponse_FieldSubPathArrayOfValues)
}

type BatchGetProjectsResponsePathSelectorProjectsMultiRegionPolicyCriteriaForDisabledSyncSourceRegion struct{}

func (BatchGetProjectsResponsePathSelectorProjectsMultiRegionPolicyCriteriaForDisabledSyncSourceRegion) FieldPath() *BatchGetProjectsResponse_FieldSubPath {
	return &BatchGetProjectsResponse_FieldSubPath{
		selector: BatchGetProjectsResponse_FieldPathSelectorProjects,
		subPath:  project.NewProjectFieldPathBuilder().MultiRegionPolicy().CriteriaForDisabledSync().SourceRegion().FieldPath(),
	}
}

func (s BatchGetProjectsResponsePathSelectorProjectsMultiRegionPolicyCriteriaForDisabledSyncSourceRegion) WithValue(value string) *BatchGetProjectsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetProjectsResponse_FieldSubPathValue)
}

func (s BatchGetProjectsResponsePathSelectorProjectsMultiRegionPolicyCriteriaForDisabledSyncSourceRegion) WithArrayOfValues(values []string) *BatchGetProjectsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetProjectsResponse_FieldSubPathArrayOfValues)
}

type BatchGetProjectsResponsePathSelectorProjectsMultiRegionPolicyCriteriaForDisabledSyncDestRegion struct{}

func (BatchGetProjectsResponsePathSelectorProjectsMultiRegionPolicyCriteriaForDisabledSyncDestRegion) FieldPath() *BatchGetProjectsResponse_FieldSubPath {
	return &BatchGetProjectsResponse_FieldSubPath{
		selector: BatchGetProjectsResponse_FieldPathSelectorProjects,
		subPath:  project.NewProjectFieldPathBuilder().MultiRegionPolicy().CriteriaForDisabledSync().DestRegion().FieldPath(),
	}
}

func (s BatchGetProjectsResponsePathSelectorProjectsMultiRegionPolicyCriteriaForDisabledSyncDestRegion) WithValue(value string) *BatchGetProjectsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetProjectsResponse_FieldSubPathValue)
}

func (s BatchGetProjectsResponsePathSelectorProjectsMultiRegionPolicyCriteriaForDisabledSyncDestRegion) WithArrayOfValues(values []string) *BatchGetProjectsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetProjectsResponse_FieldSubPathArrayOfValues)
}

type BatchGetProjectsResponsePathSelectorProjectsEnabledServices struct{}

func (BatchGetProjectsResponsePathSelectorProjectsEnabledServices) FieldPath() *BatchGetProjectsResponse_FieldSubPath {
	return &BatchGetProjectsResponse_FieldSubPath{
		selector: BatchGetProjectsResponse_FieldPathSelectorProjects,
		subPath:  project.NewProjectFieldPathBuilder().EnabledServices().FieldPath(),
	}
}

func (s BatchGetProjectsResponsePathSelectorProjectsEnabledServices) WithValue(value []*meta_service.Reference) *BatchGetProjectsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetProjectsResponse_FieldSubPathValue)
}

func (s BatchGetProjectsResponsePathSelectorProjectsEnabledServices) WithArrayOfValues(values [][]*meta_service.Reference) *BatchGetProjectsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetProjectsResponse_FieldSubPathArrayOfValues)
}

func (s BatchGetProjectsResponsePathSelectorProjectsEnabledServices) WithItemValue(value *meta_service.Reference) *BatchGetProjectsResponse_FieldSubPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*BatchGetProjectsResponse_FieldSubPathArrayItemValue)
}

type BatchGetProjectsResponsePathSelectorMissing struct{}

func (BatchGetProjectsResponsePathSelectorMissing) FieldPath() *BatchGetProjectsResponse_FieldTerminalPath {
	return &BatchGetProjectsResponse_FieldTerminalPath{selector: BatchGetProjectsResponse_FieldPathSelectorMissing}
}

func (s BatchGetProjectsResponsePathSelectorMissing) WithValue(value []*project.Reference) *BatchGetProjectsResponse_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetProjectsResponse_FieldTerminalPathValue)
}

func (s BatchGetProjectsResponsePathSelectorMissing) WithArrayOfValues(values [][]*project.Reference) *BatchGetProjectsResponse_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetProjectsResponse_FieldTerminalPathArrayOfValues)
}

func (s BatchGetProjectsResponsePathSelectorMissing) WithItemValue(value *project.Reference) *BatchGetProjectsResponse_FieldTerminalPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*BatchGetProjectsResponse_FieldTerminalPathArrayItemValue)
}

type ListProjectsRequestFieldPathBuilder struct{}

func NewListProjectsRequestFieldPathBuilder() ListProjectsRequestFieldPathBuilder {
	return ListProjectsRequestFieldPathBuilder{}
}
func (ListProjectsRequestFieldPathBuilder) PageSize() ListProjectsRequestPathSelectorPageSize {
	return ListProjectsRequestPathSelectorPageSize{}
}
func (ListProjectsRequestFieldPathBuilder) PageToken() ListProjectsRequestPathSelectorPageToken {
	return ListProjectsRequestPathSelectorPageToken{}
}
func (ListProjectsRequestFieldPathBuilder) OrderBy() ListProjectsRequestPathSelectorOrderBy {
	return ListProjectsRequestPathSelectorOrderBy{}
}
func (ListProjectsRequestFieldPathBuilder) Filter() ListProjectsRequestPathSelectorFilter {
	return ListProjectsRequestPathSelectorFilter{}
}
func (ListProjectsRequestFieldPathBuilder) FieldMask() ListProjectsRequestPathSelectorFieldMask {
	return ListProjectsRequestPathSelectorFieldMask{}
}
func (ListProjectsRequestFieldPathBuilder) View() ListProjectsRequestPathSelectorView {
	return ListProjectsRequestPathSelectorView{}
}

type ListProjectsRequestPathSelectorPageSize struct{}

func (ListProjectsRequestPathSelectorPageSize) FieldPath() *ListProjectsRequest_FieldTerminalPath {
	return &ListProjectsRequest_FieldTerminalPath{selector: ListProjectsRequest_FieldPathSelectorPageSize}
}

func (s ListProjectsRequestPathSelectorPageSize) WithValue(value int32) *ListProjectsRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*ListProjectsRequest_FieldTerminalPathValue)
}

func (s ListProjectsRequestPathSelectorPageSize) WithArrayOfValues(values []int32) *ListProjectsRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListProjectsRequest_FieldTerminalPathArrayOfValues)
}

type ListProjectsRequestPathSelectorPageToken struct{}

func (ListProjectsRequestPathSelectorPageToken) FieldPath() *ListProjectsRequest_FieldTerminalPath {
	return &ListProjectsRequest_FieldTerminalPath{selector: ListProjectsRequest_FieldPathSelectorPageToken}
}

func (s ListProjectsRequestPathSelectorPageToken) WithValue(value *project.PagerCursor) *ListProjectsRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*ListProjectsRequest_FieldTerminalPathValue)
}

func (s ListProjectsRequestPathSelectorPageToken) WithArrayOfValues(values []*project.PagerCursor) *ListProjectsRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListProjectsRequest_FieldTerminalPathArrayOfValues)
}

type ListProjectsRequestPathSelectorOrderBy struct{}

func (ListProjectsRequestPathSelectorOrderBy) FieldPath() *ListProjectsRequest_FieldTerminalPath {
	return &ListProjectsRequest_FieldTerminalPath{selector: ListProjectsRequest_FieldPathSelectorOrderBy}
}

func (s ListProjectsRequestPathSelectorOrderBy) WithValue(value *project.OrderBy) *ListProjectsRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*ListProjectsRequest_FieldTerminalPathValue)
}

func (s ListProjectsRequestPathSelectorOrderBy) WithArrayOfValues(values []*project.OrderBy) *ListProjectsRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListProjectsRequest_FieldTerminalPathArrayOfValues)
}

type ListProjectsRequestPathSelectorFilter struct{}

func (ListProjectsRequestPathSelectorFilter) FieldPath() *ListProjectsRequest_FieldTerminalPath {
	return &ListProjectsRequest_FieldTerminalPath{selector: ListProjectsRequest_FieldPathSelectorFilter}
}

func (s ListProjectsRequestPathSelectorFilter) WithValue(value *project.Filter) *ListProjectsRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*ListProjectsRequest_FieldTerminalPathValue)
}

func (s ListProjectsRequestPathSelectorFilter) WithArrayOfValues(values []*project.Filter) *ListProjectsRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListProjectsRequest_FieldTerminalPathArrayOfValues)
}

type ListProjectsRequestPathSelectorFieldMask struct{}

func (ListProjectsRequestPathSelectorFieldMask) FieldPath() *ListProjectsRequest_FieldTerminalPath {
	return &ListProjectsRequest_FieldTerminalPath{selector: ListProjectsRequest_FieldPathSelectorFieldMask}
}

func (s ListProjectsRequestPathSelectorFieldMask) WithValue(value *project.Project_FieldMask) *ListProjectsRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*ListProjectsRequest_FieldTerminalPathValue)
}

func (s ListProjectsRequestPathSelectorFieldMask) WithArrayOfValues(values []*project.Project_FieldMask) *ListProjectsRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListProjectsRequest_FieldTerminalPathArrayOfValues)
}

type ListProjectsRequestPathSelectorView struct{}

func (ListProjectsRequestPathSelectorView) FieldPath() *ListProjectsRequest_FieldTerminalPath {
	return &ListProjectsRequest_FieldTerminalPath{selector: ListProjectsRequest_FieldPathSelectorView}
}

func (s ListProjectsRequestPathSelectorView) WithValue(value view.View) *ListProjectsRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*ListProjectsRequest_FieldTerminalPathValue)
}

func (s ListProjectsRequestPathSelectorView) WithArrayOfValues(values []view.View) *ListProjectsRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListProjectsRequest_FieldTerminalPathArrayOfValues)
}

type ListProjectsResponseFieldPathBuilder struct{}

func NewListProjectsResponseFieldPathBuilder() ListProjectsResponseFieldPathBuilder {
	return ListProjectsResponseFieldPathBuilder{}
}
func (ListProjectsResponseFieldPathBuilder) Projects() ListProjectsResponsePathSelectorProjects {
	return ListProjectsResponsePathSelectorProjects{}
}
func (ListProjectsResponseFieldPathBuilder) PrevPageToken() ListProjectsResponsePathSelectorPrevPageToken {
	return ListProjectsResponsePathSelectorPrevPageToken{}
}
func (ListProjectsResponseFieldPathBuilder) NextPageToken() ListProjectsResponsePathSelectorNextPageToken {
	return ListProjectsResponsePathSelectorNextPageToken{}
}

type ListProjectsResponsePathSelectorProjects struct{}

func (ListProjectsResponsePathSelectorProjects) FieldPath() *ListProjectsResponse_FieldTerminalPath {
	return &ListProjectsResponse_FieldTerminalPath{selector: ListProjectsResponse_FieldPathSelectorProjects}
}

func (s ListProjectsResponsePathSelectorProjects) WithValue(value []*project.Project) *ListProjectsResponse_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*ListProjectsResponse_FieldTerminalPathValue)
}

func (s ListProjectsResponsePathSelectorProjects) WithArrayOfValues(values [][]*project.Project) *ListProjectsResponse_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListProjectsResponse_FieldTerminalPathArrayOfValues)
}

func (s ListProjectsResponsePathSelectorProjects) WithItemValue(value *project.Project) *ListProjectsResponse_FieldTerminalPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*ListProjectsResponse_FieldTerminalPathArrayItemValue)
}
func (ListProjectsResponsePathSelectorProjects) WithSubPath(subPath project.Project_FieldPath) *ListProjectsResponse_FieldSubPath {
	return &ListProjectsResponse_FieldSubPath{selector: ListProjectsResponse_FieldPathSelectorProjects, subPath: subPath}
}

func (s ListProjectsResponsePathSelectorProjects) WithSubValue(subPathValue project.Project_FieldPathValue) *ListProjectsResponse_FieldSubPathValue {
	return &ListProjectsResponse_FieldSubPathValue{ListProjectsResponse_FieldPath: s.WithSubPath(subPathValue), subPathValue: subPathValue}
}

func (s ListProjectsResponsePathSelectorProjects) WithSubArrayOfValues(subPathArrayOfValues project.Project_FieldPathArrayOfValues) *ListProjectsResponse_FieldSubPathArrayOfValues {
	return &ListProjectsResponse_FieldSubPathArrayOfValues{ListProjectsResponse_FieldPath: s.WithSubPath(subPathArrayOfValues), subPathArrayOfValues: subPathArrayOfValues}
}

func (s ListProjectsResponsePathSelectorProjects) WithSubArrayItemValue(subPathArrayItemValue project.Project_FieldPathArrayItemValue) *ListProjectsResponse_FieldSubPathArrayItemValue {
	return &ListProjectsResponse_FieldSubPathArrayItemValue{ListProjectsResponse_FieldPath: s.WithSubPath(subPathArrayItemValue), subPathItemValue: subPathArrayItemValue}
}

func (ListProjectsResponsePathSelectorProjects) Name() ListProjectsResponsePathSelectorProjectsName {
	return ListProjectsResponsePathSelectorProjectsName{}
}

func (ListProjectsResponsePathSelectorProjects) Title() ListProjectsResponsePathSelectorProjectsTitle {
	return ListProjectsResponsePathSelectorProjectsTitle{}
}

func (ListProjectsResponsePathSelectorProjects) ParentOrganization() ListProjectsResponsePathSelectorProjectsParentOrganization {
	return ListProjectsResponsePathSelectorProjectsParentOrganization{}
}

func (ListProjectsResponsePathSelectorProjects) RootOrganization() ListProjectsResponsePathSelectorProjectsRootOrganization {
	return ListProjectsResponsePathSelectorProjectsRootOrganization{}
}

func (ListProjectsResponsePathSelectorProjects) AncestryPath() ListProjectsResponsePathSelectorProjectsAncestryPath {
	return ListProjectsResponsePathSelectorProjectsAncestryPath{}
}

func (ListProjectsResponsePathSelectorProjects) Metadata() ListProjectsResponsePathSelectorProjectsMetadata {
	return ListProjectsResponsePathSelectorProjectsMetadata{}
}

func (ListProjectsResponsePathSelectorProjects) MultiRegionPolicy() ListProjectsResponsePathSelectorProjectsMultiRegionPolicy {
	return ListProjectsResponsePathSelectorProjectsMultiRegionPolicy{}
}

func (ListProjectsResponsePathSelectorProjects) EnabledServices() ListProjectsResponsePathSelectorProjectsEnabledServices {
	return ListProjectsResponsePathSelectorProjectsEnabledServices{}
}

type ListProjectsResponsePathSelectorProjectsName struct{}

func (ListProjectsResponsePathSelectorProjectsName) FieldPath() *ListProjectsResponse_FieldSubPath {
	return &ListProjectsResponse_FieldSubPath{
		selector: ListProjectsResponse_FieldPathSelectorProjects,
		subPath:  project.NewProjectFieldPathBuilder().Name().FieldPath(),
	}
}

func (s ListProjectsResponsePathSelectorProjectsName) WithValue(value *project.Name) *ListProjectsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListProjectsResponse_FieldSubPathValue)
}

func (s ListProjectsResponsePathSelectorProjectsName) WithArrayOfValues(values []*project.Name) *ListProjectsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListProjectsResponse_FieldSubPathArrayOfValues)
}

type ListProjectsResponsePathSelectorProjectsTitle struct{}

func (ListProjectsResponsePathSelectorProjectsTitle) FieldPath() *ListProjectsResponse_FieldSubPath {
	return &ListProjectsResponse_FieldSubPath{
		selector: ListProjectsResponse_FieldPathSelectorProjects,
		subPath:  project.NewProjectFieldPathBuilder().Title().FieldPath(),
	}
}

func (s ListProjectsResponsePathSelectorProjectsTitle) WithValue(value string) *ListProjectsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListProjectsResponse_FieldSubPathValue)
}

func (s ListProjectsResponsePathSelectorProjectsTitle) WithArrayOfValues(values []string) *ListProjectsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListProjectsResponse_FieldSubPathArrayOfValues)
}

type ListProjectsResponsePathSelectorProjectsParentOrganization struct{}

func (ListProjectsResponsePathSelectorProjectsParentOrganization) FieldPath() *ListProjectsResponse_FieldSubPath {
	return &ListProjectsResponse_FieldSubPath{
		selector: ListProjectsResponse_FieldPathSelectorProjects,
		subPath:  project.NewProjectFieldPathBuilder().ParentOrganization().FieldPath(),
	}
}

func (s ListProjectsResponsePathSelectorProjectsParentOrganization) WithValue(value *organization.Reference) *ListProjectsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListProjectsResponse_FieldSubPathValue)
}

func (s ListProjectsResponsePathSelectorProjectsParentOrganization) WithArrayOfValues(values []*organization.Reference) *ListProjectsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListProjectsResponse_FieldSubPathArrayOfValues)
}

type ListProjectsResponsePathSelectorProjectsRootOrganization struct{}

func (ListProjectsResponsePathSelectorProjectsRootOrganization) FieldPath() *ListProjectsResponse_FieldSubPath {
	return &ListProjectsResponse_FieldSubPath{
		selector: ListProjectsResponse_FieldPathSelectorProjects,
		subPath:  project.NewProjectFieldPathBuilder().RootOrganization().FieldPath(),
	}
}

func (s ListProjectsResponsePathSelectorProjectsRootOrganization) WithValue(value *organization.Reference) *ListProjectsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListProjectsResponse_FieldSubPathValue)
}

func (s ListProjectsResponsePathSelectorProjectsRootOrganization) WithArrayOfValues(values []*organization.Reference) *ListProjectsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListProjectsResponse_FieldSubPathArrayOfValues)
}

type ListProjectsResponsePathSelectorProjectsAncestryPath struct{}

func (ListProjectsResponsePathSelectorProjectsAncestryPath) FieldPath() *ListProjectsResponse_FieldSubPath {
	return &ListProjectsResponse_FieldSubPath{
		selector: ListProjectsResponse_FieldPathSelectorProjects,
		subPath:  project.NewProjectFieldPathBuilder().AncestryPath().FieldPath(),
	}
}

func (s ListProjectsResponsePathSelectorProjectsAncestryPath) WithValue(value []*organization.Reference) *ListProjectsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListProjectsResponse_FieldSubPathValue)
}

func (s ListProjectsResponsePathSelectorProjectsAncestryPath) WithArrayOfValues(values [][]*organization.Reference) *ListProjectsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListProjectsResponse_FieldSubPathArrayOfValues)
}

func (s ListProjectsResponsePathSelectorProjectsAncestryPath) WithItemValue(value *organization.Reference) *ListProjectsResponse_FieldSubPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*ListProjectsResponse_FieldSubPathArrayItemValue)
}

type ListProjectsResponsePathSelectorProjectsMetadata struct{}

func (ListProjectsResponsePathSelectorProjectsMetadata) FieldPath() *ListProjectsResponse_FieldSubPath {
	return &ListProjectsResponse_FieldSubPath{
		selector: ListProjectsResponse_FieldPathSelectorProjects,
		subPath:  project.NewProjectFieldPathBuilder().Metadata().FieldPath(),
	}
}

func (s ListProjectsResponsePathSelectorProjectsMetadata) WithValue(value *ntt_meta.Meta) *ListProjectsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListProjectsResponse_FieldSubPathValue)
}

func (s ListProjectsResponsePathSelectorProjectsMetadata) WithArrayOfValues(values []*ntt_meta.Meta) *ListProjectsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListProjectsResponse_FieldSubPathArrayOfValues)
}

func (ListProjectsResponsePathSelectorProjectsMetadata) CreateTime() ListProjectsResponsePathSelectorProjectsMetadataCreateTime {
	return ListProjectsResponsePathSelectorProjectsMetadataCreateTime{}
}

func (ListProjectsResponsePathSelectorProjectsMetadata) UpdateTime() ListProjectsResponsePathSelectorProjectsMetadataUpdateTime {
	return ListProjectsResponsePathSelectorProjectsMetadataUpdateTime{}
}

func (ListProjectsResponsePathSelectorProjectsMetadata) Uuid() ListProjectsResponsePathSelectorProjectsMetadataUuid {
	return ListProjectsResponsePathSelectorProjectsMetadataUuid{}
}

func (ListProjectsResponsePathSelectorProjectsMetadata) Tags() ListProjectsResponsePathSelectorProjectsMetadataTags {
	return ListProjectsResponsePathSelectorProjectsMetadataTags{}
}

func (ListProjectsResponsePathSelectorProjectsMetadata) Labels() ListProjectsResponsePathSelectorProjectsMetadataLabels {
	return ListProjectsResponsePathSelectorProjectsMetadataLabels{}
}

func (ListProjectsResponsePathSelectorProjectsMetadata) Annotations() ListProjectsResponsePathSelectorProjectsMetadataAnnotations {
	return ListProjectsResponsePathSelectorProjectsMetadataAnnotations{}
}

func (ListProjectsResponsePathSelectorProjectsMetadata) Generation() ListProjectsResponsePathSelectorProjectsMetadataGeneration {
	return ListProjectsResponsePathSelectorProjectsMetadataGeneration{}
}

func (ListProjectsResponsePathSelectorProjectsMetadata) ResourceVersion() ListProjectsResponsePathSelectorProjectsMetadataResourceVersion {
	return ListProjectsResponsePathSelectorProjectsMetadataResourceVersion{}
}

func (ListProjectsResponsePathSelectorProjectsMetadata) OwnerReferences() ListProjectsResponsePathSelectorProjectsMetadataOwnerReferences {
	return ListProjectsResponsePathSelectorProjectsMetadataOwnerReferences{}
}

func (ListProjectsResponsePathSelectorProjectsMetadata) Shards() ListProjectsResponsePathSelectorProjectsMetadataShards {
	return ListProjectsResponsePathSelectorProjectsMetadataShards{}
}

func (ListProjectsResponsePathSelectorProjectsMetadata) Syncing() ListProjectsResponsePathSelectorProjectsMetadataSyncing {
	return ListProjectsResponsePathSelectorProjectsMetadataSyncing{}
}

type ListProjectsResponsePathSelectorProjectsMetadataCreateTime struct{}

func (ListProjectsResponsePathSelectorProjectsMetadataCreateTime) FieldPath() *ListProjectsResponse_FieldSubPath {
	return &ListProjectsResponse_FieldSubPath{
		selector: ListProjectsResponse_FieldPathSelectorProjects,
		subPath:  project.NewProjectFieldPathBuilder().Metadata().CreateTime().FieldPath(),
	}
}

func (s ListProjectsResponsePathSelectorProjectsMetadataCreateTime) WithValue(value *timestamp.Timestamp) *ListProjectsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListProjectsResponse_FieldSubPathValue)
}

func (s ListProjectsResponsePathSelectorProjectsMetadataCreateTime) WithArrayOfValues(values []*timestamp.Timestamp) *ListProjectsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListProjectsResponse_FieldSubPathArrayOfValues)
}

type ListProjectsResponsePathSelectorProjectsMetadataUpdateTime struct{}

func (ListProjectsResponsePathSelectorProjectsMetadataUpdateTime) FieldPath() *ListProjectsResponse_FieldSubPath {
	return &ListProjectsResponse_FieldSubPath{
		selector: ListProjectsResponse_FieldPathSelectorProjects,
		subPath:  project.NewProjectFieldPathBuilder().Metadata().UpdateTime().FieldPath(),
	}
}

func (s ListProjectsResponsePathSelectorProjectsMetadataUpdateTime) WithValue(value *timestamp.Timestamp) *ListProjectsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListProjectsResponse_FieldSubPathValue)
}

func (s ListProjectsResponsePathSelectorProjectsMetadataUpdateTime) WithArrayOfValues(values []*timestamp.Timestamp) *ListProjectsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListProjectsResponse_FieldSubPathArrayOfValues)
}

type ListProjectsResponsePathSelectorProjectsMetadataUuid struct{}

func (ListProjectsResponsePathSelectorProjectsMetadataUuid) FieldPath() *ListProjectsResponse_FieldSubPath {
	return &ListProjectsResponse_FieldSubPath{
		selector: ListProjectsResponse_FieldPathSelectorProjects,
		subPath:  project.NewProjectFieldPathBuilder().Metadata().Uuid().FieldPath(),
	}
}

func (s ListProjectsResponsePathSelectorProjectsMetadataUuid) WithValue(value string) *ListProjectsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListProjectsResponse_FieldSubPathValue)
}

func (s ListProjectsResponsePathSelectorProjectsMetadataUuid) WithArrayOfValues(values []string) *ListProjectsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListProjectsResponse_FieldSubPathArrayOfValues)
}

type ListProjectsResponsePathSelectorProjectsMetadataTags struct{}

func (ListProjectsResponsePathSelectorProjectsMetadataTags) FieldPath() *ListProjectsResponse_FieldSubPath {
	return &ListProjectsResponse_FieldSubPath{
		selector: ListProjectsResponse_FieldPathSelectorProjects,
		subPath:  project.NewProjectFieldPathBuilder().Metadata().Tags().FieldPath(),
	}
}

func (s ListProjectsResponsePathSelectorProjectsMetadataTags) WithValue(value []string) *ListProjectsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListProjectsResponse_FieldSubPathValue)
}

func (s ListProjectsResponsePathSelectorProjectsMetadataTags) WithArrayOfValues(values [][]string) *ListProjectsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListProjectsResponse_FieldSubPathArrayOfValues)
}

func (s ListProjectsResponsePathSelectorProjectsMetadataTags) WithItemValue(value string) *ListProjectsResponse_FieldSubPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*ListProjectsResponse_FieldSubPathArrayItemValue)
}

type ListProjectsResponsePathSelectorProjectsMetadataLabels struct{}

func (ListProjectsResponsePathSelectorProjectsMetadataLabels) FieldPath() *ListProjectsResponse_FieldSubPath {
	return &ListProjectsResponse_FieldSubPath{
		selector: ListProjectsResponse_FieldPathSelectorProjects,
		subPath:  project.NewProjectFieldPathBuilder().Metadata().Labels().FieldPath(),
	}
}

func (s ListProjectsResponsePathSelectorProjectsMetadataLabels) WithValue(value map[string]string) *ListProjectsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListProjectsResponse_FieldSubPathValue)
}

func (s ListProjectsResponsePathSelectorProjectsMetadataLabels) WithArrayOfValues(values []map[string]string) *ListProjectsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListProjectsResponse_FieldSubPathArrayOfValues)
}

func (ListProjectsResponsePathSelectorProjectsMetadataLabels) WithKey(key string) ListProjectsResponseMapPathSelectorProjectsMetadataLabels {
	return ListProjectsResponseMapPathSelectorProjectsMetadataLabels{key: key}
}

type ListProjectsResponseMapPathSelectorProjectsMetadataLabels struct {
	key string
}

func (s ListProjectsResponseMapPathSelectorProjectsMetadataLabels) FieldPath() *ListProjectsResponse_FieldSubPath {
	return &ListProjectsResponse_FieldSubPath{
		selector: ListProjectsResponse_FieldPathSelectorProjects,
		subPath:  project.NewProjectFieldPathBuilder().Metadata().Labels().WithKey(s.key).FieldPath(),
	}
}

func (s ListProjectsResponseMapPathSelectorProjectsMetadataLabels) WithValue(value string) *ListProjectsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListProjectsResponse_FieldSubPathValue)
}

func (s ListProjectsResponseMapPathSelectorProjectsMetadataLabels) WithArrayOfValues(values []string) *ListProjectsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListProjectsResponse_FieldSubPathArrayOfValues)
}

type ListProjectsResponsePathSelectorProjectsMetadataAnnotations struct{}

func (ListProjectsResponsePathSelectorProjectsMetadataAnnotations) FieldPath() *ListProjectsResponse_FieldSubPath {
	return &ListProjectsResponse_FieldSubPath{
		selector: ListProjectsResponse_FieldPathSelectorProjects,
		subPath:  project.NewProjectFieldPathBuilder().Metadata().Annotations().FieldPath(),
	}
}

func (s ListProjectsResponsePathSelectorProjectsMetadataAnnotations) WithValue(value map[string]string) *ListProjectsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListProjectsResponse_FieldSubPathValue)
}

func (s ListProjectsResponsePathSelectorProjectsMetadataAnnotations) WithArrayOfValues(values []map[string]string) *ListProjectsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListProjectsResponse_FieldSubPathArrayOfValues)
}

func (ListProjectsResponsePathSelectorProjectsMetadataAnnotations) WithKey(key string) ListProjectsResponseMapPathSelectorProjectsMetadataAnnotations {
	return ListProjectsResponseMapPathSelectorProjectsMetadataAnnotations{key: key}
}

type ListProjectsResponseMapPathSelectorProjectsMetadataAnnotations struct {
	key string
}

func (s ListProjectsResponseMapPathSelectorProjectsMetadataAnnotations) FieldPath() *ListProjectsResponse_FieldSubPath {
	return &ListProjectsResponse_FieldSubPath{
		selector: ListProjectsResponse_FieldPathSelectorProjects,
		subPath:  project.NewProjectFieldPathBuilder().Metadata().Annotations().WithKey(s.key).FieldPath(),
	}
}

func (s ListProjectsResponseMapPathSelectorProjectsMetadataAnnotations) WithValue(value string) *ListProjectsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListProjectsResponse_FieldSubPathValue)
}

func (s ListProjectsResponseMapPathSelectorProjectsMetadataAnnotations) WithArrayOfValues(values []string) *ListProjectsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListProjectsResponse_FieldSubPathArrayOfValues)
}

type ListProjectsResponsePathSelectorProjectsMetadataGeneration struct{}

func (ListProjectsResponsePathSelectorProjectsMetadataGeneration) FieldPath() *ListProjectsResponse_FieldSubPath {
	return &ListProjectsResponse_FieldSubPath{
		selector: ListProjectsResponse_FieldPathSelectorProjects,
		subPath:  project.NewProjectFieldPathBuilder().Metadata().Generation().FieldPath(),
	}
}

func (s ListProjectsResponsePathSelectorProjectsMetadataGeneration) WithValue(value int64) *ListProjectsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListProjectsResponse_FieldSubPathValue)
}

func (s ListProjectsResponsePathSelectorProjectsMetadataGeneration) WithArrayOfValues(values []int64) *ListProjectsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListProjectsResponse_FieldSubPathArrayOfValues)
}

type ListProjectsResponsePathSelectorProjectsMetadataResourceVersion struct{}

func (ListProjectsResponsePathSelectorProjectsMetadataResourceVersion) FieldPath() *ListProjectsResponse_FieldSubPath {
	return &ListProjectsResponse_FieldSubPath{
		selector: ListProjectsResponse_FieldPathSelectorProjects,
		subPath:  project.NewProjectFieldPathBuilder().Metadata().ResourceVersion().FieldPath(),
	}
}

func (s ListProjectsResponsePathSelectorProjectsMetadataResourceVersion) WithValue(value string) *ListProjectsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListProjectsResponse_FieldSubPathValue)
}

func (s ListProjectsResponsePathSelectorProjectsMetadataResourceVersion) WithArrayOfValues(values []string) *ListProjectsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListProjectsResponse_FieldSubPathArrayOfValues)
}

type ListProjectsResponsePathSelectorProjectsMetadataOwnerReferences struct{}

func (ListProjectsResponsePathSelectorProjectsMetadataOwnerReferences) FieldPath() *ListProjectsResponse_FieldSubPath {
	return &ListProjectsResponse_FieldSubPath{
		selector: ListProjectsResponse_FieldPathSelectorProjects,
		subPath:  project.NewProjectFieldPathBuilder().Metadata().OwnerReferences().FieldPath(),
	}
}

func (s ListProjectsResponsePathSelectorProjectsMetadataOwnerReferences) WithValue(value []*ntt_meta.OwnerReference) *ListProjectsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListProjectsResponse_FieldSubPathValue)
}

func (s ListProjectsResponsePathSelectorProjectsMetadataOwnerReferences) WithArrayOfValues(values [][]*ntt_meta.OwnerReference) *ListProjectsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListProjectsResponse_FieldSubPathArrayOfValues)
}

func (s ListProjectsResponsePathSelectorProjectsMetadataOwnerReferences) WithItemValue(value *ntt_meta.OwnerReference) *ListProjectsResponse_FieldSubPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*ListProjectsResponse_FieldSubPathArrayItemValue)
}

func (ListProjectsResponsePathSelectorProjectsMetadataOwnerReferences) ApiVersion() ListProjectsResponsePathSelectorProjectsMetadataOwnerReferencesApiVersion {
	return ListProjectsResponsePathSelectorProjectsMetadataOwnerReferencesApiVersion{}
}

func (ListProjectsResponsePathSelectorProjectsMetadataOwnerReferences) Kind() ListProjectsResponsePathSelectorProjectsMetadataOwnerReferencesKind {
	return ListProjectsResponsePathSelectorProjectsMetadataOwnerReferencesKind{}
}

func (ListProjectsResponsePathSelectorProjectsMetadataOwnerReferences) Name() ListProjectsResponsePathSelectorProjectsMetadataOwnerReferencesName {
	return ListProjectsResponsePathSelectorProjectsMetadataOwnerReferencesName{}
}

func (ListProjectsResponsePathSelectorProjectsMetadataOwnerReferences) Uid() ListProjectsResponsePathSelectorProjectsMetadataOwnerReferencesUid {
	return ListProjectsResponsePathSelectorProjectsMetadataOwnerReferencesUid{}
}

func (ListProjectsResponsePathSelectorProjectsMetadataOwnerReferences) Controller() ListProjectsResponsePathSelectorProjectsMetadataOwnerReferencesController {
	return ListProjectsResponsePathSelectorProjectsMetadataOwnerReferencesController{}
}

func (ListProjectsResponsePathSelectorProjectsMetadataOwnerReferences) BlockOwnerDeletion() ListProjectsResponsePathSelectorProjectsMetadataOwnerReferencesBlockOwnerDeletion {
	return ListProjectsResponsePathSelectorProjectsMetadataOwnerReferencesBlockOwnerDeletion{}
}

type ListProjectsResponsePathSelectorProjectsMetadataOwnerReferencesApiVersion struct{}

func (ListProjectsResponsePathSelectorProjectsMetadataOwnerReferencesApiVersion) FieldPath() *ListProjectsResponse_FieldSubPath {
	return &ListProjectsResponse_FieldSubPath{
		selector: ListProjectsResponse_FieldPathSelectorProjects,
		subPath:  project.NewProjectFieldPathBuilder().Metadata().OwnerReferences().ApiVersion().FieldPath(),
	}
}

func (s ListProjectsResponsePathSelectorProjectsMetadataOwnerReferencesApiVersion) WithValue(value string) *ListProjectsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListProjectsResponse_FieldSubPathValue)
}

func (s ListProjectsResponsePathSelectorProjectsMetadataOwnerReferencesApiVersion) WithArrayOfValues(values []string) *ListProjectsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListProjectsResponse_FieldSubPathArrayOfValues)
}

type ListProjectsResponsePathSelectorProjectsMetadataOwnerReferencesKind struct{}

func (ListProjectsResponsePathSelectorProjectsMetadataOwnerReferencesKind) FieldPath() *ListProjectsResponse_FieldSubPath {
	return &ListProjectsResponse_FieldSubPath{
		selector: ListProjectsResponse_FieldPathSelectorProjects,
		subPath:  project.NewProjectFieldPathBuilder().Metadata().OwnerReferences().Kind().FieldPath(),
	}
}

func (s ListProjectsResponsePathSelectorProjectsMetadataOwnerReferencesKind) WithValue(value string) *ListProjectsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListProjectsResponse_FieldSubPathValue)
}

func (s ListProjectsResponsePathSelectorProjectsMetadataOwnerReferencesKind) WithArrayOfValues(values []string) *ListProjectsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListProjectsResponse_FieldSubPathArrayOfValues)
}

type ListProjectsResponsePathSelectorProjectsMetadataOwnerReferencesName struct{}

func (ListProjectsResponsePathSelectorProjectsMetadataOwnerReferencesName) FieldPath() *ListProjectsResponse_FieldSubPath {
	return &ListProjectsResponse_FieldSubPath{
		selector: ListProjectsResponse_FieldPathSelectorProjects,
		subPath:  project.NewProjectFieldPathBuilder().Metadata().OwnerReferences().Name().FieldPath(),
	}
}

func (s ListProjectsResponsePathSelectorProjectsMetadataOwnerReferencesName) WithValue(value string) *ListProjectsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListProjectsResponse_FieldSubPathValue)
}

func (s ListProjectsResponsePathSelectorProjectsMetadataOwnerReferencesName) WithArrayOfValues(values []string) *ListProjectsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListProjectsResponse_FieldSubPathArrayOfValues)
}

type ListProjectsResponsePathSelectorProjectsMetadataOwnerReferencesUid struct{}

func (ListProjectsResponsePathSelectorProjectsMetadataOwnerReferencesUid) FieldPath() *ListProjectsResponse_FieldSubPath {
	return &ListProjectsResponse_FieldSubPath{
		selector: ListProjectsResponse_FieldPathSelectorProjects,
		subPath:  project.NewProjectFieldPathBuilder().Metadata().OwnerReferences().Uid().FieldPath(),
	}
}

func (s ListProjectsResponsePathSelectorProjectsMetadataOwnerReferencesUid) WithValue(value string) *ListProjectsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListProjectsResponse_FieldSubPathValue)
}

func (s ListProjectsResponsePathSelectorProjectsMetadataOwnerReferencesUid) WithArrayOfValues(values []string) *ListProjectsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListProjectsResponse_FieldSubPathArrayOfValues)
}

type ListProjectsResponsePathSelectorProjectsMetadataOwnerReferencesController struct{}

func (ListProjectsResponsePathSelectorProjectsMetadataOwnerReferencesController) FieldPath() *ListProjectsResponse_FieldSubPath {
	return &ListProjectsResponse_FieldSubPath{
		selector: ListProjectsResponse_FieldPathSelectorProjects,
		subPath:  project.NewProjectFieldPathBuilder().Metadata().OwnerReferences().Controller().FieldPath(),
	}
}

func (s ListProjectsResponsePathSelectorProjectsMetadataOwnerReferencesController) WithValue(value bool) *ListProjectsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListProjectsResponse_FieldSubPathValue)
}

func (s ListProjectsResponsePathSelectorProjectsMetadataOwnerReferencesController) WithArrayOfValues(values []bool) *ListProjectsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListProjectsResponse_FieldSubPathArrayOfValues)
}

type ListProjectsResponsePathSelectorProjectsMetadataOwnerReferencesBlockOwnerDeletion struct{}

func (ListProjectsResponsePathSelectorProjectsMetadataOwnerReferencesBlockOwnerDeletion) FieldPath() *ListProjectsResponse_FieldSubPath {
	return &ListProjectsResponse_FieldSubPath{
		selector: ListProjectsResponse_FieldPathSelectorProjects,
		subPath:  project.NewProjectFieldPathBuilder().Metadata().OwnerReferences().BlockOwnerDeletion().FieldPath(),
	}
}

func (s ListProjectsResponsePathSelectorProjectsMetadataOwnerReferencesBlockOwnerDeletion) WithValue(value bool) *ListProjectsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListProjectsResponse_FieldSubPathValue)
}

func (s ListProjectsResponsePathSelectorProjectsMetadataOwnerReferencesBlockOwnerDeletion) WithArrayOfValues(values []bool) *ListProjectsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListProjectsResponse_FieldSubPathArrayOfValues)
}

type ListProjectsResponsePathSelectorProjectsMetadataShards struct{}

func (ListProjectsResponsePathSelectorProjectsMetadataShards) FieldPath() *ListProjectsResponse_FieldSubPath {
	return &ListProjectsResponse_FieldSubPath{
		selector: ListProjectsResponse_FieldPathSelectorProjects,
		subPath:  project.NewProjectFieldPathBuilder().Metadata().Shards().FieldPath(),
	}
}

func (s ListProjectsResponsePathSelectorProjectsMetadataShards) WithValue(value map[string]int64) *ListProjectsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListProjectsResponse_FieldSubPathValue)
}

func (s ListProjectsResponsePathSelectorProjectsMetadataShards) WithArrayOfValues(values []map[string]int64) *ListProjectsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListProjectsResponse_FieldSubPathArrayOfValues)
}

func (ListProjectsResponsePathSelectorProjectsMetadataShards) WithKey(key string) ListProjectsResponseMapPathSelectorProjectsMetadataShards {
	return ListProjectsResponseMapPathSelectorProjectsMetadataShards{key: key}
}

type ListProjectsResponseMapPathSelectorProjectsMetadataShards struct {
	key string
}

func (s ListProjectsResponseMapPathSelectorProjectsMetadataShards) FieldPath() *ListProjectsResponse_FieldSubPath {
	return &ListProjectsResponse_FieldSubPath{
		selector: ListProjectsResponse_FieldPathSelectorProjects,
		subPath:  project.NewProjectFieldPathBuilder().Metadata().Shards().WithKey(s.key).FieldPath(),
	}
}

func (s ListProjectsResponseMapPathSelectorProjectsMetadataShards) WithValue(value int64) *ListProjectsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListProjectsResponse_FieldSubPathValue)
}

func (s ListProjectsResponseMapPathSelectorProjectsMetadataShards) WithArrayOfValues(values []int64) *ListProjectsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListProjectsResponse_FieldSubPathArrayOfValues)
}

type ListProjectsResponsePathSelectorProjectsMetadataSyncing struct{}

func (ListProjectsResponsePathSelectorProjectsMetadataSyncing) FieldPath() *ListProjectsResponse_FieldSubPath {
	return &ListProjectsResponse_FieldSubPath{
		selector: ListProjectsResponse_FieldPathSelectorProjects,
		subPath:  project.NewProjectFieldPathBuilder().Metadata().Syncing().FieldPath(),
	}
}

func (s ListProjectsResponsePathSelectorProjectsMetadataSyncing) WithValue(value *ntt_meta.SyncingMeta) *ListProjectsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListProjectsResponse_FieldSubPathValue)
}

func (s ListProjectsResponsePathSelectorProjectsMetadataSyncing) WithArrayOfValues(values []*ntt_meta.SyncingMeta) *ListProjectsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListProjectsResponse_FieldSubPathArrayOfValues)
}

func (ListProjectsResponsePathSelectorProjectsMetadataSyncing) OwningRegion() ListProjectsResponsePathSelectorProjectsMetadataSyncingOwningRegion {
	return ListProjectsResponsePathSelectorProjectsMetadataSyncingOwningRegion{}
}

func (ListProjectsResponsePathSelectorProjectsMetadataSyncing) Regions() ListProjectsResponsePathSelectorProjectsMetadataSyncingRegions {
	return ListProjectsResponsePathSelectorProjectsMetadataSyncingRegions{}
}

type ListProjectsResponsePathSelectorProjectsMetadataSyncingOwningRegion struct{}

func (ListProjectsResponsePathSelectorProjectsMetadataSyncingOwningRegion) FieldPath() *ListProjectsResponse_FieldSubPath {
	return &ListProjectsResponse_FieldSubPath{
		selector: ListProjectsResponse_FieldPathSelectorProjects,
		subPath:  project.NewProjectFieldPathBuilder().Metadata().Syncing().OwningRegion().FieldPath(),
	}
}

func (s ListProjectsResponsePathSelectorProjectsMetadataSyncingOwningRegion) WithValue(value string) *ListProjectsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListProjectsResponse_FieldSubPathValue)
}

func (s ListProjectsResponsePathSelectorProjectsMetadataSyncingOwningRegion) WithArrayOfValues(values []string) *ListProjectsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListProjectsResponse_FieldSubPathArrayOfValues)
}

type ListProjectsResponsePathSelectorProjectsMetadataSyncingRegions struct{}

func (ListProjectsResponsePathSelectorProjectsMetadataSyncingRegions) FieldPath() *ListProjectsResponse_FieldSubPath {
	return &ListProjectsResponse_FieldSubPath{
		selector: ListProjectsResponse_FieldPathSelectorProjects,
		subPath:  project.NewProjectFieldPathBuilder().Metadata().Syncing().Regions().FieldPath(),
	}
}

func (s ListProjectsResponsePathSelectorProjectsMetadataSyncingRegions) WithValue(value []string) *ListProjectsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListProjectsResponse_FieldSubPathValue)
}

func (s ListProjectsResponsePathSelectorProjectsMetadataSyncingRegions) WithArrayOfValues(values [][]string) *ListProjectsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListProjectsResponse_FieldSubPathArrayOfValues)
}

func (s ListProjectsResponsePathSelectorProjectsMetadataSyncingRegions) WithItemValue(value string) *ListProjectsResponse_FieldSubPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*ListProjectsResponse_FieldSubPathArrayItemValue)
}

type ListProjectsResponsePathSelectorProjectsMultiRegionPolicy struct{}

func (ListProjectsResponsePathSelectorProjectsMultiRegionPolicy) FieldPath() *ListProjectsResponse_FieldSubPath {
	return &ListProjectsResponse_FieldSubPath{
		selector: ListProjectsResponse_FieldPathSelectorProjects,
		subPath:  project.NewProjectFieldPathBuilder().MultiRegionPolicy().FieldPath(),
	}
}

func (s ListProjectsResponsePathSelectorProjectsMultiRegionPolicy) WithValue(value *multi_region_policy.MultiRegionPolicy) *ListProjectsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListProjectsResponse_FieldSubPathValue)
}

func (s ListProjectsResponsePathSelectorProjectsMultiRegionPolicy) WithArrayOfValues(values []*multi_region_policy.MultiRegionPolicy) *ListProjectsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListProjectsResponse_FieldSubPathArrayOfValues)
}

func (ListProjectsResponsePathSelectorProjectsMultiRegionPolicy) EnabledRegions() ListProjectsResponsePathSelectorProjectsMultiRegionPolicyEnabledRegions {
	return ListProjectsResponsePathSelectorProjectsMultiRegionPolicyEnabledRegions{}
}

func (ListProjectsResponsePathSelectorProjectsMultiRegionPolicy) DefaultControlRegion() ListProjectsResponsePathSelectorProjectsMultiRegionPolicyDefaultControlRegion {
	return ListProjectsResponsePathSelectorProjectsMultiRegionPolicyDefaultControlRegion{}
}

func (ListProjectsResponsePathSelectorProjectsMultiRegionPolicy) CriteriaForDisabledSync() ListProjectsResponsePathSelectorProjectsMultiRegionPolicyCriteriaForDisabledSync {
	return ListProjectsResponsePathSelectorProjectsMultiRegionPolicyCriteriaForDisabledSync{}
}

type ListProjectsResponsePathSelectorProjectsMultiRegionPolicyEnabledRegions struct{}

func (ListProjectsResponsePathSelectorProjectsMultiRegionPolicyEnabledRegions) FieldPath() *ListProjectsResponse_FieldSubPath {
	return &ListProjectsResponse_FieldSubPath{
		selector: ListProjectsResponse_FieldPathSelectorProjects,
		subPath:  project.NewProjectFieldPathBuilder().MultiRegionPolicy().EnabledRegions().FieldPath(),
	}
}

func (s ListProjectsResponsePathSelectorProjectsMultiRegionPolicyEnabledRegions) WithValue(value []string) *ListProjectsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListProjectsResponse_FieldSubPathValue)
}

func (s ListProjectsResponsePathSelectorProjectsMultiRegionPolicyEnabledRegions) WithArrayOfValues(values [][]string) *ListProjectsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListProjectsResponse_FieldSubPathArrayOfValues)
}

func (s ListProjectsResponsePathSelectorProjectsMultiRegionPolicyEnabledRegions) WithItemValue(value string) *ListProjectsResponse_FieldSubPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*ListProjectsResponse_FieldSubPathArrayItemValue)
}

type ListProjectsResponsePathSelectorProjectsMultiRegionPolicyDefaultControlRegion struct{}

func (ListProjectsResponsePathSelectorProjectsMultiRegionPolicyDefaultControlRegion) FieldPath() *ListProjectsResponse_FieldSubPath {
	return &ListProjectsResponse_FieldSubPath{
		selector: ListProjectsResponse_FieldPathSelectorProjects,
		subPath:  project.NewProjectFieldPathBuilder().MultiRegionPolicy().DefaultControlRegion().FieldPath(),
	}
}

func (s ListProjectsResponsePathSelectorProjectsMultiRegionPolicyDefaultControlRegion) WithValue(value string) *ListProjectsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListProjectsResponse_FieldSubPathValue)
}

func (s ListProjectsResponsePathSelectorProjectsMultiRegionPolicyDefaultControlRegion) WithArrayOfValues(values []string) *ListProjectsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListProjectsResponse_FieldSubPathArrayOfValues)
}

type ListProjectsResponsePathSelectorProjectsMultiRegionPolicyCriteriaForDisabledSync struct{}

func (ListProjectsResponsePathSelectorProjectsMultiRegionPolicyCriteriaForDisabledSync) FieldPath() *ListProjectsResponse_FieldSubPath {
	return &ListProjectsResponse_FieldSubPath{
		selector: ListProjectsResponse_FieldPathSelectorProjects,
		subPath:  project.NewProjectFieldPathBuilder().MultiRegionPolicy().CriteriaForDisabledSync().FieldPath(),
	}
}

func (s ListProjectsResponsePathSelectorProjectsMultiRegionPolicyCriteriaForDisabledSync) WithValue(value []*multi_region_policy.MultiRegionPolicy_CriteriaForDisabledSync) *ListProjectsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListProjectsResponse_FieldSubPathValue)
}

func (s ListProjectsResponsePathSelectorProjectsMultiRegionPolicyCriteriaForDisabledSync) WithArrayOfValues(values [][]*multi_region_policy.MultiRegionPolicy_CriteriaForDisabledSync) *ListProjectsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListProjectsResponse_FieldSubPathArrayOfValues)
}

func (s ListProjectsResponsePathSelectorProjectsMultiRegionPolicyCriteriaForDisabledSync) WithItemValue(value *multi_region_policy.MultiRegionPolicy_CriteriaForDisabledSync) *ListProjectsResponse_FieldSubPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*ListProjectsResponse_FieldSubPathArrayItemValue)
}

func (ListProjectsResponsePathSelectorProjectsMultiRegionPolicyCriteriaForDisabledSync) ResourceTypeName() ListProjectsResponsePathSelectorProjectsMultiRegionPolicyCriteriaForDisabledSyncResourceTypeName {
	return ListProjectsResponsePathSelectorProjectsMultiRegionPolicyCriteriaForDisabledSyncResourceTypeName{}
}

func (ListProjectsResponsePathSelectorProjectsMultiRegionPolicyCriteriaForDisabledSync) SourceRegion() ListProjectsResponsePathSelectorProjectsMultiRegionPolicyCriteriaForDisabledSyncSourceRegion {
	return ListProjectsResponsePathSelectorProjectsMultiRegionPolicyCriteriaForDisabledSyncSourceRegion{}
}

func (ListProjectsResponsePathSelectorProjectsMultiRegionPolicyCriteriaForDisabledSync) DestRegion() ListProjectsResponsePathSelectorProjectsMultiRegionPolicyCriteriaForDisabledSyncDestRegion {
	return ListProjectsResponsePathSelectorProjectsMultiRegionPolicyCriteriaForDisabledSyncDestRegion{}
}

type ListProjectsResponsePathSelectorProjectsMultiRegionPolicyCriteriaForDisabledSyncResourceTypeName struct{}

func (ListProjectsResponsePathSelectorProjectsMultiRegionPolicyCriteriaForDisabledSyncResourceTypeName) FieldPath() *ListProjectsResponse_FieldSubPath {
	return &ListProjectsResponse_FieldSubPath{
		selector: ListProjectsResponse_FieldPathSelectorProjects,
		subPath:  project.NewProjectFieldPathBuilder().MultiRegionPolicy().CriteriaForDisabledSync().ResourceTypeName().FieldPath(),
	}
}

func (s ListProjectsResponsePathSelectorProjectsMultiRegionPolicyCriteriaForDisabledSyncResourceTypeName) WithValue(value string) *ListProjectsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListProjectsResponse_FieldSubPathValue)
}

func (s ListProjectsResponsePathSelectorProjectsMultiRegionPolicyCriteriaForDisabledSyncResourceTypeName) WithArrayOfValues(values []string) *ListProjectsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListProjectsResponse_FieldSubPathArrayOfValues)
}

type ListProjectsResponsePathSelectorProjectsMultiRegionPolicyCriteriaForDisabledSyncSourceRegion struct{}

func (ListProjectsResponsePathSelectorProjectsMultiRegionPolicyCriteriaForDisabledSyncSourceRegion) FieldPath() *ListProjectsResponse_FieldSubPath {
	return &ListProjectsResponse_FieldSubPath{
		selector: ListProjectsResponse_FieldPathSelectorProjects,
		subPath:  project.NewProjectFieldPathBuilder().MultiRegionPolicy().CriteriaForDisabledSync().SourceRegion().FieldPath(),
	}
}

func (s ListProjectsResponsePathSelectorProjectsMultiRegionPolicyCriteriaForDisabledSyncSourceRegion) WithValue(value string) *ListProjectsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListProjectsResponse_FieldSubPathValue)
}

func (s ListProjectsResponsePathSelectorProjectsMultiRegionPolicyCriteriaForDisabledSyncSourceRegion) WithArrayOfValues(values []string) *ListProjectsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListProjectsResponse_FieldSubPathArrayOfValues)
}

type ListProjectsResponsePathSelectorProjectsMultiRegionPolicyCriteriaForDisabledSyncDestRegion struct{}

func (ListProjectsResponsePathSelectorProjectsMultiRegionPolicyCriteriaForDisabledSyncDestRegion) FieldPath() *ListProjectsResponse_FieldSubPath {
	return &ListProjectsResponse_FieldSubPath{
		selector: ListProjectsResponse_FieldPathSelectorProjects,
		subPath:  project.NewProjectFieldPathBuilder().MultiRegionPolicy().CriteriaForDisabledSync().DestRegion().FieldPath(),
	}
}

func (s ListProjectsResponsePathSelectorProjectsMultiRegionPolicyCriteriaForDisabledSyncDestRegion) WithValue(value string) *ListProjectsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListProjectsResponse_FieldSubPathValue)
}

func (s ListProjectsResponsePathSelectorProjectsMultiRegionPolicyCriteriaForDisabledSyncDestRegion) WithArrayOfValues(values []string) *ListProjectsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListProjectsResponse_FieldSubPathArrayOfValues)
}

type ListProjectsResponsePathSelectorProjectsEnabledServices struct{}

func (ListProjectsResponsePathSelectorProjectsEnabledServices) FieldPath() *ListProjectsResponse_FieldSubPath {
	return &ListProjectsResponse_FieldSubPath{
		selector: ListProjectsResponse_FieldPathSelectorProjects,
		subPath:  project.NewProjectFieldPathBuilder().EnabledServices().FieldPath(),
	}
}

func (s ListProjectsResponsePathSelectorProjectsEnabledServices) WithValue(value []*meta_service.Reference) *ListProjectsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListProjectsResponse_FieldSubPathValue)
}

func (s ListProjectsResponsePathSelectorProjectsEnabledServices) WithArrayOfValues(values [][]*meta_service.Reference) *ListProjectsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListProjectsResponse_FieldSubPathArrayOfValues)
}

func (s ListProjectsResponsePathSelectorProjectsEnabledServices) WithItemValue(value *meta_service.Reference) *ListProjectsResponse_FieldSubPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*ListProjectsResponse_FieldSubPathArrayItemValue)
}

type ListProjectsResponsePathSelectorPrevPageToken struct{}

func (ListProjectsResponsePathSelectorPrevPageToken) FieldPath() *ListProjectsResponse_FieldTerminalPath {
	return &ListProjectsResponse_FieldTerminalPath{selector: ListProjectsResponse_FieldPathSelectorPrevPageToken}
}

func (s ListProjectsResponsePathSelectorPrevPageToken) WithValue(value *project.PagerCursor) *ListProjectsResponse_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*ListProjectsResponse_FieldTerminalPathValue)
}

func (s ListProjectsResponsePathSelectorPrevPageToken) WithArrayOfValues(values []*project.PagerCursor) *ListProjectsResponse_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListProjectsResponse_FieldTerminalPathArrayOfValues)
}

type ListProjectsResponsePathSelectorNextPageToken struct{}

func (ListProjectsResponsePathSelectorNextPageToken) FieldPath() *ListProjectsResponse_FieldTerminalPath {
	return &ListProjectsResponse_FieldTerminalPath{selector: ListProjectsResponse_FieldPathSelectorNextPageToken}
}

func (s ListProjectsResponsePathSelectorNextPageToken) WithValue(value *project.PagerCursor) *ListProjectsResponse_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*ListProjectsResponse_FieldTerminalPathValue)
}

func (s ListProjectsResponsePathSelectorNextPageToken) WithArrayOfValues(values []*project.PagerCursor) *ListProjectsResponse_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListProjectsResponse_FieldTerminalPathArrayOfValues)
}

type WatchProjectRequestFieldPathBuilder struct{}

func NewWatchProjectRequestFieldPathBuilder() WatchProjectRequestFieldPathBuilder {
	return WatchProjectRequestFieldPathBuilder{}
}
func (WatchProjectRequestFieldPathBuilder) Name() WatchProjectRequestPathSelectorName {
	return WatchProjectRequestPathSelectorName{}
}
func (WatchProjectRequestFieldPathBuilder) FieldMask() WatchProjectRequestPathSelectorFieldMask {
	return WatchProjectRequestPathSelectorFieldMask{}
}
func (WatchProjectRequestFieldPathBuilder) View() WatchProjectRequestPathSelectorView {
	return WatchProjectRequestPathSelectorView{}
}

type WatchProjectRequestPathSelectorName struct{}

func (WatchProjectRequestPathSelectorName) FieldPath() *WatchProjectRequest_FieldTerminalPath {
	return &WatchProjectRequest_FieldTerminalPath{selector: WatchProjectRequest_FieldPathSelectorName}
}

func (s WatchProjectRequestPathSelectorName) WithValue(value *project.Reference) *WatchProjectRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*WatchProjectRequest_FieldTerminalPathValue)
}

func (s WatchProjectRequestPathSelectorName) WithArrayOfValues(values []*project.Reference) *WatchProjectRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*WatchProjectRequest_FieldTerminalPathArrayOfValues)
}

type WatchProjectRequestPathSelectorFieldMask struct{}

func (WatchProjectRequestPathSelectorFieldMask) FieldPath() *WatchProjectRequest_FieldTerminalPath {
	return &WatchProjectRequest_FieldTerminalPath{selector: WatchProjectRequest_FieldPathSelectorFieldMask}
}

func (s WatchProjectRequestPathSelectorFieldMask) WithValue(value *project.Project_FieldMask) *WatchProjectRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*WatchProjectRequest_FieldTerminalPathValue)
}

func (s WatchProjectRequestPathSelectorFieldMask) WithArrayOfValues(values []*project.Project_FieldMask) *WatchProjectRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*WatchProjectRequest_FieldTerminalPathArrayOfValues)
}

type WatchProjectRequestPathSelectorView struct{}

func (WatchProjectRequestPathSelectorView) FieldPath() *WatchProjectRequest_FieldTerminalPath {
	return &WatchProjectRequest_FieldTerminalPath{selector: WatchProjectRequest_FieldPathSelectorView}
}

func (s WatchProjectRequestPathSelectorView) WithValue(value view.View) *WatchProjectRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*WatchProjectRequest_FieldTerminalPathValue)
}

func (s WatchProjectRequestPathSelectorView) WithArrayOfValues(values []view.View) *WatchProjectRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*WatchProjectRequest_FieldTerminalPathArrayOfValues)
}

type WatchProjectResponseFieldPathBuilder struct{}

func NewWatchProjectResponseFieldPathBuilder() WatchProjectResponseFieldPathBuilder {
	return WatchProjectResponseFieldPathBuilder{}
}
func (WatchProjectResponseFieldPathBuilder) Change() WatchProjectResponsePathSelectorChange {
	return WatchProjectResponsePathSelectorChange{}
}

type WatchProjectResponsePathSelectorChange struct{}

func (WatchProjectResponsePathSelectorChange) FieldPath() *WatchProjectResponse_FieldTerminalPath {
	return &WatchProjectResponse_FieldTerminalPath{selector: WatchProjectResponse_FieldPathSelectorChange}
}

func (s WatchProjectResponsePathSelectorChange) WithValue(value *project.ProjectChange) *WatchProjectResponse_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*WatchProjectResponse_FieldTerminalPathValue)
}

func (s WatchProjectResponsePathSelectorChange) WithArrayOfValues(values []*project.ProjectChange) *WatchProjectResponse_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*WatchProjectResponse_FieldTerminalPathArrayOfValues)
}

type WatchProjectsRequestFieldPathBuilder struct{}

func NewWatchProjectsRequestFieldPathBuilder() WatchProjectsRequestFieldPathBuilder {
	return WatchProjectsRequestFieldPathBuilder{}
}
func (WatchProjectsRequestFieldPathBuilder) Type() WatchProjectsRequestPathSelectorType {
	return WatchProjectsRequestPathSelectorType{}
}
func (WatchProjectsRequestFieldPathBuilder) PageSize() WatchProjectsRequestPathSelectorPageSize {
	return WatchProjectsRequestPathSelectorPageSize{}
}
func (WatchProjectsRequestFieldPathBuilder) PageToken() WatchProjectsRequestPathSelectorPageToken {
	return WatchProjectsRequestPathSelectorPageToken{}
}
func (WatchProjectsRequestFieldPathBuilder) OrderBy() WatchProjectsRequestPathSelectorOrderBy {
	return WatchProjectsRequestPathSelectorOrderBy{}
}
func (WatchProjectsRequestFieldPathBuilder) ResumeToken() WatchProjectsRequestPathSelectorResumeToken {
	return WatchProjectsRequestPathSelectorResumeToken{}
}
func (WatchProjectsRequestFieldPathBuilder) Filter() WatchProjectsRequestPathSelectorFilter {
	return WatchProjectsRequestPathSelectorFilter{}
}
func (WatchProjectsRequestFieldPathBuilder) FieldMask() WatchProjectsRequestPathSelectorFieldMask {
	return WatchProjectsRequestPathSelectorFieldMask{}
}
func (WatchProjectsRequestFieldPathBuilder) View() WatchProjectsRequestPathSelectorView {
	return WatchProjectsRequestPathSelectorView{}
}
func (WatchProjectsRequestFieldPathBuilder) MaxChunkSize() WatchProjectsRequestPathSelectorMaxChunkSize {
	return WatchProjectsRequestPathSelectorMaxChunkSize{}
}

type WatchProjectsRequestPathSelectorType struct{}

func (WatchProjectsRequestPathSelectorType) FieldPath() *WatchProjectsRequest_FieldTerminalPath {
	return &WatchProjectsRequest_FieldTerminalPath{selector: WatchProjectsRequest_FieldPathSelectorType}
}

func (s WatchProjectsRequestPathSelectorType) WithValue(value watch_type.WatchType) *WatchProjectsRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*WatchProjectsRequest_FieldTerminalPathValue)
}

func (s WatchProjectsRequestPathSelectorType) WithArrayOfValues(values []watch_type.WatchType) *WatchProjectsRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*WatchProjectsRequest_FieldTerminalPathArrayOfValues)
}

type WatchProjectsRequestPathSelectorPageSize struct{}

func (WatchProjectsRequestPathSelectorPageSize) FieldPath() *WatchProjectsRequest_FieldTerminalPath {
	return &WatchProjectsRequest_FieldTerminalPath{selector: WatchProjectsRequest_FieldPathSelectorPageSize}
}

func (s WatchProjectsRequestPathSelectorPageSize) WithValue(value int32) *WatchProjectsRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*WatchProjectsRequest_FieldTerminalPathValue)
}

func (s WatchProjectsRequestPathSelectorPageSize) WithArrayOfValues(values []int32) *WatchProjectsRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*WatchProjectsRequest_FieldTerminalPathArrayOfValues)
}

type WatchProjectsRequestPathSelectorPageToken struct{}

func (WatchProjectsRequestPathSelectorPageToken) FieldPath() *WatchProjectsRequest_FieldTerminalPath {
	return &WatchProjectsRequest_FieldTerminalPath{selector: WatchProjectsRequest_FieldPathSelectorPageToken}
}

func (s WatchProjectsRequestPathSelectorPageToken) WithValue(value *project.PagerCursor) *WatchProjectsRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*WatchProjectsRequest_FieldTerminalPathValue)
}

func (s WatchProjectsRequestPathSelectorPageToken) WithArrayOfValues(values []*project.PagerCursor) *WatchProjectsRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*WatchProjectsRequest_FieldTerminalPathArrayOfValues)
}

type WatchProjectsRequestPathSelectorOrderBy struct{}

func (WatchProjectsRequestPathSelectorOrderBy) FieldPath() *WatchProjectsRequest_FieldTerminalPath {
	return &WatchProjectsRequest_FieldTerminalPath{selector: WatchProjectsRequest_FieldPathSelectorOrderBy}
}

func (s WatchProjectsRequestPathSelectorOrderBy) WithValue(value *project.OrderBy) *WatchProjectsRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*WatchProjectsRequest_FieldTerminalPathValue)
}

func (s WatchProjectsRequestPathSelectorOrderBy) WithArrayOfValues(values []*project.OrderBy) *WatchProjectsRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*WatchProjectsRequest_FieldTerminalPathArrayOfValues)
}

type WatchProjectsRequestPathSelectorResumeToken struct{}

func (WatchProjectsRequestPathSelectorResumeToken) FieldPath() *WatchProjectsRequest_FieldTerminalPath {
	return &WatchProjectsRequest_FieldTerminalPath{selector: WatchProjectsRequest_FieldPathSelectorResumeToken}
}

func (s WatchProjectsRequestPathSelectorResumeToken) WithValue(value string) *WatchProjectsRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*WatchProjectsRequest_FieldTerminalPathValue)
}

func (s WatchProjectsRequestPathSelectorResumeToken) WithArrayOfValues(values []string) *WatchProjectsRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*WatchProjectsRequest_FieldTerminalPathArrayOfValues)
}

type WatchProjectsRequestPathSelectorFilter struct{}

func (WatchProjectsRequestPathSelectorFilter) FieldPath() *WatchProjectsRequest_FieldTerminalPath {
	return &WatchProjectsRequest_FieldTerminalPath{selector: WatchProjectsRequest_FieldPathSelectorFilter}
}

func (s WatchProjectsRequestPathSelectorFilter) WithValue(value *project.Filter) *WatchProjectsRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*WatchProjectsRequest_FieldTerminalPathValue)
}

func (s WatchProjectsRequestPathSelectorFilter) WithArrayOfValues(values []*project.Filter) *WatchProjectsRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*WatchProjectsRequest_FieldTerminalPathArrayOfValues)
}

type WatchProjectsRequestPathSelectorFieldMask struct{}

func (WatchProjectsRequestPathSelectorFieldMask) FieldPath() *WatchProjectsRequest_FieldTerminalPath {
	return &WatchProjectsRequest_FieldTerminalPath{selector: WatchProjectsRequest_FieldPathSelectorFieldMask}
}

func (s WatchProjectsRequestPathSelectorFieldMask) WithValue(value *project.Project_FieldMask) *WatchProjectsRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*WatchProjectsRequest_FieldTerminalPathValue)
}

func (s WatchProjectsRequestPathSelectorFieldMask) WithArrayOfValues(values []*project.Project_FieldMask) *WatchProjectsRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*WatchProjectsRequest_FieldTerminalPathArrayOfValues)
}

type WatchProjectsRequestPathSelectorView struct{}

func (WatchProjectsRequestPathSelectorView) FieldPath() *WatchProjectsRequest_FieldTerminalPath {
	return &WatchProjectsRequest_FieldTerminalPath{selector: WatchProjectsRequest_FieldPathSelectorView}
}

func (s WatchProjectsRequestPathSelectorView) WithValue(value view.View) *WatchProjectsRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*WatchProjectsRequest_FieldTerminalPathValue)
}

func (s WatchProjectsRequestPathSelectorView) WithArrayOfValues(values []view.View) *WatchProjectsRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*WatchProjectsRequest_FieldTerminalPathArrayOfValues)
}

type WatchProjectsRequestPathSelectorMaxChunkSize struct{}

func (WatchProjectsRequestPathSelectorMaxChunkSize) FieldPath() *WatchProjectsRequest_FieldTerminalPath {
	return &WatchProjectsRequest_FieldTerminalPath{selector: WatchProjectsRequest_FieldPathSelectorMaxChunkSize}
}

func (s WatchProjectsRequestPathSelectorMaxChunkSize) WithValue(value int32) *WatchProjectsRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*WatchProjectsRequest_FieldTerminalPathValue)
}

func (s WatchProjectsRequestPathSelectorMaxChunkSize) WithArrayOfValues(values []int32) *WatchProjectsRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*WatchProjectsRequest_FieldTerminalPathArrayOfValues)
}

type WatchProjectsResponseFieldPathBuilder struct{}

func NewWatchProjectsResponseFieldPathBuilder() WatchProjectsResponseFieldPathBuilder {
	return WatchProjectsResponseFieldPathBuilder{}
}
func (WatchProjectsResponseFieldPathBuilder) ProjectChanges() WatchProjectsResponsePathSelectorProjectChanges {
	return WatchProjectsResponsePathSelectorProjectChanges{}
}
func (WatchProjectsResponseFieldPathBuilder) IsCurrent() WatchProjectsResponsePathSelectorIsCurrent {
	return WatchProjectsResponsePathSelectorIsCurrent{}
}
func (WatchProjectsResponseFieldPathBuilder) PageTokenChange() WatchProjectsResponsePathSelectorPageTokenChange {
	return WatchProjectsResponsePathSelectorPageTokenChange{}
}
func (WatchProjectsResponseFieldPathBuilder) ResumeToken() WatchProjectsResponsePathSelectorResumeToken {
	return WatchProjectsResponsePathSelectorResumeToken{}
}
func (WatchProjectsResponseFieldPathBuilder) SnapshotSize() WatchProjectsResponsePathSelectorSnapshotSize {
	return WatchProjectsResponsePathSelectorSnapshotSize{}
}
func (WatchProjectsResponseFieldPathBuilder) IsSoftReset() WatchProjectsResponsePathSelectorIsSoftReset {
	return WatchProjectsResponsePathSelectorIsSoftReset{}
}
func (WatchProjectsResponseFieldPathBuilder) IsHardReset() WatchProjectsResponsePathSelectorIsHardReset {
	return WatchProjectsResponsePathSelectorIsHardReset{}
}

type WatchProjectsResponsePathSelectorProjectChanges struct{}

func (WatchProjectsResponsePathSelectorProjectChanges) FieldPath() *WatchProjectsResponse_FieldTerminalPath {
	return &WatchProjectsResponse_FieldTerminalPath{selector: WatchProjectsResponse_FieldPathSelectorProjectChanges}
}

func (s WatchProjectsResponsePathSelectorProjectChanges) WithValue(value []*project.ProjectChange) *WatchProjectsResponse_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*WatchProjectsResponse_FieldTerminalPathValue)
}

func (s WatchProjectsResponsePathSelectorProjectChanges) WithArrayOfValues(values [][]*project.ProjectChange) *WatchProjectsResponse_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*WatchProjectsResponse_FieldTerminalPathArrayOfValues)
}

func (s WatchProjectsResponsePathSelectorProjectChanges) WithItemValue(value *project.ProjectChange) *WatchProjectsResponse_FieldTerminalPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*WatchProjectsResponse_FieldTerminalPathArrayItemValue)
}

type WatchProjectsResponsePathSelectorIsCurrent struct{}

func (WatchProjectsResponsePathSelectorIsCurrent) FieldPath() *WatchProjectsResponse_FieldTerminalPath {
	return &WatchProjectsResponse_FieldTerminalPath{selector: WatchProjectsResponse_FieldPathSelectorIsCurrent}
}

func (s WatchProjectsResponsePathSelectorIsCurrent) WithValue(value bool) *WatchProjectsResponse_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*WatchProjectsResponse_FieldTerminalPathValue)
}

func (s WatchProjectsResponsePathSelectorIsCurrent) WithArrayOfValues(values []bool) *WatchProjectsResponse_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*WatchProjectsResponse_FieldTerminalPathArrayOfValues)
}

type WatchProjectsResponsePathSelectorPageTokenChange struct{}

func (WatchProjectsResponsePathSelectorPageTokenChange) FieldPath() *WatchProjectsResponse_FieldTerminalPath {
	return &WatchProjectsResponse_FieldTerminalPath{selector: WatchProjectsResponse_FieldPathSelectorPageTokenChange}
}

func (s WatchProjectsResponsePathSelectorPageTokenChange) WithValue(value *WatchProjectsResponse_PageTokenChange) *WatchProjectsResponse_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*WatchProjectsResponse_FieldTerminalPathValue)
}

func (s WatchProjectsResponsePathSelectorPageTokenChange) WithArrayOfValues(values []*WatchProjectsResponse_PageTokenChange) *WatchProjectsResponse_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*WatchProjectsResponse_FieldTerminalPathArrayOfValues)
}

func (WatchProjectsResponsePathSelectorPageTokenChange) WithSubPath(subPath WatchProjectsResponsePageTokenChange_FieldPath) *WatchProjectsResponse_FieldSubPath {
	return &WatchProjectsResponse_FieldSubPath{selector: WatchProjectsResponse_FieldPathSelectorPageTokenChange, subPath: subPath}
}

func (s WatchProjectsResponsePathSelectorPageTokenChange) WithSubValue(subPathValue WatchProjectsResponsePageTokenChange_FieldPathValue) *WatchProjectsResponse_FieldSubPathValue {
	return &WatchProjectsResponse_FieldSubPathValue{WatchProjectsResponse_FieldPath: s.WithSubPath(subPathValue), subPathValue: subPathValue}
}

func (s WatchProjectsResponsePathSelectorPageTokenChange) WithSubArrayOfValues(subPathArrayOfValues WatchProjectsResponsePageTokenChange_FieldPathArrayOfValues) *WatchProjectsResponse_FieldSubPathArrayOfValues {
	return &WatchProjectsResponse_FieldSubPathArrayOfValues{WatchProjectsResponse_FieldPath: s.WithSubPath(subPathArrayOfValues), subPathArrayOfValues: subPathArrayOfValues}
}

func (s WatchProjectsResponsePathSelectorPageTokenChange) WithSubArrayItemValue(subPathArrayItemValue WatchProjectsResponsePageTokenChange_FieldPathArrayItemValue) *WatchProjectsResponse_FieldSubPathArrayItemValue {
	return &WatchProjectsResponse_FieldSubPathArrayItemValue{WatchProjectsResponse_FieldPath: s.WithSubPath(subPathArrayItemValue), subPathItemValue: subPathArrayItemValue}
}

func (WatchProjectsResponsePathSelectorPageTokenChange) PrevPageToken() WatchProjectsResponsePathSelectorPageTokenChangePrevPageToken {
	return WatchProjectsResponsePathSelectorPageTokenChangePrevPageToken{}
}

func (WatchProjectsResponsePathSelectorPageTokenChange) NextPageToken() WatchProjectsResponsePathSelectorPageTokenChangeNextPageToken {
	return WatchProjectsResponsePathSelectorPageTokenChangeNextPageToken{}
}

type WatchProjectsResponsePathSelectorPageTokenChangePrevPageToken struct{}

func (WatchProjectsResponsePathSelectorPageTokenChangePrevPageToken) FieldPath() *WatchProjectsResponse_FieldSubPath {
	return &WatchProjectsResponse_FieldSubPath{
		selector: WatchProjectsResponse_FieldPathSelectorPageTokenChange,
		subPath:  NewWatchProjectsResponsePageTokenChangeFieldPathBuilder().PrevPageToken().FieldPath(),
	}
}

func (s WatchProjectsResponsePathSelectorPageTokenChangePrevPageToken) WithValue(value *project.PagerCursor) *WatchProjectsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*WatchProjectsResponse_FieldSubPathValue)
}

func (s WatchProjectsResponsePathSelectorPageTokenChangePrevPageToken) WithArrayOfValues(values []*project.PagerCursor) *WatchProjectsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*WatchProjectsResponse_FieldSubPathArrayOfValues)
}

type WatchProjectsResponsePathSelectorPageTokenChangeNextPageToken struct{}

func (WatchProjectsResponsePathSelectorPageTokenChangeNextPageToken) FieldPath() *WatchProjectsResponse_FieldSubPath {
	return &WatchProjectsResponse_FieldSubPath{
		selector: WatchProjectsResponse_FieldPathSelectorPageTokenChange,
		subPath:  NewWatchProjectsResponsePageTokenChangeFieldPathBuilder().NextPageToken().FieldPath(),
	}
}

func (s WatchProjectsResponsePathSelectorPageTokenChangeNextPageToken) WithValue(value *project.PagerCursor) *WatchProjectsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*WatchProjectsResponse_FieldSubPathValue)
}

func (s WatchProjectsResponsePathSelectorPageTokenChangeNextPageToken) WithArrayOfValues(values []*project.PagerCursor) *WatchProjectsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*WatchProjectsResponse_FieldSubPathArrayOfValues)
}

type WatchProjectsResponsePathSelectorResumeToken struct{}

func (WatchProjectsResponsePathSelectorResumeToken) FieldPath() *WatchProjectsResponse_FieldTerminalPath {
	return &WatchProjectsResponse_FieldTerminalPath{selector: WatchProjectsResponse_FieldPathSelectorResumeToken}
}

func (s WatchProjectsResponsePathSelectorResumeToken) WithValue(value string) *WatchProjectsResponse_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*WatchProjectsResponse_FieldTerminalPathValue)
}

func (s WatchProjectsResponsePathSelectorResumeToken) WithArrayOfValues(values []string) *WatchProjectsResponse_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*WatchProjectsResponse_FieldTerminalPathArrayOfValues)
}

type WatchProjectsResponsePathSelectorSnapshotSize struct{}

func (WatchProjectsResponsePathSelectorSnapshotSize) FieldPath() *WatchProjectsResponse_FieldTerminalPath {
	return &WatchProjectsResponse_FieldTerminalPath{selector: WatchProjectsResponse_FieldPathSelectorSnapshotSize}
}

func (s WatchProjectsResponsePathSelectorSnapshotSize) WithValue(value int64) *WatchProjectsResponse_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*WatchProjectsResponse_FieldTerminalPathValue)
}

func (s WatchProjectsResponsePathSelectorSnapshotSize) WithArrayOfValues(values []int64) *WatchProjectsResponse_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*WatchProjectsResponse_FieldTerminalPathArrayOfValues)
}

type WatchProjectsResponsePathSelectorIsSoftReset struct{}

func (WatchProjectsResponsePathSelectorIsSoftReset) FieldPath() *WatchProjectsResponse_FieldTerminalPath {
	return &WatchProjectsResponse_FieldTerminalPath{selector: WatchProjectsResponse_FieldPathSelectorIsSoftReset}
}

func (s WatchProjectsResponsePathSelectorIsSoftReset) WithValue(value bool) *WatchProjectsResponse_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*WatchProjectsResponse_FieldTerminalPathValue)
}

func (s WatchProjectsResponsePathSelectorIsSoftReset) WithArrayOfValues(values []bool) *WatchProjectsResponse_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*WatchProjectsResponse_FieldTerminalPathArrayOfValues)
}

type WatchProjectsResponsePathSelectorIsHardReset struct{}

func (WatchProjectsResponsePathSelectorIsHardReset) FieldPath() *WatchProjectsResponse_FieldTerminalPath {
	return &WatchProjectsResponse_FieldTerminalPath{selector: WatchProjectsResponse_FieldPathSelectorIsHardReset}
}

func (s WatchProjectsResponsePathSelectorIsHardReset) WithValue(value bool) *WatchProjectsResponse_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*WatchProjectsResponse_FieldTerminalPathValue)
}

func (s WatchProjectsResponsePathSelectorIsHardReset) WithArrayOfValues(values []bool) *WatchProjectsResponse_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*WatchProjectsResponse_FieldTerminalPathArrayOfValues)
}

type WatchProjectsResponsePageTokenChangeFieldPathBuilder struct{}

func NewWatchProjectsResponsePageTokenChangeFieldPathBuilder() WatchProjectsResponsePageTokenChangeFieldPathBuilder {
	return WatchProjectsResponsePageTokenChangeFieldPathBuilder{}
}
func (WatchProjectsResponsePageTokenChangeFieldPathBuilder) PrevPageToken() WatchProjectsResponse_PageTokenChangePathSelectorPrevPageToken {
	return WatchProjectsResponse_PageTokenChangePathSelectorPrevPageToken{}
}
func (WatchProjectsResponsePageTokenChangeFieldPathBuilder) NextPageToken() WatchProjectsResponse_PageTokenChangePathSelectorNextPageToken {
	return WatchProjectsResponse_PageTokenChangePathSelectorNextPageToken{}
}

type WatchProjectsResponse_PageTokenChangePathSelectorPrevPageToken struct{}

func (WatchProjectsResponse_PageTokenChangePathSelectorPrevPageToken) FieldPath() *WatchProjectsResponsePageTokenChange_FieldTerminalPath {
	return &WatchProjectsResponsePageTokenChange_FieldTerminalPath{selector: WatchProjectsResponsePageTokenChange_FieldPathSelectorPrevPageToken}
}

func (s WatchProjectsResponse_PageTokenChangePathSelectorPrevPageToken) WithValue(value *project.PagerCursor) *WatchProjectsResponsePageTokenChange_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*WatchProjectsResponsePageTokenChange_FieldTerminalPathValue)
}

func (s WatchProjectsResponse_PageTokenChangePathSelectorPrevPageToken) WithArrayOfValues(values []*project.PagerCursor) *WatchProjectsResponsePageTokenChange_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*WatchProjectsResponsePageTokenChange_FieldTerminalPathArrayOfValues)
}

type WatchProjectsResponse_PageTokenChangePathSelectorNextPageToken struct{}

func (WatchProjectsResponse_PageTokenChangePathSelectorNextPageToken) FieldPath() *WatchProjectsResponsePageTokenChange_FieldTerminalPath {
	return &WatchProjectsResponsePageTokenChange_FieldTerminalPath{selector: WatchProjectsResponsePageTokenChange_FieldPathSelectorNextPageToken}
}

func (s WatchProjectsResponse_PageTokenChangePathSelectorNextPageToken) WithValue(value *project.PagerCursor) *WatchProjectsResponsePageTokenChange_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*WatchProjectsResponsePageTokenChange_FieldTerminalPathValue)
}

func (s WatchProjectsResponse_PageTokenChangePathSelectorNextPageToken) WithArrayOfValues(values []*project.PagerCursor) *WatchProjectsResponsePageTokenChange_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*WatchProjectsResponsePageTokenChange_FieldTerminalPathArrayOfValues)
}

type CreateProjectRequestFieldPathBuilder struct{}

func NewCreateProjectRequestFieldPathBuilder() CreateProjectRequestFieldPathBuilder {
	return CreateProjectRequestFieldPathBuilder{}
}
func (CreateProjectRequestFieldPathBuilder) Project() CreateProjectRequestPathSelectorProject {
	return CreateProjectRequestPathSelectorProject{}
}

type CreateProjectRequestPathSelectorProject struct{}

func (CreateProjectRequestPathSelectorProject) FieldPath() *CreateProjectRequest_FieldTerminalPath {
	return &CreateProjectRequest_FieldTerminalPath{selector: CreateProjectRequest_FieldPathSelectorProject}
}

func (s CreateProjectRequestPathSelectorProject) WithValue(value *project.Project) *CreateProjectRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*CreateProjectRequest_FieldTerminalPathValue)
}

func (s CreateProjectRequestPathSelectorProject) WithArrayOfValues(values []*project.Project) *CreateProjectRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CreateProjectRequest_FieldTerminalPathArrayOfValues)
}

func (CreateProjectRequestPathSelectorProject) WithSubPath(subPath project.Project_FieldPath) *CreateProjectRequest_FieldSubPath {
	return &CreateProjectRequest_FieldSubPath{selector: CreateProjectRequest_FieldPathSelectorProject, subPath: subPath}
}

func (s CreateProjectRequestPathSelectorProject) WithSubValue(subPathValue project.Project_FieldPathValue) *CreateProjectRequest_FieldSubPathValue {
	return &CreateProjectRequest_FieldSubPathValue{CreateProjectRequest_FieldPath: s.WithSubPath(subPathValue), subPathValue: subPathValue}
}

func (s CreateProjectRequestPathSelectorProject) WithSubArrayOfValues(subPathArrayOfValues project.Project_FieldPathArrayOfValues) *CreateProjectRequest_FieldSubPathArrayOfValues {
	return &CreateProjectRequest_FieldSubPathArrayOfValues{CreateProjectRequest_FieldPath: s.WithSubPath(subPathArrayOfValues), subPathArrayOfValues: subPathArrayOfValues}
}

func (s CreateProjectRequestPathSelectorProject) WithSubArrayItemValue(subPathArrayItemValue project.Project_FieldPathArrayItemValue) *CreateProjectRequest_FieldSubPathArrayItemValue {
	return &CreateProjectRequest_FieldSubPathArrayItemValue{CreateProjectRequest_FieldPath: s.WithSubPath(subPathArrayItemValue), subPathItemValue: subPathArrayItemValue}
}

func (CreateProjectRequestPathSelectorProject) Name() CreateProjectRequestPathSelectorProjectName {
	return CreateProjectRequestPathSelectorProjectName{}
}

func (CreateProjectRequestPathSelectorProject) Title() CreateProjectRequestPathSelectorProjectTitle {
	return CreateProjectRequestPathSelectorProjectTitle{}
}

func (CreateProjectRequestPathSelectorProject) ParentOrganization() CreateProjectRequestPathSelectorProjectParentOrganization {
	return CreateProjectRequestPathSelectorProjectParentOrganization{}
}

func (CreateProjectRequestPathSelectorProject) RootOrganization() CreateProjectRequestPathSelectorProjectRootOrganization {
	return CreateProjectRequestPathSelectorProjectRootOrganization{}
}

func (CreateProjectRequestPathSelectorProject) AncestryPath() CreateProjectRequestPathSelectorProjectAncestryPath {
	return CreateProjectRequestPathSelectorProjectAncestryPath{}
}

func (CreateProjectRequestPathSelectorProject) Metadata() CreateProjectRequestPathSelectorProjectMetadata {
	return CreateProjectRequestPathSelectorProjectMetadata{}
}

func (CreateProjectRequestPathSelectorProject) MultiRegionPolicy() CreateProjectRequestPathSelectorProjectMultiRegionPolicy {
	return CreateProjectRequestPathSelectorProjectMultiRegionPolicy{}
}

func (CreateProjectRequestPathSelectorProject) EnabledServices() CreateProjectRequestPathSelectorProjectEnabledServices {
	return CreateProjectRequestPathSelectorProjectEnabledServices{}
}

type CreateProjectRequestPathSelectorProjectName struct{}

func (CreateProjectRequestPathSelectorProjectName) FieldPath() *CreateProjectRequest_FieldSubPath {
	return &CreateProjectRequest_FieldSubPath{
		selector: CreateProjectRequest_FieldPathSelectorProject,
		subPath:  project.NewProjectFieldPathBuilder().Name().FieldPath(),
	}
}

func (s CreateProjectRequestPathSelectorProjectName) WithValue(value *project.Name) *CreateProjectRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*CreateProjectRequest_FieldSubPathValue)
}

func (s CreateProjectRequestPathSelectorProjectName) WithArrayOfValues(values []*project.Name) *CreateProjectRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CreateProjectRequest_FieldSubPathArrayOfValues)
}

type CreateProjectRequestPathSelectorProjectTitle struct{}

func (CreateProjectRequestPathSelectorProjectTitle) FieldPath() *CreateProjectRequest_FieldSubPath {
	return &CreateProjectRequest_FieldSubPath{
		selector: CreateProjectRequest_FieldPathSelectorProject,
		subPath:  project.NewProjectFieldPathBuilder().Title().FieldPath(),
	}
}

func (s CreateProjectRequestPathSelectorProjectTitle) WithValue(value string) *CreateProjectRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*CreateProjectRequest_FieldSubPathValue)
}

func (s CreateProjectRequestPathSelectorProjectTitle) WithArrayOfValues(values []string) *CreateProjectRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CreateProjectRequest_FieldSubPathArrayOfValues)
}

type CreateProjectRequestPathSelectorProjectParentOrganization struct{}

func (CreateProjectRequestPathSelectorProjectParentOrganization) FieldPath() *CreateProjectRequest_FieldSubPath {
	return &CreateProjectRequest_FieldSubPath{
		selector: CreateProjectRequest_FieldPathSelectorProject,
		subPath:  project.NewProjectFieldPathBuilder().ParentOrganization().FieldPath(),
	}
}

func (s CreateProjectRequestPathSelectorProjectParentOrganization) WithValue(value *organization.Reference) *CreateProjectRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*CreateProjectRequest_FieldSubPathValue)
}

func (s CreateProjectRequestPathSelectorProjectParentOrganization) WithArrayOfValues(values []*organization.Reference) *CreateProjectRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CreateProjectRequest_FieldSubPathArrayOfValues)
}

type CreateProjectRequestPathSelectorProjectRootOrganization struct{}

func (CreateProjectRequestPathSelectorProjectRootOrganization) FieldPath() *CreateProjectRequest_FieldSubPath {
	return &CreateProjectRequest_FieldSubPath{
		selector: CreateProjectRequest_FieldPathSelectorProject,
		subPath:  project.NewProjectFieldPathBuilder().RootOrganization().FieldPath(),
	}
}

func (s CreateProjectRequestPathSelectorProjectRootOrganization) WithValue(value *organization.Reference) *CreateProjectRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*CreateProjectRequest_FieldSubPathValue)
}

func (s CreateProjectRequestPathSelectorProjectRootOrganization) WithArrayOfValues(values []*organization.Reference) *CreateProjectRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CreateProjectRequest_FieldSubPathArrayOfValues)
}

type CreateProjectRequestPathSelectorProjectAncestryPath struct{}

func (CreateProjectRequestPathSelectorProjectAncestryPath) FieldPath() *CreateProjectRequest_FieldSubPath {
	return &CreateProjectRequest_FieldSubPath{
		selector: CreateProjectRequest_FieldPathSelectorProject,
		subPath:  project.NewProjectFieldPathBuilder().AncestryPath().FieldPath(),
	}
}

func (s CreateProjectRequestPathSelectorProjectAncestryPath) WithValue(value []*organization.Reference) *CreateProjectRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*CreateProjectRequest_FieldSubPathValue)
}

func (s CreateProjectRequestPathSelectorProjectAncestryPath) WithArrayOfValues(values [][]*organization.Reference) *CreateProjectRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CreateProjectRequest_FieldSubPathArrayOfValues)
}

func (s CreateProjectRequestPathSelectorProjectAncestryPath) WithItemValue(value *organization.Reference) *CreateProjectRequest_FieldSubPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*CreateProjectRequest_FieldSubPathArrayItemValue)
}

type CreateProjectRequestPathSelectorProjectMetadata struct{}

func (CreateProjectRequestPathSelectorProjectMetadata) FieldPath() *CreateProjectRequest_FieldSubPath {
	return &CreateProjectRequest_FieldSubPath{
		selector: CreateProjectRequest_FieldPathSelectorProject,
		subPath:  project.NewProjectFieldPathBuilder().Metadata().FieldPath(),
	}
}

func (s CreateProjectRequestPathSelectorProjectMetadata) WithValue(value *ntt_meta.Meta) *CreateProjectRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*CreateProjectRequest_FieldSubPathValue)
}

func (s CreateProjectRequestPathSelectorProjectMetadata) WithArrayOfValues(values []*ntt_meta.Meta) *CreateProjectRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CreateProjectRequest_FieldSubPathArrayOfValues)
}

func (CreateProjectRequestPathSelectorProjectMetadata) CreateTime() CreateProjectRequestPathSelectorProjectMetadataCreateTime {
	return CreateProjectRequestPathSelectorProjectMetadataCreateTime{}
}

func (CreateProjectRequestPathSelectorProjectMetadata) UpdateTime() CreateProjectRequestPathSelectorProjectMetadataUpdateTime {
	return CreateProjectRequestPathSelectorProjectMetadataUpdateTime{}
}

func (CreateProjectRequestPathSelectorProjectMetadata) Uuid() CreateProjectRequestPathSelectorProjectMetadataUuid {
	return CreateProjectRequestPathSelectorProjectMetadataUuid{}
}

func (CreateProjectRequestPathSelectorProjectMetadata) Tags() CreateProjectRequestPathSelectorProjectMetadataTags {
	return CreateProjectRequestPathSelectorProjectMetadataTags{}
}

func (CreateProjectRequestPathSelectorProjectMetadata) Labels() CreateProjectRequestPathSelectorProjectMetadataLabels {
	return CreateProjectRequestPathSelectorProjectMetadataLabels{}
}

func (CreateProjectRequestPathSelectorProjectMetadata) Annotations() CreateProjectRequestPathSelectorProjectMetadataAnnotations {
	return CreateProjectRequestPathSelectorProjectMetadataAnnotations{}
}

func (CreateProjectRequestPathSelectorProjectMetadata) Generation() CreateProjectRequestPathSelectorProjectMetadataGeneration {
	return CreateProjectRequestPathSelectorProjectMetadataGeneration{}
}

func (CreateProjectRequestPathSelectorProjectMetadata) ResourceVersion() CreateProjectRequestPathSelectorProjectMetadataResourceVersion {
	return CreateProjectRequestPathSelectorProjectMetadataResourceVersion{}
}

func (CreateProjectRequestPathSelectorProjectMetadata) OwnerReferences() CreateProjectRequestPathSelectorProjectMetadataOwnerReferences {
	return CreateProjectRequestPathSelectorProjectMetadataOwnerReferences{}
}

func (CreateProjectRequestPathSelectorProjectMetadata) Shards() CreateProjectRequestPathSelectorProjectMetadataShards {
	return CreateProjectRequestPathSelectorProjectMetadataShards{}
}

func (CreateProjectRequestPathSelectorProjectMetadata) Syncing() CreateProjectRequestPathSelectorProjectMetadataSyncing {
	return CreateProjectRequestPathSelectorProjectMetadataSyncing{}
}

type CreateProjectRequestPathSelectorProjectMetadataCreateTime struct{}

func (CreateProjectRequestPathSelectorProjectMetadataCreateTime) FieldPath() *CreateProjectRequest_FieldSubPath {
	return &CreateProjectRequest_FieldSubPath{
		selector: CreateProjectRequest_FieldPathSelectorProject,
		subPath:  project.NewProjectFieldPathBuilder().Metadata().CreateTime().FieldPath(),
	}
}

func (s CreateProjectRequestPathSelectorProjectMetadataCreateTime) WithValue(value *timestamp.Timestamp) *CreateProjectRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*CreateProjectRequest_FieldSubPathValue)
}

func (s CreateProjectRequestPathSelectorProjectMetadataCreateTime) WithArrayOfValues(values []*timestamp.Timestamp) *CreateProjectRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CreateProjectRequest_FieldSubPathArrayOfValues)
}

type CreateProjectRequestPathSelectorProjectMetadataUpdateTime struct{}

func (CreateProjectRequestPathSelectorProjectMetadataUpdateTime) FieldPath() *CreateProjectRequest_FieldSubPath {
	return &CreateProjectRequest_FieldSubPath{
		selector: CreateProjectRequest_FieldPathSelectorProject,
		subPath:  project.NewProjectFieldPathBuilder().Metadata().UpdateTime().FieldPath(),
	}
}

func (s CreateProjectRequestPathSelectorProjectMetadataUpdateTime) WithValue(value *timestamp.Timestamp) *CreateProjectRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*CreateProjectRequest_FieldSubPathValue)
}

func (s CreateProjectRequestPathSelectorProjectMetadataUpdateTime) WithArrayOfValues(values []*timestamp.Timestamp) *CreateProjectRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CreateProjectRequest_FieldSubPathArrayOfValues)
}

type CreateProjectRequestPathSelectorProjectMetadataUuid struct{}

func (CreateProjectRequestPathSelectorProjectMetadataUuid) FieldPath() *CreateProjectRequest_FieldSubPath {
	return &CreateProjectRequest_FieldSubPath{
		selector: CreateProjectRequest_FieldPathSelectorProject,
		subPath:  project.NewProjectFieldPathBuilder().Metadata().Uuid().FieldPath(),
	}
}

func (s CreateProjectRequestPathSelectorProjectMetadataUuid) WithValue(value string) *CreateProjectRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*CreateProjectRequest_FieldSubPathValue)
}

func (s CreateProjectRequestPathSelectorProjectMetadataUuid) WithArrayOfValues(values []string) *CreateProjectRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CreateProjectRequest_FieldSubPathArrayOfValues)
}

type CreateProjectRequestPathSelectorProjectMetadataTags struct{}

func (CreateProjectRequestPathSelectorProjectMetadataTags) FieldPath() *CreateProjectRequest_FieldSubPath {
	return &CreateProjectRequest_FieldSubPath{
		selector: CreateProjectRequest_FieldPathSelectorProject,
		subPath:  project.NewProjectFieldPathBuilder().Metadata().Tags().FieldPath(),
	}
}

func (s CreateProjectRequestPathSelectorProjectMetadataTags) WithValue(value []string) *CreateProjectRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*CreateProjectRequest_FieldSubPathValue)
}

func (s CreateProjectRequestPathSelectorProjectMetadataTags) WithArrayOfValues(values [][]string) *CreateProjectRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CreateProjectRequest_FieldSubPathArrayOfValues)
}

func (s CreateProjectRequestPathSelectorProjectMetadataTags) WithItemValue(value string) *CreateProjectRequest_FieldSubPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*CreateProjectRequest_FieldSubPathArrayItemValue)
}

type CreateProjectRequestPathSelectorProjectMetadataLabels struct{}

func (CreateProjectRequestPathSelectorProjectMetadataLabels) FieldPath() *CreateProjectRequest_FieldSubPath {
	return &CreateProjectRequest_FieldSubPath{
		selector: CreateProjectRequest_FieldPathSelectorProject,
		subPath:  project.NewProjectFieldPathBuilder().Metadata().Labels().FieldPath(),
	}
}

func (s CreateProjectRequestPathSelectorProjectMetadataLabels) WithValue(value map[string]string) *CreateProjectRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*CreateProjectRequest_FieldSubPathValue)
}

func (s CreateProjectRequestPathSelectorProjectMetadataLabels) WithArrayOfValues(values []map[string]string) *CreateProjectRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CreateProjectRequest_FieldSubPathArrayOfValues)
}

func (CreateProjectRequestPathSelectorProjectMetadataLabels) WithKey(key string) CreateProjectRequestMapPathSelectorProjectMetadataLabels {
	return CreateProjectRequestMapPathSelectorProjectMetadataLabels{key: key}
}

type CreateProjectRequestMapPathSelectorProjectMetadataLabels struct {
	key string
}

func (s CreateProjectRequestMapPathSelectorProjectMetadataLabels) FieldPath() *CreateProjectRequest_FieldSubPath {
	return &CreateProjectRequest_FieldSubPath{
		selector: CreateProjectRequest_FieldPathSelectorProject,
		subPath:  project.NewProjectFieldPathBuilder().Metadata().Labels().WithKey(s.key).FieldPath(),
	}
}

func (s CreateProjectRequestMapPathSelectorProjectMetadataLabels) WithValue(value string) *CreateProjectRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*CreateProjectRequest_FieldSubPathValue)
}

func (s CreateProjectRequestMapPathSelectorProjectMetadataLabels) WithArrayOfValues(values []string) *CreateProjectRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CreateProjectRequest_FieldSubPathArrayOfValues)
}

type CreateProjectRequestPathSelectorProjectMetadataAnnotations struct{}

func (CreateProjectRequestPathSelectorProjectMetadataAnnotations) FieldPath() *CreateProjectRequest_FieldSubPath {
	return &CreateProjectRequest_FieldSubPath{
		selector: CreateProjectRequest_FieldPathSelectorProject,
		subPath:  project.NewProjectFieldPathBuilder().Metadata().Annotations().FieldPath(),
	}
}

func (s CreateProjectRequestPathSelectorProjectMetadataAnnotations) WithValue(value map[string]string) *CreateProjectRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*CreateProjectRequest_FieldSubPathValue)
}

func (s CreateProjectRequestPathSelectorProjectMetadataAnnotations) WithArrayOfValues(values []map[string]string) *CreateProjectRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CreateProjectRequest_FieldSubPathArrayOfValues)
}

func (CreateProjectRequestPathSelectorProjectMetadataAnnotations) WithKey(key string) CreateProjectRequestMapPathSelectorProjectMetadataAnnotations {
	return CreateProjectRequestMapPathSelectorProjectMetadataAnnotations{key: key}
}

type CreateProjectRequestMapPathSelectorProjectMetadataAnnotations struct {
	key string
}

func (s CreateProjectRequestMapPathSelectorProjectMetadataAnnotations) FieldPath() *CreateProjectRequest_FieldSubPath {
	return &CreateProjectRequest_FieldSubPath{
		selector: CreateProjectRequest_FieldPathSelectorProject,
		subPath:  project.NewProjectFieldPathBuilder().Metadata().Annotations().WithKey(s.key).FieldPath(),
	}
}

func (s CreateProjectRequestMapPathSelectorProjectMetadataAnnotations) WithValue(value string) *CreateProjectRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*CreateProjectRequest_FieldSubPathValue)
}

func (s CreateProjectRequestMapPathSelectorProjectMetadataAnnotations) WithArrayOfValues(values []string) *CreateProjectRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CreateProjectRequest_FieldSubPathArrayOfValues)
}

type CreateProjectRequestPathSelectorProjectMetadataGeneration struct{}

func (CreateProjectRequestPathSelectorProjectMetadataGeneration) FieldPath() *CreateProjectRequest_FieldSubPath {
	return &CreateProjectRequest_FieldSubPath{
		selector: CreateProjectRequest_FieldPathSelectorProject,
		subPath:  project.NewProjectFieldPathBuilder().Metadata().Generation().FieldPath(),
	}
}

func (s CreateProjectRequestPathSelectorProjectMetadataGeneration) WithValue(value int64) *CreateProjectRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*CreateProjectRequest_FieldSubPathValue)
}

func (s CreateProjectRequestPathSelectorProjectMetadataGeneration) WithArrayOfValues(values []int64) *CreateProjectRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CreateProjectRequest_FieldSubPathArrayOfValues)
}

type CreateProjectRequestPathSelectorProjectMetadataResourceVersion struct{}

func (CreateProjectRequestPathSelectorProjectMetadataResourceVersion) FieldPath() *CreateProjectRequest_FieldSubPath {
	return &CreateProjectRequest_FieldSubPath{
		selector: CreateProjectRequest_FieldPathSelectorProject,
		subPath:  project.NewProjectFieldPathBuilder().Metadata().ResourceVersion().FieldPath(),
	}
}

func (s CreateProjectRequestPathSelectorProjectMetadataResourceVersion) WithValue(value string) *CreateProjectRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*CreateProjectRequest_FieldSubPathValue)
}

func (s CreateProjectRequestPathSelectorProjectMetadataResourceVersion) WithArrayOfValues(values []string) *CreateProjectRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CreateProjectRequest_FieldSubPathArrayOfValues)
}

type CreateProjectRequestPathSelectorProjectMetadataOwnerReferences struct{}

func (CreateProjectRequestPathSelectorProjectMetadataOwnerReferences) FieldPath() *CreateProjectRequest_FieldSubPath {
	return &CreateProjectRequest_FieldSubPath{
		selector: CreateProjectRequest_FieldPathSelectorProject,
		subPath:  project.NewProjectFieldPathBuilder().Metadata().OwnerReferences().FieldPath(),
	}
}

func (s CreateProjectRequestPathSelectorProjectMetadataOwnerReferences) WithValue(value []*ntt_meta.OwnerReference) *CreateProjectRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*CreateProjectRequest_FieldSubPathValue)
}

func (s CreateProjectRequestPathSelectorProjectMetadataOwnerReferences) WithArrayOfValues(values [][]*ntt_meta.OwnerReference) *CreateProjectRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CreateProjectRequest_FieldSubPathArrayOfValues)
}

func (s CreateProjectRequestPathSelectorProjectMetadataOwnerReferences) WithItemValue(value *ntt_meta.OwnerReference) *CreateProjectRequest_FieldSubPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*CreateProjectRequest_FieldSubPathArrayItemValue)
}

func (CreateProjectRequestPathSelectorProjectMetadataOwnerReferences) ApiVersion() CreateProjectRequestPathSelectorProjectMetadataOwnerReferencesApiVersion {
	return CreateProjectRequestPathSelectorProjectMetadataOwnerReferencesApiVersion{}
}

func (CreateProjectRequestPathSelectorProjectMetadataOwnerReferences) Kind() CreateProjectRequestPathSelectorProjectMetadataOwnerReferencesKind {
	return CreateProjectRequestPathSelectorProjectMetadataOwnerReferencesKind{}
}

func (CreateProjectRequestPathSelectorProjectMetadataOwnerReferences) Name() CreateProjectRequestPathSelectorProjectMetadataOwnerReferencesName {
	return CreateProjectRequestPathSelectorProjectMetadataOwnerReferencesName{}
}

func (CreateProjectRequestPathSelectorProjectMetadataOwnerReferences) Uid() CreateProjectRequestPathSelectorProjectMetadataOwnerReferencesUid {
	return CreateProjectRequestPathSelectorProjectMetadataOwnerReferencesUid{}
}

func (CreateProjectRequestPathSelectorProjectMetadataOwnerReferences) Controller() CreateProjectRequestPathSelectorProjectMetadataOwnerReferencesController {
	return CreateProjectRequestPathSelectorProjectMetadataOwnerReferencesController{}
}

func (CreateProjectRequestPathSelectorProjectMetadataOwnerReferences) BlockOwnerDeletion() CreateProjectRequestPathSelectorProjectMetadataOwnerReferencesBlockOwnerDeletion {
	return CreateProjectRequestPathSelectorProjectMetadataOwnerReferencesBlockOwnerDeletion{}
}

type CreateProjectRequestPathSelectorProjectMetadataOwnerReferencesApiVersion struct{}

func (CreateProjectRequestPathSelectorProjectMetadataOwnerReferencesApiVersion) FieldPath() *CreateProjectRequest_FieldSubPath {
	return &CreateProjectRequest_FieldSubPath{
		selector: CreateProjectRequest_FieldPathSelectorProject,
		subPath:  project.NewProjectFieldPathBuilder().Metadata().OwnerReferences().ApiVersion().FieldPath(),
	}
}

func (s CreateProjectRequestPathSelectorProjectMetadataOwnerReferencesApiVersion) WithValue(value string) *CreateProjectRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*CreateProjectRequest_FieldSubPathValue)
}

func (s CreateProjectRequestPathSelectorProjectMetadataOwnerReferencesApiVersion) WithArrayOfValues(values []string) *CreateProjectRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CreateProjectRequest_FieldSubPathArrayOfValues)
}

type CreateProjectRequestPathSelectorProjectMetadataOwnerReferencesKind struct{}

func (CreateProjectRequestPathSelectorProjectMetadataOwnerReferencesKind) FieldPath() *CreateProjectRequest_FieldSubPath {
	return &CreateProjectRequest_FieldSubPath{
		selector: CreateProjectRequest_FieldPathSelectorProject,
		subPath:  project.NewProjectFieldPathBuilder().Metadata().OwnerReferences().Kind().FieldPath(),
	}
}

func (s CreateProjectRequestPathSelectorProjectMetadataOwnerReferencesKind) WithValue(value string) *CreateProjectRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*CreateProjectRequest_FieldSubPathValue)
}

func (s CreateProjectRequestPathSelectorProjectMetadataOwnerReferencesKind) WithArrayOfValues(values []string) *CreateProjectRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CreateProjectRequest_FieldSubPathArrayOfValues)
}

type CreateProjectRequestPathSelectorProjectMetadataOwnerReferencesName struct{}

func (CreateProjectRequestPathSelectorProjectMetadataOwnerReferencesName) FieldPath() *CreateProjectRequest_FieldSubPath {
	return &CreateProjectRequest_FieldSubPath{
		selector: CreateProjectRequest_FieldPathSelectorProject,
		subPath:  project.NewProjectFieldPathBuilder().Metadata().OwnerReferences().Name().FieldPath(),
	}
}

func (s CreateProjectRequestPathSelectorProjectMetadataOwnerReferencesName) WithValue(value string) *CreateProjectRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*CreateProjectRequest_FieldSubPathValue)
}

func (s CreateProjectRequestPathSelectorProjectMetadataOwnerReferencesName) WithArrayOfValues(values []string) *CreateProjectRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CreateProjectRequest_FieldSubPathArrayOfValues)
}

type CreateProjectRequestPathSelectorProjectMetadataOwnerReferencesUid struct{}

func (CreateProjectRequestPathSelectorProjectMetadataOwnerReferencesUid) FieldPath() *CreateProjectRequest_FieldSubPath {
	return &CreateProjectRequest_FieldSubPath{
		selector: CreateProjectRequest_FieldPathSelectorProject,
		subPath:  project.NewProjectFieldPathBuilder().Metadata().OwnerReferences().Uid().FieldPath(),
	}
}

func (s CreateProjectRequestPathSelectorProjectMetadataOwnerReferencesUid) WithValue(value string) *CreateProjectRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*CreateProjectRequest_FieldSubPathValue)
}

func (s CreateProjectRequestPathSelectorProjectMetadataOwnerReferencesUid) WithArrayOfValues(values []string) *CreateProjectRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CreateProjectRequest_FieldSubPathArrayOfValues)
}

type CreateProjectRequestPathSelectorProjectMetadataOwnerReferencesController struct{}

func (CreateProjectRequestPathSelectorProjectMetadataOwnerReferencesController) FieldPath() *CreateProjectRequest_FieldSubPath {
	return &CreateProjectRequest_FieldSubPath{
		selector: CreateProjectRequest_FieldPathSelectorProject,
		subPath:  project.NewProjectFieldPathBuilder().Metadata().OwnerReferences().Controller().FieldPath(),
	}
}

func (s CreateProjectRequestPathSelectorProjectMetadataOwnerReferencesController) WithValue(value bool) *CreateProjectRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*CreateProjectRequest_FieldSubPathValue)
}

func (s CreateProjectRequestPathSelectorProjectMetadataOwnerReferencesController) WithArrayOfValues(values []bool) *CreateProjectRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CreateProjectRequest_FieldSubPathArrayOfValues)
}

type CreateProjectRequestPathSelectorProjectMetadataOwnerReferencesBlockOwnerDeletion struct{}

func (CreateProjectRequestPathSelectorProjectMetadataOwnerReferencesBlockOwnerDeletion) FieldPath() *CreateProjectRequest_FieldSubPath {
	return &CreateProjectRequest_FieldSubPath{
		selector: CreateProjectRequest_FieldPathSelectorProject,
		subPath:  project.NewProjectFieldPathBuilder().Metadata().OwnerReferences().BlockOwnerDeletion().FieldPath(),
	}
}

func (s CreateProjectRequestPathSelectorProjectMetadataOwnerReferencesBlockOwnerDeletion) WithValue(value bool) *CreateProjectRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*CreateProjectRequest_FieldSubPathValue)
}

func (s CreateProjectRequestPathSelectorProjectMetadataOwnerReferencesBlockOwnerDeletion) WithArrayOfValues(values []bool) *CreateProjectRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CreateProjectRequest_FieldSubPathArrayOfValues)
}

type CreateProjectRequestPathSelectorProjectMetadataShards struct{}

func (CreateProjectRequestPathSelectorProjectMetadataShards) FieldPath() *CreateProjectRequest_FieldSubPath {
	return &CreateProjectRequest_FieldSubPath{
		selector: CreateProjectRequest_FieldPathSelectorProject,
		subPath:  project.NewProjectFieldPathBuilder().Metadata().Shards().FieldPath(),
	}
}

func (s CreateProjectRequestPathSelectorProjectMetadataShards) WithValue(value map[string]int64) *CreateProjectRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*CreateProjectRequest_FieldSubPathValue)
}

func (s CreateProjectRequestPathSelectorProjectMetadataShards) WithArrayOfValues(values []map[string]int64) *CreateProjectRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CreateProjectRequest_FieldSubPathArrayOfValues)
}

func (CreateProjectRequestPathSelectorProjectMetadataShards) WithKey(key string) CreateProjectRequestMapPathSelectorProjectMetadataShards {
	return CreateProjectRequestMapPathSelectorProjectMetadataShards{key: key}
}

type CreateProjectRequestMapPathSelectorProjectMetadataShards struct {
	key string
}

func (s CreateProjectRequestMapPathSelectorProjectMetadataShards) FieldPath() *CreateProjectRequest_FieldSubPath {
	return &CreateProjectRequest_FieldSubPath{
		selector: CreateProjectRequest_FieldPathSelectorProject,
		subPath:  project.NewProjectFieldPathBuilder().Metadata().Shards().WithKey(s.key).FieldPath(),
	}
}

func (s CreateProjectRequestMapPathSelectorProjectMetadataShards) WithValue(value int64) *CreateProjectRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*CreateProjectRequest_FieldSubPathValue)
}

func (s CreateProjectRequestMapPathSelectorProjectMetadataShards) WithArrayOfValues(values []int64) *CreateProjectRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CreateProjectRequest_FieldSubPathArrayOfValues)
}

type CreateProjectRequestPathSelectorProjectMetadataSyncing struct{}

func (CreateProjectRequestPathSelectorProjectMetadataSyncing) FieldPath() *CreateProjectRequest_FieldSubPath {
	return &CreateProjectRequest_FieldSubPath{
		selector: CreateProjectRequest_FieldPathSelectorProject,
		subPath:  project.NewProjectFieldPathBuilder().Metadata().Syncing().FieldPath(),
	}
}

func (s CreateProjectRequestPathSelectorProjectMetadataSyncing) WithValue(value *ntt_meta.SyncingMeta) *CreateProjectRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*CreateProjectRequest_FieldSubPathValue)
}

func (s CreateProjectRequestPathSelectorProjectMetadataSyncing) WithArrayOfValues(values []*ntt_meta.SyncingMeta) *CreateProjectRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CreateProjectRequest_FieldSubPathArrayOfValues)
}

func (CreateProjectRequestPathSelectorProjectMetadataSyncing) OwningRegion() CreateProjectRequestPathSelectorProjectMetadataSyncingOwningRegion {
	return CreateProjectRequestPathSelectorProjectMetadataSyncingOwningRegion{}
}

func (CreateProjectRequestPathSelectorProjectMetadataSyncing) Regions() CreateProjectRequestPathSelectorProjectMetadataSyncingRegions {
	return CreateProjectRequestPathSelectorProjectMetadataSyncingRegions{}
}

type CreateProjectRequestPathSelectorProjectMetadataSyncingOwningRegion struct{}

func (CreateProjectRequestPathSelectorProjectMetadataSyncingOwningRegion) FieldPath() *CreateProjectRequest_FieldSubPath {
	return &CreateProjectRequest_FieldSubPath{
		selector: CreateProjectRequest_FieldPathSelectorProject,
		subPath:  project.NewProjectFieldPathBuilder().Metadata().Syncing().OwningRegion().FieldPath(),
	}
}

func (s CreateProjectRequestPathSelectorProjectMetadataSyncingOwningRegion) WithValue(value string) *CreateProjectRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*CreateProjectRequest_FieldSubPathValue)
}

func (s CreateProjectRequestPathSelectorProjectMetadataSyncingOwningRegion) WithArrayOfValues(values []string) *CreateProjectRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CreateProjectRequest_FieldSubPathArrayOfValues)
}

type CreateProjectRequestPathSelectorProjectMetadataSyncingRegions struct{}

func (CreateProjectRequestPathSelectorProjectMetadataSyncingRegions) FieldPath() *CreateProjectRequest_FieldSubPath {
	return &CreateProjectRequest_FieldSubPath{
		selector: CreateProjectRequest_FieldPathSelectorProject,
		subPath:  project.NewProjectFieldPathBuilder().Metadata().Syncing().Regions().FieldPath(),
	}
}

func (s CreateProjectRequestPathSelectorProjectMetadataSyncingRegions) WithValue(value []string) *CreateProjectRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*CreateProjectRequest_FieldSubPathValue)
}

func (s CreateProjectRequestPathSelectorProjectMetadataSyncingRegions) WithArrayOfValues(values [][]string) *CreateProjectRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CreateProjectRequest_FieldSubPathArrayOfValues)
}

func (s CreateProjectRequestPathSelectorProjectMetadataSyncingRegions) WithItemValue(value string) *CreateProjectRequest_FieldSubPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*CreateProjectRequest_FieldSubPathArrayItemValue)
}

type CreateProjectRequestPathSelectorProjectMultiRegionPolicy struct{}

func (CreateProjectRequestPathSelectorProjectMultiRegionPolicy) FieldPath() *CreateProjectRequest_FieldSubPath {
	return &CreateProjectRequest_FieldSubPath{
		selector: CreateProjectRequest_FieldPathSelectorProject,
		subPath:  project.NewProjectFieldPathBuilder().MultiRegionPolicy().FieldPath(),
	}
}

func (s CreateProjectRequestPathSelectorProjectMultiRegionPolicy) WithValue(value *multi_region_policy.MultiRegionPolicy) *CreateProjectRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*CreateProjectRequest_FieldSubPathValue)
}

func (s CreateProjectRequestPathSelectorProjectMultiRegionPolicy) WithArrayOfValues(values []*multi_region_policy.MultiRegionPolicy) *CreateProjectRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CreateProjectRequest_FieldSubPathArrayOfValues)
}

func (CreateProjectRequestPathSelectorProjectMultiRegionPolicy) EnabledRegions() CreateProjectRequestPathSelectorProjectMultiRegionPolicyEnabledRegions {
	return CreateProjectRequestPathSelectorProjectMultiRegionPolicyEnabledRegions{}
}

func (CreateProjectRequestPathSelectorProjectMultiRegionPolicy) DefaultControlRegion() CreateProjectRequestPathSelectorProjectMultiRegionPolicyDefaultControlRegion {
	return CreateProjectRequestPathSelectorProjectMultiRegionPolicyDefaultControlRegion{}
}

func (CreateProjectRequestPathSelectorProjectMultiRegionPolicy) CriteriaForDisabledSync() CreateProjectRequestPathSelectorProjectMultiRegionPolicyCriteriaForDisabledSync {
	return CreateProjectRequestPathSelectorProjectMultiRegionPolicyCriteriaForDisabledSync{}
}

type CreateProjectRequestPathSelectorProjectMultiRegionPolicyEnabledRegions struct{}

func (CreateProjectRequestPathSelectorProjectMultiRegionPolicyEnabledRegions) FieldPath() *CreateProjectRequest_FieldSubPath {
	return &CreateProjectRequest_FieldSubPath{
		selector: CreateProjectRequest_FieldPathSelectorProject,
		subPath:  project.NewProjectFieldPathBuilder().MultiRegionPolicy().EnabledRegions().FieldPath(),
	}
}

func (s CreateProjectRequestPathSelectorProjectMultiRegionPolicyEnabledRegions) WithValue(value []string) *CreateProjectRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*CreateProjectRequest_FieldSubPathValue)
}

func (s CreateProjectRequestPathSelectorProjectMultiRegionPolicyEnabledRegions) WithArrayOfValues(values [][]string) *CreateProjectRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CreateProjectRequest_FieldSubPathArrayOfValues)
}

func (s CreateProjectRequestPathSelectorProjectMultiRegionPolicyEnabledRegions) WithItemValue(value string) *CreateProjectRequest_FieldSubPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*CreateProjectRequest_FieldSubPathArrayItemValue)
}

type CreateProjectRequestPathSelectorProjectMultiRegionPolicyDefaultControlRegion struct{}

func (CreateProjectRequestPathSelectorProjectMultiRegionPolicyDefaultControlRegion) FieldPath() *CreateProjectRequest_FieldSubPath {
	return &CreateProjectRequest_FieldSubPath{
		selector: CreateProjectRequest_FieldPathSelectorProject,
		subPath:  project.NewProjectFieldPathBuilder().MultiRegionPolicy().DefaultControlRegion().FieldPath(),
	}
}

func (s CreateProjectRequestPathSelectorProjectMultiRegionPolicyDefaultControlRegion) WithValue(value string) *CreateProjectRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*CreateProjectRequest_FieldSubPathValue)
}

func (s CreateProjectRequestPathSelectorProjectMultiRegionPolicyDefaultControlRegion) WithArrayOfValues(values []string) *CreateProjectRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CreateProjectRequest_FieldSubPathArrayOfValues)
}

type CreateProjectRequestPathSelectorProjectMultiRegionPolicyCriteriaForDisabledSync struct{}

func (CreateProjectRequestPathSelectorProjectMultiRegionPolicyCriteriaForDisabledSync) FieldPath() *CreateProjectRequest_FieldSubPath {
	return &CreateProjectRequest_FieldSubPath{
		selector: CreateProjectRequest_FieldPathSelectorProject,
		subPath:  project.NewProjectFieldPathBuilder().MultiRegionPolicy().CriteriaForDisabledSync().FieldPath(),
	}
}

func (s CreateProjectRequestPathSelectorProjectMultiRegionPolicyCriteriaForDisabledSync) WithValue(value []*multi_region_policy.MultiRegionPolicy_CriteriaForDisabledSync) *CreateProjectRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*CreateProjectRequest_FieldSubPathValue)
}

func (s CreateProjectRequestPathSelectorProjectMultiRegionPolicyCriteriaForDisabledSync) WithArrayOfValues(values [][]*multi_region_policy.MultiRegionPolicy_CriteriaForDisabledSync) *CreateProjectRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CreateProjectRequest_FieldSubPathArrayOfValues)
}

func (s CreateProjectRequestPathSelectorProjectMultiRegionPolicyCriteriaForDisabledSync) WithItemValue(value *multi_region_policy.MultiRegionPolicy_CriteriaForDisabledSync) *CreateProjectRequest_FieldSubPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*CreateProjectRequest_FieldSubPathArrayItemValue)
}

func (CreateProjectRequestPathSelectorProjectMultiRegionPolicyCriteriaForDisabledSync) ResourceTypeName() CreateProjectRequestPathSelectorProjectMultiRegionPolicyCriteriaForDisabledSyncResourceTypeName {
	return CreateProjectRequestPathSelectorProjectMultiRegionPolicyCriteriaForDisabledSyncResourceTypeName{}
}

func (CreateProjectRequestPathSelectorProjectMultiRegionPolicyCriteriaForDisabledSync) SourceRegion() CreateProjectRequestPathSelectorProjectMultiRegionPolicyCriteriaForDisabledSyncSourceRegion {
	return CreateProjectRequestPathSelectorProjectMultiRegionPolicyCriteriaForDisabledSyncSourceRegion{}
}

func (CreateProjectRequestPathSelectorProjectMultiRegionPolicyCriteriaForDisabledSync) DestRegion() CreateProjectRequestPathSelectorProjectMultiRegionPolicyCriteriaForDisabledSyncDestRegion {
	return CreateProjectRequestPathSelectorProjectMultiRegionPolicyCriteriaForDisabledSyncDestRegion{}
}

type CreateProjectRequestPathSelectorProjectMultiRegionPolicyCriteriaForDisabledSyncResourceTypeName struct{}

func (CreateProjectRequestPathSelectorProjectMultiRegionPolicyCriteriaForDisabledSyncResourceTypeName) FieldPath() *CreateProjectRequest_FieldSubPath {
	return &CreateProjectRequest_FieldSubPath{
		selector: CreateProjectRequest_FieldPathSelectorProject,
		subPath:  project.NewProjectFieldPathBuilder().MultiRegionPolicy().CriteriaForDisabledSync().ResourceTypeName().FieldPath(),
	}
}

func (s CreateProjectRequestPathSelectorProjectMultiRegionPolicyCriteriaForDisabledSyncResourceTypeName) WithValue(value string) *CreateProjectRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*CreateProjectRequest_FieldSubPathValue)
}

func (s CreateProjectRequestPathSelectorProjectMultiRegionPolicyCriteriaForDisabledSyncResourceTypeName) WithArrayOfValues(values []string) *CreateProjectRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CreateProjectRequest_FieldSubPathArrayOfValues)
}

type CreateProjectRequestPathSelectorProjectMultiRegionPolicyCriteriaForDisabledSyncSourceRegion struct{}

func (CreateProjectRequestPathSelectorProjectMultiRegionPolicyCriteriaForDisabledSyncSourceRegion) FieldPath() *CreateProjectRequest_FieldSubPath {
	return &CreateProjectRequest_FieldSubPath{
		selector: CreateProjectRequest_FieldPathSelectorProject,
		subPath:  project.NewProjectFieldPathBuilder().MultiRegionPolicy().CriteriaForDisabledSync().SourceRegion().FieldPath(),
	}
}

func (s CreateProjectRequestPathSelectorProjectMultiRegionPolicyCriteriaForDisabledSyncSourceRegion) WithValue(value string) *CreateProjectRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*CreateProjectRequest_FieldSubPathValue)
}

func (s CreateProjectRequestPathSelectorProjectMultiRegionPolicyCriteriaForDisabledSyncSourceRegion) WithArrayOfValues(values []string) *CreateProjectRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CreateProjectRequest_FieldSubPathArrayOfValues)
}

type CreateProjectRequestPathSelectorProjectMultiRegionPolicyCriteriaForDisabledSyncDestRegion struct{}

func (CreateProjectRequestPathSelectorProjectMultiRegionPolicyCriteriaForDisabledSyncDestRegion) FieldPath() *CreateProjectRequest_FieldSubPath {
	return &CreateProjectRequest_FieldSubPath{
		selector: CreateProjectRequest_FieldPathSelectorProject,
		subPath:  project.NewProjectFieldPathBuilder().MultiRegionPolicy().CriteriaForDisabledSync().DestRegion().FieldPath(),
	}
}

func (s CreateProjectRequestPathSelectorProjectMultiRegionPolicyCriteriaForDisabledSyncDestRegion) WithValue(value string) *CreateProjectRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*CreateProjectRequest_FieldSubPathValue)
}

func (s CreateProjectRequestPathSelectorProjectMultiRegionPolicyCriteriaForDisabledSyncDestRegion) WithArrayOfValues(values []string) *CreateProjectRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CreateProjectRequest_FieldSubPathArrayOfValues)
}

type CreateProjectRequestPathSelectorProjectEnabledServices struct{}

func (CreateProjectRequestPathSelectorProjectEnabledServices) FieldPath() *CreateProjectRequest_FieldSubPath {
	return &CreateProjectRequest_FieldSubPath{
		selector: CreateProjectRequest_FieldPathSelectorProject,
		subPath:  project.NewProjectFieldPathBuilder().EnabledServices().FieldPath(),
	}
}

func (s CreateProjectRequestPathSelectorProjectEnabledServices) WithValue(value []*meta_service.Reference) *CreateProjectRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*CreateProjectRequest_FieldSubPathValue)
}

func (s CreateProjectRequestPathSelectorProjectEnabledServices) WithArrayOfValues(values [][]*meta_service.Reference) *CreateProjectRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CreateProjectRequest_FieldSubPathArrayOfValues)
}

func (s CreateProjectRequestPathSelectorProjectEnabledServices) WithItemValue(value *meta_service.Reference) *CreateProjectRequest_FieldSubPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*CreateProjectRequest_FieldSubPathArrayItemValue)
}

type UpdateProjectRequestFieldPathBuilder struct{}

func NewUpdateProjectRequestFieldPathBuilder() UpdateProjectRequestFieldPathBuilder {
	return UpdateProjectRequestFieldPathBuilder{}
}
func (UpdateProjectRequestFieldPathBuilder) Project() UpdateProjectRequestPathSelectorProject {
	return UpdateProjectRequestPathSelectorProject{}
}
func (UpdateProjectRequestFieldPathBuilder) UpdateMask() UpdateProjectRequestPathSelectorUpdateMask {
	return UpdateProjectRequestPathSelectorUpdateMask{}
}
func (UpdateProjectRequestFieldPathBuilder) Cas() UpdateProjectRequestPathSelectorCas {
	return UpdateProjectRequestPathSelectorCas{}
}

type UpdateProjectRequestPathSelectorProject struct{}

func (UpdateProjectRequestPathSelectorProject) FieldPath() *UpdateProjectRequest_FieldTerminalPath {
	return &UpdateProjectRequest_FieldTerminalPath{selector: UpdateProjectRequest_FieldPathSelectorProject}
}

func (s UpdateProjectRequestPathSelectorProject) WithValue(value *project.Project) *UpdateProjectRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateProjectRequest_FieldTerminalPathValue)
}

func (s UpdateProjectRequestPathSelectorProject) WithArrayOfValues(values []*project.Project) *UpdateProjectRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateProjectRequest_FieldTerminalPathArrayOfValues)
}

func (UpdateProjectRequestPathSelectorProject) WithSubPath(subPath project.Project_FieldPath) *UpdateProjectRequest_FieldSubPath {
	return &UpdateProjectRequest_FieldSubPath{selector: UpdateProjectRequest_FieldPathSelectorProject, subPath: subPath}
}

func (s UpdateProjectRequestPathSelectorProject) WithSubValue(subPathValue project.Project_FieldPathValue) *UpdateProjectRequest_FieldSubPathValue {
	return &UpdateProjectRequest_FieldSubPathValue{UpdateProjectRequest_FieldPath: s.WithSubPath(subPathValue), subPathValue: subPathValue}
}

func (s UpdateProjectRequestPathSelectorProject) WithSubArrayOfValues(subPathArrayOfValues project.Project_FieldPathArrayOfValues) *UpdateProjectRequest_FieldSubPathArrayOfValues {
	return &UpdateProjectRequest_FieldSubPathArrayOfValues{UpdateProjectRequest_FieldPath: s.WithSubPath(subPathArrayOfValues), subPathArrayOfValues: subPathArrayOfValues}
}

func (s UpdateProjectRequestPathSelectorProject) WithSubArrayItemValue(subPathArrayItemValue project.Project_FieldPathArrayItemValue) *UpdateProjectRequest_FieldSubPathArrayItemValue {
	return &UpdateProjectRequest_FieldSubPathArrayItemValue{UpdateProjectRequest_FieldPath: s.WithSubPath(subPathArrayItemValue), subPathItemValue: subPathArrayItemValue}
}

func (UpdateProjectRequestPathSelectorProject) Name() UpdateProjectRequestPathSelectorProjectName {
	return UpdateProjectRequestPathSelectorProjectName{}
}

func (UpdateProjectRequestPathSelectorProject) Title() UpdateProjectRequestPathSelectorProjectTitle {
	return UpdateProjectRequestPathSelectorProjectTitle{}
}

func (UpdateProjectRequestPathSelectorProject) ParentOrganization() UpdateProjectRequestPathSelectorProjectParentOrganization {
	return UpdateProjectRequestPathSelectorProjectParentOrganization{}
}

func (UpdateProjectRequestPathSelectorProject) RootOrganization() UpdateProjectRequestPathSelectorProjectRootOrganization {
	return UpdateProjectRequestPathSelectorProjectRootOrganization{}
}

func (UpdateProjectRequestPathSelectorProject) AncestryPath() UpdateProjectRequestPathSelectorProjectAncestryPath {
	return UpdateProjectRequestPathSelectorProjectAncestryPath{}
}

func (UpdateProjectRequestPathSelectorProject) Metadata() UpdateProjectRequestPathSelectorProjectMetadata {
	return UpdateProjectRequestPathSelectorProjectMetadata{}
}

func (UpdateProjectRequestPathSelectorProject) MultiRegionPolicy() UpdateProjectRequestPathSelectorProjectMultiRegionPolicy {
	return UpdateProjectRequestPathSelectorProjectMultiRegionPolicy{}
}

func (UpdateProjectRequestPathSelectorProject) EnabledServices() UpdateProjectRequestPathSelectorProjectEnabledServices {
	return UpdateProjectRequestPathSelectorProjectEnabledServices{}
}

type UpdateProjectRequestPathSelectorProjectName struct{}

func (UpdateProjectRequestPathSelectorProjectName) FieldPath() *UpdateProjectRequest_FieldSubPath {
	return &UpdateProjectRequest_FieldSubPath{
		selector: UpdateProjectRequest_FieldPathSelectorProject,
		subPath:  project.NewProjectFieldPathBuilder().Name().FieldPath(),
	}
}

func (s UpdateProjectRequestPathSelectorProjectName) WithValue(value *project.Name) *UpdateProjectRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateProjectRequest_FieldSubPathValue)
}

func (s UpdateProjectRequestPathSelectorProjectName) WithArrayOfValues(values []*project.Name) *UpdateProjectRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateProjectRequest_FieldSubPathArrayOfValues)
}

type UpdateProjectRequestPathSelectorProjectTitle struct{}

func (UpdateProjectRequestPathSelectorProjectTitle) FieldPath() *UpdateProjectRequest_FieldSubPath {
	return &UpdateProjectRequest_FieldSubPath{
		selector: UpdateProjectRequest_FieldPathSelectorProject,
		subPath:  project.NewProjectFieldPathBuilder().Title().FieldPath(),
	}
}

func (s UpdateProjectRequestPathSelectorProjectTitle) WithValue(value string) *UpdateProjectRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateProjectRequest_FieldSubPathValue)
}

func (s UpdateProjectRequestPathSelectorProjectTitle) WithArrayOfValues(values []string) *UpdateProjectRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateProjectRequest_FieldSubPathArrayOfValues)
}

type UpdateProjectRequestPathSelectorProjectParentOrganization struct{}

func (UpdateProjectRequestPathSelectorProjectParentOrganization) FieldPath() *UpdateProjectRequest_FieldSubPath {
	return &UpdateProjectRequest_FieldSubPath{
		selector: UpdateProjectRequest_FieldPathSelectorProject,
		subPath:  project.NewProjectFieldPathBuilder().ParentOrganization().FieldPath(),
	}
}

func (s UpdateProjectRequestPathSelectorProjectParentOrganization) WithValue(value *organization.Reference) *UpdateProjectRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateProjectRequest_FieldSubPathValue)
}

func (s UpdateProjectRequestPathSelectorProjectParentOrganization) WithArrayOfValues(values []*organization.Reference) *UpdateProjectRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateProjectRequest_FieldSubPathArrayOfValues)
}

type UpdateProjectRequestPathSelectorProjectRootOrganization struct{}

func (UpdateProjectRequestPathSelectorProjectRootOrganization) FieldPath() *UpdateProjectRequest_FieldSubPath {
	return &UpdateProjectRequest_FieldSubPath{
		selector: UpdateProjectRequest_FieldPathSelectorProject,
		subPath:  project.NewProjectFieldPathBuilder().RootOrganization().FieldPath(),
	}
}

func (s UpdateProjectRequestPathSelectorProjectRootOrganization) WithValue(value *organization.Reference) *UpdateProjectRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateProjectRequest_FieldSubPathValue)
}

func (s UpdateProjectRequestPathSelectorProjectRootOrganization) WithArrayOfValues(values []*organization.Reference) *UpdateProjectRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateProjectRequest_FieldSubPathArrayOfValues)
}

type UpdateProjectRequestPathSelectorProjectAncestryPath struct{}

func (UpdateProjectRequestPathSelectorProjectAncestryPath) FieldPath() *UpdateProjectRequest_FieldSubPath {
	return &UpdateProjectRequest_FieldSubPath{
		selector: UpdateProjectRequest_FieldPathSelectorProject,
		subPath:  project.NewProjectFieldPathBuilder().AncestryPath().FieldPath(),
	}
}

func (s UpdateProjectRequestPathSelectorProjectAncestryPath) WithValue(value []*organization.Reference) *UpdateProjectRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateProjectRequest_FieldSubPathValue)
}

func (s UpdateProjectRequestPathSelectorProjectAncestryPath) WithArrayOfValues(values [][]*organization.Reference) *UpdateProjectRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateProjectRequest_FieldSubPathArrayOfValues)
}

func (s UpdateProjectRequestPathSelectorProjectAncestryPath) WithItemValue(value *organization.Reference) *UpdateProjectRequest_FieldSubPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*UpdateProjectRequest_FieldSubPathArrayItemValue)
}

type UpdateProjectRequestPathSelectorProjectMetadata struct{}

func (UpdateProjectRequestPathSelectorProjectMetadata) FieldPath() *UpdateProjectRequest_FieldSubPath {
	return &UpdateProjectRequest_FieldSubPath{
		selector: UpdateProjectRequest_FieldPathSelectorProject,
		subPath:  project.NewProjectFieldPathBuilder().Metadata().FieldPath(),
	}
}

func (s UpdateProjectRequestPathSelectorProjectMetadata) WithValue(value *ntt_meta.Meta) *UpdateProjectRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateProjectRequest_FieldSubPathValue)
}

func (s UpdateProjectRequestPathSelectorProjectMetadata) WithArrayOfValues(values []*ntt_meta.Meta) *UpdateProjectRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateProjectRequest_FieldSubPathArrayOfValues)
}

func (UpdateProjectRequestPathSelectorProjectMetadata) CreateTime() UpdateProjectRequestPathSelectorProjectMetadataCreateTime {
	return UpdateProjectRequestPathSelectorProjectMetadataCreateTime{}
}

func (UpdateProjectRequestPathSelectorProjectMetadata) UpdateTime() UpdateProjectRequestPathSelectorProjectMetadataUpdateTime {
	return UpdateProjectRequestPathSelectorProjectMetadataUpdateTime{}
}

func (UpdateProjectRequestPathSelectorProjectMetadata) Uuid() UpdateProjectRequestPathSelectorProjectMetadataUuid {
	return UpdateProjectRequestPathSelectorProjectMetadataUuid{}
}

func (UpdateProjectRequestPathSelectorProjectMetadata) Tags() UpdateProjectRequestPathSelectorProjectMetadataTags {
	return UpdateProjectRequestPathSelectorProjectMetadataTags{}
}

func (UpdateProjectRequestPathSelectorProjectMetadata) Labels() UpdateProjectRequestPathSelectorProjectMetadataLabels {
	return UpdateProjectRequestPathSelectorProjectMetadataLabels{}
}

func (UpdateProjectRequestPathSelectorProjectMetadata) Annotations() UpdateProjectRequestPathSelectorProjectMetadataAnnotations {
	return UpdateProjectRequestPathSelectorProjectMetadataAnnotations{}
}

func (UpdateProjectRequestPathSelectorProjectMetadata) Generation() UpdateProjectRequestPathSelectorProjectMetadataGeneration {
	return UpdateProjectRequestPathSelectorProjectMetadataGeneration{}
}

func (UpdateProjectRequestPathSelectorProjectMetadata) ResourceVersion() UpdateProjectRequestPathSelectorProjectMetadataResourceVersion {
	return UpdateProjectRequestPathSelectorProjectMetadataResourceVersion{}
}

func (UpdateProjectRequestPathSelectorProjectMetadata) OwnerReferences() UpdateProjectRequestPathSelectorProjectMetadataOwnerReferences {
	return UpdateProjectRequestPathSelectorProjectMetadataOwnerReferences{}
}

func (UpdateProjectRequestPathSelectorProjectMetadata) Shards() UpdateProjectRequestPathSelectorProjectMetadataShards {
	return UpdateProjectRequestPathSelectorProjectMetadataShards{}
}

func (UpdateProjectRequestPathSelectorProjectMetadata) Syncing() UpdateProjectRequestPathSelectorProjectMetadataSyncing {
	return UpdateProjectRequestPathSelectorProjectMetadataSyncing{}
}

type UpdateProjectRequestPathSelectorProjectMetadataCreateTime struct{}

func (UpdateProjectRequestPathSelectorProjectMetadataCreateTime) FieldPath() *UpdateProjectRequest_FieldSubPath {
	return &UpdateProjectRequest_FieldSubPath{
		selector: UpdateProjectRequest_FieldPathSelectorProject,
		subPath:  project.NewProjectFieldPathBuilder().Metadata().CreateTime().FieldPath(),
	}
}

func (s UpdateProjectRequestPathSelectorProjectMetadataCreateTime) WithValue(value *timestamp.Timestamp) *UpdateProjectRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateProjectRequest_FieldSubPathValue)
}

func (s UpdateProjectRequestPathSelectorProjectMetadataCreateTime) WithArrayOfValues(values []*timestamp.Timestamp) *UpdateProjectRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateProjectRequest_FieldSubPathArrayOfValues)
}

type UpdateProjectRequestPathSelectorProjectMetadataUpdateTime struct{}

func (UpdateProjectRequestPathSelectorProjectMetadataUpdateTime) FieldPath() *UpdateProjectRequest_FieldSubPath {
	return &UpdateProjectRequest_FieldSubPath{
		selector: UpdateProjectRequest_FieldPathSelectorProject,
		subPath:  project.NewProjectFieldPathBuilder().Metadata().UpdateTime().FieldPath(),
	}
}

func (s UpdateProjectRequestPathSelectorProjectMetadataUpdateTime) WithValue(value *timestamp.Timestamp) *UpdateProjectRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateProjectRequest_FieldSubPathValue)
}

func (s UpdateProjectRequestPathSelectorProjectMetadataUpdateTime) WithArrayOfValues(values []*timestamp.Timestamp) *UpdateProjectRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateProjectRequest_FieldSubPathArrayOfValues)
}

type UpdateProjectRequestPathSelectorProjectMetadataUuid struct{}

func (UpdateProjectRequestPathSelectorProjectMetadataUuid) FieldPath() *UpdateProjectRequest_FieldSubPath {
	return &UpdateProjectRequest_FieldSubPath{
		selector: UpdateProjectRequest_FieldPathSelectorProject,
		subPath:  project.NewProjectFieldPathBuilder().Metadata().Uuid().FieldPath(),
	}
}

func (s UpdateProjectRequestPathSelectorProjectMetadataUuid) WithValue(value string) *UpdateProjectRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateProjectRequest_FieldSubPathValue)
}

func (s UpdateProjectRequestPathSelectorProjectMetadataUuid) WithArrayOfValues(values []string) *UpdateProjectRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateProjectRequest_FieldSubPathArrayOfValues)
}

type UpdateProjectRequestPathSelectorProjectMetadataTags struct{}

func (UpdateProjectRequestPathSelectorProjectMetadataTags) FieldPath() *UpdateProjectRequest_FieldSubPath {
	return &UpdateProjectRequest_FieldSubPath{
		selector: UpdateProjectRequest_FieldPathSelectorProject,
		subPath:  project.NewProjectFieldPathBuilder().Metadata().Tags().FieldPath(),
	}
}

func (s UpdateProjectRequestPathSelectorProjectMetadataTags) WithValue(value []string) *UpdateProjectRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateProjectRequest_FieldSubPathValue)
}

func (s UpdateProjectRequestPathSelectorProjectMetadataTags) WithArrayOfValues(values [][]string) *UpdateProjectRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateProjectRequest_FieldSubPathArrayOfValues)
}

func (s UpdateProjectRequestPathSelectorProjectMetadataTags) WithItemValue(value string) *UpdateProjectRequest_FieldSubPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*UpdateProjectRequest_FieldSubPathArrayItemValue)
}

type UpdateProjectRequestPathSelectorProjectMetadataLabels struct{}

func (UpdateProjectRequestPathSelectorProjectMetadataLabels) FieldPath() *UpdateProjectRequest_FieldSubPath {
	return &UpdateProjectRequest_FieldSubPath{
		selector: UpdateProjectRequest_FieldPathSelectorProject,
		subPath:  project.NewProjectFieldPathBuilder().Metadata().Labels().FieldPath(),
	}
}

func (s UpdateProjectRequestPathSelectorProjectMetadataLabels) WithValue(value map[string]string) *UpdateProjectRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateProjectRequest_FieldSubPathValue)
}

func (s UpdateProjectRequestPathSelectorProjectMetadataLabels) WithArrayOfValues(values []map[string]string) *UpdateProjectRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateProjectRequest_FieldSubPathArrayOfValues)
}

func (UpdateProjectRequestPathSelectorProjectMetadataLabels) WithKey(key string) UpdateProjectRequestMapPathSelectorProjectMetadataLabels {
	return UpdateProjectRequestMapPathSelectorProjectMetadataLabels{key: key}
}

type UpdateProjectRequestMapPathSelectorProjectMetadataLabels struct {
	key string
}

func (s UpdateProjectRequestMapPathSelectorProjectMetadataLabels) FieldPath() *UpdateProjectRequest_FieldSubPath {
	return &UpdateProjectRequest_FieldSubPath{
		selector: UpdateProjectRequest_FieldPathSelectorProject,
		subPath:  project.NewProjectFieldPathBuilder().Metadata().Labels().WithKey(s.key).FieldPath(),
	}
}

func (s UpdateProjectRequestMapPathSelectorProjectMetadataLabels) WithValue(value string) *UpdateProjectRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateProjectRequest_FieldSubPathValue)
}

func (s UpdateProjectRequestMapPathSelectorProjectMetadataLabels) WithArrayOfValues(values []string) *UpdateProjectRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateProjectRequest_FieldSubPathArrayOfValues)
}

type UpdateProjectRequestPathSelectorProjectMetadataAnnotations struct{}

func (UpdateProjectRequestPathSelectorProjectMetadataAnnotations) FieldPath() *UpdateProjectRequest_FieldSubPath {
	return &UpdateProjectRequest_FieldSubPath{
		selector: UpdateProjectRequest_FieldPathSelectorProject,
		subPath:  project.NewProjectFieldPathBuilder().Metadata().Annotations().FieldPath(),
	}
}

func (s UpdateProjectRequestPathSelectorProjectMetadataAnnotations) WithValue(value map[string]string) *UpdateProjectRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateProjectRequest_FieldSubPathValue)
}

func (s UpdateProjectRequestPathSelectorProjectMetadataAnnotations) WithArrayOfValues(values []map[string]string) *UpdateProjectRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateProjectRequest_FieldSubPathArrayOfValues)
}

func (UpdateProjectRequestPathSelectorProjectMetadataAnnotations) WithKey(key string) UpdateProjectRequestMapPathSelectorProjectMetadataAnnotations {
	return UpdateProjectRequestMapPathSelectorProjectMetadataAnnotations{key: key}
}

type UpdateProjectRequestMapPathSelectorProjectMetadataAnnotations struct {
	key string
}

func (s UpdateProjectRequestMapPathSelectorProjectMetadataAnnotations) FieldPath() *UpdateProjectRequest_FieldSubPath {
	return &UpdateProjectRequest_FieldSubPath{
		selector: UpdateProjectRequest_FieldPathSelectorProject,
		subPath:  project.NewProjectFieldPathBuilder().Metadata().Annotations().WithKey(s.key).FieldPath(),
	}
}

func (s UpdateProjectRequestMapPathSelectorProjectMetadataAnnotations) WithValue(value string) *UpdateProjectRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateProjectRequest_FieldSubPathValue)
}

func (s UpdateProjectRequestMapPathSelectorProjectMetadataAnnotations) WithArrayOfValues(values []string) *UpdateProjectRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateProjectRequest_FieldSubPathArrayOfValues)
}

type UpdateProjectRequestPathSelectorProjectMetadataGeneration struct{}

func (UpdateProjectRequestPathSelectorProjectMetadataGeneration) FieldPath() *UpdateProjectRequest_FieldSubPath {
	return &UpdateProjectRequest_FieldSubPath{
		selector: UpdateProjectRequest_FieldPathSelectorProject,
		subPath:  project.NewProjectFieldPathBuilder().Metadata().Generation().FieldPath(),
	}
}

func (s UpdateProjectRequestPathSelectorProjectMetadataGeneration) WithValue(value int64) *UpdateProjectRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateProjectRequest_FieldSubPathValue)
}

func (s UpdateProjectRequestPathSelectorProjectMetadataGeneration) WithArrayOfValues(values []int64) *UpdateProjectRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateProjectRequest_FieldSubPathArrayOfValues)
}

type UpdateProjectRequestPathSelectorProjectMetadataResourceVersion struct{}

func (UpdateProjectRequestPathSelectorProjectMetadataResourceVersion) FieldPath() *UpdateProjectRequest_FieldSubPath {
	return &UpdateProjectRequest_FieldSubPath{
		selector: UpdateProjectRequest_FieldPathSelectorProject,
		subPath:  project.NewProjectFieldPathBuilder().Metadata().ResourceVersion().FieldPath(),
	}
}

func (s UpdateProjectRequestPathSelectorProjectMetadataResourceVersion) WithValue(value string) *UpdateProjectRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateProjectRequest_FieldSubPathValue)
}

func (s UpdateProjectRequestPathSelectorProjectMetadataResourceVersion) WithArrayOfValues(values []string) *UpdateProjectRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateProjectRequest_FieldSubPathArrayOfValues)
}

type UpdateProjectRequestPathSelectorProjectMetadataOwnerReferences struct{}

func (UpdateProjectRequestPathSelectorProjectMetadataOwnerReferences) FieldPath() *UpdateProjectRequest_FieldSubPath {
	return &UpdateProjectRequest_FieldSubPath{
		selector: UpdateProjectRequest_FieldPathSelectorProject,
		subPath:  project.NewProjectFieldPathBuilder().Metadata().OwnerReferences().FieldPath(),
	}
}

func (s UpdateProjectRequestPathSelectorProjectMetadataOwnerReferences) WithValue(value []*ntt_meta.OwnerReference) *UpdateProjectRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateProjectRequest_FieldSubPathValue)
}

func (s UpdateProjectRequestPathSelectorProjectMetadataOwnerReferences) WithArrayOfValues(values [][]*ntt_meta.OwnerReference) *UpdateProjectRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateProjectRequest_FieldSubPathArrayOfValues)
}

func (s UpdateProjectRequestPathSelectorProjectMetadataOwnerReferences) WithItemValue(value *ntt_meta.OwnerReference) *UpdateProjectRequest_FieldSubPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*UpdateProjectRequest_FieldSubPathArrayItemValue)
}

func (UpdateProjectRequestPathSelectorProjectMetadataOwnerReferences) ApiVersion() UpdateProjectRequestPathSelectorProjectMetadataOwnerReferencesApiVersion {
	return UpdateProjectRequestPathSelectorProjectMetadataOwnerReferencesApiVersion{}
}

func (UpdateProjectRequestPathSelectorProjectMetadataOwnerReferences) Kind() UpdateProjectRequestPathSelectorProjectMetadataOwnerReferencesKind {
	return UpdateProjectRequestPathSelectorProjectMetadataOwnerReferencesKind{}
}

func (UpdateProjectRequestPathSelectorProjectMetadataOwnerReferences) Name() UpdateProjectRequestPathSelectorProjectMetadataOwnerReferencesName {
	return UpdateProjectRequestPathSelectorProjectMetadataOwnerReferencesName{}
}

func (UpdateProjectRequestPathSelectorProjectMetadataOwnerReferences) Uid() UpdateProjectRequestPathSelectorProjectMetadataOwnerReferencesUid {
	return UpdateProjectRequestPathSelectorProjectMetadataOwnerReferencesUid{}
}

func (UpdateProjectRequestPathSelectorProjectMetadataOwnerReferences) Controller() UpdateProjectRequestPathSelectorProjectMetadataOwnerReferencesController {
	return UpdateProjectRequestPathSelectorProjectMetadataOwnerReferencesController{}
}

func (UpdateProjectRequestPathSelectorProjectMetadataOwnerReferences) BlockOwnerDeletion() UpdateProjectRequestPathSelectorProjectMetadataOwnerReferencesBlockOwnerDeletion {
	return UpdateProjectRequestPathSelectorProjectMetadataOwnerReferencesBlockOwnerDeletion{}
}

type UpdateProjectRequestPathSelectorProjectMetadataOwnerReferencesApiVersion struct{}

func (UpdateProjectRequestPathSelectorProjectMetadataOwnerReferencesApiVersion) FieldPath() *UpdateProjectRequest_FieldSubPath {
	return &UpdateProjectRequest_FieldSubPath{
		selector: UpdateProjectRequest_FieldPathSelectorProject,
		subPath:  project.NewProjectFieldPathBuilder().Metadata().OwnerReferences().ApiVersion().FieldPath(),
	}
}

func (s UpdateProjectRequestPathSelectorProjectMetadataOwnerReferencesApiVersion) WithValue(value string) *UpdateProjectRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateProjectRequest_FieldSubPathValue)
}

func (s UpdateProjectRequestPathSelectorProjectMetadataOwnerReferencesApiVersion) WithArrayOfValues(values []string) *UpdateProjectRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateProjectRequest_FieldSubPathArrayOfValues)
}

type UpdateProjectRequestPathSelectorProjectMetadataOwnerReferencesKind struct{}

func (UpdateProjectRequestPathSelectorProjectMetadataOwnerReferencesKind) FieldPath() *UpdateProjectRequest_FieldSubPath {
	return &UpdateProjectRequest_FieldSubPath{
		selector: UpdateProjectRequest_FieldPathSelectorProject,
		subPath:  project.NewProjectFieldPathBuilder().Metadata().OwnerReferences().Kind().FieldPath(),
	}
}

func (s UpdateProjectRequestPathSelectorProjectMetadataOwnerReferencesKind) WithValue(value string) *UpdateProjectRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateProjectRequest_FieldSubPathValue)
}

func (s UpdateProjectRequestPathSelectorProjectMetadataOwnerReferencesKind) WithArrayOfValues(values []string) *UpdateProjectRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateProjectRequest_FieldSubPathArrayOfValues)
}

type UpdateProjectRequestPathSelectorProjectMetadataOwnerReferencesName struct{}

func (UpdateProjectRequestPathSelectorProjectMetadataOwnerReferencesName) FieldPath() *UpdateProjectRequest_FieldSubPath {
	return &UpdateProjectRequest_FieldSubPath{
		selector: UpdateProjectRequest_FieldPathSelectorProject,
		subPath:  project.NewProjectFieldPathBuilder().Metadata().OwnerReferences().Name().FieldPath(),
	}
}

func (s UpdateProjectRequestPathSelectorProjectMetadataOwnerReferencesName) WithValue(value string) *UpdateProjectRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateProjectRequest_FieldSubPathValue)
}

func (s UpdateProjectRequestPathSelectorProjectMetadataOwnerReferencesName) WithArrayOfValues(values []string) *UpdateProjectRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateProjectRequest_FieldSubPathArrayOfValues)
}

type UpdateProjectRequestPathSelectorProjectMetadataOwnerReferencesUid struct{}

func (UpdateProjectRequestPathSelectorProjectMetadataOwnerReferencesUid) FieldPath() *UpdateProjectRequest_FieldSubPath {
	return &UpdateProjectRequest_FieldSubPath{
		selector: UpdateProjectRequest_FieldPathSelectorProject,
		subPath:  project.NewProjectFieldPathBuilder().Metadata().OwnerReferences().Uid().FieldPath(),
	}
}

func (s UpdateProjectRequestPathSelectorProjectMetadataOwnerReferencesUid) WithValue(value string) *UpdateProjectRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateProjectRequest_FieldSubPathValue)
}

func (s UpdateProjectRequestPathSelectorProjectMetadataOwnerReferencesUid) WithArrayOfValues(values []string) *UpdateProjectRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateProjectRequest_FieldSubPathArrayOfValues)
}

type UpdateProjectRequestPathSelectorProjectMetadataOwnerReferencesController struct{}

func (UpdateProjectRequestPathSelectorProjectMetadataOwnerReferencesController) FieldPath() *UpdateProjectRequest_FieldSubPath {
	return &UpdateProjectRequest_FieldSubPath{
		selector: UpdateProjectRequest_FieldPathSelectorProject,
		subPath:  project.NewProjectFieldPathBuilder().Metadata().OwnerReferences().Controller().FieldPath(),
	}
}

func (s UpdateProjectRequestPathSelectorProjectMetadataOwnerReferencesController) WithValue(value bool) *UpdateProjectRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateProjectRequest_FieldSubPathValue)
}

func (s UpdateProjectRequestPathSelectorProjectMetadataOwnerReferencesController) WithArrayOfValues(values []bool) *UpdateProjectRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateProjectRequest_FieldSubPathArrayOfValues)
}

type UpdateProjectRequestPathSelectorProjectMetadataOwnerReferencesBlockOwnerDeletion struct{}

func (UpdateProjectRequestPathSelectorProjectMetadataOwnerReferencesBlockOwnerDeletion) FieldPath() *UpdateProjectRequest_FieldSubPath {
	return &UpdateProjectRequest_FieldSubPath{
		selector: UpdateProjectRequest_FieldPathSelectorProject,
		subPath:  project.NewProjectFieldPathBuilder().Metadata().OwnerReferences().BlockOwnerDeletion().FieldPath(),
	}
}

func (s UpdateProjectRequestPathSelectorProjectMetadataOwnerReferencesBlockOwnerDeletion) WithValue(value bool) *UpdateProjectRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateProjectRequest_FieldSubPathValue)
}

func (s UpdateProjectRequestPathSelectorProjectMetadataOwnerReferencesBlockOwnerDeletion) WithArrayOfValues(values []bool) *UpdateProjectRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateProjectRequest_FieldSubPathArrayOfValues)
}

type UpdateProjectRequestPathSelectorProjectMetadataShards struct{}

func (UpdateProjectRequestPathSelectorProjectMetadataShards) FieldPath() *UpdateProjectRequest_FieldSubPath {
	return &UpdateProjectRequest_FieldSubPath{
		selector: UpdateProjectRequest_FieldPathSelectorProject,
		subPath:  project.NewProjectFieldPathBuilder().Metadata().Shards().FieldPath(),
	}
}

func (s UpdateProjectRequestPathSelectorProjectMetadataShards) WithValue(value map[string]int64) *UpdateProjectRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateProjectRequest_FieldSubPathValue)
}

func (s UpdateProjectRequestPathSelectorProjectMetadataShards) WithArrayOfValues(values []map[string]int64) *UpdateProjectRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateProjectRequest_FieldSubPathArrayOfValues)
}

func (UpdateProjectRequestPathSelectorProjectMetadataShards) WithKey(key string) UpdateProjectRequestMapPathSelectorProjectMetadataShards {
	return UpdateProjectRequestMapPathSelectorProjectMetadataShards{key: key}
}

type UpdateProjectRequestMapPathSelectorProjectMetadataShards struct {
	key string
}

func (s UpdateProjectRequestMapPathSelectorProjectMetadataShards) FieldPath() *UpdateProjectRequest_FieldSubPath {
	return &UpdateProjectRequest_FieldSubPath{
		selector: UpdateProjectRequest_FieldPathSelectorProject,
		subPath:  project.NewProjectFieldPathBuilder().Metadata().Shards().WithKey(s.key).FieldPath(),
	}
}

func (s UpdateProjectRequestMapPathSelectorProjectMetadataShards) WithValue(value int64) *UpdateProjectRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateProjectRequest_FieldSubPathValue)
}

func (s UpdateProjectRequestMapPathSelectorProjectMetadataShards) WithArrayOfValues(values []int64) *UpdateProjectRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateProjectRequest_FieldSubPathArrayOfValues)
}

type UpdateProjectRequestPathSelectorProjectMetadataSyncing struct{}

func (UpdateProjectRequestPathSelectorProjectMetadataSyncing) FieldPath() *UpdateProjectRequest_FieldSubPath {
	return &UpdateProjectRequest_FieldSubPath{
		selector: UpdateProjectRequest_FieldPathSelectorProject,
		subPath:  project.NewProjectFieldPathBuilder().Metadata().Syncing().FieldPath(),
	}
}

func (s UpdateProjectRequestPathSelectorProjectMetadataSyncing) WithValue(value *ntt_meta.SyncingMeta) *UpdateProjectRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateProjectRequest_FieldSubPathValue)
}

func (s UpdateProjectRequestPathSelectorProjectMetadataSyncing) WithArrayOfValues(values []*ntt_meta.SyncingMeta) *UpdateProjectRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateProjectRequest_FieldSubPathArrayOfValues)
}

func (UpdateProjectRequestPathSelectorProjectMetadataSyncing) OwningRegion() UpdateProjectRequestPathSelectorProjectMetadataSyncingOwningRegion {
	return UpdateProjectRequestPathSelectorProjectMetadataSyncingOwningRegion{}
}

func (UpdateProjectRequestPathSelectorProjectMetadataSyncing) Regions() UpdateProjectRequestPathSelectorProjectMetadataSyncingRegions {
	return UpdateProjectRequestPathSelectorProjectMetadataSyncingRegions{}
}

type UpdateProjectRequestPathSelectorProjectMetadataSyncingOwningRegion struct{}

func (UpdateProjectRequestPathSelectorProjectMetadataSyncingOwningRegion) FieldPath() *UpdateProjectRequest_FieldSubPath {
	return &UpdateProjectRequest_FieldSubPath{
		selector: UpdateProjectRequest_FieldPathSelectorProject,
		subPath:  project.NewProjectFieldPathBuilder().Metadata().Syncing().OwningRegion().FieldPath(),
	}
}

func (s UpdateProjectRequestPathSelectorProjectMetadataSyncingOwningRegion) WithValue(value string) *UpdateProjectRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateProjectRequest_FieldSubPathValue)
}

func (s UpdateProjectRequestPathSelectorProjectMetadataSyncingOwningRegion) WithArrayOfValues(values []string) *UpdateProjectRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateProjectRequest_FieldSubPathArrayOfValues)
}

type UpdateProjectRequestPathSelectorProjectMetadataSyncingRegions struct{}

func (UpdateProjectRequestPathSelectorProjectMetadataSyncingRegions) FieldPath() *UpdateProjectRequest_FieldSubPath {
	return &UpdateProjectRequest_FieldSubPath{
		selector: UpdateProjectRequest_FieldPathSelectorProject,
		subPath:  project.NewProjectFieldPathBuilder().Metadata().Syncing().Regions().FieldPath(),
	}
}

func (s UpdateProjectRequestPathSelectorProjectMetadataSyncingRegions) WithValue(value []string) *UpdateProjectRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateProjectRequest_FieldSubPathValue)
}

func (s UpdateProjectRequestPathSelectorProjectMetadataSyncingRegions) WithArrayOfValues(values [][]string) *UpdateProjectRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateProjectRequest_FieldSubPathArrayOfValues)
}

func (s UpdateProjectRequestPathSelectorProjectMetadataSyncingRegions) WithItemValue(value string) *UpdateProjectRequest_FieldSubPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*UpdateProjectRequest_FieldSubPathArrayItemValue)
}

type UpdateProjectRequestPathSelectorProjectMultiRegionPolicy struct{}

func (UpdateProjectRequestPathSelectorProjectMultiRegionPolicy) FieldPath() *UpdateProjectRequest_FieldSubPath {
	return &UpdateProjectRequest_FieldSubPath{
		selector: UpdateProjectRequest_FieldPathSelectorProject,
		subPath:  project.NewProjectFieldPathBuilder().MultiRegionPolicy().FieldPath(),
	}
}

func (s UpdateProjectRequestPathSelectorProjectMultiRegionPolicy) WithValue(value *multi_region_policy.MultiRegionPolicy) *UpdateProjectRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateProjectRequest_FieldSubPathValue)
}

func (s UpdateProjectRequestPathSelectorProjectMultiRegionPolicy) WithArrayOfValues(values []*multi_region_policy.MultiRegionPolicy) *UpdateProjectRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateProjectRequest_FieldSubPathArrayOfValues)
}

func (UpdateProjectRequestPathSelectorProjectMultiRegionPolicy) EnabledRegions() UpdateProjectRequestPathSelectorProjectMultiRegionPolicyEnabledRegions {
	return UpdateProjectRequestPathSelectorProjectMultiRegionPolicyEnabledRegions{}
}

func (UpdateProjectRequestPathSelectorProjectMultiRegionPolicy) DefaultControlRegion() UpdateProjectRequestPathSelectorProjectMultiRegionPolicyDefaultControlRegion {
	return UpdateProjectRequestPathSelectorProjectMultiRegionPolicyDefaultControlRegion{}
}

func (UpdateProjectRequestPathSelectorProjectMultiRegionPolicy) CriteriaForDisabledSync() UpdateProjectRequestPathSelectorProjectMultiRegionPolicyCriteriaForDisabledSync {
	return UpdateProjectRequestPathSelectorProjectMultiRegionPolicyCriteriaForDisabledSync{}
}

type UpdateProjectRequestPathSelectorProjectMultiRegionPolicyEnabledRegions struct{}

func (UpdateProjectRequestPathSelectorProjectMultiRegionPolicyEnabledRegions) FieldPath() *UpdateProjectRequest_FieldSubPath {
	return &UpdateProjectRequest_FieldSubPath{
		selector: UpdateProjectRequest_FieldPathSelectorProject,
		subPath:  project.NewProjectFieldPathBuilder().MultiRegionPolicy().EnabledRegions().FieldPath(),
	}
}

func (s UpdateProjectRequestPathSelectorProjectMultiRegionPolicyEnabledRegions) WithValue(value []string) *UpdateProjectRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateProjectRequest_FieldSubPathValue)
}

func (s UpdateProjectRequestPathSelectorProjectMultiRegionPolicyEnabledRegions) WithArrayOfValues(values [][]string) *UpdateProjectRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateProjectRequest_FieldSubPathArrayOfValues)
}

func (s UpdateProjectRequestPathSelectorProjectMultiRegionPolicyEnabledRegions) WithItemValue(value string) *UpdateProjectRequest_FieldSubPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*UpdateProjectRequest_FieldSubPathArrayItemValue)
}

type UpdateProjectRequestPathSelectorProjectMultiRegionPolicyDefaultControlRegion struct{}

func (UpdateProjectRequestPathSelectorProjectMultiRegionPolicyDefaultControlRegion) FieldPath() *UpdateProjectRequest_FieldSubPath {
	return &UpdateProjectRequest_FieldSubPath{
		selector: UpdateProjectRequest_FieldPathSelectorProject,
		subPath:  project.NewProjectFieldPathBuilder().MultiRegionPolicy().DefaultControlRegion().FieldPath(),
	}
}

func (s UpdateProjectRequestPathSelectorProjectMultiRegionPolicyDefaultControlRegion) WithValue(value string) *UpdateProjectRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateProjectRequest_FieldSubPathValue)
}

func (s UpdateProjectRequestPathSelectorProjectMultiRegionPolicyDefaultControlRegion) WithArrayOfValues(values []string) *UpdateProjectRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateProjectRequest_FieldSubPathArrayOfValues)
}

type UpdateProjectRequestPathSelectorProjectMultiRegionPolicyCriteriaForDisabledSync struct{}

func (UpdateProjectRequestPathSelectorProjectMultiRegionPolicyCriteriaForDisabledSync) FieldPath() *UpdateProjectRequest_FieldSubPath {
	return &UpdateProjectRequest_FieldSubPath{
		selector: UpdateProjectRequest_FieldPathSelectorProject,
		subPath:  project.NewProjectFieldPathBuilder().MultiRegionPolicy().CriteriaForDisabledSync().FieldPath(),
	}
}

func (s UpdateProjectRequestPathSelectorProjectMultiRegionPolicyCriteriaForDisabledSync) WithValue(value []*multi_region_policy.MultiRegionPolicy_CriteriaForDisabledSync) *UpdateProjectRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateProjectRequest_FieldSubPathValue)
}

func (s UpdateProjectRequestPathSelectorProjectMultiRegionPolicyCriteriaForDisabledSync) WithArrayOfValues(values [][]*multi_region_policy.MultiRegionPolicy_CriteriaForDisabledSync) *UpdateProjectRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateProjectRequest_FieldSubPathArrayOfValues)
}

func (s UpdateProjectRequestPathSelectorProjectMultiRegionPolicyCriteriaForDisabledSync) WithItemValue(value *multi_region_policy.MultiRegionPolicy_CriteriaForDisabledSync) *UpdateProjectRequest_FieldSubPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*UpdateProjectRequest_FieldSubPathArrayItemValue)
}

func (UpdateProjectRequestPathSelectorProjectMultiRegionPolicyCriteriaForDisabledSync) ResourceTypeName() UpdateProjectRequestPathSelectorProjectMultiRegionPolicyCriteriaForDisabledSyncResourceTypeName {
	return UpdateProjectRequestPathSelectorProjectMultiRegionPolicyCriteriaForDisabledSyncResourceTypeName{}
}

func (UpdateProjectRequestPathSelectorProjectMultiRegionPolicyCriteriaForDisabledSync) SourceRegion() UpdateProjectRequestPathSelectorProjectMultiRegionPolicyCriteriaForDisabledSyncSourceRegion {
	return UpdateProjectRequestPathSelectorProjectMultiRegionPolicyCriteriaForDisabledSyncSourceRegion{}
}

func (UpdateProjectRequestPathSelectorProjectMultiRegionPolicyCriteriaForDisabledSync) DestRegion() UpdateProjectRequestPathSelectorProjectMultiRegionPolicyCriteriaForDisabledSyncDestRegion {
	return UpdateProjectRequestPathSelectorProjectMultiRegionPolicyCriteriaForDisabledSyncDestRegion{}
}

type UpdateProjectRequestPathSelectorProjectMultiRegionPolicyCriteriaForDisabledSyncResourceTypeName struct{}

func (UpdateProjectRequestPathSelectorProjectMultiRegionPolicyCriteriaForDisabledSyncResourceTypeName) FieldPath() *UpdateProjectRequest_FieldSubPath {
	return &UpdateProjectRequest_FieldSubPath{
		selector: UpdateProjectRequest_FieldPathSelectorProject,
		subPath:  project.NewProjectFieldPathBuilder().MultiRegionPolicy().CriteriaForDisabledSync().ResourceTypeName().FieldPath(),
	}
}

func (s UpdateProjectRequestPathSelectorProjectMultiRegionPolicyCriteriaForDisabledSyncResourceTypeName) WithValue(value string) *UpdateProjectRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateProjectRequest_FieldSubPathValue)
}

func (s UpdateProjectRequestPathSelectorProjectMultiRegionPolicyCriteriaForDisabledSyncResourceTypeName) WithArrayOfValues(values []string) *UpdateProjectRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateProjectRequest_FieldSubPathArrayOfValues)
}

type UpdateProjectRequestPathSelectorProjectMultiRegionPolicyCriteriaForDisabledSyncSourceRegion struct{}

func (UpdateProjectRequestPathSelectorProjectMultiRegionPolicyCriteriaForDisabledSyncSourceRegion) FieldPath() *UpdateProjectRequest_FieldSubPath {
	return &UpdateProjectRequest_FieldSubPath{
		selector: UpdateProjectRequest_FieldPathSelectorProject,
		subPath:  project.NewProjectFieldPathBuilder().MultiRegionPolicy().CriteriaForDisabledSync().SourceRegion().FieldPath(),
	}
}

func (s UpdateProjectRequestPathSelectorProjectMultiRegionPolicyCriteriaForDisabledSyncSourceRegion) WithValue(value string) *UpdateProjectRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateProjectRequest_FieldSubPathValue)
}

func (s UpdateProjectRequestPathSelectorProjectMultiRegionPolicyCriteriaForDisabledSyncSourceRegion) WithArrayOfValues(values []string) *UpdateProjectRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateProjectRequest_FieldSubPathArrayOfValues)
}

type UpdateProjectRequestPathSelectorProjectMultiRegionPolicyCriteriaForDisabledSyncDestRegion struct{}

func (UpdateProjectRequestPathSelectorProjectMultiRegionPolicyCriteriaForDisabledSyncDestRegion) FieldPath() *UpdateProjectRequest_FieldSubPath {
	return &UpdateProjectRequest_FieldSubPath{
		selector: UpdateProjectRequest_FieldPathSelectorProject,
		subPath:  project.NewProjectFieldPathBuilder().MultiRegionPolicy().CriteriaForDisabledSync().DestRegion().FieldPath(),
	}
}

func (s UpdateProjectRequestPathSelectorProjectMultiRegionPolicyCriteriaForDisabledSyncDestRegion) WithValue(value string) *UpdateProjectRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateProjectRequest_FieldSubPathValue)
}

func (s UpdateProjectRequestPathSelectorProjectMultiRegionPolicyCriteriaForDisabledSyncDestRegion) WithArrayOfValues(values []string) *UpdateProjectRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateProjectRequest_FieldSubPathArrayOfValues)
}

type UpdateProjectRequestPathSelectorProjectEnabledServices struct{}

func (UpdateProjectRequestPathSelectorProjectEnabledServices) FieldPath() *UpdateProjectRequest_FieldSubPath {
	return &UpdateProjectRequest_FieldSubPath{
		selector: UpdateProjectRequest_FieldPathSelectorProject,
		subPath:  project.NewProjectFieldPathBuilder().EnabledServices().FieldPath(),
	}
}

func (s UpdateProjectRequestPathSelectorProjectEnabledServices) WithValue(value []*meta_service.Reference) *UpdateProjectRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateProjectRequest_FieldSubPathValue)
}

func (s UpdateProjectRequestPathSelectorProjectEnabledServices) WithArrayOfValues(values [][]*meta_service.Reference) *UpdateProjectRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateProjectRequest_FieldSubPathArrayOfValues)
}

func (s UpdateProjectRequestPathSelectorProjectEnabledServices) WithItemValue(value *meta_service.Reference) *UpdateProjectRequest_FieldSubPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*UpdateProjectRequest_FieldSubPathArrayItemValue)
}

type UpdateProjectRequestPathSelectorUpdateMask struct{}

func (UpdateProjectRequestPathSelectorUpdateMask) FieldPath() *UpdateProjectRequest_FieldTerminalPath {
	return &UpdateProjectRequest_FieldTerminalPath{selector: UpdateProjectRequest_FieldPathSelectorUpdateMask}
}

func (s UpdateProjectRequestPathSelectorUpdateMask) WithValue(value *project.Project_FieldMask) *UpdateProjectRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateProjectRequest_FieldTerminalPathValue)
}

func (s UpdateProjectRequestPathSelectorUpdateMask) WithArrayOfValues(values []*project.Project_FieldMask) *UpdateProjectRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateProjectRequest_FieldTerminalPathArrayOfValues)
}

type UpdateProjectRequestPathSelectorCas struct{}

func (UpdateProjectRequestPathSelectorCas) FieldPath() *UpdateProjectRequest_FieldTerminalPath {
	return &UpdateProjectRequest_FieldTerminalPath{selector: UpdateProjectRequest_FieldPathSelectorCas}
}

func (s UpdateProjectRequestPathSelectorCas) WithValue(value *UpdateProjectRequest_CAS) *UpdateProjectRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateProjectRequest_FieldTerminalPathValue)
}

func (s UpdateProjectRequestPathSelectorCas) WithArrayOfValues(values []*UpdateProjectRequest_CAS) *UpdateProjectRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateProjectRequest_FieldTerminalPathArrayOfValues)
}

func (UpdateProjectRequestPathSelectorCas) WithSubPath(subPath UpdateProjectRequestCAS_FieldPath) *UpdateProjectRequest_FieldSubPath {
	return &UpdateProjectRequest_FieldSubPath{selector: UpdateProjectRequest_FieldPathSelectorCas, subPath: subPath}
}

func (s UpdateProjectRequestPathSelectorCas) WithSubValue(subPathValue UpdateProjectRequestCAS_FieldPathValue) *UpdateProjectRequest_FieldSubPathValue {
	return &UpdateProjectRequest_FieldSubPathValue{UpdateProjectRequest_FieldPath: s.WithSubPath(subPathValue), subPathValue: subPathValue}
}

func (s UpdateProjectRequestPathSelectorCas) WithSubArrayOfValues(subPathArrayOfValues UpdateProjectRequestCAS_FieldPathArrayOfValues) *UpdateProjectRequest_FieldSubPathArrayOfValues {
	return &UpdateProjectRequest_FieldSubPathArrayOfValues{UpdateProjectRequest_FieldPath: s.WithSubPath(subPathArrayOfValues), subPathArrayOfValues: subPathArrayOfValues}
}

func (s UpdateProjectRequestPathSelectorCas) WithSubArrayItemValue(subPathArrayItemValue UpdateProjectRequestCAS_FieldPathArrayItemValue) *UpdateProjectRequest_FieldSubPathArrayItemValue {
	return &UpdateProjectRequest_FieldSubPathArrayItemValue{UpdateProjectRequest_FieldPath: s.WithSubPath(subPathArrayItemValue), subPathItemValue: subPathArrayItemValue}
}

func (UpdateProjectRequestPathSelectorCas) ConditionalState() UpdateProjectRequestPathSelectorCasConditionalState {
	return UpdateProjectRequestPathSelectorCasConditionalState{}
}

func (UpdateProjectRequestPathSelectorCas) FieldMask() UpdateProjectRequestPathSelectorCasFieldMask {
	return UpdateProjectRequestPathSelectorCasFieldMask{}
}

type UpdateProjectRequestPathSelectorCasConditionalState struct{}

func (UpdateProjectRequestPathSelectorCasConditionalState) FieldPath() *UpdateProjectRequest_FieldSubPath {
	return &UpdateProjectRequest_FieldSubPath{
		selector: UpdateProjectRequest_FieldPathSelectorCas,
		subPath:  NewUpdateProjectRequestCASFieldPathBuilder().ConditionalState().FieldPath(),
	}
}

func (s UpdateProjectRequestPathSelectorCasConditionalState) WithValue(value *project.Project) *UpdateProjectRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateProjectRequest_FieldSubPathValue)
}

func (s UpdateProjectRequestPathSelectorCasConditionalState) WithArrayOfValues(values []*project.Project) *UpdateProjectRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateProjectRequest_FieldSubPathArrayOfValues)
}

func (UpdateProjectRequestPathSelectorCasConditionalState) Name() UpdateProjectRequestPathSelectorCasConditionalStateName {
	return UpdateProjectRequestPathSelectorCasConditionalStateName{}
}

func (UpdateProjectRequestPathSelectorCasConditionalState) Title() UpdateProjectRequestPathSelectorCasConditionalStateTitle {
	return UpdateProjectRequestPathSelectorCasConditionalStateTitle{}
}

func (UpdateProjectRequestPathSelectorCasConditionalState) ParentOrganization() UpdateProjectRequestPathSelectorCasConditionalStateParentOrganization {
	return UpdateProjectRequestPathSelectorCasConditionalStateParentOrganization{}
}

func (UpdateProjectRequestPathSelectorCasConditionalState) RootOrganization() UpdateProjectRequestPathSelectorCasConditionalStateRootOrganization {
	return UpdateProjectRequestPathSelectorCasConditionalStateRootOrganization{}
}

func (UpdateProjectRequestPathSelectorCasConditionalState) AncestryPath() UpdateProjectRequestPathSelectorCasConditionalStateAncestryPath {
	return UpdateProjectRequestPathSelectorCasConditionalStateAncestryPath{}
}

func (UpdateProjectRequestPathSelectorCasConditionalState) Metadata() UpdateProjectRequestPathSelectorCasConditionalStateMetadata {
	return UpdateProjectRequestPathSelectorCasConditionalStateMetadata{}
}

func (UpdateProjectRequestPathSelectorCasConditionalState) MultiRegionPolicy() UpdateProjectRequestPathSelectorCasConditionalStateMultiRegionPolicy {
	return UpdateProjectRequestPathSelectorCasConditionalStateMultiRegionPolicy{}
}

func (UpdateProjectRequestPathSelectorCasConditionalState) EnabledServices() UpdateProjectRequestPathSelectorCasConditionalStateEnabledServices {
	return UpdateProjectRequestPathSelectorCasConditionalStateEnabledServices{}
}

type UpdateProjectRequestPathSelectorCasConditionalStateName struct{}

func (UpdateProjectRequestPathSelectorCasConditionalStateName) FieldPath() *UpdateProjectRequest_FieldSubPath {
	return &UpdateProjectRequest_FieldSubPath{
		selector: UpdateProjectRequest_FieldPathSelectorCas,
		subPath:  NewUpdateProjectRequestCASFieldPathBuilder().ConditionalState().Name().FieldPath(),
	}
}

func (s UpdateProjectRequestPathSelectorCasConditionalStateName) WithValue(value *project.Name) *UpdateProjectRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateProjectRequest_FieldSubPathValue)
}

func (s UpdateProjectRequestPathSelectorCasConditionalStateName) WithArrayOfValues(values []*project.Name) *UpdateProjectRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateProjectRequest_FieldSubPathArrayOfValues)
}

type UpdateProjectRequestPathSelectorCasConditionalStateTitle struct{}

func (UpdateProjectRequestPathSelectorCasConditionalStateTitle) FieldPath() *UpdateProjectRequest_FieldSubPath {
	return &UpdateProjectRequest_FieldSubPath{
		selector: UpdateProjectRequest_FieldPathSelectorCas,
		subPath:  NewUpdateProjectRequestCASFieldPathBuilder().ConditionalState().Title().FieldPath(),
	}
}

func (s UpdateProjectRequestPathSelectorCasConditionalStateTitle) WithValue(value string) *UpdateProjectRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateProjectRequest_FieldSubPathValue)
}

func (s UpdateProjectRequestPathSelectorCasConditionalStateTitle) WithArrayOfValues(values []string) *UpdateProjectRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateProjectRequest_FieldSubPathArrayOfValues)
}

type UpdateProjectRequestPathSelectorCasConditionalStateParentOrganization struct{}

func (UpdateProjectRequestPathSelectorCasConditionalStateParentOrganization) FieldPath() *UpdateProjectRequest_FieldSubPath {
	return &UpdateProjectRequest_FieldSubPath{
		selector: UpdateProjectRequest_FieldPathSelectorCas,
		subPath:  NewUpdateProjectRequestCASFieldPathBuilder().ConditionalState().ParentOrganization().FieldPath(),
	}
}

func (s UpdateProjectRequestPathSelectorCasConditionalStateParentOrganization) WithValue(value *organization.Reference) *UpdateProjectRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateProjectRequest_FieldSubPathValue)
}

func (s UpdateProjectRequestPathSelectorCasConditionalStateParentOrganization) WithArrayOfValues(values []*organization.Reference) *UpdateProjectRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateProjectRequest_FieldSubPathArrayOfValues)
}

type UpdateProjectRequestPathSelectorCasConditionalStateRootOrganization struct{}

func (UpdateProjectRequestPathSelectorCasConditionalStateRootOrganization) FieldPath() *UpdateProjectRequest_FieldSubPath {
	return &UpdateProjectRequest_FieldSubPath{
		selector: UpdateProjectRequest_FieldPathSelectorCas,
		subPath:  NewUpdateProjectRequestCASFieldPathBuilder().ConditionalState().RootOrganization().FieldPath(),
	}
}

func (s UpdateProjectRequestPathSelectorCasConditionalStateRootOrganization) WithValue(value *organization.Reference) *UpdateProjectRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateProjectRequest_FieldSubPathValue)
}

func (s UpdateProjectRequestPathSelectorCasConditionalStateRootOrganization) WithArrayOfValues(values []*organization.Reference) *UpdateProjectRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateProjectRequest_FieldSubPathArrayOfValues)
}

type UpdateProjectRequestPathSelectorCasConditionalStateAncestryPath struct{}

func (UpdateProjectRequestPathSelectorCasConditionalStateAncestryPath) FieldPath() *UpdateProjectRequest_FieldSubPath {
	return &UpdateProjectRequest_FieldSubPath{
		selector: UpdateProjectRequest_FieldPathSelectorCas,
		subPath:  NewUpdateProjectRequestCASFieldPathBuilder().ConditionalState().AncestryPath().FieldPath(),
	}
}

func (s UpdateProjectRequestPathSelectorCasConditionalStateAncestryPath) WithValue(value []*organization.Reference) *UpdateProjectRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateProjectRequest_FieldSubPathValue)
}

func (s UpdateProjectRequestPathSelectorCasConditionalStateAncestryPath) WithArrayOfValues(values [][]*organization.Reference) *UpdateProjectRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateProjectRequest_FieldSubPathArrayOfValues)
}

func (s UpdateProjectRequestPathSelectorCasConditionalStateAncestryPath) WithItemValue(value *organization.Reference) *UpdateProjectRequest_FieldSubPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*UpdateProjectRequest_FieldSubPathArrayItemValue)
}

type UpdateProjectRequestPathSelectorCasConditionalStateMetadata struct{}

func (UpdateProjectRequestPathSelectorCasConditionalStateMetadata) FieldPath() *UpdateProjectRequest_FieldSubPath {
	return &UpdateProjectRequest_FieldSubPath{
		selector: UpdateProjectRequest_FieldPathSelectorCas,
		subPath:  NewUpdateProjectRequestCASFieldPathBuilder().ConditionalState().Metadata().FieldPath(),
	}
}

func (s UpdateProjectRequestPathSelectorCasConditionalStateMetadata) WithValue(value *ntt_meta.Meta) *UpdateProjectRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateProjectRequest_FieldSubPathValue)
}

func (s UpdateProjectRequestPathSelectorCasConditionalStateMetadata) WithArrayOfValues(values []*ntt_meta.Meta) *UpdateProjectRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateProjectRequest_FieldSubPathArrayOfValues)
}

func (UpdateProjectRequestPathSelectorCasConditionalStateMetadata) CreateTime() UpdateProjectRequestPathSelectorCasConditionalStateMetadataCreateTime {
	return UpdateProjectRequestPathSelectorCasConditionalStateMetadataCreateTime{}
}

func (UpdateProjectRequestPathSelectorCasConditionalStateMetadata) UpdateTime() UpdateProjectRequestPathSelectorCasConditionalStateMetadataUpdateTime {
	return UpdateProjectRequestPathSelectorCasConditionalStateMetadataUpdateTime{}
}

func (UpdateProjectRequestPathSelectorCasConditionalStateMetadata) Uuid() UpdateProjectRequestPathSelectorCasConditionalStateMetadataUuid {
	return UpdateProjectRequestPathSelectorCasConditionalStateMetadataUuid{}
}

func (UpdateProjectRequestPathSelectorCasConditionalStateMetadata) Tags() UpdateProjectRequestPathSelectorCasConditionalStateMetadataTags {
	return UpdateProjectRequestPathSelectorCasConditionalStateMetadataTags{}
}

func (UpdateProjectRequestPathSelectorCasConditionalStateMetadata) Labels() UpdateProjectRequestPathSelectorCasConditionalStateMetadataLabels {
	return UpdateProjectRequestPathSelectorCasConditionalStateMetadataLabels{}
}

func (UpdateProjectRequestPathSelectorCasConditionalStateMetadata) Annotations() UpdateProjectRequestPathSelectorCasConditionalStateMetadataAnnotations {
	return UpdateProjectRequestPathSelectorCasConditionalStateMetadataAnnotations{}
}

func (UpdateProjectRequestPathSelectorCasConditionalStateMetadata) Generation() UpdateProjectRequestPathSelectorCasConditionalStateMetadataGeneration {
	return UpdateProjectRequestPathSelectorCasConditionalStateMetadataGeneration{}
}

func (UpdateProjectRequestPathSelectorCasConditionalStateMetadata) ResourceVersion() UpdateProjectRequestPathSelectorCasConditionalStateMetadataResourceVersion {
	return UpdateProjectRequestPathSelectorCasConditionalStateMetadataResourceVersion{}
}

func (UpdateProjectRequestPathSelectorCasConditionalStateMetadata) OwnerReferences() UpdateProjectRequestPathSelectorCasConditionalStateMetadataOwnerReferences {
	return UpdateProjectRequestPathSelectorCasConditionalStateMetadataOwnerReferences{}
}

func (UpdateProjectRequestPathSelectorCasConditionalStateMetadata) Shards() UpdateProjectRequestPathSelectorCasConditionalStateMetadataShards {
	return UpdateProjectRequestPathSelectorCasConditionalStateMetadataShards{}
}

func (UpdateProjectRequestPathSelectorCasConditionalStateMetadata) Syncing() UpdateProjectRequestPathSelectorCasConditionalStateMetadataSyncing {
	return UpdateProjectRequestPathSelectorCasConditionalStateMetadataSyncing{}
}

type UpdateProjectRequestPathSelectorCasConditionalStateMetadataCreateTime struct{}

func (UpdateProjectRequestPathSelectorCasConditionalStateMetadataCreateTime) FieldPath() *UpdateProjectRequest_FieldSubPath {
	return &UpdateProjectRequest_FieldSubPath{
		selector: UpdateProjectRequest_FieldPathSelectorCas,
		subPath:  NewUpdateProjectRequestCASFieldPathBuilder().ConditionalState().Metadata().CreateTime().FieldPath(),
	}
}

func (s UpdateProjectRequestPathSelectorCasConditionalStateMetadataCreateTime) WithValue(value *timestamp.Timestamp) *UpdateProjectRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateProjectRequest_FieldSubPathValue)
}

func (s UpdateProjectRequestPathSelectorCasConditionalStateMetadataCreateTime) WithArrayOfValues(values []*timestamp.Timestamp) *UpdateProjectRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateProjectRequest_FieldSubPathArrayOfValues)
}

type UpdateProjectRequestPathSelectorCasConditionalStateMetadataUpdateTime struct{}

func (UpdateProjectRequestPathSelectorCasConditionalStateMetadataUpdateTime) FieldPath() *UpdateProjectRequest_FieldSubPath {
	return &UpdateProjectRequest_FieldSubPath{
		selector: UpdateProjectRequest_FieldPathSelectorCas,
		subPath:  NewUpdateProjectRequestCASFieldPathBuilder().ConditionalState().Metadata().UpdateTime().FieldPath(),
	}
}

func (s UpdateProjectRequestPathSelectorCasConditionalStateMetadataUpdateTime) WithValue(value *timestamp.Timestamp) *UpdateProjectRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateProjectRequest_FieldSubPathValue)
}

func (s UpdateProjectRequestPathSelectorCasConditionalStateMetadataUpdateTime) WithArrayOfValues(values []*timestamp.Timestamp) *UpdateProjectRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateProjectRequest_FieldSubPathArrayOfValues)
}

type UpdateProjectRequestPathSelectorCasConditionalStateMetadataUuid struct{}

func (UpdateProjectRequestPathSelectorCasConditionalStateMetadataUuid) FieldPath() *UpdateProjectRequest_FieldSubPath {
	return &UpdateProjectRequest_FieldSubPath{
		selector: UpdateProjectRequest_FieldPathSelectorCas,
		subPath:  NewUpdateProjectRequestCASFieldPathBuilder().ConditionalState().Metadata().Uuid().FieldPath(),
	}
}

func (s UpdateProjectRequestPathSelectorCasConditionalStateMetadataUuid) WithValue(value string) *UpdateProjectRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateProjectRequest_FieldSubPathValue)
}

func (s UpdateProjectRequestPathSelectorCasConditionalStateMetadataUuid) WithArrayOfValues(values []string) *UpdateProjectRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateProjectRequest_FieldSubPathArrayOfValues)
}

type UpdateProjectRequestPathSelectorCasConditionalStateMetadataTags struct{}

func (UpdateProjectRequestPathSelectorCasConditionalStateMetadataTags) FieldPath() *UpdateProjectRequest_FieldSubPath {
	return &UpdateProjectRequest_FieldSubPath{
		selector: UpdateProjectRequest_FieldPathSelectorCas,
		subPath:  NewUpdateProjectRequestCASFieldPathBuilder().ConditionalState().Metadata().Tags().FieldPath(),
	}
}

func (s UpdateProjectRequestPathSelectorCasConditionalStateMetadataTags) WithValue(value []string) *UpdateProjectRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateProjectRequest_FieldSubPathValue)
}

func (s UpdateProjectRequestPathSelectorCasConditionalStateMetadataTags) WithArrayOfValues(values [][]string) *UpdateProjectRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateProjectRequest_FieldSubPathArrayOfValues)
}

func (s UpdateProjectRequestPathSelectorCasConditionalStateMetadataTags) WithItemValue(value string) *UpdateProjectRequest_FieldSubPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*UpdateProjectRequest_FieldSubPathArrayItemValue)
}

type UpdateProjectRequestPathSelectorCasConditionalStateMetadataLabels struct{}

func (UpdateProjectRequestPathSelectorCasConditionalStateMetadataLabels) FieldPath() *UpdateProjectRequest_FieldSubPath {
	return &UpdateProjectRequest_FieldSubPath{
		selector: UpdateProjectRequest_FieldPathSelectorCas,
		subPath:  NewUpdateProjectRequestCASFieldPathBuilder().ConditionalState().Metadata().Labels().FieldPath(),
	}
}

func (s UpdateProjectRequestPathSelectorCasConditionalStateMetadataLabels) WithValue(value map[string]string) *UpdateProjectRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateProjectRequest_FieldSubPathValue)
}

func (s UpdateProjectRequestPathSelectorCasConditionalStateMetadataLabels) WithArrayOfValues(values []map[string]string) *UpdateProjectRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateProjectRequest_FieldSubPathArrayOfValues)
}

func (UpdateProjectRequestPathSelectorCasConditionalStateMetadataLabels) WithKey(key string) UpdateProjectRequestMapPathSelectorCasConditionalStateMetadataLabels {
	return UpdateProjectRequestMapPathSelectorCasConditionalStateMetadataLabels{key: key}
}

type UpdateProjectRequestMapPathSelectorCasConditionalStateMetadataLabels struct {
	key string
}

func (s UpdateProjectRequestMapPathSelectorCasConditionalStateMetadataLabels) FieldPath() *UpdateProjectRequest_FieldSubPath {
	return &UpdateProjectRequest_FieldSubPath{
		selector: UpdateProjectRequest_FieldPathSelectorCas,
		subPath:  NewUpdateProjectRequestCASFieldPathBuilder().ConditionalState().Metadata().Labels().WithKey(s.key).FieldPath(),
	}
}

func (s UpdateProjectRequestMapPathSelectorCasConditionalStateMetadataLabels) WithValue(value string) *UpdateProjectRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateProjectRequest_FieldSubPathValue)
}

func (s UpdateProjectRequestMapPathSelectorCasConditionalStateMetadataLabels) WithArrayOfValues(values []string) *UpdateProjectRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateProjectRequest_FieldSubPathArrayOfValues)
}

type UpdateProjectRequestPathSelectorCasConditionalStateMetadataAnnotations struct{}

func (UpdateProjectRequestPathSelectorCasConditionalStateMetadataAnnotations) FieldPath() *UpdateProjectRequest_FieldSubPath {
	return &UpdateProjectRequest_FieldSubPath{
		selector: UpdateProjectRequest_FieldPathSelectorCas,
		subPath:  NewUpdateProjectRequestCASFieldPathBuilder().ConditionalState().Metadata().Annotations().FieldPath(),
	}
}

func (s UpdateProjectRequestPathSelectorCasConditionalStateMetadataAnnotations) WithValue(value map[string]string) *UpdateProjectRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateProjectRequest_FieldSubPathValue)
}

func (s UpdateProjectRequestPathSelectorCasConditionalStateMetadataAnnotations) WithArrayOfValues(values []map[string]string) *UpdateProjectRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateProjectRequest_FieldSubPathArrayOfValues)
}

func (UpdateProjectRequestPathSelectorCasConditionalStateMetadataAnnotations) WithKey(key string) UpdateProjectRequestMapPathSelectorCasConditionalStateMetadataAnnotations {
	return UpdateProjectRequestMapPathSelectorCasConditionalStateMetadataAnnotations{key: key}
}

type UpdateProjectRequestMapPathSelectorCasConditionalStateMetadataAnnotations struct {
	key string
}

func (s UpdateProjectRequestMapPathSelectorCasConditionalStateMetadataAnnotations) FieldPath() *UpdateProjectRequest_FieldSubPath {
	return &UpdateProjectRequest_FieldSubPath{
		selector: UpdateProjectRequest_FieldPathSelectorCas,
		subPath:  NewUpdateProjectRequestCASFieldPathBuilder().ConditionalState().Metadata().Annotations().WithKey(s.key).FieldPath(),
	}
}

func (s UpdateProjectRequestMapPathSelectorCasConditionalStateMetadataAnnotations) WithValue(value string) *UpdateProjectRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateProjectRequest_FieldSubPathValue)
}

func (s UpdateProjectRequestMapPathSelectorCasConditionalStateMetadataAnnotations) WithArrayOfValues(values []string) *UpdateProjectRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateProjectRequest_FieldSubPathArrayOfValues)
}

type UpdateProjectRequestPathSelectorCasConditionalStateMetadataGeneration struct{}

func (UpdateProjectRequestPathSelectorCasConditionalStateMetadataGeneration) FieldPath() *UpdateProjectRequest_FieldSubPath {
	return &UpdateProjectRequest_FieldSubPath{
		selector: UpdateProjectRequest_FieldPathSelectorCas,
		subPath:  NewUpdateProjectRequestCASFieldPathBuilder().ConditionalState().Metadata().Generation().FieldPath(),
	}
}

func (s UpdateProjectRequestPathSelectorCasConditionalStateMetadataGeneration) WithValue(value int64) *UpdateProjectRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateProjectRequest_FieldSubPathValue)
}

func (s UpdateProjectRequestPathSelectorCasConditionalStateMetadataGeneration) WithArrayOfValues(values []int64) *UpdateProjectRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateProjectRequest_FieldSubPathArrayOfValues)
}

type UpdateProjectRequestPathSelectorCasConditionalStateMetadataResourceVersion struct{}

func (UpdateProjectRequestPathSelectorCasConditionalStateMetadataResourceVersion) FieldPath() *UpdateProjectRequest_FieldSubPath {
	return &UpdateProjectRequest_FieldSubPath{
		selector: UpdateProjectRequest_FieldPathSelectorCas,
		subPath:  NewUpdateProjectRequestCASFieldPathBuilder().ConditionalState().Metadata().ResourceVersion().FieldPath(),
	}
}

func (s UpdateProjectRequestPathSelectorCasConditionalStateMetadataResourceVersion) WithValue(value string) *UpdateProjectRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateProjectRequest_FieldSubPathValue)
}

func (s UpdateProjectRequestPathSelectorCasConditionalStateMetadataResourceVersion) WithArrayOfValues(values []string) *UpdateProjectRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateProjectRequest_FieldSubPathArrayOfValues)
}

type UpdateProjectRequestPathSelectorCasConditionalStateMetadataOwnerReferences struct{}

func (UpdateProjectRequestPathSelectorCasConditionalStateMetadataOwnerReferences) FieldPath() *UpdateProjectRequest_FieldSubPath {
	return &UpdateProjectRequest_FieldSubPath{
		selector: UpdateProjectRequest_FieldPathSelectorCas,
		subPath:  NewUpdateProjectRequestCASFieldPathBuilder().ConditionalState().Metadata().OwnerReferences().FieldPath(),
	}
}

func (s UpdateProjectRequestPathSelectorCasConditionalStateMetadataOwnerReferences) WithValue(value []*ntt_meta.OwnerReference) *UpdateProjectRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateProjectRequest_FieldSubPathValue)
}

func (s UpdateProjectRequestPathSelectorCasConditionalStateMetadataOwnerReferences) WithArrayOfValues(values [][]*ntt_meta.OwnerReference) *UpdateProjectRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateProjectRequest_FieldSubPathArrayOfValues)
}

func (s UpdateProjectRequestPathSelectorCasConditionalStateMetadataOwnerReferences) WithItemValue(value *ntt_meta.OwnerReference) *UpdateProjectRequest_FieldSubPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*UpdateProjectRequest_FieldSubPathArrayItemValue)
}

func (UpdateProjectRequestPathSelectorCasConditionalStateMetadataOwnerReferences) ApiVersion() UpdateProjectRequestPathSelectorCasConditionalStateMetadataOwnerReferencesApiVersion {
	return UpdateProjectRequestPathSelectorCasConditionalStateMetadataOwnerReferencesApiVersion{}
}

func (UpdateProjectRequestPathSelectorCasConditionalStateMetadataOwnerReferences) Kind() UpdateProjectRequestPathSelectorCasConditionalStateMetadataOwnerReferencesKind {
	return UpdateProjectRequestPathSelectorCasConditionalStateMetadataOwnerReferencesKind{}
}

func (UpdateProjectRequestPathSelectorCasConditionalStateMetadataOwnerReferences) Name() UpdateProjectRequestPathSelectorCasConditionalStateMetadataOwnerReferencesName {
	return UpdateProjectRequestPathSelectorCasConditionalStateMetadataOwnerReferencesName{}
}

func (UpdateProjectRequestPathSelectorCasConditionalStateMetadataOwnerReferences) Uid() UpdateProjectRequestPathSelectorCasConditionalStateMetadataOwnerReferencesUid {
	return UpdateProjectRequestPathSelectorCasConditionalStateMetadataOwnerReferencesUid{}
}

func (UpdateProjectRequestPathSelectorCasConditionalStateMetadataOwnerReferences) Controller() UpdateProjectRequestPathSelectorCasConditionalStateMetadataOwnerReferencesController {
	return UpdateProjectRequestPathSelectorCasConditionalStateMetadataOwnerReferencesController{}
}

func (UpdateProjectRequestPathSelectorCasConditionalStateMetadataOwnerReferences) BlockOwnerDeletion() UpdateProjectRequestPathSelectorCasConditionalStateMetadataOwnerReferencesBlockOwnerDeletion {
	return UpdateProjectRequestPathSelectorCasConditionalStateMetadataOwnerReferencesBlockOwnerDeletion{}
}

type UpdateProjectRequestPathSelectorCasConditionalStateMetadataOwnerReferencesApiVersion struct{}

func (UpdateProjectRequestPathSelectorCasConditionalStateMetadataOwnerReferencesApiVersion) FieldPath() *UpdateProjectRequest_FieldSubPath {
	return &UpdateProjectRequest_FieldSubPath{
		selector: UpdateProjectRequest_FieldPathSelectorCas,
		subPath:  NewUpdateProjectRequestCASFieldPathBuilder().ConditionalState().Metadata().OwnerReferences().ApiVersion().FieldPath(),
	}
}

func (s UpdateProjectRequestPathSelectorCasConditionalStateMetadataOwnerReferencesApiVersion) WithValue(value string) *UpdateProjectRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateProjectRequest_FieldSubPathValue)
}

func (s UpdateProjectRequestPathSelectorCasConditionalStateMetadataOwnerReferencesApiVersion) WithArrayOfValues(values []string) *UpdateProjectRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateProjectRequest_FieldSubPathArrayOfValues)
}

type UpdateProjectRequestPathSelectorCasConditionalStateMetadataOwnerReferencesKind struct{}

func (UpdateProjectRequestPathSelectorCasConditionalStateMetadataOwnerReferencesKind) FieldPath() *UpdateProjectRequest_FieldSubPath {
	return &UpdateProjectRequest_FieldSubPath{
		selector: UpdateProjectRequest_FieldPathSelectorCas,
		subPath:  NewUpdateProjectRequestCASFieldPathBuilder().ConditionalState().Metadata().OwnerReferences().Kind().FieldPath(),
	}
}

func (s UpdateProjectRequestPathSelectorCasConditionalStateMetadataOwnerReferencesKind) WithValue(value string) *UpdateProjectRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateProjectRequest_FieldSubPathValue)
}

func (s UpdateProjectRequestPathSelectorCasConditionalStateMetadataOwnerReferencesKind) WithArrayOfValues(values []string) *UpdateProjectRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateProjectRequest_FieldSubPathArrayOfValues)
}

type UpdateProjectRequestPathSelectorCasConditionalStateMetadataOwnerReferencesName struct{}

func (UpdateProjectRequestPathSelectorCasConditionalStateMetadataOwnerReferencesName) FieldPath() *UpdateProjectRequest_FieldSubPath {
	return &UpdateProjectRequest_FieldSubPath{
		selector: UpdateProjectRequest_FieldPathSelectorCas,
		subPath:  NewUpdateProjectRequestCASFieldPathBuilder().ConditionalState().Metadata().OwnerReferences().Name().FieldPath(),
	}
}

func (s UpdateProjectRequestPathSelectorCasConditionalStateMetadataOwnerReferencesName) WithValue(value string) *UpdateProjectRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateProjectRequest_FieldSubPathValue)
}

func (s UpdateProjectRequestPathSelectorCasConditionalStateMetadataOwnerReferencesName) WithArrayOfValues(values []string) *UpdateProjectRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateProjectRequest_FieldSubPathArrayOfValues)
}

type UpdateProjectRequestPathSelectorCasConditionalStateMetadataOwnerReferencesUid struct{}

func (UpdateProjectRequestPathSelectorCasConditionalStateMetadataOwnerReferencesUid) FieldPath() *UpdateProjectRequest_FieldSubPath {
	return &UpdateProjectRequest_FieldSubPath{
		selector: UpdateProjectRequest_FieldPathSelectorCas,
		subPath:  NewUpdateProjectRequestCASFieldPathBuilder().ConditionalState().Metadata().OwnerReferences().Uid().FieldPath(),
	}
}

func (s UpdateProjectRequestPathSelectorCasConditionalStateMetadataOwnerReferencesUid) WithValue(value string) *UpdateProjectRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateProjectRequest_FieldSubPathValue)
}

func (s UpdateProjectRequestPathSelectorCasConditionalStateMetadataOwnerReferencesUid) WithArrayOfValues(values []string) *UpdateProjectRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateProjectRequest_FieldSubPathArrayOfValues)
}

type UpdateProjectRequestPathSelectorCasConditionalStateMetadataOwnerReferencesController struct{}

func (UpdateProjectRequestPathSelectorCasConditionalStateMetadataOwnerReferencesController) FieldPath() *UpdateProjectRequest_FieldSubPath {
	return &UpdateProjectRequest_FieldSubPath{
		selector: UpdateProjectRequest_FieldPathSelectorCas,
		subPath:  NewUpdateProjectRequestCASFieldPathBuilder().ConditionalState().Metadata().OwnerReferences().Controller().FieldPath(),
	}
}

func (s UpdateProjectRequestPathSelectorCasConditionalStateMetadataOwnerReferencesController) WithValue(value bool) *UpdateProjectRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateProjectRequest_FieldSubPathValue)
}

func (s UpdateProjectRequestPathSelectorCasConditionalStateMetadataOwnerReferencesController) WithArrayOfValues(values []bool) *UpdateProjectRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateProjectRequest_FieldSubPathArrayOfValues)
}

type UpdateProjectRequestPathSelectorCasConditionalStateMetadataOwnerReferencesBlockOwnerDeletion struct{}

func (UpdateProjectRequestPathSelectorCasConditionalStateMetadataOwnerReferencesBlockOwnerDeletion) FieldPath() *UpdateProjectRequest_FieldSubPath {
	return &UpdateProjectRequest_FieldSubPath{
		selector: UpdateProjectRequest_FieldPathSelectorCas,
		subPath:  NewUpdateProjectRequestCASFieldPathBuilder().ConditionalState().Metadata().OwnerReferences().BlockOwnerDeletion().FieldPath(),
	}
}

func (s UpdateProjectRequestPathSelectorCasConditionalStateMetadataOwnerReferencesBlockOwnerDeletion) WithValue(value bool) *UpdateProjectRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateProjectRequest_FieldSubPathValue)
}

func (s UpdateProjectRequestPathSelectorCasConditionalStateMetadataOwnerReferencesBlockOwnerDeletion) WithArrayOfValues(values []bool) *UpdateProjectRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateProjectRequest_FieldSubPathArrayOfValues)
}

type UpdateProjectRequestPathSelectorCasConditionalStateMetadataShards struct{}

func (UpdateProjectRequestPathSelectorCasConditionalStateMetadataShards) FieldPath() *UpdateProjectRequest_FieldSubPath {
	return &UpdateProjectRequest_FieldSubPath{
		selector: UpdateProjectRequest_FieldPathSelectorCas,
		subPath:  NewUpdateProjectRequestCASFieldPathBuilder().ConditionalState().Metadata().Shards().FieldPath(),
	}
}

func (s UpdateProjectRequestPathSelectorCasConditionalStateMetadataShards) WithValue(value map[string]int64) *UpdateProjectRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateProjectRequest_FieldSubPathValue)
}

func (s UpdateProjectRequestPathSelectorCasConditionalStateMetadataShards) WithArrayOfValues(values []map[string]int64) *UpdateProjectRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateProjectRequest_FieldSubPathArrayOfValues)
}

func (UpdateProjectRequestPathSelectorCasConditionalStateMetadataShards) WithKey(key string) UpdateProjectRequestMapPathSelectorCasConditionalStateMetadataShards {
	return UpdateProjectRequestMapPathSelectorCasConditionalStateMetadataShards{key: key}
}

type UpdateProjectRequestMapPathSelectorCasConditionalStateMetadataShards struct {
	key string
}

func (s UpdateProjectRequestMapPathSelectorCasConditionalStateMetadataShards) FieldPath() *UpdateProjectRequest_FieldSubPath {
	return &UpdateProjectRequest_FieldSubPath{
		selector: UpdateProjectRequest_FieldPathSelectorCas,
		subPath:  NewUpdateProjectRequestCASFieldPathBuilder().ConditionalState().Metadata().Shards().WithKey(s.key).FieldPath(),
	}
}

func (s UpdateProjectRequestMapPathSelectorCasConditionalStateMetadataShards) WithValue(value int64) *UpdateProjectRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateProjectRequest_FieldSubPathValue)
}

func (s UpdateProjectRequestMapPathSelectorCasConditionalStateMetadataShards) WithArrayOfValues(values []int64) *UpdateProjectRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateProjectRequest_FieldSubPathArrayOfValues)
}

type UpdateProjectRequestPathSelectorCasConditionalStateMetadataSyncing struct{}

func (UpdateProjectRequestPathSelectorCasConditionalStateMetadataSyncing) FieldPath() *UpdateProjectRequest_FieldSubPath {
	return &UpdateProjectRequest_FieldSubPath{
		selector: UpdateProjectRequest_FieldPathSelectorCas,
		subPath:  NewUpdateProjectRequestCASFieldPathBuilder().ConditionalState().Metadata().Syncing().FieldPath(),
	}
}

func (s UpdateProjectRequestPathSelectorCasConditionalStateMetadataSyncing) WithValue(value *ntt_meta.SyncingMeta) *UpdateProjectRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateProjectRequest_FieldSubPathValue)
}

func (s UpdateProjectRequestPathSelectorCasConditionalStateMetadataSyncing) WithArrayOfValues(values []*ntt_meta.SyncingMeta) *UpdateProjectRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateProjectRequest_FieldSubPathArrayOfValues)
}

func (UpdateProjectRequestPathSelectorCasConditionalStateMetadataSyncing) OwningRegion() UpdateProjectRequestPathSelectorCasConditionalStateMetadataSyncingOwningRegion {
	return UpdateProjectRequestPathSelectorCasConditionalStateMetadataSyncingOwningRegion{}
}

func (UpdateProjectRequestPathSelectorCasConditionalStateMetadataSyncing) Regions() UpdateProjectRequestPathSelectorCasConditionalStateMetadataSyncingRegions {
	return UpdateProjectRequestPathSelectorCasConditionalStateMetadataSyncingRegions{}
}

type UpdateProjectRequestPathSelectorCasConditionalStateMetadataSyncingOwningRegion struct{}

func (UpdateProjectRequestPathSelectorCasConditionalStateMetadataSyncingOwningRegion) FieldPath() *UpdateProjectRequest_FieldSubPath {
	return &UpdateProjectRequest_FieldSubPath{
		selector: UpdateProjectRequest_FieldPathSelectorCas,
		subPath:  NewUpdateProjectRequestCASFieldPathBuilder().ConditionalState().Metadata().Syncing().OwningRegion().FieldPath(),
	}
}

func (s UpdateProjectRequestPathSelectorCasConditionalStateMetadataSyncingOwningRegion) WithValue(value string) *UpdateProjectRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateProjectRequest_FieldSubPathValue)
}

func (s UpdateProjectRequestPathSelectorCasConditionalStateMetadataSyncingOwningRegion) WithArrayOfValues(values []string) *UpdateProjectRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateProjectRequest_FieldSubPathArrayOfValues)
}

type UpdateProjectRequestPathSelectorCasConditionalStateMetadataSyncingRegions struct{}

func (UpdateProjectRequestPathSelectorCasConditionalStateMetadataSyncingRegions) FieldPath() *UpdateProjectRequest_FieldSubPath {
	return &UpdateProjectRequest_FieldSubPath{
		selector: UpdateProjectRequest_FieldPathSelectorCas,
		subPath:  NewUpdateProjectRequestCASFieldPathBuilder().ConditionalState().Metadata().Syncing().Regions().FieldPath(),
	}
}

func (s UpdateProjectRequestPathSelectorCasConditionalStateMetadataSyncingRegions) WithValue(value []string) *UpdateProjectRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateProjectRequest_FieldSubPathValue)
}

func (s UpdateProjectRequestPathSelectorCasConditionalStateMetadataSyncingRegions) WithArrayOfValues(values [][]string) *UpdateProjectRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateProjectRequest_FieldSubPathArrayOfValues)
}

func (s UpdateProjectRequestPathSelectorCasConditionalStateMetadataSyncingRegions) WithItemValue(value string) *UpdateProjectRequest_FieldSubPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*UpdateProjectRequest_FieldSubPathArrayItemValue)
}

type UpdateProjectRequestPathSelectorCasConditionalStateMultiRegionPolicy struct{}

func (UpdateProjectRequestPathSelectorCasConditionalStateMultiRegionPolicy) FieldPath() *UpdateProjectRequest_FieldSubPath {
	return &UpdateProjectRequest_FieldSubPath{
		selector: UpdateProjectRequest_FieldPathSelectorCas,
		subPath:  NewUpdateProjectRequestCASFieldPathBuilder().ConditionalState().MultiRegionPolicy().FieldPath(),
	}
}

func (s UpdateProjectRequestPathSelectorCasConditionalStateMultiRegionPolicy) WithValue(value *multi_region_policy.MultiRegionPolicy) *UpdateProjectRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateProjectRequest_FieldSubPathValue)
}

func (s UpdateProjectRequestPathSelectorCasConditionalStateMultiRegionPolicy) WithArrayOfValues(values []*multi_region_policy.MultiRegionPolicy) *UpdateProjectRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateProjectRequest_FieldSubPathArrayOfValues)
}

func (UpdateProjectRequestPathSelectorCasConditionalStateMultiRegionPolicy) EnabledRegions() UpdateProjectRequestPathSelectorCasConditionalStateMultiRegionPolicyEnabledRegions {
	return UpdateProjectRequestPathSelectorCasConditionalStateMultiRegionPolicyEnabledRegions{}
}

func (UpdateProjectRequestPathSelectorCasConditionalStateMultiRegionPolicy) DefaultControlRegion() UpdateProjectRequestPathSelectorCasConditionalStateMultiRegionPolicyDefaultControlRegion {
	return UpdateProjectRequestPathSelectorCasConditionalStateMultiRegionPolicyDefaultControlRegion{}
}

func (UpdateProjectRequestPathSelectorCasConditionalStateMultiRegionPolicy) CriteriaForDisabledSync() UpdateProjectRequestPathSelectorCasConditionalStateMultiRegionPolicyCriteriaForDisabledSync {
	return UpdateProjectRequestPathSelectorCasConditionalStateMultiRegionPolicyCriteriaForDisabledSync{}
}

type UpdateProjectRequestPathSelectorCasConditionalStateMultiRegionPolicyEnabledRegions struct{}

func (UpdateProjectRequestPathSelectorCasConditionalStateMultiRegionPolicyEnabledRegions) FieldPath() *UpdateProjectRequest_FieldSubPath {
	return &UpdateProjectRequest_FieldSubPath{
		selector: UpdateProjectRequest_FieldPathSelectorCas,
		subPath:  NewUpdateProjectRequestCASFieldPathBuilder().ConditionalState().MultiRegionPolicy().EnabledRegions().FieldPath(),
	}
}

func (s UpdateProjectRequestPathSelectorCasConditionalStateMultiRegionPolicyEnabledRegions) WithValue(value []string) *UpdateProjectRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateProjectRequest_FieldSubPathValue)
}

func (s UpdateProjectRequestPathSelectorCasConditionalStateMultiRegionPolicyEnabledRegions) WithArrayOfValues(values [][]string) *UpdateProjectRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateProjectRequest_FieldSubPathArrayOfValues)
}

func (s UpdateProjectRequestPathSelectorCasConditionalStateMultiRegionPolicyEnabledRegions) WithItemValue(value string) *UpdateProjectRequest_FieldSubPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*UpdateProjectRequest_FieldSubPathArrayItemValue)
}

type UpdateProjectRequestPathSelectorCasConditionalStateMultiRegionPolicyDefaultControlRegion struct{}

func (UpdateProjectRequestPathSelectorCasConditionalStateMultiRegionPolicyDefaultControlRegion) FieldPath() *UpdateProjectRequest_FieldSubPath {
	return &UpdateProjectRequest_FieldSubPath{
		selector: UpdateProjectRequest_FieldPathSelectorCas,
		subPath:  NewUpdateProjectRequestCASFieldPathBuilder().ConditionalState().MultiRegionPolicy().DefaultControlRegion().FieldPath(),
	}
}

func (s UpdateProjectRequestPathSelectorCasConditionalStateMultiRegionPolicyDefaultControlRegion) WithValue(value string) *UpdateProjectRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateProjectRequest_FieldSubPathValue)
}

func (s UpdateProjectRequestPathSelectorCasConditionalStateMultiRegionPolicyDefaultControlRegion) WithArrayOfValues(values []string) *UpdateProjectRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateProjectRequest_FieldSubPathArrayOfValues)
}

type UpdateProjectRequestPathSelectorCasConditionalStateMultiRegionPolicyCriteriaForDisabledSync struct{}

func (UpdateProjectRequestPathSelectorCasConditionalStateMultiRegionPolicyCriteriaForDisabledSync) FieldPath() *UpdateProjectRequest_FieldSubPath {
	return &UpdateProjectRequest_FieldSubPath{
		selector: UpdateProjectRequest_FieldPathSelectorCas,
		subPath:  NewUpdateProjectRequestCASFieldPathBuilder().ConditionalState().MultiRegionPolicy().CriteriaForDisabledSync().FieldPath(),
	}
}

func (s UpdateProjectRequestPathSelectorCasConditionalStateMultiRegionPolicyCriteriaForDisabledSync) WithValue(value []*multi_region_policy.MultiRegionPolicy_CriteriaForDisabledSync) *UpdateProjectRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateProjectRequest_FieldSubPathValue)
}

func (s UpdateProjectRequestPathSelectorCasConditionalStateMultiRegionPolicyCriteriaForDisabledSync) WithArrayOfValues(values [][]*multi_region_policy.MultiRegionPolicy_CriteriaForDisabledSync) *UpdateProjectRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateProjectRequest_FieldSubPathArrayOfValues)
}

func (s UpdateProjectRequestPathSelectorCasConditionalStateMultiRegionPolicyCriteriaForDisabledSync) WithItemValue(value *multi_region_policy.MultiRegionPolicy_CriteriaForDisabledSync) *UpdateProjectRequest_FieldSubPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*UpdateProjectRequest_FieldSubPathArrayItemValue)
}

func (UpdateProjectRequestPathSelectorCasConditionalStateMultiRegionPolicyCriteriaForDisabledSync) ResourceTypeName() UpdateProjectRequestPathSelectorCasConditionalStateMultiRegionPolicyCriteriaForDisabledSyncResourceTypeName {
	return UpdateProjectRequestPathSelectorCasConditionalStateMultiRegionPolicyCriteriaForDisabledSyncResourceTypeName{}
}

func (UpdateProjectRequestPathSelectorCasConditionalStateMultiRegionPolicyCriteriaForDisabledSync) SourceRegion() UpdateProjectRequestPathSelectorCasConditionalStateMultiRegionPolicyCriteriaForDisabledSyncSourceRegion {
	return UpdateProjectRequestPathSelectorCasConditionalStateMultiRegionPolicyCriteriaForDisabledSyncSourceRegion{}
}

func (UpdateProjectRequestPathSelectorCasConditionalStateMultiRegionPolicyCriteriaForDisabledSync) DestRegion() UpdateProjectRequestPathSelectorCasConditionalStateMultiRegionPolicyCriteriaForDisabledSyncDestRegion {
	return UpdateProjectRequestPathSelectorCasConditionalStateMultiRegionPolicyCriteriaForDisabledSyncDestRegion{}
}

type UpdateProjectRequestPathSelectorCasConditionalStateMultiRegionPolicyCriteriaForDisabledSyncResourceTypeName struct{}

func (UpdateProjectRequestPathSelectorCasConditionalStateMultiRegionPolicyCriteriaForDisabledSyncResourceTypeName) FieldPath() *UpdateProjectRequest_FieldSubPath {
	return &UpdateProjectRequest_FieldSubPath{
		selector: UpdateProjectRequest_FieldPathSelectorCas,
		subPath:  NewUpdateProjectRequestCASFieldPathBuilder().ConditionalState().MultiRegionPolicy().CriteriaForDisabledSync().ResourceTypeName().FieldPath(),
	}
}

func (s UpdateProjectRequestPathSelectorCasConditionalStateMultiRegionPolicyCriteriaForDisabledSyncResourceTypeName) WithValue(value string) *UpdateProjectRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateProjectRequest_FieldSubPathValue)
}

func (s UpdateProjectRequestPathSelectorCasConditionalStateMultiRegionPolicyCriteriaForDisabledSyncResourceTypeName) WithArrayOfValues(values []string) *UpdateProjectRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateProjectRequest_FieldSubPathArrayOfValues)
}

type UpdateProjectRequestPathSelectorCasConditionalStateMultiRegionPolicyCriteriaForDisabledSyncSourceRegion struct{}

func (UpdateProjectRequestPathSelectorCasConditionalStateMultiRegionPolicyCriteriaForDisabledSyncSourceRegion) FieldPath() *UpdateProjectRequest_FieldSubPath {
	return &UpdateProjectRequest_FieldSubPath{
		selector: UpdateProjectRequest_FieldPathSelectorCas,
		subPath:  NewUpdateProjectRequestCASFieldPathBuilder().ConditionalState().MultiRegionPolicy().CriteriaForDisabledSync().SourceRegion().FieldPath(),
	}
}

func (s UpdateProjectRequestPathSelectorCasConditionalStateMultiRegionPolicyCriteriaForDisabledSyncSourceRegion) WithValue(value string) *UpdateProjectRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateProjectRequest_FieldSubPathValue)
}

func (s UpdateProjectRequestPathSelectorCasConditionalStateMultiRegionPolicyCriteriaForDisabledSyncSourceRegion) WithArrayOfValues(values []string) *UpdateProjectRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateProjectRequest_FieldSubPathArrayOfValues)
}

type UpdateProjectRequestPathSelectorCasConditionalStateMultiRegionPolicyCriteriaForDisabledSyncDestRegion struct{}

func (UpdateProjectRequestPathSelectorCasConditionalStateMultiRegionPolicyCriteriaForDisabledSyncDestRegion) FieldPath() *UpdateProjectRequest_FieldSubPath {
	return &UpdateProjectRequest_FieldSubPath{
		selector: UpdateProjectRequest_FieldPathSelectorCas,
		subPath:  NewUpdateProjectRequestCASFieldPathBuilder().ConditionalState().MultiRegionPolicy().CriteriaForDisabledSync().DestRegion().FieldPath(),
	}
}

func (s UpdateProjectRequestPathSelectorCasConditionalStateMultiRegionPolicyCriteriaForDisabledSyncDestRegion) WithValue(value string) *UpdateProjectRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateProjectRequest_FieldSubPathValue)
}

func (s UpdateProjectRequestPathSelectorCasConditionalStateMultiRegionPolicyCriteriaForDisabledSyncDestRegion) WithArrayOfValues(values []string) *UpdateProjectRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateProjectRequest_FieldSubPathArrayOfValues)
}

type UpdateProjectRequestPathSelectorCasConditionalStateEnabledServices struct{}

func (UpdateProjectRequestPathSelectorCasConditionalStateEnabledServices) FieldPath() *UpdateProjectRequest_FieldSubPath {
	return &UpdateProjectRequest_FieldSubPath{
		selector: UpdateProjectRequest_FieldPathSelectorCas,
		subPath:  NewUpdateProjectRequestCASFieldPathBuilder().ConditionalState().EnabledServices().FieldPath(),
	}
}

func (s UpdateProjectRequestPathSelectorCasConditionalStateEnabledServices) WithValue(value []*meta_service.Reference) *UpdateProjectRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateProjectRequest_FieldSubPathValue)
}

func (s UpdateProjectRequestPathSelectorCasConditionalStateEnabledServices) WithArrayOfValues(values [][]*meta_service.Reference) *UpdateProjectRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateProjectRequest_FieldSubPathArrayOfValues)
}

func (s UpdateProjectRequestPathSelectorCasConditionalStateEnabledServices) WithItemValue(value *meta_service.Reference) *UpdateProjectRequest_FieldSubPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*UpdateProjectRequest_FieldSubPathArrayItemValue)
}

type UpdateProjectRequestPathSelectorCasFieldMask struct{}

func (UpdateProjectRequestPathSelectorCasFieldMask) FieldPath() *UpdateProjectRequest_FieldSubPath {
	return &UpdateProjectRequest_FieldSubPath{
		selector: UpdateProjectRequest_FieldPathSelectorCas,
		subPath:  NewUpdateProjectRequestCASFieldPathBuilder().FieldMask().FieldPath(),
	}
}

func (s UpdateProjectRequestPathSelectorCasFieldMask) WithValue(value *project.Project_FieldMask) *UpdateProjectRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateProjectRequest_FieldSubPathValue)
}

func (s UpdateProjectRequestPathSelectorCasFieldMask) WithArrayOfValues(values []*project.Project_FieldMask) *UpdateProjectRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateProjectRequest_FieldSubPathArrayOfValues)
}

type UpdateProjectRequestCASFieldPathBuilder struct{}

func NewUpdateProjectRequestCASFieldPathBuilder() UpdateProjectRequestCASFieldPathBuilder {
	return UpdateProjectRequestCASFieldPathBuilder{}
}
func (UpdateProjectRequestCASFieldPathBuilder) ConditionalState() UpdateProjectRequest_CASPathSelectorConditionalState {
	return UpdateProjectRequest_CASPathSelectorConditionalState{}
}
func (UpdateProjectRequestCASFieldPathBuilder) FieldMask() UpdateProjectRequest_CASPathSelectorFieldMask {
	return UpdateProjectRequest_CASPathSelectorFieldMask{}
}

type UpdateProjectRequest_CASPathSelectorConditionalState struct{}

func (UpdateProjectRequest_CASPathSelectorConditionalState) FieldPath() *UpdateProjectRequestCAS_FieldTerminalPath {
	return &UpdateProjectRequestCAS_FieldTerminalPath{selector: UpdateProjectRequestCAS_FieldPathSelectorConditionalState}
}

func (s UpdateProjectRequest_CASPathSelectorConditionalState) WithValue(value *project.Project) *UpdateProjectRequestCAS_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateProjectRequestCAS_FieldTerminalPathValue)
}

func (s UpdateProjectRequest_CASPathSelectorConditionalState) WithArrayOfValues(values []*project.Project) *UpdateProjectRequestCAS_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateProjectRequestCAS_FieldTerminalPathArrayOfValues)
}

func (UpdateProjectRequest_CASPathSelectorConditionalState) WithSubPath(subPath project.Project_FieldPath) *UpdateProjectRequestCAS_FieldSubPath {
	return &UpdateProjectRequestCAS_FieldSubPath{selector: UpdateProjectRequestCAS_FieldPathSelectorConditionalState, subPath: subPath}
}

func (s UpdateProjectRequest_CASPathSelectorConditionalState) WithSubValue(subPathValue project.Project_FieldPathValue) *UpdateProjectRequestCAS_FieldSubPathValue {
	return &UpdateProjectRequestCAS_FieldSubPathValue{UpdateProjectRequestCAS_FieldPath: s.WithSubPath(subPathValue), subPathValue: subPathValue}
}

func (s UpdateProjectRequest_CASPathSelectorConditionalState) WithSubArrayOfValues(subPathArrayOfValues project.Project_FieldPathArrayOfValues) *UpdateProjectRequestCAS_FieldSubPathArrayOfValues {
	return &UpdateProjectRequestCAS_FieldSubPathArrayOfValues{UpdateProjectRequestCAS_FieldPath: s.WithSubPath(subPathArrayOfValues), subPathArrayOfValues: subPathArrayOfValues}
}

func (s UpdateProjectRequest_CASPathSelectorConditionalState) WithSubArrayItemValue(subPathArrayItemValue project.Project_FieldPathArrayItemValue) *UpdateProjectRequestCAS_FieldSubPathArrayItemValue {
	return &UpdateProjectRequestCAS_FieldSubPathArrayItemValue{UpdateProjectRequestCAS_FieldPath: s.WithSubPath(subPathArrayItemValue), subPathItemValue: subPathArrayItemValue}
}

func (UpdateProjectRequest_CASPathSelectorConditionalState) Name() UpdateProjectRequest_CASPathSelectorConditionalStateName {
	return UpdateProjectRequest_CASPathSelectorConditionalStateName{}
}

func (UpdateProjectRequest_CASPathSelectorConditionalState) Title() UpdateProjectRequest_CASPathSelectorConditionalStateTitle {
	return UpdateProjectRequest_CASPathSelectorConditionalStateTitle{}
}

func (UpdateProjectRequest_CASPathSelectorConditionalState) ParentOrganization() UpdateProjectRequest_CASPathSelectorConditionalStateParentOrganization {
	return UpdateProjectRequest_CASPathSelectorConditionalStateParentOrganization{}
}

func (UpdateProjectRequest_CASPathSelectorConditionalState) RootOrganization() UpdateProjectRequest_CASPathSelectorConditionalStateRootOrganization {
	return UpdateProjectRequest_CASPathSelectorConditionalStateRootOrganization{}
}

func (UpdateProjectRequest_CASPathSelectorConditionalState) AncestryPath() UpdateProjectRequest_CASPathSelectorConditionalStateAncestryPath {
	return UpdateProjectRequest_CASPathSelectorConditionalStateAncestryPath{}
}

func (UpdateProjectRequest_CASPathSelectorConditionalState) Metadata() UpdateProjectRequest_CASPathSelectorConditionalStateMetadata {
	return UpdateProjectRequest_CASPathSelectorConditionalStateMetadata{}
}

func (UpdateProjectRequest_CASPathSelectorConditionalState) MultiRegionPolicy() UpdateProjectRequest_CASPathSelectorConditionalStateMultiRegionPolicy {
	return UpdateProjectRequest_CASPathSelectorConditionalStateMultiRegionPolicy{}
}

func (UpdateProjectRequest_CASPathSelectorConditionalState) EnabledServices() UpdateProjectRequest_CASPathSelectorConditionalStateEnabledServices {
	return UpdateProjectRequest_CASPathSelectorConditionalStateEnabledServices{}
}

type UpdateProjectRequest_CASPathSelectorConditionalStateName struct{}

func (UpdateProjectRequest_CASPathSelectorConditionalStateName) FieldPath() *UpdateProjectRequestCAS_FieldSubPath {
	return &UpdateProjectRequestCAS_FieldSubPath{
		selector: UpdateProjectRequestCAS_FieldPathSelectorConditionalState,
		subPath:  project.NewProjectFieldPathBuilder().Name().FieldPath(),
	}
}

func (s UpdateProjectRequest_CASPathSelectorConditionalStateName) WithValue(value *project.Name) *UpdateProjectRequestCAS_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateProjectRequestCAS_FieldSubPathValue)
}

func (s UpdateProjectRequest_CASPathSelectorConditionalStateName) WithArrayOfValues(values []*project.Name) *UpdateProjectRequestCAS_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateProjectRequestCAS_FieldSubPathArrayOfValues)
}

type UpdateProjectRequest_CASPathSelectorConditionalStateTitle struct{}

func (UpdateProjectRequest_CASPathSelectorConditionalStateTitle) FieldPath() *UpdateProjectRequestCAS_FieldSubPath {
	return &UpdateProjectRequestCAS_FieldSubPath{
		selector: UpdateProjectRequestCAS_FieldPathSelectorConditionalState,
		subPath:  project.NewProjectFieldPathBuilder().Title().FieldPath(),
	}
}

func (s UpdateProjectRequest_CASPathSelectorConditionalStateTitle) WithValue(value string) *UpdateProjectRequestCAS_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateProjectRequestCAS_FieldSubPathValue)
}

func (s UpdateProjectRequest_CASPathSelectorConditionalStateTitle) WithArrayOfValues(values []string) *UpdateProjectRequestCAS_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateProjectRequestCAS_FieldSubPathArrayOfValues)
}

type UpdateProjectRequest_CASPathSelectorConditionalStateParentOrganization struct{}

func (UpdateProjectRequest_CASPathSelectorConditionalStateParentOrganization) FieldPath() *UpdateProjectRequestCAS_FieldSubPath {
	return &UpdateProjectRequestCAS_FieldSubPath{
		selector: UpdateProjectRequestCAS_FieldPathSelectorConditionalState,
		subPath:  project.NewProjectFieldPathBuilder().ParentOrganization().FieldPath(),
	}
}

func (s UpdateProjectRequest_CASPathSelectorConditionalStateParentOrganization) WithValue(value *organization.Reference) *UpdateProjectRequestCAS_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateProjectRequestCAS_FieldSubPathValue)
}

func (s UpdateProjectRequest_CASPathSelectorConditionalStateParentOrganization) WithArrayOfValues(values []*organization.Reference) *UpdateProjectRequestCAS_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateProjectRequestCAS_FieldSubPathArrayOfValues)
}

type UpdateProjectRequest_CASPathSelectorConditionalStateRootOrganization struct{}

func (UpdateProjectRequest_CASPathSelectorConditionalStateRootOrganization) FieldPath() *UpdateProjectRequestCAS_FieldSubPath {
	return &UpdateProjectRequestCAS_FieldSubPath{
		selector: UpdateProjectRequestCAS_FieldPathSelectorConditionalState,
		subPath:  project.NewProjectFieldPathBuilder().RootOrganization().FieldPath(),
	}
}

func (s UpdateProjectRequest_CASPathSelectorConditionalStateRootOrganization) WithValue(value *organization.Reference) *UpdateProjectRequestCAS_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateProjectRequestCAS_FieldSubPathValue)
}

func (s UpdateProjectRequest_CASPathSelectorConditionalStateRootOrganization) WithArrayOfValues(values []*organization.Reference) *UpdateProjectRequestCAS_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateProjectRequestCAS_FieldSubPathArrayOfValues)
}

type UpdateProjectRequest_CASPathSelectorConditionalStateAncestryPath struct{}

func (UpdateProjectRequest_CASPathSelectorConditionalStateAncestryPath) FieldPath() *UpdateProjectRequestCAS_FieldSubPath {
	return &UpdateProjectRequestCAS_FieldSubPath{
		selector: UpdateProjectRequestCAS_FieldPathSelectorConditionalState,
		subPath:  project.NewProjectFieldPathBuilder().AncestryPath().FieldPath(),
	}
}

func (s UpdateProjectRequest_CASPathSelectorConditionalStateAncestryPath) WithValue(value []*organization.Reference) *UpdateProjectRequestCAS_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateProjectRequestCAS_FieldSubPathValue)
}

func (s UpdateProjectRequest_CASPathSelectorConditionalStateAncestryPath) WithArrayOfValues(values [][]*organization.Reference) *UpdateProjectRequestCAS_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateProjectRequestCAS_FieldSubPathArrayOfValues)
}

func (s UpdateProjectRequest_CASPathSelectorConditionalStateAncestryPath) WithItemValue(value *organization.Reference) *UpdateProjectRequestCAS_FieldSubPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*UpdateProjectRequestCAS_FieldSubPathArrayItemValue)
}

type UpdateProjectRequest_CASPathSelectorConditionalStateMetadata struct{}

func (UpdateProjectRequest_CASPathSelectorConditionalStateMetadata) FieldPath() *UpdateProjectRequestCAS_FieldSubPath {
	return &UpdateProjectRequestCAS_FieldSubPath{
		selector: UpdateProjectRequestCAS_FieldPathSelectorConditionalState,
		subPath:  project.NewProjectFieldPathBuilder().Metadata().FieldPath(),
	}
}

func (s UpdateProjectRequest_CASPathSelectorConditionalStateMetadata) WithValue(value *ntt_meta.Meta) *UpdateProjectRequestCAS_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateProjectRequestCAS_FieldSubPathValue)
}

func (s UpdateProjectRequest_CASPathSelectorConditionalStateMetadata) WithArrayOfValues(values []*ntt_meta.Meta) *UpdateProjectRequestCAS_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateProjectRequestCAS_FieldSubPathArrayOfValues)
}

func (UpdateProjectRequest_CASPathSelectorConditionalStateMetadata) CreateTime() UpdateProjectRequest_CASPathSelectorConditionalStateMetadataCreateTime {
	return UpdateProjectRequest_CASPathSelectorConditionalStateMetadataCreateTime{}
}

func (UpdateProjectRequest_CASPathSelectorConditionalStateMetadata) UpdateTime() UpdateProjectRequest_CASPathSelectorConditionalStateMetadataUpdateTime {
	return UpdateProjectRequest_CASPathSelectorConditionalStateMetadataUpdateTime{}
}

func (UpdateProjectRequest_CASPathSelectorConditionalStateMetadata) Uuid() UpdateProjectRequest_CASPathSelectorConditionalStateMetadataUuid {
	return UpdateProjectRequest_CASPathSelectorConditionalStateMetadataUuid{}
}

func (UpdateProjectRequest_CASPathSelectorConditionalStateMetadata) Tags() UpdateProjectRequest_CASPathSelectorConditionalStateMetadataTags {
	return UpdateProjectRequest_CASPathSelectorConditionalStateMetadataTags{}
}

func (UpdateProjectRequest_CASPathSelectorConditionalStateMetadata) Labels() UpdateProjectRequest_CASPathSelectorConditionalStateMetadataLabels {
	return UpdateProjectRequest_CASPathSelectorConditionalStateMetadataLabels{}
}

func (UpdateProjectRequest_CASPathSelectorConditionalStateMetadata) Annotations() UpdateProjectRequest_CASPathSelectorConditionalStateMetadataAnnotations {
	return UpdateProjectRequest_CASPathSelectorConditionalStateMetadataAnnotations{}
}

func (UpdateProjectRequest_CASPathSelectorConditionalStateMetadata) Generation() UpdateProjectRequest_CASPathSelectorConditionalStateMetadataGeneration {
	return UpdateProjectRequest_CASPathSelectorConditionalStateMetadataGeneration{}
}

func (UpdateProjectRequest_CASPathSelectorConditionalStateMetadata) ResourceVersion() UpdateProjectRequest_CASPathSelectorConditionalStateMetadataResourceVersion {
	return UpdateProjectRequest_CASPathSelectorConditionalStateMetadataResourceVersion{}
}

func (UpdateProjectRequest_CASPathSelectorConditionalStateMetadata) OwnerReferences() UpdateProjectRequest_CASPathSelectorConditionalStateMetadataOwnerReferences {
	return UpdateProjectRequest_CASPathSelectorConditionalStateMetadataOwnerReferences{}
}

func (UpdateProjectRequest_CASPathSelectorConditionalStateMetadata) Shards() UpdateProjectRequest_CASPathSelectorConditionalStateMetadataShards {
	return UpdateProjectRequest_CASPathSelectorConditionalStateMetadataShards{}
}

func (UpdateProjectRequest_CASPathSelectorConditionalStateMetadata) Syncing() UpdateProjectRequest_CASPathSelectorConditionalStateMetadataSyncing {
	return UpdateProjectRequest_CASPathSelectorConditionalStateMetadataSyncing{}
}

type UpdateProjectRequest_CASPathSelectorConditionalStateMetadataCreateTime struct{}

func (UpdateProjectRequest_CASPathSelectorConditionalStateMetadataCreateTime) FieldPath() *UpdateProjectRequestCAS_FieldSubPath {
	return &UpdateProjectRequestCAS_FieldSubPath{
		selector: UpdateProjectRequestCAS_FieldPathSelectorConditionalState,
		subPath:  project.NewProjectFieldPathBuilder().Metadata().CreateTime().FieldPath(),
	}
}

func (s UpdateProjectRequest_CASPathSelectorConditionalStateMetadataCreateTime) WithValue(value *timestamp.Timestamp) *UpdateProjectRequestCAS_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateProjectRequestCAS_FieldSubPathValue)
}

func (s UpdateProjectRequest_CASPathSelectorConditionalStateMetadataCreateTime) WithArrayOfValues(values []*timestamp.Timestamp) *UpdateProjectRequestCAS_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateProjectRequestCAS_FieldSubPathArrayOfValues)
}

type UpdateProjectRequest_CASPathSelectorConditionalStateMetadataUpdateTime struct{}

func (UpdateProjectRequest_CASPathSelectorConditionalStateMetadataUpdateTime) FieldPath() *UpdateProjectRequestCAS_FieldSubPath {
	return &UpdateProjectRequestCAS_FieldSubPath{
		selector: UpdateProjectRequestCAS_FieldPathSelectorConditionalState,
		subPath:  project.NewProjectFieldPathBuilder().Metadata().UpdateTime().FieldPath(),
	}
}

func (s UpdateProjectRequest_CASPathSelectorConditionalStateMetadataUpdateTime) WithValue(value *timestamp.Timestamp) *UpdateProjectRequestCAS_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateProjectRequestCAS_FieldSubPathValue)
}

func (s UpdateProjectRequest_CASPathSelectorConditionalStateMetadataUpdateTime) WithArrayOfValues(values []*timestamp.Timestamp) *UpdateProjectRequestCAS_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateProjectRequestCAS_FieldSubPathArrayOfValues)
}

type UpdateProjectRequest_CASPathSelectorConditionalStateMetadataUuid struct{}

func (UpdateProjectRequest_CASPathSelectorConditionalStateMetadataUuid) FieldPath() *UpdateProjectRequestCAS_FieldSubPath {
	return &UpdateProjectRequestCAS_FieldSubPath{
		selector: UpdateProjectRequestCAS_FieldPathSelectorConditionalState,
		subPath:  project.NewProjectFieldPathBuilder().Metadata().Uuid().FieldPath(),
	}
}

func (s UpdateProjectRequest_CASPathSelectorConditionalStateMetadataUuid) WithValue(value string) *UpdateProjectRequestCAS_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateProjectRequestCAS_FieldSubPathValue)
}

func (s UpdateProjectRequest_CASPathSelectorConditionalStateMetadataUuid) WithArrayOfValues(values []string) *UpdateProjectRequestCAS_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateProjectRequestCAS_FieldSubPathArrayOfValues)
}

type UpdateProjectRequest_CASPathSelectorConditionalStateMetadataTags struct{}

func (UpdateProjectRequest_CASPathSelectorConditionalStateMetadataTags) FieldPath() *UpdateProjectRequestCAS_FieldSubPath {
	return &UpdateProjectRequestCAS_FieldSubPath{
		selector: UpdateProjectRequestCAS_FieldPathSelectorConditionalState,
		subPath:  project.NewProjectFieldPathBuilder().Metadata().Tags().FieldPath(),
	}
}

func (s UpdateProjectRequest_CASPathSelectorConditionalStateMetadataTags) WithValue(value []string) *UpdateProjectRequestCAS_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateProjectRequestCAS_FieldSubPathValue)
}

func (s UpdateProjectRequest_CASPathSelectorConditionalStateMetadataTags) WithArrayOfValues(values [][]string) *UpdateProjectRequestCAS_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateProjectRequestCAS_FieldSubPathArrayOfValues)
}

func (s UpdateProjectRequest_CASPathSelectorConditionalStateMetadataTags) WithItemValue(value string) *UpdateProjectRequestCAS_FieldSubPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*UpdateProjectRequestCAS_FieldSubPathArrayItemValue)
}

type UpdateProjectRequest_CASPathSelectorConditionalStateMetadataLabels struct{}

func (UpdateProjectRequest_CASPathSelectorConditionalStateMetadataLabels) FieldPath() *UpdateProjectRequestCAS_FieldSubPath {
	return &UpdateProjectRequestCAS_FieldSubPath{
		selector: UpdateProjectRequestCAS_FieldPathSelectorConditionalState,
		subPath:  project.NewProjectFieldPathBuilder().Metadata().Labels().FieldPath(),
	}
}

func (s UpdateProjectRequest_CASPathSelectorConditionalStateMetadataLabels) WithValue(value map[string]string) *UpdateProjectRequestCAS_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateProjectRequestCAS_FieldSubPathValue)
}

func (s UpdateProjectRequest_CASPathSelectorConditionalStateMetadataLabels) WithArrayOfValues(values []map[string]string) *UpdateProjectRequestCAS_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateProjectRequestCAS_FieldSubPathArrayOfValues)
}

func (UpdateProjectRequest_CASPathSelectorConditionalStateMetadataLabels) WithKey(key string) UpdateProjectRequest_CASMapPathSelectorConditionalStateMetadataLabels {
	return UpdateProjectRequest_CASMapPathSelectorConditionalStateMetadataLabels{key: key}
}

type UpdateProjectRequest_CASMapPathSelectorConditionalStateMetadataLabels struct {
	key string
}

func (s UpdateProjectRequest_CASMapPathSelectorConditionalStateMetadataLabels) FieldPath() *UpdateProjectRequestCAS_FieldSubPath {
	return &UpdateProjectRequestCAS_FieldSubPath{
		selector: UpdateProjectRequestCAS_FieldPathSelectorConditionalState,
		subPath:  project.NewProjectFieldPathBuilder().Metadata().Labels().WithKey(s.key).FieldPath(),
	}
}

func (s UpdateProjectRequest_CASMapPathSelectorConditionalStateMetadataLabels) WithValue(value string) *UpdateProjectRequestCAS_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateProjectRequestCAS_FieldSubPathValue)
}

func (s UpdateProjectRequest_CASMapPathSelectorConditionalStateMetadataLabels) WithArrayOfValues(values []string) *UpdateProjectRequestCAS_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateProjectRequestCAS_FieldSubPathArrayOfValues)
}

type UpdateProjectRequest_CASPathSelectorConditionalStateMetadataAnnotations struct{}

func (UpdateProjectRequest_CASPathSelectorConditionalStateMetadataAnnotations) FieldPath() *UpdateProjectRequestCAS_FieldSubPath {
	return &UpdateProjectRequestCAS_FieldSubPath{
		selector: UpdateProjectRequestCAS_FieldPathSelectorConditionalState,
		subPath:  project.NewProjectFieldPathBuilder().Metadata().Annotations().FieldPath(),
	}
}

func (s UpdateProjectRequest_CASPathSelectorConditionalStateMetadataAnnotations) WithValue(value map[string]string) *UpdateProjectRequestCAS_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateProjectRequestCAS_FieldSubPathValue)
}

func (s UpdateProjectRequest_CASPathSelectorConditionalStateMetadataAnnotations) WithArrayOfValues(values []map[string]string) *UpdateProjectRequestCAS_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateProjectRequestCAS_FieldSubPathArrayOfValues)
}

func (UpdateProjectRequest_CASPathSelectorConditionalStateMetadataAnnotations) WithKey(key string) UpdateProjectRequest_CASMapPathSelectorConditionalStateMetadataAnnotations {
	return UpdateProjectRequest_CASMapPathSelectorConditionalStateMetadataAnnotations{key: key}
}

type UpdateProjectRequest_CASMapPathSelectorConditionalStateMetadataAnnotations struct {
	key string
}

func (s UpdateProjectRequest_CASMapPathSelectorConditionalStateMetadataAnnotations) FieldPath() *UpdateProjectRequestCAS_FieldSubPath {
	return &UpdateProjectRequestCAS_FieldSubPath{
		selector: UpdateProjectRequestCAS_FieldPathSelectorConditionalState,
		subPath:  project.NewProjectFieldPathBuilder().Metadata().Annotations().WithKey(s.key).FieldPath(),
	}
}

func (s UpdateProjectRequest_CASMapPathSelectorConditionalStateMetadataAnnotations) WithValue(value string) *UpdateProjectRequestCAS_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateProjectRequestCAS_FieldSubPathValue)
}

func (s UpdateProjectRequest_CASMapPathSelectorConditionalStateMetadataAnnotations) WithArrayOfValues(values []string) *UpdateProjectRequestCAS_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateProjectRequestCAS_FieldSubPathArrayOfValues)
}

type UpdateProjectRequest_CASPathSelectorConditionalStateMetadataGeneration struct{}

func (UpdateProjectRequest_CASPathSelectorConditionalStateMetadataGeneration) FieldPath() *UpdateProjectRequestCAS_FieldSubPath {
	return &UpdateProjectRequestCAS_FieldSubPath{
		selector: UpdateProjectRequestCAS_FieldPathSelectorConditionalState,
		subPath:  project.NewProjectFieldPathBuilder().Metadata().Generation().FieldPath(),
	}
}

func (s UpdateProjectRequest_CASPathSelectorConditionalStateMetadataGeneration) WithValue(value int64) *UpdateProjectRequestCAS_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateProjectRequestCAS_FieldSubPathValue)
}

func (s UpdateProjectRequest_CASPathSelectorConditionalStateMetadataGeneration) WithArrayOfValues(values []int64) *UpdateProjectRequestCAS_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateProjectRequestCAS_FieldSubPathArrayOfValues)
}

type UpdateProjectRequest_CASPathSelectorConditionalStateMetadataResourceVersion struct{}

func (UpdateProjectRequest_CASPathSelectorConditionalStateMetadataResourceVersion) FieldPath() *UpdateProjectRequestCAS_FieldSubPath {
	return &UpdateProjectRequestCAS_FieldSubPath{
		selector: UpdateProjectRequestCAS_FieldPathSelectorConditionalState,
		subPath:  project.NewProjectFieldPathBuilder().Metadata().ResourceVersion().FieldPath(),
	}
}

func (s UpdateProjectRequest_CASPathSelectorConditionalStateMetadataResourceVersion) WithValue(value string) *UpdateProjectRequestCAS_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateProjectRequestCAS_FieldSubPathValue)
}

func (s UpdateProjectRequest_CASPathSelectorConditionalStateMetadataResourceVersion) WithArrayOfValues(values []string) *UpdateProjectRequestCAS_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateProjectRequestCAS_FieldSubPathArrayOfValues)
}

type UpdateProjectRequest_CASPathSelectorConditionalStateMetadataOwnerReferences struct{}

func (UpdateProjectRequest_CASPathSelectorConditionalStateMetadataOwnerReferences) FieldPath() *UpdateProjectRequestCAS_FieldSubPath {
	return &UpdateProjectRequestCAS_FieldSubPath{
		selector: UpdateProjectRequestCAS_FieldPathSelectorConditionalState,
		subPath:  project.NewProjectFieldPathBuilder().Metadata().OwnerReferences().FieldPath(),
	}
}

func (s UpdateProjectRequest_CASPathSelectorConditionalStateMetadataOwnerReferences) WithValue(value []*ntt_meta.OwnerReference) *UpdateProjectRequestCAS_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateProjectRequestCAS_FieldSubPathValue)
}

func (s UpdateProjectRequest_CASPathSelectorConditionalStateMetadataOwnerReferences) WithArrayOfValues(values [][]*ntt_meta.OwnerReference) *UpdateProjectRequestCAS_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateProjectRequestCAS_FieldSubPathArrayOfValues)
}

func (s UpdateProjectRequest_CASPathSelectorConditionalStateMetadataOwnerReferences) WithItemValue(value *ntt_meta.OwnerReference) *UpdateProjectRequestCAS_FieldSubPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*UpdateProjectRequestCAS_FieldSubPathArrayItemValue)
}

func (UpdateProjectRequest_CASPathSelectorConditionalStateMetadataOwnerReferences) ApiVersion() UpdateProjectRequest_CASPathSelectorConditionalStateMetadataOwnerReferencesApiVersion {
	return UpdateProjectRequest_CASPathSelectorConditionalStateMetadataOwnerReferencesApiVersion{}
}

func (UpdateProjectRequest_CASPathSelectorConditionalStateMetadataOwnerReferences) Kind() UpdateProjectRequest_CASPathSelectorConditionalStateMetadataOwnerReferencesKind {
	return UpdateProjectRequest_CASPathSelectorConditionalStateMetadataOwnerReferencesKind{}
}

func (UpdateProjectRequest_CASPathSelectorConditionalStateMetadataOwnerReferences) Name() UpdateProjectRequest_CASPathSelectorConditionalStateMetadataOwnerReferencesName {
	return UpdateProjectRequest_CASPathSelectorConditionalStateMetadataOwnerReferencesName{}
}

func (UpdateProjectRequest_CASPathSelectorConditionalStateMetadataOwnerReferences) Uid() UpdateProjectRequest_CASPathSelectorConditionalStateMetadataOwnerReferencesUid {
	return UpdateProjectRequest_CASPathSelectorConditionalStateMetadataOwnerReferencesUid{}
}

func (UpdateProjectRequest_CASPathSelectorConditionalStateMetadataOwnerReferences) Controller() UpdateProjectRequest_CASPathSelectorConditionalStateMetadataOwnerReferencesController {
	return UpdateProjectRequest_CASPathSelectorConditionalStateMetadataOwnerReferencesController{}
}

func (UpdateProjectRequest_CASPathSelectorConditionalStateMetadataOwnerReferences) BlockOwnerDeletion() UpdateProjectRequest_CASPathSelectorConditionalStateMetadataOwnerReferencesBlockOwnerDeletion {
	return UpdateProjectRequest_CASPathSelectorConditionalStateMetadataOwnerReferencesBlockOwnerDeletion{}
}

type UpdateProjectRequest_CASPathSelectorConditionalStateMetadataOwnerReferencesApiVersion struct{}

func (UpdateProjectRequest_CASPathSelectorConditionalStateMetadataOwnerReferencesApiVersion) FieldPath() *UpdateProjectRequestCAS_FieldSubPath {
	return &UpdateProjectRequestCAS_FieldSubPath{
		selector: UpdateProjectRequestCAS_FieldPathSelectorConditionalState,
		subPath:  project.NewProjectFieldPathBuilder().Metadata().OwnerReferences().ApiVersion().FieldPath(),
	}
}

func (s UpdateProjectRequest_CASPathSelectorConditionalStateMetadataOwnerReferencesApiVersion) WithValue(value string) *UpdateProjectRequestCAS_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateProjectRequestCAS_FieldSubPathValue)
}

func (s UpdateProjectRequest_CASPathSelectorConditionalStateMetadataOwnerReferencesApiVersion) WithArrayOfValues(values []string) *UpdateProjectRequestCAS_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateProjectRequestCAS_FieldSubPathArrayOfValues)
}

type UpdateProjectRequest_CASPathSelectorConditionalStateMetadataOwnerReferencesKind struct{}

func (UpdateProjectRequest_CASPathSelectorConditionalStateMetadataOwnerReferencesKind) FieldPath() *UpdateProjectRequestCAS_FieldSubPath {
	return &UpdateProjectRequestCAS_FieldSubPath{
		selector: UpdateProjectRequestCAS_FieldPathSelectorConditionalState,
		subPath:  project.NewProjectFieldPathBuilder().Metadata().OwnerReferences().Kind().FieldPath(),
	}
}

func (s UpdateProjectRequest_CASPathSelectorConditionalStateMetadataOwnerReferencesKind) WithValue(value string) *UpdateProjectRequestCAS_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateProjectRequestCAS_FieldSubPathValue)
}

func (s UpdateProjectRequest_CASPathSelectorConditionalStateMetadataOwnerReferencesKind) WithArrayOfValues(values []string) *UpdateProjectRequestCAS_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateProjectRequestCAS_FieldSubPathArrayOfValues)
}

type UpdateProjectRequest_CASPathSelectorConditionalStateMetadataOwnerReferencesName struct{}

func (UpdateProjectRequest_CASPathSelectorConditionalStateMetadataOwnerReferencesName) FieldPath() *UpdateProjectRequestCAS_FieldSubPath {
	return &UpdateProjectRequestCAS_FieldSubPath{
		selector: UpdateProjectRequestCAS_FieldPathSelectorConditionalState,
		subPath:  project.NewProjectFieldPathBuilder().Metadata().OwnerReferences().Name().FieldPath(),
	}
}

func (s UpdateProjectRequest_CASPathSelectorConditionalStateMetadataOwnerReferencesName) WithValue(value string) *UpdateProjectRequestCAS_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateProjectRequestCAS_FieldSubPathValue)
}

func (s UpdateProjectRequest_CASPathSelectorConditionalStateMetadataOwnerReferencesName) WithArrayOfValues(values []string) *UpdateProjectRequestCAS_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateProjectRequestCAS_FieldSubPathArrayOfValues)
}

type UpdateProjectRequest_CASPathSelectorConditionalStateMetadataOwnerReferencesUid struct{}

func (UpdateProjectRequest_CASPathSelectorConditionalStateMetadataOwnerReferencesUid) FieldPath() *UpdateProjectRequestCAS_FieldSubPath {
	return &UpdateProjectRequestCAS_FieldSubPath{
		selector: UpdateProjectRequestCAS_FieldPathSelectorConditionalState,
		subPath:  project.NewProjectFieldPathBuilder().Metadata().OwnerReferences().Uid().FieldPath(),
	}
}

func (s UpdateProjectRequest_CASPathSelectorConditionalStateMetadataOwnerReferencesUid) WithValue(value string) *UpdateProjectRequestCAS_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateProjectRequestCAS_FieldSubPathValue)
}

func (s UpdateProjectRequest_CASPathSelectorConditionalStateMetadataOwnerReferencesUid) WithArrayOfValues(values []string) *UpdateProjectRequestCAS_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateProjectRequestCAS_FieldSubPathArrayOfValues)
}

type UpdateProjectRequest_CASPathSelectorConditionalStateMetadataOwnerReferencesController struct{}

func (UpdateProjectRequest_CASPathSelectorConditionalStateMetadataOwnerReferencesController) FieldPath() *UpdateProjectRequestCAS_FieldSubPath {
	return &UpdateProjectRequestCAS_FieldSubPath{
		selector: UpdateProjectRequestCAS_FieldPathSelectorConditionalState,
		subPath:  project.NewProjectFieldPathBuilder().Metadata().OwnerReferences().Controller().FieldPath(),
	}
}

func (s UpdateProjectRequest_CASPathSelectorConditionalStateMetadataOwnerReferencesController) WithValue(value bool) *UpdateProjectRequestCAS_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateProjectRequestCAS_FieldSubPathValue)
}

func (s UpdateProjectRequest_CASPathSelectorConditionalStateMetadataOwnerReferencesController) WithArrayOfValues(values []bool) *UpdateProjectRequestCAS_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateProjectRequestCAS_FieldSubPathArrayOfValues)
}

type UpdateProjectRequest_CASPathSelectorConditionalStateMetadataOwnerReferencesBlockOwnerDeletion struct{}

func (UpdateProjectRequest_CASPathSelectorConditionalStateMetadataOwnerReferencesBlockOwnerDeletion) FieldPath() *UpdateProjectRequestCAS_FieldSubPath {
	return &UpdateProjectRequestCAS_FieldSubPath{
		selector: UpdateProjectRequestCAS_FieldPathSelectorConditionalState,
		subPath:  project.NewProjectFieldPathBuilder().Metadata().OwnerReferences().BlockOwnerDeletion().FieldPath(),
	}
}

func (s UpdateProjectRequest_CASPathSelectorConditionalStateMetadataOwnerReferencesBlockOwnerDeletion) WithValue(value bool) *UpdateProjectRequestCAS_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateProjectRequestCAS_FieldSubPathValue)
}

func (s UpdateProjectRequest_CASPathSelectorConditionalStateMetadataOwnerReferencesBlockOwnerDeletion) WithArrayOfValues(values []bool) *UpdateProjectRequestCAS_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateProjectRequestCAS_FieldSubPathArrayOfValues)
}

type UpdateProjectRequest_CASPathSelectorConditionalStateMetadataShards struct{}

func (UpdateProjectRequest_CASPathSelectorConditionalStateMetadataShards) FieldPath() *UpdateProjectRequestCAS_FieldSubPath {
	return &UpdateProjectRequestCAS_FieldSubPath{
		selector: UpdateProjectRequestCAS_FieldPathSelectorConditionalState,
		subPath:  project.NewProjectFieldPathBuilder().Metadata().Shards().FieldPath(),
	}
}

func (s UpdateProjectRequest_CASPathSelectorConditionalStateMetadataShards) WithValue(value map[string]int64) *UpdateProjectRequestCAS_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateProjectRequestCAS_FieldSubPathValue)
}

func (s UpdateProjectRequest_CASPathSelectorConditionalStateMetadataShards) WithArrayOfValues(values []map[string]int64) *UpdateProjectRequestCAS_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateProjectRequestCAS_FieldSubPathArrayOfValues)
}

func (UpdateProjectRequest_CASPathSelectorConditionalStateMetadataShards) WithKey(key string) UpdateProjectRequest_CASMapPathSelectorConditionalStateMetadataShards {
	return UpdateProjectRequest_CASMapPathSelectorConditionalStateMetadataShards{key: key}
}

type UpdateProjectRequest_CASMapPathSelectorConditionalStateMetadataShards struct {
	key string
}

func (s UpdateProjectRequest_CASMapPathSelectorConditionalStateMetadataShards) FieldPath() *UpdateProjectRequestCAS_FieldSubPath {
	return &UpdateProjectRequestCAS_FieldSubPath{
		selector: UpdateProjectRequestCAS_FieldPathSelectorConditionalState,
		subPath:  project.NewProjectFieldPathBuilder().Metadata().Shards().WithKey(s.key).FieldPath(),
	}
}

func (s UpdateProjectRequest_CASMapPathSelectorConditionalStateMetadataShards) WithValue(value int64) *UpdateProjectRequestCAS_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateProjectRequestCAS_FieldSubPathValue)
}

func (s UpdateProjectRequest_CASMapPathSelectorConditionalStateMetadataShards) WithArrayOfValues(values []int64) *UpdateProjectRequestCAS_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateProjectRequestCAS_FieldSubPathArrayOfValues)
}

type UpdateProjectRequest_CASPathSelectorConditionalStateMetadataSyncing struct{}

func (UpdateProjectRequest_CASPathSelectorConditionalStateMetadataSyncing) FieldPath() *UpdateProjectRequestCAS_FieldSubPath {
	return &UpdateProjectRequestCAS_FieldSubPath{
		selector: UpdateProjectRequestCAS_FieldPathSelectorConditionalState,
		subPath:  project.NewProjectFieldPathBuilder().Metadata().Syncing().FieldPath(),
	}
}

func (s UpdateProjectRequest_CASPathSelectorConditionalStateMetadataSyncing) WithValue(value *ntt_meta.SyncingMeta) *UpdateProjectRequestCAS_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateProjectRequestCAS_FieldSubPathValue)
}

func (s UpdateProjectRequest_CASPathSelectorConditionalStateMetadataSyncing) WithArrayOfValues(values []*ntt_meta.SyncingMeta) *UpdateProjectRequestCAS_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateProjectRequestCAS_FieldSubPathArrayOfValues)
}

func (UpdateProjectRequest_CASPathSelectorConditionalStateMetadataSyncing) OwningRegion() UpdateProjectRequest_CASPathSelectorConditionalStateMetadataSyncingOwningRegion {
	return UpdateProjectRequest_CASPathSelectorConditionalStateMetadataSyncingOwningRegion{}
}

func (UpdateProjectRequest_CASPathSelectorConditionalStateMetadataSyncing) Regions() UpdateProjectRequest_CASPathSelectorConditionalStateMetadataSyncingRegions {
	return UpdateProjectRequest_CASPathSelectorConditionalStateMetadataSyncingRegions{}
}

type UpdateProjectRequest_CASPathSelectorConditionalStateMetadataSyncingOwningRegion struct{}

func (UpdateProjectRequest_CASPathSelectorConditionalStateMetadataSyncingOwningRegion) FieldPath() *UpdateProjectRequestCAS_FieldSubPath {
	return &UpdateProjectRequestCAS_FieldSubPath{
		selector: UpdateProjectRequestCAS_FieldPathSelectorConditionalState,
		subPath:  project.NewProjectFieldPathBuilder().Metadata().Syncing().OwningRegion().FieldPath(),
	}
}

func (s UpdateProjectRequest_CASPathSelectorConditionalStateMetadataSyncingOwningRegion) WithValue(value string) *UpdateProjectRequestCAS_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateProjectRequestCAS_FieldSubPathValue)
}

func (s UpdateProjectRequest_CASPathSelectorConditionalStateMetadataSyncingOwningRegion) WithArrayOfValues(values []string) *UpdateProjectRequestCAS_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateProjectRequestCAS_FieldSubPathArrayOfValues)
}

type UpdateProjectRequest_CASPathSelectorConditionalStateMetadataSyncingRegions struct{}

func (UpdateProjectRequest_CASPathSelectorConditionalStateMetadataSyncingRegions) FieldPath() *UpdateProjectRequestCAS_FieldSubPath {
	return &UpdateProjectRequestCAS_FieldSubPath{
		selector: UpdateProjectRequestCAS_FieldPathSelectorConditionalState,
		subPath:  project.NewProjectFieldPathBuilder().Metadata().Syncing().Regions().FieldPath(),
	}
}

func (s UpdateProjectRequest_CASPathSelectorConditionalStateMetadataSyncingRegions) WithValue(value []string) *UpdateProjectRequestCAS_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateProjectRequestCAS_FieldSubPathValue)
}

func (s UpdateProjectRequest_CASPathSelectorConditionalStateMetadataSyncingRegions) WithArrayOfValues(values [][]string) *UpdateProjectRequestCAS_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateProjectRequestCAS_FieldSubPathArrayOfValues)
}

func (s UpdateProjectRequest_CASPathSelectorConditionalStateMetadataSyncingRegions) WithItemValue(value string) *UpdateProjectRequestCAS_FieldSubPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*UpdateProjectRequestCAS_FieldSubPathArrayItemValue)
}

type UpdateProjectRequest_CASPathSelectorConditionalStateMultiRegionPolicy struct{}

func (UpdateProjectRequest_CASPathSelectorConditionalStateMultiRegionPolicy) FieldPath() *UpdateProjectRequestCAS_FieldSubPath {
	return &UpdateProjectRequestCAS_FieldSubPath{
		selector: UpdateProjectRequestCAS_FieldPathSelectorConditionalState,
		subPath:  project.NewProjectFieldPathBuilder().MultiRegionPolicy().FieldPath(),
	}
}

func (s UpdateProjectRequest_CASPathSelectorConditionalStateMultiRegionPolicy) WithValue(value *multi_region_policy.MultiRegionPolicy) *UpdateProjectRequestCAS_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateProjectRequestCAS_FieldSubPathValue)
}

func (s UpdateProjectRequest_CASPathSelectorConditionalStateMultiRegionPolicy) WithArrayOfValues(values []*multi_region_policy.MultiRegionPolicy) *UpdateProjectRequestCAS_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateProjectRequestCAS_FieldSubPathArrayOfValues)
}

func (UpdateProjectRequest_CASPathSelectorConditionalStateMultiRegionPolicy) EnabledRegions() UpdateProjectRequest_CASPathSelectorConditionalStateMultiRegionPolicyEnabledRegions {
	return UpdateProjectRequest_CASPathSelectorConditionalStateMultiRegionPolicyEnabledRegions{}
}

func (UpdateProjectRequest_CASPathSelectorConditionalStateMultiRegionPolicy) DefaultControlRegion() UpdateProjectRequest_CASPathSelectorConditionalStateMultiRegionPolicyDefaultControlRegion {
	return UpdateProjectRequest_CASPathSelectorConditionalStateMultiRegionPolicyDefaultControlRegion{}
}

func (UpdateProjectRequest_CASPathSelectorConditionalStateMultiRegionPolicy) CriteriaForDisabledSync() UpdateProjectRequest_CASPathSelectorConditionalStateMultiRegionPolicyCriteriaForDisabledSync {
	return UpdateProjectRequest_CASPathSelectorConditionalStateMultiRegionPolicyCriteriaForDisabledSync{}
}

type UpdateProjectRequest_CASPathSelectorConditionalStateMultiRegionPolicyEnabledRegions struct{}

func (UpdateProjectRequest_CASPathSelectorConditionalStateMultiRegionPolicyEnabledRegions) FieldPath() *UpdateProjectRequestCAS_FieldSubPath {
	return &UpdateProjectRequestCAS_FieldSubPath{
		selector: UpdateProjectRequestCAS_FieldPathSelectorConditionalState,
		subPath:  project.NewProjectFieldPathBuilder().MultiRegionPolicy().EnabledRegions().FieldPath(),
	}
}

func (s UpdateProjectRequest_CASPathSelectorConditionalStateMultiRegionPolicyEnabledRegions) WithValue(value []string) *UpdateProjectRequestCAS_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateProjectRequestCAS_FieldSubPathValue)
}

func (s UpdateProjectRequest_CASPathSelectorConditionalStateMultiRegionPolicyEnabledRegions) WithArrayOfValues(values [][]string) *UpdateProjectRequestCAS_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateProjectRequestCAS_FieldSubPathArrayOfValues)
}

func (s UpdateProjectRequest_CASPathSelectorConditionalStateMultiRegionPolicyEnabledRegions) WithItemValue(value string) *UpdateProjectRequestCAS_FieldSubPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*UpdateProjectRequestCAS_FieldSubPathArrayItemValue)
}

type UpdateProjectRequest_CASPathSelectorConditionalStateMultiRegionPolicyDefaultControlRegion struct{}

func (UpdateProjectRequest_CASPathSelectorConditionalStateMultiRegionPolicyDefaultControlRegion) FieldPath() *UpdateProjectRequestCAS_FieldSubPath {
	return &UpdateProjectRequestCAS_FieldSubPath{
		selector: UpdateProjectRequestCAS_FieldPathSelectorConditionalState,
		subPath:  project.NewProjectFieldPathBuilder().MultiRegionPolicy().DefaultControlRegion().FieldPath(),
	}
}

func (s UpdateProjectRequest_CASPathSelectorConditionalStateMultiRegionPolicyDefaultControlRegion) WithValue(value string) *UpdateProjectRequestCAS_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateProjectRequestCAS_FieldSubPathValue)
}

func (s UpdateProjectRequest_CASPathSelectorConditionalStateMultiRegionPolicyDefaultControlRegion) WithArrayOfValues(values []string) *UpdateProjectRequestCAS_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateProjectRequestCAS_FieldSubPathArrayOfValues)
}

type UpdateProjectRequest_CASPathSelectorConditionalStateMultiRegionPolicyCriteriaForDisabledSync struct{}

func (UpdateProjectRequest_CASPathSelectorConditionalStateMultiRegionPolicyCriteriaForDisabledSync) FieldPath() *UpdateProjectRequestCAS_FieldSubPath {
	return &UpdateProjectRequestCAS_FieldSubPath{
		selector: UpdateProjectRequestCAS_FieldPathSelectorConditionalState,
		subPath:  project.NewProjectFieldPathBuilder().MultiRegionPolicy().CriteriaForDisabledSync().FieldPath(),
	}
}

func (s UpdateProjectRequest_CASPathSelectorConditionalStateMultiRegionPolicyCriteriaForDisabledSync) WithValue(value []*multi_region_policy.MultiRegionPolicy_CriteriaForDisabledSync) *UpdateProjectRequestCAS_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateProjectRequestCAS_FieldSubPathValue)
}

func (s UpdateProjectRequest_CASPathSelectorConditionalStateMultiRegionPolicyCriteriaForDisabledSync) WithArrayOfValues(values [][]*multi_region_policy.MultiRegionPolicy_CriteriaForDisabledSync) *UpdateProjectRequestCAS_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateProjectRequestCAS_FieldSubPathArrayOfValues)
}

func (s UpdateProjectRequest_CASPathSelectorConditionalStateMultiRegionPolicyCriteriaForDisabledSync) WithItemValue(value *multi_region_policy.MultiRegionPolicy_CriteriaForDisabledSync) *UpdateProjectRequestCAS_FieldSubPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*UpdateProjectRequestCAS_FieldSubPathArrayItemValue)
}

func (UpdateProjectRequest_CASPathSelectorConditionalStateMultiRegionPolicyCriteriaForDisabledSync) ResourceTypeName() UpdateProjectRequest_CASPathSelectorConditionalStateMultiRegionPolicyCriteriaForDisabledSyncResourceTypeName {
	return UpdateProjectRequest_CASPathSelectorConditionalStateMultiRegionPolicyCriteriaForDisabledSyncResourceTypeName{}
}

func (UpdateProjectRequest_CASPathSelectorConditionalStateMultiRegionPolicyCriteriaForDisabledSync) SourceRegion() UpdateProjectRequest_CASPathSelectorConditionalStateMultiRegionPolicyCriteriaForDisabledSyncSourceRegion {
	return UpdateProjectRequest_CASPathSelectorConditionalStateMultiRegionPolicyCriteriaForDisabledSyncSourceRegion{}
}

func (UpdateProjectRequest_CASPathSelectorConditionalStateMultiRegionPolicyCriteriaForDisabledSync) DestRegion() UpdateProjectRequest_CASPathSelectorConditionalStateMultiRegionPolicyCriteriaForDisabledSyncDestRegion {
	return UpdateProjectRequest_CASPathSelectorConditionalStateMultiRegionPolicyCriteriaForDisabledSyncDestRegion{}
}

type UpdateProjectRequest_CASPathSelectorConditionalStateMultiRegionPolicyCriteriaForDisabledSyncResourceTypeName struct{}

func (UpdateProjectRequest_CASPathSelectorConditionalStateMultiRegionPolicyCriteriaForDisabledSyncResourceTypeName) FieldPath() *UpdateProjectRequestCAS_FieldSubPath {
	return &UpdateProjectRequestCAS_FieldSubPath{
		selector: UpdateProjectRequestCAS_FieldPathSelectorConditionalState,
		subPath:  project.NewProjectFieldPathBuilder().MultiRegionPolicy().CriteriaForDisabledSync().ResourceTypeName().FieldPath(),
	}
}

func (s UpdateProjectRequest_CASPathSelectorConditionalStateMultiRegionPolicyCriteriaForDisabledSyncResourceTypeName) WithValue(value string) *UpdateProjectRequestCAS_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateProjectRequestCAS_FieldSubPathValue)
}

func (s UpdateProjectRequest_CASPathSelectorConditionalStateMultiRegionPolicyCriteriaForDisabledSyncResourceTypeName) WithArrayOfValues(values []string) *UpdateProjectRequestCAS_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateProjectRequestCAS_FieldSubPathArrayOfValues)
}

type UpdateProjectRequest_CASPathSelectorConditionalStateMultiRegionPolicyCriteriaForDisabledSyncSourceRegion struct{}

func (UpdateProjectRequest_CASPathSelectorConditionalStateMultiRegionPolicyCriteriaForDisabledSyncSourceRegion) FieldPath() *UpdateProjectRequestCAS_FieldSubPath {
	return &UpdateProjectRequestCAS_FieldSubPath{
		selector: UpdateProjectRequestCAS_FieldPathSelectorConditionalState,
		subPath:  project.NewProjectFieldPathBuilder().MultiRegionPolicy().CriteriaForDisabledSync().SourceRegion().FieldPath(),
	}
}

func (s UpdateProjectRequest_CASPathSelectorConditionalStateMultiRegionPolicyCriteriaForDisabledSyncSourceRegion) WithValue(value string) *UpdateProjectRequestCAS_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateProjectRequestCAS_FieldSubPathValue)
}

func (s UpdateProjectRequest_CASPathSelectorConditionalStateMultiRegionPolicyCriteriaForDisabledSyncSourceRegion) WithArrayOfValues(values []string) *UpdateProjectRequestCAS_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateProjectRequestCAS_FieldSubPathArrayOfValues)
}

type UpdateProjectRequest_CASPathSelectorConditionalStateMultiRegionPolicyCriteriaForDisabledSyncDestRegion struct{}

func (UpdateProjectRequest_CASPathSelectorConditionalStateMultiRegionPolicyCriteriaForDisabledSyncDestRegion) FieldPath() *UpdateProjectRequestCAS_FieldSubPath {
	return &UpdateProjectRequestCAS_FieldSubPath{
		selector: UpdateProjectRequestCAS_FieldPathSelectorConditionalState,
		subPath:  project.NewProjectFieldPathBuilder().MultiRegionPolicy().CriteriaForDisabledSync().DestRegion().FieldPath(),
	}
}

func (s UpdateProjectRequest_CASPathSelectorConditionalStateMultiRegionPolicyCriteriaForDisabledSyncDestRegion) WithValue(value string) *UpdateProjectRequestCAS_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateProjectRequestCAS_FieldSubPathValue)
}

func (s UpdateProjectRequest_CASPathSelectorConditionalStateMultiRegionPolicyCriteriaForDisabledSyncDestRegion) WithArrayOfValues(values []string) *UpdateProjectRequestCAS_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateProjectRequestCAS_FieldSubPathArrayOfValues)
}

type UpdateProjectRequest_CASPathSelectorConditionalStateEnabledServices struct{}

func (UpdateProjectRequest_CASPathSelectorConditionalStateEnabledServices) FieldPath() *UpdateProjectRequestCAS_FieldSubPath {
	return &UpdateProjectRequestCAS_FieldSubPath{
		selector: UpdateProjectRequestCAS_FieldPathSelectorConditionalState,
		subPath:  project.NewProjectFieldPathBuilder().EnabledServices().FieldPath(),
	}
}

func (s UpdateProjectRequest_CASPathSelectorConditionalStateEnabledServices) WithValue(value []*meta_service.Reference) *UpdateProjectRequestCAS_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateProjectRequestCAS_FieldSubPathValue)
}

func (s UpdateProjectRequest_CASPathSelectorConditionalStateEnabledServices) WithArrayOfValues(values [][]*meta_service.Reference) *UpdateProjectRequestCAS_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateProjectRequestCAS_FieldSubPathArrayOfValues)
}

func (s UpdateProjectRequest_CASPathSelectorConditionalStateEnabledServices) WithItemValue(value *meta_service.Reference) *UpdateProjectRequestCAS_FieldSubPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*UpdateProjectRequestCAS_FieldSubPathArrayItemValue)
}

type UpdateProjectRequest_CASPathSelectorFieldMask struct{}

func (UpdateProjectRequest_CASPathSelectorFieldMask) FieldPath() *UpdateProjectRequestCAS_FieldTerminalPath {
	return &UpdateProjectRequestCAS_FieldTerminalPath{selector: UpdateProjectRequestCAS_FieldPathSelectorFieldMask}
}

func (s UpdateProjectRequest_CASPathSelectorFieldMask) WithValue(value *project.Project_FieldMask) *UpdateProjectRequestCAS_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateProjectRequestCAS_FieldTerminalPathValue)
}

func (s UpdateProjectRequest_CASPathSelectorFieldMask) WithArrayOfValues(values []*project.Project_FieldMask) *UpdateProjectRequestCAS_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateProjectRequestCAS_FieldTerminalPathArrayOfValues)
}

type DeleteProjectRequestFieldPathBuilder struct{}

func NewDeleteProjectRequestFieldPathBuilder() DeleteProjectRequestFieldPathBuilder {
	return DeleteProjectRequestFieldPathBuilder{}
}
func (DeleteProjectRequestFieldPathBuilder) Name() DeleteProjectRequestPathSelectorName {
	return DeleteProjectRequestPathSelectorName{}
}

type DeleteProjectRequestPathSelectorName struct{}

func (DeleteProjectRequestPathSelectorName) FieldPath() *DeleteProjectRequest_FieldTerminalPath {
	return &DeleteProjectRequest_FieldTerminalPath{selector: DeleteProjectRequest_FieldPathSelectorName}
}

func (s DeleteProjectRequestPathSelectorName) WithValue(value *project.Reference) *DeleteProjectRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*DeleteProjectRequest_FieldTerminalPathValue)
}

func (s DeleteProjectRequestPathSelectorName) WithArrayOfValues(values []*project.Reference) *DeleteProjectRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*DeleteProjectRequest_FieldTerminalPathArrayOfValues)
}
