// Code generated by protoc-gen-goten-object
// File: edgelq/iam/proto/v1alpha2/condition_service.proto
// DO NOT EDIT!!!

package condition_client

// proto imports
import (
	ntt_meta "github.com/cloudwan/edgelq-sdk/common/types/meta"
	multi_region_policy "github.com/cloudwan/edgelq-sdk/common/types/multi_region_policy"
	condition "github.com/cloudwan/edgelq-sdk/iam/resources/v1alpha2/condition"
	organization "github.com/cloudwan/edgelq-sdk/iam/resources/v1alpha2/organization"
	project "github.com/cloudwan/edgelq-sdk/iam/resources/v1alpha2/project"
	meta_service "github.com/cloudwan/edgelq-sdk/meta/resources/v1alpha2/service"
	view "github.com/cloudwan/goten-sdk/runtime/api/view"
	watch_type "github.com/cloudwan/goten-sdk/runtime/api/watch_type"
	empty "github.com/golang/protobuf/ptypes/empty"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	field_mask "google.golang.org/genproto/protobuf/field_mask"
)

// make sure we're using proto imports
var (
	_ = &ntt_meta.Meta{}
	_ = &multi_region_policy.MultiRegionPolicy{}
	_ = &condition.Condition{}
	_ = &organization.Organization{}
	_ = &project.Project{}
	_ = &meta_service.Service{}
	_ = &empty.Empty{}
	_ = &field_mask.FieldMask{}
	_ = &timestamp.Timestamp{}
	_ = view.View(0)
	_ = watch_type.WatchType(0)
)

type GetConditionRequestFieldPathBuilder struct{}

func NewGetConditionRequestFieldPathBuilder() GetConditionRequestFieldPathBuilder {
	return GetConditionRequestFieldPathBuilder{}
}
func (GetConditionRequestFieldPathBuilder) Name() GetConditionRequestPathSelectorName {
	return GetConditionRequestPathSelectorName{}
}
func (GetConditionRequestFieldPathBuilder) FieldMask() GetConditionRequestPathSelectorFieldMask {
	return GetConditionRequestPathSelectorFieldMask{}
}
func (GetConditionRequestFieldPathBuilder) View() GetConditionRequestPathSelectorView {
	return GetConditionRequestPathSelectorView{}
}

type GetConditionRequestPathSelectorName struct{}

func (GetConditionRequestPathSelectorName) FieldPath() *GetConditionRequest_FieldTerminalPath {
	return &GetConditionRequest_FieldTerminalPath{selector: GetConditionRequest_FieldPathSelectorName}
}

func (s GetConditionRequestPathSelectorName) WithValue(value *condition.Reference) *GetConditionRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*GetConditionRequest_FieldTerminalPathValue)
}

func (s GetConditionRequestPathSelectorName) WithArrayOfValues(values []*condition.Reference) *GetConditionRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*GetConditionRequest_FieldTerminalPathArrayOfValues)
}

type GetConditionRequestPathSelectorFieldMask struct{}

func (GetConditionRequestPathSelectorFieldMask) FieldPath() *GetConditionRequest_FieldTerminalPath {
	return &GetConditionRequest_FieldTerminalPath{selector: GetConditionRequest_FieldPathSelectorFieldMask}
}

func (s GetConditionRequestPathSelectorFieldMask) WithValue(value *condition.Condition_FieldMask) *GetConditionRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*GetConditionRequest_FieldTerminalPathValue)
}

func (s GetConditionRequestPathSelectorFieldMask) WithArrayOfValues(values []*condition.Condition_FieldMask) *GetConditionRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*GetConditionRequest_FieldTerminalPathArrayOfValues)
}

type GetConditionRequestPathSelectorView struct{}

func (GetConditionRequestPathSelectorView) FieldPath() *GetConditionRequest_FieldTerminalPath {
	return &GetConditionRequest_FieldTerminalPath{selector: GetConditionRequest_FieldPathSelectorView}
}

func (s GetConditionRequestPathSelectorView) WithValue(value view.View) *GetConditionRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*GetConditionRequest_FieldTerminalPathValue)
}

func (s GetConditionRequestPathSelectorView) WithArrayOfValues(values []view.View) *GetConditionRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*GetConditionRequest_FieldTerminalPathArrayOfValues)
}

type BatchGetConditionsRequestFieldPathBuilder struct{}

func NewBatchGetConditionsRequestFieldPathBuilder() BatchGetConditionsRequestFieldPathBuilder {
	return BatchGetConditionsRequestFieldPathBuilder{}
}
func (BatchGetConditionsRequestFieldPathBuilder) Names() BatchGetConditionsRequestPathSelectorNames {
	return BatchGetConditionsRequestPathSelectorNames{}
}
func (BatchGetConditionsRequestFieldPathBuilder) FieldMask() BatchGetConditionsRequestPathSelectorFieldMask {
	return BatchGetConditionsRequestPathSelectorFieldMask{}
}
func (BatchGetConditionsRequestFieldPathBuilder) View() BatchGetConditionsRequestPathSelectorView {
	return BatchGetConditionsRequestPathSelectorView{}
}

type BatchGetConditionsRequestPathSelectorNames struct{}

func (BatchGetConditionsRequestPathSelectorNames) FieldPath() *BatchGetConditionsRequest_FieldTerminalPath {
	return &BatchGetConditionsRequest_FieldTerminalPath{selector: BatchGetConditionsRequest_FieldPathSelectorNames}
}

func (s BatchGetConditionsRequestPathSelectorNames) WithValue(value []*condition.Reference) *BatchGetConditionsRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetConditionsRequest_FieldTerminalPathValue)
}

func (s BatchGetConditionsRequestPathSelectorNames) WithArrayOfValues(values [][]*condition.Reference) *BatchGetConditionsRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetConditionsRequest_FieldTerminalPathArrayOfValues)
}

func (s BatchGetConditionsRequestPathSelectorNames) WithItemValue(value *condition.Reference) *BatchGetConditionsRequest_FieldTerminalPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*BatchGetConditionsRequest_FieldTerminalPathArrayItemValue)
}

type BatchGetConditionsRequestPathSelectorFieldMask struct{}

func (BatchGetConditionsRequestPathSelectorFieldMask) FieldPath() *BatchGetConditionsRequest_FieldTerminalPath {
	return &BatchGetConditionsRequest_FieldTerminalPath{selector: BatchGetConditionsRequest_FieldPathSelectorFieldMask}
}

func (s BatchGetConditionsRequestPathSelectorFieldMask) WithValue(value *condition.Condition_FieldMask) *BatchGetConditionsRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetConditionsRequest_FieldTerminalPathValue)
}

func (s BatchGetConditionsRequestPathSelectorFieldMask) WithArrayOfValues(values []*condition.Condition_FieldMask) *BatchGetConditionsRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetConditionsRequest_FieldTerminalPathArrayOfValues)
}

type BatchGetConditionsRequestPathSelectorView struct{}

func (BatchGetConditionsRequestPathSelectorView) FieldPath() *BatchGetConditionsRequest_FieldTerminalPath {
	return &BatchGetConditionsRequest_FieldTerminalPath{selector: BatchGetConditionsRequest_FieldPathSelectorView}
}

func (s BatchGetConditionsRequestPathSelectorView) WithValue(value view.View) *BatchGetConditionsRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetConditionsRequest_FieldTerminalPathValue)
}

func (s BatchGetConditionsRequestPathSelectorView) WithArrayOfValues(values []view.View) *BatchGetConditionsRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetConditionsRequest_FieldTerminalPathArrayOfValues)
}

type BatchGetConditionsResponseFieldPathBuilder struct{}

func NewBatchGetConditionsResponseFieldPathBuilder() BatchGetConditionsResponseFieldPathBuilder {
	return BatchGetConditionsResponseFieldPathBuilder{}
}
func (BatchGetConditionsResponseFieldPathBuilder) Conditions() BatchGetConditionsResponsePathSelectorConditions {
	return BatchGetConditionsResponsePathSelectorConditions{}
}
func (BatchGetConditionsResponseFieldPathBuilder) Missing() BatchGetConditionsResponsePathSelectorMissing {
	return BatchGetConditionsResponsePathSelectorMissing{}
}

type BatchGetConditionsResponsePathSelectorConditions struct{}

func (BatchGetConditionsResponsePathSelectorConditions) FieldPath() *BatchGetConditionsResponse_FieldTerminalPath {
	return &BatchGetConditionsResponse_FieldTerminalPath{selector: BatchGetConditionsResponse_FieldPathSelectorConditions}
}

func (s BatchGetConditionsResponsePathSelectorConditions) WithValue(value []*condition.Condition) *BatchGetConditionsResponse_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetConditionsResponse_FieldTerminalPathValue)
}

func (s BatchGetConditionsResponsePathSelectorConditions) WithArrayOfValues(values [][]*condition.Condition) *BatchGetConditionsResponse_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetConditionsResponse_FieldTerminalPathArrayOfValues)
}

func (s BatchGetConditionsResponsePathSelectorConditions) WithItemValue(value *condition.Condition) *BatchGetConditionsResponse_FieldTerminalPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*BatchGetConditionsResponse_FieldTerminalPathArrayItemValue)
}
func (BatchGetConditionsResponsePathSelectorConditions) WithSubPath(subPath condition.Condition_FieldPath) *BatchGetConditionsResponse_FieldSubPath {
	return &BatchGetConditionsResponse_FieldSubPath{selector: BatchGetConditionsResponse_FieldPathSelectorConditions, subPath: subPath}
}

func (s BatchGetConditionsResponsePathSelectorConditions) WithSubValue(subPathValue condition.Condition_FieldPathValue) *BatchGetConditionsResponse_FieldSubPathValue {
	return &BatchGetConditionsResponse_FieldSubPathValue{BatchGetConditionsResponse_FieldPath: s.WithSubPath(subPathValue), subPathValue: subPathValue}
}

func (s BatchGetConditionsResponsePathSelectorConditions) WithSubArrayOfValues(subPathArrayOfValues condition.Condition_FieldPathArrayOfValues) *BatchGetConditionsResponse_FieldSubPathArrayOfValues {
	return &BatchGetConditionsResponse_FieldSubPathArrayOfValues{BatchGetConditionsResponse_FieldPath: s.WithSubPath(subPathArrayOfValues), subPathArrayOfValues: subPathArrayOfValues}
}

func (s BatchGetConditionsResponsePathSelectorConditions) WithSubArrayItemValue(subPathArrayItemValue condition.Condition_FieldPathArrayItemValue) *BatchGetConditionsResponse_FieldSubPathArrayItemValue {
	return &BatchGetConditionsResponse_FieldSubPathArrayItemValue{BatchGetConditionsResponse_FieldPath: s.WithSubPath(subPathArrayItemValue), subPathItemValue: subPathArrayItemValue}
}

func (BatchGetConditionsResponsePathSelectorConditions) Name() BatchGetConditionsResponsePathSelectorConditionsName {
	return BatchGetConditionsResponsePathSelectorConditionsName{}
}

func (BatchGetConditionsResponsePathSelectorConditions) DisplayName() BatchGetConditionsResponsePathSelectorConditionsDisplayName {
	return BatchGetConditionsResponsePathSelectorConditionsDisplayName{}
}

func (BatchGetConditionsResponsePathSelectorConditions) Description() BatchGetConditionsResponsePathSelectorConditionsDescription {
	return BatchGetConditionsResponsePathSelectorConditionsDescription{}
}

func (BatchGetConditionsResponsePathSelectorConditions) Expression() BatchGetConditionsResponsePathSelectorConditionsExpression {
	return BatchGetConditionsResponsePathSelectorConditionsExpression{}
}

func (BatchGetConditionsResponsePathSelectorConditions) ParameterDeclarations() BatchGetConditionsResponsePathSelectorConditionsParameterDeclarations {
	return BatchGetConditionsResponsePathSelectorConditionsParameterDeclarations{}
}

func (BatchGetConditionsResponsePathSelectorConditions) Metadata() BatchGetConditionsResponsePathSelectorConditionsMetadata {
	return BatchGetConditionsResponsePathSelectorConditionsMetadata{}
}

type BatchGetConditionsResponsePathSelectorConditionsName struct{}

func (BatchGetConditionsResponsePathSelectorConditionsName) FieldPath() *BatchGetConditionsResponse_FieldSubPath {
	return &BatchGetConditionsResponse_FieldSubPath{
		selector: BatchGetConditionsResponse_FieldPathSelectorConditions,
		subPath:  condition.NewConditionFieldPathBuilder().Name().FieldPath(),
	}
}

func (s BatchGetConditionsResponsePathSelectorConditionsName) WithValue(value *condition.Name) *BatchGetConditionsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetConditionsResponse_FieldSubPathValue)
}

func (s BatchGetConditionsResponsePathSelectorConditionsName) WithArrayOfValues(values []*condition.Name) *BatchGetConditionsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetConditionsResponse_FieldSubPathArrayOfValues)
}

type BatchGetConditionsResponsePathSelectorConditionsDisplayName struct{}

func (BatchGetConditionsResponsePathSelectorConditionsDisplayName) FieldPath() *BatchGetConditionsResponse_FieldSubPath {
	return &BatchGetConditionsResponse_FieldSubPath{
		selector: BatchGetConditionsResponse_FieldPathSelectorConditions,
		subPath:  condition.NewConditionFieldPathBuilder().DisplayName().FieldPath(),
	}
}

func (s BatchGetConditionsResponsePathSelectorConditionsDisplayName) WithValue(value string) *BatchGetConditionsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetConditionsResponse_FieldSubPathValue)
}

func (s BatchGetConditionsResponsePathSelectorConditionsDisplayName) WithArrayOfValues(values []string) *BatchGetConditionsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetConditionsResponse_FieldSubPathArrayOfValues)
}

type BatchGetConditionsResponsePathSelectorConditionsDescription struct{}

func (BatchGetConditionsResponsePathSelectorConditionsDescription) FieldPath() *BatchGetConditionsResponse_FieldSubPath {
	return &BatchGetConditionsResponse_FieldSubPath{
		selector: BatchGetConditionsResponse_FieldPathSelectorConditions,
		subPath:  condition.NewConditionFieldPathBuilder().Description().FieldPath(),
	}
}

func (s BatchGetConditionsResponsePathSelectorConditionsDescription) WithValue(value string) *BatchGetConditionsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetConditionsResponse_FieldSubPathValue)
}

func (s BatchGetConditionsResponsePathSelectorConditionsDescription) WithArrayOfValues(values []string) *BatchGetConditionsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetConditionsResponse_FieldSubPathArrayOfValues)
}

type BatchGetConditionsResponsePathSelectorConditionsExpression struct{}

func (BatchGetConditionsResponsePathSelectorConditionsExpression) FieldPath() *BatchGetConditionsResponse_FieldSubPath {
	return &BatchGetConditionsResponse_FieldSubPath{
		selector: BatchGetConditionsResponse_FieldPathSelectorConditions,
		subPath:  condition.NewConditionFieldPathBuilder().Expression().FieldPath(),
	}
}

func (s BatchGetConditionsResponsePathSelectorConditionsExpression) WithValue(value string) *BatchGetConditionsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetConditionsResponse_FieldSubPathValue)
}

func (s BatchGetConditionsResponsePathSelectorConditionsExpression) WithArrayOfValues(values []string) *BatchGetConditionsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetConditionsResponse_FieldSubPathArrayOfValues)
}

type BatchGetConditionsResponsePathSelectorConditionsParameterDeclarations struct{}

func (BatchGetConditionsResponsePathSelectorConditionsParameterDeclarations) FieldPath() *BatchGetConditionsResponse_FieldSubPath {
	return &BatchGetConditionsResponse_FieldSubPath{
		selector: BatchGetConditionsResponse_FieldPathSelectorConditions,
		subPath:  condition.NewConditionFieldPathBuilder().ParameterDeclarations().FieldPath(),
	}
}

func (s BatchGetConditionsResponsePathSelectorConditionsParameterDeclarations) WithValue(value []*condition.Condition_ParameterDeclaration) *BatchGetConditionsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetConditionsResponse_FieldSubPathValue)
}

func (s BatchGetConditionsResponsePathSelectorConditionsParameterDeclarations) WithArrayOfValues(values [][]*condition.Condition_ParameterDeclaration) *BatchGetConditionsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetConditionsResponse_FieldSubPathArrayOfValues)
}

func (s BatchGetConditionsResponsePathSelectorConditionsParameterDeclarations) WithItemValue(value *condition.Condition_ParameterDeclaration) *BatchGetConditionsResponse_FieldSubPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*BatchGetConditionsResponse_FieldSubPathArrayItemValue)
}

func (BatchGetConditionsResponsePathSelectorConditionsParameterDeclarations) Key() BatchGetConditionsResponsePathSelectorConditionsParameterDeclarationsKey {
	return BatchGetConditionsResponsePathSelectorConditionsParameterDeclarationsKey{}
}

func (BatchGetConditionsResponsePathSelectorConditionsParameterDeclarations) Type() BatchGetConditionsResponsePathSelectorConditionsParameterDeclarationsType {
	return BatchGetConditionsResponsePathSelectorConditionsParameterDeclarationsType{}
}

type BatchGetConditionsResponsePathSelectorConditionsParameterDeclarationsKey struct{}

func (BatchGetConditionsResponsePathSelectorConditionsParameterDeclarationsKey) FieldPath() *BatchGetConditionsResponse_FieldSubPath {
	return &BatchGetConditionsResponse_FieldSubPath{
		selector: BatchGetConditionsResponse_FieldPathSelectorConditions,
		subPath:  condition.NewConditionFieldPathBuilder().ParameterDeclarations().Key().FieldPath(),
	}
}

func (s BatchGetConditionsResponsePathSelectorConditionsParameterDeclarationsKey) WithValue(value string) *BatchGetConditionsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetConditionsResponse_FieldSubPathValue)
}

func (s BatchGetConditionsResponsePathSelectorConditionsParameterDeclarationsKey) WithArrayOfValues(values []string) *BatchGetConditionsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetConditionsResponse_FieldSubPathArrayOfValues)
}

type BatchGetConditionsResponsePathSelectorConditionsParameterDeclarationsType struct{}

func (BatchGetConditionsResponsePathSelectorConditionsParameterDeclarationsType) FieldPath() *BatchGetConditionsResponse_FieldSubPath {
	return &BatchGetConditionsResponse_FieldSubPath{
		selector: BatchGetConditionsResponse_FieldPathSelectorConditions,
		subPath:  condition.NewConditionFieldPathBuilder().ParameterDeclarations().Type().FieldPath(),
	}
}

func (s BatchGetConditionsResponsePathSelectorConditionsParameterDeclarationsType) WithValue(value condition.Condition_ParameterType) *BatchGetConditionsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetConditionsResponse_FieldSubPathValue)
}

func (s BatchGetConditionsResponsePathSelectorConditionsParameterDeclarationsType) WithArrayOfValues(values []condition.Condition_ParameterType) *BatchGetConditionsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetConditionsResponse_FieldSubPathArrayOfValues)
}

type BatchGetConditionsResponsePathSelectorConditionsMetadata struct{}

func (BatchGetConditionsResponsePathSelectorConditionsMetadata) FieldPath() *BatchGetConditionsResponse_FieldSubPath {
	return &BatchGetConditionsResponse_FieldSubPath{
		selector: BatchGetConditionsResponse_FieldPathSelectorConditions,
		subPath:  condition.NewConditionFieldPathBuilder().Metadata().FieldPath(),
	}
}

func (s BatchGetConditionsResponsePathSelectorConditionsMetadata) WithValue(value *ntt_meta.Meta) *BatchGetConditionsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetConditionsResponse_FieldSubPathValue)
}

func (s BatchGetConditionsResponsePathSelectorConditionsMetadata) WithArrayOfValues(values []*ntt_meta.Meta) *BatchGetConditionsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetConditionsResponse_FieldSubPathArrayOfValues)
}

func (BatchGetConditionsResponsePathSelectorConditionsMetadata) CreateTime() BatchGetConditionsResponsePathSelectorConditionsMetadataCreateTime {
	return BatchGetConditionsResponsePathSelectorConditionsMetadataCreateTime{}
}

func (BatchGetConditionsResponsePathSelectorConditionsMetadata) UpdateTime() BatchGetConditionsResponsePathSelectorConditionsMetadataUpdateTime {
	return BatchGetConditionsResponsePathSelectorConditionsMetadataUpdateTime{}
}

func (BatchGetConditionsResponsePathSelectorConditionsMetadata) DeleteTime() BatchGetConditionsResponsePathSelectorConditionsMetadataDeleteTime {
	return BatchGetConditionsResponsePathSelectorConditionsMetadataDeleteTime{}
}

func (BatchGetConditionsResponsePathSelectorConditionsMetadata) Uuid() BatchGetConditionsResponsePathSelectorConditionsMetadataUuid {
	return BatchGetConditionsResponsePathSelectorConditionsMetadataUuid{}
}

func (BatchGetConditionsResponsePathSelectorConditionsMetadata) Tags() BatchGetConditionsResponsePathSelectorConditionsMetadataTags {
	return BatchGetConditionsResponsePathSelectorConditionsMetadataTags{}
}

func (BatchGetConditionsResponsePathSelectorConditionsMetadata) Labels() BatchGetConditionsResponsePathSelectorConditionsMetadataLabels {
	return BatchGetConditionsResponsePathSelectorConditionsMetadataLabels{}
}

func (BatchGetConditionsResponsePathSelectorConditionsMetadata) Annotations() BatchGetConditionsResponsePathSelectorConditionsMetadataAnnotations {
	return BatchGetConditionsResponsePathSelectorConditionsMetadataAnnotations{}
}

func (BatchGetConditionsResponsePathSelectorConditionsMetadata) Generation() BatchGetConditionsResponsePathSelectorConditionsMetadataGeneration {
	return BatchGetConditionsResponsePathSelectorConditionsMetadataGeneration{}
}

func (BatchGetConditionsResponsePathSelectorConditionsMetadata) ResourceVersion() BatchGetConditionsResponsePathSelectorConditionsMetadataResourceVersion {
	return BatchGetConditionsResponsePathSelectorConditionsMetadataResourceVersion{}
}

func (BatchGetConditionsResponsePathSelectorConditionsMetadata) OwnerReferences() BatchGetConditionsResponsePathSelectorConditionsMetadataOwnerReferences {
	return BatchGetConditionsResponsePathSelectorConditionsMetadataOwnerReferences{}
}

func (BatchGetConditionsResponsePathSelectorConditionsMetadata) Shards() BatchGetConditionsResponsePathSelectorConditionsMetadataShards {
	return BatchGetConditionsResponsePathSelectorConditionsMetadataShards{}
}

func (BatchGetConditionsResponsePathSelectorConditionsMetadata) Syncing() BatchGetConditionsResponsePathSelectorConditionsMetadataSyncing {
	return BatchGetConditionsResponsePathSelectorConditionsMetadataSyncing{}
}

func (BatchGetConditionsResponsePathSelectorConditionsMetadata) Lifecycle() BatchGetConditionsResponsePathSelectorConditionsMetadataLifecycle {
	return BatchGetConditionsResponsePathSelectorConditionsMetadataLifecycle{}
}

type BatchGetConditionsResponsePathSelectorConditionsMetadataCreateTime struct{}

func (BatchGetConditionsResponsePathSelectorConditionsMetadataCreateTime) FieldPath() *BatchGetConditionsResponse_FieldSubPath {
	return &BatchGetConditionsResponse_FieldSubPath{
		selector: BatchGetConditionsResponse_FieldPathSelectorConditions,
		subPath:  condition.NewConditionFieldPathBuilder().Metadata().CreateTime().FieldPath(),
	}
}

func (s BatchGetConditionsResponsePathSelectorConditionsMetadataCreateTime) WithValue(value *timestamp.Timestamp) *BatchGetConditionsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetConditionsResponse_FieldSubPathValue)
}

func (s BatchGetConditionsResponsePathSelectorConditionsMetadataCreateTime) WithArrayOfValues(values []*timestamp.Timestamp) *BatchGetConditionsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetConditionsResponse_FieldSubPathArrayOfValues)
}

type BatchGetConditionsResponsePathSelectorConditionsMetadataUpdateTime struct{}

func (BatchGetConditionsResponsePathSelectorConditionsMetadataUpdateTime) FieldPath() *BatchGetConditionsResponse_FieldSubPath {
	return &BatchGetConditionsResponse_FieldSubPath{
		selector: BatchGetConditionsResponse_FieldPathSelectorConditions,
		subPath:  condition.NewConditionFieldPathBuilder().Metadata().UpdateTime().FieldPath(),
	}
}

func (s BatchGetConditionsResponsePathSelectorConditionsMetadataUpdateTime) WithValue(value *timestamp.Timestamp) *BatchGetConditionsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetConditionsResponse_FieldSubPathValue)
}

func (s BatchGetConditionsResponsePathSelectorConditionsMetadataUpdateTime) WithArrayOfValues(values []*timestamp.Timestamp) *BatchGetConditionsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetConditionsResponse_FieldSubPathArrayOfValues)
}

type BatchGetConditionsResponsePathSelectorConditionsMetadataDeleteTime struct{}

func (BatchGetConditionsResponsePathSelectorConditionsMetadataDeleteTime) FieldPath() *BatchGetConditionsResponse_FieldSubPath {
	return &BatchGetConditionsResponse_FieldSubPath{
		selector: BatchGetConditionsResponse_FieldPathSelectorConditions,
		subPath:  condition.NewConditionFieldPathBuilder().Metadata().DeleteTime().FieldPath(),
	}
}

func (s BatchGetConditionsResponsePathSelectorConditionsMetadataDeleteTime) WithValue(value *timestamp.Timestamp) *BatchGetConditionsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetConditionsResponse_FieldSubPathValue)
}

func (s BatchGetConditionsResponsePathSelectorConditionsMetadataDeleteTime) WithArrayOfValues(values []*timestamp.Timestamp) *BatchGetConditionsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetConditionsResponse_FieldSubPathArrayOfValues)
}

type BatchGetConditionsResponsePathSelectorConditionsMetadataUuid struct{}

func (BatchGetConditionsResponsePathSelectorConditionsMetadataUuid) FieldPath() *BatchGetConditionsResponse_FieldSubPath {
	return &BatchGetConditionsResponse_FieldSubPath{
		selector: BatchGetConditionsResponse_FieldPathSelectorConditions,
		subPath:  condition.NewConditionFieldPathBuilder().Metadata().Uuid().FieldPath(),
	}
}

func (s BatchGetConditionsResponsePathSelectorConditionsMetadataUuid) WithValue(value string) *BatchGetConditionsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetConditionsResponse_FieldSubPathValue)
}

func (s BatchGetConditionsResponsePathSelectorConditionsMetadataUuid) WithArrayOfValues(values []string) *BatchGetConditionsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetConditionsResponse_FieldSubPathArrayOfValues)
}

type BatchGetConditionsResponsePathSelectorConditionsMetadataTags struct{}

func (BatchGetConditionsResponsePathSelectorConditionsMetadataTags) FieldPath() *BatchGetConditionsResponse_FieldSubPath {
	return &BatchGetConditionsResponse_FieldSubPath{
		selector: BatchGetConditionsResponse_FieldPathSelectorConditions,
		subPath:  condition.NewConditionFieldPathBuilder().Metadata().Tags().FieldPath(),
	}
}

func (s BatchGetConditionsResponsePathSelectorConditionsMetadataTags) WithValue(value []string) *BatchGetConditionsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetConditionsResponse_FieldSubPathValue)
}

func (s BatchGetConditionsResponsePathSelectorConditionsMetadataTags) WithArrayOfValues(values [][]string) *BatchGetConditionsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetConditionsResponse_FieldSubPathArrayOfValues)
}

func (s BatchGetConditionsResponsePathSelectorConditionsMetadataTags) WithItemValue(value string) *BatchGetConditionsResponse_FieldSubPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*BatchGetConditionsResponse_FieldSubPathArrayItemValue)
}

type BatchGetConditionsResponsePathSelectorConditionsMetadataLabels struct{}

func (BatchGetConditionsResponsePathSelectorConditionsMetadataLabels) FieldPath() *BatchGetConditionsResponse_FieldSubPath {
	return &BatchGetConditionsResponse_FieldSubPath{
		selector: BatchGetConditionsResponse_FieldPathSelectorConditions,
		subPath:  condition.NewConditionFieldPathBuilder().Metadata().Labels().FieldPath(),
	}
}

func (s BatchGetConditionsResponsePathSelectorConditionsMetadataLabels) WithValue(value map[string]string) *BatchGetConditionsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetConditionsResponse_FieldSubPathValue)
}

func (s BatchGetConditionsResponsePathSelectorConditionsMetadataLabels) WithArrayOfValues(values []map[string]string) *BatchGetConditionsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetConditionsResponse_FieldSubPathArrayOfValues)
}

func (BatchGetConditionsResponsePathSelectorConditionsMetadataLabels) WithKey(key string) BatchGetConditionsResponseMapPathSelectorConditionsMetadataLabels {
	return BatchGetConditionsResponseMapPathSelectorConditionsMetadataLabels{key: key}
}

type BatchGetConditionsResponseMapPathSelectorConditionsMetadataLabels struct {
	key string
}

func (s BatchGetConditionsResponseMapPathSelectorConditionsMetadataLabels) FieldPath() *BatchGetConditionsResponse_FieldSubPath {
	return &BatchGetConditionsResponse_FieldSubPath{
		selector: BatchGetConditionsResponse_FieldPathSelectorConditions,
		subPath:  condition.NewConditionFieldPathBuilder().Metadata().Labels().WithKey(s.key).FieldPath(),
	}
}

func (s BatchGetConditionsResponseMapPathSelectorConditionsMetadataLabels) WithValue(value string) *BatchGetConditionsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetConditionsResponse_FieldSubPathValue)
}

func (s BatchGetConditionsResponseMapPathSelectorConditionsMetadataLabels) WithArrayOfValues(values []string) *BatchGetConditionsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetConditionsResponse_FieldSubPathArrayOfValues)
}

type BatchGetConditionsResponsePathSelectorConditionsMetadataAnnotations struct{}

func (BatchGetConditionsResponsePathSelectorConditionsMetadataAnnotations) FieldPath() *BatchGetConditionsResponse_FieldSubPath {
	return &BatchGetConditionsResponse_FieldSubPath{
		selector: BatchGetConditionsResponse_FieldPathSelectorConditions,
		subPath:  condition.NewConditionFieldPathBuilder().Metadata().Annotations().FieldPath(),
	}
}

func (s BatchGetConditionsResponsePathSelectorConditionsMetadataAnnotations) WithValue(value map[string]string) *BatchGetConditionsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetConditionsResponse_FieldSubPathValue)
}

func (s BatchGetConditionsResponsePathSelectorConditionsMetadataAnnotations) WithArrayOfValues(values []map[string]string) *BatchGetConditionsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetConditionsResponse_FieldSubPathArrayOfValues)
}

func (BatchGetConditionsResponsePathSelectorConditionsMetadataAnnotations) WithKey(key string) BatchGetConditionsResponseMapPathSelectorConditionsMetadataAnnotations {
	return BatchGetConditionsResponseMapPathSelectorConditionsMetadataAnnotations{key: key}
}

type BatchGetConditionsResponseMapPathSelectorConditionsMetadataAnnotations struct {
	key string
}

func (s BatchGetConditionsResponseMapPathSelectorConditionsMetadataAnnotations) FieldPath() *BatchGetConditionsResponse_FieldSubPath {
	return &BatchGetConditionsResponse_FieldSubPath{
		selector: BatchGetConditionsResponse_FieldPathSelectorConditions,
		subPath:  condition.NewConditionFieldPathBuilder().Metadata().Annotations().WithKey(s.key).FieldPath(),
	}
}

func (s BatchGetConditionsResponseMapPathSelectorConditionsMetadataAnnotations) WithValue(value string) *BatchGetConditionsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetConditionsResponse_FieldSubPathValue)
}

func (s BatchGetConditionsResponseMapPathSelectorConditionsMetadataAnnotations) WithArrayOfValues(values []string) *BatchGetConditionsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetConditionsResponse_FieldSubPathArrayOfValues)
}

type BatchGetConditionsResponsePathSelectorConditionsMetadataGeneration struct{}

func (BatchGetConditionsResponsePathSelectorConditionsMetadataGeneration) FieldPath() *BatchGetConditionsResponse_FieldSubPath {
	return &BatchGetConditionsResponse_FieldSubPath{
		selector: BatchGetConditionsResponse_FieldPathSelectorConditions,
		subPath:  condition.NewConditionFieldPathBuilder().Metadata().Generation().FieldPath(),
	}
}

func (s BatchGetConditionsResponsePathSelectorConditionsMetadataGeneration) WithValue(value int64) *BatchGetConditionsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetConditionsResponse_FieldSubPathValue)
}

func (s BatchGetConditionsResponsePathSelectorConditionsMetadataGeneration) WithArrayOfValues(values []int64) *BatchGetConditionsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetConditionsResponse_FieldSubPathArrayOfValues)
}

type BatchGetConditionsResponsePathSelectorConditionsMetadataResourceVersion struct{}

func (BatchGetConditionsResponsePathSelectorConditionsMetadataResourceVersion) FieldPath() *BatchGetConditionsResponse_FieldSubPath {
	return &BatchGetConditionsResponse_FieldSubPath{
		selector: BatchGetConditionsResponse_FieldPathSelectorConditions,
		subPath:  condition.NewConditionFieldPathBuilder().Metadata().ResourceVersion().FieldPath(),
	}
}

func (s BatchGetConditionsResponsePathSelectorConditionsMetadataResourceVersion) WithValue(value string) *BatchGetConditionsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetConditionsResponse_FieldSubPathValue)
}

func (s BatchGetConditionsResponsePathSelectorConditionsMetadataResourceVersion) WithArrayOfValues(values []string) *BatchGetConditionsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetConditionsResponse_FieldSubPathArrayOfValues)
}

type BatchGetConditionsResponsePathSelectorConditionsMetadataOwnerReferences struct{}

func (BatchGetConditionsResponsePathSelectorConditionsMetadataOwnerReferences) FieldPath() *BatchGetConditionsResponse_FieldSubPath {
	return &BatchGetConditionsResponse_FieldSubPath{
		selector: BatchGetConditionsResponse_FieldPathSelectorConditions,
		subPath:  condition.NewConditionFieldPathBuilder().Metadata().OwnerReferences().FieldPath(),
	}
}

func (s BatchGetConditionsResponsePathSelectorConditionsMetadataOwnerReferences) WithValue(value []*ntt_meta.OwnerReference) *BatchGetConditionsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetConditionsResponse_FieldSubPathValue)
}

func (s BatchGetConditionsResponsePathSelectorConditionsMetadataOwnerReferences) WithArrayOfValues(values [][]*ntt_meta.OwnerReference) *BatchGetConditionsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetConditionsResponse_FieldSubPathArrayOfValues)
}

func (s BatchGetConditionsResponsePathSelectorConditionsMetadataOwnerReferences) WithItemValue(value *ntt_meta.OwnerReference) *BatchGetConditionsResponse_FieldSubPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*BatchGetConditionsResponse_FieldSubPathArrayItemValue)
}

func (BatchGetConditionsResponsePathSelectorConditionsMetadataOwnerReferences) Kind() BatchGetConditionsResponsePathSelectorConditionsMetadataOwnerReferencesKind {
	return BatchGetConditionsResponsePathSelectorConditionsMetadataOwnerReferencesKind{}
}

func (BatchGetConditionsResponsePathSelectorConditionsMetadataOwnerReferences) Version() BatchGetConditionsResponsePathSelectorConditionsMetadataOwnerReferencesVersion {
	return BatchGetConditionsResponsePathSelectorConditionsMetadataOwnerReferencesVersion{}
}

func (BatchGetConditionsResponsePathSelectorConditionsMetadataOwnerReferences) Name() BatchGetConditionsResponsePathSelectorConditionsMetadataOwnerReferencesName {
	return BatchGetConditionsResponsePathSelectorConditionsMetadataOwnerReferencesName{}
}

func (BatchGetConditionsResponsePathSelectorConditionsMetadataOwnerReferences) Region() BatchGetConditionsResponsePathSelectorConditionsMetadataOwnerReferencesRegion {
	return BatchGetConditionsResponsePathSelectorConditionsMetadataOwnerReferencesRegion{}
}

func (BatchGetConditionsResponsePathSelectorConditionsMetadataOwnerReferences) Controller() BatchGetConditionsResponsePathSelectorConditionsMetadataOwnerReferencesController {
	return BatchGetConditionsResponsePathSelectorConditionsMetadataOwnerReferencesController{}
}

func (BatchGetConditionsResponsePathSelectorConditionsMetadataOwnerReferences) BlockOwnerDeletion() BatchGetConditionsResponsePathSelectorConditionsMetadataOwnerReferencesBlockOwnerDeletion {
	return BatchGetConditionsResponsePathSelectorConditionsMetadataOwnerReferencesBlockOwnerDeletion{}
}

func (BatchGetConditionsResponsePathSelectorConditionsMetadataOwnerReferences) RequiresOwnerReference() BatchGetConditionsResponsePathSelectorConditionsMetadataOwnerReferencesRequiresOwnerReference {
	return BatchGetConditionsResponsePathSelectorConditionsMetadataOwnerReferencesRequiresOwnerReference{}
}

type BatchGetConditionsResponsePathSelectorConditionsMetadataOwnerReferencesKind struct{}

func (BatchGetConditionsResponsePathSelectorConditionsMetadataOwnerReferencesKind) FieldPath() *BatchGetConditionsResponse_FieldSubPath {
	return &BatchGetConditionsResponse_FieldSubPath{
		selector: BatchGetConditionsResponse_FieldPathSelectorConditions,
		subPath:  condition.NewConditionFieldPathBuilder().Metadata().OwnerReferences().Kind().FieldPath(),
	}
}

func (s BatchGetConditionsResponsePathSelectorConditionsMetadataOwnerReferencesKind) WithValue(value string) *BatchGetConditionsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetConditionsResponse_FieldSubPathValue)
}

func (s BatchGetConditionsResponsePathSelectorConditionsMetadataOwnerReferencesKind) WithArrayOfValues(values []string) *BatchGetConditionsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetConditionsResponse_FieldSubPathArrayOfValues)
}

type BatchGetConditionsResponsePathSelectorConditionsMetadataOwnerReferencesVersion struct{}

func (BatchGetConditionsResponsePathSelectorConditionsMetadataOwnerReferencesVersion) FieldPath() *BatchGetConditionsResponse_FieldSubPath {
	return &BatchGetConditionsResponse_FieldSubPath{
		selector: BatchGetConditionsResponse_FieldPathSelectorConditions,
		subPath:  condition.NewConditionFieldPathBuilder().Metadata().OwnerReferences().Version().FieldPath(),
	}
}

func (s BatchGetConditionsResponsePathSelectorConditionsMetadataOwnerReferencesVersion) WithValue(value string) *BatchGetConditionsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetConditionsResponse_FieldSubPathValue)
}

func (s BatchGetConditionsResponsePathSelectorConditionsMetadataOwnerReferencesVersion) WithArrayOfValues(values []string) *BatchGetConditionsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetConditionsResponse_FieldSubPathArrayOfValues)
}

type BatchGetConditionsResponsePathSelectorConditionsMetadataOwnerReferencesName struct{}

func (BatchGetConditionsResponsePathSelectorConditionsMetadataOwnerReferencesName) FieldPath() *BatchGetConditionsResponse_FieldSubPath {
	return &BatchGetConditionsResponse_FieldSubPath{
		selector: BatchGetConditionsResponse_FieldPathSelectorConditions,
		subPath:  condition.NewConditionFieldPathBuilder().Metadata().OwnerReferences().Name().FieldPath(),
	}
}

func (s BatchGetConditionsResponsePathSelectorConditionsMetadataOwnerReferencesName) WithValue(value string) *BatchGetConditionsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetConditionsResponse_FieldSubPathValue)
}

func (s BatchGetConditionsResponsePathSelectorConditionsMetadataOwnerReferencesName) WithArrayOfValues(values []string) *BatchGetConditionsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetConditionsResponse_FieldSubPathArrayOfValues)
}

type BatchGetConditionsResponsePathSelectorConditionsMetadataOwnerReferencesRegion struct{}

func (BatchGetConditionsResponsePathSelectorConditionsMetadataOwnerReferencesRegion) FieldPath() *BatchGetConditionsResponse_FieldSubPath {
	return &BatchGetConditionsResponse_FieldSubPath{
		selector: BatchGetConditionsResponse_FieldPathSelectorConditions,
		subPath:  condition.NewConditionFieldPathBuilder().Metadata().OwnerReferences().Region().FieldPath(),
	}
}

func (s BatchGetConditionsResponsePathSelectorConditionsMetadataOwnerReferencesRegion) WithValue(value string) *BatchGetConditionsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetConditionsResponse_FieldSubPathValue)
}

func (s BatchGetConditionsResponsePathSelectorConditionsMetadataOwnerReferencesRegion) WithArrayOfValues(values []string) *BatchGetConditionsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetConditionsResponse_FieldSubPathArrayOfValues)
}

type BatchGetConditionsResponsePathSelectorConditionsMetadataOwnerReferencesController struct{}

func (BatchGetConditionsResponsePathSelectorConditionsMetadataOwnerReferencesController) FieldPath() *BatchGetConditionsResponse_FieldSubPath {
	return &BatchGetConditionsResponse_FieldSubPath{
		selector: BatchGetConditionsResponse_FieldPathSelectorConditions,
		subPath:  condition.NewConditionFieldPathBuilder().Metadata().OwnerReferences().Controller().FieldPath(),
	}
}

func (s BatchGetConditionsResponsePathSelectorConditionsMetadataOwnerReferencesController) WithValue(value bool) *BatchGetConditionsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetConditionsResponse_FieldSubPathValue)
}

func (s BatchGetConditionsResponsePathSelectorConditionsMetadataOwnerReferencesController) WithArrayOfValues(values []bool) *BatchGetConditionsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetConditionsResponse_FieldSubPathArrayOfValues)
}

type BatchGetConditionsResponsePathSelectorConditionsMetadataOwnerReferencesBlockOwnerDeletion struct{}

func (BatchGetConditionsResponsePathSelectorConditionsMetadataOwnerReferencesBlockOwnerDeletion) FieldPath() *BatchGetConditionsResponse_FieldSubPath {
	return &BatchGetConditionsResponse_FieldSubPath{
		selector: BatchGetConditionsResponse_FieldPathSelectorConditions,
		subPath:  condition.NewConditionFieldPathBuilder().Metadata().OwnerReferences().BlockOwnerDeletion().FieldPath(),
	}
}

func (s BatchGetConditionsResponsePathSelectorConditionsMetadataOwnerReferencesBlockOwnerDeletion) WithValue(value bool) *BatchGetConditionsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetConditionsResponse_FieldSubPathValue)
}

func (s BatchGetConditionsResponsePathSelectorConditionsMetadataOwnerReferencesBlockOwnerDeletion) WithArrayOfValues(values []bool) *BatchGetConditionsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetConditionsResponse_FieldSubPathArrayOfValues)
}

type BatchGetConditionsResponsePathSelectorConditionsMetadataOwnerReferencesRequiresOwnerReference struct{}

func (BatchGetConditionsResponsePathSelectorConditionsMetadataOwnerReferencesRequiresOwnerReference) FieldPath() *BatchGetConditionsResponse_FieldSubPath {
	return &BatchGetConditionsResponse_FieldSubPath{
		selector: BatchGetConditionsResponse_FieldPathSelectorConditions,
		subPath:  condition.NewConditionFieldPathBuilder().Metadata().OwnerReferences().RequiresOwnerReference().FieldPath(),
	}
}

func (s BatchGetConditionsResponsePathSelectorConditionsMetadataOwnerReferencesRequiresOwnerReference) WithValue(value bool) *BatchGetConditionsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetConditionsResponse_FieldSubPathValue)
}

func (s BatchGetConditionsResponsePathSelectorConditionsMetadataOwnerReferencesRequiresOwnerReference) WithArrayOfValues(values []bool) *BatchGetConditionsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetConditionsResponse_FieldSubPathArrayOfValues)
}

type BatchGetConditionsResponsePathSelectorConditionsMetadataShards struct{}

func (BatchGetConditionsResponsePathSelectorConditionsMetadataShards) FieldPath() *BatchGetConditionsResponse_FieldSubPath {
	return &BatchGetConditionsResponse_FieldSubPath{
		selector: BatchGetConditionsResponse_FieldPathSelectorConditions,
		subPath:  condition.NewConditionFieldPathBuilder().Metadata().Shards().FieldPath(),
	}
}

func (s BatchGetConditionsResponsePathSelectorConditionsMetadataShards) WithValue(value map[string]int64) *BatchGetConditionsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetConditionsResponse_FieldSubPathValue)
}

func (s BatchGetConditionsResponsePathSelectorConditionsMetadataShards) WithArrayOfValues(values []map[string]int64) *BatchGetConditionsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetConditionsResponse_FieldSubPathArrayOfValues)
}

func (BatchGetConditionsResponsePathSelectorConditionsMetadataShards) WithKey(key string) BatchGetConditionsResponseMapPathSelectorConditionsMetadataShards {
	return BatchGetConditionsResponseMapPathSelectorConditionsMetadataShards{key: key}
}

type BatchGetConditionsResponseMapPathSelectorConditionsMetadataShards struct {
	key string
}

func (s BatchGetConditionsResponseMapPathSelectorConditionsMetadataShards) FieldPath() *BatchGetConditionsResponse_FieldSubPath {
	return &BatchGetConditionsResponse_FieldSubPath{
		selector: BatchGetConditionsResponse_FieldPathSelectorConditions,
		subPath:  condition.NewConditionFieldPathBuilder().Metadata().Shards().WithKey(s.key).FieldPath(),
	}
}

func (s BatchGetConditionsResponseMapPathSelectorConditionsMetadataShards) WithValue(value int64) *BatchGetConditionsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetConditionsResponse_FieldSubPathValue)
}

func (s BatchGetConditionsResponseMapPathSelectorConditionsMetadataShards) WithArrayOfValues(values []int64) *BatchGetConditionsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetConditionsResponse_FieldSubPathArrayOfValues)
}

type BatchGetConditionsResponsePathSelectorConditionsMetadataSyncing struct{}

func (BatchGetConditionsResponsePathSelectorConditionsMetadataSyncing) FieldPath() *BatchGetConditionsResponse_FieldSubPath {
	return &BatchGetConditionsResponse_FieldSubPath{
		selector: BatchGetConditionsResponse_FieldPathSelectorConditions,
		subPath:  condition.NewConditionFieldPathBuilder().Metadata().Syncing().FieldPath(),
	}
}

func (s BatchGetConditionsResponsePathSelectorConditionsMetadataSyncing) WithValue(value *ntt_meta.SyncingMeta) *BatchGetConditionsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetConditionsResponse_FieldSubPathValue)
}

func (s BatchGetConditionsResponsePathSelectorConditionsMetadataSyncing) WithArrayOfValues(values []*ntt_meta.SyncingMeta) *BatchGetConditionsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetConditionsResponse_FieldSubPathArrayOfValues)
}

func (BatchGetConditionsResponsePathSelectorConditionsMetadataSyncing) OwningRegion() BatchGetConditionsResponsePathSelectorConditionsMetadataSyncingOwningRegion {
	return BatchGetConditionsResponsePathSelectorConditionsMetadataSyncingOwningRegion{}
}

func (BatchGetConditionsResponsePathSelectorConditionsMetadataSyncing) Regions() BatchGetConditionsResponsePathSelectorConditionsMetadataSyncingRegions {
	return BatchGetConditionsResponsePathSelectorConditionsMetadataSyncingRegions{}
}

type BatchGetConditionsResponsePathSelectorConditionsMetadataSyncingOwningRegion struct{}

func (BatchGetConditionsResponsePathSelectorConditionsMetadataSyncingOwningRegion) FieldPath() *BatchGetConditionsResponse_FieldSubPath {
	return &BatchGetConditionsResponse_FieldSubPath{
		selector: BatchGetConditionsResponse_FieldPathSelectorConditions,
		subPath:  condition.NewConditionFieldPathBuilder().Metadata().Syncing().OwningRegion().FieldPath(),
	}
}

func (s BatchGetConditionsResponsePathSelectorConditionsMetadataSyncingOwningRegion) WithValue(value string) *BatchGetConditionsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetConditionsResponse_FieldSubPathValue)
}

func (s BatchGetConditionsResponsePathSelectorConditionsMetadataSyncingOwningRegion) WithArrayOfValues(values []string) *BatchGetConditionsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetConditionsResponse_FieldSubPathArrayOfValues)
}

type BatchGetConditionsResponsePathSelectorConditionsMetadataSyncingRegions struct{}

func (BatchGetConditionsResponsePathSelectorConditionsMetadataSyncingRegions) FieldPath() *BatchGetConditionsResponse_FieldSubPath {
	return &BatchGetConditionsResponse_FieldSubPath{
		selector: BatchGetConditionsResponse_FieldPathSelectorConditions,
		subPath:  condition.NewConditionFieldPathBuilder().Metadata().Syncing().Regions().FieldPath(),
	}
}

func (s BatchGetConditionsResponsePathSelectorConditionsMetadataSyncingRegions) WithValue(value []string) *BatchGetConditionsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetConditionsResponse_FieldSubPathValue)
}

func (s BatchGetConditionsResponsePathSelectorConditionsMetadataSyncingRegions) WithArrayOfValues(values [][]string) *BatchGetConditionsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetConditionsResponse_FieldSubPathArrayOfValues)
}

func (s BatchGetConditionsResponsePathSelectorConditionsMetadataSyncingRegions) WithItemValue(value string) *BatchGetConditionsResponse_FieldSubPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*BatchGetConditionsResponse_FieldSubPathArrayItemValue)
}

type BatchGetConditionsResponsePathSelectorConditionsMetadataLifecycle struct{}

func (BatchGetConditionsResponsePathSelectorConditionsMetadataLifecycle) FieldPath() *BatchGetConditionsResponse_FieldSubPath {
	return &BatchGetConditionsResponse_FieldSubPath{
		selector: BatchGetConditionsResponse_FieldPathSelectorConditions,
		subPath:  condition.NewConditionFieldPathBuilder().Metadata().Lifecycle().FieldPath(),
	}
}

func (s BatchGetConditionsResponsePathSelectorConditionsMetadataLifecycle) WithValue(value *ntt_meta.Lifecycle) *BatchGetConditionsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetConditionsResponse_FieldSubPathValue)
}

func (s BatchGetConditionsResponsePathSelectorConditionsMetadataLifecycle) WithArrayOfValues(values []*ntt_meta.Lifecycle) *BatchGetConditionsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetConditionsResponse_FieldSubPathArrayOfValues)
}

func (BatchGetConditionsResponsePathSelectorConditionsMetadataLifecycle) State() BatchGetConditionsResponsePathSelectorConditionsMetadataLifecycleState {
	return BatchGetConditionsResponsePathSelectorConditionsMetadataLifecycleState{}
}

func (BatchGetConditionsResponsePathSelectorConditionsMetadataLifecycle) BlockDeletion() BatchGetConditionsResponsePathSelectorConditionsMetadataLifecycleBlockDeletion {
	return BatchGetConditionsResponsePathSelectorConditionsMetadataLifecycleBlockDeletion{}
}

type BatchGetConditionsResponsePathSelectorConditionsMetadataLifecycleState struct{}

func (BatchGetConditionsResponsePathSelectorConditionsMetadataLifecycleState) FieldPath() *BatchGetConditionsResponse_FieldSubPath {
	return &BatchGetConditionsResponse_FieldSubPath{
		selector: BatchGetConditionsResponse_FieldPathSelectorConditions,
		subPath:  condition.NewConditionFieldPathBuilder().Metadata().Lifecycle().State().FieldPath(),
	}
}

func (s BatchGetConditionsResponsePathSelectorConditionsMetadataLifecycleState) WithValue(value ntt_meta.Lifecycle_State) *BatchGetConditionsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetConditionsResponse_FieldSubPathValue)
}

func (s BatchGetConditionsResponsePathSelectorConditionsMetadataLifecycleState) WithArrayOfValues(values []ntt_meta.Lifecycle_State) *BatchGetConditionsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetConditionsResponse_FieldSubPathArrayOfValues)
}

type BatchGetConditionsResponsePathSelectorConditionsMetadataLifecycleBlockDeletion struct{}

func (BatchGetConditionsResponsePathSelectorConditionsMetadataLifecycleBlockDeletion) FieldPath() *BatchGetConditionsResponse_FieldSubPath {
	return &BatchGetConditionsResponse_FieldSubPath{
		selector: BatchGetConditionsResponse_FieldPathSelectorConditions,
		subPath:  condition.NewConditionFieldPathBuilder().Metadata().Lifecycle().BlockDeletion().FieldPath(),
	}
}

func (s BatchGetConditionsResponsePathSelectorConditionsMetadataLifecycleBlockDeletion) WithValue(value bool) *BatchGetConditionsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetConditionsResponse_FieldSubPathValue)
}

func (s BatchGetConditionsResponsePathSelectorConditionsMetadataLifecycleBlockDeletion) WithArrayOfValues(values []bool) *BatchGetConditionsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetConditionsResponse_FieldSubPathArrayOfValues)
}

type BatchGetConditionsResponsePathSelectorMissing struct{}

func (BatchGetConditionsResponsePathSelectorMissing) FieldPath() *BatchGetConditionsResponse_FieldTerminalPath {
	return &BatchGetConditionsResponse_FieldTerminalPath{selector: BatchGetConditionsResponse_FieldPathSelectorMissing}
}

func (s BatchGetConditionsResponsePathSelectorMissing) WithValue(value []*condition.Reference) *BatchGetConditionsResponse_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetConditionsResponse_FieldTerminalPathValue)
}

func (s BatchGetConditionsResponsePathSelectorMissing) WithArrayOfValues(values [][]*condition.Reference) *BatchGetConditionsResponse_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetConditionsResponse_FieldTerminalPathArrayOfValues)
}

func (s BatchGetConditionsResponsePathSelectorMissing) WithItemValue(value *condition.Reference) *BatchGetConditionsResponse_FieldTerminalPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*BatchGetConditionsResponse_FieldTerminalPathArrayItemValue)
}

type ListConditionsRequestFieldPathBuilder struct{}

func NewListConditionsRequestFieldPathBuilder() ListConditionsRequestFieldPathBuilder {
	return ListConditionsRequestFieldPathBuilder{}
}
func (ListConditionsRequestFieldPathBuilder) Parent() ListConditionsRequestPathSelectorParent {
	return ListConditionsRequestPathSelectorParent{}
}
func (ListConditionsRequestFieldPathBuilder) PageSize() ListConditionsRequestPathSelectorPageSize {
	return ListConditionsRequestPathSelectorPageSize{}
}
func (ListConditionsRequestFieldPathBuilder) PageToken() ListConditionsRequestPathSelectorPageToken {
	return ListConditionsRequestPathSelectorPageToken{}
}
func (ListConditionsRequestFieldPathBuilder) OrderBy() ListConditionsRequestPathSelectorOrderBy {
	return ListConditionsRequestPathSelectorOrderBy{}
}
func (ListConditionsRequestFieldPathBuilder) Filter() ListConditionsRequestPathSelectorFilter {
	return ListConditionsRequestPathSelectorFilter{}
}
func (ListConditionsRequestFieldPathBuilder) FieldMask() ListConditionsRequestPathSelectorFieldMask {
	return ListConditionsRequestPathSelectorFieldMask{}
}
func (ListConditionsRequestFieldPathBuilder) View() ListConditionsRequestPathSelectorView {
	return ListConditionsRequestPathSelectorView{}
}

type ListConditionsRequestPathSelectorParent struct{}

func (ListConditionsRequestPathSelectorParent) FieldPath() *ListConditionsRequest_FieldTerminalPath {
	return &ListConditionsRequest_FieldTerminalPath{selector: ListConditionsRequest_FieldPathSelectorParent}
}

func (s ListConditionsRequestPathSelectorParent) WithValue(value *condition.ParentName) *ListConditionsRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*ListConditionsRequest_FieldTerminalPathValue)
}

func (s ListConditionsRequestPathSelectorParent) WithArrayOfValues(values []*condition.ParentName) *ListConditionsRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListConditionsRequest_FieldTerminalPathArrayOfValues)
}

type ListConditionsRequestPathSelectorPageSize struct{}

func (ListConditionsRequestPathSelectorPageSize) FieldPath() *ListConditionsRequest_FieldTerminalPath {
	return &ListConditionsRequest_FieldTerminalPath{selector: ListConditionsRequest_FieldPathSelectorPageSize}
}

func (s ListConditionsRequestPathSelectorPageSize) WithValue(value int32) *ListConditionsRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*ListConditionsRequest_FieldTerminalPathValue)
}

func (s ListConditionsRequestPathSelectorPageSize) WithArrayOfValues(values []int32) *ListConditionsRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListConditionsRequest_FieldTerminalPathArrayOfValues)
}

type ListConditionsRequestPathSelectorPageToken struct{}

func (ListConditionsRequestPathSelectorPageToken) FieldPath() *ListConditionsRequest_FieldTerminalPath {
	return &ListConditionsRequest_FieldTerminalPath{selector: ListConditionsRequest_FieldPathSelectorPageToken}
}

func (s ListConditionsRequestPathSelectorPageToken) WithValue(value *condition.PagerCursor) *ListConditionsRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*ListConditionsRequest_FieldTerminalPathValue)
}

func (s ListConditionsRequestPathSelectorPageToken) WithArrayOfValues(values []*condition.PagerCursor) *ListConditionsRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListConditionsRequest_FieldTerminalPathArrayOfValues)
}

type ListConditionsRequestPathSelectorOrderBy struct{}

func (ListConditionsRequestPathSelectorOrderBy) FieldPath() *ListConditionsRequest_FieldTerminalPath {
	return &ListConditionsRequest_FieldTerminalPath{selector: ListConditionsRequest_FieldPathSelectorOrderBy}
}

func (s ListConditionsRequestPathSelectorOrderBy) WithValue(value *condition.OrderBy) *ListConditionsRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*ListConditionsRequest_FieldTerminalPathValue)
}

func (s ListConditionsRequestPathSelectorOrderBy) WithArrayOfValues(values []*condition.OrderBy) *ListConditionsRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListConditionsRequest_FieldTerminalPathArrayOfValues)
}

type ListConditionsRequestPathSelectorFilter struct{}

func (ListConditionsRequestPathSelectorFilter) FieldPath() *ListConditionsRequest_FieldTerminalPath {
	return &ListConditionsRequest_FieldTerminalPath{selector: ListConditionsRequest_FieldPathSelectorFilter}
}

func (s ListConditionsRequestPathSelectorFilter) WithValue(value *condition.Filter) *ListConditionsRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*ListConditionsRequest_FieldTerminalPathValue)
}

func (s ListConditionsRequestPathSelectorFilter) WithArrayOfValues(values []*condition.Filter) *ListConditionsRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListConditionsRequest_FieldTerminalPathArrayOfValues)
}

type ListConditionsRequestPathSelectorFieldMask struct{}

func (ListConditionsRequestPathSelectorFieldMask) FieldPath() *ListConditionsRequest_FieldTerminalPath {
	return &ListConditionsRequest_FieldTerminalPath{selector: ListConditionsRequest_FieldPathSelectorFieldMask}
}

func (s ListConditionsRequestPathSelectorFieldMask) WithValue(value *condition.Condition_FieldMask) *ListConditionsRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*ListConditionsRequest_FieldTerminalPathValue)
}

func (s ListConditionsRequestPathSelectorFieldMask) WithArrayOfValues(values []*condition.Condition_FieldMask) *ListConditionsRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListConditionsRequest_FieldTerminalPathArrayOfValues)
}

type ListConditionsRequestPathSelectorView struct{}

func (ListConditionsRequestPathSelectorView) FieldPath() *ListConditionsRequest_FieldTerminalPath {
	return &ListConditionsRequest_FieldTerminalPath{selector: ListConditionsRequest_FieldPathSelectorView}
}

func (s ListConditionsRequestPathSelectorView) WithValue(value view.View) *ListConditionsRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*ListConditionsRequest_FieldTerminalPathValue)
}

func (s ListConditionsRequestPathSelectorView) WithArrayOfValues(values []view.View) *ListConditionsRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListConditionsRequest_FieldTerminalPathArrayOfValues)
}

type ListConditionsResponseFieldPathBuilder struct{}

func NewListConditionsResponseFieldPathBuilder() ListConditionsResponseFieldPathBuilder {
	return ListConditionsResponseFieldPathBuilder{}
}
func (ListConditionsResponseFieldPathBuilder) Conditions() ListConditionsResponsePathSelectorConditions {
	return ListConditionsResponsePathSelectorConditions{}
}
func (ListConditionsResponseFieldPathBuilder) PrevPageToken() ListConditionsResponsePathSelectorPrevPageToken {
	return ListConditionsResponsePathSelectorPrevPageToken{}
}
func (ListConditionsResponseFieldPathBuilder) NextPageToken() ListConditionsResponsePathSelectorNextPageToken {
	return ListConditionsResponsePathSelectorNextPageToken{}
}

type ListConditionsResponsePathSelectorConditions struct{}

func (ListConditionsResponsePathSelectorConditions) FieldPath() *ListConditionsResponse_FieldTerminalPath {
	return &ListConditionsResponse_FieldTerminalPath{selector: ListConditionsResponse_FieldPathSelectorConditions}
}

func (s ListConditionsResponsePathSelectorConditions) WithValue(value []*condition.Condition) *ListConditionsResponse_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*ListConditionsResponse_FieldTerminalPathValue)
}

func (s ListConditionsResponsePathSelectorConditions) WithArrayOfValues(values [][]*condition.Condition) *ListConditionsResponse_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListConditionsResponse_FieldTerminalPathArrayOfValues)
}

func (s ListConditionsResponsePathSelectorConditions) WithItemValue(value *condition.Condition) *ListConditionsResponse_FieldTerminalPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*ListConditionsResponse_FieldTerminalPathArrayItemValue)
}
func (ListConditionsResponsePathSelectorConditions) WithSubPath(subPath condition.Condition_FieldPath) *ListConditionsResponse_FieldSubPath {
	return &ListConditionsResponse_FieldSubPath{selector: ListConditionsResponse_FieldPathSelectorConditions, subPath: subPath}
}

func (s ListConditionsResponsePathSelectorConditions) WithSubValue(subPathValue condition.Condition_FieldPathValue) *ListConditionsResponse_FieldSubPathValue {
	return &ListConditionsResponse_FieldSubPathValue{ListConditionsResponse_FieldPath: s.WithSubPath(subPathValue), subPathValue: subPathValue}
}

func (s ListConditionsResponsePathSelectorConditions) WithSubArrayOfValues(subPathArrayOfValues condition.Condition_FieldPathArrayOfValues) *ListConditionsResponse_FieldSubPathArrayOfValues {
	return &ListConditionsResponse_FieldSubPathArrayOfValues{ListConditionsResponse_FieldPath: s.WithSubPath(subPathArrayOfValues), subPathArrayOfValues: subPathArrayOfValues}
}

func (s ListConditionsResponsePathSelectorConditions) WithSubArrayItemValue(subPathArrayItemValue condition.Condition_FieldPathArrayItemValue) *ListConditionsResponse_FieldSubPathArrayItemValue {
	return &ListConditionsResponse_FieldSubPathArrayItemValue{ListConditionsResponse_FieldPath: s.WithSubPath(subPathArrayItemValue), subPathItemValue: subPathArrayItemValue}
}

func (ListConditionsResponsePathSelectorConditions) Name() ListConditionsResponsePathSelectorConditionsName {
	return ListConditionsResponsePathSelectorConditionsName{}
}

func (ListConditionsResponsePathSelectorConditions) DisplayName() ListConditionsResponsePathSelectorConditionsDisplayName {
	return ListConditionsResponsePathSelectorConditionsDisplayName{}
}

func (ListConditionsResponsePathSelectorConditions) Description() ListConditionsResponsePathSelectorConditionsDescription {
	return ListConditionsResponsePathSelectorConditionsDescription{}
}

func (ListConditionsResponsePathSelectorConditions) Expression() ListConditionsResponsePathSelectorConditionsExpression {
	return ListConditionsResponsePathSelectorConditionsExpression{}
}

func (ListConditionsResponsePathSelectorConditions) ParameterDeclarations() ListConditionsResponsePathSelectorConditionsParameterDeclarations {
	return ListConditionsResponsePathSelectorConditionsParameterDeclarations{}
}

func (ListConditionsResponsePathSelectorConditions) Metadata() ListConditionsResponsePathSelectorConditionsMetadata {
	return ListConditionsResponsePathSelectorConditionsMetadata{}
}

type ListConditionsResponsePathSelectorConditionsName struct{}

func (ListConditionsResponsePathSelectorConditionsName) FieldPath() *ListConditionsResponse_FieldSubPath {
	return &ListConditionsResponse_FieldSubPath{
		selector: ListConditionsResponse_FieldPathSelectorConditions,
		subPath:  condition.NewConditionFieldPathBuilder().Name().FieldPath(),
	}
}

func (s ListConditionsResponsePathSelectorConditionsName) WithValue(value *condition.Name) *ListConditionsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListConditionsResponse_FieldSubPathValue)
}

func (s ListConditionsResponsePathSelectorConditionsName) WithArrayOfValues(values []*condition.Name) *ListConditionsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListConditionsResponse_FieldSubPathArrayOfValues)
}

type ListConditionsResponsePathSelectorConditionsDisplayName struct{}

func (ListConditionsResponsePathSelectorConditionsDisplayName) FieldPath() *ListConditionsResponse_FieldSubPath {
	return &ListConditionsResponse_FieldSubPath{
		selector: ListConditionsResponse_FieldPathSelectorConditions,
		subPath:  condition.NewConditionFieldPathBuilder().DisplayName().FieldPath(),
	}
}

func (s ListConditionsResponsePathSelectorConditionsDisplayName) WithValue(value string) *ListConditionsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListConditionsResponse_FieldSubPathValue)
}

func (s ListConditionsResponsePathSelectorConditionsDisplayName) WithArrayOfValues(values []string) *ListConditionsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListConditionsResponse_FieldSubPathArrayOfValues)
}

type ListConditionsResponsePathSelectorConditionsDescription struct{}

func (ListConditionsResponsePathSelectorConditionsDescription) FieldPath() *ListConditionsResponse_FieldSubPath {
	return &ListConditionsResponse_FieldSubPath{
		selector: ListConditionsResponse_FieldPathSelectorConditions,
		subPath:  condition.NewConditionFieldPathBuilder().Description().FieldPath(),
	}
}

func (s ListConditionsResponsePathSelectorConditionsDescription) WithValue(value string) *ListConditionsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListConditionsResponse_FieldSubPathValue)
}

func (s ListConditionsResponsePathSelectorConditionsDescription) WithArrayOfValues(values []string) *ListConditionsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListConditionsResponse_FieldSubPathArrayOfValues)
}

type ListConditionsResponsePathSelectorConditionsExpression struct{}

func (ListConditionsResponsePathSelectorConditionsExpression) FieldPath() *ListConditionsResponse_FieldSubPath {
	return &ListConditionsResponse_FieldSubPath{
		selector: ListConditionsResponse_FieldPathSelectorConditions,
		subPath:  condition.NewConditionFieldPathBuilder().Expression().FieldPath(),
	}
}

func (s ListConditionsResponsePathSelectorConditionsExpression) WithValue(value string) *ListConditionsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListConditionsResponse_FieldSubPathValue)
}

func (s ListConditionsResponsePathSelectorConditionsExpression) WithArrayOfValues(values []string) *ListConditionsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListConditionsResponse_FieldSubPathArrayOfValues)
}

type ListConditionsResponsePathSelectorConditionsParameterDeclarations struct{}

func (ListConditionsResponsePathSelectorConditionsParameterDeclarations) FieldPath() *ListConditionsResponse_FieldSubPath {
	return &ListConditionsResponse_FieldSubPath{
		selector: ListConditionsResponse_FieldPathSelectorConditions,
		subPath:  condition.NewConditionFieldPathBuilder().ParameterDeclarations().FieldPath(),
	}
}

func (s ListConditionsResponsePathSelectorConditionsParameterDeclarations) WithValue(value []*condition.Condition_ParameterDeclaration) *ListConditionsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListConditionsResponse_FieldSubPathValue)
}

func (s ListConditionsResponsePathSelectorConditionsParameterDeclarations) WithArrayOfValues(values [][]*condition.Condition_ParameterDeclaration) *ListConditionsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListConditionsResponse_FieldSubPathArrayOfValues)
}

func (s ListConditionsResponsePathSelectorConditionsParameterDeclarations) WithItemValue(value *condition.Condition_ParameterDeclaration) *ListConditionsResponse_FieldSubPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*ListConditionsResponse_FieldSubPathArrayItemValue)
}

func (ListConditionsResponsePathSelectorConditionsParameterDeclarations) Key() ListConditionsResponsePathSelectorConditionsParameterDeclarationsKey {
	return ListConditionsResponsePathSelectorConditionsParameterDeclarationsKey{}
}

func (ListConditionsResponsePathSelectorConditionsParameterDeclarations) Type() ListConditionsResponsePathSelectorConditionsParameterDeclarationsType {
	return ListConditionsResponsePathSelectorConditionsParameterDeclarationsType{}
}

type ListConditionsResponsePathSelectorConditionsParameterDeclarationsKey struct{}

func (ListConditionsResponsePathSelectorConditionsParameterDeclarationsKey) FieldPath() *ListConditionsResponse_FieldSubPath {
	return &ListConditionsResponse_FieldSubPath{
		selector: ListConditionsResponse_FieldPathSelectorConditions,
		subPath:  condition.NewConditionFieldPathBuilder().ParameterDeclarations().Key().FieldPath(),
	}
}

func (s ListConditionsResponsePathSelectorConditionsParameterDeclarationsKey) WithValue(value string) *ListConditionsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListConditionsResponse_FieldSubPathValue)
}

func (s ListConditionsResponsePathSelectorConditionsParameterDeclarationsKey) WithArrayOfValues(values []string) *ListConditionsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListConditionsResponse_FieldSubPathArrayOfValues)
}

type ListConditionsResponsePathSelectorConditionsParameterDeclarationsType struct{}

func (ListConditionsResponsePathSelectorConditionsParameterDeclarationsType) FieldPath() *ListConditionsResponse_FieldSubPath {
	return &ListConditionsResponse_FieldSubPath{
		selector: ListConditionsResponse_FieldPathSelectorConditions,
		subPath:  condition.NewConditionFieldPathBuilder().ParameterDeclarations().Type().FieldPath(),
	}
}

func (s ListConditionsResponsePathSelectorConditionsParameterDeclarationsType) WithValue(value condition.Condition_ParameterType) *ListConditionsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListConditionsResponse_FieldSubPathValue)
}

func (s ListConditionsResponsePathSelectorConditionsParameterDeclarationsType) WithArrayOfValues(values []condition.Condition_ParameterType) *ListConditionsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListConditionsResponse_FieldSubPathArrayOfValues)
}

type ListConditionsResponsePathSelectorConditionsMetadata struct{}

func (ListConditionsResponsePathSelectorConditionsMetadata) FieldPath() *ListConditionsResponse_FieldSubPath {
	return &ListConditionsResponse_FieldSubPath{
		selector: ListConditionsResponse_FieldPathSelectorConditions,
		subPath:  condition.NewConditionFieldPathBuilder().Metadata().FieldPath(),
	}
}

func (s ListConditionsResponsePathSelectorConditionsMetadata) WithValue(value *ntt_meta.Meta) *ListConditionsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListConditionsResponse_FieldSubPathValue)
}

func (s ListConditionsResponsePathSelectorConditionsMetadata) WithArrayOfValues(values []*ntt_meta.Meta) *ListConditionsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListConditionsResponse_FieldSubPathArrayOfValues)
}

func (ListConditionsResponsePathSelectorConditionsMetadata) CreateTime() ListConditionsResponsePathSelectorConditionsMetadataCreateTime {
	return ListConditionsResponsePathSelectorConditionsMetadataCreateTime{}
}

func (ListConditionsResponsePathSelectorConditionsMetadata) UpdateTime() ListConditionsResponsePathSelectorConditionsMetadataUpdateTime {
	return ListConditionsResponsePathSelectorConditionsMetadataUpdateTime{}
}

func (ListConditionsResponsePathSelectorConditionsMetadata) DeleteTime() ListConditionsResponsePathSelectorConditionsMetadataDeleteTime {
	return ListConditionsResponsePathSelectorConditionsMetadataDeleteTime{}
}

func (ListConditionsResponsePathSelectorConditionsMetadata) Uuid() ListConditionsResponsePathSelectorConditionsMetadataUuid {
	return ListConditionsResponsePathSelectorConditionsMetadataUuid{}
}

func (ListConditionsResponsePathSelectorConditionsMetadata) Tags() ListConditionsResponsePathSelectorConditionsMetadataTags {
	return ListConditionsResponsePathSelectorConditionsMetadataTags{}
}

func (ListConditionsResponsePathSelectorConditionsMetadata) Labels() ListConditionsResponsePathSelectorConditionsMetadataLabels {
	return ListConditionsResponsePathSelectorConditionsMetadataLabels{}
}

func (ListConditionsResponsePathSelectorConditionsMetadata) Annotations() ListConditionsResponsePathSelectorConditionsMetadataAnnotations {
	return ListConditionsResponsePathSelectorConditionsMetadataAnnotations{}
}

func (ListConditionsResponsePathSelectorConditionsMetadata) Generation() ListConditionsResponsePathSelectorConditionsMetadataGeneration {
	return ListConditionsResponsePathSelectorConditionsMetadataGeneration{}
}

func (ListConditionsResponsePathSelectorConditionsMetadata) ResourceVersion() ListConditionsResponsePathSelectorConditionsMetadataResourceVersion {
	return ListConditionsResponsePathSelectorConditionsMetadataResourceVersion{}
}

func (ListConditionsResponsePathSelectorConditionsMetadata) OwnerReferences() ListConditionsResponsePathSelectorConditionsMetadataOwnerReferences {
	return ListConditionsResponsePathSelectorConditionsMetadataOwnerReferences{}
}

func (ListConditionsResponsePathSelectorConditionsMetadata) Shards() ListConditionsResponsePathSelectorConditionsMetadataShards {
	return ListConditionsResponsePathSelectorConditionsMetadataShards{}
}

func (ListConditionsResponsePathSelectorConditionsMetadata) Syncing() ListConditionsResponsePathSelectorConditionsMetadataSyncing {
	return ListConditionsResponsePathSelectorConditionsMetadataSyncing{}
}

func (ListConditionsResponsePathSelectorConditionsMetadata) Lifecycle() ListConditionsResponsePathSelectorConditionsMetadataLifecycle {
	return ListConditionsResponsePathSelectorConditionsMetadataLifecycle{}
}

type ListConditionsResponsePathSelectorConditionsMetadataCreateTime struct{}

func (ListConditionsResponsePathSelectorConditionsMetadataCreateTime) FieldPath() *ListConditionsResponse_FieldSubPath {
	return &ListConditionsResponse_FieldSubPath{
		selector: ListConditionsResponse_FieldPathSelectorConditions,
		subPath:  condition.NewConditionFieldPathBuilder().Metadata().CreateTime().FieldPath(),
	}
}

func (s ListConditionsResponsePathSelectorConditionsMetadataCreateTime) WithValue(value *timestamp.Timestamp) *ListConditionsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListConditionsResponse_FieldSubPathValue)
}

func (s ListConditionsResponsePathSelectorConditionsMetadataCreateTime) WithArrayOfValues(values []*timestamp.Timestamp) *ListConditionsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListConditionsResponse_FieldSubPathArrayOfValues)
}

type ListConditionsResponsePathSelectorConditionsMetadataUpdateTime struct{}

func (ListConditionsResponsePathSelectorConditionsMetadataUpdateTime) FieldPath() *ListConditionsResponse_FieldSubPath {
	return &ListConditionsResponse_FieldSubPath{
		selector: ListConditionsResponse_FieldPathSelectorConditions,
		subPath:  condition.NewConditionFieldPathBuilder().Metadata().UpdateTime().FieldPath(),
	}
}

func (s ListConditionsResponsePathSelectorConditionsMetadataUpdateTime) WithValue(value *timestamp.Timestamp) *ListConditionsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListConditionsResponse_FieldSubPathValue)
}

func (s ListConditionsResponsePathSelectorConditionsMetadataUpdateTime) WithArrayOfValues(values []*timestamp.Timestamp) *ListConditionsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListConditionsResponse_FieldSubPathArrayOfValues)
}

type ListConditionsResponsePathSelectorConditionsMetadataDeleteTime struct{}

func (ListConditionsResponsePathSelectorConditionsMetadataDeleteTime) FieldPath() *ListConditionsResponse_FieldSubPath {
	return &ListConditionsResponse_FieldSubPath{
		selector: ListConditionsResponse_FieldPathSelectorConditions,
		subPath:  condition.NewConditionFieldPathBuilder().Metadata().DeleteTime().FieldPath(),
	}
}

func (s ListConditionsResponsePathSelectorConditionsMetadataDeleteTime) WithValue(value *timestamp.Timestamp) *ListConditionsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListConditionsResponse_FieldSubPathValue)
}

func (s ListConditionsResponsePathSelectorConditionsMetadataDeleteTime) WithArrayOfValues(values []*timestamp.Timestamp) *ListConditionsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListConditionsResponse_FieldSubPathArrayOfValues)
}

type ListConditionsResponsePathSelectorConditionsMetadataUuid struct{}

func (ListConditionsResponsePathSelectorConditionsMetadataUuid) FieldPath() *ListConditionsResponse_FieldSubPath {
	return &ListConditionsResponse_FieldSubPath{
		selector: ListConditionsResponse_FieldPathSelectorConditions,
		subPath:  condition.NewConditionFieldPathBuilder().Metadata().Uuid().FieldPath(),
	}
}

func (s ListConditionsResponsePathSelectorConditionsMetadataUuid) WithValue(value string) *ListConditionsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListConditionsResponse_FieldSubPathValue)
}

func (s ListConditionsResponsePathSelectorConditionsMetadataUuid) WithArrayOfValues(values []string) *ListConditionsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListConditionsResponse_FieldSubPathArrayOfValues)
}

type ListConditionsResponsePathSelectorConditionsMetadataTags struct{}

func (ListConditionsResponsePathSelectorConditionsMetadataTags) FieldPath() *ListConditionsResponse_FieldSubPath {
	return &ListConditionsResponse_FieldSubPath{
		selector: ListConditionsResponse_FieldPathSelectorConditions,
		subPath:  condition.NewConditionFieldPathBuilder().Metadata().Tags().FieldPath(),
	}
}

func (s ListConditionsResponsePathSelectorConditionsMetadataTags) WithValue(value []string) *ListConditionsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListConditionsResponse_FieldSubPathValue)
}

func (s ListConditionsResponsePathSelectorConditionsMetadataTags) WithArrayOfValues(values [][]string) *ListConditionsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListConditionsResponse_FieldSubPathArrayOfValues)
}

func (s ListConditionsResponsePathSelectorConditionsMetadataTags) WithItemValue(value string) *ListConditionsResponse_FieldSubPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*ListConditionsResponse_FieldSubPathArrayItemValue)
}

type ListConditionsResponsePathSelectorConditionsMetadataLabels struct{}

func (ListConditionsResponsePathSelectorConditionsMetadataLabels) FieldPath() *ListConditionsResponse_FieldSubPath {
	return &ListConditionsResponse_FieldSubPath{
		selector: ListConditionsResponse_FieldPathSelectorConditions,
		subPath:  condition.NewConditionFieldPathBuilder().Metadata().Labels().FieldPath(),
	}
}

func (s ListConditionsResponsePathSelectorConditionsMetadataLabels) WithValue(value map[string]string) *ListConditionsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListConditionsResponse_FieldSubPathValue)
}

func (s ListConditionsResponsePathSelectorConditionsMetadataLabels) WithArrayOfValues(values []map[string]string) *ListConditionsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListConditionsResponse_FieldSubPathArrayOfValues)
}

func (ListConditionsResponsePathSelectorConditionsMetadataLabels) WithKey(key string) ListConditionsResponseMapPathSelectorConditionsMetadataLabels {
	return ListConditionsResponseMapPathSelectorConditionsMetadataLabels{key: key}
}

type ListConditionsResponseMapPathSelectorConditionsMetadataLabels struct {
	key string
}

func (s ListConditionsResponseMapPathSelectorConditionsMetadataLabels) FieldPath() *ListConditionsResponse_FieldSubPath {
	return &ListConditionsResponse_FieldSubPath{
		selector: ListConditionsResponse_FieldPathSelectorConditions,
		subPath:  condition.NewConditionFieldPathBuilder().Metadata().Labels().WithKey(s.key).FieldPath(),
	}
}

func (s ListConditionsResponseMapPathSelectorConditionsMetadataLabels) WithValue(value string) *ListConditionsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListConditionsResponse_FieldSubPathValue)
}

func (s ListConditionsResponseMapPathSelectorConditionsMetadataLabels) WithArrayOfValues(values []string) *ListConditionsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListConditionsResponse_FieldSubPathArrayOfValues)
}

type ListConditionsResponsePathSelectorConditionsMetadataAnnotations struct{}

func (ListConditionsResponsePathSelectorConditionsMetadataAnnotations) FieldPath() *ListConditionsResponse_FieldSubPath {
	return &ListConditionsResponse_FieldSubPath{
		selector: ListConditionsResponse_FieldPathSelectorConditions,
		subPath:  condition.NewConditionFieldPathBuilder().Metadata().Annotations().FieldPath(),
	}
}

func (s ListConditionsResponsePathSelectorConditionsMetadataAnnotations) WithValue(value map[string]string) *ListConditionsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListConditionsResponse_FieldSubPathValue)
}

func (s ListConditionsResponsePathSelectorConditionsMetadataAnnotations) WithArrayOfValues(values []map[string]string) *ListConditionsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListConditionsResponse_FieldSubPathArrayOfValues)
}

func (ListConditionsResponsePathSelectorConditionsMetadataAnnotations) WithKey(key string) ListConditionsResponseMapPathSelectorConditionsMetadataAnnotations {
	return ListConditionsResponseMapPathSelectorConditionsMetadataAnnotations{key: key}
}

type ListConditionsResponseMapPathSelectorConditionsMetadataAnnotations struct {
	key string
}

func (s ListConditionsResponseMapPathSelectorConditionsMetadataAnnotations) FieldPath() *ListConditionsResponse_FieldSubPath {
	return &ListConditionsResponse_FieldSubPath{
		selector: ListConditionsResponse_FieldPathSelectorConditions,
		subPath:  condition.NewConditionFieldPathBuilder().Metadata().Annotations().WithKey(s.key).FieldPath(),
	}
}

func (s ListConditionsResponseMapPathSelectorConditionsMetadataAnnotations) WithValue(value string) *ListConditionsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListConditionsResponse_FieldSubPathValue)
}

func (s ListConditionsResponseMapPathSelectorConditionsMetadataAnnotations) WithArrayOfValues(values []string) *ListConditionsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListConditionsResponse_FieldSubPathArrayOfValues)
}

type ListConditionsResponsePathSelectorConditionsMetadataGeneration struct{}

func (ListConditionsResponsePathSelectorConditionsMetadataGeneration) FieldPath() *ListConditionsResponse_FieldSubPath {
	return &ListConditionsResponse_FieldSubPath{
		selector: ListConditionsResponse_FieldPathSelectorConditions,
		subPath:  condition.NewConditionFieldPathBuilder().Metadata().Generation().FieldPath(),
	}
}

func (s ListConditionsResponsePathSelectorConditionsMetadataGeneration) WithValue(value int64) *ListConditionsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListConditionsResponse_FieldSubPathValue)
}

func (s ListConditionsResponsePathSelectorConditionsMetadataGeneration) WithArrayOfValues(values []int64) *ListConditionsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListConditionsResponse_FieldSubPathArrayOfValues)
}

type ListConditionsResponsePathSelectorConditionsMetadataResourceVersion struct{}

func (ListConditionsResponsePathSelectorConditionsMetadataResourceVersion) FieldPath() *ListConditionsResponse_FieldSubPath {
	return &ListConditionsResponse_FieldSubPath{
		selector: ListConditionsResponse_FieldPathSelectorConditions,
		subPath:  condition.NewConditionFieldPathBuilder().Metadata().ResourceVersion().FieldPath(),
	}
}

func (s ListConditionsResponsePathSelectorConditionsMetadataResourceVersion) WithValue(value string) *ListConditionsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListConditionsResponse_FieldSubPathValue)
}

func (s ListConditionsResponsePathSelectorConditionsMetadataResourceVersion) WithArrayOfValues(values []string) *ListConditionsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListConditionsResponse_FieldSubPathArrayOfValues)
}

type ListConditionsResponsePathSelectorConditionsMetadataOwnerReferences struct{}

func (ListConditionsResponsePathSelectorConditionsMetadataOwnerReferences) FieldPath() *ListConditionsResponse_FieldSubPath {
	return &ListConditionsResponse_FieldSubPath{
		selector: ListConditionsResponse_FieldPathSelectorConditions,
		subPath:  condition.NewConditionFieldPathBuilder().Metadata().OwnerReferences().FieldPath(),
	}
}

func (s ListConditionsResponsePathSelectorConditionsMetadataOwnerReferences) WithValue(value []*ntt_meta.OwnerReference) *ListConditionsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListConditionsResponse_FieldSubPathValue)
}

func (s ListConditionsResponsePathSelectorConditionsMetadataOwnerReferences) WithArrayOfValues(values [][]*ntt_meta.OwnerReference) *ListConditionsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListConditionsResponse_FieldSubPathArrayOfValues)
}

func (s ListConditionsResponsePathSelectorConditionsMetadataOwnerReferences) WithItemValue(value *ntt_meta.OwnerReference) *ListConditionsResponse_FieldSubPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*ListConditionsResponse_FieldSubPathArrayItemValue)
}

func (ListConditionsResponsePathSelectorConditionsMetadataOwnerReferences) Kind() ListConditionsResponsePathSelectorConditionsMetadataOwnerReferencesKind {
	return ListConditionsResponsePathSelectorConditionsMetadataOwnerReferencesKind{}
}

func (ListConditionsResponsePathSelectorConditionsMetadataOwnerReferences) Version() ListConditionsResponsePathSelectorConditionsMetadataOwnerReferencesVersion {
	return ListConditionsResponsePathSelectorConditionsMetadataOwnerReferencesVersion{}
}

func (ListConditionsResponsePathSelectorConditionsMetadataOwnerReferences) Name() ListConditionsResponsePathSelectorConditionsMetadataOwnerReferencesName {
	return ListConditionsResponsePathSelectorConditionsMetadataOwnerReferencesName{}
}

func (ListConditionsResponsePathSelectorConditionsMetadataOwnerReferences) Region() ListConditionsResponsePathSelectorConditionsMetadataOwnerReferencesRegion {
	return ListConditionsResponsePathSelectorConditionsMetadataOwnerReferencesRegion{}
}

func (ListConditionsResponsePathSelectorConditionsMetadataOwnerReferences) Controller() ListConditionsResponsePathSelectorConditionsMetadataOwnerReferencesController {
	return ListConditionsResponsePathSelectorConditionsMetadataOwnerReferencesController{}
}

func (ListConditionsResponsePathSelectorConditionsMetadataOwnerReferences) BlockOwnerDeletion() ListConditionsResponsePathSelectorConditionsMetadataOwnerReferencesBlockOwnerDeletion {
	return ListConditionsResponsePathSelectorConditionsMetadataOwnerReferencesBlockOwnerDeletion{}
}

func (ListConditionsResponsePathSelectorConditionsMetadataOwnerReferences) RequiresOwnerReference() ListConditionsResponsePathSelectorConditionsMetadataOwnerReferencesRequiresOwnerReference {
	return ListConditionsResponsePathSelectorConditionsMetadataOwnerReferencesRequiresOwnerReference{}
}

type ListConditionsResponsePathSelectorConditionsMetadataOwnerReferencesKind struct{}

func (ListConditionsResponsePathSelectorConditionsMetadataOwnerReferencesKind) FieldPath() *ListConditionsResponse_FieldSubPath {
	return &ListConditionsResponse_FieldSubPath{
		selector: ListConditionsResponse_FieldPathSelectorConditions,
		subPath:  condition.NewConditionFieldPathBuilder().Metadata().OwnerReferences().Kind().FieldPath(),
	}
}

func (s ListConditionsResponsePathSelectorConditionsMetadataOwnerReferencesKind) WithValue(value string) *ListConditionsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListConditionsResponse_FieldSubPathValue)
}

func (s ListConditionsResponsePathSelectorConditionsMetadataOwnerReferencesKind) WithArrayOfValues(values []string) *ListConditionsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListConditionsResponse_FieldSubPathArrayOfValues)
}

type ListConditionsResponsePathSelectorConditionsMetadataOwnerReferencesVersion struct{}

func (ListConditionsResponsePathSelectorConditionsMetadataOwnerReferencesVersion) FieldPath() *ListConditionsResponse_FieldSubPath {
	return &ListConditionsResponse_FieldSubPath{
		selector: ListConditionsResponse_FieldPathSelectorConditions,
		subPath:  condition.NewConditionFieldPathBuilder().Metadata().OwnerReferences().Version().FieldPath(),
	}
}

func (s ListConditionsResponsePathSelectorConditionsMetadataOwnerReferencesVersion) WithValue(value string) *ListConditionsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListConditionsResponse_FieldSubPathValue)
}

func (s ListConditionsResponsePathSelectorConditionsMetadataOwnerReferencesVersion) WithArrayOfValues(values []string) *ListConditionsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListConditionsResponse_FieldSubPathArrayOfValues)
}

type ListConditionsResponsePathSelectorConditionsMetadataOwnerReferencesName struct{}

func (ListConditionsResponsePathSelectorConditionsMetadataOwnerReferencesName) FieldPath() *ListConditionsResponse_FieldSubPath {
	return &ListConditionsResponse_FieldSubPath{
		selector: ListConditionsResponse_FieldPathSelectorConditions,
		subPath:  condition.NewConditionFieldPathBuilder().Metadata().OwnerReferences().Name().FieldPath(),
	}
}

func (s ListConditionsResponsePathSelectorConditionsMetadataOwnerReferencesName) WithValue(value string) *ListConditionsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListConditionsResponse_FieldSubPathValue)
}

func (s ListConditionsResponsePathSelectorConditionsMetadataOwnerReferencesName) WithArrayOfValues(values []string) *ListConditionsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListConditionsResponse_FieldSubPathArrayOfValues)
}

type ListConditionsResponsePathSelectorConditionsMetadataOwnerReferencesRegion struct{}

func (ListConditionsResponsePathSelectorConditionsMetadataOwnerReferencesRegion) FieldPath() *ListConditionsResponse_FieldSubPath {
	return &ListConditionsResponse_FieldSubPath{
		selector: ListConditionsResponse_FieldPathSelectorConditions,
		subPath:  condition.NewConditionFieldPathBuilder().Metadata().OwnerReferences().Region().FieldPath(),
	}
}

func (s ListConditionsResponsePathSelectorConditionsMetadataOwnerReferencesRegion) WithValue(value string) *ListConditionsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListConditionsResponse_FieldSubPathValue)
}

func (s ListConditionsResponsePathSelectorConditionsMetadataOwnerReferencesRegion) WithArrayOfValues(values []string) *ListConditionsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListConditionsResponse_FieldSubPathArrayOfValues)
}

type ListConditionsResponsePathSelectorConditionsMetadataOwnerReferencesController struct{}

func (ListConditionsResponsePathSelectorConditionsMetadataOwnerReferencesController) FieldPath() *ListConditionsResponse_FieldSubPath {
	return &ListConditionsResponse_FieldSubPath{
		selector: ListConditionsResponse_FieldPathSelectorConditions,
		subPath:  condition.NewConditionFieldPathBuilder().Metadata().OwnerReferences().Controller().FieldPath(),
	}
}

func (s ListConditionsResponsePathSelectorConditionsMetadataOwnerReferencesController) WithValue(value bool) *ListConditionsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListConditionsResponse_FieldSubPathValue)
}

func (s ListConditionsResponsePathSelectorConditionsMetadataOwnerReferencesController) WithArrayOfValues(values []bool) *ListConditionsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListConditionsResponse_FieldSubPathArrayOfValues)
}

type ListConditionsResponsePathSelectorConditionsMetadataOwnerReferencesBlockOwnerDeletion struct{}

func (ListConditionsResponsePathSelectorConditionsMetadataOwnerReferencesBlockOwnerDeletion) FieldPath() *ListConditionsResponse_FieldSubPath {
	return &ListConditionsResponse_FieldSubPath{
		selector: ListConditionsResponse_FieldPathSelectorConditions,
		subPath:  condition.NewConditionFieldPathBuilder().Metadata().OwnerReferences().BlockOwnerDeletion().FieldPath(),
	}
}

func (s ListConditionsResponsePathSelectorConditionsMetadataOwnerReferencesBlockOwnerDeletion) WithValue(value bool) *ListConditionsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListConditionsResponse_FieldSubPathValue)
}

func (s ListConditionsResponsePathSelectorConditionsMetadataOwnerReferencesBlockOwnerDeletion) WithArrayOfValues(values []bool) *ListConditionsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListConditionsResponse_FieldSubPathArrayOfValues)
}

type ListConditionsResponsePathSelectorConditionsMetadataOwnerReferencesRequiresOwnerReference struct{}

func (ListConditionsResponsePathSelectorConditionsMetadataOwnerReferencesRequiresOwnerReference) FieldPath() *ListConditionsResponse_FieldSubPath {
	return &ListConditionsResponse_FieldSubPath{
		selector: ListConditionsResponse_FieldPathSelectorConditions,
		subPath:  condition.NewConditionFieldPathBuilder().Metadata().OwnerReferences().RequiresOwnerReference().FieldPath(),
	}
}

func (s ListConditionsResponsePathSelectorConditionsMetadataOwnerReferencesRequiresOwnerReference) WithValue(value bool) *ListConditionsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListConditionsResponse_FieldSubPathValue)
}

func (s ListConditionsResponsePathSelectorConditionsMetadataOwnerReferencesRequiresOwnerReference) WithArrayOfValues(values []bool) *ListConditionsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListConditionsResponse_FieldSubPathArrayOfValues)
}

type ListConditionsResponsePathSelectorConditionsMetadataShards struct{}

func (ListConditionsResponsePathSelectorConditionsMetadataShards) FieldPath() *ListConditionsResponse_FieldSubPath {
	return &ListConditionsResponse_FieldSubPath{
		selector: ListConditionsResponse_FieldPathSelectorConditions,
		subPath:  condition.NewConditionFieldPathBuilder().Metadata().Shards().FieldPath(),
	}
}

func (s ListConditionsResponsePathSelectorConditionsMetadataShards) WithValue(value map[string]int64) *ListConditionsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListConditionsResponse_FieldSubPathValue)
}

func (s ListConditionsResponsePathSelectorConditionsMetadataShards) WithArrayOfValues(values []map[string]int64) *ListConditionsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListConditionsResponse_FieldSubPathArrayOfValues)
}

func (ListConditionsResponsePathSelectorConditionsMetadataShards) WithKey(key string) ListConditionsResponseMapPathSelectorConditionsMetadataShards {
	return ListConditionsResponseMapPathSelectorConditionsMetadataShards{key: key}
}

type ListConditionsResponseMapPathSelectorConditionsMetadataShards struct {
	key string
}

func (s ListConditionsResponseMapPathSelectorConditionsMetadataShards) FieldPath() *ListConditionsResponse_FieldSubPath {
	return &ListConditionsResponse_FieldSubPath{
		selector: ListConditionsResponse_FieldPathSelectorConditions,
		subPath:  condition.NewConditionFieldPathBuilder().Metadata().Shards().WithKey(s.key).FieldPath(),
	}
}

func (s ListConditionsResponseMapPathSelectorConditionsMetadataShards) WithValue(value int64) *ListConditionsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListConditionsResponse_FieldSubPathValue)
}

func (s ListConditionsResponseMapPathSelectorConditionsMetadataShards) WithArrayOfValues(values []int64) *ListConditionsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListConditionsResponse_FieldSubPathArrayOfValues)
}

type ListConditionsResponsePathSelectorConditionsMetadataSyncing struct{}

func (ListConditionsResponsePathSelectorConditionsMetadataSyncing) FieldPath() *ListConditionsResponse_FieldSubPath {
	return &ListConditionsResponse_FieldSubPath{
		selector: ListConditionsResponse_FieldPathSelectorConditions,
		subPath:  condition.NewConditionFieldPathBuilder().Metadata().Syncing().FieldPath(),
	}
}

func (s ListConditionsResponsePathSelectorConditionsMetadataSyncing) WithValue(value *ntt_meta.SyncingMeta) *ListConditionsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListConditionsResponse_FieldSubPathValue)
}

func (s ListConditionsResponsePathSelectorConditionsMetadataSyncing) WithArrayOfValues(values []*ntt_meta.SyncingMeta) *ListConditionsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListConditionsResponse_FieldSubPathArrayOfValues)
}

func (ListConditionsResponsePathSelectorConditionsMetadataSyncing) OwningRegion() ListConditionsResponsePathSelectorConditionsMetadataSyncingOwningRegion {
	return ListConditionsResponsePathSelectorConditionsMetadataSyncingOwningRegion{}
}

func (ListConditionsResponsePathSelectorConditionsMetadataSyncing) Regions() ListConditionsResponsePathSelectorConditionsMetadataSyncingRegions {
	return ListConditionsResponsePathSelectorConditionsMetadataSyncingRegions{}
}

type ListConditionsResponsePathSelectorConditionsMetadataSyncingOwningRegion struct{}

func (ListConditionsResponsePathSelectorConditionsMetadataSyncingOwningRegion) FieldPath() *ListConditionsResponse_FieldSubPath {
	return &ListConditionsResponse_FieldSubPath{
		selector: ListConditionsResponse_FieldPathSelectorConditions,
		subPath:  condition.NewConditionFieldPathBuilder().Metadata().Syncing().OwningRegion().FieldPath(),
	}
}

func (s ListConditionsResponsePathSelectorConditionsMetadataSyncingOwningRegion) WithValue(value string) *ListConditionsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListConditionsResponse_FieldSubPathValue)
}

func (s ListConditionsResponsePathSelectorConditionsMetadataSyncingOwningRegion) WithArrayOfValues(values []string) *ListConditionsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListConditionsResponse_FieldSubPathArrayOfValues)
}

type ListConditionsResponsePathSelectorConditionsMetadataSyncingRegions struct{}

func (ListConditionsResponsePathSelectorConditionsMetadataSyncingRegions) FieldPath() *ListConditionsResponse_FieldSubPath {
	return &ListConditionsResponse_FieldSubPath{
		selector: ListConditionsResponse_FieldPathSelectorConditions,
		subPath:  condition.NewConditionFieldPathBuilder().Metadata().Syncing().Regions().FieldPath(),
	}
}

func (s ListConditionsResponsePathSelectorConditionsMetadataSyncingRegions) WithValue(value []string) *ListConditionsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListConditionsResponse_FieldSubPathValue)
}

func (s ListConditionsResponsePathSelectorConditionsMetadataSyncingRegions) WithArrayOfValues(values [][]string) *ListConditionsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListConditionsResponse_FieldSubPathArrayOfValues)
}

func (s ListConditionsResponsePathSelectorConditionsMetadataSyncingRegions) WithItemValue(value string) *ListConditionsResponse_FieldSubPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*ListConditionsResponse_FieldSubPathArrayItemValue)
}

type ListConditionsResponsePathSelectorConditionsMetadataLifecycle struct{}

func (ListConditionsResponsePathSelectorConditionsMetadataLifecycle) FieldPath() *ListConditionsResponse_FieldSubPath {
	return &ListConditionsResponse_FieldSubPath{
		selector: ListConditionsResponse_FieldPathSelectorConditions,
		subPath:  condition.NewConditionFieldPathBuilder().Metadata().Lifecycle().FieldPath(),
	}
}

func (s ListConditionsResponsePathSelectorConditionsMetadataLifecycle) WithValue(value *ntt_meta.Lifecycle) *ListConditionsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListConditionsResponse_FieldSubPathValue)
}

func (s ListConditionsResponsePathSelectorConditionsMetadataLifecycle) WithArrayOfValues(values []*ntt_meta.Lifecycle) *ListConditionsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListConditionsResponse_FieldSubPathArrayOfValues)
}

func (ListConditionsResponsePathSelectorConditionsMetadataLifecycle) State() ListConditionsResponsePathSelectorConditionsMetadataLifecycleState {
	return ListConditionsResponsePathSelectorConditionsMetadataLifecycleState{}
}

func (ListConditionsResponsePathSelectorConditionsMetadataLifecycle) BlockDeletion() ListConditionsResponsePathSelectorConditionsMetadataLifecycleBlockDeletion {
	return ListConditionsResponsePathSelectorConditionsMetadataLifecycleBlockDeletion{}
}

type ListConditionsResponsePathSelectorConditionsMetadataLifecycleState struct{}

func (ListConditionsResponsePathSelectorConditionsMetadataLifecycleState) FieldPath() *ListConditionsResponse_FieldSubPath {
	return &ListConditionsResponse_FieldSubPath{
		selector: ListConditionsResponse_FieldPathSelectorConditions,
		subPath:  condition.NewConditionFieldPathBuilder().Metadata().Lifecycle().State().FieldPath(),
	}
}

func (s ListConditionsResponsePathSelectorConditionsMetadataLifecycleState) WithValue(value ntt_meta.Lifecycle_State) *ListConditionsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListConditionsResponse_FieldSubPathValue)
}

func (s ListConditionsResponsePathSelectorConditionsMetadataLifecycleState) WithArrayOfValues(values []ntt_meta.Lifecycle_State) *ListConditionsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListConditionsResponse_FieldSubPathArrayOfValues)
}

type ListConditionsResponsePathSelectorConditionsMetadataLifecycleBlockDeletion struct{}

func (ListConditionsResponsePathSelectorConditionsMetadataLifecycleBlockDeletion) FieldPath() *ListConditionsResponse_FieldSubPath {
	return &ListConditionsResponse_FieldSubPath{
		selector: ListConditionsResponse_FieldPathSelectorConditions,
		subPath:  condition.NewConditionFieldPathBuilder().Metadata().Lifecycle().BlockDeletion().FieldPath(),
	}
}

func (s ListConditionsResponsePathSelectorConditionsMetadataLifecycleBlockDeletion) WithValue(value bool) *ListConditionsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListConditionsResponse_FieldSubPathValue)
}

func (s ListConditionsResponsePathSelectorConditionsMetadataLifecycleBlockDeletion) WithArrayOfValues(values []bool) *ListConditionsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListConditionsResponse_FieldSubPathArrayOfValues)
}

type ListConditionsResponsePathSelectorPrevPageToken struct{}

func (ListConditionsResponsePathSelectorPrevPageToken) FieldPath() *ListConditionsResponse_FieldTerminalPath {
	return &ListConditionsResponse_FieldTerminalPath{selector: ListConditionsResponse_FieldPathSelectorPrevPageToken}
}

func (s ListConditionsResponsePathSelectorPrevPageToken) WithValue(value *condition.PagerCursor) *ListConditionsResponse_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*ListConditionsResponse_FieldTerminalPathValue)
}

func (s ListConditionsResponsePathSelectorPrevPageToken) WithArrayOfValues(values []*condition.PagerCursor) *ListConditionsResponse_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListConditionsResponse_FieldTerminalPathArrayOfValues)
}

type ListConditionsResponsePathSelectorNextPageToken struct{}

func (ListConditionsResponsePathSelectorNextPageToken) FieldPath() *ListConditionsResponse_FieldTerminalPath {
	return &ListConditionsResponse_FieldTerminalPath{selector: ListConditionsResponse_FieldPathSelectorNextPageToken}
}

func (s ListConditionsResponsePathSelectorNextPageToken) WithValue(value *condition.PagerCursor) *ListConditionsResponse_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*ListConditionsResponse_FieldTerminalPathValue)
}

func (s ListConditionsResponsePathSelectorNextPageToken) WithArrayOfValues(values []*condition.PagerCursor) *ListConditionsResponse_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListConditionsResponse_FieldTerminalPathArrayOfValues)
}

type WatchConditionRequestFieldPathBuilder struct{}

func NewWatchConditionRequestFieldPathBuilder() WatchConditionRequestFieldPathBuilder {
	return WatchConditionRequestFieldPathBuilder{}
}
func (WatchConditionRequestFieldPathBuilder) Name() WatchConditionRequestPathSelectorName {
	return WatchConditionRequestPathSelectorName{}
}
func (WatchConditionRequestFieldPathBuilder) FieldMask() WatchConditionRequestPathSelectorFieldMask {
	return WatchConditionRequestPathSelectorFieldMask{}
}
func (WatchConditionRequestFieldPathBuilder) View() WatchConditionRequestPathSelectorView {
	return WatchConditionRequestPathSelectorView{}
}

type WatchConditionRequestPathSelectorName struct{}

func (WatchConditionRequestPathSelectorName) FieldPath() *WatchConditionRequest_FieldTerminalPath {
	return &WatchConditionRequest_FieldTerminalPath{selector: WatchConditionRequest_FieldPathSelectorName}
}

func (s WatchConditionRequestPathSelectorName) WithValue(value *condition.Reference) *WatchConditionRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*WatchConditionRequest_FieldTerminalPathValue)
}

func (s WatchConditionRequestPathSelectorName) WithArrayOfValues(values []*condition.Reference) *WatchConditionRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*WatchConditionRequest_FieldTerminalPathArrayOfValues)
}

type WatchConditionRequestPathSelectorFieldMask struct{}

func (WatchConditionRequestPathSelectorFieldMask) FieldPath() *WatchConditionRequest_FieldTerminalPath {
	return &WatchConditionRequest_FieldTerminalPath{selector: WatchConditionRequest_FieldPathSelectorFieldMask}
}

func (s WatchConditionRequestPathSelectorFieldMask) WithValue(value *condition.Condition_FieldMask) *WatchConditionRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*WatchConditionRequest_FieldTerminalPathValue)
}

func (s WatchConditionRequestPathSelectorFieldMask) WithArrayOfValues(values []*condition.Condition_FieldMask) *WatchConditionRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*WatchConditionRequest_FieldTerminalPathArrayOfValues)
}

type WatchConditionRequestPathSelectorView struct{}

func (WatchConditionRequestPathSelectorView) FieldPath() *WatchConditionRequest_FieldTerminalPath {
	return &WatchConditionRequest_FieldTerminalPath{selector: WatchConditionRequest_FieldPathSelectorView}
}

func (s WatchConditionRequestPathSelectorView) WithValue(value view.View) *WatchConditionRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*WatchConditionRequest_FieldTerminalPathValue)
}

func (s WatchConditionRequestPathSelectorView) WithArrayOfValues(values []view.View) *WatchConditionRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*WatchConditionRequest_FieldTerminalPathArrayOfValues)
}

type WatchConditionResponseFieldPathBuilder struct{}

func NewWatchConditionResponseFieldPathBuilder() WatchConditionResponseFieldPathBuilder {
	return WatchConditionResponseFieldPathBuilder{}
}
func (WatchConditionResponseFieldPathBuilder) Change() WatchConditionResponsePathSelectorChange {
	return WatchConditionResponsePathSelectorChange{}
}

type WatchConditionResponsePathSelectorChange struct{}

func (WatchConditionResponsePathSelectorChange) FieldPath() *WatchConditionResponse_FieldTerminalPath {
	return &WatchConditionResponse_FieldTerminalPath{selector: WatchConditionResponse_FieldPathSelectorChange}
}

func (s WatchConditionResponsePathSelectorChange) WithValue(value *condition.ConditionChange) *WatchConditionResponse_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*WatchConditionResponse_FieldTerminalPathValue)
}

func (s WatchConditionResponsePathSelectorChange) WithArrayOfValues(values []*condition.ConditionChange) *WatchConditionResponse_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*WatchConditionResponse_FieldTerminalPathArrayOfValues)
}

type WatchConditionsRequestFieldPathBuilder struct{}

func NewWatchConditionsRequestFieldPathBuilder() WatchConditionsRequestFieldPathBuilder {
	return WatchConditionsRequestFieldPathBuilder{}
}
func (WatchConditionsRequestFieldPathBuilder) Type() WatchConditionsRequestPathSelectorType {
	return WatchConditionsRequestPathSelectorType{}
}
func (WatchConditionsRequestFieldPathBuilder) Parent() WatchConditionsRequestPathSelectorParent {
	return WatchConditionsRequestPathSelectorParent{}
}
func (WatchConditionsRequestFieldPathBuilder) PageSize() WatchConditionsRequestPathSelectorPageSize {
	return WatchConditionsRequestPathSelectorPageSize{}
}
func (WatchConditionsRequestFieldPathBuilder) PageToken() WatchConditionsRequestPathSelectorPageToken {
	return WatchConditionsRequestPathSelectorPageToken{}
}
func (WatchConditionsRequestFieldPathBuilder) OrderBy() WatchConditionsRequestPathSelectorOrderBy {
	return WatchConditionsRequestPathSelectorOrderBy{}
}
func (WatchConditionsRequestFieldPathBuilder) ResumeToken() WatchConditionsRequestPathSelectorResumeToken {
	return WatchConditionsRequestPathSelectorResumeToken{}
}
func (WatchConditionsRequestFieldPathBuilder) StartingTime() WatchConditionsRequestPathSelectorStartingTime {
	return WatchConditionsRequestPathSelectorStartingTime{}
}
func (WatchConditionsRequestFieldPathBuilder) Filter() WatchConditionsRequestPathSelectorFilter {
	return WatchConditionsRequestPathSelectorFilter{}
}
func (WatchConditionsRequestFieldPathBuilder) FieldMask() WatchConditionsRequestPathSelectorFieldMask {
	return WatchConditionsRequestPathSelectorFieldMask{}
}
func (WatchConditionsRequestFieldPathBuilder) View() WatchConditionsRequestPathSelectorView {
	return WatchConditionsRequestPathSelectorView{}
}
func (WatchConditionsRequestFieldPathBuilder) MaxChunkSize() WatchConditionsRequestPathSelectorMaxChunkSize {
	return WatchConditionsRequestPathSelectorMaxChunkSize{}
}

type WatchConditionsRequestPathSelectorType struct{}

func (WatchConditionsRequestPathSelectorType) FieldPath() *WatchConditionsRequest_FieldTerminalPath {
	return &WatchConditionsRequest_FieldTerminalPath{selector: WatchConditionsRequest_FieldPathSelectorType}
}

func (s WatchConditionsRequestPathSelectorType) WithValue(value watch_type.WatchType) *WatchConditionsRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*WatchConditionsRequest_FieldTerminalPathValue)
}

func (s WatchConditionsRequestPathSelectorType) WithArrayOfValues(values []watch_type.WatchType) *WatchConditionsRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*WatchConditionsRequest_FieldTerminalPathArrayOfValues)
}

type WatchConditionsRequestPathSelectorParent struct{}

func (WatchConditionsRequestPathSelectorParent) FieldPath() *WatchConditionsRequest_FieldTerminalPath {
	return &WatchConditionsRequest_FieldTerminalPath{selector: WatchConditionsRequest_FieldPathSelectorParent}
}

func (s WatchConditionsRequestPathSelectorParent) WithValue(value *condition.ParentReference) *WatchConditionsRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*WatchConditionsRequest_FieldTerminalPathValue)
}

func (s WatchConditionsRequestPathSelectorParent) WithArrayOfValues(values []*condition.ParentReference) *WatchConditionsRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*WatchConditionsRequest_FieldTerminalPathArrayOfValues)
}

type WatchConditionsRequestPathSelectorPageSize struct{}

func (WatchConditionsRequestPathSelectorPageSize) FieldPath() *WatchConditionsRequest_FieldTerminalPath {
	return &WatchConditionsRequest_FieldTerminalPath{selector: WatchConditionsRequest_FieldPathSelectorPageSize}
}

func (s WatchConditionsRequestPathSelectorPageSize) WithValue(value int32) *WatchConditionsRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*WatchConditionsRequest_FieldTerminalPathValue)
}

func (s WatchConditionsRequestPathSelectorPageSize) WithArrayOfValues(values []int32) *WatchConditionsRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*WatchConditionsRequest_FieldTerminalPathArrayOfValues)
}

type WatchConditionsRequestPathSelectorPageToken struct{}

func (WatchConditionsRequestPathSelectorPageToken) FieldPath() *WatchConditionsRequest_FieldTerminalPath {
	return &WatchConditionsRequest_FieldTerminalPath{selector: WatchConditionsRequest_FieldPathSelectorPageToken}
}

func (s WatchConditionsRequestPathSelectorPageToken) WithValue(value *condition.PagerCursor) *WatchConditionsRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*WatchConditionsRequest_FieldTerminalPathValue)
}

func (s WatchConditionsRequestPathSelectorPageToken) WithArrayOfValues(values []*condition.PagerCursor) *WatchConditionsRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*WatchConditionsRequest_FieldTerminalPathArrayOfValues)
}

type WatchConditionsRequestPathSelectorOrderBy struct{}

func (WatchConditionsRequestPathSelectorOrderBy) FieldPath() *WatchConditionsRequest_FieldTerminalPath {
	return &WatchConditionsRequest_FieldTerminalPath{selector: WatchConditionsRequest_FieldPathSelectorOrderBy}
}

func (s WatchConditionsRequestPathSelectorOrderBy) WithValue(value *condition.OrderBy) *WatchConditionsRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*WatchConditionsRequest_FieldTerminalPathValue)
}

func (s WatchConditionsRequestPathSelectorOrderBy) WithArrayOfValues(values []*condition.OrderBy) *WatchConditionsRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*WatchConditionsRequest_FieldTerminalPathArrayOfValues)
}

type WatchConditionsRequestPathSelectorResumeToken struct{}

func (WatchConditionsRequestPathSelectorResumeToken) FieldPath() *WatchConditionsRequest_FieldTerminalPath {
	return &WatchConditionsRequest_FieldTerminalPath{selector: WatchConditionsRequest_FieldPathSelectorResumeToken}
}

func (s WatchConditionsRequestPathSelectorResumeToken) WithValue(value string) *WatchConditionsRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*WatchConditionsRequest_FieldTerminalPathValue)
}

func (s WatchConditionsRequestPathSelectorResumeToken) WithArrayOfValues(values []string) *WatchConditionsRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*WatchConditionsRequest_FieldTerminalPathArrayOfValues)
}

type WatchConditionsRequestPathSelectorStartingTime struct{}

func (WatchConditionsRequestPathSelectorStartingTime) FieldPath() *WatchConditionsRequest_FieldTerminalPath {
	return &WatchConditionsRequest_FieldTerminalPath{selector: WatchConditionsRequest_FieldPathSelectorStartingTime}
}

func (s WatchConditionsRequestPathSelectorStartingTime) WithValue(value *timestamp.Timestamp) *WatchConditionsRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*WatchConditionsRequest_FieldTerminalPathValue)
}

func (s WatchConditionsRequestPathSelectorStartingTime) WithArrayOfValues(values []*timestamp.Timestamp) *WatchConditionsRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*WatchConditionsRequest_FieldTerminalPathArrayOfValues)
}

type WatchConditionsRequestPathSelectorFilter struct{}

func (WatchConditionsRequestPathSelectorFilter) FieldPath() *WatchConditionsRequest_FieldTerminalPath {
	return &WatchConditionsRequest_FieldTerminalPath{selector: WatchConditionsRequest_FieldPathSelectorFilter}
}

func (s WatchConditionsRequestPathSelectorFilter) WithValue(value *condition.Filter) *WatchConditionsRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*WatchConditionsRequest_FieldTerminalPathValue)
}

func (s WatchConditionsRequestPathSelectorFilter) WithArrayOfValues(values []*condition.Filter) *WatchConditionsRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*WatchConditionsRequest_FieldTerminalPathArrayOfValues)
}

type WatchConditionsRequestPathSelectorFieldMask struct{}

func (WatchConditionsRequestPathSelectorFieldMask) FieldPath() *WatchConditionsRequest_FieldTerminalPath {
	return &WatchConditionsRequest_FieldTerminalPath{selector: WatchConditionsRequest_FieldPathSelectorFieldMask}
}

func (s WatchConditionsRequestPathSelectorFieldMask) WithValue(value *condition.Condition_FieldMask) *WatchConditionsRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*WatchConditionsRequest_FieldTerminalPathValue)
}

func (s WatchConditionsRequestPathSelectorFieldMask) WithArrayOfValues(values []*condition.Condition_FieldMask) *WatchConditionsRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*WatchConditionsRequest_FieldTerminalPathArrayOfValues)
}

type WatchConditionsRequestPathSelectorView struct{}

func (WatchConditionsRequestPathSelectorView) FieldPath() *WatchConditionsRequest_FieldTerminalPath {
	return &WatchConditionsRequest_FieldTerminalPath{selector: WatchConditionsRequest_FieldPathSelectorView}
}

func (s WatchConditionsRequestPathSelectorView) WithValue(value view.View) *WatchConditionsRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*WatchConditionsRequest_FieldTerminalPathValue)
}

func (s WatchConditionsRequestPathSelectorView) WithArrayOfValues(values []view.View) *WatchConditionsRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*WatchConditionsRequest_FieldTerminalPathArrayOfValues)
}

type WatchConditionsRequestPathSelectorMaxChunkSize struct{}

func (WatchConditionsRequestPathSelectorMaxChunkSize) FieldPath() *WatchConditionsRequest_FieldTerminalPath {
	return &WatchConditionsRequest_FieldTerminalPath{selector: WatchConditionsRequest_FieldPathSelectorMaxChunkSize}
}

func (s WatchConditionsRequestPathSelectorMaxChunkSize) WithValue(value int32) *WatchConditionsRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*WatchConditionsRequest_FieldTerminalPathValue)
}

func (s WatchConditionsRequestPathSelectorMaxChunkSize) WithArrayOfValues(values []int32) *WatchConditionsRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*WatchConditionsRequest_FieldTerminalPathArrayOfValues)
}

type WatchConditionsResponseFieldPathBuilder struct{}

func NewWatchConditionsResponseFieldPathBuilder() WatchConditionsResponseFieldPathBuilder {
	return WatchConditionsResponseFieldPathBuilder{}
}
func (WatchConditionsResponseFieldPathBuilder) ConditionChanges() WatchConditionsResponsePathSelectorConditionChanges {
	return WatchConditionsResponsePathSelectorConditionChanges{}
}
func (WatchConditionsResponseFieldPathBuilder) IsCurrent() WatchConditionsResponsePathSelectorIsCurrent {
	return WatchConditionsResponsePathSelectorIsCurrent{}
}
func (WatchConditionsResponseFieldPathBuilder) PageTokenChange() WatchConditionsResponsePathSelectorPageTokenChange {
	return WatchConditionsResponsePathSelectorPageTokenChange{}
}
func (WatchConditionsResponseFieldPathBuilder) ResumeToken() WatchConditionsResponsePathSelectorResumeToken {
	return WatchConditionsResponsePathSelectorResumeToken{}
}
func (WatchConditionsResponseFieldPathBuilder) SnapshotSize() WatchConditionsResponsePathSelectorSnapshotSize {
	return WatchConditionsResponsePathSelectorSnapshotSize{}
}
func (WatchConditionsResponseFieldPathBuilder) IsSoftReset() WatchConditionsResponsePathSelectorIsSoftReset {
	return WatchConditionsResponsePathSelectorIsSoftReset{}
}
func (WatchConditionsResponseFieldPathBuilder) IsHardReset() WatchConditionsResponsePathSelectorIsHardReset {
	return WatchConditionsResponsePathSelectorIsHardReset{}
}

type WatchConditionsResponsePathSelectorConditionChanges struct{}

func (WatchConditionsResponsePathSelectorConditionChanges) FieldPath() *WatchConditionsResponse_FieldTerminalPath {
	return &WatchConditionsResponse_FieldTerminalPath{selector: WatchConditionsResponse_FieldPathSelectorConditionChanges}
}

func (s WatchConditionsResponsePathSelectorConditionChanges) WithValue(value []*condition.ConditionChange) *WatchConditionsResponse_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*WatchConditionsResponse_FieldTerminalPathValue)
}

func (s WatchConditionsResponsePathSelectorConditionChanges) WithArrayOfValues(values [][]*condition.ConditionChange) *WatchConditionsResponse_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*WatchConditionsResponse_FieldTerminalPathArrayOfValues)
}

func (s WatchConditionsResponsePathSelectorConditionChanges) WithItemValue(value *condition.ConditionChange) *WatchConditionsResponse_FieldTerminalPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*WatchConditionsResponse_FieldTerminalPathArrayItemValue)
}

type WatchConditionsResponsePathSelectorIsCurrent struct{}

func (WatchConditionsResponsePathSelectorIsCurrent) FieldPath() *WatchConditionsResponse_FieldTerminalPath {
	return &WatchConditionsResponse_FieldTerminalPath{selector: WatchConditionsResponse_FieldPathSelectorIsCurrent}
}

func (s WatchConditionsResponsePathSelectorIsCurrent) WithValue(value bool) *WatchConditionsResponse_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*WatchConditionsResponse_FieldTerminalPathValue)
}

func (s WatchConditionsResponsePathSelectorIsCurrent) WithArrayOfValues(values []bool) *WatchConditionsResponse_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*WatchConditionsResponse_FieldTerminalPathArrayOfValues)
}

type WatchConditionsResponsePathSelectorPageTokenChange struct{}

func (WatchConditionsResponsePathSelectorPageTokenChange) FieldPath() *WatchConditionsResponse_FieldTerminalPath {
	return &WatchConditionsResponse_FieldTerminalPath{selector: WatchConditionsResponse_FieldPathSelectorPageTokenChange}
}

func (s WatchConditionsResponsePathSelectorPageTokenChange) WithValue(value *WatchConditionsResponse_PageTokenChange) *WatchConditionsResponse_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*WatchConditionsResponse_FieldTerminalPathValue)
}

func (s WatchConditionsResponsePathSelectorPageTokenChange) WithArrayOfValues(values []*WatchConditionsResponse_PageTokenChange) *WatchConditionsResponse_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*WatchConditionsResponse_FieldTerminalPathArrayOfValues)
}

func (WatchConditionsResponsePathSelectorPageTokenChange) WithSubPath(subPath WatchConditionsResponsePageTokenChange_FieldPath) *WatchConditionsResponse_FieldSubPath {
	return &WatchConditionsResponse_FieldSubPath{selector: WatchConditionsResponse_FieldPathSelectorPageTokenChange, subPath: subPath}
}

func (s WatchConditionsResponsePathSelectorPageTokenChange) WithSubValue(subPathValue WatchConditionsResponsePageTokenChange_FieldPathValue) *WatchConditionsResponse_FieldSubPathValue {
	return &WatchConditionsResponse_FieldSubPathValue{WatchConditionsResponse_FieldPath: s.WithSubPath(subPathValue), subPathValue: subPathValue}
}

func (s WatchConditionsResponsePathSelectorPageTokenChange) WithSubArrayOfValues(subPathArrayOfValues WatchConditionsResponsePageTokenChange_FieldPathArrayOfValues) *WatchConditionsResponse_FieldSubPathArrayOfValues {
	return &WatchConditionsResponse_FieldSubPathArrayOfValues{WatchConditionsResponse_FieldPath: s.WithSubPath(subPathArrayOfValues), subPathArrayOfValues: subPathArrayOfValues}
}

func (s WatchConditionsResponsePathSelectorPageTokenChange) WithSubArrayItemValue(subPathArrayItemValue WatchConditionsResponsePageTokenChange_FieldPathArrayItemValue) *WatchConditionsResponse_FieldSubPathArrayItemValue {
	return &WatchConditionsResponse_FieldSubPathArrayItemValue{WatchConditionsResponse_FieldPath: s.WithSubPath(subPathArrayItemValue), subPathItemValue: subPathArrayItemValue}
}

func (WatchConditionsResponsePathSelectorPageTokenChange) PrevPageToken() WatchConditionsResponsePathSelectorPageTokenChangePrevPageToken {
	return WatchConditionsResponsePathSelectorPageTokenChangePrevPageToken{}
}

func (WatchConditionsResponsePathSelectorPageTokenChange) NextPageToken() WatchConditionsResponsePathSelectorPageTokenChangeNextPageToken {
	return WatchConditionsResponsePathSelectorPageTokenChangeNextPageToken{}
}

type WatchConditionsResponsePathSelectorPageTokenChangePrevPageToken struct{}

func (WatchConditionsResponsePathSelectorPageTokenChangePrevPageToken) FieldPath() *WatchConditionsResponse_FieldSubPath {
	return &WatchConditionsResponse_FieldSubPath{
		selector: WatchConditionsResponse_FieldPathSelectorPageTokenChange,
		subPath:  NewWatchConditionsResponsePageTokenChangeFieldPathBuilder().PrevPageToken().FieldPath(),
	}
}

func (s WatchConditionsResponsePathSelectorPageTokenChangePrevPageToken) WithValue(value *condition.PagerCursor) *WatchConditionsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*WatchConditionsResponse_FieldSubPathValue)
}

func (s WatchConditionsResponsePathSelectorPageTokenChangePrevPageToken) WithArrayOfValues(values []*condition.PagerCursor) *WatchConditionsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*WatchConditionsResponse_FieldSubPathArrayOfValues)
}

type WatchConditionsResponsePathSelectorPageTokenChangeNextPageToken struct{}

func (WatchConditionsResponsePathSelectorPageTokenChangeNextPageToken) FieldPath() *WatchConditionsResponse_FieldSubPath {
	return &WatchConditionsResponse_FieldSubPath{
		selector: WatchConditionsResponse_FieldPathSelectorPageTokenChange,
		subPath:  NewWatchConditionsResponsePageTokenChangeFieldPathBuilder().NextPageToken().FieldPath(),
	}
}

func (s WatchConditionsResponsePathSelectorPageTokenChangeNextPageToken) WithValue(value *condition.PagerCursor) *WatchConditionsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*WatchConditionsResponse_FieldSubPathValue)
}

func (s WatchConditionsResponsePathSelectorPageTokenChangeNextPageToken) WithArrayOfValues(values []*condition.PagerCursor) *WatchConditionsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*WatchConditionsResponse_FieldSubPathArrayOfValues)
}

type WatchConditionsResponsePathSelectorResumeToken struct{}

func (WatchConditionsResponsePathSelectorResumeToken) FieldPath() *WatchConditionsResponse_FieldTerminalPath {
	return &WatchConditionsResponse_FieldTerminalPath{selector: WatchConditionsResponse_FieldPathSelectorResumeToken}
}

func (s WatchConditionsResponsePathSelectorResumeToken) WithValue(value string) *WatchConditionsResponse_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*WatchConditionsResponse_FieldTerminalPathValue)
}

func (s WatchConditionsResponsePathSelectorResumeToken) WithArrayOfValues(values []string) *WatchConditionsResponse_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*WatchConditionsResponse_FieldTerminalPathArrayOfValues)
}

type WatchConditionsResponsePathSelectorSnapshotSize struct{}

func (WatchConditionsResponsePathSelectorSnapshotSize) FieldPath() *WatchConditionsResponse_FieldTerminalPath {
	return &WatchConditionsResponse_FieldTerminalPath{selector: WatchConditionsResponse_FieldPathSelectorSnapshotSize}
}

func (s WatchConditionsResponsePathSelectorSnapshotSize) WithValue(value int64) *WatchConditionsResponse_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*WatchConditionsResponse_FieldTerminalPathValue)
}

func (s WatchConditionsResponsePathSelectorSnapshotSize) WithArrayOfValues(values []int64) *WatchConditionsResponse_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*WatchConditionsResponse_FieldTerminalPathArrayOfValues)
}

type WatchConditionsResponsePathSelectorIsSoftReset struct{}

func (WatchConditionsResponsePathSelectorIsSoftReset) FieldPath() *WatchConditionsResponse_FieldTerminalPath {
	return &WatchConditionsResponse_FieldTerminalPath{selector: WatchConditionsResponse_FieldPathSelectorIsSoftReset}
}

func (s WatchConditionsResponsePathSelectorIsSoftReset) WithValue(value bool) *WatchConditionsResponse_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*WatchConditionsResponse_FieldTerminalPathValue)
}

func (s WatchConditionsResponsePathSelectorIsSoftReset) WithArrayOfValues(values []bool) *WatchConditionsResponse_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*WatchConditionsResponse_FieldTerminalPathArrayOfValues)
}

type WatchConditionsResponsePathSelectorIsHardReset struct{}

func (WatchConditionsResponsePathSelectorIsHardReset) FieldPath() *WatchConditionsResponse_FieldTerminalPath {
	return &WatchConditionsResponse_FieldTerminalPath{selector: WatchConditionsResponse_FieldPathSelectorIsHardReset}
}

func (s WatchConditionsResponsePathSelectorIsHardReset) WithValue(value bool) *WatchConditionsResponse_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*WatchConditionsResponse_FieldTerminalPathValue)
}

func (s WatchConditionsResponsePathSelectorIsHardReset) WithArrayOfValues(values []bool) *WatchConditionsResponse_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*WatchConditionsResponse_FieldTerminalPathArrayOfValues)
}

type WatchConditionsResponsePageTokenChangeFieldPathBuilder struct{}

func NewWatchConditionsResponsePageTokenChangeFieldPathBuilder() WatchConditionsResponsePageTokenChangeFieldPathBuilder {
	return WatchConditionsResponsePageTokenChangeFieldPathBuilder{}
}
func (WatchConditionsResponsePageTokenChangeFieldPathBuilder) PrevPageToken() WatchConditionsResponse_PageTokenChangePathSelectorPrevPageToken {
	return WatchConditionsResponse_PageTokenChangePathSelectorPrevPageToken{}
}
func (WatchConditionsResponsePageTokenChangeFieldPathBuilder) NextPageToken() WatchConditionsResponse_PageTokenChangePathSelectorNextPageToken {
	return WatchConditionsResponse_PageTokenChangePathSelectorNextPageToken{}
}

type WatchConditionsResponse_PageTokenChangePathSelectorPrevPageToken struct{}

func (WatchConditionsResponse_PageTokenChangePathSelectorPrevPageToken) FieldPath() *WatchConditionsResponsePageTokenChange_FieldTerminalPath {
	return &WatchConditionsResponsePageTokenChange_FieldTerminalPath{selector: WatchConditionsResponsePageTokenChange_FieldPathSelectorPrevPageToken}
}

func (s WatchConditionsResponse_PageTokenChangePathSelectorPrevPageToken) WithValue(value *condition.PagerCursor) *WatchConditionsResponsePageTokenChange_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*WatchConditionsResponsePageTokenChange_FieldTerminalPathValue)
}

func (s WatchConditionsResponse_PageTokenChangePathSelectorPrevPageToken) WithArrayOfValues(values []*condition.PagerCursor) *WatchConditionsResponsePageTokenChange_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*WatchConditionsResponsePageTokenChange_FieldTerminalPathArrayOfValues)
}

type WatchConditionsResponse_PageTokenChangePathSelectorNextPageToken struct{}

func (WatchConditionsResponse_PageTokenChangePathSelectorNextPageToken) FieldPath() *WatchConditionsResponsePageTokenChange_FieldTerminalPath {
	return &WatchConditionsResponsePageTokenChange_FieldTerminalPath{selector: WatchConditionsResponsePageTokenChange_FieldPathSelectorNextPageToken}
}

func (s WatchConditionsResponse_PageTokenChangePathSelectorNextPageToken) WithValue(value *condition.PagerCursor) *WatchConditionsResponsePageTokenChange_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*WatchConditionsResponsePageTokenChange_FieldTerminalPathValue)
}

func (s WatchConditionsResponse_PageTokenChangePathSelectorNextPageToken) WithArrayOfValues(values []*condition.PagerCursor) *WatchConditionsResponsePageTokenChange_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*WatchConditionsResponsePageTokenChange_FieldTerminalPathArrayOfValues)
}

type CreateConditionRequestFieldPathBuilder struct{}

func NewCreateConditionRequestFieldPathBuilder() CreateConditionRequestFieldPathBuilder {
	return CreateConditionRequestFieldPathBuilder{}
}
func (CreateConditionRequestFieldPathBuilder) Parent() CreateConditionRequestPathSelectorParent {
	return CreateConditionRequestPathSelectorParent{}
}
func (CreateConditionRequestFieldPathBuilder) Condition() CreateConditionRequestPathSelectorCondition {
	return CreateConditionRequestPathSelectorCondition{}
}

type CreateConditionRequestPathSelectorParent struct{}

func (CreateConditionRequestPathSelectorParent) FieldPath() *CreateConditionRequest_FieldTerminalPath {
	return &CreateConditionRequest_FieldTerminalPath{selector: CreateConditionRequest_FieldPathSelectorParent}
}

func (s CreateConditionRequestPathSelectorParent) WithValue(value *condition.ParentReference) *CreateConditionRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*CreateConditionRequest_FieldTerminalPathValue)
}

func (s CreateConditionRequestPathSelectorParent) WithArrayOfValues(values []*condition.ParentReference) *CreateConditionRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CreateConditionRequest_FieldTerminalPathArrayOfValues)
}

type CreateConditionRequestPathSelectorCondition struct{}

func (CreateConditionRequestPathSelectorCondition) FieldPath() *CreateConditionRequest_FieldTerminalPath {
	return &CreateConditionRequest_FieldTerminalPath{selector: CreateConditionRequest_FieldPathSelectorCondition}
}

func (s CreateConditionRequestPathSelectorCondition) WithValue(value *condition.Condition) *CreateConditionRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*CreateConditionRequest_FieldTerminalPathValue)
}

func (s CreateConditionRequestPathSelectorCondition) WithArrayOfValues(values []*condition.Condition) *CreateConditionRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CreateConditionRequest_FieldTerminalPathArrayOfValues)
}

func (CreateConditionRequestPathSelectorCondition) WithSubPath(subPath condition.Condition_FieldPath) *CreateConditionRequest_FieldSubPath {
	return &CreateConditionRequest_FieldSubPath{selector: CreateConditionRequest_FieldPathSelectorCondition, subPath: subPath}
}

func (s CreateConditionRequestPathSelectorCondition) WithSubValue(subPathValue condition.Condition_FieldPathValue) *CreateConditionRequest_FieldSubPathValue {
	return &CreateConditionRequest_FieldSubPathValue{CreateConditionRequest_FieldPath: s.WithSubPath(subPathValue), subPathValue: subPathValue}
}

func (s CreateConditionRequestPathSelectorCondition) WithSubArrayOfValues(subPathArrayOfValues condition.Condition_FieldPathArrayOfValues) *CreateConditionRequest_FieldSubPathArrayOfValues {
	return &CreateConditionRequest_FieldSubPathArrayOfValues{CreateConditionRequest_FieldPath: s.WithSubPath(subPathArrayOfValues), subPathArrayOfValues: subPathArrayOfValues}
}

func (s CreateConditionRequestPathSelectorCondition) WithSubArrayItemValue(subPathArrayItemValue condition.Condition_FieldPathArrayItemValue) *CreateConditionRequest_FieldSubPathArrayItemValue {
	return &CreateConditionRequest_FieldSubPathArrayItemValue{CreateConditionRequest_FieldPath: s.WithSubPath(subPathArrayItemValue), subPathItemValue: subPathArrayItemValue}
}

func (CreateConditionRequestPathSelectorCondition) Name() CreateConditionRequestPathSelectorConditionName {
	return CreateConditionRequestPathSelectorConditionName{}
}

func (CreateConditionRequestPathSelectorCondition) DisplayName() CreateConditionRequestPathSelectorConditionDisplayName {
	return CreateConditionRequestPathSelectorConditionDisplayName{}
}

func (CreateConditionRequestPathSelectorCondition) Description() CreateConditionRequestPathSelectorConditionDescription {
	return CreateConditionRequestPathSelectorConditionDescription{}
}

func (CreateConditionRequestPathSelectorCondition) Expression() CreateConditionRequestPathSelectorConditionExpression {
	return CreateConditionRequestPathSelectorConditionExpression{}
}

func (CreateConditionRequestPathSelectorCondition) ParameterDeclarations() CreateConditionRequestPathSelectorConditionParameterDeclarations {
	return CreateConditionRequestPathSelectorConditionParameterDeclarations{}
}

func (CreateConditionRequestPathSelectorCondition) Metadata() CreateConditionRequestPathSelectorConditionMetadata {
	return CreateConditionRequestPathSelectorConditionMetadata{}
}

type CreateConditionRequestPathSelectorConditionName struct{}

func (CreateConditionRequestPathSelectorConditionName) FieldPath() *CreateConditionRequest_FieldSubPath {
	return &CreateConditionRequest_FieldSubPath{
		selector: CreateConditionRequest_FieldPathSelectorCondition,
		subPath:  condition.NewConditionFieldPathBuilder().Name().FieldPath(),
	}
}

func (s CreateConditionRequestPathSelectorConditionName) WithValue(value *condition.Name) *CreateConditionRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*CreateConditionRequest_FieldSubPathValue)
}

func (s CreateConditionRequestPathSelectorConditionName) WithArrayOfValues(values []*condition.Name) *CreateConditionRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CreateConditionRequest_FieldSubPathArrayOfValues)
}

type CreateConditionRequestPathSelectorConditionDisplayName struct{}

func (CreateConditionRequestPathSelectorConditionDisplayName) FieldPath() *CreateConditionRequest_FieldSubPath {
	return &CreateConditionRequest_FieldSubPath{
		selector: CreateConditionRequest_FieldPathSelectorCondition,
		subPath:  condition.NewConditionFieldPathBuilder().DisplayName().FieldPath(),
	}
}

func (s CreateConditionRequestPathSelectorConditionDisplayName) WithValue(value string) *CreateConditionRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*CreateConditionRequest_FieldSubPathValue)
}

func (s CreateConditionRequestPathSelectorConditionDisplayName) WithArrayOfValues(values []string) *CreateConditionRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CreateConditionRequest_FieldSubPathArrayOfValues)
}

type CreateConditionRequestPathSelectorConditionDescription struct{}

func (CreateConditionRequestPathSelectorConditionDescription) FieldPath() *CreateConditionRequest_FieldSubPath {
	return &CreateConditionRequest_FieldSubPath{
		selector: CreateConditionRequest_FieldPathSelectorCondition,
		subPath:  condition.NewConditionFieldPathBuilder().Description().FieldPath(),
	}
}

func (s CreateConditionRequestPathSelectorConditionDescription) WithValue(value string) *CreateConditionRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*CreateConditionRequest_FieldSubPathValue)
}

func (s CreateConditionRequestPathSelectorConditionDescription) WithArrayOfValues(values []string) *CreateConditionRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CreateConditionRequest_FieldSubPathArrayOfValues)
}

type CreateConditionRequestPathSelectorConditionExpression struct{}

func (CreateConditionRequestPathSelectorConditionExpression) FieldPath() *CreateConditionRequest_FieldSubPath {
	return &CreateConditionRequest_FieldSubPath{
		selector: CreateConditionRequest_FieldPathSelectorCondition,
		subPath:  condition.NewConditionFieldPathBuilder().Expression().FieldPath(),
	}
}

func (s CreateConditionRequestPathSelectorConditionExpression) WithValue(value string) *CreateConditionRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*CreateConditionRequest_FieldSubPathValue)
}

func (s CreateConditionRequestPathSelectorConditionExpression) WithArrayOfValues(values []string) *CreateConditionRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CreateConditionRequest_FieldSubPathArrayOfValues)
}

type CreateConditionRequestPathSelectorConditionParameterDeclarations struct{}

func (CreateConditionRequestPathSelectorConditionParameterDeclarations) FieldPath() *CreateConditionRequest_FieldSubPath {
	return &CreateConditionRequest_FieldSubPath{
		selector: CreateConditionRequest_FieldPathSelectorCondition,
		subPath:  condition.NewConditionFieldPathBuilder().ParameterDeclarations().FieldPath(),
	}
}

func (s CreateConditionRequestPathSelectorConditionParameterDeclarations) WithValue(value []*condition.Condition_ParameterDeclaration) *CreateConditionRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*CreateConditionRequest_FieldSubPathValue)
}

func (s CreateConditionRequestPathSelectorConditionParameterDeclarations) WithArrayOfValues(values [][]*condition.Condition_ParameterDeclaration) *CreateConditionRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CreateConditionRequest_FieldSubPathArrayOfValues)
}

func (s CreateConditionRequestPathSelectorConditionParameterDeclarations) WithItemValue(value *condition.Condition_ParameterDeclaration) *CreateConditionRequest_FieldSubPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*CreateConditionRequest_FieldSubPathArrayItemValue)
}

func (CreateConditionRequestPathSelectorConditionParameterDeclarations) Key() CreateConditionRequestPathSelectorConditionParameterDeclarationsKey {
	return CreateConditionRequestPathSelectorConditionParameterDeclarationsKey{}
}

func (CreateConditionRequestPathSelectorConditionParameterDeclarations) Type() CreateConditionRequestPathSelectorConditionParameterDeclarationsType {
	return CreateConditionRequestPathSelectorConditionParameterDeclarationsType{}
}

type CreateConditionRequestPathSelectorConditionParameterDeclarationsKey struct{}

func (CreateConditionRequestPathSelectorConditionParameterDeclarationsKey) FieldPath() *CreateConditionRequest_FieldSubPath {
	return &CreateConditionRequest_FieldSubPath{
		selector: CreateConditionRequest_FieldPathSelectorCondition,
		subPath:  condition.NewConditionFieldPathBuilder().ParameterDeclarations().Key().FieldPath(),
	}
}

func (s CreateConditionRequestPathSelectorConditionParameterDeclarationsKey) WithValue(value string) *CreateConditionRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*CreateConditionRequest_FieldSubPathValue)
}

func (s CreateConditionRequestPathSelectorConditionParameterDeclarationsKey) WithArrayOfValues(values []string) *CreateConditionRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CreateConditionRequest_FieldSubPathArrayOfValues)
}

type CreateConditionRequestPathSelectorConditionParameterDeclarationsType struct{}

func (CreateConditionRequestPathSelectorConditionParameterDeclarationsType) FieldPath() *CreateConditionRequest_FieldSubPath {
	return &CreateConditionRequest_FieldSubPath{
		selector: CreateConditionRequest_FieldPathSelectorCondition,
		subPath:  condition.NewConditionFieldPathBuilder().ParameterDeclarations().Type().FieldPath(),
	}
}

func (s CreateConditionRequestPathSelectorConditionParameterDeclarationsType) WithValue(value condition.Condition_ParameterType) *CreateConditionRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*CreateConditionRequest_FieldSubPathValue)
}

func (s CreateConditionRequestPathSelectorConditionParameterDeclarationsType) WithArrayOfValues(values []condition.Condition_ParameterType) *CreateConditionRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CreateConditionRequest_FieldSubPathArrayOfValues)
}

type CreateConditionRequestPathSelectorConditionMetadata struct{}

func (CreateConditionRequestPathSelectorConditionMetadata) FieldPath() *CreateConditionRequest_FieldSubPath {
	return &CreateConditionRequest_FieldSubPath{
		selector: CreateConditionRequest_FieldPathSelectorCondition,
		subPath:  condition.NewConditionFieldPathBuilder().Metadata().FieldPath(),
	}
}

func (s CreateConditionRequestPathSelectorConditionMetadata) WithValue(value *ntt_meta.Meta) *CreateConditionRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*CreateConditionRequest_FieldSubPathValue)
}

func (s CreateConditionRequestPathSelectorConditionMetadata) WithArrayOfValues(values []*ntt_meta.Meta) *CreateConditionRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CreateConditionRequest_FieldSubPathArrayOfValues)
}

func (CreateConditionRequestPathSelectorConditionMetadata) CreateTime() CreateConditionRequestPathSelectorConditionMetadataCreateTime {
	return CreateConditionRequestPathSelectorConditionMetadataCreateTime{}
}

func (CreateConditionRequestPathSelectorConditionMetadata) UpdateTime() CreateConditionRequestPathSelectorConditionMetadataUpdateTime {
	return CreateConditionRequestPathSelectorConditionMetadataUpdateTime{}
}

func (CreateConditionRequestPathSelectorConditionMetadata) DeleteTime() CreateConditionRequestPathSelectorConditionMetadataDeleteTime {
	return CreateConditionRequestPathSelectorConditionMetadataDeleteTime{}
}

func (CreateConditionRequestPathSelectorConditionMetadata) Uuid() CreateConditionRequestPathSelectorConditionMetadataUuid {
	return CreateConditionRequestPathSelectorConditionMetadataUuid{}
}

func (CreateConditionRequestPathSelectorConditionMetadata) Tags() CreateConditionRequestPathSelectorConditionMetadataTags {
	return CreateConditionRequestPathSelectorConditionMetadataTags{}
}

func (CreateConditionRequestPathSelectorConditionMetadata) Labels() CreateConditionRequestPathSelectorConditionMetadataLabels {
	return CreateConditionRequestPathSelectorConditionMetadataLabels{}
}

func (CreateConditionRequestPathSelectorConditionMetadata) Annotations() CreateConditionRequestPathSelectorConditionMetadataAnnotations {
	return CreateConditionRequestPathSelectorConditionMetadataAnnotations{}
}

func (CreateConditionRequestPathSelectorConditionMetadata) Generation() CreateConditionRequestPathSelectorConditionMetadataGeneration {
	return CreateConditionRequestPathSelectorConditionMetadataGeneration{}
}

func (CreateConditionRequestPathSelectorConditionMetadata) ResourceVersion() CreateConditionRequestPathSelectorConditionMetadataResourceVersion {
	return CreateConditionRequestPathSelectorConditionMetadataResourceVersion{}
}

func (CreateConditionRequestPathSelectorConditionMetadata) OwnerReferences() CreateConditionRequestPathSelectorConditionMetadataOwnerReferences {
	return CreateConditionRequestPathSelectorConditionMetadataOwnerReferences{}
}

func (CreateConditionRequestPathSelectorConditionMetadata) Shards() CreateConditionRequestPathSelectorConditionMetadataShards {
	return CreateConditionRequestPathSelectorConditionMetadataShards{}
}

func (CreateConditionRequestPathSelectorConditionMetadata) Syncing() CreateConditionRequestPathSelectorConditionMetadataSyncing {
	return CreateConditionRequestPathSelectorConditionMetadataSyncing{}
}

func (CreateConditionRequestPathSelectorConditionMetadata) Lifecycle() CreateConditionRequestPathSelectorConditionMetadataLifecycle {
	return CreateConditionRequestPathSelectorConditionMetadataLifecycle{}
}

type CreateConditionRequestPathSelectorConditionMetadataCreateTime struct{}

func (CreateConditionRequestPathSelectorConditionMetadataCreateTime) FieldPath() *CreateConditionRequest_FieldSubPath {
	return &CreateConditionRequest_FieldSubPath{
		selector: CreateConditionRequest_FieldPathSelectorCondition,
		subPath:  condition.NewConditionFieldPathBuilder().Metadata().CreateTime().FieldPath(),
	}
}

func (s CreateConditionRequestPathSelectorConditionMetadataCreateTime) WithValue(value *timestamp.Timestamp) *CreateConditionRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*CreateConditionRequest_FieldSubPathValue)
}

func (s CreateConditionRequestPathSelectorConditionMetadataCreateTime) WithArrayOfValues(values []*timestamp.Timestamp) *CreateConditionRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CreateConditionRequest_FieldSubPathArrayOfValues)
}

type CreateConditionRequestPathSelectorConditionMetadataUpdateTime struct{}

func (CreateConditionRequestPathSelectorConditionMetadataUpdateTime) FieldPath() *CreateConditionRequest_FieldSubPath {
	return &CreateConditionRequest_FieldSubPath{
		selector: CreateConditionRequest_FieldPathSelectorCondition,
		subPath:  condition.NewConditionFieldPathBuilder().Metadata().UpdateTime().FieldPath(),
	}
}

func (s CreateConditionRequestPathSelectorConditionMetadataUpdateTime) WithValue(value *timestamp.Timestamp) *CreateConditionRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*CreateConditionRequest_FieldSubPathValue)
}

func (s CreateConditionRequestPathSelectorConditionMetadataUpdateTime) WithArrayOfValues(values []*timestamp.Timestamp) *CreateConditionRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CreateConditionRequest_FieldSubPathArrayOfValues)
}

type CreateConditionRequestPathSelectorConditionMetadataDeleteTime struct{}

func (CreateConditionRequestPathSelectorConditionMetadataDeleteTime) FieldPath() *CreateConditionRequest_FieldSubPath {
	return &CreateConditionRequest_FieldSubPath{
		selector: CreateConditionRequest_FieldPathSelectorCondition,
		subPath:  condition.NewConditionFieldPathBuilder().Metadata().DeleteTime().FieldPath(),
	}
}

func (s CreateConditionRequestPathSelectorConditionMetadataDeleteTime) WithValue(value *timestamp.Timestamp) *CreateConditionRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*CreateConditionRequest_FieldSubPathValue)
}

func (s CreateConditionRequestPathSelectorConditionMetadataDeleteTime) WithArrayOfValues(values []*timestamp.Timestamp) *CreateConditionRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CreateConditionRequest_FieldSubPathArrayOfValues)
}

type CreateConditionRequestPathSelectorConditionMetadataUuid struct{}

func (CreateConditionRequestPathSelectorConditionMetadataUuid) FieldPath() *CreateConditionRequest_FieldSubPath {
	return &CreateConditionRequest_FieldSubPath{
		selector: CreateConditionRequest_FieldPathSelectorCondition,
		subPath:  condition.NewConditionFieldPathBuilder().Metadata().Uuid().FieldPath(),
	}
}

func (s CreateConditionRequestPathSelectorConditionMetadataUuid) WithValue(value string) *CreateConditionRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*CreateConditionRequest_FieldSubPathValue)
}

func (s CreateConditionRequestPathSelectorConditionMetadataUuid) WithArrayOfValues(values []string) *CreateConditionRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CreateConditionRequest_FieldSubPathArrayOfValues)
}

type CreateConditionRequestPathSelectorConditionMetadataTags struct{}

func (CreateConditionRequestPathSelectorConditionMetadataTags) FieldPath() *CreateConditionRequest_FieldSubPath {
	return &CreateConditionRequest_FieldSubPath{
		selector: CreateConditionRequest_FieldPathSelectorCondition,
		subPath:  condition.NewConditionFieldPathBuilder().Metadata().Tags().FieldPath(),
	}
}

func (s CreateConditionRequestPathSelectorConditionMetadataTags) WithValue(value []string) *CreateConditionRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*CreateConditionRequest_FieldSubPathValue)
}

func (s CreateConditionRequestPathSelectorConditionMetadataTags) WithArrayOfValues(values [][]string) *CreateConditionRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CreateConditionRequest_FieldSubPathArrayOfValues)
}

func (s CreateConditionRequestPathSelectorConditionMetadataTags) WithItemValue(value string) *CreateConditionRequest_FieldSubPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*CreateConditionRequest_FieldSubPathArrayItemValue)
}

type CreateConditionRequestPathSelectorConditionMetadataLabels struct{}

func (CreateConditionRequestPathSelectorConditionMetadataLabels) FieldPath() *CreateConditionRequest_FieldSubPath {
	return &CreateConditionRequest_FieldSubPath{
		selector: CreateConditionRequest_FieldPathSelectorCondition,
		subPath:  condition.NewConditionFieldPathBuilder().Metadata().Labels().FieldPath(),
	}
}

func (s CreateConditionRequestPathSelectorConditionMetadataLabels) WithValue(value map[string]string) *CreateConditionRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*CreateConditionRequest_FieldSubPathValue)
}

func (s CreateConditionRequestPathSelectorConditionMetadataLabels) WithArrayOfValues(values []map[string]string) *CreateConditionRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CreateConditionRequest_FieldSubPathArrayOfValues)
}

func (CreateConditionRequestPathSelectorConditionMetadataLabels) WithKey(key string) CreateConditionRequestMapPathSelectorConditionMetadataLabels {
	return CreateConditionRequestMapPathSelectorConditionMetadataLabels{key: key}
}

type CreateConditionRequestMapPathSelectorConditionMetadataLabels struct {
	key string
}

func (s CreateConditionRequestMapPathSelectorConditionMetadataLabels) FieldPath() *CreateConditionRequest_FieldSubPath {
	return &CreateConditionRequest_FieldSubPath{
		selector: CreateConditionRequest_FieldPathSelectorCondition,
		subPath:  condition.NewConditionFieldPathBuilder().Metadata().Labels().WithKey(s.key).FieldPath(),
	}
}

func (s CreateConditionRequestMapPathSelectorConditionMetadataLabels) WithValue(value string) *CreateConditionRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*CreateConditionRequest_FieldSubPathValue)
}

func (s CreateConditionRequestMapPathSelectorConditionMetadataLabels) WithArrayOfValues(values []string) *CreateConditionRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CreateConditionRequest_FieldSubPathArrayOfValues)
}

type CreateConditionRequestPathSelectorConditionMetadataAnnotations struct{}

func (CreateConditionRequestPathSelectorConditionMetadataAnnotations) FieldPath() *CreateConditionRequest_FieldSubPath {
	return &CreateConditionRequest_FieldSubPath{
		selector: CreateConditionRequest_FieldPathSelectorCondition,
		subPath:  condition.NewConditionFieldPathBuilder().Metadata().Annotations().FieldPath(),
	}
}

func (s CreateConditionRequestPathSelectorConditionMetadataAnnotations) WithValue(value map[string]string) *CreateConditionRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*CreateConditionRequest_FieldSubPathValue)
}

func (s CreateConditionRequestPathSelectorConditionMetadataAnnotations) WithArrayOfValues(values []map[string]string) *CreateConditionRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CreateConditionRequest_FieldSubPathArrayOfValues)
}

func (CreateConditionRequestPathSelectorConditionMetadataAnnotations) WithKey(key string) CreateConditionRequestMapPathSelectorConditionMetadataAnnotations {
	return CreateConditionRequestMapPathSelectorConditionMetadataAnnotations{key: key}
}

type CreateConditionRequestMapPathSelectorConditionMetadataAnnotations struct {
	key string
}

func (s CreateConditionRequestMapPathSelectorConditionMetadataAnnotations) FieldPath() *CreateConditionRequest_FieldSubPath {
	return &CreateConditionRequest_FieldSubPath{
		selector: CreateConditionRequest_FieldPathSelectorCondition,
		subPath:  condition.NewConditionFieldPathBuilder().Metadata().Annotations().WithKey(s.key).FieldPath(),
	}
}

func (s CreateConditionRequestMapPathSelectorConditionMetadataAnnotations) WithValue(value string) *CreateConditionRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*CreateConditionRequest_FieldSubPathValue)
}

func (s CreateConditionRequestMapPathSelectorConditionMetadataAnnotations) WithArrayOfValues(values []string) *CreateConditionRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CreateConditionRequest_FieldSubPathArrayOfValues)
}

type CreateConditionRequestPathSelectorConditionMetadataGeneration struct{}

func (CreateConditionRequestPathSelectorConditionMetadataGeneration) FieldPath() *CreateConditionRequest_FieldSubPath {
	return &CreateConditionRequest_FieldSubPath{
		selector: CreateConditionRequest_FieldPathSelectorCondition,
		subPath:  condition.NewConditionFieldPathBuilder().Metadata().Generation().FieldPath(),
	}
}

func (s CreateConditionRequestPathSelectorConditionMetadataGeneration) WithValue(value int64) *CreateConditionRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*CreateConditionRequest_FieldSubPathValue)
}

func (s CreateConditionRequestPathSelectorConditionMetadataGeneration) WithArrayOfValues(values []int64) *CreateConditionRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CreateConditionRequest_FieldSubPathArrayOfValues)
}

type CreateConditionRequestPathSelectorConditionMetadataResourceVersion struct{}

func (CreateConditionRequestPathSelectorConditionMetadataResourceVersion) FieldPath() *CreateConditionRequest_FieldSubPath {
	return &CreateConditionRequest_FieldSubPath{
		selector: CreateConditionRequest_FieldPathSelectorCondition,
		subPath:  condition.NewConditionFieldPathBuilder().Metadata().ResourceVersion().FieldPath(),
	}
}

func (s CreateConditionRequestPathSelectorConditionMetadataResourceVersion) WithValue(value string) *CreateConditionRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*CreateConditionRequest_FieldSubPathValue)
}

func (s CreateConditionRequestPathSelectorConditionMetadataResourceVersion) WithArrayOfValues(values []string) *CreateConditionRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CreateConditionRequest_FieldSubPathArrayOfValues)
}

type CreateConditionRequestPathSelectorConditionMetadataOwnerReferences struct{}

func (CreateConditionRequestPathSelectorConditionMetadataOwnerReferences) FieldPath() *CreateConditionRequest_FieldSubPath {
	return &CreateConditionRequest_FieldSubPath{
		selector: CreateConditionRequest_FieldPathSelectorCondition,
		subPath:  condition.NewConditionFieldPathBuilder().Metadata().OwnerReferences().FieldPath(),
	}
}

func (s CreateConditionRequestPathSelectorConditionMetadataOwnerReferences) WithValue(value []*ntt_meta.OwnerReference) *CreateConditionRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*CreateConditionRequest_FieldSubPathValue)
}

func (s CreateConditionRequestPathSelectorConditionMetadataOwnerReferences) WithArrayOfValues(values [][]*ntt_meta.OwnerReference) *CreateConditionRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CreateConditionRequest_FieldSubPathArrayOfValues)
}

func (s CreateConditionRequestPathSelectorConditionMetadataOwnerReferences) WithItemValue(value *ntt_meta.OwnerReference) *CreateConditionRequest_FieldSubPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*CreateConditionRequest_FieldSubPathArrayItemValue)
}

func (CreateConditionRequestPathSelectorConditionMetadataOwnerReferences) Kind() CreateConditionRequestPathSelectorConditionMetadataOwnerReferencesKind {
	return CreateConditionRequestPathSelectorConditionMetadataOwnerReferencesKind{}
}

func (CreateConditionRequestPathSelectorConditionMetadataOwnerReferences) Version() CreateConditionRequestPathSelectorConditionMetadataOwnerReferencesVersion {
	return CreateConditionRequestPathSelectorConditionMetadataOwnerReferencesVersion{}
}

func (CreateConditionRequestPathSelectorConditionMetadataOwnerReferences) Name() CreateConditionRequestPathSelectorConditionMetadataOwnerReferencesName {
	return CreateConditionRequestPathSelectorConditionMetadataOwnerReferencesName{}
}

func (CreateConditionRequestPathSelectorConditionMetadataOwnerReferences) Region() CreateConditionRequestPathSelectorConditionMetadataOwnerReferencesRegion {
	return CreateConditionRequestPathSelectorConditionMetadataOwnerReferencesRegion{}
}

func (CreateConditionRequestPathSelectorConditionMetadataOwnerReferences) Controller() CreateConditionRequestPathSelectorConditionMetadataOwnerReferencesController {
	return CreateConditionRequestPathSelectorConditionMetadataOwnerReferencesController{}
}

func (CreateConditionRequestPathSelectorConditionMetadataOwnerReferences) BlockOwnerDeletion() CreateConditionRequestPathSelectorConditionMetadataOwnerReferencesBlockOwnerDeletion {
	return CreateConditionRequestPathSelectorConditionMetadataOwnerReferencesBlockOwnerDeletion{}
}

func (CreateConditionRequestPathSelectorConditionMetadataOwnerReferences) RequiresOwnerReference() CreateConditionRequestPathSelectorConditionMetadataOwnerReferencesRequiresOwnerReference {
	return CreateConditionRequestPathSelectorConditionMetadataOwnerReferencesRequiresOwnerReference{}
}

type CreateConditionRequestPathSelectorConditionMetadataOwnerReferencesKind struct{}

func (CreateConditionRequestPathSelectorConditionMetadataOwnerReferencesKind) FieldPath() *CreateConditionRequest_FieldSubPath {
	return &CreateConditionRequest_FieldSubPath{
		selector: CreateConditionRequest_FieldPathSelectorCondition,
		subPath:  condition.NewConditionFieldPathBuilder().Metadata().OwnerReferences().Kind().FieldPath(),
	}
}

func (s CreateConditionRequestPathSelectorConditionMetadataOwnerReferencesKind) WithValue(value string) *CreateConditionRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*CreateConditionRequest_FieldSubPathValue)
}

func (s CreateConditionRequestPathSelectorConditionMetadataOwnerReferencesKind) WithArrayOfValues(values []string) *CreateConditionRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CreateConditionRequest_FieldSubPathArrayOfValues)
}

type CreateConditionRequestPathSelectorConditionMetadataOwnerReferencesVersion struct{}

func (CreateConditionRequestPathSelectorConditionMetadataOwnerReferencesVersion) FieldPath() *CreateConditionRequest_FieldSubPath {
	return &CreateConditionRequest_FieldSubPath{
		selector: CreateConditionRequest_FieldPathSelectorCondition,
		subPath:  condition.NewConditionFieldPathBuilder().Metadata().OwnerReferences().Version().FieldPath(),
	}
}

func (s CreateConditionRequestPathSelectorConditionMetadataOwnerReferencesVersion) WithValue(value string) *CreateConditionRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*CreateConditionRequest_FieldSubPathValue)
}

func (s CreateConditionRequestPathSelectorConditionMetadataOwnerReferencesVersion) WithArrayOfValues(values []string) *CreateConditionRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CreateConditionRequest_FieldSubPathArrayOfValues)
}

type CreateConditionRequestPathSelectorConditionMetadataOwnerReferencesName struct{}

func (CreateConditionRequestPathSelectorConditionMetadataOwnerReferencesName) FieldPath() *CreateConditionRequest_FieldSubPath {
	return &CreateConditionRequest_FieldSubPath{
		selector: CreateConditionRequest_FieldPathSelectorCondition,
		subPath:  condition.NewConditionFieldPathBuilder().Metadata().OwnerReferences().Name().FieldPath(),
	}
}

func (s CreateConditionRequestPathSelectorConditionMetadataOwnerReferencesName) WithValue(value string) *CreateConditionRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*CreateConditionRequest_FieldSubPathValue)
}

func (s CreateConditionRequestPathSelectorConditionMetadataOwnerReferencesName) WithArrayOfValues(values []string) *CreateConditionRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CreateConditionRequest_FieldSubPathArrayOfValues)
}

type CreateConditionRequestPathSelectorConditionMetadataOwnerReferencesRegion struct{}

func (CreateConditionRequestPathSelectorConditionMetadataOwnerReferencesRegion) FieldPath() *CreateConditionRequest_FieldSubPath {
	return &CreateConditionRequest_FieldSubPath{
		selector: CreateConditionRequest_FieldPathSelectorCondition,
		subPath:  condition.NewConditionFieldPathBuilder().Metadata().OwnerReferences().Region().FieldPath(),
	}
}

func (s CreateConditionRequestPathSelectorConditionMetadataOwnerReferencesRegion) WithValue(value string) *CreateConditionRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*CreateConditionRequest_FieldSubPathValue)
}

func (s CreateConditionRequestPathSelectorConditionMetadataOwnerReferencesRegion) WithArrayOfValues(values []string) *CreateConditionRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CreateConditionRequest_FieldSubPathArrayOfValues)
}

type CreateConditionRequestPathSelectorConditionMetadataOwnerReferencesController struct{}

func (CreateConditionRequestPathSelectorConditionMetadataOwnerReferencesController) FieldPath() *CreateConditionRequest_FieldSubPath {
	return &CreateConditionRequest_FieldSubPath{
		selector: CreateConditionRequest_FieldPathSelectorCondition,
		subPath:  condition.NewConditionFieldPathBuilder().Metadata().OwnerReferences().Controller().FieldPath(),
	}
}

func (s CreateConditionRequestPathSelectorConditionMetadataOwnerReferencesController) WithValue(value bool) *CreateConditionRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*CreateConditionRequest_FieldSubPathValue)
}

func (s CreateConditionRequestPathSelectorConditionMetadataOwnerReferencesController) WithArrayOfValues(values []bool) *CreateConditionRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CreateConditionRequest_FieldSubPathArrayOfValues)
}

type CreateConditionRequestPathSelectorConditionMetadataOwnerReferencesBlockOwnerDeletion struct{}

func (CreateConditionRequestPathSelectorConditionMetadataOwnerReferencesBlockOwnerDeletion) FieldPath() *CreateConditionRequest_FieldSubPath {
	return &CreateConditionRequest_FieldSubPath{
		selector: CreateConditionRequest_FieldPathSelectorCondition,
		subPath:  condition.NewConditionFieldPathBuilder().Metadata().OwnerReferences().BlockOwnerDeletion().FieldPath(),
	}
}

func (s CreateConditionRequestPathSelectorConditionMetadataOwnerReferencesBlockOwnerDeletion) WithValue(value bool) *CreateConditionRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*CreateConditionRequest_FieldSubPathValue)
}

func (s CreateConditionRequestPathSelectorConditionMetadataOwnerReferencesBlockOwnerDeletion) WithArrayOfValues(values []bool) *CreateConditionRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CreateConditionRequest_FieldSubPathArrayOfValues)
}

type CreateConditionRequestPathSelectorConditionMetadataOwnerReferencesRequiresOwnerReference struct{}

func (CreateConditionRequestPathSelectorConditionMetadataOwnerReferencesRequiresOwnerReference) FieldPath() *CreateConditionRequest_FieldSubPath {
	return &CreateConditionRequest_FieldSubPath{
		selector: CreateConditionRequest_FieldPathSelectorCondition,
		subPath:  condition.NewConditionFieldPathBuilder().Metadata().OwnerReferences().RequiresOwnerReference().FieldPath(),
	}
}

func (s CreateConditionRequestPathSelectorConditionMetadataOwnerReferencesRequiresOwnerReference) WithValue(value bool) *CreateConditionRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*CreateConditionRequest_FieldSubPathValue)
}

func (s CreateConditionRequestPathSelectorConditionMetadataOwnerReferencesRequiresOwnerReference) WithArrayOfValues(values []bool) *CreateConditionRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CreateConditionRequest_FieldSubPathArrayOfValues)
}

type CreateConditionRequestPathSelectorConditionMetadataShards struct{}

func (CreateConditionRequestPathSelectorConditionMetadataShards) FieldPath() *CreateConditionRequest_FieldSubPath {
	return &CreateConditionRequest_FieldSubPath{
		selector: CreateConditionRequest_FieldPathSelectorCondition,
		subPath:  condition.NewConditionFieldPathBuilder().Metadata().Shards().FieldPath(),
	}
}

func (s CreateConditionRequestPathSelectorConditionMetadataShards) WithValue(value map[string]int64) *CreateConditionRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*CreateConditionRequest_FieldSubPathValue)
}

func (s CreateConditionRequestPathSelectorConditionMetadataShards) WithArrayOfValues(values []map[string]int64) *CreateConditionRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CreateConditionRequest_FieldSubPathArrayOfValues)
}

func (CreateConditionRequestPathSelectorConditionMetadataShards) WithKey(key string) CreateConditionRequestMapPathSelectorConditionMetadataShards {
	return CreateConditionRequestMapPathSelectorConditionMetadataShards{key: key}
}

type CreateConditionRequestMapPathSelectorConditionMetadataShards struct {
	key string
}

func (s CreateConditionRequestMapPathSelectorConditionMetadataShards) FieldPath() *CreateConditionRequest_FieldSubPath {
	return &CreateConditionRequest_FieldSubPath{
		selector: CreateConditionRequest_FieldPathSelectorCondition,
		subPath:  condition.NewConditionFieldPathBuilder().Metadata().Shards().WithKey(s.key).FieldPath(),
	}
}

func (s CreateConditionRequestMapPathSelectorConditionMetadataShards) WithValue(value int64) *CreateConditionRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*CreateConditionRequest_FieldSubPathValue)
}

func (s CreateConditionRequestMapPathSelectorConditionMetadataShards) WithArrayOfValues(values []int64) *CreateConditionRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CreateConditionRequest_FieldSubPathArrayOfValues)
}

type CreateConditionRequestPathSelectorConditionMetadataSyncing struct{}

func (CreateConditionRequestPathSelectorConditionMetadataSyncing) FieldPath() *CreateConditionRequest_FieldSubPath {
	return &CreateConditionRequest_FieldSubPath{
		selector: CreateConditionRequest_FieldPathSelectorCondition,
		subPath:  condition.NewConditionFieldPathBuilder().Metadata().Syncing().FieldPath(),
	}
}

func (s CreateConditionRequestPathSelectorConditionMetadataSyncing) WithValue(value *ntt_meta.SyncingMeta) *CreateConditionRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*CreateConditionRequest_FieldSubPathValue)
}

func (s CreateConditionRequestPathSelectorConditionMetadataSyncing) WithArrayOfValues(values []*ntt_meta.SyncingMeta) *CreateConditionRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CreateConditionRequest_FieldSubPathArrayOfValues)
}

func (CreateConditionRequestPathSelectorConditionMetadataSyncing) OwningRegion() CreateConditionRequestPathSelectorConditionMetadataSyncingOwningRegion {
	return CreateConditionRequestPathSelectorConditionMetadataSyncingOwningRegion{}
}

func (CreateConditionRequestPathSelectorConditionMetadataSyncing) Regions() CreateConditionRequestPathSelectorConditionMetadataSyncingRegions {
	return CreateConditionRequestPathSelectorConditionMetadataSyncingRegions{}
}

type CreateConditionRequestPathSelectorConditionMetadataSyncingOwningRegion struct{}

func (CreateConditionRequestPathSelectorConditionMetadataSyncingOwningRegion) FieldPath() *CreateConditionRequest_FieldSubPath {
	return &CreateConditionRequest_FieldSubPath{
		selector: CreateConditionRequest_FieldPathSelectorCondition,
		subPath:  condition.NewConditionFieldPathBuilder().Metadata().Syncing().OwningRegion().FieldPath(),
	}
}

func (s CreateConditionRequestPathSelectorConditionMetadataSyncingOwningRegion) WithValue(value string) *CreateConditionRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*CreateConditionRequest_FieldSubPathValue)
}

func (s CreateConditionRequestPathSelectorConditionMetadataSyncingOwningRegion) WithArrayOfValues(values []string) *CreateConditionRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CreateConditionRequest_FieldSubPathArrayOfValues)
}

type CreateConditionRequestPathSelectorConditionMetadataSyncingRegions struct{}

func (CreateConditionRequestPathSelectorConditionMetadataSyncingRegions) FieldPath() *CreateConditionRequest_FieldSubPath {
	return &CreateConditionRequest_FieldSubPath{
		selector: CreateConditionRequest_FieldPathSelectorCondition,
		subPath:  condition.NewConditionFieldPathBuilder().Metadata().Syncing().Regions().FieldPath(),
	}
}

func (s CreateConditionRequestPathSelectorConditionMetadataSyncingRegions) WithValue(value []string) *CreateConditionRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*CreateConditionRequest_FieldSubPathValue)
}

func (s CreateConditionRequestPathSelectorConditionMetadataSyncingRegions) WithArrayOfValues(values [][]string) *CreateConditionRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CreateConditionRequest_FieldSubPathArrayOfValues)
}

func (s CreateConditionRequestPathSelectorConditionMetadataSyncingRegions) WithItemValue(value string) *CreateConditionRequest_FieldSubPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*CreateConditionRequest_FieldSubPathArrayItemValue)
}

type CreateConditionRequestPathSelectorConditionMetadataLifecycle struct{}

func (CreateConditionRequestPathSelectorConditionMetadataLifecycle) FieldPath() *CreateConditionRequest_FieldSubPath {
	return &CreateConditionRequest_FieldSubPath{
		selector: CreateConditionRequest_FieldPathSelectorCondition,
		subPath:  condition.NewConditionFieldPathBuilder().Metadata().Lifecycle().FieldPath(),
	}
}

func (s CreateConditionRequestPathSelectorConditionMetadataLifecycle) WithValue(value *ntt_meta.Lifecycle) *CreateConditionRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*CreateConditionRequest_FieldSubPathValue)
}

func (s CreateConditionRequestPathSelectorConditionMetadataLifecycle) WithArrayOfValues(values []*ntt_meta.Lifecycle) *CreateConditionRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CreateConditionRequest_FieldSubPathArrayOfValues)
}

func (CreateConditionRequestPathSelectorConditionMetadataLifecycle) State() CreateConditionRequestPathSelectorConditionMetadataLifecycleState {
	return CreateConditionRequestPathSelectorConditionMetadataLifecycleState{}
}

func (CreateConditionRequestPathSelectorConditionMetadataLifecycle) BlockDeletion() CreateConditionRequestPathSelectorConditionMetadataLifecycleBlockDeletion {
	return CreateConditionRequestPathSelectorConditionMetadataLifecycleBlockDeletion{}
}

type CreateConditionRequestPathSelectorConditionMetadataLifecycleState struct{}

func (CreateConditionRequestPathSelectorConditionMetadataLifecycleState) FieldPath() *CreateConditionRequest_FieldSubPath {
	return &CreateConditionRequest_FieldSubPath{
		selector: CreateConditionRequest_FieldPathSelectorCondition,
		subPath:  condition.NewConditionFieldPathBuilder().Metadata().Lifecycle().State().FieldPath(),
	}
}

func (s CreateConditionRequestPathSelectorConditionMetadataLifecycleState) WithValue(value ntt_meta.Lifecycle_State) *CreateConditionRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*CreateConditionRequest_FieldSubPathValue)
}

func (s CreateConditionRequestPathSelectorConditionMetadataLifecycleState) WithArrayOfValues(values []ntt_meta.Lifecycle_State) *CreateConditionRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CreateConditionRequest_FieldSubPathArrayOfValues)
}

type CreateConditionRequestPathSelectorConditionMetadataLifecycleBlockDeletion struct{}

func (CreateConditionRequestPathSelectorConditionMetadataLifecycleBlockDeletion) FieldPath() *CreateConditionRequest_FieldSubPath {
	return &CreateConditionRequest_FieldSubPath{
		selector: CreateConditionRequest_FieldPathSelectorCondition,
		subPath:  condition.NewConditionFieldPathBuilder().Metadata().Lifecycle().BlockDeletion().FieldPath(),
	}
}

func (s CreateConditionRequestPathSelectorConditionMetadataLifecycleBlockDeletion) WithValue(value bool) *CreateConditionRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*CreateConditionRequest_FieldSubPathValue)
}

func (s CreateConditionRequestPathSelectorConditionMetadataLifecycleBlockDeletion) WithArrayOfValues(values []bool) *CreateConditionRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CreateConditionRequest_FieldSubPathArrayOfValues)
}

type UpdateConditionRequestFieldPathBuilder struct{}

func NewUpdateConditionRequestFieldPathBuilder() UpdateConditionRequestFieldPathBuilder {
	return UpdateConditionRequestFieldPathBuilder{}
}
func (UpdateConditionRequestFieldPathBuilder) Condition() UpdateConditionRequestPathSelectorCondition {
	return UpdateConditionRequestPathSelectorCondition{}
}
func (UpdateConditionRequestFieldPathBuilder) UpdateMask() UpdateConditionRequestPathSelectorUpdateMask {
	return UpdateConditionRequestPathSelectorUpdateMask{}
}
func (UpdateConditionRequestFieldPathBuilder) Cas() UpdateConditionRequestPathSelectorCas {
	return UpdateConditionRequestPathSelectorCas{}
}

type UpdateConditionRequestPathSelectorCondition struct{}

func (UpdateConditionRequestPathSelectorCondition) FieldPath() *UpdateConditionRequest_FieldTerminalPath {
	return &UpdateConditionRequest_FieldTerminalPath{selector: UpdateConditionRequest_FieldPathSelectorCondition}
}

func (s UpdateConditionRequestPathSelectorCondition) WithValue(value *condition.Condition) *UpdateConditionRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateConditionRequest_FieldTerminalPathValue)
}

func (s UpdateConditionRequestPathSelectorCondition) WithArrayOfValues(values []*condition.Condition) *UpdateConditionRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateConditionRequest_FieldTerminalPathArrayOfValues)
}

func (UpdateConditionRequestPathSelectorCondition) WithSubPath(subPath condition.Condition_FieldPath) *UpdateConditionRequest_FieldSubPath {
	return &UpdateConditionRequest_FieldSubPath{selector: UpdateConditionRequest_FieldPathSelectorCondition, subPath: subPath}
}

func (s UpdateConditionRequestPathSelectorCondition) WithSubValue(subPathValue condition.Condition_FieldPathValue) *UpdateConditionRequest_FieldSubPathValue {
	return &UpdateConditionRequest_FieldSubPathValue{UpdateConditionRequest_FieldPath: s.WithSubPath(subPathValue), subPathValue: subPathValue}
}

func (s UpdateConditionRequestPathSelectorCondition) WithSubArrayOfValues(subPathArrayOfValues condition.Condition_FieldPathArrayOfValues) *UpdateConditionRequest_FieldSubPathArrayOfValues {
	return &UpdateConditionRequest_FieldSubPathArrayOfValues{UpdateConditionRequest_FieldPath: s.WithSubPath(subPathArrayOfValues), subPathArrayOfValues: subPathArrayOfValues}
}

func (s UpdateConditionRequestPathSelectorCondition) WithSubArrayItemValue(subPathArrayItemValue condition.Condition_FieldPathArrayItemValue) *UpdateConditionRequest_FieldSubPathArrayItemValue {
	return &UpdateConditionRequest_FieldSubPathArrayItemValue{UpdateConditionRequest_FieldPath: s.WithSubPath(subPathArrayItemValue), subPathItemValue: subPathArrayItemValue}
}

func (UpdateConditionRequestPathSelectorCondition) Name() UpdateConditionRequestPathSelectorConditionName {
	return UpdateConditionRequestPathSelectorConditionName{}
}

func (UpdateConditionRequestPathSelectorCondition) DisplayName() UpdateConditionRequestPathSelectorConditionDisplayName {
	return UpdateConditionRequestPathSelectorConditionDisplayName{}
}

func (UpdateConditionRequestPathSelectorCondition) Description() UpdateConditionRequestPathSelectorConditionDescription {
	return UpdateConditionRequestPathSelectorConditionDescription{}
}

func (UpdateConditionRequestPathSelectorCondition) Expression() UpdateConditionRequestPathSelectorConditionExpression {
	return UpdateConditionRequestPathSelectorConditionExpression{}
}

func (UpdateConditionRequestPathSelectorCondition) ParameterDeclarations() UpdateConditionRequestPathSelectorConditionParameterDeclarations {
	return UpdateConditionRequestPathSelectorConditionParameterDeclarations{}
}

func (UpdateConditionRequestPathSelectorCondition) Metadata() UpdateConditionRequestPathSelectorConditionMetadata {
	return UpdateConditionRequestPathSelectorConditionMetadata{}
}

type UpdateConditionRequestPathSelectorConditionName struct{}

func (UpdateConditionRequestPathSelectorConditionName) FieldPath() *UpdateConditionRequest_FieldSubPath {
	return &UpdateConditionRequest_FieldSubPath{
		selector: UpdateConditionRequest_FieldPathSelectorCondition,
		subPath:  condition.NewConditionFieldPathBuilder().Name().FieldPath(),
	}
}

func (s UpdateConditionRequestPathSelectorConditionName) WithValue(value *condition.Name) *UpdateConditionRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateConditionRequest_FieldSubPathValue)
}

func (s UpdateConditionRequestPathSelectorConditionName) WithArrayOfValues(values []*condition.Name) *UpdateConditionRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateConditionRequest_FieldSubPathArrayOfValues)
}

type UpdateConditionRequestPathSelectorConditionDisplayName struct{}

func (UpdateConditionRequestPathSelectorConditionDisplayName) FieldPath() *UpdateConditionRequest_FieldSubPath {
	return &UpdateConditionRequest_FieldSubPath{
		selector: UpdateConditionRequest_FieldPathSelectorCondition,
		subPath:  condition.NewConditionFieldPathBuilder().DisplayName().FieldPath(),
	}
}

func (s UpdateConditionRequestPathSelectorConditionDisplayName) WithValue(value string) *UpdateConditionRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateConditionRequest_FieldSubPathValue)
}

func (s UpdateConditionRequestPathSelectorConditionDisplayName) WithArrayOfValues(values []string) *UpdateConditionRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateConditionRequest_FieldSubPathArrayOfValues)
}

type UpdateConditionRequestPathSelectorConditionDescription struct{}

func (UpdateConditionRequestPathSelectorConditionDescription) FieldPath() *UpdateConditionRequest_FieldSubPath {
	return &UpdateConditionRequest_FieldSubPath{
		selector: UpdateConditionRequest_FieldPathSelectorCondition,
		subPath:  condition.NewConditionFieldPathBuilder().Description().FieldPath(),
	}
}

func (s UpdateConditionRequestPathSelectorConditionDescription) WithValue(value string) *UpdateConditionRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateConditionRequest_FieldSubPathValue)
}

func (s UpdateConditionRequestPathSelectorConditionDescription) WithArrayOfValues(values []string) *UpdateConditionRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateConditionRequest_FieldSubPathArrayOfValues)
}

type UpdateConditionRequestPathSelectorConditionExpression struct{}

func (UpdateConditionRequestPathSelectorConditionExpression) FieldPath() *UpdateConditionRequest_FieldSubPath {
	return &UpdateConditionRequest_FieldSubPath{
		selector: UpdateConditionRequest_FieldPathSelectorCondition,
		subPath:  condition.NewConditionFieldPathBuilder().Expression().FieldPath(),
	}
}

func (s UpdateConditionRequestPathSelectorConditionExpression) WithValue(value string) *UpdateConditionRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateConditionRequest_FieldSubPathValue)
}

func (s UpdateConditionRequestPathSelectorConditionExpression) WithArrayOfValues(values []string) *UpdateConditionRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateConditionRequest_FieldSubPathArrayOfValues)
}

type UpdateConditionRequestPathSelectorConditionParameterDeclarations struct{}

func (UpdateConditionRequestPathSelectorConditionParameterDeclarations) FieldPath() *UpdateConditionRequest_FieldSubPath {
	return &UpdateConditionRequest_FieldSubPath{
		selector: UpdateConditionRequest_FieldPathSelectorCondition,
		subPath:  condition.NewConditionFieldPathBuilder().ParameterDeclarations().FieldPath(),
	}
}

func (s UpdateConditionRequestPathSelectorConditionParameterDeclarations) WithValue(value []*condition.Condition_ParameterDeclaration) *UpdateConditionRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateConditionRequest_FieldSubPathValue)
}

func (s UpdateConditionRequestPathSelectorConditionParameterDeclarations) WithArrayOfValues(values [][]*condition.Condition_ParameterDeclaration) *UpdateConditionRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateConditionRequest_FieldSubPathArrayOfValues)
}

func (s UpdateConditionRequestPathSelectorConditionParameterDeclarations) WithItemValue(value *condition.Condition_ParameterDeclaration) *UpdateConditionRequest_FieldSubPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*UpdateConditionRequest_FieldSubPathArrayItemValue)
}

func (UpdateConditionRequestPathSelectorConditionParameterDeclarations) Key() UpdateConditionRequestPathSelectorConditionParameterDeclarationsKey {
	return UpdateConditionRequestPathSelectorConditionParameterDeclarationsKey{}
}

func (UpdateConditionRequestPathSelectorConditionParameterDeclarations) Type() UpdateConditionRequestPathSelectorConditionParameterDeclarationsType {
	return UpdateConditionRequestPathSelectorConditionParameterDeclarationsType{}
}

type UpdateConditionRequestPathSelectorConditionParameterDeclarationsKey struct{}

func (UpdateConditionRequestPathSelectorConditionParameterDeclarationsKey) FieldPath() *UpdateConditionRequest_FieldSubPath {
	return &UpdateConditionRequest_FieldSubPath{
		selector: UpdateConditionRequest_FieldPathSelectorCondition,
		subPath:  condition.NewConditionFieldPathBuilder().ParameterDeclarations().Key().FieldPath(),
	}
}

func (s UpdateConditionRequestPathSelectorConditionParameterDeclarationsKey) WithValue(value string) *UpdateConditionRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateConditionRequest_FieldSubPathValue)
}

func (s UpdateConditionRequestPathSelectorConditionParameterDeclarationsKey) WithArrayOfValues(values []string) *UpdateConditionRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateConditionRequest_FieldSubPathArrayOfValues)
}

type UpdateConditionRequestPathSelectorConditionParameterDeclarationsType struct{}

func (UpdateConditionRequestPathSelectorConditionParameterDeclarationsType) FieldPath() *UpdateConditionRequest_FieldSubPath {
	return &UpdateConditionRequest_FieldSubPath{
		selector: UpdateConditionRequest_FieldPathSelectorCondition,
		subPath:  condition.NewConditionFieldPathBuilder().ParameterDeclarations().Type().FieldPath(),
	}
}

func (s UpdateConditionRequestPathSelectorConditionParameterDeclarationsType) WithValue(value condition.Condition_ParameterType) *UpdateConditionRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateConditionRequest_FieldSubPathValue)
}

func (s UpdateConditionRequestPathSelectorConditionParameterDeclarationsType) WithArrayOfValues(values []condition.Condition_ParameterType) *UpdateConditionRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateConditionRequest_FieldSubPathArrayOfValues)
}

type UpdateConditionRequestPathSelectorConditionMetadata struct{}

func (UpdateConditionRequestPathSelectorConditionMetadata) FieldPath() *UpdateConditionRequest_FieldSubPath {
	return &UpdateConditionRequest_FieldSubPath{
		selector: UpdateConditionRequest_FieldPathSelectorCondition,
		subPath:  condition.NewConditionFieldPathBuilder().Metadata().FieldPath(),
	}
}

func (s UpdateConditionRequestPathSelectorConditionMetadata) WithValue(value *ntt_meta.Meta) *UpdateConditionRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateConditionRequest_FieldSubPathValue)
}

func (s UpdateConditionRequestPathSelectorConditionMetadata) WithArrayOfValues(values []*ntt_meta.Meta) *UpdateConditionRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateConditionRequest_FieldSubPathArrayOfValues)
}

func (UpdateConditionRequestPathSelectorConditionMetadata) CreateTime() UpdateConditionRequestPathSelectorConditionMetadataCreateTime {
	return UpdateConditionRequestPathSelectorConditionMetadataCreateTime{}
}

func (UpdateConditionRequestPathSelectorConditionMetadata) UpdateTime() UpdateConditionRequestPathSelectorConditionMetadataUpdateTime {
	return UpdateConditionRequestPathSelectorConditionMetadataUpdateTime{}
}

func (UpdateConditionRequestPathSelectorConditionMetadata) DeleteTime() UpdateConditionRequestPathSelectorConditionMetadataDeleteTime {
	return UpdateConditionRequestPathSelectorConditionMetadataDeleteTime{}
}

func (UpdateConditionRequestPathSelectorConditionMetadata) Uuid() UpdateConditionRequestPathSelectorConditionMetadataUuid {
	return UpdateConditionRequestPathSelectorConditionMetadataUuid{}
}

func (UpdateConditionRequestPathSelectorConditionMetadata) Tags() UpdateConditionRequestPathSelectorConditionMetadataTags {
	return UpdateConditionRequestPathSelectorConditionMetadataTags{}
}

func (UpdateConditionRequestPathSelectorConditionMetadata) Labels() UpdateConditionRequestPathSelectorConditionMetadataLabels {
	return UpdateConditionRequestPathSelectorConditionMetadataLabels{}
}

func (UpdateConditionRequestPathSelectorConditionMetadata) Annotations() UpdateConditionRequestPathSelectorConditionMetadataAnnotations {
	return UpdateConditionRequestPathSelectorConditionMetadataAnnotations{}
}

func (UpdateConditionRequestPathSelectorConditionMetadata) Generation() UpdateConditionRequestPathSelectorConditionMetadataGeneration {
	return UpdateConditionRequestPathSelectorConditionMetadataGeneration{}
}

func (UpdateConditionRequestPathSelectorConditionMetadata) ResourceVersion() UpdateConditionRequestPathSelectorConditionMetadataResourceVersion {
	return UpdateConditionRequestPathSelectorConditionMetadataResourceVersion{}
}

func (UpdateConditionRequestPathSelectorConditionMetadata) OwnerReferences() UpdateConditionRequestPathSelectorConditionMetadataOwnerReferences {
	return UpdateConditionRequestPathSelectorConditionMetadataOwnerReferences{}
}

func (UpdateConditionRequestPathSelectorConditionMetadata) Shards() UpdateConditionRequestPathSelectorConditionMetadataShards {
	return UpdateConditionRequestPathSelectorConditionMetadataShards{}
}

func (UpdateConditionRequestPathSelectorConditionMetadata) Syncing() UpdateConditionRequestPathSelectorConditionMetadataSyncing {
	return UpdateConditionRequestPathSelectorConditionMetadataSyncing{}
}

func (UpdateConditionRequestPathSelectorConditionMetadata) Lifecycle() UpdateConditionRequestPathSelectorConditionMetadataLifecycle {
	return UpdateConditionRequestPathSelectorConditionMetadataLifecycle{}
}

type UpdateConditionRequestPathSelectorConditionMetadataCreateTime struct{}

func (UpdateConditionRequestPathSelectorConditionMetadataCreateTime) FieldPath() *UpdateConditionRequest_FieldSubPath {
	return &UpdateConditionRequest_FieldSubPath{
		selector: UpdateConditionRequest_FieldPathSelectorCondition,
		subPath:  condition.NewConditionFieldPathBuilder().Metadata().CreateTime().FieldPath(),
	}
}

func (s UpdateConditionRequestPathSelectorConditionMetadataCreateTime) WithValue(value *timestamp.Timestamp) *UpdateConditionRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateConditionRequest_FieldSubPathValue)
}

func (s UpdateConditionRequestPathSelectorConditionMetadataCreateTime) WithArrayOfValues(values []*timestamp.Timestamp) *UpdateConditionRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateConditionRequest_FieldSubPathArrayOfValues)
}

type UpdateConditionRequestPathSelectorConditionMetadataUpdateTime struct{}

func (UpdateConditionRequestPathSelectorConditionMetadataUpdateTime) FieldPath() *UpdateConditionRequest_FieldSubPath {
	return &UpdateConditionRequest_FieldSubPath{
		selector: UpdateConditionRequest_FieldPathSelectorCondition,
		subPath:  condition.NewConditionFieldPathBuilder().Metadata().UpdateTime().FieldPath(),
	}
}

func (s UpdateConditionRequestPathSelectorConditionMetadataUpdateTime) WithValue(value *timestamp.Timestamp) *UpdateConditionRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateConditionRequest_FieldSubPathValue)
}

func (s UpdateConditionRequestPathSelectorConditionMetadataUpdateTime) WithArrayOfValues(values []*timestamp.Timestamp) *UpdateConditionRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateConditionRequest_FieldSubPathArrayOfValues)
}

type UpdateConditionRequestPathSelectorConditionMetadataDeleteTime struct{}

func (UpdateConditionRequestPathSelectorConditionMetadataDeleteTime) FieldPath() *UpdateConditionRequest_FieldSubPath {
	return &UpdateConditionRequest_FieldSubPath{
		selector: UpdateConditionRequest_FieldPathSelectorCondition,
		subPath:  condition.NewConditionFieldPathBuilder().Metadata().DeleteTime().FieldPath(),
	}
}

func (s UpdateConditionRequestPathSelectorConditionMetadataDeleteTime) WithValue(value *timestamp.Timestamp) *UpdateConditionRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateConditionRequest_FieldSubPathValue)
}

func (s UpdateConditionRequestPathSelectorConditionMetadataDeleteTime) WithArrayOfValues(values []*timestamp.Timestamp) *UpdateConditionRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateConditionRequest_FieldSubPathArrayOfValues)
}

type UpdateConditionRequestPathSelectorConditionMetadataUuid struct{}

func (UpdateConditionRequestPathSelectorConditionMetadataUuid) FieldPath() *UpdateConditionRequest_FieldSubPath {
	return &UpdateConditionRequest_FieldSubPath{
		selector: UpdateConditionRequest_FieldPathSelectorCondition,
		subPath:  condition.NewConditionFieldPathBuilder().Metadata().Uuid().FieldPath(),
	}
}

func (s UpdateConditionRequestPathSelectorConditionMetadataUuid) WithValue(value string) *UpdateConditionRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateConditionRequest_FieldSubPathValue)
}

func (s UpdateConditionRequestPathSelectorConditionMetadataUuid) WithArrayOfValues(values []string) *UpdateConditionRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateConditionRequest_FieldSubPathArrayOfValues)
}

type UpdateConditionRequestPathSelectorConditionMetadataTags struct{}

func (UpdateConditionRequestPathSelectorConditionMetadataTags) FieldPath() *UpdateConditionRequest_FieldSubPath {
	return &UpdateConditionRequest_FieldSubPath{
		selector: UpdateConditionRequest_FieldPathSelectorCondition,
		subPath:  condition.NewConditionFieldPathBuilder().Metadata().Tags().FieldPath(),
	}
}

func (s UpdateConditionRequestPathSelectorConditionMetadataTags) WithValue(value []string) *UpdateConditionRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateConditionRequest_FieldSubPathValue)
}

func (s UpdateConditionRequestPathSelectorConditionMetadataTags) WithArrayOfValues(values [][]string) *UpdateConditionRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateConditionRequest_FieldSubPathArrayOfValues)
}

func (s UpdateConditionRequestPathSelectorConditionMetadataTags) WithItemValue(value string) *UpdateConditionRequest_FieldSubPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*UpdateConditionRequest_FieldSubPathArrayItemValue)
}

type UpdateConditionRequestPathSelectorConditionMetadataLabels struct{}

func (UpdateConditionRequestPathSelectorConditionMetadataLabels) FieldPath() *UpdateConditionRequest_FieldSubPath {
	return &UpdateConditionRequest_FieldSubPath{
		selector: UpdateConditionRequest_FieldPathSelectorCondition,
		subPath:  condition.NewConditionFieldPathBuilder().Metadata().Labels().FieldPath(),
	}
}

func (s UpdateConditionRequestPathSelectorConditionMetadataLabels) WithValue(value map[string]string) *UpdateConditionRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateConditionRequest_FieldSubPathValue)
}

func (s UpdateConditionRequestPathSelectorConditionMetadataLabels) WithArrayOfValues(values []map[string]string) *UpdateConditionRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateConditionRequest_FieldSubPathArrayOfValues)
}

func (UpdateConditionRequestPathSelectorConditionMetadataLabels) WithKey(key string) UpdateConditionRequestMapPathSelectorConditionMetadataLabels {
	return UpdateConditionRequestMapPathSelectorConditionMetadataLabels{key: key}
}

type UpdateConditionRequestMapPathSelectorConditionMetadataLabels struct {
	key string
}

func (s UpdateConditionRequestMapPathSelectorConditionMetadataLabels) FieldPath() *UpdateConditionRequest_FieldSubPath {
	return &UpdateConditionRequest_FieldSubPath{
		selector: UpdateConditionRequest_FieldPathSelectorCondition,
		subPath:  condition.NewConditionFieldPathBuilder().Metadata().Labels().WithKey(s.key).FieldPath(),
	}
}

func (s UpdateConditionRequestMapPathSelectorConditionMetadataLabels) WithValue(value string) *UpdateConditionRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateConditionRequest_FieldSubPathValue)
}

func (s UpdateConditionRequestMapPathSelectorConditionMetadataLabels) WithArrayOfValues(values []string) *UpdateConditionRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateConditionRequest_FieldSubPathArrayOfValues)
}

type UpdateConditionRequestPathSelectorConditionMetadataAnnotations struct{}

func (UpdateConditionRequestPathSelectorConditionMetadataAnnotations) FieldPath() *UpdateConditionRequest_FieldSubPath {
	return &UpdateConditionRequest_FieldSubPath{
		selector: UpdateConditionRequest_FieldPathSelectorCondition,
		subPath:  condition.NewConditionFieldPathBuilder().Metadata().Annotations().FieldPath(),
	}
}

func (s UpdateConditionRequestPathSelectorConditionMetadataAnnotations) WithValue(value map[string]string) *UpdateConditionRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateConditionRequest_FieldSubPathValue)
}

func (s UpdateConditionRequestPathSelectorConditionMetadataAnnotations) WithArrayOfValues(values []map[string]string) *UpdateConditionRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateConditionRequest_FieldSubPathArrayOfValues)
}

func (UpdateConditionRequestPathSelectorConditionMetadataAnnotations) WithKey(key string) UpdateConditionRequestMapPathSelectorConditionMetadataAnnotations {
	return UpdateConditionRequestMapPathSelectorConditionMetadataAnnotations{key: key}
}

type UpdateConditionRequestMapPathSelectorConditionMetadataAnnotations struct {
	key string
}

func (s UpdateConditionRequestMapPathSelectorConditionMetadataAnnotations) FieldPath() *UpdateConditionRequest_FieldSubPath {
	return &UpdateConditionRequest_FieldSubPath{
		selector: UpdateConditionRequest_FieldPathSelectorCondition,
		subPath:  condition.NewConditionFieldPathBuilder().Metadata().Annotations().WithKey(s.key).FieldPath(),
	}
}

func (s UpdateConditionRequestMapPathSelectorConditionMetadataAnnotations) WithValue(value string) *UpdateConditionRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateConditionRequest_FieldSubPathValue)
}

func (s UpdateConditionRequestMapPathSelectorConditionMetadataAnnotations) WithArrayOfValues(values []string) *UpdateConditionRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateConditionRequest_FieldSubPathArrayOfValues)
}

type UpdateConditionRequestPathSelectorConditionMetadataGeneration struct{}

func (UpdateConditionRequestPathSelectorConditionMetadataGeneration) FieldPath() *UpdateConditionRequest_FieldSubPath {
	return &UpdateConditionRequest_FieldSubPath{
		selector: UpdateConditionRequest_FieldPathSelectorCondition,
		subPath:  condition.NewConditionFieldPathBuilder().Metadata().Generation().FieldPath(),
	}
}

func (s UpdateConditionRequestPathSelectorConditionMetadataGeneration) WithValue(value int64) *UpdateConditionRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateConditionRequest_FieldSubPathValue)
}

func (s UpdateConditionRequestPathSelectorConditionMetadataGeneration) WithArrayOfValues(values []int64) *UpdateConditionRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateConditionRequest_FieldSubPathArrayOfValues)
}

type UpdateConditionRequestPathSelectorConditionMetadataResourceVersion struct{}

func (UpdateConditionRequestPathSelectorConditionMetadataResourceVersion) FieldPath() *UpdateConditionRequest_FieldSubPath {
	return &UpdateConditionRequest_FieldSubPath{
		selector: UpdateConditionRequest_FieldPathSelectorCondition,
		subPath:  condition.NewConditionFieldPathBuilder().Metadata().ResourceVersion().FieldPath(),
	}
}

func (s UpdateConditionRequestPathSelectorConditionMetadataResourceVersion) WithValue(value string) *UpdateConditionRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateConditionRequest_FieldSubPathValue)
}

func (s UpdateConditionRequestPathSelectorConditionMetadataResourceVersion) WithArrayOfValues(values []string) *UpdateConditionRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateConditionRequest_FieldSubPathArrayOfValues)
}

type UpdateConditionRequestPathSelectorConditionMetadataOwnerReferences struct{}

func (UpdateConditionRequestPathSelectorConditionMetadataOwnerReferences) FieldPath() *UpdateConditionRequest_FieldSubPath {
	return &UpdateConditionRequest_FieldSubPath{
		selector: UpdateConditionRequest_FieldPathSelectorCondition,
		subPath:  condition.NewConditionFieldPathBuilder().Metadata().OwnerReferences().FieldPath(),
	}
}

func (s UpdateConditionRequestPathSelectorConditionMetadataOwnerReferences) WithValue(value []*ntt_meta.OwnerReference) *UpdateConditionRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateConditionRequest_FieldSubPathValue)
}

func (s UpdateConditionRequestPathSelectorConditionMetadataOwnerReferences) WithArrayOfValues(values [][]*ntt_meta.OwnerReference) *UpdateConditionRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateConditionRequest_FieldSubPathArrayOfValues)
}

func (s UpdateConditionRequestPathSelectorConditionMetadataOwnerReferences) WithItemValue(value *ntt_meta.OwnerReference) *UpdateConditionRequest_FieldSubPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*UpdateConditionRequest_FieldSubPathArrayItemValue)
}

func (UpdateConditionRequestPathSelectorConditionMetadataOwnerReferences) Kind() UpdateConditionRequestPathSelectorConditionMetadataOwnerReferencesKind {
	return UpdateConditionRequestPathSelectorConditionMetadataOwnerReferencesKind{}
}

func (UpdateConditionRequestPathSelectorConditionMetadataOwnerReferences) Version() UpdateConditionRequestPathSelectorConditionMetadataOwnerReferencesVersion {
	return UpdateConditionRequestPathSelectorConditionMetadataOwnerReferencesVersion{}
}

func (UpdateConditionRequestPathSelectorConditionMetadataOwnerReferences) Name() UpdateConditionRequestPathSelectorConditionMetadataOwnerReferencesName {
	return UpdateConditionRequestPathSelectorConditionMetadataOwnerReferencesName{}
}

func (UpdateConditionRequestPathSelectorConditionMetadataOwnerReferences) Region() UpdateConditionRequestPathSelectorConditionMetadataOwnerReferencesRegion {
	return UpdateConditionRequestPathSelectorConditionMetadataOwnerReferencesRegion{}
}

func (UpdateConditionRequestPathSelectorConditionMetadataOwnerReferences) Controller() UpdateConditionRequestPathSelectorConditionMetadataOwnerReferencesController {
	return UpdateConditionRequestPathSelectorConditionMetadataOwnerReferencesController{}
}

func (UpdateConditionRequestPathSelectorConditionMetadataOwnerReferences) BlockOwnerDeletion() UpdateConditionRequestPathSelectorConditionMetadataOwnerReferencesBlockOwnerDeletion {
	return UpdateConditionRequestPathSelectorConditionMetadataOwnerReferencesBlockOwnerDeletion{}
}

func (UpdateConditionRequestPathSelectorConditionMetadataOwnerReferences) RequiresOwnerReference() UpdateConditionRequestPathSelectorConditionMetadataOwnerReferencesRequiresOwnerReference {
	return UpdateConditionRequestPathSelectorConditionMetadataOwnerReferencesRequiresOwnerReference{}
}

type UpdateConditionRequestPathSelectorConditionMetadataOwnerReferencesKind struct{}

func (UpdateConditionRequestPathSelectorConditionMetadataOwnerReferencesKind) FieldPath() *UpdateConditionRequest_FieldSubPath {
	return &UpdateConditionRequest_FieldSubPath{
		selector: UpdateConditionRequest_FieldPathSelectorCondition,
		subPath:  condition.NewConditionFieldPathBuilder().Metadata().OwnerReferences().Kind().FieldPath(),
	}
}

func (s UpdateConditionRequestPathSelectorConditionMetadataOwnerReferencesKind) WithValue(value string) *UpdateConditionRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateConditionRequest_FieldSubPathValue)
}

func (s UpdateConditionRequestPathSelectorConditionMetadataOwnerReferencesKind) WithArrayOfValues(values []string) *UpdateConditionRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateConditionRequest_FieldSubPathArrayOfValues)
}

type UpdateConditionRequestPathSelectorConditionMetadataOwnerReferencesVersion struct{}

func (UpdateConditionRequestPathSelectorConditionMetadataOwnerReferencesVersion) FieldPath() *UpdateConditionRequest_FieldSubPath {
	return &UpdateConditionRequest_FieldSubPath{
		selector: UpdateConditionRequest_FieldPathSelectorCondition,
		subPath:  condition.NewConditionFieldPathBuilder().Metadata().OwnerReferences().Version().FieldPath(),
	}
}

func (s UpdateConditionRequestPathSelectorConditionMetadataOwnerReferencesVersion) WithValue(value string) *UpdateConditionRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateConditionRequest_FieldSubPathValue)
}

func (s UpdateConditionRequestPathSelectorConditionMetadataOwnerReferencesVersion) WithArrayOfValues(values []string) *UpdateConditionRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateConditionRequest_FieldSubPathArrayOfValues)
}

type UpdateConditionRequestPathSelectorConditionMetadataOwnerReferencesName struct{}

func (UpdateConditionRequestPathSelectorConditionMetadataOwnerReferencesName) FieldPath() *UpdateConditionRequest_FieldSubPath {
	return &UpdateConditionRequest_FieldSubPath{
		selector: UpdateConditionRequest_FieldPathSelectorCondition,
		subPath:  condition.NewConditionFieldPathBuilder().Metadata().OwnerReferences().Name().FieldPath(),
	}
}

func (s UpdateConditionRequestPathSelectorConditionMetadataOwnerReferencesName) WithValue(value string) *UpdateConditionRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateConditionRequest_FieldSubPathValue)
}

func (s UpdateConditionRequestPathSelectorConditionMetadataOwnerReferencesName) WithArrayOfValues(values []string) *UpdateConditionRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateConditionRequest_FieldSubPathArrayOfValues)
}

type UpdateConditionRequestPathSelectorConditionMetadataOwnerReferencesRegion struct{}

func (UpdateConditionRequestPathSelectorConditionMetadataOwnerReferencesRegion) FieldPath() *UpdateConditionRequest_FieldSubPath {
	return &UpdateConditionRequest_FieldSubPath{
		selector: UpdateConditionRequest_FieldPathSelectorCondition,
		subPath:  condition.NewConditionFieldPathBuilder().Metadata().OwnerReferences().Region().FieldPath(),
	}
}

func (s UpdateConditionRequestPathSelectorConditionMetadataOwnerReferencesRegion) WithValue(value string) *UpdateConditionRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateConditionRequest_FieldSubPathValue)
}

func (s UpdateConditionRequestPathSelectorConditionMetadataOwnerReferencesRegion) WithArrayOfValues(values []string) *UpdateConditionRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateConditionRequest_FieldSubPathArrayOfValues)
}

type UpdateConditionRequestPathSelectorConditionMetadataOwnerReferencesController struct{}

func (UpdateConditionRequestPathSelectorConditionMetadataOwnerReferencesController) FieldPath() *UpdateConditionRequest_FieldSubPath {
	return &UpdateConditionRequest_FieldSubPath{
		selector: UpdateConditionRequest_FieldPathSelectorCondition,
		subPath:  condition.NewConditionFieldPathBuilder().Metadata().OwnerReferences().Controller().FieldPath(),
	}
}

func (s UpdateConditionRequestPathSelectorConditionMetadataOwnerReferencesController) WithValue(value bool) *UpdateConditionRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateConditionRequest_FieldSubPathValue)
}

func (s UpdateConditionRequestPathSelectorConditionMetadataOwnerReferencesController) WithArrayOfValues(values []bool) *UpdateConditionRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateConditionRequest_FieldSubPathArrayOfValues)
}

type UpdateConditionRequestPathSelectorConditionMetadataOwnerReferencesBlockOwnerDeletion struct{}

func (UpdateConditionRequestPathSelectorConditionMetadataOwnerReferencesBlockOwnerDeletion) FieldPath() *UpdateConditionRequest_FieldSubPath {
	return &UpdateConditionRequest_FieldSubPath{
		selector: UpdateConditionRequest_FieldPathSelectorCondition,
		subPath:  condition.NewConditionFieldPathBuilder().Metadata().OwnerReferences().BlockOwnerDeletion().FieldPath(),
	}
}

func (s UpdateConditionRequestPathSelectorConditionMetadataOwnerReferencesBlockOwnerDeletion) WithValue(value bool) *UpdateConditionRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateConditionRequest_FieldSubPathValue)
}

func (s UpdateConditionRequestPathSelectorConditionMetadataOwnerReferencesBlockOwnerDeletion) WithArrayOfValues(values []bool) *UpdateConditionRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateConditionRequest_FieldSubPathArrayOfValues)
}

type UpdateConditionRequestPathSelectorConditionMetadataOwnerReferencesRequiresOwnerReference struct{}

func (UpdateConditionRequestPathSelectorConditionMetadataOwnerReferencesRequiresOwnerReference) FieldPath() *UpdateConditionRequest_FieldSubPath {
	return &UpdateConditionRequest_FieldSubPath{
		selector: UpdateConditionRequest_FieldPathSelectorCondition,
		subPath:  condition.NewConditionFieldPathBuilder().Metadata().OwnerReferences().RequiresOwnerReference().FieldPath(),
	}
}

func (s UpdateConditionRequestPathSelectorConditionMetadataOwnerReferencesRequiresOwnerReference) WithValue(value bool) *UpdateConditionRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateConditionRequest_FieldSubPathValue)
}

func (s UpdateConditionRequestPathSelectorConditionMetadataOwnerReferencesRequiresOwnerReference) WithArrayOfValues(values []bool) *UpdateConditionRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateConditionRequest_FieldSubPathArrayOfValues)
}

type UpdateConditionRequestPathSelectorConditionMetadataShards struct{}

func (UpdateConditionRequestPathSelectorConditionMetadataShards) FieldPath() *UpdateConditionRequest_FieldSubPath {
	return &UpdateConditionRequest_FieldSubPath{
		selector: UpdateConditionRequest_FieldPathSelectorCondition,
		subPath:  condition.NewConditionFieldPathBuilder().Metadata().Shards().FieldPath(),
	}
}

func (s UpdateConditionRequestPathSelectorConditionMetadataShards) WithValue(value map[string]int64) *UpdateConditionRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateConditionRequest_FieldSubPathValue)
}

func (s UpdateConditionRequestPathSelectorConditionMetadataShards) WithArrayOfValues(values []map[string]int64) *UpdateConditionRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateConditionRequest_FieldSubPathArrayOfValues)
}

func (UpdateConditionRequestPathSelectorConditionMetadataShards) WithKey(key string) UpdateConditionRequestMapPathSelectorConditionMetadataShards {
	return UpdateConditionRequestMapPathSelectorConditionMetadataShards{key: key}
}

type UpdateConditionRequestMapPathSelectorConditionMetadataShards struct {
	key string
}

func (s UpdateConditionRequestMapPathSelectorConditionMetadataShards) FieldPath() *UpdateConditionRequest_FieldSubPath {
	return &UpdateConditionRequest_FieldSubPath{
		selector: UpdateConditionRequest_FieldPathSelectorCondition,
		subPath:  condition.NewConditionFieldPathBuilder().Metadata().Shards().WithKey(s.key).FieldPath(),
	}
}

func (s UpdateConditionRequestMapPathSelectorConditionMetadataShards) WithValue(value int64) *UpdateConditionRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateConditionRequest_FieldSubPathValue)
}

func (s UpdateConditionRequestMapPathSelectorConditionMetadataShards) WithArrayOfValues(values []int64) *UpdateConditionRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateConditionRequest_FieldSubPathArrayOfValues)
}

type UpdateConditionRequestPathSelectorConditionMetadataSyncing struct{}

func (UpdateConditionRequestPathSelectorConditionMetadataSyncing) FieldPath() *UpdateConditionRequest_FieldSubPath {
	return &UpdateConditionRequest_FieldSubPath{
		selector: UpdateConditionRequest_FieldPathSelectorCondition,
		subPath:  condition.NewConditionFieldPathBuilder().Metadata().Syncing().FieldPath(),
	}
}

func (s UpdateConditionRequestPathSelectorConditionMetadataSyncing) WithValue(value *ntt_meta.SyncingMeta) *UpdateConditionRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateConditionRequest_FieldSubPathValue)
}

func (s UpdateConditionRequestPathSelectorConditionMetadataSyncing) WithArrayOfValues(values []*ntt_meta.SyncingMeta) *UpdateConditionRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateConditionRequest_FieldSubPathArrayOfValues)
}

func (UpdateConditionRequestPathSelectorConditionMetadataSyncing) OwningRegion() UpdateConditionRequestPathSelectorConditionMetadataSyncingOwningRegion {
	return UpdateConditionRequestPathSelectorConditionMetadataSyncingOwningRegion{}
}

func (UpdateConditionRequestPathSelectorConditionMetadataSyncing) Regions() UpdateConditionRequestPathSelectorConditionMetadataSyncingRegions {
	return UpdateConditionRequestPathSelectorConditionMetadataSyncingRegions{}
}

type UpdateConditionRequestPathSelectorConditionMetadataSyncingOwningRegion struct{}

func (UpdateConditionRequestPathSelectorConditionMetadataSyncingOwningRegion) FieldPath() *UpdateConditionRequest_FieldSubPath {
	return &UpdateConditionRequest_FieldSubPath{
		selector: UpdateConditionRequest_FieldPathSelectorCondition,
		subPath:  condition.NewConditionFieldPathBuilder().Metadata().Syncing().OwningRegion().FieldPath(),
	}
}

func (s UpdateConditionRequestPathSelectorConditionMetadataSyncingOwningRegion) WithValue(value string) *UpdateConditionRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateConditionRequest_FieldSubPathValue)
}

func (s UpdateConditionRequestPathSelectorConditionMetadataSyncingOwningRegion) WithArrayOfValues(values []string) *UpdateConditionRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateConditionRequest_FieldSubPathArrayOfValues)
}

type UpdateConditionRequestPathSelectorConditionMetadataSyncingRegions struct{}

func (UpdateConditionRequestPathSelectorConditionMetadataSyncingRegions) FieldPath() *UpdateConditionRequest_FieldSubPath {
	return &UpdateConditionRequest_FieldSubPath{
		selector: UpdateConditionRequest_FieldPathSelectorCondition,
		subPath:  condition.NewConditionFieldPathBuilder().Metadata().Syncing().Regions().FieldPath(),
	}
}

func (s UpdateConditionRequestPathSelectorConditionMetadataSyncingRegions) WithValue(value []string) *UpdateConditionRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateConditionRequest_FieldSubPathValue)
}

func (s UpdateConditionRequestPathSelectorConditionMetadataSyncingRegions) WithArrayOfValues(values [][]string) *UpdateConditionRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateConditionRequest_FieldSubPathArrayOfValues)
}

func (s UpdateConditionRequestPathSelectorConditionMetadataSyncingRegions) WithItemValue(value string) *UpdateConditionRequest_FieldSubPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*UpdateConditionRequest_FieldSubPathArrayItemValue)
}

type UpdateConditionRequestPathSelectorConditionMetadataLifecycle struct{}

func (UpdateConditionRequestPathSelectorConditionMetadataLifecycle) FieldPath() *UpdateConditionRequest_FieldSubPath {
	return &UpdateConditionRequest_FieldSubPath{
		selector: UpdateConditionRequest_FieldPathSelectorCondition,
		subPath:  condition.NewConditionFieldPathBuilder().Metadata().Lifecycle().FieldPath(),
	}
}

func (s UpdateConditionRequestPathSelectorConditionMetadataLifecycle) WithValue(value *ntt_meta.Lifecycle) *UpdateConditionRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateConditionRequest_FieldSubPathValue)
}

func (s UpdateConditionRequestPathSelectorConditionMetadataLifecycle) WithArrayOfValues(values []*ntt_meta.Lifecycle) *UpdateConditionRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateConditionRequest_FieldSubPathArrayOfValues)
}

func (UpdateConditionRequestPathSelectorConditionMetadataLifecycle) State() UpdateConditionRequestPathSelectorConditionMetadataLifecycleState {
	return UpdateConditionRequestPathSelectorConditionMetadataLifecycleState{}
}

func (UpdateConditionRequestPathSelectorConditionMetadataLifecycle) BlockDeletion() UpdateConditionRequestPathSelectorConditionMetadataLifecycleBlockDeletion {
	return UpdateConditionRequestPathSelectorConditionMetadataLifecycleBlockDeletion{}
}

type UpdateConditionRequestPathSelectorConditionMetadataLifecycleState struct{}

func (UpdateConditionRequestPathSelectorConditionMetadataLifecycleState) FieldPath() *UpdateConditionRequest_FieldSubPath {
	return &UpdateConditionRequest_FieldSubPath{
		selector: UpdateConditionRequest_FieldPathSelectorCondition,
		subPath:  condition.NewConditionFieldPathBuilder().Metadata().Lifecycle().State().FieldPath(),
	}
}

func (s UpdateConditionRequestPathSelectorConditionMetadataLifecycleState) WithValue(value ntt_meta.Lifecycle_State) *UpdateConditionRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateConditionRequest_FieldSubPathValue)
}

func (s UpdateConditionRequestPathSelectorConditionMetadataLifecycleState) WithArrayOfValues(values []ntt_meta.Lifecycle_State) *UpdateConditionRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateConditionRequest_FieldSubPathArrayOfValues)
}

type UpdateConditionRequestPathSelectorConditionMetadataLifecycleBlockDeletion struct{}

func (UpdateConditionRequestPathSelectorConditionMetadataLifecycleBlockDeletion) FieldPath() *UpdateConditionRequest_FieldSubPath {
	return &UpdateConditionRequest_FieldSubPath{
		selector: UpdateConditionRequest_FieldPathSelectorCondition,
		subPath:  condition.NewConditionFieldPathBuilder().Metadata().Lifecycle().BlockDeletion().FieldPath(),
	}
}

func (s UpdateConditionRequestPathSelectorConditionMetadataLifecycleBlockDeletion) WithValue(value bool) *UpdateConditionRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateConditionRequest_FieldSubPathValue)
}

func (s UpdateConditionRequestPathSelectorConditionMetadataLifecycleBlockDeletion) WithArrayOfValues(values []bool) *UpdateConditionRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateConditionRequest_FieldSubPathArrayOfValues)
}

type UpdateConditionRequestPathSelectorUpdateMask struct{}

func (UpdateConditionRequestPathSelectorUpdateMask) FieldPath() *UpdateConditionRequest_FieldTerminalPath {
	return &UpdateConditionRequest_FieldTerminalPath{selector: UpdateConditionRequest_FieldPathSelectorUpdateMask}
}

func (s UpdateConditionRequestPathSelectorUpdateMask) WithValue(value *condition.Condition_FieldMask) *UpdateConditionRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateConditionRequest_FieldTerminalPathValue)
}

func (s UpdateConditionRequestPathSelectorUpdateMask) WithArrayOfValues(values []*condition.Condition_FieldMask) *UpdateConditionRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateConditionRequest_FieldTerminalPathArrayOfValues)
}

type UpdateConditionRequestPathSelectorCas struct{}

func (UpdateConditionRequestPathSelectorCas) FieldPath() *UpdateConditionRequest_FieldTerminalPath {
	return &UpdateConditionRequest_FieldTerminalPath{selector: UpdateConditionRequest_FieldPathSelectorCas}
}

func (s UpdateConditionRequestPathSelectorCas) WithValue(value *UpdateConditionRequest_CAS) *UpdateConditionRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateConditionRequest_FieldTerminalPathValue)
}

func (s UpdateConditionRequestPathSelectorCas) WithArrayOfValues(values []*UpdateConditionRequest_CAS) *UpdateConditionRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateConditionRequest_FieldTerminalPathArrayOfValues)
}

func (UpdateConditionRequestPathSelectorCas) WithSubPath(subPath UpdateConditionRequestCAS_FieldPath) *UpdateConditionRequest_FieldSubPath {
	return &UpdateConditionRequest_FieldSubPath{selector: UpdateConditionRequest_FieldPathSelectorCas, subPath: subPath}
}

func (s UpdateConditionRequestPathSelectorCas) WithSubValue(subPathValue UpdateConditionRequestCAS_FieldPathValue) *UpdateConditionRequest_FieldSubPathValue {
	return &UpdateConditionRequest_FieldSubPathValue{UpdateConditionRequest_FieldPath: s.WithSubPath(subPathValue), subPathValue: subPathValue}
}

func (s UpdateConditionRequestPathSelectorCas) WithSubArrayOfValues(subPathArrayOfValues UpdateConditionRequestCAS_FieldPathArrayOfValues) *UpdateConditionRequest_FieldSubPathArrayOfValues {
	return &UpdateConditionRequest_FieldSubPathArrayOfValues{UpdateConditionRequest_FieldPath: s.WithSubPath(subPathArrayOfValues), subPathArrayOfValues: subPathArrayOfValues}
}

func (s UpdateConditionRequestPathSelectorCas) WithSubArrayItemValue(subPathArrayItemValue UpdateConditionRequestCAS_FieldPathArrayItemValue) *UpdateConditionRequest_FieldSubPathArrayItemValue {
	return &UpdateConditionRequest_FieldSubPathArrayItemValue{UpdateConditionRequest_FieldPath: s.WithSubPath(subPathArrayItemValue), subPathItemValue: subPathArrayItemValue}
}

func (UpdateConditionRequestPathSelectorCas) ConditionalState() UpdateConditionRequestPathSelectorCasConditionalState {
	return UpdateConditionRequestPathSelectorCasConditionalState{}
}

func (UpdateConditionRequestPathSelectorCas) FieldMask() UpdateConditionRequestPathSelectorCasFieldMask {
	return UpdateConditionRequestPathSelectorCasFieldMask{}
}

type UpdateConditionRequestPathSelectorCasConditionalState struct{}

func (UpdateConditionRequestPathSelectorCasConditionalState) FieldPath() *UpdateConditionRequest_FieldSubPath {
	return &UpdateConditionRequest_FieldSubPath{
		selector: UpdateConditionRequest_FieldPathSelectorCas,
		subPath:  NewUpdateConditionRequestCASFieldPathBuilder().ConditionalState().FieldPath(),
	}
}

func (s UpdateConditionRequestPathSelectorCasConditionalState) WithValue(value *condition.Condition) *UpdateConditionRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateConditionRequest_FieldSubPathValue)
}

func (s UpdateConditionRequestPathSelectorCasConditionalState) WithArrayOfValues(values []*condition.Condition) *UpdateConditionRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateConditionRequest_FieldSubPathArrayOfValues)
}

func (UpdateConditionRequestPathSelectorCasConditionalState) Name() UpdateConditionRequestPathSelectorCasConditionalStateName {
	return UpdateConditionRequestPathSelectorCasConditionalStateName{}
}

func (UpdateConditionRequestPathSelectorCasConditionalState) DisplayName() UpdateConditionRequestPathSelectorCasConditionalStateDisplayName {
	return UpdateConditionRequestPathSelectorCasConditionalStateDisplayName{}
}

func (UpdateConditionRequestPathSelectorCasConditionalState) Description() UpdateConditionRequestPathSelectorCasConditionalStateDescription {
	return UpdateConditionRequestPathSelectorCasConditionalStateDescription{}
}

func (UpdateConditionRequestPathSelectorCasConditionalState) Expression() UpdateConditionRequestPathSelectorCasConditionalStateExpression {
	return UpdateConditionRequestPathSelectorCasConditionalStateExpression{}
}

func (UpdateConditionRequestPathSelectorCasConditionalState) ParameterDeclarations() UpdateConditionRequestPathSelectorCasConditionalStateParameterDeclarations {
	return UpdateConditionRequestPathSelectorCasConditionalStateParameterDeclarations{}
}

func (UpdateConditionRequestPathSelectorCasConditionalState) Metadata() UpdateConditionRequestPathSelectorCasConditionalStateMetadata {
	return UpdateConditionRequestPathSelectorCasConditionalStateMetadata{}
}

type UpdateConditionRequestPathSelectorCasConditionalStateName struct{}

func (UpdateConditionRequestPathSelectorCasConditionalStateName) FieldPath() *UpdateConditionRequest_FieldSubPath {
	return &UpdateConditionRequest_FieldSubPath{
		selector: UpdateConditionRequest_FieldPathSelectorCas,
		subPath:  NewUpdateConditionRequestCASFieldPathBuilder().ConditionalState().Name().FieldPath(),
	}
}

func (s UpdateConditionRequestPathSelectorCasConditionalStateName) WithValue(value *condition.Name) *UpdateConditionRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateConditionRequest_FieldSubPathValue)
}

func (s UpdateConditionRequestPathSelectorCasConditionalStateName) WithArrayOfValues(values []*condition.Name) *UpdateConditionRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateConditionRequest_FieldSubPathArrayOfValues)
}

type UpdateConditionRequestPathSelectorCasConditionalStateDisplayName struct{}

func (UpdateConditionRequestPathSelectorCasConditionalStateDisplayName) FieldPath() *UpdateConditionRequest_FieldSubPath {
	return &UpdateConditionRequest_FieldSubPath{
		selector: UpdateConditionRequest_FieldPathSelectorCas,
		subPath:  NewUpdateConditionRequestCASFieldPathBuilder().ConditionalState().DisplayName().FieldPath(),
	}
}

func (s UpdateConditionRequestPathSelectorCasConditionalStateDisplayName) WithValue(value string) *UpdateConditionRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateConditionRequest_FieldSubPathValue)
}

func (s UpdateConditionRequestPathSelectorCasConditionalStateDisplayName) WithArrayOfValues(values []string) *UpdateConditionRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateConditionRequest_FieldSubPathArrayOfValues)
}

type UpdateConditionRequestPathSelectorCasConditionalStateDescription struct{}

func (UpdateConditionRequestPathSelectorCasConditionalStateDescription) FieldPath() *UpdateConditionRequest_FieldSubPath {
	return &UpdateConditionRequest_FieldSubPath{
		selector: UpdateConditionRequest_FieldPathSelectorCas,
		subPath:  NewUpdateConditionRequestCASFieldPathBuilder().ConditionalState().Description().FieldPath(),
	}
}

func (s UpdateConditionRequestPathSelectorCasConditionalStateDescription) WithValue(value string) *UpdateConditionRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateConditionRequest_FieldSubPathValue)
}

func (s UpdateConditionRequestPathSelectorCasConditionalStateDescription) WithArrayOfValues(values []string) *UpdateConditionRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateConditionRequest_FieldSubPathArrayOfValues)
}

type UpdateConditionRequestPathSelectorCasConditionalStateExpression struct{}

func (UpdateConditionRequestPathSelectorCasConditionalStateExpression) FieldPath() *UpdateConditionRequest_FieldSubPath {
	return &UpdateConditionRequest_FieldSubPath{
		selector: UpdateConditionRequest_FieldPathSelectorCas,
		subPath:  NewUpdateConditionRequestCASFieldPathBuilder().ConditionalState().Expression().FieldPath(),
	}
}

func (s UpdateConditionRequestPathSelectorCasConditionalStateExpression) WithValue(value string) *UpdateConditionRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateConditionRequest_FieldSubPathValue)
}

func (s UpdateConditionRequestPathSelectorCasConditionalStateExpression) WithArrayOfValues(values []string) *UpdateConditionRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateConditionRequest_FieldSubPathArrayOfValues)
}

type UpdateConditionRequestPathSelectorCasConditionalStateParameterDeclarations struct{}

func (UpdateConditionRequestPathSelectorCasConditionalStateParameterDeclarations) FieldPath() *UpdateConditionRequest_FieldSubPath {
	return &UpdateConditionRequest_FieldSubPath{
		selector: UpdateConditionRequest_FieldPathSelectorCas,
		subPath:  NewUpdateConditionRequestCASFieldPathBuilder().ConditionalState().ParameterDeclarations().FieldPath(),
	}
}

func (s UpdateConditionRequestPathSelectorCasConditionalStateParameterDeclarations) WithValue(value []*condition.Condition_ParameterDeclaration) *UpdateConditionRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateConditionRequest_FieldSubPathValue)
}

func (s UpdateConditionRequestPathSelectorCasConditionalStateParameterDeclarations) WithArrayOfValues(values [][]*condition.Condition_ParameterDeclaration) *UpdateConditionRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateConditionRequest_FieldSubPathArrayOfValues)
}

func (s UpdateConditionRequestPathSelectorCasConditionalStateParameterDeclarations) WithItemValue(value *condition.Condition_ParameterDeclaration) *UpdateConditionRequest_FieldSubPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*UpdateConditionRequest_FieldSubPathArrayItemValue)
}

func (UpdateConditionRequestPathSelectorCasConditionalStateParameterDeclarations) Key() UpdateConditionRequestPathSelectorCasConditionalStateParameterDeclarationsKey {
	return UpdateConditionRequestPathSelectorCasConditionalStateParameterDeclarationsKey{}
}

func (UpdateConditionRequestPathSelectorCasConditionalStateParameterDeclarations) Type() UpdateConditionRequestPathSelectorCasConditionalStateParameterDeclarationsType {
	return UpdateConditionRequestPathSelectorCasConditionalStateParameterDeclarationsType{}
}

type UpdateConditionRequestPathSelectorCasConditionalStateParameterDeclarationsKey struct{}

func (UpdateConditionRequestPathSelectorCasConditionalStateParameterDeclarationsKey) FieldPath() *UpdateConditionRequest_FieldSubPath {
	return &UpdateConditionRequest_FieldSubPath{
		selector: UpdateConditionRequest_FieldPathSelectorCas,
		subPath:  NewUpdateConditionRequestCASFieldPathBuilder().ConditionalState().ParameterDeclarations().Key().FieldPath(),
	}
}

func (s UpdateConditionRequestPathSelectorCasConditionalStateParameterDeclarationsKey) WithValue(value string) *UpdateConditionRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateConditionRequest_FieldSubPathValue)
}

func (s UpdateConditionRequestPathSelectorCasConditionalStateParameterDeclarationsKey) WithArrayOfValues(values []string) *UpdateConditionRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateConditionRequest_FieldSubPathArrayOfValues)
}

type UpdateConditionRequestPathSelectorCasConditionalStateParameterDeclarationsType struct{}

func (UpdateConditionRequestPathSelectorCasConditionalStateParameterDeclarationsType) FieldPath() *UpdateConditionRequest_FieldSubPath {
	return &UpdateConditionRequest_FieldSubPath{
		selector: UpdateConditionRequest_FieldPathSelectorCas,
		subPath:  NewUpdateConditionRequestCASFieldPathBuilder().ConditionalState().ParameterDeclarations().Type().FieldPath(),
	}
}

func (s UpdateConditionRequestPathSelectorCasConditionalStateParameterDeclarationsType) WithValue(value condition.Condition_ParameterType) *UpdateConditionRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateConditionRequest_FieldSubPathValue)
}

func (s UpdateConditionRequestPathSelectorCasConditionalStateParameterDeclarationsType) WithArrayOfValues(values []condition.Condition_ParameterType) *UpdateConditionRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateConditionRequest_FieldSubPathArrayOfValues)
}

type UpdateConditionRequestPathSelectorCasConditionalStateMetadata struct{}

func (UpdateConditionRequestPathSelectorCasConditionalStateMetadata) FieldPath() *UpdateConditionRequest_FieldSubPath {
	return &UpdateConditionRequest_FieldSubPath{
		selector: UpdateConditionRequest_FieldPathSelectorCas,
		subPath:  NewUpdateConditionRequestCASFieldPathBuilder().ConditionalState().Metadata().FieldPath(),
	}
}

func (s UpdateConditionRequestPathSelectorCasConditionalStateMetadata) WithValue(value *ntt_meta.Meta) *UpdateConditionRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateConditionRequest_FieldSubPathValue)
}

func (s UpdateConditionRequestPathSelectorCasConditionalStateMetadata) WithArrayOfValues(values []*ntt_meta.Meta) *UpdateConditionRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateConditionRequest_FieldSubPathArrayOfValues)
}

func (UpdateConditionRequestPathSelectorCasConditionalStateMetadata) CreateTime() UpdateConditionRequestPathSelectorCasConditionalStateMetadataCreateTime {
	return UpdateConditionRequestPathSelectorCasConditionalStateMetadataCreateTime{}
}

func (UpdateConditionRequestPathSelectorCasConditionalStateMetadata) UpdateTime() UpdateConditionRequestPathSelectorCasConditionalStateMetadataUpdateTime {
	return UpdateConditionRequestPathSelectorCasConditionalStateMetadataUpdateTime{}
}

func (UpdateConditionRequestPathSelectorCasConditionalStateMetadata) DeleteTime() UpdateConditionRequestPathSelectorCasConditionalStateMetadataDeleteTime {
	return UpdateConditionRequestPathSelectorCasConditionalStateMetadataDeleteTime{}
}

func (UpdateConditionRequestPathSelectorCasConditionalStateMetadata) Uuid() UpdateConditionRequestPathSelectorCasConditionalStateMetadataUuid {
	return UpdateConditionRequestPathSelectorCasConditionalStateMetadataUuid{}
}

func (UpdateConditionRequestPathSelectorCasConditionalStateMetadata) Tags() UpdateConditionRequestPathSelectorCasConditionalStateMetadataTags {
	return UpdateConditionRequestPathSelectorCasConditionalStateMetadataTags{}
}

func (UpdateConditionRequestPathSelectorCasConditionalStateMetadata) Labels() UpdateConditionRequestPathSelectorCasConditionalStateMetadataLabels {
	return UpdateConditionRequestPathSelectorCasConditionalStateMetadataLabels{}
}

func (UpdateConditionRequestPathSelectorCasConditionalStateMetadata) Annotations() UpdateConditionRequestPathSelectorCasConditionalStateMetadataAnnotations {
	return UpdateConditionRequestPathSelectorCasConditionalStateMetadataAnnotations{}
}

func (UpdateConditionRequestPathSelectorCasConditionalStateMetadata) Generation() UpdateConditionRequestPathSelectorCasConditionalStateMetadataGeneration {
	return UpdateConditionRequestPathSelectorCasConditionalStateMetadataGeneration{}
}

func (UpdateConditionRequestPathSelectorCasConditionalStateMetadata) ResourceVersion() UpdateConditionRequestPathSelectorCasConditionalStateMetadataResourceVersion {
	return UpdateConditionRequestPathSelectorCasConditionalStateMetadataResourceVersion{}
}

func (UpdateConditionRequestPathSelectorCasConditionalStateMetadata) OwnerReferences() UpdateConditionRequestPathSelectorCasConditionalStateMetadataOwnerReferences {
	return UpdateConditionRequestPathSelectorCasConditionalStateMetadataOwnerReferences{}
}

func (UpdateConditionRequestPathSelectorCasConditionalStateMetadata) Shards() UpdateConditionRequestPathSelectorCasConditionalStateMetadataShards {
	return UpdateConditionRequestPathSelectorCasConditionalStateMetadataShards{}
}

func (UpdateConditionRequestPathSelectorCasConditionalStateMetadata) Syncing() UpdateConditionRequestPathSelectorCasConditionalStateMetadataSyncing {
	return UpdateConditionRequestPathSelectorCasConditionalStateMetadataSyncing{}
}

func (UpdateConditionRequestPathSelectorCasConditionalStateMetadata) Lifecycle() UpdateConditionRequestPathSelectorCasConditionalStateMetadataLifecycle {
	return UpdateConditionRequestPathSelectorCasConditionalStateMetadataLifecycle{}
}

type UpdateConditionRequestPathSelectorCasConditionalStateMetadataCreateTime struct{}

func (UpdateConditionRequestPathSelectorCasConditionalStateMetadataCreateTime) FieldPath() *UpdateConditionRequest_FieldSubPath {
	return &UpdateConditionRequest_FieldSubPath{
		selector: UpdateConditionRequest_FieldPathSelectorCas,
		subPath:  NewUpdateConditionRequestCASFieldPathBuilder().ConditionalState().Metadata().CreateTime().FieldPath(),
	}
}

func (s UpdateConditionRequestPathSelectorCasConditionalStateMetadataCreateTime) WithValue(value *timestamp.Timestamp) *UpdateConditionRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateConditionRequest_FieldSubPathValue)
}

func (s UpdateConditionRequestPathSelectorCasConditionalStateMetadataCreateTime) WithArrayOfValues(values []*timestamp.Timestamp) *UpdateConditionRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateConditionRequest_FieldSubPathArrayOfValues)
}

type UpdateConditionRequestPathSelectorCasConditionalStateMetadataUpdateTime struct{}

func (UpdateConditionRequestPathSelectorCasConditionalStateMetadataUpdateTime) FieldPath() *UpdateConditionRequest_FieldSubPath {
	return &UpdateConditionRequest_FieldSubPath{
		selector: UpdateConditionRequest_FieldPathSelectorCas,
		subPath:  NewUpdateConditionRequestCASFieldPathBuilder().ConditionalState().Metadata().UpdateTime().FieldPath(),
	}
}

func (s UpdateConditionRequestPathSelectorCasConditionalStateMetadataUpdateTime) WithValue(value *timestamp.Timestamp) *UpdateConditionRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateConditionRequest_FieldSubPathValue)
}

func (s UpdateConditionRequestPathSelectorCasConditionalStateMetadataUpdateTime) WithArrayOfValues(values []*timestamp.Timestamp) *UpdateConditionRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateConditionRequest_FieldSubPathArrayOfValues)
}

type UpdateConditionRequestPathSelectorCasConditionalStateMetadataDeleteTime struct{}

func (UpdateConditionRequestPathSelectorCasConditionalStateMetadataDeleteTime) FieldPath() *UpdateConditionRequest_FieldSubPath {
	return &UpdateConditionRequest_FieldSubPath{
		selector: UpdateConditionRequest_FieldPathSelectorCas,
		subPath:  NewUpdateConditionRequestCASFieldPathBuilder().ConditionalState().Metadata().DeleteTime().FieldPath(),
	}
}

func (s UpdateConditionRequestPathSelectorCasConditionalStateMetadataDeleteTime) WithValue(value *timestamp.Timestamp) *UpdateConditionRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateConditionRequest_FieldSubPathValue)
}

func (s UpdateConditionRequestPathSelectorCasConditionalStateMetadataDeleteTime) WithArrayOfValues(values []*timestamp.Timestamp) *UpdateConditionRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateConditionRequest_FieldSubPathArrayOfValues)
}

type UpdateConditionRequestPathSelectorCasConditionalStateMetadataUuid struct{}

func (UpdateConditionRequestPathSelectorCasConditionalStateMetadataUuid) FieldPath() *UpdateConditionRequest_FieldSubPath {
	return &UpdateConditionRequest_FieldSubPath{
		selector: UpdateConditionRequest_FieldPathSelectorCas,
		subPath:  NewUpdateConditionRequestCASFieldPathBuilder().ConditionalState().Metadata().Uuid().FieldPath(),
	}
}

func (s UpdateConditionRequestPathSelectorCasConditionalStateMetadataUuid) WithValue(value string) *UpdateConditionRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateConditionRequest_FieldSubPathValue)
}

func (s UpdateConditionRequestPathSelectorCasConditionalStateMetadataUuid) WithArrayOfValues(values []string) *UpdateConditionRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateConditionRequest_FieldSubPathArrayOfValues)
}

type UpdateConditionRequestPathSelectorCasConditionalStateMetadataTags struct{}

func (UpdateConditionRequestPathSelectorCasConditionalStateMetadataTags) FieldPath() *UpdateConditionRequest_FieldSubPath {
	return &UpdateConditionRequest_FieldSubPath{
		selector: UpdateConditionRequest_FieldPathSelectorCas,
		subPath:  NewUpdateConditionRequestCASFieldPathBuilder().ConditionalState().Metadata().Tags().FieldPath(),
	}
}

func (s UpdateConditionRequestPathSelectorCasConditionalStateMetadataTags) WithValue(value []string) *UpdateConditionRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateConditionRequest_FieldSubPathValue)
}

func (s UpdateConditionRequestPathSelectorCasConditionalStateMetadataTags) WithArrayOfValues(values [][]string) *UpdateConditionRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateConditionRequest_FieldSubPathArrayOfValues)
}

func (s UpdateConditionRequestPathSelectorCasConditionalStateMetadataTags) WithItemValue(value string) *UpdateConditionRequest_FieldSubPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*UpdateConditionRequest_FieldSubPathArrayItemValue)
}

type UpdateConditionRequestPathSelectorCasConditionalStateMetadataLabels struct{}

func (UpdateConditionRequestPathSelectorCasConditionalStateMetadataLabels) FieldPath() *UpdateConditionRequest_FieldSubPath {
	return &UpdateConditionRequest_FieldSubPath{
		selector: UpdateConditionRequest_FieldPathSelectorCas,
		subPath:  NewUpdateConditionRequestCASFieldPathBuilder().ConditionalState().Metadata().Labels().FieldPath(),
	}
}

func (s UpdateConditionRequestPathSelectorCasConditionalStateMetadataLabels) WithValue(value map[string]string) *UpdateConditionRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateConditionRequest_FieldSubPathValue)
}

func (s UpdateConditionRequestPathSelectorCasConditionalStateMetadataLabels) WithArrayOfValues(values []map[string]string) *UpdateConditionRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateConditionRequest_FieldSubPathArrayOfValues)
}

func (UpdateConditionRequestPathSelectorCasConditionalStateMetadataLabels) WithKey(key string) UpdateConditionRequestMapPathSelectorCasConditionalStateMetadataLabels {
	return UpdateConditionRequestMapPathSelectorCasConditionalStateMetadataLabels{key: key}
}

type UpdateConditionRequestMapPathSelectorCasConditionalStateMetadataLabels struct {
	key string
}

func (s UpdateConditionRequestMapPathSelectorCasConditionalStateMetadataLabels) FieldPath() *UpdateConditionRequest_FieldSubPath {
	return &UpdateConditionRequest_FieldSubPath{
		selector: UpdateConditionRequest_FieldPathSelectorCas,
		subPath:  NewUpdateConditionRequestCASFieldPathBuilder().ConditionalState().Metadata().Labels().WithKey(s.key).FieldPath(),
	}
}

func (s UpdateConditionRequestMapPathSelectorCasConditionalStateMetadataLabels) WithValue(value string) *UpdateConditionRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateConditionRequest_FieldSubPathValue)
}

func (s UpdateConditionRequestMapPathSelectorCasConditionalStateMetadataLabels) WithArrayOfValues(values []string) *UpdateConditionRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateConditionRequest_FieldSubPathArrayOfValues)
}

type UpdateConditionRequestPathSelectorCasConditionalStateMetadataAnnotations struct{}

func (UpdateConditionRequestPathSelectorCasConditionalStateMetadataAnnotations) FieldPath() *UpdateConditionRequest_FieldSubPath {
	return &UpdateConditionRequest_FieldSubPath{
		selector: UpdateConditionRequest_FieldPathSelectorCas,
		subPath:  NewUpdateConditionRequestCASFieldPathBuilder().ConditionalState().Metadata().Annotations().FieldPath(),
	}
}

func (s UpdateConditionRequestPathSelectorCasConditionalStateMetadataAnnotations) WithValue(value map[string]string) *UpdateConditionRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateConditionRequest_FieldSubPathValue)
}

func (s UpdateConditionRequestPathSelectorCasConditionalStateMetadataAnnotations) WithArrayOfValues(values []map[string]string) *UpdateConditionRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateConditionRequest_FieldSubPathArrayOfValues)
}

func (UpdateConditionRequestPathSelectorCasConditionalStateMetadataAnnotations) WithKey(key string) UpdateConditionRequestMapPathSelectorCasConditionalStateMetadataAnnotations {
	return UpdateConditionRequestMapPathSelectorCasConditionalStateMetadataAnnotations{key: key}
}

type UpdateConditionRequestMapPathSelectorCasConditionalStateMetadataAnnotations struct {
	key string
}

func (s UpdateConditionRequestMapPathSelectorCasConditionalStateMetadataAnnotations) FieldPath() *UpdateConditionRequest_FieldSubPath {
	return &UpdateConditionRequest_FieldSubPath{
		selector: UpdateConditionRequest_FieldPathSelectorCas,
		subPath:  NewUpdateConditionRequestCASFieldPathBuilder().ConditionalState().Metadata().Annotations().WithKey(s.key).FieldPath(),
	}
}

func (s UpdateConditionRequestMapPathSelectorCasConditionalStateMetadataAnnotations) WithValue(value string) *UpdateConditionRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateConditionRequest_FieldSubPathValue)
}

func (s UpdateConditionRequestMapPathSelectorCasConditionalStateMetadataAnnotations) WithArrayOfValues(values []string) *UpdateConditionRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateConditionRequest_FieldSubPathArrayOfValues)
}

type UpdateConditionRequestPathSelectorCasConditionalStateMetadataGeneration struct{}

func (UpdateConditionRequestPathSelectorCasConditionalStateMetadataGeneration) FieldPath() *UpdateConditionRequest_FieldSubPath {
	return &UpdateConditionRequest_FieldSubPath{
		selector: UpdateConditionRequest_FieldPathSelectorCas,
		subPath:  NewUpdateConditionRequestCASFieldPathBuilder().ConditionalState().Metadata().Generation().FieldPath(),
	}
}

func (s UpdateConditionRequestPathSelectorCasConditionalStateMetadataGeneration) WithValue(value int64) *UpdateConditionRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateConditionRequest_FieldSubPathValue)
}

func (s UpdateConditionRequestPathSelectorCasConditionalStateMetadataGeneration) WithArrayOfValues(values []int64) *UpdateConditionRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateConditionRequest_FieldSubPathArrayOfValues)
}

type UpdateConditionRequestPathSelectorCasConditionalStateMetadataResourceVersion struct{}

func (UpdateConditionRequestPathSelectorCasConditionalStateMetadataResourceVersion) FieldPath() *UpdateConditionRequest_FieldSubPath {
	return &UpdateConditionRequest_FieldSubPath{
		selector: UpdateConditionRequest_FieldPathSelectorCas,
		subPath:  NewUpdateConditionRequestCASFieldPathBuilder().ConditionalState().Metadata().ResourceVersion().FieldPath(),
	}
}

func (s UpdateConditionRequestPathSelectorCasConditionalStateMetadataResourceVersion) WithValue(value string) *UpdateConditionRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateConditionRequest_FieldSubPathValue)
}

func (s UpdateConditionRequestPathSelectorCasConditionalStateMetadataResourceVersion) WithArrayOfValues(values []string) *UpdateConditionRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateConditionRequest_FieldSubPathArrayOfValues)
}

type UpdateConditionRequestPathSelectorCasConditionalStateMetadataOwnerReferences struct{}

func (UpdateConditionRequestPathSelectorCasConditionalStateMetadataOwnerReferences) FieldPath() *UpdateConditionRequest_FieldSubPath {
	return &UpdateConditionRequest_FieldSubPath{
		selector: UpdateConditionRequest_FieldPathSelectorCas,
		subPath:  NewUpdateConditionRequestCASFieldPathBuilder().ConditionalState().Metadata().OwnerReferences().FieldPath(),
	}
}

func (s UpdateConditionRequestPathSelectorCasConditionalStateMetadataOwnerReferences) WithValue(value []*ntt_meta.OwnerReference) *UpdateConditionRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateConditionRequest_FieldSubPathValue)
}

func (s UpdateConditionRequestPathSelectorCasConditionalStateMetadataOwnerReferences) WithArrayOfValues(values [][]*ntt_meta.OwnerReference) *UpdateConditionRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateConditionRequest_FieldSubPathArrayOfValues)
}

func (s UpdateConditionRequestPathSelectorCasConditionalStateMetadataOwnerReferences) WithItemValue(value *ntt_meta.OwnerReference) *UpdateConditionRequest_FieldSubPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*UpdateConditionRequest_FieldSubPathArrayItemValue)
}

func (UpdateConditionRequestPathSelectorCasConditionalStateMetadataOwnerReferences) Kind() UpdateConditionRequestPathSelectorCasConditionalStateMetadataOwnerReferencesKind {
	return UpdateConditionRequestPathSelectorCasConditionalStateMetadataOwnerReferencesKind{}
}

func (UpdateConditionRequestPathSelectorCasConditionalStateMetadataOwnerReferences) Version() UpdateConditionRequestPathSelectorCasConditionalStateMetadataOwnerReferencesVersion {
	return UpdateConditionRequestPathSelectorCasConditionalStateMetadataOwnerReferencesVersion{}
}

func (UpdateConditionRequestPathSelectorCasConditionalStateMetadataOwnerReferences) Name() UpdateConditionRequestPathSelectorCasConditionalStateMetadataOwnerReferencesName {
	return UpdateConditionRequestPathSelectorCasConditionalStateMetadataOwnerReferencesName{}
}

func (UpdateConditionRequestPathSelectorCasConditionalStateMetadataOwnerReferences) Region() UpdateConditionRequestPathSelectorCasConditionalStateMetadataOwnerReferencesRegion {
	return UpdateConditionRequestPathSelectorCasConditionalStateMetadataOwnerReferencesRegion{}
}

func (UpdateConditionRequestPathSelectorCasConditionalStateMetadataOwnerReferences) Controller() UpdateConditionRequestPathSelectorCasConditionalStateMetadataOwnerReferencesController {
	return UpdateConditionRequestPathSelectorCasConditionalStateMetadataOwnerReferencesController{}
}

func (UpdateConditionRequestPathSelectorCasConditionalStateMetadataOwnerReferences) BlockOwnerDeletion() UpdateConditionRequestPathSelectorCasConditionalStateMetadataOwnerReferencesBlockOwnerDeletion {
	return UpdateConditionRequestPathSelectorCasConditionalStateMetadataOwnerReferencesBlockOwnerDeletion{}
}

func (UpdateConditionRequestPathSelectorCasConditionalStateMetadataOwnerReferences) RequiresOwnerReference() UpdateConditionRequestPathSelectorCasConditionalStateMetadataOwnerReferencesRequiresOwnerReference {
	return UpdateConditionRequestPathSelectorCasConditionalStateMetadataOwnerReferencesRequiresOwnerReference{}
}

type UpdateConditionRequestPathSelectorCasConditionalStateMetadataOwnerReferencesKind struct{}

func (UpdateConditionRequestPathSelectorCasConditionalStateMetadataOwnerReferencesKind) FieldPath() *UpdateConditionRequest_FieldSubPath {
	return &UpdateConditionRequest_FieldSubPath{
		selector: UpdateConditionRequest_FieldPathSelectorCas,
		subPath:  NewUpdateConditionRequestCASFieldPathBuilder().ConditionalState().Metadata().OwnerReferences().Kind().FieldPath(),
	}
}

func (s UpdateConditionRequestPathSelectorCasConditionalStateMetadataOwnerReferencesKind) WithValue(value string) *UpdateConditionRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateConditionRequest_FieldSubPathValue)
}

func (s UpdateConditionRequestPathSelectorCasConditionalStateMetadataOwnerReferencesKind) WithArrayOfValues(values []string) *UpdateConditionRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateConditionRequest_FieldSubPathArrayOfValues)
}

type UpdateConditionRequestPathSelectorCasConditionalStateMetadataOwnerReferencesVersion struct{}

func (UpdateConditionRequestPathSelectorCasConditionalStateMetadataOwnerReferencesVersion) FieldPath() *UpdateConditionRequest_FieldSubPath {
	return &UpdateConditionRequest_FieldSubPath{
		selector: UpdateConditionRequest_FieldPathSelectorCas,
		subPath:  NewUpdateConditionRequestCASFieldPathBuilder().ConditionalState().Metadata().OwnerReferences().Version().FieldPath(),
	}
}

func (s UpdateConditionRequestPathSelectorCasConditionalStateMetadataOwnerReferencesVersion) WithValue(value string) *UpdateConditionRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateConditionRequest_FieldSubPathValue)
}

func (s UpdateConditionRequestPathSelectorCasConditionalStateMetadataOwnerReferencesVersion) WithArrayOfValues(values []string) *UpdateConditionRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateConditionRequest_FieldSubPathArrayOfValues)
}

type UpdateConditionRequestPathSelectorCasConditionalStateMetadataOwnerReferencesName struct{}

func (UpdateConditionRequestPathSelectorCasConditionalStateMetadataOwnerReferencesName) FieldPath() *UpdateConditionRequest_FieldSubPath {
	return &UpdateConditionRequest_FieldSubPath{
		selector: UpdateConditionRequest_FieldPathSelectorCas,
		subPath:  NewUpdateConditionRequestCASFieldPathBuilder().ConditionalState().Metadata().OwnerReferences().Name().FieldPath(),
	}
}

func (s UpdateConditionRequestPathSelectorCasConditionalStateMetadataOwnerReferencesName) WithValue(value string) *UpdateConditionRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateConditionRequest_FieldSubPathValue)
}

func (s UpdateConditionRequestPathSelectorCasConditionalStateMetadataOwnerReferencesName) WithArrayOfValues(values []string) *UpdateConditionRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateConditionRequest_FieldSubPathArrayOfValues)
}

type UpdateConditionRequestPathSelectorCasConditionalStateMetadataOwnerReferencesRegion struct{}

func (UpdateConditionRequestPathSelectorCasConditionalStateMetadataOwnerReferencesRegion) FieldPath() *UpdateConditionRequest_FieldSubPath {
	return &UpdateConditionRequest_FieldSubPath{
		selector: UpdateConditionRequest_FieldPathSelectorCas,
		subPath:  NewUpdateConditionRequestCASFieldPathBuilder().ConditionalState().Metadata().OwnerReferences().Region().FieldPath(),
	}
}

func (s UpdateConditionRequestPathSelectorCasConditionalStateMetadataOwnerReferencesRegion) WithValue(value string) *UpdateConditionRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateConditionRequest_FieldSubPathValue)
}

func (s UpdateConditionRequestPathSelectorCasConditionalStateMetadataOwnerReferencesRegion) WithArrayOfValues(values []string) *UpdateConditionRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateConditionRequest_FieldSubPathArrayOfValues)
}

type UpdateConditionRequestPathSelectorCasConditionalStateMetadataOwnerReferencesController struct{}

func (UpdateConditionRequestPathSelectorCasConditionalStateMetadataOwnerReferencesController) FieldPath() *UpdateConditionRequest_FieldSubPath {
	return &UpdateConditionRequest_FieldSubPath{
		selector: UpdateConditionRequest_FieldPathSelectorCas,
		subPath:  NewUpdateConditionRequestCASFieldPathBuilder().ConditionalState().Metadata().OwnerReferences().Controller().FieldPath(),
	}
}

func (s UpdateConditionRequestPathSelectorCasConditionalStateMetadataOwnerReferencesController) WithValue(value bool) *UpdateConditionRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateConditionRequest_FieldSubPathValue)
}

func (s UpdateConditionRequestPathSelectorCasConditionalStateMetadataOwnerReferencesController) WithArrayOfValues(values []bool) *UpdateConditionRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateConditionRequest_FieldSubPathArrayOfValues)
}

type UpdateConditionRequestPathSelectorCasConditionalStateMetadataOwnerReferencesBlockOwnerDeletion struct{}

func (UpdateConditionRequestPathSelectorCasConditionalStateMetadataOwnerReferencesBlockOwnerDeletion) FieldPath() *UpdateConditionRequest_FieldSubPath {
	return &UpdateConditionRequest_FieldSubPath{
		selector: UpdateConditionRequest_FieldPathSelectorCas,
		subPath:  NewUpdateConditionRequestCASFieldPathBuilder().ConditionalState().Metadata().OwnerReferences().BlockOwnerDeletion().FieldPath(),
	}
}

func (s UpdateConditionRequestPathSelectorCasConditionalStateMetadataOwnerReferencesBlockOwnerDeletion) WithValue(value bool) *UpdateConditionRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateConditionRequest_FieldSubPathValue)
}

func (s UpdateConditionRequestPathSelectorCasConditionalStateMetadataOwnerReferencesBlockOwnerDeletion) WithArrayOfValues(values []bool) *UpdateConditionRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateConditionRequest_FieldSubPathArrayOfValues)
}

type UpdateConditionRequestPathSelectorCasConditionalStateMetadataOwnerReferencesRequiresOwnerReference struct{}

func (UpdateConditionRequestPathSelectorCasConditionalStateMetadataOwnerReferencesRequiresOwnerReference) FieldPath() *UpdateConditionRequest_FieldSubPath {
	return &UpdateConditionRequest_FieldSubPath{
		selector: UpdateConditionRequest_FieldPathSelectorCas,
		subPath:  NewUpdateConditionRequestCASFieldPathBuilder().ConditionalState().Metadata().OwnerReferences().RequiresOwnerReference().FieldPath(),
	}
}

func (s UpdateConditionRequestPathSelectorCasConditionalStateMetadataOwnerReferencesRequiresOwnerReference) WithValue(value bool) *UpdateConditionRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateConditionRequest_FieldSubPathValue)
}

func (s UpdateConditionRequestPathSelectorCasConditionalStateMetadataOwnerReferencesRequiresOwnerReference) WithArrayOfValues(values []bool) *UpdateConditionRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateConditionRequest_FieldSubPathArrayOfValues)
}

type UpdateConditionRequestPathSelectorCasConditionalStateMetadataShards struct{}

func (UpdateConditionRequestPathSelectorCasConditionalStateMetadataShards) FieldPath() *UpdateConditionRequest_FieldSubPath {
	return &UpdateConditionRequest_FieldSubPath{
		selector: UpdateConditionRequest_FieldPathSelectorCas,
		subPath:  NewUpdateConditionRequestCASFieldPathBuilder().ConditionalState().Metadata().Shards().FieldPath(),
	}
}

func (s UpdateConditionRequestPathSelectorCasConditionalStateMetadataShards) WithValue(value map[string]int64) *UpdateConditionRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateConditionRequest_FieldSubPathValue)
}

func (s UpdateConditionRequestPathSelectorCasConditionalStateMetadataShards) WithArrayOfValues(values []map[string]int64) *UpdateConditionRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateConditionRequest_FieldSubPathArrayOfValues)
}

func (UpdateConditionRequestPathSelectorCasConditionalStateMetadataShards) WithKey(key string) UpdateConditionRequestMapPathSelectorCasConditionalStateMetadataShards {
	return UpdateConditionRequestMapPathSelectorCasConditionalStateMetadataShards{key: key}
}

type UpdateConditionRequestMapPathSelectorCasConditionalStateMetadataShards struct {
	key string
}

func (s UpdateConditionRequestMapPathSelectorCasConditionalStateMetadataShards) FieldPath() *UpdateConditionRequest_FieldSubPath {
	return &UpdateConditionRequest_FieldSubPath{
		selector: UpdateConditionRequest_FieldPathSelectorCas,
		subPath:  NewUpdateConditionRequestCASFieldPathBuilder().ConditionalState().Metadata().Shards().WithKey(s.key).FieldPath(),
	}
}

func (s UpdateConditionRequestMapPathSelectorCasConditionalStateMetadataShards) WithValue(value int64) *UpdateConditionRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateConditionRequest_FieldSubPathValue)
}

func (s UpdateConditionRequestMapPathSelectorCasConditionalStateMetadataShards) WithArrayOfValues(values []int64) *UpdateConditionRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateConditionRequest_FieldSubPathArrayOfValues)
}

type UpdateConditionRequestPathSelectorCasConditionalStateMetadataSyncing struct{}

func (UpdateConditionRequestPathSelectorCasConditionalStateMetadataSyncing) FieldPath() *UpdateConditionRequest_FieldSubPath {
	return &UpdateConditionRequest_FieldSubPath{
		selector: UpdateConditionRequest_FieldPathSelectorCas,
		subPath:  NewUpdateConditionRequestCASFieldPathBuilder().ConditionalState().Metadata().Syncing().FieldPath(),
	}
}

func (s UpdateConditionRequestPathSelectorCasConditionalStateMetadataSyncing) WithValue(value *ntt_meta.SyncingMeta) *UpdateConditionRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateConditionRequest_FieldSubPathValue)
}

func (s UpdateConditionRequestPathSelectorCasConditionalStateMetadataSyncing) WithArrayOfValues(values []*ntt_meta.SyncingMeta) *UpdateConditionRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateConditionRequest_FieldSubPathArrayOfValues)
}

func (UpdateConditionRequestPathSelectorCasConditionalStateMetadataSyncing) OwningRegion() UpdateConditionRequestPathSelectorCasConditionalStateMetadataSyncingOwningRegion {
	return UpdateConditionRequestPathSelectorCasConditionalStateMetadataSyncingOwningRegion{}
}

func (UpdateConditionRequestPathSelectorCasConditionalStateMetadataSyncing) Regions() UpdateConditionRequestPathSelectorCasConditionalStateMetadataSyncingRegions {
	return UpdateConditionRequestPathSelectorCasConditionalStateMetadataSyncingRegions{}
}

type UpdateConditionRequestPathSelectorCasConditionalStateMetadataSyncingOwningRegion struct{}

func (UpdateConditionRequestPathSelectorCasConditionalStateMetadataSyncingOwningRegion) FieldPath() *UpdateConditionRequest_FieldSubPath {
	return &UpdateConditionRequest_FieldSubPath{
		selector: UpdateConditionRequest_FieldPathSelectorCas,
		subPath:  NewUpdateConditionRequestCASFieldPathBuilder().ConditionalState().Metadata().Syncing().OwningRegion().FieldPath(),
	}
}

func (s UpdateConditionRequestPathSelectorCasConditionalStateMetadataSyncingOwningRegion) WithValue(value string) *UpdateConditionRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateConditionRequest_FieldSubPathValue)
}

func (s UpdateConditionRequestPathSelectorCasConditionalStateMetadataSyncingOwningRegion) WithArrayOfValues(values []string) *UpdateConditionRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateConditionRequest_FieldSubPathArrayOfValues)
}

type UpdateConditionRequestPathSelectorCasConditionalStateMetadataSyncingRegions struct{}

func (UpdateConditionRequestPathSelectorCasConditionalStateMetadataSyncingRegions) FieldPath() *UpdateConditionRequest_FieldSubPath {
	return &UpdateConditionRequest_FieldSubPath{
		selector: UpdateConditionRequest_FieldPathSelectorCas,
		subPath:  NewUpdateConditionRequestCASFieldPathBuilder().ConditionalState().Metadata().Syncing().Regions().FieldPath(),
	}
}

func (s UpdateConditionRequestPathSelectorCasConditionalStateMetadataSyncingRegions) WithValue(value []string) *UpdateConditionRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateConditionRequest_FieldSubPathValue)
}

func (s UpdateConditionRequestPathSelectorCasConditionalStateMetadataSyncingRegions) WithArrayOfValues(values [][]string) *UpdateConditionRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateConditionRequest_FieldSubPathArrayOfValues)
}

func (s UpdateConditionRequestPathSelectorCasConditionalStateMetadataSyncingRegions) WithItemValue(value string) *UpdateConditionRequest_FieldSubPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*UpdateConditionRequest_FieldSubPathArrayItemValue)
}

type UpdateConditionRequestPathSelectorCasConditionalStateMetadataLifecycle struct{}

func (UpdateConditionRequestPathSelectorCasConditionalStateMetadataLifecycle) FieldPath() *UpdateConditionRequest_FieldSubPath {
	return &UpdateConditionRequest_FieldSubPath{
		selector: UpdateConditionRequest_FieldPathSelectorCas,
		subPath:  NewUpdateConditionRequestCASFieldPathBuilder().ConditionalState().Metadata().Lifecycle().FieldPath(),
	}
}

func (s UpdateConditionRequestPathSelectorCasConditionalStateMetadataLifecycle) WithValue(value *ntt_meta.Lifecycle) *UpdateConditionRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateConditionRequest_FieldSubPathValue)
}

func (s UpdateConditionRequestPathSelectorCasConditionalStateMetadataLifecycle) WithArrayOfValues(values []*ntt_meta.Lifecycle) *UpdateConditionRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateConditionRequest_FieldSubPathArrayOfValues)
}

func (UpdateConditionRequestPathSelectorCasConditionalStateMetadataLifecycle) State() UpdateConditionRequestPathSelectorCasConditionalStateMetadataLifecycleState {
	return UpdateConditionRequestPathSelectorCasConditionalStateMetadataLifecycleState{}
}

func (UpdateConditionRequestPathSelectorCasConditionalStateMetadataLifecycle) BlockDeletion() UpdateConditionRequestPathSelectorCasConditionalStateMetadataLifecycleBlockDeletion {
	return UpdateConditionRequestPathSelectorCasConditionalStateMetadataLifecycleBlockDeletion{}
}

type UpdateConditionRequestPathSelectorCasConditionalStateMetadataLifecycleState struct{}

func (UpdateConditionRequestPathSelectorCasConditionalStateMetadataLifecycleState) FieldPath() *UpdateConditionRequest_FieldSubPath {
	return &UpdateConditionRequest_FieldSubPath{
		selector: UpdateConditionRequest_FieldPathSelectorCas,
		subPath:  NewUpdateConditionRequestCASFieldPathBuilder().ConditionalState().Metadata().Lifecycle().State().FieldPath(),
	}
}

func (s UpdateConditionRequestPathSelectorCasConditionalStateMetadataLifecycleState) WithValue(value ntt_meta.Lifecycle_State) *UpdateConditionRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateConditionRequest_FieldSubPathValue)
}

func (s UpdateConditionRequestPathSelectorCasConditionalStateMetadataLifecycleState) WithArrayOfValues(values []ntt_meta.Lifecycle_State) *UpdateConditionRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateConditionRequest_FieldSubPathArrayOfValues)
}

type UpdateConditionRequestPathSelectorCasConditionalStateMetadataLifecycleBlockDeletion struct{}

func (UpdateConditionRequestPathSelectorCasConditionalStateMetadataLifecycleBlockDeletion) FieldPath() *UpdateConditionRequest_FieldSubPath {
	return &UpdateConditionRequest_FieldSubPath{
		selector: UpdateConditionRequest_FieldPathSelectorCas,
		subPath:  NewUpdateConditionRequestCASFieldPathBuilder().ConditionalState().Metadata().Lifecycle().BlockDeletion().FieldPath(),
	}
}

func (s UpdateConditionRequestPathSelectorCasConditionalStateMetadataLifecycleBlockDeletion) WithValue(value bool) *UpdateConditionRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateConditionRequest_FieldSubPathValue)
}

func (s UpdateConditionRequestPathSelectorCasConditionalStateMetadataLifecycleBlockDeletion) WithArrayOfValues(values []bool) *UpdateConditionRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateConditionRequest_FieldSubPathArrayOfValues)
}

type UpdateConditionRequestPathSelectorCasFieldMask struct{}

func (UpdateConditionRequestPathSelectorCasFieldMask) FieldPath() *UpdateConditionRequest_FieldSubPath {
	return &UpdateConditionRequest_FieldSubPath{
		selector: UpdateConditionRequest_FieldPathSelectorCas,
		subPath:  NewUpdateConditionRequestCASFieldPathBuilder().FieldMask().FieldPath(),
	}
}

func (s UpdateConditionRequestPathSelectorCasFieldMask) WithValue(value *condition.Condition_FieldMask) *UpdateConditionRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateConditionRequest_FieldSubPathValue)
}

func (s UpdateConditionRequestPathSelectorCasFieldMask) WithArrayOfValues(values []*condition.Condition_FieldMask) *UpdateConditionRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateConditionRequest_FieldSubPathArrayOfValues)
}

type UpdateConditionRequestCASFieldPathBuilder struct{}

func NewUpdateConditionRequestCASFieldPathBuilder() UpdateConditionRequestCASFieldPathBuilder {
	return UpdateConditionRequestCASFieldPathBuilder{}
}
func (UpdateConditionRequestCASFieldPathBuilder) ConditionalState() UpdateConditionRequest_CASPathSelectorConditionalState {
	return UpdateConditionRequest_CASPathSelectorConditionalState{}
}
func (UpdateConditionRequestCASFieldPathBuilder) FieldMask() UpdateConditionRequest_CASPathSelectorFieldMask {
	return UpdateConditionRequest_CASPathSelectorFieldMask{}
}

type UpdateConditionRequest_CASPathSelectorConditionalState struct{}

func (UpdateConditionRequest_CASPathSelectorConditionalState) FieldPath() *UpdateConditionRequestCAS_FieldTerminalPath {
	return &UpdateConditionRequestCAS_FieldTerminalPath{selector: UpdateConditionRequestCAS_FieldPathSelectorConditionalState}
}

func (s UpdateConditionRequest_CASPathSelectorConditionalState) WithValue(value *condition.Condition) *UpdateConditionRequestCAS_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateConditionRequestCAS_FieldTerminalPathValue)
}

func (s UpdateConditionRequest_CASPathSelectorConditionalState) WithArrayOfValues(values []*condition.Condition) *UpdateConditionRequestCAS_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateConditionRequestCAS_FieldTerminalPathArrayOfValues)
}

func (UpdateConditionRequest_CASPathSelectorConditionalState) WithSubPath(subPath condition.Condition_FieldPath) *UpdateConditionRequestCAS_FieldSubPath {
	return &UpdateConditionRequestCAS_FieldSubPath{selector: UpdateConditionRequestCAS_FieldPathSelectorConditionalState, subPath: subPath}
}

func (s UpdateConditionRequest_CASPathSelectorConditionalState) WithSubValue(subPathValue condition.Condition_FieldPathValue) *UpdateConditionRequestCAS_FieldSubPathValue {
	return &UpdateConditionRequestCAS_FieldSubPathValue{UpdateConditionRequestCAS_FieldPath: s.WithSubPath(subPathValue), subPathValue: subPathValue}
}

func (s UpdateConditionRequest_CASPathSelectorConditionalState) WithSubArrayOfValues(subPathArrayOfValues condition.Condition_FieldPathArrayOfValues) *UpdateConditionRequestCAS_FieldSubPathArrayOfValues {
	return &UpdateConditionRequestCAS_FieldSubPathArrayOfValues{UpdateConditionRequestCAS_FieldPath: s.WithSubPath(subPathArrayOfValues), subPathArrayOfValues: subPathArrayOfValues}
}

func (s UpdateConditionRequest_CASPathSelectorConditionalState) WithSubArrayItemValue(subPathArrayItemValue condition.Condition_FieldPathArrayItemValue) *UpdateConditionRequestCAS_FieldSubPathArrayItemValue {
	return &UpdateConditionRequestCAS_FieldSubPathArrayItemValue{UpdateConditionRequestCAS_FieldPath: s.WithSubPath(subPathArrayItemValue), subPathItemValue: subPathArrayItemValue}
}

func (UpdateConditionRequest_CASPathSelectorConditionalState) Name() UpdateConditionRequest_CASPathSelectorConditionalStateName {
	return UpdateConditionRequest_CASPathSelectorConditionalStateName{}
}

func (UpdateConditionRequest_CASPathSelectorConditionalState) DisplayName() UpdateConditionRequest_CASPathSelectorConditionalStateDisplayName {
	return UpdateConditionRequest_CASPathSelectorConditionalStateDisplayName{}
}

func (UpdateConditionRequest_CASPathSelectorConditionalState) Description() UpdateConditionRequest_CASPathSelectorConditionalStateDescription {
	return UpdateConditionRequest_CASPathSelectorConditionalStateDescription{}
}

func (UpdateConditionRequest_CASPathSelectorConditionalState) Expression() UpdateConditionRequest_CASPathSelectorConditionalStateExpression {
	return UpdateConditionRequest_CASPathSelectorConditionalStateExpression{}
}

func (UpdateConditionRequest_CASPathSelectorConditionalState) ParameterDeclarations() UpdateConditionRequest_CASPathSelectorConditionalStateParameterDeclarations {
	return UpdateConditionRequest_CASPathSelectorConditionalStateParameterDeclarations{}
}

func (UpdateConditionRequest_CASPathSelectorConditionalState) Metadata() UpdateConditionRequest_CASPathSelectorConditionalStateMetadata {
	return UpdateConditionRequest_CASPathSelectorConditionalStateMetadata{}
}

type UpdateConditionRequest_CASPathSelectorConditionalStateName struct{}

func (UpdateConditionRequest_CASPathSelectorConditionalStateName) FieldPath() *UpdateConditionRequestCAS_FieldSubPath {
	return &UpdateConditionRequestCAS_FieldSubPath{
		selector: UpdateConditionRequestCAS_FieldPathSelectorConditionalState,
		subPath:  condition.NewConditionFieldPathBuilder().Name().FieldPath(),
	}
}

func (s UpdateConditionRequest_CASPathSelectorConditionalStateName) WithValue(value *condition.Name) *UpdateConditionRequestCAS_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateConditionRequestCAS_FieldSubPathValue)
}

func (s UpdateConditionRequest_CASPathSelectorConditionalStateName) WithArrayOfValues(values []*condition.Name) *UpdateConditionRequestCAS_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateConditionRequestCAS_FieldSubPathArrayOfValues)
}

type UpdateConditionRequest_CASPathSelectorConditionalStateDisplayName struct{}

func (UpdateConditionRequest_CASPathSelectorConditionalStateDisplayName) FieldPath() *UpdateConditionRequestCAS_FieldSubPath {
	return &UpdateConditionRequestCAS_FieldSubPath{
		selector: UpdateConditionRequestCAS_FieldPathSelectorConditionalState,
		subPath:  condition.NewConditionFieldPathBuilder().DisplayName().FieldPath(),
	}
}

func (s UpdateConditionRequest_CASPathSelectorConditionalStateDisplayName) WithValue(value string) *UpdateConditionRequestCAS_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateConditionRequestCAS_FieldSubPathValue)
}

func (s UpdateConditionRequest_CASPathSelectorConditionalStateDisplayName) WithArrayOfValues(values []string) *UpdateConditionRequestCAS_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateConditionRequestCAS_FieldSubPathArrayOfValues)
}

type UpdateConditionRequest_CASPathSelectorConditionalStateDescription struct{}

func (UpdateConditionRequest_CASPathSelectorConditionalStateDescription) FieldPath() *UpdateConditionRequestCAS_FieldSubPath {
	return &UpdateConditionRequestCAS_FieldSubPath{
		selector: UpdateConditionRequestCAS_FieldPathSelectorConditionalState,
		subPath:  condition.NewConditionFieldPathBuilder().Description().FieldPath(),
	}
}

func (s UpdateConditionRequest_CASPathSelectorConditionalStateDescription) WithValue(value string) *UpdateConditionRequestCAS_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateConditionRequestCAS_FieldSubPathValue)
}

func (s UpdateConditionRequest_CASPathSelectorConditionalStateDescription) WithArrayOfValues(values []string) *UpdateConditionRequestCAS_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateConditionRequestCAS_FieldSubPathArrayOfValues)
}

type UpdateConditionRequest_CASPathSelectorConditionalStateExpression struct{}

func (UpdateConditionRequest_CASPathSelectorConditionalStateExpression) FieldPath() *UpdateConditionRequestCAS_FieldSubPath {
	return &UpdateConditionRequestCAS_FieldSubPath{
		selector: UpdateConditionRequestCAS_FieldPathSelectorConditionalState,
		subPath:  condition.NewConditionFieldPathBuilder().Expression().FieldPath(),
	}
}

func (s UpdateConditionRequest_CASPathSelectorConditionalStateExpression) WithValue(value string) *UpdateConditionRequestCAS_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateConditionRequestCAS_FieldSubPathValue)
}

func (s UpdateConditionRequest_CASPathSelectorConditionalStateExpression) WithArrayOfValues(values []string) *UpdateConditionRequestCAS_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateConditionRequestCAS_FieldSubPathArrayOfValues)
}

type UpdateConditionRequest_CASPathSelectorConditionalStateParameterDeclarations struct{}

func (UpdateConditionRequest_CASPathSelectorConditionalStateParameterDeclarations) FieldPath() *UpdateConditionRequestCAS_FieldSubPath {
	return &UpdateConditionRequestCAS_FieldSubPath{
		selector: UpdateConditionRequestCAS_FieldPathSelectorConditionalState,
		subPath:  condition.NewConditionFieldPathBuilder().ParameterDeclarations().FieldPath(),
	}
}

func (s UpdateConditionRequest_CASPathSelectorConditionalStateParameterDeclarations) WithValue(value []*condition.Condition_ParameterDeclaration) *UpdateConditionRequestCAS_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateConditionRequestCAS_FieldSubPathValue)
}

func (s UpdateConditionRequest_CASPathSelectorConditionalStateParameterDeclarations) WithArrayOfValues(values [][]*condition.Condition_ParameterDeclaration) *UpdateConditionRequestCAS_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateConditionRequestCAS_FieldSubPathArrayOfValues)
}

func (s UpdateConditionRequest_CASPathSelectorConditionalStateParameterDeclarations) WithItemValue(value *condition.Condition_ParameterDeclaration) *UpdateConditionRequestCAS_FieldSubPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*UpdateConditionRequestCAS_FieldSubPathArrayItemValue)
}

func (UpdateConditionRequest_CASPathSelectorConditionalStateParameterDeclarations) Key() UpdateConditionRequest_CASPathSelectorConditionalStateParameterDeclarationsKey {
	return UpdateConditionRequest_CASPathSelectorConditionalStateParameterDeclarationsKey{}
}

func (UpdateConditionRequest_CASPathSelectorConditionalStateParameterDeclarations) Type() UpdateConditionRequest_CASPathSelectorConditionalStateParameterDeclarationsType {
	return UpdateConditionRequest_CASPathSelectorConditionalStateParameterDeclarationsType{}
}

type UpdateConditionRequest_CASPathSelectorConditionalStateParameterDeclarationsKey struct{}

func (UpdateConditionRequest_CASPathSelectorConditionalStateParameterDeclarationsKey) FieldPath() *UpdateConditionRequestCAS_FieldSubPath {
	return &UpdateConditionRequestCAS_FieldSubPath{
		selector: UpdateConditionRequestCAS_FieldPathSelectorConditionalState,
		subPath:  condition.NewConditionFieldPathBuilder().ParameterDeclarations().Key().FieldPath(),
	}
}

func (s UpdateConditionRequest_CASPathSelectorConditionalStateParameterDeclarationsKey) WithValue(value string) *UpdateConditionRequestCAS_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateConditionRequestCAS_FieldSubPathValue)
}

func (s UpdateConditionRequest_CASPathSelectorConditionalStateParameterDeclarationsKey) WithArrayOfValues(values []string) *UpdateConditionRequestCAS_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateConditionRequestCAS_FieldSubPathArrayOfValues)
}

type UpdateConditionRequest_CASPathSelectorConditionalStateParameterDeclarationsType struct{}

func (UpdateConditionRequest_CASPathSelectorConditionalStateParameterDeclarationsType) FieldPath() *UpdateConditionRequestCAS_FieldSubPath {
	return &UpdateConditionRequestCAS_FieldSubPath{
		selector: UpdateConditionRequestCAS_FieldPathSelectorConditionalState,
		subPath:  condition.NewConditionFieldPathBuilder().ParameterDeclarations().Type().FieldPath(),
	}
}

func (s UpdateConditionRequest_CASPathSelectorConditionalStateParameterDeclarationsType) WithValue(value condition.Condition_ParameterType) *UpdateConditionRequestCAS_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateConditionRequestCAS_FieldSubPathValue)
}

func (s UpdateConditionRequest_CASPathSelectorConditionalStateParameterDeclarationsType) WithArrayOfValues(values []condition.Condition_ParameterType) *UpdateConditionRequestCAS_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateConditionRequestCAS_FieldSubPathArrayOfValues)
}

type UpdateConditionRequest_CASPathSelectorConditionalStateMetadata struct{}

func (UpdateConditionRequest_CASPathSelectorConditionalStateMetadata) FieldPath() *UpdateConditionRequestCAS_FieldSubPath {
	return &UpdateConditionRequestCAS_FieldSubPath{
		selector: UpdateConditionRequestCAS_FieldPathSelectorConditionalState,
		subPath:  condition.NewConditionFieldPathBuilder().Metadata().FieldPath(),
	}
}

func (s UpdateConditionRequest_CASPathSelectorConditionalStateMetadata) WithValue(value *ntt_meta.Meta) *UpdateConditionRequestCAS_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateConditionRequestCAS_FieldSubPathValue)
}

func (s UpdateConditionRequest_CASPathSelectorConditionalStateMetadata) WithArrayOfValues(values []*ntt_meta.Meta) *UpdateConditionRequestCAS_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateConditionRequestCAS_FieldSubPathArrayOfValues)
}

func (UpdateConditionRequest_CASPathSelectorConditionalStateMetadata) CreateTime() UpdateConditionRequest_CASPathSelectorConditionalStateMetadataCreateTime {
	return UpdateConditionRequest_CASPathSelectorConditionalStateMetadataCreateTime{}
}

func (UpdateConditionRequest_CASPathSelectorConditionalStateMetadata) UpdateTime() UpdateConditionRequest_CASPathSelectorConditionalStateMetadataUpdateTime {
	return UpdateConditionRequest_CASPathSelectorConditionalStateMetadataUpdateTime{}
}

func (UpdateConditionRequest_CASPathSelectorConditionalStateMetadata) DeleteTime() UpdateConditionRequest_CASPathSelectorConditionalStateMetadataDeleteTime {
	return UpdateConditionRequest_CASPathSelectorConditionalStateMetadataDeleteTime{}
}

func (UpdateConditionRequest_CASPathSelectorConditionalStateMetadata) Uuid() UpdateConditionRequest_CASPathSelectorConditionalStateMetadataUuid {
	return UpdateConditionRequest_CASPathSelectorConditionalStateMetadataUuid{}
}

func (UpdateConditionRequest_CASPathSelectorConditionalStateMetadata) Tags() UpdateConditionRequest_CASPathSelectorConditionalStateMetadataTags {
	return UpdateConditionRequest_CASPathSelectorConditionalStateMetadataTags{}
}

func (UpdateConditionRequest_CASPathSelectorConditionalStateMetadata) Labels() UpdateConditionRequest_CASPathSelectorConditionalStateMetadataLabels {
	return UpdateConditionRequest_CASPathSelectorConditionalStateMetadataLabels{}
}

func (UpdateConditionRequest_CASPathSelectorConditionalStateMetadata) Annotations() UpdateConditionRequest_CASPathSelectorConditionalStateMetadataAnnotations {
	return UpdateConditionRequest_CASPathSelectorConditionalStateMetadataAnnotations{}
}

func (UpdateConditionRequest_CASPathSelectorConditionalStateMetadata) Generation() UpdateConditionRequest_CASPathSelectorConditionalStateMetadataGeneration {
	return UpdateConditionRequest_CASPathSelectorConditionalStateMetadataGeneration{}
}

func (UpdateConditionRequest_CASPathSelectorConditionalStateMetadata) ResourceVersion() UpdateConditionRequest_CASPathSelectorConditionalStateMetadataResourceVersion {
	return UpdateConditionRequest_CASPathSelectorConditionalStateMetadataResourceVersion{}
}

func (UpdateConditionRequest_CASPathSelectorConditionalStateMetadata) OwnerReferences() UpdateConditionRequest_CASPathSelectorConditionalStateMetadataOwnerReferences {
	return UpdateConditionRequest_CASPathSelectorConditionalStateMetadataOwnerReferences{}
}

func (UpdateConditionRequest_CASPathSelectorConditionalStateMetadata) Shards() UpdateConditionRequest_CASPathSelectorConditionalStateMetadataShards {
	return UpdateConditionRequest_CASPathSelectorConditionalStateMetadataShards{}
}

func (UpdateConditionRequest_CASPathSelectorConditionalStateMetadata) Syncing() UpdateConditionRequest_CASPathSelectorConditionalStateMetadataSyncing {
	return UpdateConditionRequest_CASPathSelectorConditionalStateMetadataSyncing{}
}

func (UpdateConditionRequest_CASPathSelectorConditionalStateMetadata) Lifecycle() UpdateConditionRequest_CASPathSelectorConditionalStateMetadataLifecycle {
	return UpdateConditionRequest_CASPathSelectorConditionalStateMetadataLifecycle{}
}

type UpdateConditionRequest_CASPathSelectorConditionalStateMetadataCreateTime struct{}

func (UpdateConditionRequest_CASPathSelectorConditionalStateMetadataCreateTime) FieldPath() *UpdateConditionRequestCAS_FieldSubPath {
	return &UpdateConditionRequestCAS_FieldSubPath{
		selector: UpdateConditionRequestCAS_FieldPathSelectorConditionalState,
		subPath:  condition.NewConditionFieldPathBuilder().Metadata().CreateTime().FieldPath(),
	}
}

func (s UpdateConditionRequest_CASPathSelectorConditionalStateMetadataCreateTime) WithValue(value *timestamp.Timestamp) *UpdateConditionRequestCAS_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateConditionRequestCAS_FieldSubPathValue)
}

func (s UpdateConditionRequest_CASPathSelectorConditionalStateMetadataCreateTime) WithArrayOfValues(values []*timestamp.Timestamp) *UpdateConditionRequestCAS_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateConditionRequestCAS_FieldSubPathArrayOfValues)
}

type UpdateConditionRequest_CASPathSelectorConditionalStateMetadataUpdateTime struct{}

func (UpdateConditionRequest_CASPathSelectorConditionalStateMetadataUpdateTime) FieldPath() *UpdateConditionRequestCAS_FieldSubPath {
	return &UpdateConditionRequestCAS_FieldSubPath{
		selector: UpdateConditionRequestCAS_FieldPathSelectorConditionalState,
		subPath:  condition.NewConditionFieldPathBuilder().Metadata().UpdateTime().FieldPath(),
	}
}

func (s UpdateConditionRequest_CASPathSelectorConditionalStateMetadataUpdateTime) WithValue(value *timestamp.Timestamp) *UpdateConditionRequestCAS_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateConditionRequestCAS_FieldSubPathValue)
}

func (s UpdateConditionRequest_CASPathSelectorConditionalStateMetadataUpdateTime) WithArrayOfValues(values []*timestamp.Timestamp) *UpdateConditionRequestCAS_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateConditionRequestCAS_FieldSubPathArrayOfValues)
}

type UpdateConditionRequest_CASPathSelectorConditionalStateMetadataDeleteTime struct{}

func (UpdateConditionRequest_CASPathSelectorConditionalStateMetadataDeleteTime) FieldPath() *UpdateConditionRequestCAS_FieldSubPath {
	return &UpdateConditionRequestCAS_FieldSubPath{
		selector: UpdateConditionRequestCAS_FieldPathSelectorConditionalState,
		subPath:  condition.NewConditionFieldPathBuilder().Metadata().DeleteTime().FieldPath(),
	}
}

func (s UpdateConditionRequest_CASPathSelectorConditionalStateMetadataDeleteTime) WithValue(value *timestamp.Timestamp) *UpdateConditionRequestCAS_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateConditionRequestCAS_FieldSubPathValue)
}

func (s UpdateConditionRequest_CASPathSelectorConditionalStateMetadataDeleteTime) WithArrayOfValues(values []*timestamp.Timestamp) *UpdateConditionRequestCAS_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateConditionRequestCAS_FieldSubPathArrayOfValues)
}

type UpdateConditionRequest_CASPathSelectorConditionalStateMetadataUuid struct{}

func (UpdateConditionRequest_CASPathSelectorConditionalStateMetadataUuid) FieldPath() *UpdateConditionRequestCAS_FieldSubPath {
	return &UpdateConditionRequestCAS_FieldSubPath{
		selector: UpdateConditionRequestCAS_FieldPathSelectorConditionalState,
		subPath:  condition.NewConditionFieldPathBuilder().Metadata().Uuid().FieldPath(),
	}
}

func (s UpdateConditionRequest_CASPathSelectorConditionalStateMetadataUuid) WithValue(value string) *UpdateConditionRequestCAS_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateConditionRequestCAS_FieldSubPathValue)
}

func (s UpdateConditionRequest_CASPathSelectorConditionalStateMetadataUuid) WithArrayOfValues(values []string) *UpdateConditionRequestCAS_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateConditionRequestCAS_FieldSubPathArrayOfValues)
}

type UpdateConditionRequest_CASPathSelectorConditionalStateMetadataTags struct{}

func (UpdateConditionRequest_CASPathSelectorConditionalStateMetadataTags) FieldPath() *UpdateConditionRequestCAS_FieldSubPath {
	return &UpdateConditionRequestCAS_FieldSubPath{
		selector: UpdateConditionRequestCAS_FieldPathSelectorConditionalState,
		subPath:  condition.NewConditionFieldPathBuilder().Metadata().Tags().FieldPath(),
	}
}

func (s UpdateConditionRequest_CASPathSelectorConditionalStateMetadataTags) WithValue(value []string) *UpdateConditionRequestCAS_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateConditionRequestCAS_FieldSubPathValue)
}

func (s UpdateConditionRequest_CASPathSelectorConditionalStateMetadataTags) WithArrayOfValues(values [][]string) *UpdateConditionRequestCAS_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateConditionRequestCAS_FieldSubPathArrayOfValues)
}

func (s UpdateConditionRequest_CASPathSelectorConditionalStateMetadataTags) WithItemValue(value string) *UpdateConditionRequestCAS_FieldSubPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*UpdateConditionRequestCAS_FieldSubPathArrayItemValue)
}

type UpdateConditionRequest_CASPathSelectorConditionalStateMetadataLabels struct{}

func (UpdateConditionRequest_CASPathSelectorConditionalStateMetadataLabels) FieldPath() *UpdateConditionRequestCAS_FieldSubPath {
	return &UpdateConditionRequestCAS_FieldSubPath{
		selector: UpdateConditionRequestCAS_FieldPathSelectorConditionalState,
		subPath:  condition.NewConditionFieldPathBuilder().Metadata().Labels().FieldPath(),
	}
}

func (s UpdateConditionRequest_CASPathSelectorConditionalStateMetadataLabels) WithValue(value map[string]string) *UpdateConditionRequestCAS_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateConditionRequestCAS_FieldSubPathValue)
}

func (s UpdateConditionRequest_CASPathSelectorConditionalStateMetadataLabels) WithArrayOfValues(values []map[string]string) *UpdateConditionRequestCAS_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateConditionRequestCAS_FieldSubPathArrayOfValues)
}

func (UpdateConditionRequest_CASPathSelectorConditionalStateMetadataLabels) WithKey(key string) UpdateConditionRequest_CASMapPathSelectorConditionalStateMetadataLabels {
	return UpdateConditionRequest_CASMapPathSelectorConditionalStateMetadataLabels{key: key}
}

type UpdateConditionRequest_CASMapPathSelectorConditionalStateMetadataLabels struct {
	key string
}

func (s UpdateConditionRequest_CASMapPathSelectorConditionalStateMetadataLabels) FieldPath() *UpdateConditionRequestCAS_FieldSubPath {
	return &UpdateConditionRequestCAS_FieldSubPath{
		selector: UpdateConditionRequestCAS_FieldPathSelectorConditionalState,
		subPath:  condition.NewConditionFieldPathBuilder().Metadata().Labels().WithKey(s.key).FieldPath(),
	}
}

func (s UpdateConditionRequest_CASMapPathSelectorConditionalStateMetadataLabels) WithValue(value string) *UpdateConditionRequestCAS_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateConditionRequestCAS_FieldSubPathValue)
}

func (s UpdateConditionRequest_CASMapPathSelectorConditionalStateMetadataLabels) WithArrayOfValues(values []string) *UpdateConditionRequestCAS_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateConditionRequestCAS_FieldSubPathArrayOfValues)
}

type UpdateConditionRequest_CASPathSelectorConditionalStateMetadataAnnotations struct{}

func (UpdateConditionRequest_CASPathSelectorConditionalStateMetadataAnnotations) FieldPath() *UpdateConditionRequestCAS_FieldSubPath {
	return &UpdateConditionRequestCAS_FieldSubPath{
		selector: UpdateConditionRequestCAS_FieldPathSelectorConditionalState,
		subPath:  condition.NewConditionFieldPathBuilder().Metadata().Annotations().FieldPath(),
	}
}

func (s UpdateConditionRequest_CASPathSelectorConditionalStateMetadataAnnotations) WithValue(value map[string]string) *UpdateConditionRequestCAS_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateConditionRequestCAS_FieldSubPathValue)
}

func (s UpdateConditionRequest_CASPathSelectorConditionalStateMetadataAnnotations) WithArrayOfValues(values []map[string]string) *UpdateConditionRequestCAS_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateConditionRequestCAS_FieldSubPathArrayOfValues)
}

func (UpdateConditionRequest_CASPathSelectorConditionalStateMetadataAnnotations) WithKey(key string) UpdateConditionRequest_CASMapPathSelectorConditionalStateMetadataAnnotations {
	return UpdateConditionRequest_CASMapPathSelectorConditionalStateMetadataAnnotations{key: key}
}

type UpdateConditionRequest_CASMapPathSelectorConditionalStateMetadataAnnotations struct {
	key string
}

func (s UpdateConditionRequest_CASMapPathSelectorConditionalStateMetadataAnnotations) FieldPath() *UpdateConditionRequestCAS_FieldSubPath {
	return &UpdateConditionRequestCAS_FieldSubPath{
		selector: UpdateConditionRequestCAS_FieldPathSelectorConditionalState,
		subPath:  condition.NewConditionFieldPathBuilder().Metadata().Annotations().WithKey(s.key).FieldPath(),
	}
}

func (s UpdateConditionRequest_CASMapPathSelectorConditionalStateMetadataAnnotations) WithValue(value string) *UpdateConditionRequestCAS_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateConditionRequestCAS_FieldSubPathValue)
}

func (s UpdateConditionRequest_CASMapPathSelectorConditionalStateMetadataAnnotations) WithArrayOfValues(values []string) *UpdateConditionRequestCAS_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateConditionRequestCAS_FieldSubPathArrayOfValues)
}

type UpdateConditionRequest_CASPathSelectorConditionalStateMetadataGeneration struct{}

func (UpdateConditionRequest_CASPathSelectorConditionalStateMetadataGeneration) FieldPath() *UpdateConditionRequestCAS_FieldSubPath {
	return &UpdateConditionRequestCAS_FieldSubPath{
		selector: UpdateConditionRequestCAS_FieldPathSelectorConditionalState,
		subPath:  condition.NewConditionFieldPathBuilder().Metadata().Generation().FieldPath(),
	}
}

func (s UpdateConditionRequest_CASPathSelectorConditionalStateMetadataGeneration) WithValue(value int64) *UpdateConditionRequestCAS_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateConditionRequestCAS_FieldSubPathValue)
}

func (s UpdateConditionRequest_CASPathSelectorConditionalStateMetadataGeneration) WithArrayOfValues(values []int64) *UpdateConditionRequestCAS_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateConditionRequestCAS_FieldSubPathArrayOfValues)
}

type UpdateConditionRequest_CASPathSelectorConditionalStateMetadataResourceVersion struct{}

func (UpdateConditionRequest_CASPathSelectorConditionalStateMetadataResourceVersion) FieldPath() *UpdateConditionRequestCAS_FieldSubPath {
	return &UpdateConditionRequestCAS_FieldSubPath{
		selector: UpdateConditionRequestCAS_FieldPathSelectorConditionalState,
		subPath:  condition.NewConditionFieldPathBuilder().Metadata().ResourceVersion().FieldPath(),
	}
}

func (s UpdateConditionRequest_CASPathSelectorConditionalStateMetadataResourceVersion) WithValue(value string) *UpdateConditionRequestCAS_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateConditionRequestCAS_FieldSubPathValue)
}

func (s UpdateConditionRequest_CASPathSelectorConditionalStateMetadataResourceVersion) WithArrayOfValues(values []string) *UpdateConditionRequestCAS_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateConditionRequestCAS_FieldSubPathArrayOfValues)
}

type UpdateConditionRequest_CASPathSelectorConditionalStateMetadataOwnerReferences struct{}

func (UpdateConditionRequest_CASPathSelectorConditionalStateMetadataOwnerReferences) FieldPath() *UpdateConditionRequestCAS_FieldSubPath {
	return &UpdateConditionRequestCAS_FieldSubPath{
		selector: UpdateConditionRequestCAS_FieldPathSelectorConditionalState,
		subPath:  condition.NewConditionFieldPathBuilder().Metadata().OwnerReferences().FieldPath(),
	}
}

func (s UpdateConditionRequest_CASPathSelectorConditionalStateMetadataOwnerReferences) WithValue(value []*ntt_meta.OwnerReference) *UpdateConditionRequestCAS_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateConditionRequestCAS_FieldSubPathValue)
}

func (s UpdateConditionRequest_CASPathSelectorConditionalStateMetadataOwnerReferences) WithArrayOfValues(values [][]*ntt_meta.OwnerReference) *UpdateConditionRequestCAS_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateConditionRequestCAS_FieldSubPathArrayOfValues)
}

func (s UpdateConditionRequest_CASPathSelectorConditionalStateMetadataOwnerReferences) WithItemValue(value *ntt_meta.OwnerReference) *UpdateConditionRequestCAS_FieldSubPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*UpdateConditionRequestCAS_FieldSubPathArrayItemValue)
}

func (UpdateConditionRequest_CASPathSelectorConditionalStateMetadataOwnerReferences) Kind() UpdateConditionRequest_CASPathSelectorConditionalStateMetadataOwnerReferencesKind {
	return UpdateConditionRequest_CASPathSelectorConditionalStateMetadataOwnerReferencesKind{}
}

func (UpdateConditionRequest_CASPathSelectorConditionalStateMetadataOwnerReferences) Version() UpdateConditionRequest_CASPathSelectorConditionalStateMetadataOwnerReferencesVersion {
	return UpdateConditionRequest_CASPathSelectorConditionalStateMetadataOwnerReferencesVersion{}
}

func (UpdateConditionRequest_CASPathSelectorConditionalStateMetadataOwnerReferences) Name() UpdateConditionRequest_CASPathSelectorConditionalStateMetadataOwnerReferencesName {
	return UpdateConditionRequest_CASPathSelectorConditionalStateMetadataOwnerReferencesName{}
}

func (UpdateConditionRequest_CASPathSelectorConditionalStateMetadataOwnerReferences) Region() UpdateConditionRequest_CASPathSelectorConditionalStateMetadataOwnerReferencesRegion {
	return UpdateConditionRequest_CASPathSelectorConditionalStateMetadataOwnerReferencesRegion{}
}

func (UpdateConditionRequest_CASPathSelectorConditionalStateMetadataOwnerReferences) Controller() UpdateConditionRequest_CASPathSelectorConditionalStateMetadataOwnerReferencesController {
	return UpdateConditionRequest_CASPathSelectorConditionalStateMetadataOwnerReferencesController{}
}

func (UpdateConditionRequest_CASPathSelectorConditionalStateMetadataOwnerReferences) BlockOwnerDeletion() UpdateConditionRequest_CASPathSelectorConditionalStateMetadataOwnerReferencesBlockOwnerDeletion {
	return UpdateConditionRequest_CASPathSelectorConditionalStateMetadataOwnerReferencesBlockOwnerDeletion{}
}

func (UpdateConditionRequest_CASPathSelectorConditionalStateMetadataOwnerReferences) RequiresOwnerReference() UpdateConditionRequest_CASPathSelectorConditionalStateMetadataOwnerReferencesRequiresOwnerReference {
	return UpdateConditionRequest_CASPathSelectorConditionalStateMetadataOwnerReferencesRequiresOwnerReference{}
}

type UpdateConditionRequest_CASPathSelectorConditionalStateMetadataOwnerReferencesKind struct{}

func (UpdateConditionRequest_CASPathSelectorConditionalStateMetadataOwnerReferencesKind) FieldPath() *UpdateConditionRequestCAS_FieldSubPath {
	return &UpdateConditionRequestCAS_FieldSubPath{
		selector: UpdateConditionRequestCAS_FieldPathSelectorConditionalState,
		subPath:  condition.NewConditionFieldPathBuilder().Metadata().OwnerReferences().Kind().FieldPath(),
	}
}

func (s UpdateConditionRequest_CASPathSelectorConditionalStateMetadataOwnerReferencesKind) WithValue(value string) *UpdateConditionRequestCAS_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateConditionRequestCAS_FieldSubPathValue)
}

func (s UpdateConditionRequest_CASPathSelectorConditionalStateMetadataOwnerReferencesKind) WithArrayOfValues(values []string) *UpdateConditionRequestCAS_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateConditionRequestCAS_FieldSubPathArrayOfValues)
}

type UpdateConditionRequest_CASPathSelectorConditionalStateMetadataOwnerReferencesVersion struct{}

func (UpdateConditionRequest_CASPathSelectorConditionalStateMetadataOwnerReferencesVersion) FieldPath() *UpdateConditionRequestCAS_FieldSubPath {
	return &UpdateConditionRequestCAS_FieldSubPath{
		selector: UpdateConditionRequestCAS_FieldPathSelectorConditionalState,
		subPath:  condition.NewConditionFieldPathBuilder().Metadata().OwnerReferences().Version().FieldPath(),
	}
}

func (s UpdateConditionRequest_CASPathSelectorConditionalStateMetadataOwnerReferencesVersion) WithValue(value string) *UpdateConditionRequestCAS_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateConditionRequestCAS_FieldSubPathValue)
}

func (s UpdateConditionRequest_CASPathSelectorConditionalStateMetadataOwnerReferencesVersion) WithArrayOfValues(values []string) *UpdateConditionRequestCAS_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateConditionRequestCAS_FieldSubPathArrayOfValues)
}

type UpdateConditionRequest_CASPathSelectorConditionalStateMetadataOwnerReferencesName struct{}

func (UpdateConditionRequest_CASPathSelectorConditionalStateMetadataOwnerReferencesName) FieldPath() *UpdateConditionRequestCAS_FieldSubPath {
	return &UpdateConditionRequestCAS_FieldSubPath{
		selector: UpdateConditionRequestCAS_FieldPathSelectorConditionalState,
		subPath:  condition.NewConditionFieldPathBuilder().Metadata().OwnerReferences().Name().FieldPath(),
	}
}

func (s UpdateConditionRequest_CASPathSelectorConditionalStateMetadataOwnerReferencesName) WithValue(value string) *UpdateConditionRequestCAS_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateConditionRequestCAS_FieldSubPathValue)
}

func (s UpdateConditionRequest_CASPathSelectorConditionalStateMetadataOwnerReferencesName) WithArrayOfValues(values []string) *UpdateConditionRequestCAS_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateConditionRequestCAS_FieldSubPathArrayOfValues)
}

type UpdateConditionRequest_CASPathSelectorConditionalStateMetadataOwnerReferencesRegion struct{}

func (UpdateConditionRequest_CASPathSelectorConditionalStateMetadataOwnerReferencesRegion) FieldPath() *UpdateConditionRequestCAS_FieldSubPath {
	return &UpdateConditionRequestCAS_FieldSubPath{
		selector: UpdateConditionRequestCAS_FieldPathSelectorConditionalState,
		subPath:  condition.NewConditionFieldPathBuilder().Metadata().OwnerReferences().Region().FieldPath(),
	}
}

func (s UpdateConditionRequest_CASPathSelectorConditionalStateMetadataOwnerReferencesRegion) WithValue(value string) *UpdateConditionRequestCAS_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateConditionRequestCAS_FieldSubPathValue)
}

func (s UpdateConditionRequest_CASPathSelectorConditionalStateMetadataOwnerReferencesRegion) WithArrayOfValues(values []string) *UpdateConditionRequestCAS_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateConditionRequestCAS_FieldSubPathArrayOfValues)
}

type UpdateConditionRequest_CASPathSelectorConditionalStateMetadataOwnerReferencesController struct{}

func (UpdateConditionRequest_CASPathSelectorConditionalStateMetadataOwnerReferencesController) FieldPath() *UpdateConditionRequestCAS_FieldSubPath {
	return &UpdateConditionRequestCAS_FieldSubPath{
		selector: UpdateConditionRequestCAS_FieldPathSelectorConditionalState,
		subPath:  condition.NewConditionFieldPathBuilder().Metadata().OwnerReferences().Controller().FieldPath(),
	}
}

func (s UpdateConditionRequest_CASPathSelectorConditionalStateMetadataOwnerReferencesController) WithValue(value bool) *UpdateConditionRequestCAS_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateConditionRequestCAS_FieldSubPathValue)
}

func (s UpdateConditionRequest_CASPathSelectorConditionalStateMetadataOwnerReferencesController) WithArrayOfValues(values []bool) *UpdateConditionRequestCAS_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateConditionRequestCAS_FieldSubPathArrayOfValues)
}

type UpdateConditionRequest_CASPathSelectorConditionalStateMetadataOwnerReferencesBlockOwnerDeletion struct{}

func (UpdateConditionRequest_CASPathSelectorConditionalStateMetadataOwnerReferencesBlockOwnerDeletion) FieldPath() *UpdateConditionRequestCAS_FieldSubPath {
	return &UpdateConditionRequestCAS_FieldSubPath{
		selector: UpdateConditionRequestCAS_FieldPathSelectorConditionalState,
		subPath:  condition.NewConditionFieldPathBuilder().Metadata().OwnerReferences().BlockOwnerDeletion().FieldPath(),
	}
}

func (s UpdateConditionRequest_CASPathSelectorConditionalStateMetadataOwnerReferencesBlockOwnerDeletion) WithValue(value bool) *UpdateConditionRequestCAS_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateConditionRequestCAS_FieldSubPathValue)
}

func (s UpdateConditionRequest_CASPathSelectorConditionalStateMetadataOwnerReferencesBlockOwnerDeletion) WithArrayOfValues(values []bool) *UpdateConditionRequestCAS_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateConditionRequestCAS_FieldSubPathArrayOfValues)
}

type UpdateConditionRequest_CASPathSelectorConditionalStateMetadataOwnerReferencesRequiresOwnerReference struct{}

func (UpdateConditionRequest_CASPathSelectorConditionalStateMetadataOwnerReferencesRequiresOwnerReference) FieldPath() *UpdateConditionRequestCAS_FieldSubPath {
	return &UpdateConditionRequestCAS_FieldSubPath{
		selector: UpdateConditionRequestCAS_FieldPathSelectorConditionalState,
		subPath:  condition.NewConditionFieldPathBuilder().Metadata().OwnerReferences().RequiresOwnerReference().FieldPath(),
	}
}

func (s UpdateConditionRequest_CASPathSelectorConditionalStateMetadataOwnerReferencesRequiresOwnerReference) WithValue(value bool) *UpdateConditionRequestCAS_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateConditionRequestCAS_FieldSubPathValue)
}

func (s UpdateConditionRequest_CASPathSelectorConditionalStateMetadataOwnerReferencesRequiresOwnerReference) WithArrayOfValues(values []bool) *UpdateConditionRequestCAS_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateConditionRequestCAS_FieldSubPathArrayOfValues)
}

type UpdateConditionRequest_CASPathSelectorConditionalStateMetadataShards struct{}

func (UpdateConditionRequest_CASPathSelectorConditionalStateMetadataShards) FieldPath() *UpdateConditionRequestCAS_FieldSubPath {
	return &UpdateConditionRequestCAS_FieldSubPath{
		selector: UpdateConditionRequestCAS_FieldPathSelectorConditionalState,
		subPath:  condition.NewConditionFieldPathBuilder().Metadata().Shards().FieldPath(),
	}
}

func (s UpdateConditionRequest_CASPathSelectorConditionalStateMetadataShards) WithValue(value map[string]int64) *UpdateConditionRequestCAS_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateConditionRequestCAS_FieldSubPathValue)
}

func (s UpdateConditionRequest_CASPathSelectorConditionalStateMetadataShards) WithArrayOfValues(values []map[string]int64) *UpdateConditionRequestCAS_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateConditionRequestCAS_FieldSubPathArrayOfValues)
}

func (UpdateConditionRequest_CASPathSelectorConditionalStateMetadataShards) WithKey(key string) UpdateConditionRequest_CASMapPathSelectorConditionalStateMetadataShards {
	return UpdateConditionRequest_CASMapPathSelectorConditionalStateMetadataShards{key: key}
}

type UpdateConditionRequest_CASMapPathSelectorConditionalStateMetadataShards struct {
	key string
}

func (s UpdateConditionRequest_CASMapPathSelectorConditionalStateMetadataShards) FieldPath() *UpdateConditionRequestCAS_FieldSubPath {
	return &UpdateConditionRequestCAS_FieldSubPath{
		selector: UpdateConditionRequestCAS_FieldPathSelectorConditionalState,
		subPath:  condition.NewConditionFieldPathBuilder().Metadata().Shards().WithKey(s.key).FieldPath(),
	}
}

func (s UpdateConditionRequest_CASMapPathSelectorConditionalStateMetadataShards) WithValue(value int64) *UpdateConditionRequestCAS_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateConditionRequestCAS_FieldSubPathValue)
}

func (s UpdateConditionRequest_CASMapPathSelectorConditionalStateMetadataShards) WithArrayOfValues(values []int64) *UpdateConditionRequestCAS_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateConditionRequestCAS_FieldSubPathArrayOfValues)
}

type UpdateConditionRequest_CASPathSelectorConditionalStateMetadataSyncing struct{}

func (UpdateConditionRequest_CASPathSelectorConditionalStateMetadataSyncing) FieldPath() *UpdateConditionRequestCAS_FieldSubPath {
	return &UpdateConditionRequestCAS_FieldSubPath{
		selector: UpdateConditionRequestCAS_FieldPathSelectorConditionalState,
		subPath:  condition.NewConditionFieldPathBuilder().Metadata().Syncing().FieldPath(),
	}
}

func (s UpdateConditionRequest_CASPathSelectorConditionalStateMetadataSyncing) WithValue(value *ntt_meta.SyncingMeta) *UpdateConditionRequestCAS_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateConditionRequestCAS_FieldSubPathValue)
}

func (s UpdateConditionRequest_CASPathSelectorConditionalStateMetadataSyncing) WithArrayOfValues(values []*ntt_meta.SyncingMeta) *UpdateConditionRequestCAS_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateConditionRequestCAS_FieldSubPathArrayOfValues)
}

func (UpdateConditionRequest_CASPathSelectorConditionalStateMetadataSyncing) OwningRegion() UpdateConditionRequest_CASPathSelectorConditionalStateMetadataSyncingOwningRegion {
	return UpdateConditionRequest_CASPathSelectorConditionalStateMetadataSyncingOwningRegion{}
}

func (UpdateConditionRequest_CASPathSelectorConditionalStateMetadataSyncing) Regions() UpdateConditionRequest_CASPathSelectorConditionalStateMetadataSyncingRegions {
	return UpdateConditionRequest_CASPathSelectorConditionalStateMetadataSyncingRegions{}
}

type UpdateConditionRequest_CASPathSelectorConditionalStateMetadataSyncingOwningRegion struct{}

func (UpdateConditionRequest_CASPathSelectorConditionalStateMetadataSyncingOwningRegion) FieldPath() *UpdateConditionRequestCAS_FieldSubPath {
	return &UpdateConditionRequestCAS_FieldSubPath{
		selector: UpdateConditionRequestCAS_FieldPathSelectorConditionalState,
		subPath:  condition.NewConditionFieldPathBuilder().Metadata().Syncing().OwningRegion().FieldPath(),
	}
}

func (s UpdateConditionRequest_CASPathSelectorConditionalStateMetadataSyncingOwningRegion) WithValue(value string) *UpdateConditionRequestCAS_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateConditionRequestCAS_FieldSubPathValue)
}

func (s UpdateConditionRequest_CASPathSelectorConditionalStateMetadataSyncingOwningRegion) WithArrayOfValues(values []string) *UpdateConditionRequestCAS_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateConditionRequestCAS_FieldSubPathArrayOfValues)
}

type UpdateConditionRequest_CASPathSelectorConditionalStateMetadataSyncingRegions struct{}

func (UpdateConditionRequest_CASPathSelectorConditionalStateMetadataSyncingRegions) FieldPath() *UpdateConditionRequestCAS_FieldSubPath {
	return &UpdateConditionRequestCAS_FieldSubPath{
		selector: UpdateConditionRequestCAS_FieldPathSelectorConditionalState,
		subPath:  condition.NewConditionFieldPathBuilder().Metadata().Syncing().Regions().FieldPath(),
	}
}

func (s UpdateConditionRequest_CASPathSelectorConditionalStateMetadataSyncingRegions) WithValue(value []string) *UpdateConditionRequestCAS_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateConditionRequestCAS_FieldSubPathValue)
}

func (s UpdateConditionRequest_CASPathSelectorConditionalStateMetadataSyncingRegions) WithArrayOfValues(values [][]string) *UpdateConditionRequestCAS_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateConditionRequestCAS_FieldSubPathArrayOfValues)
}

func (s UpdateConditionRequest_CASPathSelectorConditionalStateMetadataSyncingRegions) WithItemValue(value string) *UpdateConditionRequestCAS_FieldSubPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*UpdateConditionRequestCAS_FieldSubPathArrayItemValue)
}

type UpdateConditionRequest_CASPathSelectorConditionalStateMetadataLifecycle struct{}

func (UpdateConditionRequest_CASPathSelectorConditionalStateMetadataLifecycle) FieldPath() *UpdateConditionRequestCAS_FieldSubPath {
	return &UpdateConditionRequestCAS_FieldSubPath{
		selector: UpdateConditionRequestCAS_FieldPathSelectorConditionalState,
		subPath:  condition.NewConditionFieldPathBuilder().Metadata().Lifecycle().FieldPath(),
	}
}

func (s UpdateConditionRequest_CASPathSelectorConditionalStateMetadataLifecycle) WithValue(value *ntt_meta.Lifecycle) *UpdateConditionRequestCAS_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateConditionRequestCAS_FieldSubPathValue)
}

func (s UpdateConditionRequest_CASPathSelectorConditionalStateMetadataLifecycle) WithArrayOfValues(values []*ntt_meta.Lifecycle) *UpdateConditionRequestCAS_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateConditionRequestCAS_FieldSubPathArrayOfValues)
}

func (UpdateConditionRequest_CASPathSelectorConditionalStateMetadataLifecycle) State() UpdateConditionRequest_CASPathSelectorConditionalStateMetadataLifecycleState {
	return UpdateConditionRequest_CASPathSelectorConditionalStateMetadataLifecycleState{}
}

func (UpdateConditionRequest_CASPathSelectorConditionalStateMetadataLifecycle) BlockDeletion() UpdateConditionRequest_CASPathSelectorConditionalStateMetadataLifecycleBlockDeletion {
	return UpdateConditionRequest_CASPathSelectorConditionalStateMetadataLifecycleBlockDeletion{}
}

type UpdateConditionRequest_CASPathSelectorConditionalStateMetadataLifecycleState struct{}

func (UpdateConditionRequest_CASPathSelectorConditionalStateMetadataLifecycleState) FieldPath() *UpdateConditionRequestCAS_FieldSubPath {
	return &UpdateConditionRequestCAS_FieldSubPath{
		selector: UpdateConditionRequestCAS_FieldPathSelectorConditionalState,
		subPath:  condition.NewConditionFieldPathBuilder().Metadata().Lifecycle().State().FieldPath(),
	}
}

func (s UpdateConditionRequest_CASPathSelectorConditionalStateMetadataLifecycleState) WithValue(value ntt_meta.Lifecycle_State) *UpdateConditionRequestCAS_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateConditionRequestCAS_FieldSubPathValue)
}

func (s UpdateConditionRequest_CASPathSelectorConditionalStateMetadataLifecycleState) WithArrayOfValues(values []ntt_meta.Lifecycle_State) *UpdateConditionRequestCAS_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateConditionRequestCAS_FieldSubPathArrayOfValues)
}

type UpdateConditionRequest_CASPathSelectorConditionalStateMetadataLifecycleBlockDeletion struct{}

func (UpdateConditionRequest_CASPathSelectorConditionalStateMetadataLifecycleBlockDeletion) FieldPath() *UpdateConditionRequestCAS_FieldSubPath {
	return &UpdateConditionRequestCAS_FieldSubPath{
		selector: UpdateConditionRequestCAS_FieldPathSelectorConditionalState,
		subPath:  condition.NewConditionFieldPathBuilder().Metadata().Lifecycle().BlockDeletion().FieldPath(),
	}
}

func (s UpdateConditionRequest_CASPathSelectorConditionalStateMetadataLifecycleBlockDeletion) WithValue(value bool) *UpdateConditionRequestCAS_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateConditionRequestCAS_FieldSubPathValue)
}

func (s UpdateConditionRequest_CASPathSelectorConditionalStateMetadataLifecycleBlockDeletion) WithArrayOfValues(values []bool) *UpdateConditionRequestCAS_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateConditionRequestCAS_FieldSubPathArrayOfValues)
}

type UpdateConditionRequest_CASPathSelectorFieldMask struct{}

func (UpdateConditionRequest_CASPathSelectorFieldMask) FieldPath() *UpdateConditionRequestCAS_FieldTerminalPath {
	return &UpdateConditionRequestCAS_FieldTerminalPath{selector: UpdateConditionRequestCAS_FieldPathSelectorFieldMask}
}

func (s UpdateConditionRequest_CASPathSelectorFieldMask) WithValue(value *condition.Condition_FieldMask) *UpdateConditionRequestCAS_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateConditionRequestCAS_FieldTerminalPathValue)
}

func (s UpdateConditionRequest_CASPathSelectorFieldMask) WithArrayOfValues(values []*condition.Condition_FieldMask) *UpdateConditionRequestCAS_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateConditionRequestCAS_FieldTerminalPathArrayOfValues)
}

type DeleteConditionRequestFieldPathBuilder struct{}

func NewDeleteConditionRequestFieldPathBuilder() DeleteConditionRequestFieldPathBuilder {
	return DeleteConditionRequestFieldPathBuilder{}
}
func (DeleteConditionRequestFieldPathBuilder) Name() DeleteConditionRequestPathSelectorName {
	return DeleteConditionRequestPathSelectorName{}
}

type DeleteConditionRequestPathSelectorName struct{}

func (DeleteConditionRequestPathSelectorName) FieldPath() *DeleteConditionRequest_FieldTerminalPath {
	return &DeleteConditionRequest_FieldTerminalPath{selector: DeleteConditionRequest_FieldPathSelectorName}
}

func (s DeleteConditionRequestPathSelectorName) WithValue(value *condition.Reference) *DeleteConditionRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*DeleteConditionRequest_FieldTerminalPathValue)
}

func (s DeleteConditionRequestPathSelectorName) WithArrayOfValues(values []*condition.Reference) *DeleteConditionRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*DeleteConditionRequest_FieldTerminalPathArrayOfValues)
}
