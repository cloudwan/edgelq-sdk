// Code generated by protoc-gen-goten-object
// File: edgelq/iam/proto/v1alpha2/authorization_custom.proto
// DO NOT EDIT!!!

package authorization_client

// proto imports
import (
	ntt_meta "github.com/cloudwan/edgelq-sdk/common/types/meta"
	multi_region_policy "github.com/cloudwan/edgelq-sdk/common/types/multi_region_policy"
	condition "github.com/cloudwan/edgelq-sdk/iam/resources/v1alpha2/condition"
	organization "github.com/cloudwan/edgelq-sdk/iam/resources/v1alpha2/organization"
	permission "github.com/cloudwan/edgelq-sdk/iam/resources/v1alpha2/permission"
	project "github.com/cloudwan/edgelq-sdk/iam/resources/v1alpha2/project"
	role "github.com/cloudwan/edgelq-sdk/iam/resources/v1alpha2/role"
	meta_service "github.com/cloudwan/edgelq-sdk/meta/resources/v1alpha2/service"
	structpb "github.com/golang/protobuf/ptypes/struct"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
)

// make sure we're using proto imports
var (
	_ = &ntt_meta.Meta{}
	_ = &multi_region_policy.MultiRegionPolicy{}
	_ = &condition.Condition{}
	_ = &organization.Organization{}
	_ = &permission.Permission{}
	_ = &project.Project{}
	_ = &role.Role{}
	_ = &meta_service.Service{}
	_ = &structpb.Struct{}
	_ = &timestamp.Timestamp{}
)

type CheckFieldPathBuilder struct{}

func NewCheckFieldPathBuilder() CheckFieldPathBuilder {
	return CheckFieldPathBuilder{}
}
func (CheckFieldPathBuilder) Object() CheckPathSelectorObject {
	return CheckPathSelectorObject{}
}
func (CheckFieldPathBuilder) Permissions() CheckPathSelectorPermissions {
	return CheckPathSelectorPermissions{}
}

type CheckPathSelectorObject struct{}

func (CheckPathSelectorObject) FieldPath() *Check_FieldTerminalPath {
	return &Check_FieldTerminalPath{selector: Check_FieldPathSelectorObject}
}

func (s CheckPathSelectorObject) WithValue(value string) *Check_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*Check_FieldTerminalPathValue)
}

func (s CheckPathSelectorObject) WithArrayOfValues(values []string) *Check_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*Check_FieldTerminalPathArrayOfValues)
}

type CheckPathSelectorPermissions struct{}

func (CheckPathSelectorPermissions) FieldPath() *Check_FieldTerminalPath {
	return &Check_FieldTerminalPath{selector: Check_FieldPathSelectorPermissions}
}

func (s CheckPathSelectorPermissions) WithValue(value []*permission.Reference) *Check_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*Check_FieldTerminalPathValue)
}

func (s CheckPathSelectorPermissions) WithArrayOfValues(values [][]*permission.Reference) *Check_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*Check_FieldTerminalPathArrayOfValues)
}

func (s CheckPathSelectorPermissions) WithItemValue(value *permission.Reference) *Check_FieldTerminalPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*Check_FieldTerminalPathArrayItemValue)
}

type ConditionalGrantFieldPathBuilder struct{}

func NewConditionalGrantFieldPathBuilder() ConditionalGrantFieldPathBuilder {
	return ConditionalGrantFieldPathBuilder{}
}
func (ConditionalGrantFieldPathBuilder) Permissions() ConditionalGrantPathSelectorPermissions {
	return ConditionalGrantPathSelectorPermissions{}
}
func (ConditionalGrantFieldPathBuilder) ConditionBindings() ConditionalGrantPathSelectorConditionBindings {
	return ConditionalGrantPathSelectorConditionBindings{}
}

type ConditionalGrantPathSelectorPermissions struct{}

func (ConditionalGrantPathSelectorPermissions) FieldPath() *ConditionalGrant_FieldTerminalPath {
	return &ConditionalGrant_FieldTerminalPath{selector: ConditionalGrant_FieldPathSelectorPermissions}
}

func (s ConditionalGrantPathSelectorPermissions) WithValue(value []*permission.Reference) *ConditionalGrant_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*ConditionalGrant_FieldTerminalPathValue)
}

func (s ConditionalGrantPathSelectorPermissions) WithArrayOfValues(values [][]*permission.Reference) *ConditionalGrant_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ConditionalGrant_FieldTerminalPathArrayOfValues)
}

func (s ConditionalGrantPathSelectorPermissions) WithItemValue(value *permission.Reference) *ConditionalGrant_FieldTerminalPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*ConditionalGrant_FieldTerminalPathArrayItemValue)
}

type ConditionalGrantPathSelectorConditionBindings struct{}

func (ConditionalGrantPathSelectorConditionBindings) FieldPath() *ConditionalGrant_FieldTerminalPath {
	return &ConditionalGrant_FieldTerminalPath{selector: ConditionalGrant_FieldPathSelectorConditionBindings}
}

func (s ConditionalGrantPathSelectorConditionBindings) WithValue(value []*condition.ConditionBinding) *ConditionalGrant_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*ConditionalGrant_FieldTerminalPathValue)
}

func (s ConditionalGrantPathSelectorConditionBindings) WithArrayOfValues(values [][]*condition.ConditionBinding) *ConditionalGrant_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ConditionalGrant_FieldTerminalPathArrayOfValues)
}

func (s ConditionalGrantPathSelectorConditionBindings) WithItemValue(value *condition.ConditionBinding) *ConditionalGrant_FieldTerminalPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*ConditionalGrant_FieldTerminalPathArrayItemValue)
}
func (ConditionalGrantPathSelectorConditionBindings) WithSubPath(subPath condition.ConditionBinding_FieldPath) *ConditionalGrant_FieldSubPath {
	return &ConditionalGrant_FieldSubPath{selector: ConditionalGrant_FieldPathSelectorConditionBindings, subPath: subPath}
}

func (s ConditionalGrantPathSelectorConditionBindings) WithSubValue(subPathValue condition.ConditionBinding_FieldPathValue) *ConditionalGrant_FieldSubPathValue {
	return &ConditionalGrant_FieldSubPathValue{ConditionalGrant_FieldPath: s.WithSubPath(subPathValue), subPathValue: subPathValue}
}

func (s ConditionalGrantPathSelectorConditionBindings) WithSubArrayOfValues(subPathArrayOfValues condition.ConditionBinding_FieldPathArrayOfValues) *ConditionalGrant_FieldSubPathArrayOfValues {
	return &ConditionalGrant_FieldSubPathArrayOfValues{ConditionalGrant_FieldPath: s.WithSubPath(subPathArrayOfValues), subPathArrayOfValues: subPathArrayOfValues}
}

func (s ConditionalGrantPathSelectorConditionBindings) WithSubArrayItemValue(subPathArrayItemValue condition.ConditionBinding_FieldPathArrayItemValue) *ConditionalGrant_FieldSubPathArrayItemValue {
	return &ConditionalGrant_FieldSubPathArrayItemValue{ConditionalGrant_FieldPath: s.WithSubPath(subPathArrayItemValue), subPathItemValue: subPathArrayItemValue}
}

func (ConditionalGrantPathSelectorConditionBindings) Condition() ConditionalGrantPathSelectorConditionBindingsCondition {
	return ConditionalGrantPathSelectorConditionBindingsCondition{}
}

func (ConditionalGrantPathSelectorConditionBindings) Parameters() ConditionalGrantPathSelectorConditionBindingsParameters {
	return ConditionalGrantPathSelectorConditionBindingsParameters{}
}

func (ConditionalGrantPathSelectorConditionBindings) Params() ConditionalGrantPathSelectorConditionBindingsParams {
	return ConditionalGrantPathSelectorConditionBindingsParams{}
}

type ConditionalGrantPathSelectorConditionBindingsCondition struct{}

func (ConditionalGrantPathSelectorConditionBindingsCondition) FieldPath() *ConditionalGrant_FieldSubPath {
	return &ConditionalGrant_FieldSubPath{
		selector: ConditionalGrant_FieldPathSelectorConditionBindings,
		subPath:  condition.NewConditionBindingFieldPathBuilder().Condition().FieldPath(),
	}
}

func (s ConditionalGrantPathSelectorConditionBindingsCondition) WithValue(value *condition.Reference) *ConditionalGrant_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ConditionalGrant_FieldSubPathValue)
}

func (s ConditionalGrantPathSelectorConditionBindingsCondition) WithArrayOfValues(values []*condition.Reference) *ConditionalGrant_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ConditionalGrant_FieldSubPathArrayOfValues)
}

type ConditionalGrantPathSelectorConditionBindingsParameters struct{}

func (ConditionalGrantPathSelectorConditionBindingsParameters) FieldPath() *ConditionalGrant_FieldSubPath {
	return &ConditionalGrant_FieldSubPath{
		selector: ConditionalGrant_FieldPathSelectorConditionBindings,
		subPath:  condition.NewConditionBindingFieldPathBuilder().Parameters().FieldPath(),
	}
}

func (s ConditionalGrantPathSelectorConditionBindingsParameters) WithValue(value map[string]string) *ConditionalGrant_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ConditionalGrant_FieldSubPathValue)
}

func (s ConditionalGrantPathSelectorConditionBindingsParameters) WithArrayOfValues(values []map[string]string) *ConditionalGrant_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ConditionalGrant_FieldSubPathArrayOfValues)
}

func (ConditionalGrantPathSelectorConditionBindingsParameters) WithKey(key string) ConditionalGrantMapPathSelectorConditionBindingsParameters {
	return ConditionalGrantMapPathSelectorConditionBindingsParameters{key: key}
}

type ConditionalGrantMapPathSelectorConditionBindingsParameters struct {
	key string
}

func (s ConditionalGrantMapPathSelectorConditionBindingsParameters) FieldPath() *ConditionalGrant_FieldSubPath {
	return &ConditionalGrant_FieldSubPath{
		selector: ConditionalGrant_FieldPathSelectorConditionBindings,
		subPath:  condition.NewConditionBindingFieldPathBuilder().Parameters().WithKey(s.key).FieldPath(),
	}
}

func (s ConditionalGrantMapPathSelectorConditionBindingsParameters) WithValue(value string) *ConditionalGrant_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ConditionalGrant_FieldSubPathValue)
}

func (s ConditionalGrantMapPathSelectorConditionBindingsParameters) WithArrayOfValues(values []string) *ConditionalGrant_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ConditionalGrant_FieldSubPathArrayOfValues)
}

type ConditionalGrantPathSelectorConditionBindingsParams struct{}

func (ConditionalGrantPathSelectorConditionBindingsParams) FieldPath() *ConditionalGrant_FieldSubPath {
	return &ConditionalGrant_FieldSubPath{
		selector: ConditionalGrant_FieldPathSelectorConditionBindings,
		subPath:  condition.NewConditionBindingFieldPathBuilder().Params().FieldPath(),
	}
}

func (s ConditionalGrantPathSelectorConditionBindingsParams) WithValue(value *structpb.Struct) *ConditionalGrant_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ConditionalGrant_FieldSubPathValue)
}

func (s ConditionalGrantPathSelectorConditionBindingsParams) WithArrayOfValues(values []*structpb.Struct) *ConditionalGrant_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ConditionalGrant_FieldSubPathArrayOfValues)
}

type CheckResultFieldPathBuilder struct{}

func NewCheckResultFieldPathBuilder() CheckResultFieldPathBuilder {
	return CheckResultFieldPathBuilder{}
}
func (CheckResultFieldPathBuilder) Object() CheckResultPathSelectorObject {
	return CheckResultPathSelectorObject{}
}
func (CheckResultFieldPathBuilder) GrantedPermissions() CheckResultPathSelectorGrantedPermissions {
	return CheckResultPathSelectorGrantedPermissions{}
}
func (CheckResultFieldPathBuilder) ConditionallyGrantedPermissions() CheckResultPathSelectorConditionallyGrantedPermissions {
	return CheckResultPathSelectorConditionallyGrantedPermissions{}
}

type CheckResultPathSelectorObject struct{}

func (CheckResultPathSelectorObject) FieldPath() *CheckResult_FieldTerminalPath {
	return &CheckResult_FieldTerminalPath{selector: CheckResult_FieldPathSelectorObject}
}

func (s CheckResultPathSelectorObject) WithValue(value string) *CheckResult_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*CheckResult_FieldTerminalPathValue)
}

func (s CheckResultPathSelectorObject) WithArrayOfValues(values []string) *CheckResult_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CheckResult_FieldTerminalPathArrayOfValues)
}

type CheckResultPathSelectorGrantedPermissions struct{}

func (CheckResultPathSelectorGrantedPermissions) FieldPath() *CheckResult_FieldTerminalPath {
	return &CheckResult_FieldTerminalPath{selector: CheckResult_FieldPathSelectorGrantedPermissions}
}

func (s CheckResultPathSelectorGrantedPermissions) WithValue(value []*permission.Reference) *CheckResult_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*CheckResult_FieldTerminalPathValue)
}

func (s CheckResultPathSelectorGrantedPermissions) WithArrayOfValues(values [][]*permission.Reference) *CheckResult_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CheckResult_FieldTerminalPathArrayOfValues)
}

func (s CheckResultPathSelectorGrantedPermissions) WithItemValue(value *permission.Reference) *CheckResult_FieldTerminalPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*CheckResult_FieldTerminalPathArrayItemValue)
}

type CheckResultPathSelectorConditionallyGrantedPermissions struct{}

func (CheckResultPathSelectorConditionallyGrantedPermissions) FieldPath() *CheckResult_FieldTerminalPath {
	return &CheckResult_FieldTerminalPath{selector: CheckResult_FieldPathSelectorConditionallyGrantedPermissions}
}

func (s CheckResultPathSelectorConditionallyGrantedPermissions) WithValue(value []*ConditionalGrant) *CheckResult_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*CheckResult_FieldTerminalPathValue)
}

func (s CheckResultPathSelectorConditionallyGrantedPermissions) WithArrayOfValues(values [][]*ConditionalGrant) *CheckResult_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CheckResult_FieldTerminalPathArrayOfValues)
}

func (s CheckResultPathSelectorConditionallyGrantedPermissions) WithItemValue(value *ConditionalGrant) *CheckResult_FieldTerminalPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*CheckResult_FieldTerminalPathArrayItemValue)
}
func (CheckResultPathSelectorConditionallyGrantedPermissions) WithSubPath(subPath ConditionalGrant_FieldPath) *CheckResult_FieldSubPath {
	return &CheckResult_FieldSubPath{selector: CheckResult_FieldPathSelectorConditionallyGrantedPermissions, subPath: subPath}
}

func (s CheckResultPathSelectorConditionallyGrantedPermissions) WithSubValue(subPathValue ConditionalGrant_FieldPathValue) *CheckResult_FieldSubPathValue {
	return &CheckResult_FieldSubPathValue{CheckResult_FieldPath: s.WithSubPath(subPathValue), subPathValue: subPathValue}
}

func (s CheckResultPathSelectorConditionallyGrantedPermissions) WithSubArrayOfValues(subPathArrayOfValues ConditionalGrant_FieldPathArrayOfValues) *CheckResult_FieldSubPathArrayOfValues {
	return &CheckResult_FieldSubPathArrayOfValues{CheckResult_FieldPath: s.WithSubPath(subPathArrayOfValues), subPathArrayOfValues: subPathArrayOfValues}
}

func (s CheckResultPathSelectorConditionallyGrantedPermissions) WithSubArrayItemValue(subPathArrayItemValue ConditionalGrant_FieldPathArrayItemValue) *CheckResult_FieldSubPathArrayItemValue {
	return &CheckResult_FieldSubPathArrayItemValue{CheckResult_FieldPath: s.WithSubPath(subPathArrayItemValue), subPathItemValue: subPathArrayItemValue}
}

func (CheckResultPathSelectorConditionallyGrantedPermissions) Permissions() CheckResultPathSelectorConditionallyGrantedPermissionsPermissions {
	return CheckResultPathSelectorConditionallyGrantedPermissionsPermissions{}
}

func (CheckResultPathSelectorConditionallyGrantedPermissions) ConditionBindings() CheckResultPathSelectorConditionallyGrantedPermissionsConditionBindings {
	return CheckResultPathSelectorConditionallyGrantedPermissionsConditionBindings{}
}

type CheckResultPathSelectorConditionallyGrantedPermissionsPermissions struct{}

func (CheckResultPathSelectorConditionallyGrantedPermissionsPermissions) FieldPath() *CheckResult_FieldSubPath {
	return &CheckResult_FieldSubPath{
		selector: CheckResult_FieldPathSelectorConditionallyGrantedPermissions,
		subPath:  NewConditionalGrantFieldPathBuilder().Permissions().FieldPath(),
	}
}

func (s CheckResultPathSelectorConditionallyGrantedPermissionsPermissions) WithValue(value []*permission.Reference) *CheckResult_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*CheckResult_FieldSubPathValue)
}

func (s CheckResultPathSelectorConditionallyGrantedPermissionsPermissions) WithArrayOfValues(values [][]*permission.Reference) *CheckResult_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CheckResult_FieldSubPathArrayOfValues)
}

func (s CheckResultPathSelectorConditionallyGrantedPermissionsPermissions) WithItemValue(value *permission.Reference) *CheckResult_FieldSubPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*CheckResult_FieldSubPathArrayItemValue)
}

type CheckResultPathSelectorConditionallyGrantedPermissionsConditionBindings struct{}

func (CheckResultPathSelectorConditionallyGrantedPermissionsConditionBindings) FieldPath() *CheckResult_FieldSubPath {
	return &CheckResult_FieldSubPath{
		selector: CheckResult_FieldPathSelectorConditionallyGrantedPermissions,
		subPath:  NewConditionalGrantFieldPathBuilder().ConditionBindings().FieldPath(),
	}
}

func (s CheckResultPathSelectorConditionallyGrantedPermissionsConditionBindings) WithValue(value []*condition.ConditionBinding) *CheckResult_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*CheckResult_FieldSubPathValue)
}

func (s CheckResultPathSelectorConditionallyGrantedPermissionsConditionBindings) WithArrayOfValues(values [][]*condition.ConditionBinding) *CheckResult_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CheckResult_FieldSubPathArrayOfValues)
}

func (s CheckResultPathSelectorConditionallyGrantedPermissionsConditionBindings) WithItemValue(value *condition.ConditionBinding) *CheckResult_FieldSubPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*CheckResult_FieldSubPathArrayItemValue)
}

func (CheckResultPathSelectorConditionallyGrantedPermissionsConditionBindings) Condition() CheckResultPathSelectorConditionallyGrantedPermissionsConditionBindingsCondition {
	return CheckResultPathSelectorConditionallyGrantedPermissionsConditionBindingsCondition{}
}

func (CheckResultPathSelectorConditionallyGrantedPermissionsConditionBindings) Parameters() CheckResultPathSelectorConditionallyGrantedPermissionsConditionBindingsParameters {
	return CheckResultPathSelectorConditionallyGrantedPermissionsConditionBindingsParameters{}
}

func (CheckResultPathSelectorConditionallyGrantedPermissionsConditionBindings) Params() CheckResultPathSelectorConditionallyGrantedPermissionsConditionBindingsParams {
	return CheckResultPathSelectorConditionallyGrantedPermissionsConditionBindingsParams{}
}

type CheckResultPathSelectorConditionallyGrantedPermissionsConditionBindingsCondition struct{}

func (CheckResultPathSelectorConditionallyGrantedPermissionsConditionBindingsCondition) FieldPath() *CheckResult_FieldSubPath {
	return &CheckResult_FieldSubPath{
		selector: CheckResult_FieldPathSelectorConditionallyGrantedPermissions,
		subPath:  NewConditionalGrantFieldPathBuilder().ConditionBindings().Condition().FieldPath(),
	}
}

func (s CheckResultPathSelectorConditionallyGrantedPermissionsConditionBindingsCondition) WithValue(value *condition.Reference) *CheckResult_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*CheckResult_FieldSubPathValue)
}

func (s CheckResultPathSelectorConditionallyGrantedPermissionsConditionBindingsCondition) WithArrayOfValues(values []*condition.Reference) *CheckResult_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CheckResult_FieldSubPathArrayOfValues)
}

type CheckResultPathSelectorConditionallyGrantedPermissionsConditionBindingsParameters struct{}

func (CheckResultPathSelectorConditionallyGrantedPermissionsConditionBindingsParameters) FieldPath() *CheckResult_FieldSubPath {
	return &CheckResult_FieldSubPath{
		selector: CheckResult_FieldPathSelectorConditionallyGrantedPermissions,
		subPath:  NewConditionalGrantFieldPathBuilder().ConditionBindings().Parameters().FieldPath(),
	}
}

func (s CheckResultPathSelectorConditionallyGrantedPermissionsConditionBindingsParameters) WithValue(value map[string]string) *CheckResult_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*CheckResult_FieldSubPathValue)
}

func (s CheckResultPathSelectorConditionallyGrantedPermissionsConditionBindingsParameters) WithArrayOfValues(values []map[string]string) *CheckResult_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CheckResult_FieldSubPathArrayOfValues)
}

func (CheckResultPathSelectorConditionallyGrantedPermissionsConditionBindingsParameters) WithKey(key string) CheckResultMapPathSelectorConditionallyGrantedPermissionsConditionBindingsParameters {
	return CheckResultMapPathSelectorConditionallyGrantedPermissionsConditionBindingsParameters{key: key}
}

type CheckResultMapPathSelectorConditionallyGrantedPermissionsConditionBindingsParameters struct {
	key string
}

func (s CheckResultMapPathSelectorConditionallyGrantedPermissionsConditionBindingsParameters) FieldPath() *CheckResult_FieldSubPath {
	return &CheckResult_FieldSubPath{
		selector: CheckResult_FieldPathSelectorConditionallyGrantedPermissions,
		subPath:  NewConditionalGrantFieldPathBuilder().ConditionBindings().Parameters().WithKey(s.key).FieldPath(),
	}
}

func (s CheckResultMapPathSelectorConditionallyGrantedPermissionsConditionBindingsParameters) WithValue(value string) *CheckResult_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*CheckResult_FieldSubPathValue)
}

func (s CheckResultMapPathSelectorConditionallyGrantedPermissionsConditionBindingsParameters) WithArrayOfValues(values []string) *CheckResult_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CheckResult_FieldSubPathArrayOfValues)
}

type CheckResultPathSelectorConditionallyGrantedPermissionsConditionBindingsParams struct{}

func (CheckResultPathSelectorConditionallyGrantedPermissionsConditionBindingsParams) FieldPath() *CheckResult_FieldSubPath {
	return &CheckResult_FieldSubPath{
		selector: CheckResult_FieldPathSelectorConditionallyGrantedPermissions,
		subPath:  NewConditionalGrantFieldPathBuilder().ConditionBindings().Params().FieldPath(),
	}
}

func (s CheckResultPathSelectorConditionallyGrantedPermissionsConditionBindingsParams) WithValue(value *structpb.Struct) *CheckResult_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*CheckResult_FieldSubPathValue)
}

func (s CheckResultPathSelectorConditionallyGrantedPermissionsConditionBindingsParams) WithArrayOfValues(values []*structpb.Struct) *CheckResult_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CheckResult_FieldSubPathArrayOfValues)
}

type CheckPermissionsRequestFieldPathBuilder struct{}

func NewCheckPermissionsRequestFieldPathBuilder() CheckPermissionsRequestFieldPathBuilder {
	return CheckPermissionsRequestFieldPathBuilder{}
}
func (CheckPermissionsRequestFieldPathBuilder) Member() CheckPermissionsRequestPathSelectorMember {
	return CheckPermissionsRequestPathSelectorMember{}
}
func (CheckPermissionsRequestFieldPathBuilder) Checks() CheckPermissionsRequestPathSelectorChecks {
	return CheckPermissionsRequestPathSelectorChecks{}
}
func (CheckPermissionsRequestFieldPathBuilder) SkipCache() CheckPermissionsRequestPathSelectorSkipCache {
	return CheckPermissionsRequestPathSelectorSkipCache{}
}

type CheckPermissionsRequestPathSelectorMember struct{}

func (CheckPermissionsRequestPathSelectorMember) FieldPath() *CheckPermissionsRequest_FieldTerminalPath {
	return &CheckPermissionsRequest_FieldTerminalPath{selector: CheckPermissionsRequest_FieldPathSelectorMember}
}

func (s CheckPermissionsRequestPathSelectorMember) WithValue(value string) *CheckPermissionsRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*CheckPermissionsRequest_FieldTerminalPathValue)
}

func (s CheckPermissionsRequestPathSelectorMember) WithArrayOfValues(values []string) *CheckPermissionsRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CheckPermissionsRequest_FieldTerminalPathArrayOfValues)
}

type CheckPermissionsRequestPathSelectorChecks struct{}

func (CheckPermissionsRequestPathSelectorChecks) FieldPath() *CheckPermissionsRequest_FieldTerminalPath {
	return &CheckPermissionsRequest_FieldTerminalPath{selector: CheckPermissionsRequest_FieldPathSelectorChecks}
}

func (s CheckPermissionsRequestPathSelectorChecks) WithValue(value []*Check) *CheckPermissionsRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*CheckPermissionsRequest_FieldTerminalPathValue)
}

func (s CheckPermissionsRequestPathSelectorChecks) WithArrayOfValues(values [][]*Check) *CheckPermissionsRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CheckPermissionsRequest_FieldTerminalPathArrayOfValues)
}

func (s CheckPermissionsRequestPathSelectorChecks) WithItemValue(value *Check) *CheckPermissionsRequest_FieldTerminalPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*CheckPermissionsRequest_FieldTerminalPathArrayItemValue)
}
func (CheckPermissionsRequestPathSelectorChecks) WithSubPath(subPath Check_FieldPath) *CheckPermissionsRequest_FieldSubPath {
	return &CheckPermissionsRequest_FieldSubPath{selector: CheckPermissionsRequest_FieldPathSelectorChecks, subPath: subPath}
}

func (s CheckPermissionsRequestPathSelectorChecks) WithSubValue(subPathValue Check_FieldPathValue) *CheckPermissionsRequest_FieldSubPathValue {
	return &CheckPermissionsRequest_FieldSubPathValue{CheckPermissionsRequest_FieldPath: s.WithSubPath(subPathValue), subPathValue: subPathValue}
}

func (s CheckPermissionsRequestPathSelectorChecks) WithSubArrayOfValues(subPathArrayOfValues Check_FieldPathArrayOfValues) *CheckPermissionsRequest_FieldSubPathArrayOfValues {
	return &CheckPermissionsRequest_FieldSubPathArrayOfValues{CheckPermissionsRequest_FieldPath: s.WithSubPath(subPathArrayOfValues), subPathArrayOfValues: subPathArrayOfValues}
}

func (s CheckPermissionsRequestPathSelectorChecks) WithSubArrayItemValue(subPathArrayItemValue Check_FieldPathArrayItemValue) *CheckPermissionsRequest_FieldSubPathArrayItemValue {
	return &CheckPermissionsRequest_FieldSubPathArrayItemValue{CheckPermissionsRequest_FieldPath: s.WithSubPath(subPathArrayItemValue), subPathItemValue: subPathArrayItemValue}
}

func (CheckPermissionsRequestPathSelectorChecks) Object() CheckPermissionsRequestPathSelectorChecksObject {
	return CheckPermissionsRequestPathSelectorChecksObject{}
}

func (CheckPermissionsRequestPathSelectorChecks) Permissions() CheckPermissionsRequestPathSelectorChecksPermissions {
	return CheckPermissionsRequestPathSelectorChecksPermissions{}
}

type CheckPermissionsRequestPathSelectorChecksObject struct{}

func (CheckPermissionsRequestPathSelectorChecksObject) FieldPath() *CheckPermissionsRequest_FieldSubPath {
	return &CheckPermissionsRequest_FieldSubPath{
		selector: CheckPermissionsRequest_FieldPathSelectorChecks,
		subPath:  NewCheckFieldPathBuilder().Object().FieldPath(),
	}
}

func (s CheckPermissionsRequestPathSelectorChecksObject) WithValue(value string) *CheckPermissionsRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*CheckPermissionsRequest_FieldSubPathValue)
}

func (s CheckPermissionsRequestPathSelectorChecksObject) WithArrayOfValues(values []string) *CheckPermissionsRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CheckPermissionsRequest_FieldSubPathArrayOfValues)
}

type CheckPermissionsRequestPathSelectorChecksPermissions struct{}

func (CheckPermissionsRequestPathSelectorChecksPermissions) FieldPath() *CheckPermissionsRequest_FieldSubPath {
	return &CheckPermissionsRequest_FieldSubPath{
		selector: CheckPermissionsRequest_FieldPathSelectorChecks,
		subPath:  NewCheckFieldPathBuilder().Permissions().FieldPath(),
	}
}

func (s CheckPermissionsRequestPathSelectorChecksPermissions) WithValue(value []*permission.Reference) *CheckPermissionsRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*CheckPermissionsRequest_FieldSubPathValue)
}

func (s CheckPermissionsRequestPathSelectorChecksPermissions) WithArrayOfValues(values [][]*permission.Reference) *CheckPermissionsRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CheckPermissionsRequest_FieldSubPathArrayOfValues)
}

func (s CheckPermissionsRequestPathSelectorChecksPermissions) WithItemValue(value *permission.Reference) *CheckPermissionsRequest_FieldSubPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*CheckPermissionsRequest_FieldSubPathArrayItemValue)
}

type CheckPermissionsRequestPathSelectorSkipCache struct{}

func (CheckPermissionsRequestPathSelectorSkipCache) FieldPath() *CheckPermissionsRequest_FieldTerminalPath {
	return &CheckPermissionsRequest_FieldTerminalPath{selector: CheckPermissionsRequest_FieldPathSelectorSkipCache}
}

func (s CheckPermissionsRequestPathSelectorSkipCache) WithValue(value bool) *CheckPermissionsRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*CheckPermissionsRequest_FieldTerminalPathValue)
}

func (s CheckPermissionsRequestPathSelectorSkipCache) WithArrayOfValues(values []bool) *CheckPermissionsRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CheckPermissionsRequest_FieldTerminalPathArrayOfValues)
}

type CheckPermissionsResponseFieldPathBuilder struct{}

func NewCheckPermissionsResponseFieldPathBuilder() CheckPermissionsResponseFieldPathBuilder {
	return CheckPermissionsResponseFieldPathBuilder{}
}
func (CheckPermissionsResponseFieldPathBuilder) CheckResults() CheckPermissionsResponsePathSelectorCheckResults {
	return CheckPermissionsResponsePathSelectorCheckResults{}
}

type CheckPermissionsResponsePathSelectorCheckResults struct{}

func (CheckPermissionsResponsePathSelectorCheckResults) FieldPath() *CheckPermissionsResponse_FieldTerminalPath {
	return &CheckPermissionsResponse_FieldTerminalPath{selector: CheckPermissionsResponse_FieldPathSelectorCheckResults}
}

func (s CheckPermissionsResponsePathSelectorCheckResults) WithValue(value []*CheckResult) *CheckPermissionsResponse_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*CheckPermissionsResponse_FieldTerminalPathValue)
}

func (s CheckPermissionsResponsePathSelectorCheckResults) WithArrayOfValues(values [][]*CheckResult) *CheckPermissionsResponse_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CheckPermissionsResponse_FieldTerminalPathArrayOfValues)
}

func (s CheckPermissionsResponsePathSelectorCheckResults) WithItemValue(value *CheckResult) *CheckPermissionsResponse_FieldTerminalPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*CheckPermissionsResponse_FieldTerminalPathArrayItemValue)
}
func (CheckPermissionsResponsePathSelectorCheckResults) WithSubPath(subPath CheckResult_FieldPath) *CheckPermissionsResponse_FieldSubPath {
	return &CheckPermissionsResponse_FieldSubPath{selector: CheckPermissionsResponse_FieldPathSelectorCheckResults, subPath: subPath}
}

func (s CheckPermissionsResponsePathSelectorCheckResults) WithSubValue(subPathValue CheckResult_FieldPathValue) *CheckPermissionsResponse_FieldSubPathValue {
	return &CheckPermissionsResponse_FieldSubPathValue{CheckPermissionsResponse_FieldPath: s.WithSubPath(subPathValue), subPathValue: subPathValue}
}

func (s CheckPermissionsResponsePathSelectorCheckResults) WithSubArrayOfValues(subPathArrayOfValues CheckResult_FieldPathArrayOfValues) *CheckPermissionsResponse_FieldSubPathArrayOfValues {
	return &CheckPermissionsResponse_FieldSubPathArrayOfValues{CheckPermissionsResponse_FieldPath: s.WithSubPath(subPathArrayOfValues), subPathArrayOfValues: subPathArrayOfValues}
}

func (s CheckPermissionsResponsePathSelectorCheckResults) WithSubArrayItemValue(subPathArrayItemValue CheckResult_FieldPathArrayItemValue) *CheckPermissionsResponse_FieldSubPathArrayItemValue {
	return &CheckPermissionsResponse_FieldSubPathArrayItemValue{CheckPermissionsResponse_FieldPath: s.WithSubPath(subPathArrayItemValue), subPathItemValue: subPathArrayItemValue}
}

func (CheckPermissionsResponsePathSelectorCheckResults) Object() CheckPermissionsResponsePathSelectorCheckResultsObject {
	return CheckPermissionsResponsePathSelectorCheckResultsObject{}
}

func (CheckPermissionsResponsePathSelectorCheckResults) GrantedPermissions() CheckPermissionsResponsePathSelectorCheckResultsGrantedPermissions {
	return CheckPermissionsResponsePathSelectorCheckResultsGrantedPermissions{}
}

func (CheckPermissionsResponsePathSelectorCheckResults) ConditionallyGrantedPermissions() CheckPermissionsResponsePathSelectorCheckResultsConditionallyGrantedPermissions {
	return CheckPermissionsResponsePathSelectorCheckResultsConditionallyGrantedPermissions{}
}

type CheckPermissionsResponsePathSelectorCheckResultsObject struct{}

func (CheckPermissionsResponsePathSelectorCheckResultsObject) FieldPath() *CheckPermissionsResponse_FieldSubPath {
	return &CheckPermissionsResponse_FieldSubPath{
		selector: CheckPermissionsResponse_FieldPathSelectorCheckResults,
		subPath:  NewCheckResultFieldPathBuilder().Object().FieldPath(),
	}
}

func (s CheckPermissionsResponsePathSelectorCheckResultsObject) WithValue(value string) *CheckPermissionsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*CheckPermissionsResponse_FieldSubPathValue)
}

func (s CheckPermissionsResponsePathSelectorCheckResultsObject) WithArrayOfValues(values []string) *CheckPermissionsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CheckPermissionsResponse_FieldSubPathArrayOfValues)
}

type CheckPermissionsResponsePathSelectorCheckResultsGrantedPermissions struct{}

func (CheckPermissionsResponsePathSelectorCheckResultsGrantedPermissions) FieldPath() *CheckPermissionsResponse_FieldSubPath {
	return &CheckPermissionsResponse_FieldSubPath{
		selector: CheckPermissionsResponse_FieldPathSelectorCheckResults,
		subPath:  NewCheckResultFieldPathBuilder().GrantedPermissions().FieldPath(),
	}
}

func (s CheckPermissionsResponsePathSelectorCheckResultsGrantedPermissions) WithValue(value []*permission.Reference) *CheckPermissionsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*CheckPermissionsResponse_FieldSubPathValue)
}

func (s CheckPermissionsResponsePathSelectorCheckResultsGrantedPermissions) WithArrayOfValues(values [][]*permission.Reference) *CheckPermissionsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CheckPermissionsResponse_FieldSubPathArrayOfValues)
}

func (s CheckPermissionsResponsePathSelectorCheckResultsGrantedPermissions) WithItemValue(value *permission.Reference) *CheckPermissionsResponse_FieldSubPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*CheckPermissionsResponse_FieldSubPathArrayItemValue)
}

type CheckPermissionsResponsePathSelectorCheckResultsConditionallyGrantedPermissions struct{}

func (CheckPermissionsResponsePathSelectorCheckResultsConditionallyGrantedPermissions) FieldPath() *CheckPermissionsResponse_FieldSubPath {
	return &CheckPermissionsResponse_FieldSubPath{
		selector: CheckPermissionsResponse_FieldPathSelectorCheckResults,
		subPath:  NewCheckResultFieldPathBuilder().ConditionallyGrantedPermissions().FieldPath(),
	}
}

func (s CheckPermissionsResponsePathSelectorCheckResultsConditionallyGrantedPermissions) WithValue(value []*ConditionalGrant) *CheckPermissionsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*CheckPermissionsResponse_FieldSubPathValue)
}

func (s CheckPermissionsResponsePathSelectorCheckResultsConditionallyGrantedPermissions) WithArrayOfValues(values [][]*ConditionalGrant) *CheckPermissionsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CheckPermissionsResponse_FieldSubPathArrayOfValues)
}

func (s CheckPermissionsResponsePathSelectorCheckResultsConditionallyGrantedPermissions) WithItemValue(value *ConditionalGrant) *CheckPermissionsResponse_FieldSubPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*CheckPermissionsResponse_FieldSubPathArrayItemValue)
}

func (CheckPermissionsResponsePathSelectorCheckResultsConditionallyGrantedPermissions) Permissions() CheckPermissionsResponsePathSelectorCheckResultsConditionallyGrantedPermissionsPermissions {
	return CheckPermissionsResponsePathSelectorCheckResultsConditionallyGrantedPermissionsPermissions{}
}

func (CheckPermissionsResponsePathSelectorCheckResultsConditionallyGrantedPermissions) ConditionBindings() CheckPermissionsResponsePathSelectorCheckResultsConditionallyGrantedPermissionsConditionBindings {
	return CheckPermissionsResponsePathSelectorCheckResultsConditionallyGrantedPermissionsConditionBindings{}
}

type CheckPermissionsResponsePathSelectorCheckResultsConditionallyGrantedPermissionsPermissions struct{}

func (CheckPermissionsResponsePathSelectorCheckResultsConditionallyGrantedPermissionsPermissions) FieldPath() *CheckPermissionsResponse_FieldSubPath {
	return &CheckPermissionsResponse_FieldSubPath{
		selector: CheckPermissionsResponse_FieldPathSelectorCheckResults,
		subPath:  NewCheckResultFieldPathBuilder().ConditionallyGrantedPermissions().Permissions().FieldPath(),
	}
}

func (s CheckPermissionsResponsePathSelectorCheckResultsConditionallyGrantedPermissionsPermissions) WithValue(value []*permission.Reference) *CheckPermissionsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*CheckPermissionsResponse_FieldSubPathValue)
}

func (s CheckPermissionsResponsePathSelectorCheckResultsConditionallyGrantedPermissionsPermissions) WithArrayOfValues(values [][]*permission.Reference) *CheckPermissionsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CheckPermissionsResponse_FieldSubPathArrayOfValues)
}

func (s CheckPermissionsResponsePathSelectorCheckResultsConditionallyGrantedPermissionsPermissions) WithItemValue(value *permission.Reference) *CheckPermissionsResponse_FieldSubPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*CheckPermissionsResponse_FieldSubPathArrayItemValue)
}

type CheckPermissionsResponsePathSelectorCheckResultsConditionallyGrantedPermissionsConditionBindings struct{}

func (CheckPermissionsResponsePathSelectorCheckResultsConditionallyGrantedPermissionsConditionBindings) FieldPath() *CheckPermissionsResponse_FieldSubPath {
	return &CheckPermissionsResponse_FieldSubPath{
		selector: CheckPermissionsResponse_FieldPathSelectorCheckResults,
		subPath:  NewCheckResultFieldPathBuilder().ConditionallyGrantedPermissions().ConditionBindings().FieldPath(),
	}
}

func (s CheckPermissionsResponsePathSelectorCheckResultsConditionallyGrantedPermissionsConditionBindings) WithValue(value []*condition.ConditionBinding) *CheckPermissionsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*CheckPermissionsResponse_FieldSubPathValue)
}

func (s CheckPermissionsResponsePathSelectorCheckResultsConditionallyGrantedPermissionsConditionBindings) WithArrayOfValues(values [][]*condition.ConditionBinding) *CheckPermissionsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CheckPermissionsResponse_FieldSubPathArrayOfValues)
}

func (s CheckPermissionsResponsePathSelectorCheckResultsConditionallyGrantedPermissionsConditionBindings) WithItemValue(value *condition.ConditionBinding) *CheckPermissionsResponse_FieldSubPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*CheckPermissionsResponse_FieldSubPathArrayItemValue)
}

func (CheckPermissionsResponsePathSelectorCheckResultsConditionallyGrantedPermissionsConditionBindings) Condition() CheckPermissionsResponsePathSelectorCheckResultsConditionallyGrantedPermissionsConditionBindingsCondition {
	return CheckPermissionsResponsePathSelectorCheckResultsConditionallyGrantedPermissionsConditionBindingsCondition{}
}

func (CheckPermissionsResponsePathSelectorCheckResultsConditionallyGrantedPermissionsConditionBindings) Parameters() CheckPermissionsResponsePathSelectorCheckResultsConditionallyGrantedPermissionsConditionBindingsParameters {
	return CheckPermissionsResponsePathSelectorCheckResultsConditionallyGrantedPermissionsConditionBindingsParameters{}
}

func (CheckPermissionsResponsePathSelectorCheckResultsConditionallyGrantedPermissionsConditionBindings) Params() CheckPermissionsResponsePathSelectorCheckResultsConditionallyGrantedPermissionsConditionBindingsParams {
	return CheckPermissionsResponsePathSelectorCheckResultsConditionallyGrantedPermissionsConditionBindingsParams{}
}

type CheckPermissionsResponsePathSelectorCheckResultsConditionallyGrantedPermissionsConditionBindingsCondition struct{}

func (CheckPermissionsResponsePathSelectorCheckResultsConditionallyGrantedPermissionsConditionBindingsCondition) FieldPath() *CheckPermissionsResponse_FieldSubPath {
	return &CheckPermissionsResponse_FieldSubPath{
		selector: CheckPermissionsResponse_FieldPathSelectorCheckResults,
		subPath:  NewCheckResultFieldPathBuilder().ConditionallyGrantedPermissions().ConditionBindings().Condition().FieldPath(),
	}
}

func (s CheckPermissionsResponsePathSelectorCheckResultsConditionallyGrantedPermissionsConditionBindingsCondition) WithValue(value *condition.Reference) *CheckPermissionsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*CheckPermissionsResponse_FieldSubPathValue)
}

func (s CheckPermissionsResponsePathSelectorCheckResultsConditionallyGrantedPermissionsConditionBindingsCondition) WithArrayOfValues(values []*condition.Reference) *CheckPermissionsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CheckPermissionsResponse_FieldSubPathArrayOfValues)
}

type CheckPermissionsResponsePathSelectorCheckResultsConditionallyGrantedPermissionsConditionBindingsParameters struct{}

func (CheckPermissionsResponsePathSelectorCheckResultsConditionallyGrantedPermissionsConditionBindingsParameters) FieldPath() *CheckPermissionsResponse_FieldSubPath {
	return &CheckPermissionsResponse_FieldSubPath{
		selector: CheckPermissionsResponse_FieldPathSelectorCheckResults,
		subPath:  NewCheckResultFieldPathBuilder().ConditionallyGrantedPermissions().ConditionBindings().Parameters().FieldPath(),
	}
}

func (s CheckPermissionsResponsePathSelectorCheckResultsConditionallyGrantedPermissionsConditionBindingsParameters) WithValue(value map[string]string) *CheckPermissionsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*CheckPermissionsResponse_FieldSubPathValue)
}

func (s CheckPermissionsResponsePathSelectorCheckResultsConditionallyGrantedPermissionsConditionBindingsParameters) WithArrayOfValues(values []map[string]string) *CheckPermissionsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CheckPermissionsResponse_FieldSubPathArrayOfValues)
}

func (CheckPermissionsResponsePathSelectorCheckResultsConditionallyGrantedPermissionsConditionBindingsParameters) WithKey(key string) CheckPermissionsResponseMapPathSelectorCheckResultsConditionallyGrantedPermissionsConditionBindingsParameters {
	return CheckPermissionsResponseMapPathSelectorCheckResultsConditionallyGrantedPermissionsConditionBindingsParameters{key: key}
}

type CheckPermissionsResponseMapPathSelectorCheckResultsConditionallyGrantedPermissionsConditionBindingsParameters struct {
	key string
}

func (s CheckPermissionsResponseMapPathSelectorCheckResultsConditionallyGrantedPermissionsConditionBindingsParameters) FieldPath() *CheckPermissionsResponse_FieldSubPath {
	return &CheckPermissionsResponse_FieldSubPath{
		selector: CheckPermissionsResponse_FieldPathSelectorCheckResults,
		subPath:  NewCheckResultFieldPathBuilder().ConditionallyGrantedPermissions().ConditionBindings().Parameters().WithKey(s.key).FieldPath(),
	}
}

func (s CheckPermissionsResponseMapPathSelectorCheckResultsConditionallyGrantedPermissionsConditionBindingsParameters) WithValue(value string) *CheckPermissionsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*CheckPermissionsResponse_FieldSubPathValue)
}

func (s CheckPermissionsResponseMapPathSelectorCheckResultsConditionallyGrantedPermissionsConditionBindingsParameters) WithArrayOfValues(values []string) *CheckPermissionsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CheckPermissionsResponse_FieldSubPathArrayOfValues)
}

type CheckPermissionsResponsePathSelectorCheckResultsConditionallyGrantedPermissionsConditionBindingsParams struct{}

func (CheckPermissionsResponsePathSelectorCheckResultsConditionallyGrantedPermissionsConditionBindingsParams) FieldPath() *CheckPermissionsResponse_FieldSubPath {
	return &CheckPermissionsResponse_FieldSubPath{
		selector: CheckPermissionsResponse_FieldPathSelectorCheckResults,
		subPath:  NewCheckResultFieldPathBuilder().ConditionallyGrantedPermissions().ConditionBindings().Params().FieldPath(),
	}
}

func (s CheckPermissionsResponsePathSelectorCheckResultsConditionallyGrantedPermissionsConditionBindingsParams) WithValue(value *structpb.Struct) *CheckPermissionsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*CheckPermissionsResponse_FieldSubPathValue)
}

func (s CheckPermissionsResponsePathSelectorCheckResultsConditionallyGrantedPermissionsConditionBindingsParams) WithArrayOfValues(values []*structpb.Struct) *CheckPermissionsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CheckPermissionsResponse_FieldSubPathArrayOfValues)
}

type CheckMyPermissionsRequestFieldPathBuilder struct{}

func NewCheckMyPermissionsRequestFieldPathBuilder() CheckMyPermissionsRequestFieldPathBuilder {
	return CheckMyPermissionsRequestFieldPathBuilder{}
}
func (CheckMyPermissionsRequestFieldPathBuilder) Checks() CheckMyPermissionsRequestPathSelectorChecks {
	return CheckMyPermissionsRequestPathSelectorChecks{}
}
func (CheckMyPermissionsRequestFieldPathBuilder) SkipCache() CheckMyPermissionsRequestPathSelectorSkipCache {
	return CheckMyPermissionsRequestPathSelectorSkipCache{}
}

type CheckMyPermissionsRequestPathSelectorChecks struct{}

func (CheckMyPermissionsRequestPathSelectorChecks) FieldPath() *CheckMyPermissionsRequest_FieldTerminalPath {
	return &CheckMyPermissionsRequest_FieldTerminalPath{selector: CheckMyPermissionsRequest_FieldPathSelectorChecks}
}

func (s CheckMyPermissionsRequestPathSelectorChecks) WithValue(value []*Check) *CheckMyPermissionsRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*CheckMyPermissionsRequest_FieldTerminalPathValue)
}

func (s CheckMyPermissionsRequestPathSelectorChecks) WithArrayOfValues(values [][]*Check) *CheckMyPermissionsRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CheckMyPermissionsRequest_FieldTerminalPathArrayOfValues)
}

func (s CheckMyPermissionsRequestPathSelectorChecks) WithItemValue(value *Check) *CheckMyPermissionsRequest_FieldTerminalPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*CheckMyPermissionsRequest_FieldTerminalPathArrayItemValue)
}
func (CheckMyPermissionsRequestPathSelectorChecks) WithSubPath(subPath Check_FieldPath) *CheckMyPermissionsRequest_FieldSubPath {
	return &CheckMyPermissionsRequest_FieldSubPath{selector: CheckMyPermissionsRequest_FieldPathSelectorChecks, subPath: subPath}
}

func (s CheckMyPermissionsRequestPathSelectorChecks) WithSubValue(subPathValue Check_FieldPathValue) *CheckMyPermissionsRequest_FieldSubPathValue {
	return &CheckMyPermissionsRequest_FieldSubPathValue{CheckMyPermissionsRequest_FieldPath: s.WithSubPath(subPathValue), subPathValue: subPathValue}
}

func (s CheckMyPermissionsRequestPathSelectorChecks) WithSubArrayOfValues(subPathArrayOfValues Check_FieldPathArrayOfValues) *CheckMyPermissionsRequest_FieldSubPathArrayOfValues {
	return &CheckMyPermissionsRequest_FieldSubPathArrayOfValues{CheckMyPermissionsRequest_FieldPath: s.WithSubPath(subPathArrayOfValues), subPathArrayOfValues: subPathArrayOfValues}
}

func (s CheckMyPermissionsRequestPathSelectorChecks) WithSubArrayItemValue(subPathArrayItemValue Check_FieldPathArrayItemValue) *CheckMyPermissionsRequest_FieldSubPathArrayItemValue {
	return &CheckMyPermissionsRequest_FieldSubPathArrayItemValue{CheckMyPermissionsRequest_FieldPath: s.WithSubPath(subPathArrayItemValue), subPathItemValue: subPathArrayItemValue}
}

func (CheckMyPermissionsRequestPathSelectorChecks) Object() CheckMyPermissionsRequestPathSelectorChecksObject {
	return CheckMyPermissionsRequestPathSelectorChecksObject{}
}

func (CheckMyPermissionsRequestPathSelectorChecks) Permissions() CheckMyPermissionsRequestPathSelectorChecksPermissions {
	return CheckMyPermissionsRequestPathSelectorChecksPermissions{}
}

type CheckMyPermissionsRequestPathSelectorChecksObject struct{}

func (CheckMyPermissionsRequestPathSelectorChecksObject) FieldPath() *CheckMyPermissionsRequest_FieldSubPath {
	return &CheckMyPermissionsRequest_FieldSubPath{
		selector: CheckMyPermissionsRequest_FieldPathSelectorChecks,
		subPath:  NewCheckFieldPathBuilder().Object().FieldPath(),
	}
}

func (s CheckMyPermissionsRequestPathSelectorChecksObject) WithValue(value string) *CheckMyPermissionsRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*CheckMyPermissionsRequest_FieldSubPathValue)
}

func (s CheckMyPermissionsRequestPathSelectorChecksObject) WithArrayOfValues(values []string) *CheckMyPermissionsRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CheckMyPermissionsRequest_FieldSubPathArrayOfValues)
}

type CheckMyPermissionsRequestPathSelectorChecksPermissions struct{}

func (CheckMyPermissionsRequestPathSelectorChecksPermissions) FieldPath() *CheckMyPermissionsRequest_FieldSubPath {
	return &CheckMyPermissionsRequest_FieldSubPath{
		selector: CheckMyPermissionsRequest_FieldPathSelectorChecks,
		subPath:  NewCheckFieldPathBuilder().Permissions().FieldPath(),
	}
}

func (s CheckMyPermissionsRequestPathSelectorChecksPermissions) WithValue(value []*permission.Reference) *CheckMyPermissionsRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*CheckMyPermissionsRequest_FieldSubPathValue)
}

func (s CheckMyPermissionsRequestPathSelectorChecksPermissions) WithArrayOfValues(values [][]*permission.Reference) *CheckMyPermissionsRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CheckMyPermissionsRequest_FieldSubPathArrayOfValues)
}

func (s CheckMyPermissionsRequestPathSelectorChecksPermissions) WithItemValue(value *permission.Reference) *CheckMyPermissionsRequest_FieldSubPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*CheckMyPermissionsRequest_FieldSubPathArrayItemValue)
}

type CheckMyPermissionsRequestPathSelectorSkipCache struct{}

func (CheckMyPermissionsRequestPathSelectorSkipCache) FieldPath() *CheckMyPermissionsRequest_FieldTerminalPath {
	return &CheckMyPermissionsRequest_FieldTerminalPath{selector: CheckMyPermissionsRequest_FieldPathSelectorSkipCache}
}

func (s CheckMyPermissionsRequestPathSelectorSkipCache) WithValue(value bool) *CheckMyPermissionsRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*CheckMyPermissionsRequest_FieldTerminalPathValue)
}

func (s CheckMyPermissionsRequestPathSelectorSkipCache) WithArrayOfValues(values []bool) *CheckMyPermissionsRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CheckMyPermissionsRequest_FieldTerminalPathArrayOfValues)
}

type CheckMyPermissionsResponseFieldPathBuilder struct{}

func NewCheckMyPermissionsResponseFieldPathBuilder() CheckMyPermissionsResponseFieldPathBuilder {
	return CheckMyPermissionsResponseFieldPathBuilder{}
}
func (CheckMyPermissionsResponseFieldPathBuilder) CheckResults() CheckMyPermissionsResponsePathSelectorCheckResults {
	return CheckMyPermissionsResponsePathSelectorCheckResults{}
}

type CheckMyPermissionsResponsePathSelectorCheckResults struct{}

func (CheckMyPermissionsResponsePathSelectorCheckResults) FieldPath() *CheckMyPermissionsResponse_FieldTerminalPath {
	return &CheckMyPermissionsResponse_FieldTerminalPath{selector: CheckMyPermissionsResponse_FieldPathSelectorCheckResults}
}

func (s CheckMyPermissionsResponsePathSelectorCheckResults) WithValue(value []*CheckResult) *CheckMyPermissionsResponse_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*CheckMyPermissionsResponse_FieldTerminalPathValue)
}

func (s CheckMyPermissionsResponsePathSelectorCheckResults) WithArrayOfValues(values [][]*CheckResult) *CheckMyPermissionsResponse_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CheckMyPermissionsResponse_FieldTerminalPathArrayOfValues)
}

func (s CheckMyPermissionsResponsePathSelectorCheckResults) WithItemValue(value *CheckResult) *CheckMyPermissionsResponse_FieldTerminalPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*CheckMyPermissionsResponse_FieldTerminalPathArrayItemValue)
}
func (CheckMyPermissionsResponsePathSelectorCheckResults) WithSubPath(subPath CheckResult_FieldPath) *CheckMyPermissionsResponse_FieldSubPath {
	return &CheckMyPermissionsResponse_FieldSubPath{selector: CheckMyPermissionsResponse_FieldPathSelectorCheckResults, subPath: subPath}
}

func (s CheckMyPermissionsResponsePathSelectorCheckResults) WithSubValue(subPathValue CheckResult_FieldPathValue) *CheckMyPermissionsResponse_FieldSubPathValue {
	return &CheckMyPermissionsResponse_FieldSubPathValue{CheckMyPermissionsResponse_FieldPath: s.WithSubPath(subPathValue), subPathValue: subPathValue}
}

func (s CheckMyPermissionsResponsePathSelectorCheckResults) WithSubArrayOfValues(subPathArrayOfValues CheckResult_FieldPathArrayOfValues) *CheckMyPermissionsResponse_FieldSubPathArrayOfValues {
	return &CheckMyPermissionsResponse_FieldSubPathArrayOfValues{CheckMyPermissionsResponse_FieldPath: s.WithSubPath(subPathArrayOfValues), subPathArrayOfValues: subPathArrayOfValues}
}

func (s CheckMyPermissionsResponsePathSelectorCheckResults) WithSubArrayItemValue(subPathArrayItemValue CheckResult_FieldPathArrayItemValue) *CheckMyPermissionsResponse_FieldSubPathArrayItemValue {
	return &CheckMyPermissionsResponse_FieldSubPathArrayItemValue{CheckMyPermissionsResponse_FieldPath: s.WithSubPath(subPathArrayItemValue), subPathItemValue: subPathArrayItemValue}
}

func (CheckMyPermissionsResponsePathSelectorCheckResults) Object() CheckMyPermissionsResponsePathSelectorCheckResultsObject {
	return CheckMyPermissionsResponsePathSelectorCheckResultsObject{}
}

func (CheckMyPermissionsResponsePathSelectorCheckResults) GrantedPermissions() CheckMyPermissionsResponsePathSelectorCheckResultsGrantedPermissions {
	return CheckMyPermissionsResponsePathSelectorCheckResultsGrantedPermissions{}
}

func (CheckMyPermissionsResponsePathSelectorCheckResults) ConditionallyGrantedPermissions() CheckMyPermissionsResponsePathSelectorCheckResultsConditionallyGrantedPermissions {
	return CheckMyPermissionsResponsePathSelectorCheckResultsConditionallyGrantedPermissions{}
}

type CheckMyPermissionsResponsePathSelectorCheckResultsObject struct{}

func (CheckMyPermissionsResponsePathSelectorCheckResultsObject) FieldPath() *CheckMyPermissionsResponse_FieldSubPath {
	return &CheckMyPermissionsResponse_FieldSubPath{
		selector: CheckMyPermissionsResponse_FieldPathSelectorCheckResults,
		subPath:  NewCheckResultFieldPathBuilder().Object().FieldPath(),
	}
}

func (s CheckMyPermissionsResponsePathSelectorCheckResultsObject) WithValue(value string) *CheckMyPermissionsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*CheckMyPermissionsResponse_FieldSubPathValue)
}

func (s CheckMyPermissionsResponsePathSelectorCheckResultsObject) WithArrayOfValues(values []string) *CheckMyPermissionsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CheckMyPermissionsResponse_FieldSubPathArrayOfValues)
}

type CheckMyPermissionsResponsePathSelectorCheckResultsGrantedPermissions struct{}

func (CheckMyPermissionsResponsePathSelectorCheckResultsGrantedPermissions) FieldPath() *CheckMyPermissionsResponse_FieldSubPath {
	return &CheckMyPermissionsResponse_FieldSubPath{
		selector: CheckMyPermissionsResponse_FieldPathSelectorCheckResults,
		subPath:  NewCheckResultFieldPathBuilder().GrantedPermissions().FieldPath(),
	}
}

func (s CheckMyPermissionsResponsePathSelectorCheckResultsGrantedPermissions) WithValue(value []*permission.Reference) *CheckMyPermissionsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*CheckMyPermissionsResponse_FieldSubPathValue)
}

func (s CheckMyPermissionsResponsePathSelectorCheckResultsGrantedPermissions) WithArrayOfValues(values [][]*permission.Reference) *CheckMyPermissionsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CheckMyPermissionsResponse_FieldSubPathArrayOfValues)
}

func (s CheckMyPermissionsResponsePathSelectorCheckResultsGrantedPermissions) WithItemValue(value *permission.Reference) *CheckMyPermissionsResponse_FieldSubPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*CheckMyPermissionsResponse_FieldSubPathArrayItemValue)
}

type CheckMyPermissionsResponsePathSelectorCheckResultsConditionallyGrantedPermissions struct{}

func (CheckMyPermissionsResponsePathSelectorCheckResultsConditionallyGrantedPermissions) FieldPath() *CheckMyPermissionsResponse_FieldSubPath {
	return &CheckMyPermissionsResponse_FieldSubPath{
		selector: CheckMyPermissionsResponse_FieldPathSelectorCheckResults,
		subPath:  NewCheckResultFieldPathBuilder().ConditionallyGrantedPermissions().FieldPath(),
	}
}

func (s CheckMyPermissionsResponsePathSelectorCheckResultsConditionallyGrantedPermissions) WithValue(value []*ConditionalGrant) *CheckMyPermissionsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*CheckMyPermissionsResponse_FieldSubPathValue)
}

func (s CheckMyPermissionsResponsePathSelectorCheckResultsConditionallyGrantedPermissions) WithArrayOfValues(values [][]*ConditionalGrant) *CheckMyPermissionsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CheckMyPermissionsResponse_FieldSubPathArrayOfValues)
}

func (s CheckMyPermissionsResponsePathSelectorCheckResultsConditionallyGrantedPermissions) WithItemValue(value *ConditionalGrant) *CheckMyPermissionsResponse_FieldSubPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*CheckMyPermissionsResponse_FieldSubPathArrayItemValue)
}

func (CheckMyPermissionsResponsePathSelectorCheckResultsConditionallyGrantedPermissions) Permissions() CheckMyPermissionsResponsePathSelectorCheckResultsConditionallyGrantedPermissionsPermissions {
	return CheckMyPermissionsResponsePathSelectorCheckResultsConditionallyGrantedPermissionsPermissions{}
}

func (CheckMyPermissionsResponsePathSelectorCheckResultsConditionallyGrantedPermissions) ConditionBindings() CheckMyPermissionsResponsePathSelectorCheckResultsConditionallyGrantedPermissionsConditionBindings {
	return CheckMyPermissionsResponsePathSelectorCheckResultsConditionallyGrantedPermissionsConditionBindings{}
}

type CheckMyPermissionsResponsePathSelectorCheckResultsConditionallyGrantedPermissionsPermissions struct{}

func (CheckMyPermissionsResponsePathSelectorCheckResultsConditionallyGrantedPermissionsPermissions) FieldPath() *CheckMyPermissionsResponse_FieldSubPath {
	return &CheckMyPermissionsResponse_FieldSubPath{
		selector: CheckMyPermissionsResponse_FieldPathSelectorCheckResults,
		subPath:  NewCheckResultFieldPathBuilder().ConditionallyGrantedPermissions().Permissions().FieldPath(),
	}
}

func (s CheckMyPermissionsResponsePathSelectorCheckResultsConditionallyGrantedPermissionsPermissions) WithValue(value []*permission.Reference) *CheckMyPermissionsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*CheckMyPermissionsResponse_FieldSubPathValue)
}

func (s CheckMyPermissionsResponsePathSelectorCheckResultsConditionallyGrantedPermissionsPermissions) WithArrayOfValues(values [][]*permission.Reference) *CheckMyPermissionsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CheckMyPermissionsResponse_FieldSubPathArrayOfValues)
}

func (s CheckMyPermissionsResponsePathSelectorCheckResultsConditionallyGrantedPermissionsPermissions) WithItemValue(value *permission.Reference) *CheckMyPermissionsResponse_FieldSubPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*CheckMyPermissionsResponse_FieldSubPathArrayItemValue)
}

type CheckMyPermissionsResponsePathSelectorCheckResultsConditionallyGrantedPermissionsConditionBindings struct{}

func (CheckMyPermissionsResponsePathSelectorCheckResultsConditionallyGrantedPermissionsConditionBindings) FieldPath() *CheckMyPermissionsResponse_FieldSubPath {
	return &CheckMyPermissionsResponse_FieldSubPath{
		selector: CheckMyPermissionsResponse_FieldPathSelectorCheckResults,
		subPath:  NewCheckResultFieldPathBuilder().ConditionallyGrantedPermissions().ConditionBindings().FieldPath(),
	}
}

func (s CheckMyPermissionsResponsePathSelectorCheckResultsConditionallyGrantedPermissionsConditionBindings) WithValue(value []*condition.ConditionBinding) *CheckMyPermissionsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*CheckMyPermissionsResponse_FieldSubPathValue)
}

func (s CheckMyPermissionsResponsePathSelectorCheckResultsConditionallyGrantedPermissionsConditionBindings) WithArrayOfValues(values [][]*condition.ConditionBinding) *CheckMyPermissionsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CheckMyPermissionsResponse_FieldSubPathArrayOfValues)
}

func (s CheckMyPermissionsResponsePathSelectorCheckResultsConditionallyGrantedPermissionsConditionBindings) WithItemValue(value *condition.ConditionBinding) *CheckMyPermissionsResponse_FieldSubPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*CheckMyPermissionsResponse_FieldSubPathArrayItemValue)
}

func (CheckMyPermissionsResponsePathSelectorCheckResultsConditionallyGrantedPermissionsConditionBindings) Condition() CheckMyPermissionsResponsePathSelectorCheckResultsConditionallyGrantedPermissionsConditionBindingsCondition {
	return CheckMyPermissionsResponsePathSelectorCheckResultsConditionallyGrantedPermissionsConditionBindingsCondition{}
}

func (CheckMyPermissionsResponsePathSelectorCheckResultsConditionallyGrantedPermissionsConditionBindings) Parameters() CheckMyPermissionsResponsePathSelectorCheckResultsConditionallyGrantedPermissionsConditionBindingsParameters {
	return CheckMyPermissionsResponsePathSelectorCheckResultsConditionallyGrantedPermissionsConditionBindingsParameters{}
}

func (CheckMyPermissionsResponsePathSelectorCheckResultsConditionallyGrantedPermissionsConditionBindings) Params() CheckMyPermissionsResponsePathSelectorCheckResultsConditionallyGrantedPermissionsConditionBindingsParams {
	return CheckMyPermissionsResponsePathSelectorCheckResultsConditionallyGrantedPermissionsConditionBindingsParams{}
}

type CheckMyPermissionsResponsePathSelectorCheckResultsConditionallyGrantedPermissionsConditionBindingsCondition struct{}

func (CheckMyPermissionsResponsePathSelectorCheckResultsConditionallyGrantedPermissionsConditionBindingsCondition) FieldPath() *CheckMyPermissionsResponse_FieldSubPath {
	return &CheckMyPermissionsResponse_FieldSubPath{
		selector: CheckMyPermissionsResponse_FieldPathSelectorCheckResults,
		subPath:  NewCheckResultFieldPathBuilder().ConditionallyGrantedPermissions().ConditionBindings().Condition().FieldPath(),
	}
}

func (s CheckMyPermissionsResponsePathSelectorCheckResultsConditionallyGrantedPermissionsConditionBindingsCondition) WithValue(value *condition.Reference) *CheckMyPermissionsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*CheckMyPermissionsResponse_FieldSubPathValue)
}

func (s CheckMyPermissionsResponsePathSelectorCheckResultsConditionallyGrantedPermissionsConditionBindingsCondition) WithArrayOfValues(values []*condition.Reference) *CheckMyPermissionsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CheckMyPermissionsResponse_FieldSubPathArrayOfValues)
}

type CheckMyPermissionsResponsePathSelectorCheckResultsConditionallyGrantedPermissionsConditionBindingsParameters struct{}

func (CheckMyPermissionsResponsePathSelectorCheckResultsConditionallyGrantedPermissionsConditionBindingsParameters) FieldPath() *CheckMyPermissionsResponse_FieldSubPath {
	return &CheckMyPermissionsResponse_FieldSubPath{
		selector: CheckMyPermissionsResponse_FieldPathSelectorCheckResults,
		subPath:  NewCheckResultFieldPathBuilder().ConditionallyGrantedPermissions().ConditionBindings().Parameters().FieldPath(),
	}
}

func (s CheckMyPermissionsResponsePathSelectorCheckResultsConditionallyGrantedPermissionsConditionBindingsParameters) WithValue(value map[string]string) *CheckMyPermissionsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*CheckMyPermissionsResponse_FieldSubPathValue)
}

func (s CheckMyPermissionsResponsePathSelectorCheckResultsConditionallyGrantedPermissionsConditionBindingsParameters) WithArrayOfValues(values []map[string]string) *CheckMyPermissionsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CheckMyPermissionsResponse_FieldSubPathArrayOfValues)
}

func (CheckMyPermissionsResponsePathSelectorCheckResultsConditionallyGrantedPermissionsConditionBindingsParameters) WithKey(key string) CheckMyPermissionsResponseMapPathSelectorCheckResultsConditionallyGrantedPermissionsConditionBindingsParameters {
	return CheckMyPermissionsResponseMapPathSelectorCheckResultsConditionallyGrantedPermissionsConditionBindingsParameters{key: key}
}

type CheckMyPermissionsResponseMapPathSelectorCheckResultsConditionallyGrantedPermissionsConditionBindingsParameters struct {
	key string
}

func (s CheckMyPermissionsResponseMapPathSelectorCheckResultsConditionallyGrantedPermissionsConditionBindingsParameters) FieldPath() *CheckMyPermissionsResponse_FieldSubPath {
	return &CheckMyPermissionsResponse_FieldSubPath{
		selector: CheckMyPermissionsResponse_FieldPathSelectorCheckResults,
		subPath:  NewCheckResultFieldPathBuilder().ConditionallyGrantedPermissions().ConditionBindings().Parameters().WithKey(s.key).FieldPath(),
	}
}

func (s CheckMyPermissionsResponseMapPathSelectorCheckResultsConditionallyGrantedPermissionsConditionBindingsParameters) WithValue(value string) *CheckMyPermissionsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*CheckMyPermissionsResponse_FieldSubPathValue)
}

func (s CheckMyPermissionsResponseMapPathSelectorCheckResultsConditionallyGrantedPermissionsConditionBindingsParameters) WithArrayOfValues(values []string) *CheckMyPermissionsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CheckMyPermissionsResponse_FieldSubPathArrayOfValues)
}

type CheckMyPermissionsResponsePathSelectorCheckResultsConditionallyGrantedPermissionsConditionBindingsParams struct{}

func (CheckMyPermissionsResponsePathSelectorCheckResultsConditionallyGrantedPermissionsConditionBindingsParams) FieldPath() *CheckMyPermissionsResponse_FieldSubPath {
	return &CheckMyPermissionsResponse_FieldSubPath{
		selector: CheckMyPermissionsResponse_FieldPathSelectorCheckResults,
		subPath:  NewCheckResultFieldPathBuilder().ConditionallyGrantedPermissions().ConditionBindings().Params().FieldPath(),
	}
}

func (s CheckMyPermissionsResponsePathSelectorCheckResultsConditionallyGrantedPermissionsConditionBindingsParams) WithValue(value *structpb.Struct) *CheckMyPermissionsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*CheckMyPermissionsResponse_FieldSubPathValue)
}

func (s CheckMyPermissionsResponsePathSelectorCheckResultsConditionallyGrantedPermissionsConditionBindingsParams) WithArrayOfValues(values []*structpb.Struct) *CheckMyPermissionsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CheckMyPermissionsResponse_FieldSubPathArrayOfValues)
}

type CheckMyRolesRequestFieldPathBuilder struct{}

func NewCheckMyRolesRequestFieldPathBuilder() CheckMyRolesRequestFieldPathBuilder {
	return CheckMyRolesRequestFieldPathBuilder{}
}
func (CheckMyRolesRequestFieldPathBuilder) Object() CheckMyRolesRequestPathSelectorObject {
	return CheckMyRolesRequestPathSelectorObject{}
}

type CheckMyRolesRequestPathSelectorObject struct{}

func (CheckMyRolesRequestPathSelectorObject) FieldPath() *CheckMyRolesRequest_FieldTerminalPath {
	return &CheckMyRolesRequest_FieldTerminalPath{selector: CheckMyRolesRequest_FieldPathSelectorObject}
}

func (s CheckMyRolesRequestPathSelectorObject) WithValue(value string) *CheckMyRolesRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*CheckMyRolesRequest_FieldTerminalPathValue)
}

func (s CheckMyRolesRequestPathSelectorObject) WithArrayOfValues(values []string) *CheckMyRolesRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CheckMyRolesRequest_FieldTerminalPathArrayOfValues)
}

type CheckMyRolesResponseFieldPathBuilder struct{}

func NewCheckMyRolesResponseFieldPathBuilder() CheckMyRolesResponseFieldPathBuilder {
	return CheckMyRolesResponseFieldPathBuilder{}
}
func (CheckMyRolesResponseFieldPathBuilder) Object() CheckMyRolesResponsePathSelectorObject {
	return CheckMyRolesResponsePathSelectorObject{}
}
func (CheckMyRolesResponseFieldPathBuilder) GrantedRoles() CheckMyRolesResponsePathSelectorGrantedRoles {
	return CheckMyRolesResponsePathSelectorGrantedRoles{}
}
func (CheckMyRolesResponseFieldPathBuilder) ConditionallyGrantedRoles() CheckMyRolesResponsePathSelectorConditionallyGrantedRoles {
	return CheckMyRolesResponsePathSelectorConditionallyGrantedRoles{}
}

type CheckMyRolesResponsePathSelectorObject struct{}

func (CheckMyRolesResponsePathSelectorObject) FieldPath() *CheckMyRolesResponse_FieldTerminalPath {
	return &CheckMyRolesResponse_FieldTerminalPath{selector: CheckMyRolesResponse_FieldPathSelectorObject}
}

func (s CheckMyRolesResponsePathSelectorObject) WithValue(value string) *CheckMyRolesResponse_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*CheckMyRolesResponse_FieldTerminalPathValue)
}

func (s CheckMyRolesResponsePathSelectorObject) WithArrayOfValues(values []string) *CheckMyRolesResponse_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CheckMyRolesResponse_FieldTerminalPathArrayOfValues)
}

type CheckMyRolesResponsePathSelectorGrantedRoles struct{}

func (CheckMyRolesResponsePathSelectorGrantedRoles) FieldPath() *CheckMyRolesResponse_FieldTerminalPath {
	return &CheckMyRolesResponse_FieldTerminalPath{selector: CheckMyRolesResponse_FieldPathSelectorGrantedRoles}
}

func (s CheckMyRolesResponsePathSelectorGrantedRoles) WithValue(value []*role.Reference) *CheckMyRolesResponse_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*CheckMyRolesResponse_FieldTerminalPathValue)
}

func (s CheckMyRolesResponsePathSelectorGrantedRoles) WithArrayOfValues(values [][]*role.Reference) *CheckMyRolesResponse_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CheckMyRolesResponse_FieldTerminalPathArrayOfValues)
}

func (s CheckMyRolesResponsePathSelectorGrantedRoles) WithItemValue(value *role.Reference) *CheckMyRolesResponse_FieldTerminalPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*CheckMyRolesResponse_FieldTerminalPathArrayItemValue)
}

type CheckMyRolesResponsePathSelectorConditionallyGrantedRoles struct{}

func (CheckMyRolesResponsePathSelectorConditionallyGrantedRoles) FieldPath() *CheckMyRolesResponse_FieldTerminalPath {
	return &CheckMyRolesResponse_FieldTerminalPath{selector: CheckMyRolesResponse_FieldPathSelectorConditionallyGrantedRoles}
}

func (s CheckMyRolesResponsePathSelectorConditionallyGrantedRoles) WithValue(value []*CheckMyRolesResponse_ConditionalGrant) *CheckMyRolesResponse_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*CheckMyRolesResponse_FieldTerminalPathValue)
}

func (s CheckMyRolesResponsePathSelectorConditionallyGrantedRoles) WithArrayOfValues(values [][]*CheckMyRolesResponse_ConditionalGrant) *CheckMyRolesResponse_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CheckMyRolesResponse_FieldTerminalPathArrayOfValues)
}

func (s CheckMyRolesResponsePathSelectorConditionallyGrantedRoles) WithItemValue(value *CheckMyRolesResponse_ConditionalGrant) *CheckMyRolesResponse_FieldTerminalPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*CheckMyRolesResponse_FieldTerminalPathArrayItemValue)
}
func (CheckMyRolesResponsePathSelectorConditionallyGrantedRoles) WithSubPath(subPath CheckMyRolesResponseConditionalGrant_FieldPath) *CheckMyRolesResponse_FieldSubPath {
	return &CheckMyRolesResponse_FieldSubPath{selector: CheckMyRolesResponse_FieldPathSelectorConditionallyGrantedRoles, subPath: subPath}
}

func (s CheckMyRolesResponsePathSelectorConditionallyGrantedRoles) WithSubValue(subPathValue CheckMyRolesResponseConditionalGrant_FieldPathValue) *CheckMyRolesResponse_FieldSubPathValue {
	return &CheckMyRolesResponse_FieldSubPathValue{CheckMyRolesResponse_FieldPath: s.WithSubPath(subPathValue), subPathValue: subPathValue}
}

func (s CheckMyRolesResponsePathSelectorConditionallyGrantedRoles) WithSubArrayOfValues(subPathArrayOfValues CheckMyRolesResponseConditionalGrant_FieldPathArrayOfValues) *CheckMyRolesResponse_FieldSubPathArrayOfValues {
	return &CheckMyRolesResponse_FieldSubPathArrayOfValues{CheckMyRolesResponse_FieldPath: s.WithSubPath(subPathArrayOfValues), subPathArrayOfValues: subPathArrayOfValues}
}

func (s CheckMyRolesResponsePathSelectorConditionallyGrantedRoles) WithSubArrayItemValue(subPathArrayItemValue CheckMyRolesResponseConditionalGrant_FieldPathArrayItemValue) *CheckMyRolesResponse_FieldSubPathArrayItemValue {
	return &CheckMyRolesResponse_FieldSubPathArrayItemValue{CheckMyRolesResponse_FieldPath: s.WithSubPath(subPathArrayItemValue), subPathItemValue: subPathArrayItemValue}
}

func (CheckMyRolesResponsePathSelectorConditionallyGrantedRoles) Role() CheckMyRolesResponsePathSelectorConditionallyGrantedRolesRole {
	return CheckMyRolesResponsePathSelectorConditionallyGrantedRolesRole{}
}

func (CheckMyRolesResponsePathSelectorConditionallyGrantedRoles) ConditionBindings() CheckMyRolesResponsePathSelectorConditionallyGrantedRolesConditionBindings {
	return CheckMyRolesResponsePathSelectorConditionallyGrantedRolesConditionBindings{}
}

type CheckMyRolesResponsePathSelectorConditionallyGrantedRolesRole struct{}

func (CheckMyRolesResponsePathSelectorConditionallyGrantedRolesRole) FieldPath() *CheckMyRolesResponse_FieldSubPath {
	return &CheckMyRolesResponse_FieldSubPath{
		selector: CheckMyRolesResponse_FieldPathSelectorConditionallyGrantedRoles,
		subPath:  NewCheckMyRolesResponseConditionalGrantFieldPathBuilder().Role().FieldPath(),
	}
}

func (s CheckMyRolesResponsePathSelectorConditionallyGrantedRolesRole) WithValue(value *role.Reference) *CheckMyRolesResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*CheckMyRolesResponse_FieldSubPathValue)
}

func (s CheckMyRolesResponsePathSelectorConditionallyGrantedRolesRole) WithArrayOfValues(values []*role.Reference) *CheckMyRolesResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CheckMyRolesResponse_FieldSubPathArrayOfValues)
}

type CheckMyRolesResponsePathSelectorConditionallyGrantedRolesConditionBindings struct{}

func (CheckMyRolesResponsePathSelectorConditionallyGrantedRolesConditionBindings) FieldPath() *CheckMyRolesResponse_FieldSubPath {
	return &CheckMyRolesResponse_FieldSubPath{
		selector: CheckMyRolesResponse_FieldPathSelectorConditionallyGrantedRoles,
		subPath:  NewCheckMyRolesResponseConditionalGrantFieldPathBuilder().ConditionBindings().FieldPath(),
	}
}

func (s CheckMyRolesResponsePathSelectorConditionallyGrantedRolesConditionBindings) WithValue(value []*condition.ConditionBinding) *CheckMyRolesResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*CheckMyRolesResponse_FieldSubPathValue)
}

func (s CheckMyRolesResponsePathSelectorConditionallyGrantedRolesConditionBindings) WithArrayOfValues(values [][]*condition.ConditionBinding) *CheckMyRolesResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CheckMyRolesResponse_FieldSubPathArrayOfValues)
}

func (s CheckMyRolesResponsePathSelectorConditionallyGrantedRolesConditionBindings) WithItemValue(value *condition.ConditionBinding) *CheckMyRolesResponse_FieldSubPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*CheckMyRolesResponse_FieldSubPathArrayItemValue)
}

func (CheckMyRolesResponsePathSelectorConditionallyGrantedRolesConditionBindings) Condition() CheckMyRolesResponsePathSelectorConditionallyGrantedRolesConditionBindingsCondition {
	return CheckMyRolesResponsePathSelectorConditionallyGrantedRolesConditionBindingsCondition{}
}

func (CheckMyRolesResponsePathSelectorConditionallyGrantedRolesConditionBindings) Parameters() CheckMyRolesResponsePathSelectorConditionallyGrantedRolesConditionBindingsParameters {
	return CheckMyRolesResponsePathSelectorConditionallyGrantedRolesConditionBindingsParameters{}
}

func (CheckMyRolesResponsePathSelectorConditionallyGrantedRolesConditionBindings) Params() CheckMyRolesResponsePathSelectorConditionallyGrantedRolesConditionBindingsParams {
	return CheckMyRolesResponsePathSelectorConditionallyGrantedRolesConditionBindingsParams{}
}

type CheckMyRolesResponsePathSelectorConditionallyGrantedRolesConditionBindingsCondition struct{}

func (CheckMyRolesResponsePathSelectorConditionallyGrantedRolesConditionBindingsCondition) FieldPath() *CheckMyRolesResponse_FieldSubPath {
	return &CheckMyRolesResponse_FieldSubPath{
		selector: CheckMyRolesResponse_FieldPathSelectorConditionallyGrantedRoles,
		subPath:  NewCheckMyRolesResponseConditionalGrantFieldPathBuilder().ConditionBindings().Condition().FieldPath(),
	}
}

func (s CheckMyRolesResponsePathSelectorConditionallyGrantedRolesConditionBindingsCondition) WithValue(value *condition.Reference) *CheckMyRolesResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*CheckMyRolesResponse_FieldSubPathValue)
}

func (s CheckMyRolesResponsePathSelectorConditionallyGrantedRolesConditionBindingsCondition) WithArrayOfValues(values []*condition.Reference) *CheckMyRolesResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CheckMyRolesResponse_FieldSubPathArrayOfValues)
}

type CheckMyRolesResponsePathSelectorConditionallyGrantedRolesConditionBindingsParameters struct{}

func (CheckMyRolesResponsePathSelectorConditionallyGrantedRolesConditionBindingsParameters) FieldPath() *CheckMyRolesResponse_FieldSubPath {
	return &CheckMyRolesResponse_FieldSubPath{
		selector: CheckMyRolesResponse_FieldPathSelectorConditionallyGrantedRoles,
		subPath:  NewCheckMyRolesResponseConditionalGrantFieldPathBuilder().ConditionBindings().Parameters().FieldPath(),
	}
}

func (s CheckMyRolesResponsePathSelectorConditionallyGrantedRolesConditionBindingsParameters) WithValue(value map[string]string) *CheckMyRolesResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*CheckMyRolesResponse_FieldSubPathValue)
}

func (s CheckMyRolesResponsePathSelectorConditionallyGrantedRolesConditionBindingsParameters) WithArrayOfValues(values []map[string]string) *CheckMyRolesResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CheckMyRolesResponse_FieldSubPathArrayOfValues)
}

func (CheckMyRolesResponsePathSelectorConditionallyGrantedRolesConditionBindingsParameters) WithKey(key string) CheckMyRolesResponseMapPathSelectorConditionallyGrantedRolesConditionBindingsParameters {
	return CheckMyRolesResponseMapPathSelectorConditionallyGrantedRolesConditionBindingsParameters{key: key}
}

type CheckMyRolesResponseMapPathSelectorConditionallyGrantedRolesConditionBindingsParameters struct {
	key string
}

func (s CheckMyRolesResponseMapPathSelectorConditionallyGrantedRolesConditionBindingsParameters) FieldPath() *CheckMyRolesResponse_FieldSubPath {
	return &CheckMyRolesResponse_FieldSubPath{
		selector: CheckMyRolesResponse_FieldPathSelectorConditionallyGrantedRoles,
		subPath:  NewCheckMyRolesResponseConditionalGrantFieldPathBuilder().ConditionBindings().Parameters().WithKey(s.key).FieldPath(),
	}
}

func (s CheckMyRolesResponseMapPathSelectorConditionallyGrantedRolesConditionBindingsParameters) WithValue(value string) *CheckMyRolesResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*CheckMyRolesResponse_FieldSubPathValue)
}

func (s CheckMyRolesResponseMapPathSelectorConditionallyGrantedRolesConditionBindingsParameters) WithArrayOfValues(values []string) *CheckMyRolesResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CheckMyRolesResponse_FieldSubPathArrayOfValues)
}

type CheckMyRolesResponsePathSelectorConditionallyGrantedRolesConditionBindingsParams struct{}

func (CheckMyRolesResponsePathSelectorConditionallyGrantedRolesConditionBindingsParams) FieldPath() *CheckMyRolesResponse_FieldSubPath {
	return &CheckMyRolesResponse_FieldSubPath{
		selector: CheckMyRolesResponse_FieldPathSelectorConditionallyGrantedRoles,
		subPath:  NewCheckMyRolesResponseConditionalGrantFieldPathBuilder().ConditionBindings().Params().FieldPath(),
	}
}

func (s CheckMyRolesResponsePathSelectorConditionallyGrantedRolesConditionBindingsParams) WithValue(value *structpb.Struct) *CheckMyRolesResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*CheckMyRolesResponse_FieldSubPathValue)
}

func (s CheckMyRolesResponsePathSelectorConditionallyGrantedRolesConditionBindingsParams) WithArrayOfValues(values []*structpb.Struct) *CheckMyRolesResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CheckMyRolesResponse_FieldSubPathArrayOfValues)
}

type CheckMyRolesResponseConditionalGrantFieldPathBuilder struct{}

func NewCheckMyRolesResponseConditionalGrantFieldPathBuilder() CheckMyRolesResponseConditionalGrantFieldPathBuilder {
	return CheckMyRolesResponseConditionalGrantFieldPathBuilder{}
}
func (CheckMyRolesResponseConditionalGrantFieldPathBuilder) Role() CheckMyRolesResponse_ConditionalGrantPathSelectorRole {
	return CheckMyRolesResponse_ConditionalGrantPathSelectorRole{}
}
func (CheckMyRolesResponseConditionalGrantFieldPathBuilder) ConditionBindings() CheckMyRolesResponse_ConditionalGrantPathSelectorConditionBindings {
	return CheckMyRolesResponse_ConditionalGrantPathSelectorConditionBindings{}
}

type CheckMyRolesResponse_ConditionalGrantPathSelectorRole struct{}

func (CheckMyRolesResponse_ConditionalGrantPathSelectorRole) FieldPath() *CheckMyRolesResponseConditionalGrant_FieldTerminalPath {
	return &CheckMyRolesResponseConditionalGrant_FieldTerminalPath{selector: CheckMyRolesResponseConditionalGrant_FieldPathSelectorRole}
}

func (s CheckMyRolesResponse_ConditionalGrantPathSelectorRole) WithValue(value *role.Reference) *CheckMyRolesResponseConditionalGrant_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*CheckMyRolesResponseConditionalGrant_FieldTerminalPathValue)
}

func (s CheckMyRolesResponse_ConditionalGrantPathSelectorRole) WithArrayOfValues(values []*role.Reference) *CheckMyRolesResponseConditionalGrant_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CheckMyRolesResponseConditionalGrant_FieldTerminalPathArrayOfValues)
}

type CheckMyRolesResponse_ConditionalGrantPathSelectorConditionBindings struct{}

func (CheckMyRolesResponse_ConditionalGrantPathSelectorConditionBindings) FieldPath() *CheckMyRolesResponseConditionalGrant_FieldTerminalPath {
	return &CheckMyRolesResponseConditionalGrant_FieldTerminalPath{selector: CheckMyRolesResponseConditionalGrant_FieldPathSelectorConditionBindings}
}

func (s CheckMyRolesResponse_ConditionalGrantPathSelectorConditionBindings) WithValue(value []*condition.ConditionBinding) *CheckMyRolesResponseConditionalGrant_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*CheckMyRolesResponseConditionalGrant_FieldTerminalPathValue)
}

func (s CheckMyRolesResponse_ConditionalGrantPathSelectorConditionBindings) WithArrayOfValues(values [][]*condition.ConditionBinding) *CheckMyRolesResponseConditionalGrant_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CheckMyRolesResponseConditionalGrant_FieldTerminalPathArrayOfValues)
}

func (s CheckMyRolesResponse_ConditionalGrantPathSelectorConditionBindings) WithItemValue(value *condition.ConditionBinding) *CheckMyRolesResponseConditionalGrant_FieldTerminalPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*CheckMyRolesResponseConditionalGrant_FieldTerminalPathArrayItemValue)
}
func (CheckMyRolesResponse_ConditionalGrantPathSelectorConditionBindings) WithSubPath(subPath condition.ConditionBinding_FieldPath) *CheckMyRolesResponseConditionalGrant_FieldSubPath {
	return &CheckMyRolesResponseConditionalGrant_FieldSubPath{selector: CheckMyRolesResponseConditionalGrant_FieldPathSelectorConditionBindings, subPath: subPath}
}

func (s CheckMyRolesResponse_ConditionalGrantPathSelectorConditionBindings) WithSubValue(subPathValue condition.ConditionBinding_FieldPathValue) *CheckMyRolesResponseConditionalGrant_FieldSubPathValue {
	return &CheckMyRolesResponseConditionalGrant_FieldSubPathValue{CheckMyRolesResponseConditionalGrant_FieldPath: s.WithSubPath(subPathValue), subPathValue: subPathValue}
}

func (s CheckMyRolesResponse_ConditionalGrantPathSelectorConditionBindings) WithSubArrayOfValues(subPathArrayOfValues condition.ConditionBinding_FieldPathArrayOfValues) *CheckMyRolesResponseConditionalGrant_FieldSubPathArrayOfValues {
	return &CheckMyRolesResponseConditionalGrant_FieldSubPathArrayOfValues{CheckMyRolesResponseConditionalGrant_FieldPath: s.WithSubPath(subPathArrayOfValues), subPathArrayOfValues: subPathArrayOfValues}
}

func (s CheckMyRolesResponse_ConditionalGrantPathSelectorConditionBindings) WithSubArrayItemValue(subPathArrayItemValue condition.ConditionBinding_FieldPathArrayItemValue) *CheckMyRolesResponseConditionalGrant_FieldSubPathArrayItemValue {
	return &CheckMyRolesResponseConditionalGrant_FieldSubPathArrayItemValue{CheckMyRolesResponseConditionalGrant_FieldPath: s.WithSubPath(subPathArrayItemValue), subPathItemValue: subPathArrayItemValue}
}

func (CheckMyRolesResponse_ConditionalGrantPathSelectorConditionBindings) Condition() CheckMyRolesResponse_ConditionalGrantPathSelectorConditionBindingsCondition {
	return CheckMyRolesResponse_ConditionalGrantPathSelectorConditionBindingsCondition{}
}

func (CheckMyRolesResponse_ConditionalGrantPathSelectorConditionBindings) Parameters() CheckMyRolesResponse_ConditionalGrantPathSelectorConditionBindingsParameters {
	return CheckMyRolesResponse_ConditionalGrantPathSelectorConditionBindingsParameters{}
}

func (CheckMyRolesResponse_ConditionalGrantPathSelectorConditionBindings) Params() CheckMyRolesResponse_ConditionalGrantPathSelectorConditionBindingsParams {
	return CheckMyRolesResponse_ConditionalGrantPathSelectorConditionBindingsParams{}
}

type CheckMyRolesResponse_ConditionalGrantPathSelectorConditionBindingsCondition struct{}

func (CheckMyRolesResponse_ConditionalGrantPathSelectorConditionBindingsCondition) FieldPath() *CheckMyRolesResponseConditionalGrant_FieldSubPath {
	return &CheckMyRolesResponseConditionalGrant_FieldSubPath{
		selector: CheckMyRolesResponseConditionalGrant_FieldPathSelectorConditionBindings,
		subPath:  condition.NewConditionBindingFieldPathBuilder().Condition().FieldPath(),
	}
}

func (s CheckMyRolesResponse_ConditionalGrantPathSelectorConditionBindingsCondition) WithValue(value *condition.Reference) *CheckMyRolesResponseConditionalGrant_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*CheckMyRolesResponseConditionalGrant_FieldSubPathValue)
}

func (s CheckMyRolesResponse_ConditionalGrantPathSelectorConditionBindingsCondition) WithArrayOfValues(values []*condition.Reference) *CheckMyRolesResponseConditionalGrant_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CheckMyRolesResponseConditionalGrant_FieldSubPathArrayOfValues)
}

type CheckMyRolesResponse_ConditionalGrantPathSelectorConditionBindingsParameters struct{}

func (CheckMyRolesResponse_ConditionalGrantPathSelectorConditionBindingsParameters) FieldPath() *CheckMyRolesResponseConditionalGrant_FieldSubPath {
	return &CheckMyRolesResponseConditionalGrant_FieldSubPath{
		selector: CheckMyRolesResponseConditionalGrant_FieldPathSelectorConditionBindings,
		subPath:  condition.NewConditionBindingFieldPathBuilder().Parameters().FieldPath(),
	}
}

func (s CheckMyRolesResponse_ConditionalGrantPathSelectorConditionBindingsParameters) WithValue(value map[string]string) *CheckMyRolesResponseConditionalGrant_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*CheckMyRolesResponseConditionalGrant_FieldSubPathValue)
}

func (s CheckMyRolesResponse_ConditionalGrantPathSelectorConditionBindingsParameters) WithArrayOfValues(values []map[string]string) *CheckMyRolesResponseConditionalGrant_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CheckMyRolesResponseConditionalGrant_FieldSubPathArrayOfValues)
}

func (CheckMyRolesResponse_ConditionalGrantPathSelectorConditionBindingsParameters) WithKey(key string) CheckMyRolesResponse_ConditionalGrantMapPathSelectorConditionBindingsParameters {
	return CheckMyRolesResponse_ConditionalGrantMapPathSelectorConditionBindingsParameters{key: key}
}

type CheckMyRolesResponse_ConditionalGrantMapPathSelectorConditionBindingsParameters struct {
	key string
}

func (s CheckMyRolesResponse_ConditionalGrantMapPathSelectorConditionBindingsParameters) FieldPath() *CheckMyRolesResponseConditionalGrant_FieldSubPath {
	return &CheckMyRolesResponseConditionalGrant_FieldSubPath{
		selector: CheckMyRolesResponseConditionalGrant_FieldPathSelectorConditionBindings,
		subPath:  condition.NewConditionBindingFieldPathBuilder().Parameters().WithKey(s.key).FieldPath(),
	}
}

func (s CheckMyRolesResponse_ConditionalGrantMapPathSelectorConditionBindingsParameters) WithValue(value string) *CheckMyRolesResponseConditionalGrant_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*CheckMyRolesResponseConditionalGrant_FieldSubPathValue)
}

func (s CheckMyRolesResponse_ConditionalGrantMapPathSelectorConditionBindingsParameters) WithArrayOfValues(values []string) *CheckMyRolesResponseConditionalGrant_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CheckMyRolesResponseConditionalGrant_FieldSubPathArrayOfValues)
}

type CheckMyRolesResponse_ConditionalGrantPathSelectorConditionBindingsParams struct{}

func (CheckMyRolesResponse_ConditionalGrantPathSelectorConditionBindingsParams) FieldPath() *CheckMyRolesResponseConditionalGrant_FieldSubPath {
	return &CheckMyRolesResponseConditionalGrant_FieldSubPath{
		selector: CheckMyRolesResponseConditionalGrant_FieldPathSelectorConditionBindings,
		subPath:  condition.NewConditionBindingFieldPathBuilder().Params().FieldPath(),
	}
}

func (s CheckMyRolesResponse_ConditionalGrantPathSelectorConditionBindingsParams) WithValue(value *structpb.Struct) *CheckMyRolesResponseConditionalGrant_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*CheckMyRolesResponseConditionalGrant_FieldSubPathValue)
}

func (s CheckMyRolesResponse_ConditionalGrantPathSelectorConditionBindingsParams) WithArrayOfValues(values []*structpb.Struct) *CheckMyRolesResponseConditionalGrant_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CheckMyRolesResponseConditionalGrant_FieldSubPathArrayOfValues)
}
