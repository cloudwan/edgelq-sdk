// Code generated by protoc-gen-goten-client
// API: AttestationDomainService
// DO NOT EDIT!!!

package attestation_domain_client

import (
	"google.golang.org/protobuf/proto"

	gotenclient "github.com/cloudwan/goten-sdk/runtime/client"
	gotenresource "github.com/cloudwan/goten-sdk/runtime/resource"
)

// proto imports
import (
	attestation_domain "github.com/cloudwan/edgelq-sdk/iam/resources/v1alpha2/attestation_domain"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
)

// Reference imports to suppress errors if they are not otherwise used.
var (
	_ = new(proto.Message)
	_ = new(gotenclient.MethodDescriptor)
	_ = gotenresource.WildcardId
)

// make sure we're using proto imports
var (
	_ = &attestation_domain.AttestationDomain{}
	_ = &emptypb.Empty{}
)

var (
	descriptorsInitialized               bool
	attestationDomainServiceDescriptor   *AttestationDomainServiceDescriptor
	getAttestationDomainDescriptor       *GetAttestationDomainDescriptor
	batchGetAttestationDomainsDescriptor *BatchGetAttestationDomainsDescriptor
	listAttestationDomainsDescriptor     *ListAttestationDomainsDescriptor
	watchAttestationDomainDescriptor     *WatchAttestationDomainDescriptor
	watchAttestationDomainsDescriptor    *WatchAttestationDomainsDescriptor
	createAttestationDomainDescriptor    *CreateAttestationDomainDescriptor
	updateAttestationDomainDescriptor    *UpdateAttestationDomainDescriptor
	deleteAttestationDomainDescriptor    *DeleteAttestationDomainDescriptor
)

type GetAttestationDomainDescriptor struct{}

type GetAttestationDomainDescriptorClientMsgHandle struct{}

type GetAttestationDomainDescriptorServerMsgHandle struct{}

func (d *GetAttestationDomainDescriptor) NewEmptyClientMsg() proto.Message {
	return &GetAttestationDomainRequest{}
}

func (d *GetAttestationDomainDescriptor) NewEmptyServerMsg() proto.Message {
	return &attestation_domain.AttestationDomain{}
}

func (d *GetAttestationDomainDescriptor) IsUnary() bool {
	return true
}

func (d *GetAttestationDomainDescriptor) IsClientStream() bool {
	return false
}

func (d *GetAttestationDomainDescriptor) IsServerStream() bool {
	return false
}

func (d *GetAttestationDomainDescriptor) IsCollection() bool {
	return false
}

func (d *GetAttestationDomainDescriptor) IsPlural() bool {
	return false
}

func (d *GetAttestationDomainDescriptor) HasResource() bool {
	return true
}

func (d *GetAttestationDomainDescriptor) RequestHasResourceBody() bool {
	return false
}

func (d *GetAttestationDomainDescriptor) GetVerb() string {
	return "get"
}

func (d *GetAttestationDomainDescriptor) GetMethodName() string {
	return "GetAttestationDomain"
}

func (d *GetAttestationDomainDescriptor) GetFullMethodName() string {
	return "/ntt.iam.v1alpha2.AttestationDomainService/GetAttestationDomain"
}

func (d *GetAttestationDomainDescriptor) GetProtoPkgName() string {
	return "ntt.iam.v1alpha2"
}

func (d *GetAttestationDomainDescriptor) GetApiName() string {
	return "AttestationDomainService"
}

func (d *GetAttestationDomainDescriptor) GetServiceDomain() string {
	return "iam.edgelq.com"
}

func (d *GetAttestationDomainDescriptor) GetServiceVersion() string {
	return "v1alpha2"
}

func (d *GetAttestationDomainDescriptor) GetApiDescriptor() gotenclient.ApiDescriptor {
	return attestationDomainServiceDescriptor
}

func (d *GetAttestationDomainDescriptor) GetResourceDescriptor() gotenresource.Descriptor {
	return attestation_domain.GetDescriptor()
}

func (d *GetAttestationDomainDescriptor) GetClientMsgReflectHandle() gotenclient.MethodMsgHandle {
	return &GetAttestationDomainDescriptorClientMsgHandle{}
}

func (d *GetAttestationDomainDescriptor) GetServerMsgReflectHandle() gotenclient.MethodMsgHandle {
	return &GetAttestationDomainDescriptorServerMsgHandle{}
}

func (h *GetAttestationDomainDescriptorClientMsgHandle) ExtractResourceName(msg proto.Message) gotenresource.Name {
	typedMsg := msg.(*GetAttestationDomainRequest)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractResourceName(*GetAttestationDomainRequest) *attestation_domain.Name
	})
	if ok {
		return override.OverrideExtractResourceName(typedMsg)
	}
	{
		if name := typedMsg.GetName(); name != nil {
			return name
		}
	}
	return (*attestation_domain.Name)(nil)
}

func (h *GetAttestationDomainDescriptorClientMsgHandle) ExtractResourceNames(msg proto.Message) gotenresource.NameList {
	typedMsg := msg.(*GetAttestationDomainRequest)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractResourceNames(*GetAttestationDomainRequest) []*attestation_domain.Name
	})
	if ok {
		return attestation_domain.AttestationDomainNameList(override.OverrideExtractResourceNames(typedMsg))
	}
	return nil
}

func (h *GetAttestationDomainDescriptorClientMsgHandle) ExtractCollectionName(msg proto.Message) gotenresource.Name {
	typedMsg := msg.(*GetAttestationDomainRequest)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractCollectionName(*GetAttestationDomainRequest) *attestation_domain.ParentName
	})
	if ok {
		return override.OverrideExtractCollectionName(typedMsg)
	}
	return nil
}

func (h *GetAttestationDomainDescriptorClientMsgHandle) ExtractResourceBody(msg proto.Message) gotenresource.Resource {
	typedMsg := msg.(*GetAttestationDomainRequest)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractResourceBody(*GetAttestationDomainRequest) *attestation_domain.AttestationDomain
	})
	if ok {
		return override.OverrideExtractResourceBody(typedMsg)
	}
	return nil
}

func (h *GetAttestationDomainDescriptorClientMsgHandle) ExtractResourceBodies(msg proto.Message) gotenresource.ResourceList {
	typedMsg := msg.(*GetAttestationDomainRequest)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractResourceBodies(*GetAttestationDomainRequest) []*attestation_domain.AttestationDomain
	})
	if ok {
		return attestation_domain.AttestationDomainList(override.OverrideExtractResourceBodies(typedMsg))
	}
	return nil
}

func (h *GetAttestationDomainDescriptorServerMsgHandle) ExtractResourceName(msg proto.Message) gotenresource.Name {
	typedMsg := msg.(*attestation_domain.AttestationDomain)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractResourceName(*attestation_domain.AttestationDomain) *attestation_domain.Name
	})
	if ok {
		return override.OverrideExtractResourceName(typedMsg)
	}
	{
		if name := typedMsg.GetName(); name != nil {
			return name
		}
	}
	return (*attestation_domain.Name)(nil)
}

func (h *GetAttestationDomainDescriptorServerMsgHandle) ExtractResourceNames(msg proto.Message) gotenresource.NameList {
	typedMsg := msg.(*attestation_domain.AttestationDomain)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractResourceNames(*attestation_domain.AttestationDomain) []*attestation_domain.Name
	})
	if ok {
		return attestation_domain.AttestationDomainNameList(override.OverrideExtractResourceNames(typedMsg))
	}
	return nil
}

func (h *GetAttestationDomainDescriptorServerMsgHandle) ExtractCollectionName(msg proto.Message) gotenresource.Name {
	typedMsg := msg.(*attestation_domain.AttestationDomain)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractCollectionName(*attestation_domain.AttestationDomain) *attestation_domain.ParentName
	})
	if ok {
		return override.OverrideExtractCollectionName(typedMsg)
	}
	return nil
}

func (h *GetAttestationDomainDescriptorServerMsgHandle) ExtractResourceBody(msg proto.Message) gotenresource.Resource {
	return msg.(*attestation_domain.AttestationDomain)
}

func (h *GetAttestationDomainDescriptorServerMsgHandle) ExtractResourceBodies(msg proto.Message) gotenresource.ResourceList {
	typedMsg := msg.(*attestation_domain.AttestationDomain)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractResourceBodies(*attestation_domain.AttestationDomain) []*attestation_domain.AttestationDomain
	})
	if ok {
		return attestation_domain.AttestationDomainList(override.OverrideExtractResourceBodies(typedMsg))
	}
	return nil
}

func GetGetAttestationDomainDescriptor() *GetAttestationDomainDescriptor {
	return getAttestationDomainDescriptor
}

type BatchGetAttestationDomainsDescriptor struct{}

type BatchGetAttestationDomainsDescriptorClientMsgHandle struct{}

type BatchGetAttestationDomainsDescriptorServerMsgHandle struct{}

func (d *BatchGetAttestationDomainsDescriptor) NewEmptyClientMsg() proto.Message {
	return &BatchGetAttestationDomainsRequest{}
}

func (d *BatchGetAttestationDomainsDescriptor) NewEmptyServerMsg() proto.Message {
	return &BatchGetAttestationDomainsResponse{}
}

func (d *BatchGetAttestationDomainsDescriptor) IsUnary() bool {
	return true
}

func (d *BatchGetAttestationDomainsDescriptor) IsClientStream() bool {
	return false
}

func (d *BatchGetAttestationDomainsDescriptor) IsServerStream() bool {
	return false
}

func (d *BatchGetAttestationDomainsDescriptor) IsCollection() bool {
	return false
}

func (d *BatchGetAttestationDomainsDescriptor) IsPlural() bool {
	return true
}

func (d *BatchGetAttestationDomainsDescriptor) HasResource() bool {
	return true
}

func (d *BatchGetAttestationDomainsDescriptor) RequestHasResourceBody() bool {
	return false
}

func (d *BatchGetAttestationDomainsDescriptor) GetVerb() string {
	return "batchGet"
}

func (d *BatchGetAttestationDomainsDescriptor) GetMethodName() string {
	return "BatchGetAttestationDomains"
}

func (d *BatchGetAttestationDomainsDescriptor) GetFullMethodName() string {
	return "/ntt.iam.v1alpha2.AttestationDomainService/BatchGetAttestationDomains"
}

func (d *BatchGetAttestationDomainsDescriptor) GetProtoPkgName() string {
	return "ntt.iam.v1alpha2"
}

func (d *BatchGetAttestationDomainsDescriptor) GetApiName() string {
	return "AttestationDomainService"
}

func (d *BatchGetAttestationDomainsDescriptor) GetServiceDomain() string {
	return "iam.edgelq.com"
}

func (d *BatchGetAttestationDomainsDescriptor) GetServiceVersion() string {
	return "v1alpha2"
}

func (d *BatchGetAttestationDomainsDescriptor) GetApiDescriptor() gotenclient.ApiDescriptor {
	return attestationDomainServiceDescriptor
}

func (d *BatchGetAttestationDomainsDescriptor) GetResourceDescriptor() gotenresource.Descriptor {
	return attestation_domain.GetDescriptor()
}

func (d *BatchGetAttestationDomainsDescriptor) GetClientMsgReflectHandle() gotenclient.MethodMsgHandle {
	return &BatchGetAttestationDomainsDescriptorClientMsgHandle{}
}

func (d *BatchGetAttestationDomainsDescriptor) GetServerMsgReflectHandle() gotenclient.MethodMsgHandle {
	return &BatchGetAttestationDomainsDescriptorServerMsgHandle{}
}

func (h *BatchGetAttestationDomainsDescriptorClientMsgHandle) ExtractResourceName(msg proto.Message) gotenresource.Name {
	typedMsg := msg.(*BatchGetAttestationDomainsRequest)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractResourceName(*BatchGetAttestationDomainsRequest) *attestation_domain.Name
	})
	if ok {
		return override.OverrideExtractResourceName(typedMsg)
	}
	return nil
}

func (h *BatchGetAttestationDomainsDescriptorClientMsgHandle) ExtractResourceNames(msg proto.Message) gotenresource.NameList {
	typedMsg := msg.(*BatchGetAttestationDomainsRequest)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractResourceNames(*BatchGetAttestationDomainsRequest) []*attestation_domain.Name
	})
	if ok {
		return attestation_domain.AttestationDomainNameList(override.OverrideExtractResourceNames(typedMsg))
	}
	{
		if names := typedMsg.GetNames(); len(names) > 0 {
			return attestation_domain.AttestationDomainNameList(names)
		}
	}
	return (attestation_domain.AttestationDomainNameList)(nil)
}

func (h *BatchGetAttestationDomainsDescriptorClientMsgHandle) ExtractCollectionName(msg proto.Message) gotenresource.Name {
	typedMsg := msg.(*BatchGetAttestationDomainsRequest)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractCollectionName(*BatchGetAttestationDomainsRequest) *attestation_domain.ParentName
	})
	if ok {
		return override.OverrideExtractCollectionName(typedMsg)
	}
	return nil
}

func (h *BatchGetAttestationDomainsDescriptorClientMsgHandle) ExtractResourceBody(msg proto.Message) gotenresource.Resource {
	typedMsg := msg.(*BatchGetAttestationDomainsRequest)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractResourceBody(*BatchGetAttestationDomainsRequest) *attestation_domain.AttestationDomain
	})
	if ok {
		return override.OverrideExtractResourceBody(typedMsg)
	}
	return nil
}

func (h *BatchGetAttestationDomainsDescriptorClientMsgHandle) ExtractResourceBodies(msg proto.Message) gotenresource.ResourceList {
	typedMsg := msg.(*BatchGetAttestationDomainsRequest)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractResourceBodies(*BatchGetAttestationDomainsRequest) []*attestation_domain.AttestationDomain
	})
	if ok {
		return attestation_domain.AttestationDomainList(override.OverrideExtractResourceBodies(typedMsg))
	}
	return nil
}

func (h *BatchGetAttestationDomainsDescriptorServerMsgHandle) ExtractResourceName(msg proto.Message) gotenresource.Name {
	typedMsg := msg.(*BatchGetAttestationDomainsResponse)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractResourceName(*BatchGetAttestationDomainsResponse) *attestation_domain.Name
	})
	if ok {
		return override.OverrideExtractResourceName(typedMsg)
	}
	return nil
}

func (h *BatchGetAttestationDomainsDescriptorServerMsgHandle) ExtractResourceNames(msg proto.Message) gotenresource.NameList {
	typedMsg := msg.(*BatchGetAttestationDomainsResponse)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractResourceNames(*BatchGetAttestationDomainsResponse) []*attestation_domain.Name
	})
	if ok {
		return attestation_domain.AttestationDomainNameList(override.OverrideExtractResourceNames(typedMsg))
	}
	{
		if resources := typedMsg.GetAttestationDomains(); len(resources) > 0 {
			list := make(attestation_domain.AttestationDomainNameList, 0, len(resources))
			for _, res := range resources {
				list = append(list, res.GetName())
			}
			return list
		}
	}
	return (attestation_domain.AttestationDomainNameList)(nil)
}

func (h *BatchGetAttestationDomainsDescriptorServerMsgHandle) ExtractCollectionName(msg proto.Message) gotenresource.Name {
	typedMsg := msg.(*BatchGetAttestationDomainsResponse)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractCollectionName(*BatchGetAttestationDomainsResponse) *attestation_domain.ParentName
	})
	if ok {
		return override.OverrideExtractCollectionName(typedMsg)
	}
	return nil
}

func (h *BatchGetAttestationDomainsDescriptorServerMsgHandle) ExtractResourceBody(msg proto.Message) gotenresource.Resource {
	typedMsg := msg.(*BatchGetAttestationDomainsResponse)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractResourceBody(*BatchGetAttestationDomainsResponse) *attestation_domain.AttestationDomain
	})
	if ok {
		return override.OverrideExtractResourceBody(typedMsg)
	}
	return nil
}

func (h *BatchGetAttestationDomainsDescriptorServerMsgHandle) ExtractResourceBodies(msg proto.Message) gotenresource.ResourceList {
	typedMsg := msg.(*BatchGetAttestationDomainsResponse)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractResourceBodies(*BatchGetAttestationDomainsResponse) []*attestation_domain.AttestationDomain
	})
	if ok {
		return attestation_domain.AttestationDomainList(override.OverrideExtractResourceBodies(typedMsg))
	}
	{
		if resources := typedMsg.GetAttestationDomains(); len(resources) > 0 {
			return attestation_domain.AttestationDomainList(resources)
		}
	}
	return (attestation_domain.AttestationDomainList)(nil)
}

func GetBatchGetAttestationDomainsDescriptor() *BatchGetAttestationDomainsDescriptor {
	return batchGetAttestationDomainsDescriptor
}

type ListAttestationDomainsDescriptor struct{}

type ListAttestationDomainsDescriptorClientMsgHandle struct{}

type ListAttestationDomainsDescriptorServerMsgHandle struct{}

func (d *ListAttestationDomainsDescriptor) NewEmptyClientMsg() proto.Message {
	return &ListAttestationDomainsRequest{}
}

func (d *ListAttestationDomainsDescriptor) NewEmptyServerMsg() proto.Message {
	return &ListAttestationDomainsResponse{}
}

func (d *ListAttestationDomainsDescriptor) IsUnary() bool {
	return true
}

func (d *ListAttestationDomainsDescriptor) IsClientStream() bool {
	return false
}

func (d *ListAttestationDomainsDescriptor) IsServerStream() bool {
	return false
}

func (d *ListAttestationDomainsDescriptor) IsCollection() bool {
	return true
}

func (d *ListAttestationDomainsDescriptor) IsPlural() bool {
	return true
}

func (d *ListAttestationDomainsDescriptor) HasResource() bool {
	return true
}

func (d *ListAttestationDomainsDescriptor) RequestHasResourceBody() bool {
	return false
}

func (d *ListAttestationDomainsDescriptor) GetVerb() string {
	return "list"
}

func (d *ListAttestationDomainsDescriptor) GetMethodName() string {
	return "ListAttestationDomains"
}

func (d *ListAttestationDomainsDescriptor) GetFullMethodName() string {
	return "/ntt.iam.v1alpha2.AttestationDomainService/ListAttestationDomains"
}

func (d *ListAttestationDomainsDescriptor) GetProtoPkgName() string {
	return "ntt.iam.v1alpha2"
}

func (d *ListAttestationDomainsDescriptor) GetApiName() string {
	return "AttestationDomainService"
}

func (d *ListAttestationDomainsDescriptor) GetServiceDomain() string {
	return "iam.edgelq.com"
}

func (d *ListAttestationDomainsDescriptor) GetServiceVersion() string {
	return "v1alpha2"
}

func (d *ListAttestationDomainsDescriptor) GetApiDescriptor() gotenclient.ApiDescriptor {
	return attestationDomainServiceDescriptor
}

func (d *ListAttestationDomainsDescriptor) GetResourceDescriptor() gotenresource.Descriptor {
	return attestation_domain.GetDescriptor()
}

func (d *ListAttestationDomainsDescriptor) GetClientMsgReflectHandle() gotenclient.MethodMsgHandle {
	return &ListAttestationDomainsDescriptorClientMsgHandle{}
}

func (d *ListAttestationDomainsDescriptor) GetServerMsgReflectHandle() gotenclient.MethodMsgHandle {
	return &ListAttestationDomainsDescriptorServerMsgHandle{}
}

func (h *ListAttestationDomainsDescriptorClientMsgHandle) ExtractResourceName(msg proto.Message) gotenresource.Name {
	typedMsg := msg.(*ListAttestationDomainsRequest)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractResourceName(*ListAttestationDomainsRequest) *attestation_domain.Name
	})
	if ok {
		return override.OverrideExtractResourceName(typedMsg)
	}
	return nil
}

func (h *ListAttestationDomainsDescriptorClientMsgHandle) ExtractResourceNames(msg proto.Message) gotenresource.NameList {
	typedMsg := msg.(*ListAttestationDomainsRequest)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractResourceNames(*ListAttestationDomainsRequest) []*attestation_domain.Name
	})
	if ok {
		return attestation_domain.AttestationDomainNameList(override.OverrideExtractResourceNames(typedMsg))
	}
	return nil
}

func (h *ListAttestationDomainsDescriptorClientMsgHandle) ExtractCollectionName(msg proto.Message) gotenresource.Name {
	typedMsg := msg.(*ListAttestationDomainsRequest)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractCollectionName(*ListAttestationDomainsRequest) *attestation_domain.ParentName
	})
	if ok {
		return override.OverrideExtractCollectionName(typedMsg)
	}
	{
		if parentName := typedMsg.GetParent(); parentName != nil {
			return parentName
		}
	}
	return (*attestation_domain.ParentName)(nil)
}

func (h *ListAttestationDomainsDescriptorClientMsgHandle) ExtractResourceBody(msg proto.Message) gotenresource.Resource {
	typedMsg := msg.(*ListAttestationDomainsRequest)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractResourceBody(*ListAttestationDomainsRequest) *attestation_domain.AttestationDomain
	})
	if ok {
		return override.OverrideExtractResourceBody(typedMsg)
	}
	return nil
}

func (h *ListAttestationDomainsDescriptorClientMsgHandle) ExtractResourceBodies(msg proto.Message) gotenresource.ResourceList {
	typedMsg := msg.(*ListAttestationDomainsRequest)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractResourceBodies(*ListAttestationDomainsRequest) []*attestation_domain.AttestationDomain
	})
	if ok {
		return attestation_domain.AttestationDomainList(override.OverrideExtractResourceBodies(typedMsg))
	}
	return nil
}

func (h *ListAttestationDomainsDescriptorServerMsgHandle) ExtractResourceName(msg proto.Message) gotenresource.Name {
	typedMsg := msg.(*ListAttestationDomainsResponse)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractResourceName(*ListAttestationDomainsResponse) *attestation_domain.Name
	})
	if ok {
		return override.OverrideExtractResourceName(typedMsg)
	}
	return nil
}

func (h *ListAttestationDomainsDescriptorServerMsgHandle) ExtractResourceNames(msg proto.Message) gotenresource.NameList {
	typedMsg := msg.(*ListAttestationDomainsResponse)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractResourceNames(*ListAttestationDomainsResponse) []*attestation_domain.Name
	})
	if ok {
		return attestation_domain.AttestationDomainNameList(override.OverrideExtractResourceNames(typedMsg))
	}
	{
		if resources := typedMsg.GetAttestationDomains(); len(resources) > 0 {
			list := make(attestation_domain.AttestationDomainNameList, 0, len(resources))
			for _, res := range resources {
				list = append(list, res.GetName())
			}
			return list
		}
	}
	return (attestation_domain.AttestationDomainNameList)(nil)
}

func (h *ListAttestationDomainsDescriptorServerMsgHandle) ExtractCollectionName(msg proto.Message) gotenresource.Name {
	typedMsg := msg.(*ListAttestationDomainsResponse)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractCollectionName(*ListAttestationDomainsResponse) *attestation_domain.ParentName
	})
	if ok {
		return override.OverrideExtractCollectionName(typedMsg)
	}
	return nil
}

func (h *ListAttestationDomainsDescriptorServerMsgHandle) ExtractResourceBody(msg proto.Message) gotenresource.Resource {
	typedMsg := msg.(*ListAttestationDomainsResponse)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractResourceBody(*ListAttestationDomainsResponse) *attestation_domain.AttestationDomain
	})
	if ok {
		return override.OverrideExtractResourceBody(typedMsg)
	}
	return nil
}

func (h *ListAttestationDomainsDescriptorServerMsgHandle) ExtractResourceBodies(msg proto.Message) gotenresource.ResourceList {
	typedMsg := msg.(*ListAttestationDomainsResponse)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractResourceBodies(*ListAttestationDomainsResponse) []*attestation_domain.AttestationDomain
	})
	if ok {
		return attestation_domain.AttestationDomainList(override.OverrideExtractResourceBodies(typedMsg))
	}
	{
		if resources := typedMsg.GetAttestationDomains(); len(resources) > 0 {
			return attestation_domain.AttestationDomainList(resources)
		}
	}
	return (attestation_domain.AttestationDomainList)(nil)
}

func GetListAttestationDomainsDescriptor() *ListAttestationDomainsDescriptor {
	return listAttestationDomainsDescriptor
}

type WatchAttestationDomainDescriptor struct{}

type WatchAttestationDomainDescriptorClientMsgHandle struct{}

type WatchAttestationDomainDescriptorServerMsgHandle struct{}

func (d *WatchAttestationDomainDescriptor) NewEmptyClientMsg() proto.Message {
	return &WatchAttestationDomainRequest{}
}

func (d *WatchAttestationDomainDescriptor) NewEmptyServerMsg() proto.Message {
	return &WatchAttestationDomainResponse{}
}

func (d *WatchAttestationDomainDescriptor) IsUnary() bool {
	return false
}

func (d *WatchAttestationDomainDescriptor) IsClientStream() bool {
	return false
}

func (d *WatchAttestationDomainDescriptor) IsServerStream() bool {
	return true
}

func (d *WatchAttestationDomainDescriptor) IsCollection() bool {
	return false
}

func (d *WatchAttestationDomainDescriptor) IsPlural() bool {
	return false
}

func (d *WatchAttestationDomainDescriptor) HasResource() bool {
	return true
}

func (d *WatchAttestationDomainDescriptor) RequestHasResourceBody() bool {
	return false
}

func (d *WatchAttestationDomainDescriptor) GetVerb() string {
	return "watch"
}

func (d *WatchAttestationDomainDescriptor) GetMethodName() string {
	return "WatchAttestationDomain"
}

func (d *WatchAttestationDomainDescriptor) GetFullMethodName() string {
	return "/ntt.iam.v1alpha2.AttestationDomainService/WatchAttestationDomain"
}

func (d *WatchAttestationDomainDescriptor) GetProtoPkgName() string {
	return "ntt.iam.v1alpha2"
}

func (d *WatchAttestationDomainDescriptor) GetApiName() string {
	return "AttestationDomainService"
}

func (d *WatchAttestationDomainDescriptor) GetServiceDomain() string {
	return "iam.edgelq.com"
}

func (d *WatchAttestationDomainDescriptor) GetServiceVersion() string {
	return "v1alpha2"
}

func (d *WatchAttestationDomainDescriptor) GetApiDescriptor() gotenclient.ApiDescriptor {
	return attestationDomainServiceDescriptor
}

func (d *WatchAttestationDomainDescriptor) GetResourceDescriptor() gotenresource.Descriptor {
	return attestation_domain.GetDescriptor()
}

func (d *WatchAttestationDomainDescriptor) GetClientMsgReflectHandle() gotenclient.MethodMsgHandle {
	return &WatchAttestationDomainDescriptorClientMsgHandle{}
}

func (d *WatchAttestationDomainDescriptor) GetServerMsgReflectHandle() gotenclient.MethodMsgHandle {
	return &WatchAttestationDomainDescriptorServerMsgHandle{}
}

func (h *WatchAttestationDomainDescriptorClientMsgHandle) ExtractResourceName(msg proto.Message) gotenresource.Name {
	typedMsg := msg.(*WatchAttestationDomainRequest)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractResourceName(*WatchAttestationDomainRequest) *attestation_domain.Name
	})
	if ok {
		return override.OverrideExtractResourceName(typedMsg)
	}
	{
		if name := typedMsg.GetName(); name != nil {
			return name
		}
	}
	return (*attestation_domain.Name)(nil)
}

func (h *WatchAttestationDomainDescriptorClientMsgHandle) ExtractResourceNames(msg proto.Message) gotenresource.NameList {
	typedMsg := msg.(*WatchAttestationDomainRequest)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractResourceNames(*WatchAttestationDomainRequest) []*attestation_domain.Name
	})
	if ok {
		return attestation_domain.AttestationDomainNameList(override.OverrideExtractResourceNames(typedMsg))
	}
	return nil
}

func (h *WatchAttestationDomainDescriptorClientMsgHandle) ExtractCollectionName(msg proto.Message) gotenresource.Name {
	typedMsg := msg.(*WatchAttestationDomainRequest)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractCollectionName(*WatchAttestationDomainRequest) *attestation_domain.ParentName
	})
	if ok {
		return override.OverrideExtractCollectionName(typedMsg)
	}
	return nil
}

func (h *WatchAttestationDomainDescriptorClientMsgHandle) ExtractResourceBody(msg proto.Message) gotenresource.Resource {
	typedMsg := msg.(*WatchAttestationDomainRequest)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractResourceBody(*WatchAttestationDomainRequest) *attestation_domain.AttestationDomain
	})
	if ok {
		return override.OverrideExtractResourceBody(typedMsg)
	}
	return nil
}

func (h *WatchAttestationDomainDescriptorClientMsgHandle) ExtractResourceBodies(msg proto.Message) gotenresource.ResourceList {
	typedMsg := msg.(*WatchAttestationDomainRequest)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractResourceBodies(*WatchAttestationDomainRequest) []*attestation_domain.AttestationDomain
	})
	if ok {
		return attestation_domain.AttestationDomainList(override.OverrideExtractResourceBodies(typedMsg))
	}
	return nil
}

func (h *WatchAttestationDomainDescriptorServerMsgHandle) ExtractResourceName(msg proto.Message) gotenresource.Name {
	typedMsg := msg.(*WatchAttestationDomainResponse)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractResourceName(*WatchAttestationDomainResponse) *attestation_domain.Name
	})
	if ok {
		return override.OverrideExtractResourceName(typedMsg)
	}
	{
		if resChange := typedMsg.GetChange(); resChange != nil {
			switch tResChange := resChange.ChangeType.(type) {
			case *attestation_domain.AttestationDomainChange_Added_:
				return tResChange.Added.GetAttestationDomain().GetName()
			case *attestation_domain.AttestationDomainChange_Modified_:
				return tResChange.Modified.GetName()
			case *attestation_domain.AttestationDomainChange_Removed_:
				return tResChange.Removed.GetName()
			case *attestation_domain.AttestationDomainChange_Current_:
				return tResChange.Current.GetAttestationDomain().GetName()
			}
		}
	}
	return (*attestation_domain.Name)(nil)
}

func (h *WatchAttestationDomainDescriptorServerMsgHandle) ExtractResourceNames(msg proto.Message) gotenresource.NameList {
	typedMsg := msg.(*WatchAttestationDomainResponse)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractResourceNames(*WatchAttestationDomainResponse) []*attestation_domain.Name
	})
	if ok {
		return attestation_domain.AttestationDomainNameList(override.OverrideExtractResourceNames(typedMsg))
	}
	return nil
}

func (h *WatchAttestationDomainDescriptorServerMsgHandle) ExtractCollectionName(msg proto.Message) gotenresource.Name {
	typedMsg := msg.(*WatchAttestationDomainResponse)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractCollectionName(*WatchAttestationDomainResponse) *attestation_domain.ParentName
	})
	if ok {
		return override.OverrideExtractCollectionName(typedMsg)
	}
	return nil
}

func (h *WatchAttestationDomainDescriptorServerMsgHandle) ExtractResourceBody(msg proto.Message) gotenresource.Resource {
	typedMsg := msg.(*WatchAttestationDomainResponse)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractResourceBody(*WatchAttestationDomainResponse) *attestation_domain.AttestationDomain
	})
	if ok {
		return override.OverrideExtractResourceBody(typedMsg)
	}
	{
		if resChange := typedMsg.GetChange(); resChange != nil {
			switch tResChange := resChange.ChangeType.(type) {
			case *attestation_domain.AttestationDomainChange_Added_:
				return tResChange.Added.GetAttestationDomain()
			case *attestation_domain.AttestationDomainChange_Modified_:
				return tResChange.Modified.GetAttestationDomain()
			case *attestation_domain.AttestationDomainChange_Current_:
				return tResChange.Current.GetAttestationDomain()
			}
		}
	}
	return (*attestation_domain.AttestationDomain)(nil)
}

func (h *WatchAttestationDomainDescriptorServerMsgHandle) ExtractResourceBodies(msg proto.Message) gotenresource.ResourceList {
	typedMsg := msg.(*WatchAttestationDomainResponse)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractResourceBodies(*WatchAttestationDomainResponse) []*attestation_domain.AttestationDomain
	})
	if ok {
		return attestation_domain.AttestationDomainList(override.OverrideExtractResourceBodies(typedMsg))
	}
	return nil
}

func GetWatchAttestationDomainDescriptor() *WatchAttestationDomainDescriptor {
	return watchAttestationDomainDescriptor
}

type WatchAttestationDomainsDescriptor struct{}

type WatchAttestationDomainsDescriptorClientMsgHandle struct{}

type WatchAttestationDomainsDescriptorServerMsgHandle struct{}

func (d *WatchAttestationDomainsDescriptor) NewEmptyClientMsg() proto.Message {
	return &WatchAttestationDomainsRequest{}
}

func (d *WatchAttestationDomainsDescriptor) NewEmptyServerMsg() proto.Message {
	return &WatchAttestationDomainsResponse{}
}

func (d *WatchAttestationDomainsDescriptor) IsUnary() bool {
	return false
}

func (d *WatchAttestationDomainsDescriptor) IsClientStream() bool {
	return false
}

func (d *WatchAttestationDomainsDescriptor) IsServerStream() bool {
	return true
}

func (d *WatchAttestationDomainsDescriptor) IsCollection() bool {
	return true
}

func (d *WatchAttestationDomainsDescriptor) IsPlural() bool {
	return true
}

func (d *WatchAttestationDomainsDescriptor) HasResource() bool {
	return true
}

func (d *WatchAttestationDomainsDescriptor) RequestHasResourceBody() bool {
	return false
}

func (d *WatchAttestationDomainsDescriptor) GetVerb() string {
	return "watch"
}

func (d *WatchAttestationDomainsDescriptor) GetMethodName() string {
	return "WatchAttestationDomains"
}

func (d *WatchAttestationDomainsDescriptor) GetFullMethodName() string {
	return "/ntt.iam.v1alpha2.AttestationDomainService/WatchAttestationDomains"
}

func (d *WatchAttestationDomainsDescriptor) GetProtoPkgName() string {
	return "ntt.iam.v1alpha2"
}

func (d *WatchAttestationDomainsDescriptor) GetApiName() string {
	return "AttestationDomainService"
}

func (d *WatchAttestationDomainsDescriptor) GetServiceDomain() string {
	return "iam.edgelq.com"
}

func (d *WatchAttestationDomainsDescriptor) GetServiceVersion() string {
	return "v1alpha2"
}

func (d *WatchAttestationDomainsDescriptor) GetApiDescriptor() gotenclient.ApiDescriptor {
	return attestationDomainServiceDescriptor
}

func (d *WatchAttestationDomainsDescriptor) GetResourceDescriptor() gotenresource.Descriptor {
	return attestation_domain.GetDescriptor()
}

func (d *WatchAttestationDomainsDescriptor) GetClientMsgReflectHandle() gotenclient.MethodMsgHandle {
	return &WatchAttestationDomainsDescriptorClientMsgHandle{}
}

func (d *WatchAttestationDomainsDescriptor) GetServerMsgReflectHandle() gotenclient.MethodMsgHandle {
	return &WatchAttestationDomainsDescriptorServerMsgHandle{}
}

func (h *WatchAttestationDomainsDescriptorClientMsgHandle) ExtractResourceName(msg proto.Message) gotenresource.Name {
	typedMsg := msg.(*WatchAttestationDomainsRequest)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractResourceName(*WatchAttestationDomainsRequest) *attestation_domain.Name
	})
	if ok {
		return override.OverrideExtractResourceName(typedMsg)
	}
	return nil
}

func (h *WatchAttestationDomainsDescriptorClientMsgHandle) ExtractResourceNames(msg proto.Message) gotenresource.NameList {
	typedMsg := msg.(*WatchAttestationDomainsRequest)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractResourceNames(*WatchAttestationDomainsRequest) []*attestation_domain.Name
	})
	if ok {
		return attestation_domain.AttestationDomainNameList(override.OverrideExtractResourceNames(typedMsg))
	}
	return nil
}

func (h *WatchAttestationDomainsDescriptorClientMsgHandle) ExtractCollectionName(msg proto.Message) gotenresource.Name {
	typedMsg := msg.(*WatchAttestationDomainsRequest)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractCollectionName(*WatchAttestationDomainsRequest) *attestation_domain.ParentName
	})
	if ok {
		return override.OverrideExtractCollectionName(typedMsg)
	}
	{
		if parentName := typedMsg.GetParent(); parentName != nil {
			return parentName
		}
	}
	return (*attestation_domain.ParentName)(nil)
}

func (h *WatchAttestationDomainsDescriptorClientMsgHandle) ExtractResourceBody(msg proto.Message) gotenresource.Resource {
	typedMsg := msg.(*WatchAttestationDomainsRequest)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractResourceBody(*WatchAttestationDomainsRequest) *attestation_domain.AttestationDomain
	})
	if ok {
		return override.OverrideExtractResourceBody(typedMsg)
	}
	return nil
}

func (h *WatchAttestationDomainsDescriptorClientMsgHandle) ExtractResourceBodies(msg proto.Message) gotenresource.ResourceList {
	typedMsg := msg.(*WatchAttestationDomainsRequest)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractResourceBodies(*WatchAttestationDomainsRequest) []*attestation_domain.AttestationDomain
	})
	if ok {
		return attestation_domain.AttestationDomainList(override.OverrideExtractResourceBodies(typedMsg))
	}
	return nil
}

func (h *WatchAttestationDomainsDescriptorServerMsgHandle) ExtractResourceName(msg proto.Message) gotenresource.Name {
	typedMsg := msg.(*WatchAttestationDomainsResponse)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractResourceName(*WatchAttestationDomainsResponse) *attestation_domain.Name
	})
	if ok {
		return override.OverrideExtractResourceName(typedMsg)
	}
	return nil
}

func (h *WatchAttestationDomainsDescriptorServerMsgHandle) ExtractResourceNames(msg proto.Message) gotenresource.NameList {
	typedMsg := msg.(*WatchAttestationDomainsResponse)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractResourceNames(*WatchAttestationDomainsResponse) []*attestation_domain.Name
	})
	if ok {
		return attestation_domain.AttestationDomainNameList(override.OverrideExtractResourceNames(typedMsg))
	}
	{
		if resChanges := typedMsg.GetAttestationDomainChanges(); len(resChanges) > 0 {
			list := make(attestation_domain.AttestationDomainNameList, 0, len(resChanges))
			for _, resChange := range resChanges {
				switch tResChange := resChange.ChangeType.(type) {
				case *attestation_domain.AttestationDomainChange_Added_:
					list = append(list, tResChange.Added.GetAttestationDomain().GetName())
				case *attestation_domain.AttestationDomainChange_Modified_:
					list = append(list, tResChange.Modified.GetName())
				case *attestation_domain.AttestationDomainChange_Removed_:
					list = append(list, tResChange.Removed.GetName())
				case *attestation_domain.AttestationDomainChange_Current_:
					list = append(list, tResChange.Current.GetAttestationDomain().GetName())
				}
			}
			return list
		}
	}
	return (attestation_domain.AttestationDomainNameList)(nil)
}

func (h *WatchAttestationDomainsDescriptorServerMsgHandle) ExtractCollectionName(msg proto.Message) gotenresource.Name {
	typedMsg := msg.(*WatchAttestationDomainsResponse)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractCollectionName(*WatchAttestationDomainsResponse) *attestation_domain.ParentName
	})
	if ok {
		return override.OverrideExtractCollectionName(typedMsg)
	}
	return nil
}

func (h *WatchAttestationDomainsDescriptorServerMsgHandle) ExtractResourceBody(msg proto.Message) gotenresource.Resource {
	typedMsg := msg.(*WatchAttestationDomainsResponse)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractResourceBody(*WatchAttestationDomainsResponse) *attestation_domain.AttestationDomain
	})
	if ok {
		return override.OverrideExtractResourceBody(typedMsg)
	}
	return nil
}

func (h *WatchAttestationDomainsDescriptorServerMsgHandle) ExtractResourceBodies(msg proto.Message) gotenresource.ResourceList {
	typedMsg := msg.(*WatchAttestationDomainsResponse)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractResourceBodies(*WatchAttestationDomainsResponse) []*attestation_domain.AttestationDomain
	})
	if ok {
		return attestation_domain.AttestationDomainList(override.OverrideExtractResourceBodies(typedMsg))
	}
	{
		if resChanges := typedMsg.GetAttestationDomainChanges(); len(resChanges) > 0 {
			list := make(attestation_domain.AttestationDomainList, 0, len(resChanges))
			for _, resChange := range resChanges {
				switch tResChange := resChange.ChangeType.(type) {
				case *attestation_domain.AttestationDomainChange_Added_:
					list = append(list, tResChange.Added.GetAttestationDomain())
				case *attestation_domain.AttestationDomainChange_Modified_:
					list = append(list, tResChange.Modified.GetAttestationDomain())
				case *attestation_domain.AttestationDomainChange_Current_:
					list = append(list, tResChange.Current.GetAttestationDomain())
				}
			}
			return list
		}
	}
	return (attestation_domain.AttestationDomainList)(nil)
}

func GetWatchAttestationDomainsDescriptor() *WatchAttestationDomainsDescriptor {
	return watchAttestationDomainsDescriptor
}

type CreateAttestationDomainDescriptor struct{}

type CreateAttestationDomainDescriptorClientMsgHandle struct{}

type CreateAttestationDomainDescriptorServerMsgHandle struct{}

func (d *CreateAttestationDomainDescriptor) NewEmptyClientMsg() proto.Message {
	return &CreateAttestationDomainRequest{}
}

func (d *CreateAttestationDomainDescriptor) NewEmptyServerMsg() proto.Message {
	return &attestation_domain.AttestationDomain{}
}

func (d *CreateAttestationDomainDescriptor) IsUnary() bool {
	return true
}

func (d *CreateAttestationDomainDescriptor) IsClientStream() bool {
	return false
}

func (d *CreateAttestationDomainDescriptor) IsServerStream() bool {
	return false
}

func (d *CreateAttestationDomainDescriptor) IsCollection() bool {
	return true
}

func (d *CreateAttestationDomainDescriptor) IsPlural() bool {
	return false
}

func (d *CreateAttestationDomainDescriptor) HasResource() bool {
	return true
}

func (d *CreateAttestationDomainDescriptor) RequestHasResourceBody() bool {
	return true
}

func (d *CreateAttestationDomainDescriptor) GetVerb() string {
	return "create"
}

func (d *CreateAttestationDomainDescriptor) GetMethodName() string {
	return "CreateAttestationDomain"
}

func (d *CreateAttestationDomainDescriptor) GetFullMethodName() string {
	return "/ntt.iam.v1alpha2.AttestationDomainService/CreateAttestationDomain"
}

func (d *CreateAttestationDomainDescriptor) GetProtoPkgName() string {
	return "ntt.iam.v1alpha2"
}

func (d *CreateAttestationDomainDescriptor) GetApiName() string {
	return "AttestationDomainService"
}

func (d *CreateAttestationDomainDescriptor) GetServiceDomain() string {
	return "iam.edgelq.com"
}

func (d *CreateAttestationDomainDescriptor) GetServiceVersion() string {
	return "v1alpha2"
}

func (d *CreateAttestationDomainDescriptor) GetApiDescriptor() gotenclient.ApiDescriptor {
	return attestationDomainServiceDescriptor
}

func (d *CreateAttestationDomainDescriptor) GetResourceDescriptor() gotenresource.Descriptor {
	return attestation_domain.GetDescriptor()
}

func (d *CreateAttestationDomainDescriptor) GetClientMsgReflectHandle() gotenclient.MethodMsgHandle {
	return &CreateAttestationDomainDescriptorClientMsgHandle{}
}

func (d *CreateAttestationDomainDescriptor) GetServerMsgReflectHandle() gotenclient.MethodMsgHandle {
	return &CreateAttestationDomainDescriptorServerMsgHandle{}
}

func (h *CreateAttestationDomainDescriptorClientMsgHandle) ExtractResourceName(msg proto.Message) gotenresource.Name {
	typedMsg := msg.(*CreateAttestationDomainRequest)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractResourceName(*CreateAttestationDomainRequest) *attestation_domain.Name
	})
	if ok {
		return override.OverrideExtractResourceName(typedMsg)
	}
	{
		res := typedMsg.GetAttestationDomain()
		if name := res.GetName(); name != nil {
			return name
		}
	}
	return (*attestation_domain.Name)(nil)
}

func (h *CreateAttestationDomainDescriptorClientMsgHandle) ExtractResourceNames(msg proto.Message) gotenresource.NameList {
	typedMsg := msg.(*CreateAttestationDomainRequest)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractResourceNames(*CreateAttestationDomainRequest) []*attestation_domain.Name
	})
	if ok {
		return attestation_domain.AttestationDomainNameList(override.OverrideExtractResourceNames(typedMsg))
	}
	return nil
}

func (h *CreateAttestationDomainDescriptorClientMsgHandle) ExtractCollectionName(msg proto.Message) gotenresource.Name {
	typedMsg := msg.(*CreateAttestationDomainRequest)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractCollectionName(*CreateAttestationDomainRequest) *attestation_domain.ParentName
	})
	if ok {
		return override.OverrideExtractCollectionName(typedMsg)
	}
	{
		if parentName := typedMsg.GetParent(); parentName != nil {
			return parentName
		}
	}
	return (*attestation_domain.ParentName)(nil)
}

func (h *CreateAttestationDomainDescriptorClientMsgHandle) ExtractResourceBody(msg proto.Message) gotenresource.Resource {
	typedMsg := msg.(*CreateAttestationDomainRequest)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractResourceBody(*CreateAttestationDomainRequest) *attestation_domain.AttestationDomain
	})
	if ok {
		return override.OverrideExtractResourceBody(typedMsg)
	}
	{
		return typedMsg.GetAttestationDomain()
	}
	return (*attestation_domain.AttestationDomain)(nil)
}

func (h *CreateAttestationDomainDescriptorClientMsgHandle) ExtractResourceBodies(msg proto.Message) gotenresource.ResourceList {
	typedMsg := msg.(*CreateAttestationDomainRequest)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractResourceBodies(*CreateAttestationDomainRequest) []*attestation_domain.AttestationDomain
	})
	if ok {
		return attestation_domain.AttestationDomainList(override.OverrideExtractResourceBodies(typedMsg))
	}
	return nil
}

func (h *CreateAttestationDomainDescriptorServerMsgHandle) ExtractResourceName(msg proto.Message) gotenresource.Name {
	typedMsg := msg.(*attestation_domain.AttestationDomain)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractResourceName(*attestation_domain.AttestationDomain) *attestation_domain.Name
	})
	if ok {
		return override.OverrideExtractResourceName(typedMsg)
	}
	{
		if name := typedMsg.GetName(); name != nil {
			return name
		}
	}
	return (*attestation_domain.Name)(nil)
}

func (h *CreateAttestationDomainDescriptorServerMsgHandle) ExtractResourceNames(msg proto.Message) gotenresource.NameList {
	typedMsg := msg.(*attestation_domain.AttestationDomain)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractResourceNames(*attestation_domain.AttestationDomain) []*attestation_domain.Name
	})
	if ok {
		return attestation_domain.AttestationDomainNameList(override.OverrideExtractResourceNames(typedMsg))
	}
	return nil
}

func (h *CreateAttestationDomainDescriptorServerMsgHandle) ExtractCollectionName(msg proto.Message) gotenresource.Name {
	typedMsg := msg.(*attestation_domain.AttestationDomain)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractCollectionName(*attestation_domain.AttestationDomain) *attestation_domain.ParentName
	})
	if ok {
		return override.OverrideExtractCollectionName(typedMsg)
	}
	return nil
}

func (h *CreateAttestationDomainDescriptorServerMsgHandle) ExtractResourceBody(msg proto.Message) gotenresource.Resource {
	return msg.(*attestation_domain.AttestationDomain)
}

func (h *CreateAttestationDomainDescriptorServerMsgHandle) ExtractResourceBodies(msg proto.Message) gotenresource.ResourceList {
	typedMsg := msg.(*attestation_domain.AttestationDomain)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractResourceBodies(*attestation_domain.AttestationDomain) []*attestation_domain.AttestationDomain
	})
	if ok {
		return attestation_domain.AttestationDomainList(override.OverrideExtractResourceBodies(typedMsg))
	}
	return nil
}

func GetCreateAttestationDomainDescriptor() *CreateAttestationDomainDescriptor {
	return createAttestationDomainDescriptor
}

type UpdateAttestationDomainDescriptor struct{}

type UpdateAttestationDomainDescriptorClientMsgHandle struct{}

type UpdateAttestationDomainDescriptorServerMsgHandle struct{}

func (d *UpdateAttestationDomainDescriptor) NewEmptyClientMsg() proto.Message {
	return &UpdateAttestationDomainRequest{}
}

func (d *UpdateAttestationDomainDescriptor) NewEmptyServerMsg() proto.Message {
	return &attestation_domain.AttestationDomain{}
}

func (d *UpdateAttestationDomainDescriptor) IsUnary() bool {
	return true
}

func (d *UpdateAttestationDomainDescriptor) IsClientStream() bool {
	return false
}

func (d *UpdateAttestationDomainDescriptor) IsServerStream() bool {
	return false
}

func (d *UpdateAttestationDomainDescriptor) IsCollection() bool {
	return false
}

func (d *UpdateAttestationDomainDescriptor) IsPlural() bool {
	return false
}

func (d *UpdateAttestationDomainDescriptor) HasResource() bool {
	return true
}

func (d *UpdateAttestationDomainDescriptor) RequestHasResourceBody() bool {
	return true
}

func (d *UpdateAttestationDomainDescriptor) GetVerb() string {
	return "update"
}

func (d *UpdateAttestationDomainDescriptor) GetMethodName() string {
	return "UpdateAttestationDomain"
}

func (d *UpdateAttestationDomainDescriptor) GetFullMethodName() string {
	return "/ntt.iam.v1alpha2.AttestationDomainService/UpdateAttestationDomain"
}

func (d *UpdateAttestationDomainDescriptor) GetProtoPkgName() string {
	return "ntt.iam.v1alpha2"
}

func (d *UpdateAttestationDomainDescriptor) GetApiName() string {
	return "AttestationDomainService"
}

func (d *UpdateAttestationDomainDescriptor) GetServiceDomain() string {
	return "iam.edgelq.com"
}

func (d *UpdateAttestationDomainDescriptor) GetServiceVersion() string {
	return "v1alpha2"
}

func (d *UpdateAttestationDomainDescriptor) GetApiDescriptor() gotenclient.ApiDescriptor {
	return attestationDomainServiceDescriptor
}

func (d *UpdateAttestationDomainDescriptor) GetResourceDescriptor() gotenresource.Descriptor {
	return attestation_domain.GetDescriptor()
}

func (d *UpdateAttestationDomainDescriptor) GetClientMsgReflectHandle() gotenclient.MethodMsgHandle {
	return &UpdateAttestationDomainDescriptorClientMsgHandle{}
}

func (d *UpdateAttestationDomainDescriptor) GetServerMsgReflectHandle() gotenclient.MethodMsgHandle {
	return &UpdateAttestationDomainDescriptorServerMsgHandle{}
}

func (h *UpdateAttestationDomainDescriptorClientMsgHandle) ExtractResourceName(msg proto.Message) gotenresource.Name {
	typedMsg := msg.(*UpdateAttestationDomainRequest)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractResourceName(*UpdateAttestationDomainRequest) *attestation_domain.Name
	})
	if ok {
		return override.OverrideExtractResourceName(typedMsg)
	}
	{
		res := typedMsg.GetAttestationDomain()
		if name := res.GetName(); name != nil {
			return name
		}
	}
	return (*attestation_domain.Name)(nil)
}

func (h *UpdateAttestationDomainDescriptorClientMsgHandle) ExtractResourceNames(msg proto.Message) gotenresource.NameList {
	typedMsg := msg.(*UpdateAttestationDomainRequest)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractResourceNames(*UpdateAttestationDomainRequest) []*attestation_domain.Name
	})
	if ok {
		return attestation_domain.AttestationDomainNameList(override.OverrideExtractResourceNames(typedMsg))
	}
	return nil
}

func (h *UpdateAttestationDomainDescriptorClientMsgHandle) ExtractCollectionName(msg proto.Message) gotenresource.Name {
	typedMsg := msg.(*UpdateAttestationDomainRequest)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractCollectionName(*UpdateAttestationDomainRequest) *attestation_domain.ParentName
	})
	if ok {
		return override.OverrideExtractCollectionName(typedMsg)
	}
	return nil
}

func (h *UpdateAttestationDomainDescriptorClientMsgHandle) ExtractResourceBody(msg proto.Message) gotenresource.Resource {
	typedMsg := msg.(*UpdateAttestationDomainRequest)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractResourceBody(*UpdateAttestationDomainRequest) *attestation_domain.AttestationDomain
	})
	if ok {
		return override.OverrideExtractResourceBody(typedMsg)
	}
	{
		return typedMsg.GetAttestationDomain()
	}
	return (*attestation_domain.AttestationDomain)(nil)
}

func (h *UpdateAttestationDomainDescriptorClientMsgHandle) ExtractResourceBodies(msg proto.Message) gotenresource.ResourceList {
	typedMsg := msg.(*UpdateAttestationDomainRequest)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractResourceBodies(*UpdateAttestationDomainRequest) []*attestation_domain.AttestationDomain
	})
	if ok {
		return attestation_domain.AttestationDomainList(override.OverrideExtractResourceBodies(typedMsg))
	}
	return nil
}

func (h *UpdateAttestationDomainDescriptorServerMsgHandle) ExtractResourceName(msg proto.Message) gotenresource.Name {
	typedMsg := msg.(*attestation_domain.AttestationDomain)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractResourceName(*attestation_domain.AttestationDomain) *attestation_domain.Name
	})
	if ok {
		return override.OverrideExtractResourceName(typedMsg)
	}
	{
		if name := typedMsg.GetName(); name != nil {
			return name
		}
	}
	return (*attestation_domain.Name)(nil)
}

func (h *UpdateAttestationDomainDescriptorServerMsgHandle) ExtractResourceNames(msg proto.Message) gotenresource.NameList {
	typedMsg := msg.(*attestation_domain.AttestationDomain)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractResourceNames(*attestation_domain.AttestationDomain) []*attestation_domain.Name
	})
	if ok {
		return attestation_domain.AttestationDomainNameList(override.OverrideExtractResourceNames(typedMsg))
	}
	return nil
}

func (h *UpdateAttestationDomainDescriptorServerMsgHandle) ExtractCollectionName(msg proto.Message) gotenresource.Name {
	typedMsg := msg.(*attestation_domain.AttestationDomain)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractCollectionName(*attestation_domain.AttestationDomain) *attestation_domain.ParentName
	})
	if ok {
		return override.OverrideExtractCollectionName(typedMsg)
	}
	return nil
}

func (h *UpdateAttestationDomainDescriptorServerMsgHandle) ExtractResourceBody(msg proto.Message) gotenresource.Resource {
	return msg.(*attestation_domain.AttestationDomain)
}

func (h *UpdateAttestationDomainDescriptorServerMsgHandle) ExtractResourceBodies(msg proto.Message) gotenresource.ResourceList {
	typedMsg := msg.(*attestation_domain.AttestationDomain)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractResourceBodies(*attestation_domain.AttestationDomain) []*attestation_domain.AttestationDomain
	})
	if ok {
		return attestation_domain.AttestationDomainList(override.OverrideExtractResourceBodies(typedMsg))
	}
	return nil
}

func GetUpdateAttestationDomainDescriptor() *UpdateAttestationDomainDescriptor {
	return updateAttestationDomainDescriptor
}

type DeleteAttestationDomainDescriptor struct{}

type DeleteAttestationDomainDescriptorClientMsgHandle struct{}

type DeleteAttestationDomainDescriptorServerMsgHandle struct{}

func (d *DeleteAttestationDomainDescriptor) NewEmptyClientMsg() proto.Message {
	return &DeleteAttestationDomainRequest{}
}

func (d *DeleteAttestationDomainDescriptor) NewEmptyServerMsg() proto.Message {
	return &emptypb.Empty{}
}

func (d *DeleteAttestationDomainDescriptor) IsUnary() bool {
	return true
}

func (d *DeleteAttestationDomainDescriptor) IsClientStream() bool {
	return false
}

func (d *DeleteAttestationDomainDescriptor) IsServerStream() bool {
	return false
}

func (d *DeleteAttestationDomainDescriptor) IsCollection() bool {
	return false
}

func (d *DeleteAttestationDomainDescriptor) IsPlural() bool {
	return false
}

func (d *DeleteAttestationDomainDescriptor) HasResource() bool {
	return true
}

func (d *DeleteAttestationDomainDescriptor) RequestHasResourceBody() bool {
	return false
}

func (d *DeleteAttestationDomainDescriptor) GetVerb() string {
	return "delete"
}

func (d *DeleteAttestationDomainDescriptor) GetMethodName() string {
	return "DeleteAttestationDomain"
}

func (d *DeleteAttestationDomainDescriptor) GetFullMethodName() string {
	return "/ntt.iam.v1alpha2.AttestationDomainService/DeleteAttestationDomain"
}

func (d *DeleteAttestationDomainDescriptor) GetProtoPkgName() string {
	return "ntt.iam.v1alpha2"
}

func (d *DeleteAttestationDomainDescriptor) GetApiName() string {
	return "AttestationDomainService"
}

func (d *DeleteAttestationDomainDescriptor) GetServiceDomain() string {
	return "iam.edgelq.com"
}

func (d *DeleteAttestationDomainDescriptor) GetServiceVersion() string {
	return "v1alpha2"
}

func (d *DeleteAttestationDomainDescriptor) GetApiDescriptor() gotenclient.ApiDescriptor {
	return attestationDomainServiceDescriptor
}

func (d *DeleteAttestationDomainDescriptor) GetResourceDescriptor() gotenresource.Descriptor {
	return attestation_domain.GetDescriptor()
}

func (d *DeleteAttestationDomainDescriptor) GetClientMsgReflectHandle() gotenclient.MethodMsgHandle {
	return &DeleteAttestationDomainDescriptorClientMsgHandle{}
}

func (d *DeleteAttestationDomainDescriptor) GetServerMsgReflectHandle() gotenclient.MethodMsgHandle {
	return &DeleteAttestationDomainDescriptorServerMsgHandle{}
}

func (h *DeleteAttestationDomainDescriptorClientMsgHandle) ExtractResourceName(msg proto.Message) gotenresource.Name {
	typedMsg := msg.(*DeleteAttestationDomainRequest)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractResourceName(*DeleteAttestationDomainRequest) *attestation_domain.Name
	})
	if ok {
		return override.OverrideExtractResourceName(typedMsg)
	}
	{
		if name := typedMsg.GetName(); name != nil {
			return name
		}
	}
	return (*attestation_domain.Name)(nil)
}

func (h *DeleteAttestationDomainDescriptorClientMsgHandle) ExtractResourceNames(msg proto.Message) gotenresource.NameList {
	typedMsg := msg.(*DeleteAttestationDomainRequest)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractResourceNames(*DeleteAttestationDomainRequest) []*attestation_domain.Name
	})
	if ok {
		return attestation_domain.AttestationDomainNameList(override.OverrideExtractResourceNames(typedMsg))
	}
	return nil
}

func (h *DeleteAttestationDomainDescriptorClientMsgHandle) ExtractCollectionName(msg proto.Message) gotenresource.Name {
	typedMsg := msg.(*DeleteAttestationDomainRequest)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractCollectionName(*DeleteAttestationDomainRequest) *attestation_domain.ParentName
	})
	if ok {
		return override.OverrideExtractCollectionName(typedMsg)
	}
	return nil
}

func (h *DeleteAttestationDomainDescriptorClientMsgHandle) ExtractResourceBody(msg proto.Message) gotenresource.Resource {
	typedMsg := msg.(*DeleteAttestationDomainRequest)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractResourceBody(*DeleteAttestationDomainRequest) *attestation_domain.AttestationDomain
	})
	if ok {
		return override.OverrideExtractResourceBody(typedMsg)
	}
	return nil
}

func (h *DeleteAttestationDomainDescriptorClientMsgHandle) ExtractResourceBodies(msg proto.Message) gotenresource.ResourceList {
	typedMsg := msg.(*DeleteAttestationDomainRequest)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractResourceBodies(*DeleteAttestationDomainRequest) []*attestation_domain.AttestationDomain
	})
	if ok {
		return attestation_domain.AttestationDomainList(override.OverrideExtractResourceBodies(typedMsg))
	}
	return nil
}

func (h *DeleteAttestationDomainDescriptorServerMsgHandle) ExtractResourceName(msg proto.Message) gotenresource.Name {
	typedMsg := msg.(*emptypb.Empty)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractResourceName(*emptypb.Empty) *attestation_domain.Name
	})
	if ok {
		return override.OverrideExtractResourceName(typedMsg)
	}
	return nil
}

func (h *DeleteAttestationDomainDescriptorServerMsgHandle) ExtractResourceNames(msg proto.Message) gotenresource.NameList {
	typedMsg := msg.(*emptypb.Empty)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractResourceNames(*emptypb.Empty) []*attestation_domain.Name
	})
	if ok {
		return attestation_domain.AttestationDomainNameList(override.OverrideExtractResourceNames(typedMsg))
	}
	return nil
}

func (h *DeleteAttestationDomainDescriptorServerMsgHandle) ExtractCollectionName(msg proto.Message) gotenresource.Name {
	typedMsg := msg.(*emptypb.Empty)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractCollectionName(*emptypb.Empty) *attestation_domain.ParentName
	})
	if ok {
		return override.OverrideExtractCollectionName(typedMsg)
	}
	return nil
}

func (h *DeleteAttestationDomainDescriptorServerMsgHandle) ExtractResourceBody(msg proto.Message) gotenresource.Resource {
	typedMsg := msg.(*emptypb.Empty)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractResourceBody(*emptypb.Empty) *attestation_domain.AttestationDomain
	})
	if ok {
		return override.OverrideExtractResourceBody(typedMsg)
	}
	return nil
}

func (h *DeleteAttestationDomainDescriptorServerMsgHandle) ExtractResourceBodies(msg proto.Message) gotenresource.ResourceList {
	typedMsg := msg.(*emptypb.Empty)
	var asInterface interface{} = h
	override, ok := asInterface.(interface {
		OverrideExtractResourceBodies(*emptypb.Empty) []*attestation_domain.AttestationDomain
	})
	if ok {
		return attestation_domain.AttestationDomainList(override.OverrideExtractResourceBodies(typedMsg))
	}
	return nil
}

func GetDeleteAttestationDomainDescriptor() *DeleteAttestationDomainDescriptor {
	return deleteAttestationDomainDescriptor
}

type AttestationDomainServiceDescriptor struct{}

func (d *AttestationDomainServiceDescriptor) AllMethodDescriptors() []gotenclient.MethodDescriptor {
	return []gotenclient.MethodDescriptor{
		getAttestationDomainDescriptor,
		batchGetAttestationDomainsDescriptor,
		listAttestationDomainsDescriptor,
		watchAttestationDomainDescriptor,
		watchAttestationDomainsDescriptor,
		createAttestationDomainDescriptor,
		updateAttestationDomainDescriptor,
		deleteAttestationDomainDescriptor,
	}
}

func (d *AttestationDomainServiceDescriptor) GetFullAPIName() string {
	return "/ntt.iam.v1alpha2.AttestationDomainService"
}

func (d *AttestationDomainServiceDescriptor) GetProtoPkgName() string {
	return "ntt.iam.v1alpha2"
}

func (d *AttestationDomainServiceDescriptor) GetApiName() string {
	return "AttestationDomainService"
}

func (d *AttestationDomainServiceDescriptor) GetServiceDomain() string {
	return "iam.edgelq.com"
}

func (d *AttestationDomainServiceDescriptor) GetServiceVersion() string {
	return "v1alpha2"
}

func GetAttestationDomainServiceDescriptor() *AttestationDomainServiceDescriptor {
	return attestationDomainServiceDescriptor
}

func initDescriptors() {
	attestationDomainServiceDescriptor = &AttestationDomainServiceDescriptor{}
	getAttestationDomainDescriptor = &GetAttestationDomainDescriptor{}
	batchGetAttestationDomainsDescriptor = &BatchGetAttestationDomainsDescriptor{}
	listAttestationDomainsDescriptor = &ListAttestationDomainsDescriptor{}
	watchAttestationDomainDescriptor = &WatchAttestationDomainDescriptor{}
	watchAttestationDomainsDescriptor = &WatchAttestationDomainsDescriptor{}
	createAttestationDomainDescriptor = &CreateAttestationDomainDescriptor{}
	updateAttestationDomainDescriptor = &UpdateAttestationDomainDescriptor{}
	deleteAttestationDomainDescriptor = &DeleteAttestationDomainDescriptor{}
	gotenclient.GetRegistry().RegisterApiDescriptor(attestationDomainServiceDescriptor)
	gotenclient.GetRegistry().RegisterMethodDescriptor(getAttestationDomainDescriptor)
	gotenclient.GetRegistry().RegisterMethodDescriptor(batchGetAttestationDomainsDescriptor)
	gotenclient.GetRegistry().RegisterMethodDescriptor(listAttestationDomainsDescriptor)
	gotenclient.GetRegistry().RegisterMethodDescriptor(watchAttestationDomainDescriptor)
	gotenclient.GetRegistry().RegisterMethodDescriptor(watchAttestationDomainsDescriptor)
	gotenclient.GetRegistry().RegisterMethodDescriptor(createAttestationDomainDescriptor)
	gotenclient.GetRegistry().RegisterMethodDescriptor(updateAttestationDomainDescriptor)
	gotenclient.GetRegistry().RegisterMethodDescriptor(deleteAttestationDomainDescriptor)
}

func init() {
	if !descriptorsInitialized {
		initDescriptors()
		descriptorsInitialized = true
	}
}
