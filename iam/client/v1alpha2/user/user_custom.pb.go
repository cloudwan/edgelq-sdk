// Code generated by protoc-gen-goten-go
// File: edgelq/iam/proto/v1alpha2/user_custom.proto
// DO NOT EDIT!!!

package user_client

import (
	"fmt"
	"reflect"
	"sync"

	"google.golang.org/protobuf/encoding/protojson"
	"google.golang.org/protobuf/proto"
	preflect "google.golang.org/protobuf/reflect/protoreflect"
	"google.golang.org/protobuf/runtime/protoimpl"
)

// proto imports
import (
	user "github.com/cloudwan/edgelq-sdk/iam/resources/v1alpha2/user"
	view "github.com/cloudwan/goten-sdk/runtime/api/view"
	field_mask "google.golang.org/genproto/protobuf/field_mask"
)

// Reference imports to suppress errors if they are not otherwise used.
var (
	_ = fmt.Errorf
	_ = reflect.Method{}
	_ = sync.Once{}

	_ = protojson.MarshalOptions{}
	_ = proto.MarshalOptions{}
	_ = preflect.Value{}
	_ = protoimpl.DescBuilder{}
)

// make sure we're using proto imports
var (
	_ = &user.User{}
	_ = &field_mask.FieldMask{}
	_ = view.View(0)
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Request message for method [GetUserByEmail][ntt.iam.v1alpha2.GetUserByEmail]
type GetUserByEmailRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
	//  reference of ntt.iam.v1alpha2.User
	Email string `protobuf:"bytes,1,opt,name=email,proto3" json:"email,omitempty" firestore:"email"`
	// A list of extra fields to be obtained for each response item on top of
	// fields defined by request field view
	FieldMask *user.User_FieldMask `protobuf:"bytes,3,opt,customtype=User_FieldMask,name=field_mask,json=fieldMask,proto3" json:"field_mask,omitempty" firestore:"fieldMask"`
	// View defines list of standard response fields present in response items.
	// Additional fields can be amended by request field field_mask
	View view.View `protobuf:"varint,4,opt,name=view,proto3,enum=goten.view.View" json:"view,omitempty" firestore:"view"`
	// If true, server will skip checking if query result is present in it's cache
	SkipCache bool `protobuf:"varint,5,opt,name=skip_cache,json=skipCache,proto3" json:"skip_cache,omitempty" firestore:"skipCache"`
}

func (m *GetUserByEmailRequest) Reset() {
	*m = GetUserByEmailRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &edgelq_iam_proto_v1alpha2_user_custom_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(m))
		ms.StoreMessageInfo(mi)
	}
}

func (m *GetUserByEmailRequest) String() string {
	return protoimpl.X.MessageStringOf(m)
}

func (*GetUserByEmailRequest) ProtoMessage() {}

func (m *GetUserByEmailRequest) ProtoReflect() preflect.Message {
	mi := &edgelq_iam_proto_v1alpha2_user_custom_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && m != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(m))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(m)
}

func (*GetUserByEmailRequest) GotenMessage() {}

// Deprecated, Use GetUserByEmailRequest.ProtoReflect.Descriptor instead.
func (*GetUserByEmailRequest) Descriptor() ([]byte, []int) {
	return edgelq_iam_proto_v1alpha2_user_custom_proto_rawDescGZIP(), []int{0}
}

func (m *GetUserByEmailRequest) Unmarshal(b []byte) error {
	return proto.Unmarshal(b, m)
}

func (m *GetUserByEmailRequest) Marshal() ([]byte, error) {
	return proto.Marshal(m)
}

func (m *GetUserByEmailRequest) MarshalJSON() ([]byte, error) {
	return protojson.MarshalOptions{}.Marshal(m)
}

func (m *GetUserByEmailRequest) UnmarshalJSON(data []byte) error {
	return protojson.Unmarshal(data, m)
}

func (m *GetUserByEmailRequest) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *GetUserByEmailRequest) GetFieldMask() *user.User_FieldMask {
	if m != nil {
		return m.FieldMask
	}
	return nil
}

func (m *GetUserByEmailRequest) GetView() view.View {
	if m != nil {
		return m.View
	}
	return view.View_UNSPECIFIED
}

func (m *GetUserByEmailRequest) GetSkipCache() bool {
	if m != nil {
		return m.SkipCache
	}
	return false
}

func (m *GetUserByEmailRequest) SetEmail(fv string) {
	if m == nil {
		panic(fmt.Errorf("can't set %s on nil %s", "Email", "GetUserByEmailRequest"))
	}
	m.Email = fv
}

func (m *GetUserByEmailRequest) SetFieldMask(fv *user.User_FieldMask) {
	if m == nil {
		panic(fmt.Errorf("can't set %s on nil %s", "FieldMask", "GetUserByEmailRequest"))
	}
	m.FieldMask = fv
}

func (m *GetUserByEmailRequest) SetView(fv view.View) {
	if m == nil {
		panic(fmt.Errorf("can't set %s on nil %s", "View", "GetUserByEmailRequest"))
	}
	m.View = fv
}

func (m *GetUserByEmailRequest) SetSkipCache(fv bool) {
	if m == nil {
		panic(fmt.Errorf("can't set %s on nil %s", "SkipCache", "GetUserByEmailRequest"))
	}
	m.SkipCache = fv
}

// Request message for method
// [BatchGetUsersByEmail][ntt.iam.v1alpha2.BatchGetUsersByEmail]
type BatchGetUsersByEmailRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
	// Emails of users
	Emails []string `protobuf:"bytes,2,rep,name=emails,proto3" json:"emails,omitempty" firestore:"emails"`
	// A list of extra fields to be obtained for each response item on top of
	// fields defined by request field view
	FieldMask *user.User_FieldMask `protobuf:"bytes,3,opt,customtype=User_FieldMask,name=field_mask,json=fieldMask,proto3" json:"field_mask,omitempty" firestore:"fieldMask"`
	// View defines list of standard response fields present in response items.
	// Additional fields can be amended by request field field_mask
	View view.View `protobuf:"varint,4,opt,name=view,proto3,enum=goten.view.View" json:"view,omitempty" firestore:"view"`
	// If true, server will skip checking if query result is present in it's cache
	SkipCache bool `protobuf:"varint,5,opt,name=skip_cache,json=skipCache,proto3" json:"skip_cache,omitempty" firestore:"skipCache"`
}

func (m *BatchGetUsersByEmailRequest) Reset() {
	*m = BatchGetUsersByEmailRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &edgelq_iam_proto_v1alpha2_user_custom_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(m))
		ms.StoreMessageInfo(mi)
	}
}

func (m *BatchGetUsersByEmailRequest) String() string {
	return protoimpl.X.MessageStringOf(m)
}

func (*BatchGetUsersByEmailRequest) ProtoMessage() {}

func (m *BatchGetUsersByEmailRequest) ProtoReflect() preflect.Message {
	mi := &edgelq_iam_proto_v1alpha2_user_custom_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && m != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(m))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(m)
}

func (*BatchGetUsersByEmailRequest) GotenMessage() {}

// Deprecated, Use BatchGetUsersByEmailRequest.ProtoReflect.Descriptor instead.
func (*BatchGetUsersByEmailRequest) Descriptor() ([]byte, []int) {
	return edgelq_iam_proto_v1alpha2_user_custom_proto_rawDescGZIP(), []int{1}
}

func (m *BatchGetUsersByEmailRequest) Unmarshal(b []byte) error {
	return proto.Unmarshal(b, m)
}

func (m *BatchGetUsersByEmailRequest) Marshal() ([]byte, error) {
	return proto.Marshal(m)
}

func (m *BatchGetUsersByEmailRequest) MarshalJSON() ([]byte, error) {
	return protojson.MarshalOptions{}.Marshal(m)
}

func (m *BatchGetUsersByEmailRequest) UnmarshalJSON(data []byte) error {
	return protojson.Unmarshal(data, m)
}

func (m *BatchGetUsersByEmailRequest) GetEmails() []string {
	if m != nil {
		return m.Emails
	}
	return nil
}

func (m *BatchGetUsersByEmailRequest) GetFieldMask() *user.User_FieldMask {
	if m != nil {
		return m.FieldMask
	}
	return nil
}

func (m *BatchGetUsersByEmailRequest) GetView() view.View {
	if m != nil {
		return m.View
	}
	return view.View_UNSPECIFIED
}

func (m *BatchGetUsersByEmailRequest) GetSkipCache() bool {
	if m != nil {
		return m.SkipCache
	}
	return false
}

func (m *BatchGetUsersByEmailRequest) SetEmails(fv []string) {
	if m == nil {
		panic(fmt.Errorf("can't set %s on nil %s", "Emails", "BatchGetUsersByEmailRequest"))
	}
	m.Emails = fv
}

func (m *BatchGetUsersByEmailRequest) SetFieldMask(fv *user.User_FieldMask) {
	if m == nil {
		panic(fmt.Errorf("can't set %s on nil %s", "FieldMask", "BatchGetUsersByEmailRequest"))
	}
	m.FieldMask = fv
}

func (m *BatchGetUsersByEmailRequest) SetView(fv view.View) {
	if m == nil {
		panic(fmt.Errorf("can't set %s on nil %s", "View", "BatchGetUsersByEmailRequest"))
	}
	m.View = fv
}

func (m *BatchGetUsersByEmailRequest) SetSkipCache(fv bool) {
	if m == nil {
		panic(fmt.Errorf("can't set %s on nil %s", "SkipCache", "BatchGetUsersByEmailRequest"))
	}
	m.SkipCache = fv
}

// Response message for method
// [BatchGetUsersByEmail][ntt.iam.v1alpha2.BatchGetUsersByEmail]
type BatchGetUsersByEmailResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
	// found Users
	Users []*user.User `protobuf:"bytes,1,rep,name=users,proto3" json:"users,omitempty" firestore:"users"`
	// list of not found user emails
	Missing []string `protobuf:"bytes,2,rep,name=missing,proto3" json:"missing,omitempty" firestore:"missing"`
}

func (m *BatchGetUsersByEmailResponse) Reset() {
	*m = BatchGetUsersByEmailResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &edgelq_iam_proto_v1alpha2_user_custom_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(m))
		ms.StoreMessageInfo(mi)
	}
}

func (m *BatchGetUsersByEmailResponse) String() string {
	return protoimpl.X.MessageStringOf(m)
}

func (*BatchGetUsersByEmailResponse) ProtoMessage() {}

func (m *BatchGetUsersByEmailResponse) ProtoReflect() preflect.Message {
	mi := &edgelq_iam_proto_v1alpha2_user_custom_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && m != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(m))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(m)
}

func (*BatchGetUsersByEmailResponse) GotenMessage() {}

// Deprecated, Use BatchGetUsersByEmailResponse.ProtoReflect.Descriptor instead.
func (*BatchGetUsersByEmailResponse) Descriptor() ([]byte, []int) {
	return edgelq_iam_proto_v1alpha2_user_custom_proto_rawDescGZIP(), []int{2}
}

func (m *BatchGetUsersByEmailResponse) Unmarshal(b []byte) error {
	return proto.Unmarshal(b, m)
}

func (m *BatchGetUsersByEmailResponse) Marshal() ([]byte, error) {
	return proto.Marshal(m)
}

func (m *BatchGetUsersByEmailResponse) MarshalJSON() ([]byte, error) {
	return protojson.MarshalOptions{}.Marshal(m)
}

func (m *BatchGetUsersByEmailResponse) UnmarshalJSON(data []byte) error {
	return protojson.Unmarshal(data, m)
}

func (m *BatchGetUsersByEmailResponse) GetUsers() []*user.User {
	if m != nil {
		return m.Users
	}
	return nil
}

func (m *BatchGetUsersByEmailResponse) GetMissing() []string {
	if m != nil {
		return m.Missing
	}
	return nil
}

func (m *BatchGetUsersByEmailResponse) SetUsers(fv []*user.User) {
	if m == nil {
		panic(fmt.Errorf("can't set %s on nil %s", "Users", "BatchGetUsersByEmailResponse"))
	}
	m.Users = fv
}

func (m *BatchGetUsersByEmailResponse) SetMissing(fv []string) {
	if m == nil {
		panic(fmt.Errorf("can't set %s on nil %s", "Missing", "BatchGetUsersByEmailResponse"))
	}
	m.Missing = fv
}

// Request message for method [GetMySettings][ntt.iam.v1alpha2.GetMySettings]
type GetMySettingsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
	// list of keys to retrieve
	Keys []string `protobuf:"bytes,1,rep,name=keys,proto3" json:"keys,omitempty" firestore:"keys"`
}

func (m *GetMySettingsRequest) Reset() {
	*m = GetMySettingsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &edgelq_iam_proto_v1alpha2_user_custom_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(m))
		ms.StoreMessageInfo(mi)
	}
}

func (m *GetMySettingsRequest) String() string {
	return protoimpl.X.MessageStringOf(m)
}

func (*GetMySettingsRequest) ProtoMessage() {}

func (m *GetMySettingsRequest) ProtoReflect() preflect.Message {
	mi := &edgelq_iam_proto_v1alpha2_user_custom_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && m != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(m))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(m)
}

func (*GetMySettingsRequest) GotenMessage() {}

// Deprecated, Use GetMySettingsRequest.ProtoReflect.Descriptor instead.
func (*GetMySettingsRequest) Descriptor() ([]byte, []int) {
	return edgelq_iam_proto_v1alpha2_user_custom_proto_rawDescGZIP(), []int{3}
}

func (m *GetMySettingsRequest) Unmarshal(b []byte) error {
	return proto.Unmarshal(b, m)
}

func (m *GetMySettingsRequest) Marshal() ([]byte, error) {
	return proto.Marshal(m)
}

func (m *GetMySettingsRequest) MarshalJSON() ([]byte, error) {
	return protojson.MarshalOptions{}.Marshal(m)
}

func (m *GetMySettingsRequest) UnmarshalJSON(data []byte) error {
	return protojson.Unmarshal(data, m)
}

func (m *GetMySettingsRequest) GetKeys() []string {
	if m != nil {
		return m.Keys
	}
	return nil
}

func (m *GetMySettingsRequest) SetKeys(fv []string) {
	if m == nil {
		panic(fmt.Errorf("can't set %s on nil %s", "Keys", "GetMySettingsRequest"))
	}
	m.Keys = fv
}

// Response message for method [GetMySettings][ntt.iam.v1alpha2.GetMySettings]
type GetMySettingsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
	// resulting settings
	Settings map[string]string `protobuf:"bytes,1,rep,name=settings,proto3" json:"settings,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3" firestore:"settings"`
}

func (m *GetMySettingsResponse) Reset() {
	*m = GetMySettingsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &edgelq_iam_proto_v1alpha2_user_custom_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(m))
		ms.StoreMessageInfo(mi)
	}
}

func (m *GetMySettingsResponse) String() string {
	return protoimpl.X.MessageStringOf(m)
}

func (*GetMySettingsResponse) ProtoMessage() {}

func (m *GetMySettingsResponse) ProtoReflect() preflect.Message {
	mi := &edgelq_iam_proto_v1alpha2_user_custom_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && m != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(m))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(m)
}

func (*GetMySettingsResponse) GotenMessage() {}

// Deprecated, Use GetMySettingsResponse.ProtoReflect.Descriptor instead.
func (*GetMySettingsResponse) Descriptor() ([]byte, []int) {
	return edgelq_iam_proto_v1alpha2_user_custom_proto_rawDescGZIP(), []int{4}
}

func (m *GetMySettingsResponse) Unmarshal(b []byte) error {
	return proto.Unmarshal(b, m)
}

func (m *GetMySettingsResponse) Marshal() ([]byte, error) {
	return proto.Marshal(m)
}

func (m *GetMySettingsResponse) MarshalJSON() ([]byte, error) {
	return protojson.MarshalOptions{}.Marshal(m)
}

func (m *GetMySettingsResponse) UnmarshalJSON(data []byte) error {
	return protojson.Unmarshal(data, m)
}

func (m *GetMySettingsResponse) GetSettings() map[string]string {
	if m != nil {
		return m.Settings
	}
	return nil
}

func (m *GetMySettingsResponse) SetSettings(fv map[string]string) {
	if m == nil {
		panic(fmt.Errorf("can't set %s on nil %s", "Settings", "GetMySettingsResponse"))
	}
	m.Settings = fv
}

// Request message for method [SetMySettings][ntt.iam.v1alpha2.SetMySettings]
type SetMySettingsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
	// Settings to update. Leave empty value to unset key
	Settings map[string]string `protobuf:"bytes,1,rep,name=settings,proto3" json:"settings,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3" firestore:"settings"`
}

func (m *SetMySettingsRequest) Reset() {
	*m = SetMySettingsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &edgelq_iam_proto_v1alpha2_user_custom_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(m))
		ms.StoreMessageInfo(mi)
	}
}

func (m *SetMySettingsRequest) String() string {
	return protoimpl.X.MessageStringOf(m)
}

func (*SetMySettingsRequest) ProtoMessage() {}

func (m *SetMySettingsRequest) ProtoReflect() preflect.Message {
	mi := &edgelq_iam_proto_v1alpha2_user_custom_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && m != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(m))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(m)
}

func (*SetMySettingsRequest) GotenMessage() {}

// Deprecated, Use SetMySettingsRequest.ProtoReflect.Descriptor instead.
func (*SetMySettingsRequest) Descriptor() ([]byte, []int) {
	return edgelq_iam_proto_v1alpha2_user_custom_proto_rawDescGZIP(), []int{5}
}

func (m *SetMySettingsRequest) Unmarshal(b []byte) error {
	return proto.Unmarshal(b, m)
}

func (m *SetMySettingsRequest) Marshal() ([]byte, error) {
	return proto.Marshal(m)
}

func (m *SetMySettingsRequest) MarshalJSON() ([]byte, error) {
	return protojson.MarshalOptions{}.Marshal(m)
}

func (m *SetMySettingsRequest) UnmarshalJSON(data []byte) error {
	return protojson.Unmarshal(data, m)
}

func (m *SetMySettingsRequest) GetSettings() map[string]string {
	if m != nil {
		return m.Settings
	}
	return nil
}

func (m *SetMySettingsRequest) SetSettings(fv map[string]string) {
	if m == nil {
		panic(fmt.Errorf("can't set %s on nil %s", "Settings", "SetMySettingsRequest"))
	}
	m.Settings = fv
}

// Request message for method
// [RefreshUserFromIdToken][ntt.iam.v1alpha2.RefreshUserFromIdToken]
type RefreshUserFromIdTokenRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
	// JWT-encoded ID token
	IdToken string `protobuf:"bytes,1,opt,name=id_token,json=idToken,proto3" json:"id_token,omitempty" firestore:"idToken"`
}

func (m *RefreshUserFromIdTokenRequest) Reset() {
	*m = RefreshUserFromIdTokenRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &edgelq_iam_proto_v1alpha2_user_custom_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(m))
		ms.StoreMessageInfo(mi)
	}
}

func (m *RefreshUserFromIdTokenRequest) String() string {
	return protoimpl.X.MessageStringOf(m)
}

func (*RefreshUserFromIdTokenRequest) ProtoMessage() {}

func (m *RefreshUserFromIdTokenRequest) ProtoReflect() preflect.Message {
	mi := &edgelq_iam_proto_v1alpha2_user_custom_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && m != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(m))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(m)
}

func (*RefreshUserFromIdTokenRequest) GotenMessage() {}

// Deprecated, Use RefreshUserFromIdTokenRequest.ProtoReflect.Descriptor instead.
func (*RefreshUserFromIdTokenRequest) Descriptor() ([]byte, []int) {
	return edgelq_iam_proto_v1alpha2_user_custom_proto_rawDescGZIP(), []int{6}
}

func (m *RefreshUserFromIdTokenRequest) Unmarshal(b []byte) error {
	return proto.Unmarshal(b, m)
}

func (m *RefreshUserFromIdTokenRequest) Marshal() ([]byte, error) {
	return proto.Marshal(m)
}

func (m *RefreshUserFromIdTokenRequest) MarshalJSON() ([]byte, error) {
	return protojson.MarshalOptions{}.Marshal(m)
}

func (m *RefreshUserFromIdTokenRequest) UnmarshalJSON(data []byte) error {
	return protojson.Unmarshal(data, m)
}

func (m *RefreshUserFromIdTokenRequest) GetIdToken() string {
	if m != nil {
		return m.IdToken
	}
	return ""
}

func (m *RefreshUserFromIdTokenRequest) SetIdToken(fv string) {
	if m == nil {
		panic(fmt.Errorf("can't set %s on nil %s", "IdToken", "RefreshUserFromIdTokenRequest"))
	}
	m.IdToken = fv
}

// Response message for method
// [RefreshUserFromIdToken][ntt.iam.v1alpha2.RefreshUserFromIdToken]
type RefreshUserFromIdTokenResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (m *RefreshUserFromIdTokenResponse) Reset() {
	*m = RefreshUserFromIdTokenResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &edgelq_iam_proto_v1alpha2_user_custom_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(m))
		ms.StoreMessageInfo(mi)
	}
}

func (m *RefreshUserFromIdTokenResponse) String() string {
	return protoimpl.X.MessageStringOf(m)
}

func (*RefreshUserFromIdTokenResponse) ProtoMessage() {}

func (m *RefreshUserFromIdTokenResponse) ProtoReflect() preflect.Message {
	mi := &edgelq_iam_proto_v1alpha2_user_custom_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && m != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(m))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(m)
}

func (*RefreshUserFromIdTokenResponse) GotenMessage() {}

// Deprecated, Use RefreshUserFromIdTokenResponse.ProtoReflect.Descriptor instead.
func (*RefreshUserFromIdTokenResponse) Descriptor() ([]byte, []int) {
	return edgelq_iam_proto_v1alpha2_user_custom_proto_rawDescGZIP(), []int{7}
}

func (m *RefreshUserFromIdTokenResponse) Unmarshal(b []byte) error {
	return proto.Unmarshal(b, m)
}

func (m *RefreshUserFromIdTokenResponse) Marshal() ([]byte, error) {
	return proto.Marshal(m)
}

func (m *RefreshUserFromIdTokenResponse) MarshalJSON() ([]byte, error) {
	return protojson.MarshalOptions{}.Marshal(m)
}

func (m *RefreshUserFromIdTokenResponse) UnmarshalJSON(data []byte) error {
	return protojson.Unmarshal(data, m)
}

// Request message for method
// [ResendVerificationEmail][ntt.iam.v1alpha2.ResendVerificationEmail]
type ResendVerificationEmailRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (m *ResendVerificationEmailRequest) Reset() {
	*m = ResendVerificationEmailRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &edgelq_iam_proto_v1alpha2_user_custom_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(m))
		ms.StoreMessageInfo(mi)
	}
}

func (m *ResendVerificationEmailRequest) String() string {
	return protoimpl.X.MessageStringOf(m)
}

func (*ResendVerificationEmailRequest) ProtoMessage() {}

func (m *ResendVerificationEmailRequest) ProtoReflect() preflect.Message {
	mi := &edgelq_iam_proto_v1alpha2_user_custom_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && m != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(m))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(m)
}

func (*ResendVerificationEmailRequest) GotenMessage() {}

// Deprecated, Use ResendVerificationEmailRequest.ProtoReflect.Descriptor instead.
func (*ResendVerificationEmailRequest) Descriptor() ([]byte, []int) {
	return edgelq_iam_proto_v1alpha2_user_custom_proto_rawDescGZIP(), []int{8}
}

func (m *ResendVerificationEmailRequest) Unmarshal(b []byte) error {
	return proto.Unmarshal(b, m)
}

func (m *ResendVerificationEmailRequest) Marshal() ([]byte, error) {
	return proto.Marshal(m)
}

func (m *ResendVerificationEmailRequest) MarshalJSON() ([]byte, error) {
	return protojson.MarshalOptions{}.Marshal(m)
}

func (m *ResendVerificationEmailRequest) UnmarshalJSON(data []byte) error {
	return protojson.Unmarshal(data, m)
}

// Request message for method
// [ResetMFAIfRecoveryKeyUsed][ntt.iam.v1alpha2.ResetMFAIfRecoveryKeyUsed]
type ResetMFAIfRecoveryKeyUsedRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (m *ResetMFAIfRecoveryKeyUsedRequest) Reset() {
	*m = ResetMFAIfRecoveryKeyUsedRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &edgelq_iam_proto_v1alpha2_user_custom_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(m))
		ms.StoreMessageInfo(mi)
	}
}

func (m *ResetMFAIfRecoveryKeyUsedRequest) String() string {
	return protoimpl.X.MessageStringOf(m)
}

func (*ResetMFAIfRecoveryKeyUsedRequest) ProtoMessage() {}

func (m *ResetMFAIfRecoveryKeyUsedRequest) ProtoReflect() preflect.Message {
	mi := &edgelq_iam_proto_v1alpha2_user_custom_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && m != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(m))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(m)
}

func (*ResetMFAIfRecoveryKeyUsedRequest) GotenMessage() {}

// Deprecated, Use ResetMFAIfRecoveryKeyUsedRequest.ProtoReflect.Descriptor instead.
func (*ResetMFAIfRecoveryKeyUsedRequest) Descriptor() ([]byte, []int) {
	return edgelq_iam_proto_v1alpha2_user_custom_proto_rawDescGZIP(), []int{9}
}

func (m *ResetMFAIfRecoveryKeyUsedRequest) Unmarshal(b []byte) error {
	return proto.Unmarshal(b, m)
}

func (m *ResetMFAIfRecoveryKeyUsedRequest) Marshal() ([]byte, error) {
	return proto.Marshal(m)
}

func (m *ResetMFAIfRecoveryKeyUsedRequest) MarshalJSON() ([]byte, error) {
	return protojson.MarshalOptions{}.Marshal(m)
}

func (m *ResetMFAIfRecoveryKeyUsedRequest) UnmarshalJSON(data []byte) error {
	return protojson.Unmarshal(data, m)
}

var edgelq_iam_proto_v1alpha2_user_custom_proto preflect.FileDescriptor

var edgelq_iam_proto_v1alpha2_user_custom_proto_rawDesc = []byte{
	0x0a, 0x2b, 0x65, 0x64, 0x67, 0x65, 0x6c, 0x71, 0x2f, 0x69, 0x61, 0x6d, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x32, 0x2f, 0x75, 0x73, 0x65, 0x72,
	0x5f, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x10, 0x6e,
	0x74, 0x74, 0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x32, 0x1a,
	0x20, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x6d, 0x61, 0x73, 0x6b, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x20, 0x67, 0x6f, 0x74, 0x65, 0x6e, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x1d, 0x67, 0x6f, 0x74, 0x65, 0x6e, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x67, 0x6f, 0x74, 0x65, 0x6e, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x1b, 0x67, 0x6f, 0x74, 0x65, 0x6e, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x63, 0x6c, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x1c, 0x67, 0x6f, 0x74, 0x65, 0x6e, 0x2f, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x2f, 0x61,
	0x70, 0x69, 0x2f, 0x76, 0x69, 0x65, 0x77, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x24, 0x65,
	0x64, 0x67, 0x65, 0x6c, 0x71, 0x2f, 0x69, 0x61, 0x6d, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f,
	0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x32, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x2b, 0x65, 0x64, 0x67, 0x65, 0x6c, 0x71, 0x2f, 0x69, 0x61, 0x6d, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x32, 0x2f, 0x75,
	0x73, 0x65, 0x72, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x20, 0x65, 0x64, 0x67, 0x65, 0x6c, 0x71, 0x2f, 0x69, 0x61, 0x6d, 0x2f, 0x61, 0x6e, 0x6e,
	0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x69, 0x61, 0x6d, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x24, 0x65, 0x64, 0x67, 0x65, 0x6c, 0x71, 0x2f, 0x61, 0x75, 0x64, 0x69, 0x74,
	0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x61, 0x75, 0x64,
	0x69, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x34, 0x65, 0x64, 0x67, 0x65, 0x6c, 0x71,
	0x2f, 0x6d, 0x65, 0x74, 0x61, 0x2f, 0x63, 0x6f, 0x6d, 0x70, 0x69, 0x6c, 0x65, 0x72, 0x73, 0x2f,
	0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x6d, 0x75, 0x6c, 0x74,
	0x69, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xbb,
	0x01, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x42, 0x79, 0x45, 0x6d, 0x61, 0x69,
	0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69,
	0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x47,
	0x0a, 0x0a, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x6d, 0x61, 0x73, 0x6b, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4d, 0x61, 0x73, 0x6b, 0x42, 0x0c,
	0xb2, 0xda, 0x21, 0x08, 0x32, 0x06, 0x0a, 0x04, 0x55, 0x73, 0x65, 0x72, 0x52, 0x09, 0x66, 0x69,
	0x65, 0x6c, 0x64, 0x4d, 0x61, 0x73, 0x6b, 0x12, 0x24, 0x0a, 0x04, 0x76, 0x69, 0x65, 0x77, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x10, 0x2e, 0x67, 0x6f, 0x74, 0x65, 0x6e, 0x2e, 0x76, 0x69,
	0x65, 0x77, 0x2e, 0x56, 0x69, 0x65, 0x77, 0x52, 0x04, 0x76, 0x69, 0x65, 0x77, 0x12, 0x1d, 0x0a,
	0x0a, 0x73, 0x6b, 0x69, 0x70, 0x5f, 0x63, 0x61, 0x63, 0x68, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x09, 0x73, 0x6b, 0x69, 0x70, 0x43, 0x61, 0x63, 0x68, 0x65, 0x22, 0xc3, 0x01, 0x0a,
	0x1b, 0x42, 0x61, 0x74, 0x63, 0x68, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x73, 0x42, 0x79,
	0x45, 0x6d, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06,
	0x65, 0x6d, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x65, 0x6d,
	0x61, 0x69, 0x6c, 0x73, 0x12, 0x47, 0x0a, 0x0a, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x6d, 0x61,
	0x73, 0x6b, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64,
	0x4d, 0x61, 0x73, 0x6b, 0x42, 0x0c, 0xb2, 0xda, 0x21, 0x08, 0x32, 0x06, 0x0a, 0x04, 0x55, 0x73,
	0x65, 0x72, 0x52, 0x09, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x4d, 0x61, 0x73, 0x6b, 0x12, 0x24, 0x0a,
	0x04, 0x76, 0x69, 0x65, 0x77, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x10, 0x2e, 0x67, 0x6f,
	0x74, 0x65, 0x6e, 0x2e, 0x76, 0x69, 0x65, 0x77, 0x2e, 0x56, 0x69, 0x65, 0x77, 0x52, 0x04, 0x76,
	0x69, 0x65, 0x77, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x6b, 0x69, 0x70, 0x5f, 0x63, 0x61, 0x63, 0x68,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x73, 0x6b, 0x69, 0x70, 0x43, 0x61, 0x63,
	0x68, 0x65, 0x22, 0x66, 0x0a, 0x1c, 0x42, 0x61, 0x74, 0x63, 0x68, 0x47, 0x65, 0x74, 0x55, 0x73,
	0x65, 0x72, 0x73, 0x42, 0x79, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x2c, 0x0a, 0x05, 0x75, 0x73, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x16, 0x2e, 0x6e, 0x74, 0x74, 0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x76, 0x31, 0x61, 0x6c,
	0x70, 0x68, 0x61, 0x32, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x05, 0x75, 0x73, 0x65, 0x72, 0x73,
	0x12, 0x18, 0x0a, 0x07, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6e, 0x67, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x07, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6e, 0x67, 0x22, 0x30, 0x0a, 0x14, 0x47, 0x65,
	0x74, 0x4d, 0x79, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x18, 0x0a, 0x04, 0x6b, 0x65, 0x79, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09,
	0x42, 0x04, 0xc8, 0xd5, 0x22, 0x01, 0x52, 0x04, 0x6b, 0x65, 0x79, 0x73, 0x22, 0xa7, 0x01, 0x0a,
	0x15, 0x47, 0x65, 0x74, 0x4d, 0x79, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x51, 0x0a, 0x08, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e,
	0x67, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x35, 0x2e, 0x6e, 0x74, 0x74, 0x2e, 0x69,
	0x61, 0x6d, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x32, 0x2e, 0x47, 0x65, 0x74, 0x4d,
	0x79, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x2e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52,
	0x08, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x1a, 0x3b, 0x0a, 0x0d, 0x53, 0x65, 0x74,
	0x74, 0x69, 0x6e, 0x67, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xab, 0x01, 0x0a, 0x14, 0x53, 0x65, 0x74, 0x4d, 0x79,
	0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x56, 0x0a, 0x08, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x34, 0x2e, 0x6e, 0x74, 0x74, 0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x76, 0x31, 0x61, 0x6c,
	0x70, 0x68, 0x61, 0x32, 0x2e, 0x53, 0x65, 0x74, 0x4d, 0x79, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e,
	0x67, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e,
	0x67, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x42, 0x04, 0xc8, 0xd5, 0x22, 0x01, 0x52, 0x08, 0x73,
	0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x1a, 0x3b, 0x0a, 0x0d, 0x53, 0x65, 0x74, 0x74, 0x69,
	0x6e, 0x67, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x3a, 0x02, 0x38, 0x01, 0x22, 0x3a, 0x0a, 0x1d, 0x52, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x55,
	0x73, 0x65, 0x72, 0x46, 0x72, 0x6f, 0x6d, 0x49, 0x64, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x69, 0x64, 0x5f, 0x74, 0x6f, 0x6b, 0x65,
	0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x69, 0x64, 0x54, 0x6f, 0x6b, 0x65, 0x6e,
	0x22, 0x20, 0x0a, 0x1e, 0x52, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x55, 0x73, 0x65, 0x72, 0x46,
	0x72, 0x6f, 0x6d, 0x49, 0x64, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x20, 0x0a, 0x1e, 0x52, 0x65, 0x73, 0x65, 0x6e, 0x64, 0x56, 0x65, 0x72, 0x69,
	0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x22, 0x22, 0x0a, 0x20, 0x52, 0x65, 0x73, 0x65, 0x74, 0x4d, 0x46, 0x41,
	0x49, 0x66, 0x52, 0x65, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x79, 0x4b, 0x65, 0x79, 0x55, 0x73, 0x65,
	0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x42, 0xbc, 0x01, 0xe8, 0xde, 0x21, 0x01, 0x0a,
	0x17, 0x63, 0x6f, 0x6d, 0x2e, 0x6e, 0x74, 0x74, 0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x70, 0x62, 0x2e,
	0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x32, 0x42, 0x0f, 0x55, 0x73, 0x65, 0x72, 0x43, 0x75,
	0x73, 0x74, 0x6f, 0x6d, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x00, 0x5a, 0x3f, 0x67, 0x69, 0x74,
	0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x77, 0x61, 0x6e,
	0x2f, 0x65, 0x64, 0x67, 0x65, 0x6c, 0x71, 0x2f, 0x69, 0x61, 0x6d, 0x2f, 0x63, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x32, 0x2f, 0x75, 0x73, 0x65, 0x72,
	0x3b, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0xd2, 0x84, 0xd1, 0x02,
	0x46, 0x0a, 0x0d, 0x61, 0x75, 0x64, 0x69, 0x74, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x73,
	0x12, 0x35, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x6c, 0x6f,
	0x75, 0x64, 0x77, 0x61, 0x6e, 0x2f, 0x65, 0x64, 0x67, 0x65, 0x6c, 0x71, 0x2f, 0x69, 0x61, 0x6d,
	0x2f, 0x61, 0x75, 0x64, 0x69, 0x74, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x73, 0x2f, 0x76,
	0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x32, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	edgelq_iam_proto_v1alpha2_user_custom_proto_rawDescOnce sync.Once
	edgelq_iam_proto_v1alpha2_user_custom_proto_rawDescData = edgelq_iam_proto_v1alpha2_user_custom_proto_rawDesc
)

func edgelq_iam_proto_v1alpha2_user_custom_proto_rawDescGZIP() []byte {
	edgelq_iam_proto_v1alpha2_user_custom_proto_rawDescOnce.Do(func() {
		edgelq_iam_proto_v1alpha2_user_custom_proto_rawDescData = protoimpl.X.CompressGZIP(edgelq_iam_proto_v1alpha2_user_custom_proto_rawDescData)
	})
	return edgelq_iam_proto_v1alpha2_user_custom_proto_rawDescData
}

var edgelq_iam_proto_v1alpha2_user_custom_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var edgelq_iam_proto_v1alpha2_user_custom_proto_goTypes = []interface{}{
	(*GetUserByEmailRequest)(nil),            // 0: ntt.iam.v1alpha2.GetUserByEmailRequest
	(*BatchGetUsersByEmailRequest)(nil),      // 1: ntt.iam.v1alpha2.BatchGetUsersByEmailRequest
	(*BatchGetUsersByEmailResponse)(nil),     // 2: ntt.iam.v1alpha2.BatchGetUsersByEmailResponse
	(*GetMySettingsRequest)(nil),             // 3: ntt.iam.v1alpha2.GetMySettingsRequest
	(*GetMySettingsResponse)(nil),            // 4: ntt.iam.v1alpha2.GetMySettingsResponse
	(*SetMySettingsRequest)(nil),             // 5: ntt.iam.v1alpha2.SetMySettingsRequest
	(*RefreshUserFromIdTokenRequest)(nil),    // 6: ntt.iam.v1alpha2.RefreshUserFromIdTokenRequest
	(*RefreshUserFromIdTokenResponse)(nil),   // 7: ntt.iam.v1alpha2.RefreshUserFromIdTokenResponse
	(*ResendVerificationEmailRequest)(nil),   // 8: ntt.iam.v1alpha2.ResendVerificationEmailRequest
	(*ResetMFAIfRecoveryKeyUsedRequest)(nil), // 9: ntt.iam.v1alpha2.ResetMFAIfRecoveryKeyUsedRequest
	nil,                                      // 10: ntt.iam.v1alpha2.GetMySettingsResponse.SettingsEntry
	nil,                                      // 11: ntt.iam.v1alpha2.SetMySettingsRequest.SettingsEntry
	(*user.User_FieldMask)(nil),              // 12: ntt.iam.v1alpha2.User_FieldMask
	(view.View)(0),                           // 13: goten.view.View
	(*user.User)(nil),                        // 14: ntt.iam.v1alpha2.User
}
var edgelq_iam_proto_v1alpha2_user_custom_proto_depIdxs = []int32{
	12, // 0: ntt.iam.v1alpha2.GetUserByEmailRequest.field_mask:type_name -> ntt.iam.v1alpha2.User_FieldMask
	13, // 1: ntt.iam.v1alpha2.GetUserByEmailRequest.view:type_name -> goten.view.View
	12, // 2: ntt.iam.v1alpha2.BatchGetUsersByEmailRequest.field_mask:type_name -> ntt.iam.v1alpha2.User_FieldMask
	13, // 3: ntt.iam.v1alpha2.BatchGetUsersByEmailRequest.view:type_name -> goten.view.View
	14, // 4: ntt.iam.v1alpha2.BatchGetUsersByEmailResponse.users:type_name -> ntt.iam.v1alpha2.User
	10, // 5: ntt.iam.v1alpha2.GetMySettingsResponse.settings:type_name -> ntt.iam.v1alpha2.GetMySettingsResponse.SettingsEntry
	11, // 6: ntt.iam.v1alpha2.SetMySettingsRequest.settings:type_name -> ntt.iam.v1alpha2.SetMySettingsRequest.SettingsEntry
	7,  // [7:7] is the sub-list for method output_type
	7,  // [7:7] is the sub-list for method input_type
	7,  // [7:7] is the sub-list for extension type_name
	7,  // [7:7] is the sub-list for extension extendee
	0,  // [0:7] is the sub-list for field type_name
}

func init() { edgelq_iam_proto_v1alpha2_user_custom_proto_init() }
func edgelq_iam_proto_v1alpha2_user_custom_proto_init() {
	if edgelq_iam_proto_v1alpha2_user_custom_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {

		edgelq_iam_proto_v1alpha2_user_custom_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserByEmailRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		edgelq_iam_proto_v1alpha2_user_custom_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BatchGetUsersByEmailRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		edgelq_iam_proto_v1alpha2_user_custom_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BatchGetUsersByEmailResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		edgelq_iam_proto_v1alpha2_user_custom_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMySettingsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		edgelq_iam_proto_v1alpha2_user_custom_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMySettingsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		edgelq_iam_proto_v1alpha2_user_custom_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetMySettingsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		edgelq_iam_proto_v1alpha2_user_custom_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RefreshUserFromIdTokenRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		edgelq_iam_proto_v1alpha2_user_custom_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RefreshUserFromIdTokenResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		edgelq_iam_proto_v1alpha2_user_custom_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResendVerificationEmailRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		edgelq_iam_proto_v1alpha2_user_custom_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResetMFAIfRecoveryKeyUsedRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}

	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: edgelq_iam_proto_v1alpha2_user_custom_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           edgelq_iam_proto_v1alpha2_user_custom_proto_goTypes,
		DependencyIndexes: edgelq_iam_proto_v1alpha2_user_custom_proto_depIdxs,
		MessageInfos:      edgelq_iam_proto_v1alpha2_user_custom_proto_msgTypes,
	}.Build()
	edgelq_iam_proto_v1alpha2_user_custom_proto = out.File
	edgelq_iam_proto_v1alpha2_user_custom_proto_rawDesc = nil
	edgelq_iam_proto_v1alpha2_user_custom_proto_goTypes = nil
	edgelq_iam_proto_v1alpha2_user_custom_proto_depIdxs = nil
}
