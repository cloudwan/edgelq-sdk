// Code generated by protoc-gen-goten-object
// File: edgelq/iam/proto/v1alpha2/user_service.proto
// DO NOT EDIT!!!

package user_client

// proto imports
import (
	ntt_meta "github.com/cloudwan/edgelq-sdk/common/types/meta"
	user "github.com/cloudwan/edgelq-sdk/iam/resources/v1alpha2/user"
	view "github.com/cloudwan/goten-sdk/runtime/api/view"
	watch_type "github.com/cloudwan/goten-sdk/runtime/api/watch_type"
	empty "github.com/golang/protobuf/ptypes/empty"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	field_mask "google.golang.org/genproto/protobuf/field_mask"
)

// make sure we're using proto imports
var (
	_ = &ntt_meta.Meta{}
	_ = &user.User{}
	_ = &empty.Empty{}
	_ = &field_mask.FieldMask{}
	_ = &timestamp.Timestamp{}
	_ = view.View(0)
	_ = watch_type.WatchType(0)
)

type GetUserRequestFieldPathBuilder struct{}

func NewGetUserRequestFieldPathBuilder() GetUserRequestFieldPathBuilder {
	return GetUserRequestFieldPathBuilder{}
}
func (GetUserRequestFieldPathBuilder) Name() GetUserRequestPathSelectorName {
	return GetUserRequestPathSelectorName{}
}
func (GetUserRequestFieldPathBuilder) FieldMask() GetUserRequestPathSelectorFieldMask {
	return GetUserRequestPathSelectorFieldMask{}
}
func (GetUserRequestFieldPathBuilder) View() GetUserRequestPathSelectorView {
	return GetUserRequestPathSelectorView{}
}

type GetUserRequestPathSelectorName struct{}

func (GetUserRequestPathSelectorName) FieldPath() *GetUserRequest_FieldTerminalPath {
	return &GetUserRequest_FieldTerminalPath{selector: GetUserRequest_FieldPathSelectorName}
}

func (s GetUserRequestPathSelectorName) WithValue(value *user.Reference) *GetUserRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*GetUserRequest_FieldTerminalPathValue)
}

func (s GetUserRequestPathSelectorName) WithArrayOfValues(values []*user.Reference) *GetUserRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*GetUserRequest_FieldTerminalPathArrayOfValues)
}

type GetUserRequestPathSelectorFieldMask struct{}

func (GetUserRequestPathSelectorFieldMask) FieldPath() *GetUserRequest_FieldTerminalPath {
	return &GetUserRequest_FieldTerminalPath{selector: GetUserRequest_FieldPathSelectorFieldMask}
}

func (s GetUserRequestPathSelectorFieldMask) WithValue(value *user.User_FieldMask) *GetUserRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*GetUserRequest_FieldTerminalPathValue)
}

func (s GetUserRequestPathSelectorFieldMask) WithArrayOfValues(values []*user.User_FieldMask) *GetUserRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*GetUserRequest_FieldTerminalPathArrayOfValues)
}

type GetUserRequestPathSelectorView struct{}

func (GetUserRequestPathSelectorView) FieldPath() *GetUserRequest_FieldTerminalPath {
	return &GetUserRequest_FieldTerminalPath{selector: GetUserRequest_FieldPathSelectorView}
}

func (s GetUserRequestPathSelectorView) WithValue(value view.View) *GetUserRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*GetUserRequest_FieldTerminalPathValue)
}

func (s GetUserRequestPathSelectorView) WithArrayOfValues(values []view.View) *GetUserRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*GetUserRequest_FieldTerminalPathArrayOfValues)
}

type BatchGetUsersRequestFieldPathBuilder struct{}

func NewBatchGetUsersRequestFieldPathBuilder() BatchGetUsersRequestFieldPathBuilder {
	return BatchGetUsersRequestFieldPathBuilder{}
}
func (BatchGetUsersRequestFieldPathBuilder) Names() BatchGetUsersRequestPathSelectorNames {
	return BatchGetUsersRequestPathSelectorNames{}
}
func (BatchGetUsersRequestFieldPathBuilder) FieldMask() BatchGetUsersRequestPathSelectorFieldMask {
	return BatchGetUsersRequestPathSelectorFieldMask{}
}
func (BatchGetUsersRequestFieldPathBuilder) View() BatchGetUsersRequestPathSelectorView {
	return BatchGetUsersRequestPathSelectorView{}
}

type BatchGetUsersRequestPathSelectorNames struct{}

func (BatchGetUsersRequestPathSelectorNames) FieldPath() *BatchGetUsersRequest_FieldTerminalPath {
	return &BatchGetUsersRequest_FieldTerminalPath{selector: BatchGetUsersRequest_FieldPathSelectorNames}
}

func (s BatchGetUsersRequestPathSelectorNames) WithValue(value []*user.Reference) *BatchGetUsersRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetUsersRequest_FieldTerminalPathValue)
}

func (s BatchGetUsersRequestPathSelectorNames) WithArrayOfValues(values [][]*user.Reference) *BatchGetUsersRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetUsersRequest_FieldTerminalPathArrayOfValues)
}

func (s BatchGetUsersRequestPathSelectorNames) WithItemValue(value *user.Reference) *BatchGetUsersRequest_FieldTerminalPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*BatchGetUsersRequest_FieldTerminalPathArrayItemValue)
}

type BatchGetUsersRequestPathSelectorFieldMask struct{}

func (BatchGetUsersRequestPathSelectorFieldMask) FieldPath() *BatchGetUsersRequest_FieldTerminalPath {
	return &BatchGetUsersRequest_FieldTerminalPath{selector: BatchGetUsersRequest_FieldPathSelectorFieldMask}
}

func (s BatchGetUsersRequestPathSelectorFieldMask) WithValue(value *user.User_FieldMask) *BatchGetUsersRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetUsersRequest_FieldTerminalPathValue)
}

func (s BatchGetUsersRequestPathSelectorFieldMask) WithArrayOfValues(values []*user.User_FieldMask) *BatchGetUsersRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetUsersRequest_FieldTerminalPathArrayOfValues)
}

type BatchGetUsersRequestPathSelectorView struct{}

func (BatchGetUsersRequestPathSelectorView) FieldPath() *BatchGetUsersRequest_FieldTerminalPath {
	return &BatchGetUsersRequest_FieldTerminalPath{selector: BatchGetUsersRequest_FieldPathSelectorView}
}

func (s BatchGetUsersRequestPathSelectorView) WithValue(value view.View) *BatchGetUsersRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetUsersRequest_FieldTerminalPathValue)
}

func (s BatchGetUsersRequestPathSelectorView) WithArrayOfValues(values []view.View) *BatchGetUsersRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetUsersRequest_FieldTerminalPathArrayOfValues)
}

type BatchGetUsersResponseFieldPathBuilder struct{}

func NewBatchGetUsersResponseFieldPathBuilder() BatchGetUsersResponseFieldPathBuilder {
	return BatchGetUsersResponseFieldPathBuilder{}
}
func (BatchGetUsersResponseFieldPathBuilder) Users() BatchGetUsersResponsePathSelectorUsers {
	return BatchGetUsersResponsePathSelectorUsers{}
}
func (BatchGetUsersResponseFieldPathBuilder) Missing() BatchGetUsersResponsePathSelectorMissing {
	return BatchGetUsersResponsePathSelectorMissing{}
}

type BatchGetUsersResponsePathSelectorUsers struct{}

func (BatchGetUsersResponsePathSelectorUsers) FieldPath() *BatchGetUsersResponse_FieldTerminalPath {
	return &BatchGetUsersResponse_FieldTerminalPath{selector: BatchGetUsersResponse_FieldPathSelectorUsers}
}

func (s BatchGetUsersResponsePathSelectorUsers) WithValue(value []*user.User) *BatchGetUsersResponse_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetUsersResponse_FieldTerminalPathValue)
}

func (s BatchGetUsersResponsePathSelectorUsers) WithArrayOfValues(values [][]*user.User) *BatchGetUsersResponse_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetUsersResponse_FieldTerminalPathArrayOfValues)
}

func (s BatchGetUsersResponsePathSelectorUsers) WithItemValue(value *user.User) *BatchGetUsersResponse_FieldTerminalPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*BatchGetUsersResponse_FieldTerminalPathArrayItemValue)
}
func (BatchGetUsersResponsePathSelectorUsers) WithSubPath(subPath user.User_FieldPath) *BatchGetUsersResponse_FieldSubPath {
	return &BatchGetUsersResponse_FieldSubPath{selector: BatchGetUsersResponse_FieldPathSelectorUsers, subPath: subPath}
}

func (s BatchGetUsersResponsePathSelectorUsers) WithSubValue(subPathValue user.User_FieldPathValue) *BatchGetUsersResponse_FieldSubPathValue {
	return &BatchGetUsersResponse_FieldSubPathValue{BatchGetUsersResponse_FieldPath: s.WithSubPath(subPathValue), subPathValue: subPathValue}
}

func (s BatchGetUsersResponsePathSelectorUsers) WithSubArrayOfValues(subPathArrayOfValues user.User_FieldPathArrayOfValues) *BatchGetUsersResponse_FieldSubPathArrayOfValues {
	return &BatchGetUsersResponse_FieldSubPathArrayOfValues{BatchGetUsersResponse_FieldPath: s.WithSubPath(subPathArrayOfValues), subPathArrayOfValues: subPathArrayOfValues}
}

func (s BatchGetUsersResponsePathSelectorUsers) WithSubArrayItemValue(subPathArrayItemValue user.User_FieldPathArrayItemValue) *BatchGetUsersResponse_FieldSubPathArrayItemValue {
	return &BatchGetUsersResponse_FieldSubPathArrayItemValue{BatchGetUsersResponse_FieldPath: s.WithSubPath(subPathArrayItemValue), subPathItemValue: subPathArrayItemValue}
}

func (BatchGetUsersResponsePathSelectorUsers) Name() BatchGetUsersResponsePathSelectorUsersName {
	return BatchGetUsersResponsePathSelectorUsersName{}
}

func (BatchGetUsersResponsePathSelectorUsers) FullName() BatchGetUsersResponsePathSelectorUsersFullName {
	return BatchGetUsersResponsePathSelectorUsersFullName{}
}

func (BatchGetUsersResponsePathSelectorUsers) Metadata() BatchGetUsersResponsePathSelectorUsersMetadata {
	return BatchGetUsersResponsePathSelectorUsersMetadata{}
}

func (BatchGetUsersResponsePathSelectorUsers) Email() BatchGetUsersResponsePathSelectorUsersEmail {
	return BatchGetUsersResponsePathSelectorUsersEmail{}
}

func (BatchGetUsersResponsePathSelectorUsers) EmailVerified() BatchGetUsersResponsePathSelectorUsersEmailVerified {
	return BatchGetUsersResponsePathSelectorUsersEmailVerified{}
}

func (BatchGetUsersResponsePathSelectorUsers) AuthInfo() BatchGetUsersResponsePathSelectorUsersAuthInfo {
	return BatchGetUsersResponsePathSelectorUsersAuthInfo{}
}

func (BatchGetUsersResponsePathSelectorUsers) Settings() BatchGetUsersResponsePathSelectorUsersSettings {
	return BatchGetUsersResponsePathSelectorUsersSettings{}
}

func (BatchGetUsersResponsePathSelectorUsers) RefreshedTime() BatchGetUsersResponsePathSelectorUsersRefreshedTime {
	return BatchGetUsersResponsePathSelectorUsersRefreshedTime{}
}

type BatchGetUsersResponsePathSelectorUsersName struct{}

func (BatchGetUsersResponsePathSelectorUsersName) FieldPath() *BatchGetUsersResponse_FieldSubPath {
	return &BatchGetUsersResponse_FieldSubPath{
		selector: BatchGetUsersResponse_FieldPathSelectorUsers,
		subPath:  user.NewUserFieldPathBuilder().Name().FieldPath(),
	}
}

func (s BatchGetUsersResponsePathSelectorUsersName) WithValue(value *user.Name) *BatchGetUsersResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetUsersResponse_FieldSubPathValue)
}

func (s BatchGetUsersResponsePathSelectorUsersName) WithArrayOfValues(values []*user.Name) *BatchGetUsersResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetUsersResponse_FieldSubPathArrayOfValues)
}

type BatchGetUsersResponsePathSelectorUsersFullName struct{}

func (BatchGetUsersResponsePathSelectorUsersFullName) FieldPath() *BatchGetUsersResponse_FieldSubPath {
	return &BatchGetUsersResponse_FieldSubPath{
		selector: BatchGetUsersResponse_FieldPathSelectorUsers,
		subPath:  user.NewUserFieldPathBuilder().FullName().FieldPath(),
	}
}

func (s BatchGetUsersResponsePathSelectorUsersFullName) WithValue(value string) *BatchGetUsersResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetUsersResponse_FieldSubPathValue)
}

func (s BatchGetUsersResponsePathSelectorUsersFullName) WithArrayOfValues(values []string) *BatchGetUsersResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetUsersResponse_FieldSubPathArrayOfValues)
}

type BatchGetUsersResponsePathSelectorUsersMetadata struct{}

func (BatchGetUsersResponsePathSelectorUsersMetadata) FieldPath() *BatchGetUsersResponse_FieldSubPath {
	return &BatchGetUsersResponse_FieldSubPath{
		selector: BatchGetUsersResponse_FieldPathSelectorUsers,
		subPath:  user.NewUserFieldPathBuilder().Metadata().FieldPath(),
	}
}

func (s BatchGetUsersResponsePathSelectorUsersMetadata) WithValue(value *ntt_meta.Meta) *BatchGetUsersResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetUsersResponse_FieldSubPathValue)
}

func (s BatchGetUsersResponsePathSelectorUsersMetadata) WithArrayOfValues(values []*ntt_meta.Meta) *BatchGetUsersResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetUsersResponse_FieldSubPathArrayOfValues)
}

func (BatchGetUsersResponsePathSelectorUsersMetadata) CreateTime() BatchGetUsersResponsePathSelectorUsersMetadataCreateTime {
	return BatchGetUsersResponsePathSelectorUsersMetadataCreateTime{}
}

func (BatchGetUsersResponsePathSelectorUsersMetadata) UpdateTime() BatchGetUsersResponsePathSelectorUsersMetadataUpdateTime {
	return BatchGetUsersResponsePathSelectorUsersMetadataUpdateTime{}
}

func (BatchGetUsersResponsePathSelectorUsersMetadata) DeleteTime() BatchGetUsersResponsePathSelectorUsersMetadataDeleteTime {
	return BatchGetUsersResponsePathSelectorUsersMetadataDeleteTime{}
}

func (BatchGetUsersResponsePathSelectorUsersMetadata) Uuid() BatchGetUsersResponsePathSelectorUsersMetadataUuid {
	return BatchGetUsersResponsePathSelectorUsersMetadataUuid{}
}

func (BatchGetUsersResponsePathSelectorUsersMetadata) Tags() BatchGetUsersResponsePathSelectorUsersMetadataTags {
	return BatchGetUsersResponsePathSelectorUsersMetadataTags{}
}

func (BatchGetUsersResponsePathSelectorUsersMetadata) Labels() BatchGetUsersResponsePathSelectorUsersMetadataLabels {
	return BatchGetUsersResponsePathSelectorUsersMetadataLabels{}
}

func (BatchGetUsersResponsePathSelectorUsersMetadata) Annotations() BatchGetUsersResponsePathSelectorUsersMetadataAnnotations {
	return BatchGetUsersResponsePathSelectorUsersMetadataAnnotations{}
}

func (BatchGetUsersResponsePathSelectorUsersMetadata) Generation() BatchGetUsersResponsePathSelectorUsersMetadataGeneration {
	return BatchGetUsersResponsePathSelectorUsersMetadataGeneration{}
}

func (BatchGetUsersResponsePathSelectorUsersMetadata) ResourceVersion() BatchGetUsersResponsePathSelectorUsersMetadataResourceVersion {
	return BatchGetUsersResponsePathSelectorUsersMetadataResourceVersion{}
}

func (BatchGetUsersResponsePathSelectorUsersMetadata) OwnerReferences() BatchGetUsersResponsePathSelectorUsersMetadataOwnerReferences {
	return BatchGetUsersResponsePathSelectorUsersMetadataOwnerReferences{}
}

func (BatchGetUsersResponsePathSelectorUsersMetadata) Shards() BatchGetUsersResponsePathSelectorUsersMetadataShards {
	return BatchGetUsersResponsePathSelectorUsersMetadataShards{}
}

func (BatchGetUsersResponsePathSelectorUsersMetadata) Syncing() BatchGetUsersResponsePathSelectorUsersMetadataSyncing {
	return BatchGetUsersResponsePathSelectorUsersMetadataSyncing{}
}

func (BatchGetUsersResponsePathSelectorUsersMetadata) Lifecycle() BatchGetUsersResponsePathSelectorUsersMetadataLifecycle {
	return BatchGetUsersResponsePathSelectorUsersMetadataLifecycle{}
}

type BatchGetUsersResponsePathSelectorUsersMetadataCreateTime struct{}

func (BatchGetUsersResponsePathSelectorUsersMetadataCreateTime) FieldPath() *BatchGetUsersResponse_FieldSubPath {
	return &BatchGetUsersResponse_FieldSubPath{
		selector: BatchGetUsersResponse_FieldPathSelectorUsers,
		subPath:  user.NewUserFieldPathBuilder().Metadata().CreateTime().FieldPath(),
	}
}

func (s BatchGetUsersResponsePathSelectorUsersMetadataCreateTime) WithValue(value *timestamp.Timestamp) *BatchGetUsersResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetUsersResponse_FieldSubPathValue)
}

func (s BatchGetUsersResponsePathSelectorUsersMetadataCreateTime) WithArrayOfValues(values []*timestamp.Timestamp) *BatchGetUsersResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetUsersResponse_FieldSubPathArrayOfValues)
}

type BatchGetUsersResponsePathSelectorUsersMetadataUpdateTime struct{}

func (BatchGetUsersResponsePathSelectorUsersMetadataUpdateTime) FieldPath() *BatchGetUsersResponse_FieldSubPath {
	return &BatchGetUsersResponse_FieldSubPath{
		selector: BatchGetUsersResponse_FieldPathSelectorUsers,
		subPath:  user.NewUserFieldPathBuilder().Metadata().UpdateTime().FieldPath(),
	}
}

func (s BatchGetUsersResponsePathSelectorUsersMetadataUpdateTime) WithValue(value *timestamp.Timestamp) *BatchGetUsersResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetUsersResponse_FieldSubPathValue)
}

func (s BatchGetUsersResponsePathSelectorUsersMetadataUpdateTime) WithArrayOfValues(values []*timestamp.Timestamp) *BatchGetUsersResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetUsersResponse_FieldSubPathArrayOfValues)
}

type BatchGetUsersResponsePathSelectorUsersMetadataDeleteTime struct{}

func (BatchGetUsersResponsePathSelectorUsersMetadataDeleteTime) FieldPath() *BatchGetUsersResponse_FieldSubPath {
	return &BatchGetUsersResponse_FieldSubPath{
		selector: BatchGetUsersResponse_FieldPathSelectorUsers,
		subPath:  user.NewUserFieldPathBuilder().Metadata().DeleteTime().FieldPath(),
	}
}

func (s BatchGetUsersResponsePathSelectorUsersMetadataDeleteTime) WithValue(value *timestamp.Timestamp) *BatchGetUsersResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetUsersResponse_FieldSubPathValue)
}

func (s BatchGetUsersResponsePathSelectorUsersMetadataDeleteTime) WithArrayOfValues(values []*timestamp.Timestamp) *BatchGetUsersResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetUsersResponse_FieldSubPathArrayOfValues)
}

type BatchGetUsersResponsePathSelectorUsersMetadataUuid struct{}

func (BatchGetUsersResponsePathSelectorUsersMetadataUuid) FieldPath() *BatchGetUsersResponse_FieldSubPath {
	return &BatchGetUsersResponse_FieldSubPath{
		selector: BatchGetUsersResponse_FieldPathSelectorUsers,
		subPath:  user.NewUserFieldPathBuilder().Metadata().Uuid().FieldPath(),
	}
}

func (s BatchGetUsersResponsePathSelectorUsersMetadataUuid) WithValue(value string) *BatchGetUsersResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetUsersResponse_FieldSubPathValue)
}

func (s BatchGetUsersResponsePathSelectorUsersMetadataUuid) WithArrayOfValues(values []string) *BatchGetUsersResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetUsersResponse_FieldSubPathArrayOfValues)
}

type BatchGetUsersResponsePathSelectorUsersMetadataTags struct{}

func (BatchGetUsersResponsePathSelectorUsersMetadataTags) FieldPath() *BatchGetUsersResponse_FieldSubPath {
	return &BatchGetUsersResponse_FieldSubPath{
		selector: BatchGetUsersResponse_FieldPathSelectorUsers,
		subPath:  user.NewUserFieldPathBuilder().Metadata().Tags().FieldPath(),
	}
}

func (s BatchGetUsersResponsePathSelectorUsersMetadataTags) WithValue(value []string) *BatchGetUsersResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetUsersResponse_FieldSubPathValue)
}

func (s BatchGetUsersResponsePathSelectorUsersMetadataTags) WithArrayOfValues(values [][]string) *BatchGetUsersResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetUsersResponse_FieldSubPathArrayOfValues)
}

func (s BatchGetUsersResponsePathSelectorUsersMetadataTags) WithItemValue(value string) *BatchGetUsersResponse_FieldSubPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*BatchGetUsersResponse_FieldSubPathArrayItemValue)
}

type BatchGetUsersResponsePathSelectorUsersMetadataLabels struct{}

func (BatchGetUsersResponsePathSelectorUsersMetadataLabels) FieldPath() *BatchGetUsersResponse_FieldSubPath {
	return &BatchGetUsersResponse_FieldSubPath{
		selector: BatchGetUsersResponse_FieldPathSelectorUsers,
		subPath:  user.NewUserFieldPathBuilder().Metadata().Labels().FieldPath(),
	}
}

func (s BatchGetUsersResponsePathSelectorUsersMetadataLabels) WithValue(value map[string]string) *BatchGetUsersResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetUsersResponse_FieldSubPathValue)
}

func (s BatchGetUsersResponsePathSelectorUsersMetadataLabels) WithArrayOfValues(values []map[string]string) *BatchGetUsersResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetUsersResponse_FieldSubPathArrayOfValues)
}

func (BatchGetUsersResponsePathSelectorUsersMetadataLabels) WithKey(key string) BatchGetUsersResponseMapPathSelectorUsersMetadataLabels {
	return BatchGetUsersResponseMapPathSelectorUsersMetadataLabels{key: key}
}

type BatchGetUsersResponseMapPathSelectorUsersMetadataLabels struct {
	key string
}

func (s BatchGetUsersResponseMapPathSelectorUsersMetadataLabels) FieldPath() *BatchGetUsersResponse_FieldSubPath {
	return &BatchGetUsersResponse_FieldSubPath{
		selector: BatchGetUsersResponse_FieldPathSelectorUsers,
		subPath:  user.NewUserFieldPathBuilder().Metadata().Labels().WithKey(s.key).FieldPath(),
	}
}

func (s BatchGetUsersResponseMapPathSelectorUsersMetadataLabels) WithValue(value string) *BatchGetUsersResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetUsersResponse_FieldSubPathValue)
}

func (s BatchGetUsersResponseMapPathSelectorUsersMetadataLabels) WithArrayOfValues(values []string) *BatchGetUsersResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetUsersResponse_FieldSubPathArrayOfValues)
}

type BatchGetUsersResponsePathSelectorUsersMetadataAnnotations struct{}

func (BatchGetUsersResponsePathSelectorUsersMetadataAnnotations) FieldPath() *BatchGetUsersResponse_FieldSubPath {
	return &BatchGetUsersResponse_FieldSubPath{
		selector: BatchGetUsersResponse_FieldPathSelectorUsers,
		subPath:  user.NewUserFieldPathBuilder().Metadata().Annotations().FieldPath(),
	}
}

func (s BatchGetUsersResponsePathSelectorUsersMetadataAnnotations) WithValue(value map[string]string) *BatchGetUsersResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetUsersResponse_FieldSubPathValue)
}

func (s BatchGetUsersResponsePathSelectorUsersMetadataAnnotations) WithArrayOfValues(values []map[string]string) *BatchGetUsersResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetUsersResponse_FieldSubPathArrayOfValues)
}

func (BatchGetUsersResponsePathSelectorUsersMetadataAnnotations) WithKey(key string) BatchGetUsersResponseMapPathSelectorUsersMetadataAnnotations {
	return BatchGetUsersResponseMapPathSelectorUsersMetadataAnnotations{key: key}
}

type BatchGetUsersResponseMapPathSelectorUsersMetadataAnnotations struct {
	key string
}

func (s BatchGetUsersResponseMapPathSelectorUsersMetadataAnnotations) FieldPath() *BatchGetUsersResponse_FieldSubPath {
	return &BatchGetUsersResponse_FieldSubPath{
		selector: BatchGetUsersResponse_FieldPathSelectorUsers,
		subPath:  user.NewUserFieldPathBuilder().Metadata().Annotations().WithKey(s.key).FieldPath(),
	}
}

func (s BatchGetUsersResponseMapPathSelectorUsersMetadataAnnotations) WithValue(value string) *BatchGetUsersResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetUsersResponse_FieldSubPathValue)
}

func (s BatchGetUsersResponseMapPathSelectorUsersMetadataAnnotations) WithArrayOfValues(values []string) *BatchGetUsersResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetUsersResponse_FieldSubPathArrayOfValues)
}

type BatchGetUsersResponsePathSelectorUsersMetadataGeneration struct{}

func (BatchGetUsersResponsePathSelectorUsersMetadataGeneration) FieldPath() *BatchGetUsersResponse_FieldSubPath {
	return &BatchGetUsersResponse_FieldSubPath{
		selector: BatchGetUsersResponse_FieldPathSelectorUsers,
		subPath:  user.NewUserFieldPathBuilder().Metadata().Generation().FieldPath(),
	}
}

func (s BatchGetUsersResponsePathSelectorUsersMetadataGeneration) WithValue(value int64) *BatchGetUsersResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetUsersResponse_FieldSubPathValue)
}

func (s BatchGetUsersResponsePathSelectorUsersMetadataGeneration) WithArrayOfValues(values []int64) *BatchGetUsersResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetUsersResponse_FieldSubPathArrayOfValues)
}

type BatchGetUsersResponsePathSelectorUsersMetadataResourceVersion struct{}

func (BatchGetUsersResponsePathSelectorUsersMetadataResourceVersion) FieldPath() *BatchGetUsersResponse_FieldSubPath {
	return &BatchGetUsersResponse_FieldSubPath{
		selector: BatchGetUsersResponse_FieldPathSelectorUsers,
		subPath:  user.NewUserFieldPathBuilder().Metadata().ResourceVersion().FieldPath(),
	}
}

func (s BatchGetUsersResponsePathSelectorUsersMetadataResourceVersion) WithValue(value string) *BatchGetUsersResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetUsersResponse_FieldSubPathValue)
}

func (s BatchGetUsersResponsePathSelectorUsersMetadataResourceVersion) WithArrayOfValues(values []string) *BatchGetUsersResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetUsersResponse_FieldSubPathArrayOfValues)
}

type BatchGetUsersResponsePathSelectorUsersMetadataOwnerReferences struct{}

func (BatchGetUsersResponsePathSelectorUsersMetadataOwnerReferences) FieldPath() *BatchGetUsersResponse_FieldSubPath {
	return &BatchGetUsersResponse_FieldSubPath{
		selector: BatchGetUsersResponse_FieldPathSelectorUsers,
		subPath:  user.NewUserFieldPathBuilder().Metadata().OwnerReferences().FieldPath(),
	}
}

func (s BatchGetUsersResponsePathSelectorUsersMetadataOwnerReferences) WithValue(value []*ntt_meta.OwnerReference) *BatchGetUsersResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetUsersResponse_FieldSubPathValue)
}

func (s BatchGetUsersResponsePathSelectorUsersMetadataOwnerReferences) WithArrayOfValues(values [][]*ntt_meta.OwnerReference) *BatchGetUsersResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetUsersResponse_FieldSubPathArrayOfValues)
}

func (s BatchGetUsersResponsePathSelectorUsersMetadataOwnerReferences) WithItemValue(value *ntt_meta.OwnerReference) *BatchGetUsersResponse_FieldSubPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*BatchGetUsersResponse_FieldSubPathArrayItemValue)
}

func (BatchGetUsersResponsePathSelectorUsersMetadataOwnerReferences) Kind() BatchGetUsersResponsePathSelectorUsersMetadataOwnerReferencesKind {
	return BatchGetUsersResponsePathSelectorUsersMetadataOwnerReferencesKind{}
}

func (BatchGetUsersResponsePathSelectorUsersMetadataOwnerReferences) Version() BatchGetUsersResponsePathSelectorUsersMetadataOwnerReferencesVersion {
	return BatchGetUsersResponsePathSelectorUsersMetadataOwnerReferencesVersion{}
}

func (BatchGetUsersResponsePathSelectorUsersMetadataOwnerReferences) Name() BatchGetUsersResponsePathSelectorUsersMetadataOwnerReferencesName {
	return BatchGetUsersResponsePathSelectorUsersMetadataOwnerReferencesName{}
}

func (BatchGetUsersResponsePathSelectorUsersMetadataOwnerReferences) Region() BatchGetUsersResponsePathSelectorUsersMetadataOwnerReferencesRegion {
	return BatchGetUsersResponsePathSelectorUsersMetadataOwnerReferencesRegion{}
}

func (BatchGetUsersResponsePathSelectorUsersMetadataOwnerReferences) Controller() BatchGetUsersResponsePathSelectorUsersMetadataOwnerReferencesController {
	return BatchGetUsersResponsePathSelectorUsersMetadataOwnerReferencesController{}
}

func (BatchGetUsersResponsePathSelectorUsersMetadataOwnerReferences) BlockOwnerDeletion() BatchGetUsersResponsePathSelectorUsersMetadataOwnerReferencesBlockOwnerDeletion {
	return BatchGetUsersResponsePathSelectorUsersMetadataOwnerReferencesBlockOwnerDeletion{}
}

func (BatchGetUsersResponsePathSelectorUsersMetadataOwnerReferences) RequiresOwnerReference() BatchGetUsersResponsePathSelectorUsersMetadataOwnerReferencesRequiresOwnerReference {
	return BatchGetUsersResponsePathSelectorUsersMetadataOwnerReferencesRequiresOwnerReference{}
}

type BatchGetUsersResponsePathSelectorUsersMetadataOwnerReferencesKind struct{}

func (BatchGetUsersResponsePathSelectorUsersMetadataOwnerReferencesKind) FieldPath() *BatchGetUsersResponse_FieldSubPath {
	return &BatchGetUsersResponse_FieldSubPath{
		selector: BatchGetUsersResponse_FieldPathSelectorUsers,
		subPath:  user.NewUserFieldPathBuilder().Metadata().OwnerReferences().Kind().FieldPath(),
	}
}

func (s BatchGetUsersResponsePathSelectorUsersMetadataOwnerReferencesKind) WithValue(value string) *BatchGetUsersResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetUsersResponse_FieldSubPathValue)
}

func (s BatchGetUsersResponsePathSelectorUsersMetadataOwnerReferencesKind) WithArrayOfValues(values []string) *BatchGetUsersResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetUsersResponse_FieldSubPathArrayOfValues)
}

type BatchGetUsersResponsePathSelectorUsersMetadataOwnerReferencesVersion struct{}

func (BatchGetUsersResponsePathSelectorUsersMetadataOwnerReferencesVersion) FieldPath() *BatchGetUsersResponse_FieldSubPath {
	return &BatchGetUsersResponse_FieldSubPath{
		selector: BatchGetUsersResponse_FieldPathSelectorUsers,
		subPath:  user.NewUserFieldPathBuilder().Metadata().OwnerReferences().Version().FieldPath(),
	}
}

func (s BatchGetUsersResponsePathSelectorUsersMetadataOwnerReferencesVersion) WithValue(value string) *BatchGetUsersResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetUsersResponse_FieldSubPathValue)
}

func (s BatchGetUsersResponsePathSelectorUsersMetadataOwnerReferencesVersion) WithArrayOfValues(values []string) *BatchGetUsersResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetUsersResponse_FieldSubPathArrayOfValues)
}

type BatchGetUsersResponsePathSelectorUsersMetadataOwnerReferencesName struct{}

func (BatchGetUsersResponsePathSelectorUsersMetadataOwnerReferencesName) FieldPath() *BatchGetUsersResponse_FieldSubPath {
	return &BatchGetUsersResponse_FieldSubPath{
		selector: BatchGetUsersResponse_FieldPathSelectorUsers,
		subPath:  user.NewUserFieldPathBuilder().Metadata().OwnerReferences().Name().FieldPath(),
	}
}

func (s BatchGetUsersResponsePathSelectorUsersMetadataOwnerReferencesName) WithValue(value string) *BatchGetUsersResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetUsersResponse_FieldSubPathValue)
}

func (s BatchGetUsersResponsePathSelectorUsersMetadataOwnerReferencesName) WithArrayOfValues(values []string) *BatchGetUsersResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetUsersResponse_FieldSubPathArrayOfValues)
}

type BatchGetUsersResponsePathSelectorUsersMetadataOwnerReferencesRegion struct{}

func (BatchGetUsersResponsePathSelectorUsersMetadataOwnerReferencesRegion) FieldPath() *BatchGetUsersResponse_FieldSubPath {
	return &BatchGetUsersResponse_FieldSubPath{
		selector: BatchGetUsersResponse_FieldPathSelectorUsers,
		subPath:  user.NewUserFieldPathBuilder().Metadata().OwnerReferences().Region().FieldPath(),
	}
}

func (s BatchGetUsersResponsePathSelectorUsersMetadataOwnerReferencesRegion) WithValue(value string) *BatchGetUsersResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetUsersResponse_FieldSubPathValue)
}

func (s BatchGetUsersResponsePathSelectorUsersMetadataOwnerReferencesRegion) WithArrayOfValues(values []string) *BatchGetUsersResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetUsersResponse_FieldSubPathArrayOfValues)
}

type BatchGetUsersResponsePathSelectorUsersMetadataOwnerReferencesController struct{}

func (BatchGetUsersResponsePathSelectorUsersMetadataOwnerReferencesController) FieldPath() *BatchGetUsersResponse_FieldSubPath {
	return &BatchGetUsersResponse_FieldSubPath{
		selector: BatchGetUsersResponse_FieldPathSelectorUsers,
		subPath:  user.NewUserFieldPathBuilder().Metadata().OwnerReferences().Controller().FieldPath(),
	}
}

func (s BatchGetUsersResponsePathSelectorUsersMetadataOwnerReferencesController) WithValue(value bool) *BatchGetUsersResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetUsersResponse_FieldSubPathValue)
}

func (s BatchGetUsersResponsePathSelectorUsersMetadataOwnerReferencesController) WithArrayOfValues(values []bool) *BatchGetUsersResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetUsersResponse_FieldSubPathArrayOfValues)
}

type BatchGetUsersResponsePathSelectorUsersMetadataOwnerReferencesBlockOwnerDeletion struct{}

func (BatchGetUsersResponsePathSelectorUsersMetadataOwnerReferencesBlockOwnerDeletion) FieldPath() *BatchGetUsersResponse_FieldSubPath {
	return &BatchGetUsersResponse_FieldSubPath{
		selector: BatchGetUsersResponse_FieldPathSelectorUsers,
		subPath:  user.NewUserFieldPathBuilder().Metadata().OwnerReferences().BlockOwnerDeletion().FieldPath(),
	}
}

func (s BatchGetUsersResponsePathSelectorUsersMetadataOwnerReferencesBlockOwnerDeletion) WithValue(value bool) *BatchGetUsersResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetUsersResponse_FieldSubPathValue)
}

func (s BatchGetUsersResponsePathSelectorUsersMetadataOwnerReferencesBlockOwnerDeletion) WithArrayOfValues(values []bool) *BatchGetUsersResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetUsersResponse_FieldSubPathArrayOfValues)
}

type BatchGetUsersResponsePathSelectorUsersMetadataOwnerReferencesRequiresOwnerReference struct{}

func (BatchGetUsersResponsePathSelectorUsersMetadataOwnerReferencesRequiresOwnerReference) FieldPath() *BatchGetUsersResponse_FieldSubPath {
	return &BatchGetUsersResponse_FieldSubPath{
		selector: BatchGetUsersResponse_FieldPathSelectorUsers,
		subPath:  user.NewUserFieldPathBuilder().Metadata().OwnerReferences().RequiresOwnerReference().FieldPath(),
	}
}

func (s BatchGetUsersResponsePathSelectorUsersMetadataOwnerReferencesRequiresOwnerReference) WithValue(value bool) *BatchGetUsersResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetUsersResponse_FieldSubPathValue)
}

func (s BatchGetUsersResponsePathSelectorUsersMetadataOwnerReferencesRequiresOwnerReference) WithArrayOfValues(values []bool) *BatchGetUsersResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetUsersResponse_FieldSubPathArrayOfValues)
}

type BatchGetUsersResponsePathSelectorUsersMetadataShards struct{}

func (BatchGetUsersResponsePathSelectorUsersMetadataShards) FieldPath() *BatchGetUsersResponse_FieldSubPath {
	return &BatchGetUsersResponse_FieldSubPath{
		selector: BatchGetUsersResponse_FieldPathSelectorUsers,
		subPath:  user.NewUserFieldPathBuilder().Metadata().Shards().FieldPath(),
	}
}

func (s BatchGetUsersResponsePathSelectorUsersMetadataShards) WithValue(value map[string]int64) *BatchGetUsersResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetUsersResponse_FieldSubPathValue)
}

func (s BatchGetUsersResponsePathSelectorUsersMetadataShards) WithArrayOfValues(values []map[string]int64) *BatchGetUsersResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetUsersResponse_FieldSubPathArrayOfValues)
}

func (BatchGetUsersResponsePathSelectorUsersMetadataShards) WithKey(key string) BatchGetUsersResponseMapPathSelectorUsersMetadataShards {
	return BatchGetUsersResponseMapPathSelectorUsersMetadataShards{key: key}
}

type BatchGetUsersResponseMapPathSelectorUsersMetadataShards struct {
	key string
}

func (s BatchGetUsersResponseMapPathSelectorUsersMetadataShards) FieldPath() *BatchGetUsersResponse_FieldSubPath {
	return &BatchGetUsersResponse_FieldSubPath{
		selector: BatchGetUsersResponse_FieldPathSelectorUsers,
		subPath:  user.NewUserFieldPathBuilder().Metadata().Shards().WithKey(s.key).FieldPath(),
	}
}

func (s BatchGetUsersResponseMapPathSelectorUsersMetadataShards) WithValue(value int64) *BatchGetUsersResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetUsersResponse_FieldSubPathValue)
}

func (s BatchGetUsersResponseMapPathSelectorUsersMetadataShards) WithArrayOfValues(values []int64) *BatchGetUsersResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetUsersResponse_FieldSubPathArrayOfValues)
}

type BatchGetUsersResponsePathSelectorUsersMetadataSyncing struct{}

func (BatchGetUsersResponsePathSelectorUsersMetadataSyncing) FieldPath() *BatchGetUsersResponse_FieldSubPath {
	return &BatchGetUsersResponse_FieldSubPath{
		selector: BatchGetUsersResponse_FieldPathSelectorUsers,
		subPath:  user.NewUserFieldPathBuilder().Metadata().Syncing().FieldPath(),
	}
}

func (s BatchGetUsersResponsePathSelectorUsersMetadataSyncing) WithValue(value *ntt_meta.SyncingMeta) *BatchGetUsersResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetUsersResponse_FieldSubPathValue)
}

func (s BatchGetUsersResponsePathSelectorUsersMetadataSyncing) WithArrayOfValues(values []*ntt_meta.SyncingMeta) *BatchGetUsersResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetUsersResponse_FieldSubPathArrayOfValues)
}

func (BatchGetUsersResponsePathSelectorUsersMetadataSyncing) OwningRegion() BatchGetUsersResponsePathSelectorUsersMetadataSyncingOwningRegion {
	return BatchGetUsersResponsePathSelectorUsersMetadataSyncingOwningRegion{}
}

func (BatchGetUsersResponsePathSelectorUsersMetadataSyncing) Regions() BatchGetUsersResponsePathSelectorUsersMetadataSyncingRegions {
	return BatchGetUsersResponsePathSelectorUsersMetadataSyncingRegions{}
}

type BatchGetUsersResponsePathSelectorUsersMetadataSyncingOwningRegion struct{}

func (BatchGetUsersResponsePathSelectorUsersMetadataSyncingOwningRegion) FieldPath() *BatchGetUsersResponse_FieldSubPath {
	return &BatchGetUsersResponse_FieldSubPath{
		selector: BatchGetUsersResponse_FieldPathSelectorUsers,
		subPath:  user.NewUserFieldPathBuilder().Metadata().Syncing().OwningRegion().FieldPath(),
	}
}

func (s BatchGetUsersResponsePathSelectorUsersMetadataSyncingOwningRegion) WithValue(value string) *BatchGetUsersResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetUsersResponse_FieldSubPathValue)
}

func (s BatchGetUsersResponsePathSelectorUsersMetadataSyncingOwningRegion) WithArrayOfValues(values []string) *BatchGetUsersResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetUsersResponse_FieldSubPathArrayOfValues)
}

type BatchGetUsersResponsePathSelectorUsersMetadataSyncingRegions struct{}

func (BatchGetUsersResponsePathSelectorUsersMetadataSyncingRegions) FieldPath() *BatchGetUsersResponse_FieldSubPath {
	return &BatchGetUsersResponse_FieldSubPath{
		selector: BatchGetUsersResponse_FieldPathSelectorUsers,
		subPath:  user.NewUserFieldPathBuilder().Metadata().Syncing().Regions().FieldPath(),
	}
}

func (s BatchGetUsersResponsePathSelectorUsersMetadataSyncingRegions) WithValue(value []string) *BatchGetUsersResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetUsersResponse_FieldSubPathValue)
}

func (s BatchGetUsersResponsePathSelectorUsersMetadataSyncingRegions) WithArrayOfValues(values [][]string) *BatchGetUsersResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetUsersResponse_FieldSubPathArrayOfValues)
}

func (s BatchGetUsersResponsePathSelectorUsersMetadataSyncingRegions) WithItemValue(value string) *BatchGetUsersResponse_FieldSubPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*BatchGetUsersResponse_FieldSubPathArrayItemValue)
}

type BatchGetUsersResponsePathSelectorUsersMetadataLifecycle struct{}

func (BatchGetUsersResponsePathSelectorUsersMetadataLifecycle) FieldPath() *BatchGetUsersResponse_FieldSubPath {
	return &BatchGetUsersResponse_FieldSubPath{
		selector: BatchGetUsersResponse_FieldPathSelectorUsers,
		subPath:  user.NewUserFieldPathBuilder().Metadata().Lifecycle().FieldPath(),
	}
}

func (s BatchGetUsersResponsePathSelectorUsersMetadataLifecycle) WithValue(value *ntt_meta.Lifecycle) *BatchGetUsersResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetUsersResponse_FieldSubPathValue)
}

func (s BatchGetUsersResponsePathSelectorUsersMetadataLifecycle) WithArrayOfValues(values []*ntt_meta.Lifecycle) *BatchGetUsersResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetUsersResponse_FieldSubPathArrayOfValues)
}

func (BatchGetUsersResponsePathSelectorUsersMetadataLifecycle) State() BatchGetUsersResponsePathSelectorUsersMetadataLifecycleState {
	return BatchGetUsersResponsePathSelectorUsersMetadataLifecycleState{}
}

func (BatchGetUsersResponsePathSelectorUsersMetadataLifecycle) BlockDeletion() BatchGetUsersResponsePathSelectorUsersMetadataLifecycleBlockDeletion {
	return BatchGetUsersResponsePathSelectorUsersMetadataLifecycleBlockDeletion{}
}

type BatchGetUsersResponsePathSelectorUsersMetadataLifecycleState struct{}

func (BatchGetUsersResponsePathSelectorUsersMetadataLifecycleState) FieldPath() *BatchGetUsersResponse_FieldSubPath {
	return &BatchGetUsersResponse_FieldSubPath{
		selector: BatchGetUsersResponse_FieldPathSelectorUsers,
		subPath:  user.NewUserFieldPathBuilder().Metadata().Lifecycle().State().FieldPath(),
	}
}

func (s BatchGetUsersResponsePathSelectorUsersMetadataLifecycleState) WithValue(value ntt_meta.Lifecycle_State) *BatchGetUsersResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetUsersResponse_FieldSubPathValue)
}

func (s BatchGetUsersResponsePathSelectorUsersMetadataLifecycleState) WithArrayOfValues(values []ntt_meta.Lifecycle_State) *BatchGetUsersResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetUsersResponse_FieldSubPathArrayOfValues)
}

type BatchGetUsersResponsePathSelectorUsersMetadataLifecycleBlockDeletion struct{}

func (BatchGetUsersResponsePathSelectorUsersMetadataLifecycleBlockDeletion) FieldPath() *BatchGetUsersResponse_FieldSubPath {
	return &BatchGetUsersResponse_FieldSubPath{
		selector: BatchGetUsersResponse_FieldPathSelectorUsers,
		subPath:  user.NewUserFieldPathBuilder().Metadata().Lifecycle().BlockDeletion().FieldPath(),
	}
}

func (s BatchGetUsersResponsePathSelectorUsersMetadataLifecycleBlockDeletion) WithValue(value bool) *BatchGetUsersResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetUsersResponse_FieldSubPathValue)
}

func (s BatchGetUsersResponsePathSelectorUsersMetadataLifecycleBlockDeletion) WithArrayOfValues(values []bool) *BatchGetUsersResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetUsersResponse_FieldSubPathArrayOfValues)
}

type BatchGetUsersResponsePathSelectorUsersEmail struct{}

func (BatchGetUsersResponsePathSelectorUsersEmail) FieldPath() *BatchGetUsersResponse_FieldSubPath {
	return &BatchGetUsersResponse_FieldSubPath{
		selector: BatchGetUsersResponse_FieldPathSelectorUsers,
		subPath:  user.NewUserFieldPathBuilder().Email().FieldPath(),
	}
}

func (s BatchGetUsersResponsePathSelectorUsersEmail) WithValue(value string) *BatchGetUsersResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetUsersResponse_FieldSubPathValue)
}

func (s BatchGetUsersResponsePathSelectorUsersEmail) WithArrayOfValues(values []string) *BatchGetUsersResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetUsersResponse_FieldSubPathArrayOfValues)
}

type BatchGetUsersResponsePathSelectorUsersEmailVerified struct{}

func (BatchGetUsersResponsePathSelectorUsersEmailVerified) FieldPath() *BatchGetUsersResponse_FieldSubPath {
	return &BatchGetUsersResponse_FieldSubPath{
		selector: BatchGetUsersResponse_FieldPathSelectorUsers,
		subPath:  user.NewUserFieldPathBuilder().EmailVerified().FieldPath(),
	}
}

func (s BatchGetUsersResponsePathSelectorUsersEmailVerified) WithValue(value bool) *BatchGetUsersResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetUsersResponse_FieldSubPathValue)
}

func (s BatchGetUsersResponsePathSelectorUsersEmailVerified) WithArrayOfValues(values []bool) *BatchGetUsersResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetUsersResponse_FieldSubPathArrayOfValues)
}

type BatchGetUsersResponsePathSelectorUsersAuthInfo struct{}

func (BatchGetUsersResponsePathSelectorUsersAuthInfo) FieldPath() *BatchGetUsersResponse_FieldSubPath {
	return &BatchGetUsersResponse_FieldSubPath{
		selector: BatchGetUsersResponse_FieldPathSelectorUsers,
		subPath:  user.NewUserFieldPathBuilder().AuthInfo().FieldPath(),
	}
}

func (s BatchGetUsersResponsePathSelectorUsersAuthInfo) WithValue(value *user.User_AuthInfo) *BatchGetUsersResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetUsersResponse_FieldSubPathValue)
}

func (s BatchGetUsersResponsePathSelectorUsersAuthInfo) WithArrayOfValues(values []*user.User_AuthInfo) *BatchGetUsersResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetUsersResponse_FieldSubPathArrayOfValues)
}

func (BatchGetUsersResponsePathSelectorUsersAuthInfo) Provider() BatchGetUsersResponsePathSelectorUsersAuthInfoProvider {
	return BatchGetUsersResponsePathSelectorUsersAuthInfoProvider{}
}

func (BatchGetUsersResponsePathSelectorUsersAuthInfo) Id() BatchGetUsersResponsePathSelectorUsersAuthInfoId {
	return BatchGetUsersResponsePathSelectorUsersAuthInfoId{}
}

type BatchGetUsersResponsePathSelectorUsersAuthInfoProvider struct{}

func (BatchGetUsersResponsePathSelectorUsersAuthInfoProvider) FieldPath() *BatchGetUsersResponse_FieldSubPath {
	return &BatchGetUsersResponse_FieldSubPath{
		selector: BatchGetUsersResponse_FieldPathSelectorUsers,
		subPath:  user.NewUserFieldPathBuilder().AuthInfo().Provider().FieldPath(),
	}
}

func (s BatchGetUsersResponsePathSelectorUsersAuthInfoProvider) WithValue(value string) *BatchGetUsersResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetUsersResponse_FieldSubPathValue)
}

func (s BatchGetUsersResponsePathSelectorUsersAuthInfoProvider) WithArrayOfValues(values []string) *BatchGetUsersResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetUsersResponse_FieldSubPathArrayOfValues)
}

type BatchGetUsersResponsePathSelectorUsersAuthInfoId struct{}

func (BatchGetUsersResponsePathSelectorUsersAuthInfoId) FieldPath() *BatchGetUsersResponse_FieldSubPath {
	return &BatchGetUsersResponse_FieldSubPath{
		selector: BatchGetUsersResponse_FieldPathSelectorUsers,
		subPath:  user.NewUserFieldPathBuilder().AuthInfo().Id().FieldPath(),
	}
}

func (s BatchGetUsersResponsePathSelectorUsersAuthInfoId) WithValue(value string) *BatchGetUsersResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetUsersResponse_FieldSubPathValue)
}

func (s BatchGetUsersResponsePathSelectorUsersAuthInfoId) WithArrayOfValues(values []string) *BatchGetUsersResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetUsersResponse_FieldSubPathArrayOfValues)
}

type BatchGetUsersResponsePathSelectorUsersSettings struct{}

func (BatchGetUsersResponsePathSelectorUsersSettings) FieldPath() *BatchGetUsersResponse_FieldSubPath {
	return &BatchGetUsersResponse_FieldSubPath{
		selector: BatchGetUsersResponse_FieldPathSelectorUsers,
		subPath:  user.NewUserFieldPathBuilder().Settings().FieldPath(),
	}
}

func (s BatchGetUsersResponsePathSelectorUsersSettings) WithValue(value map[string]string) *BatchGetUsersResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetUsersResponse_FieldSubPathValue)
}

func (s BatchGetUsersResponsePathSelectorUsersSettings) WithArrayOfValues(values []map[string]string) *BatchGetUsersResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetUsersResponse_FieldSubPathArrayOfValues)
}

func (BatchGetUsersResponsePathSelectorUsersSettings) WithKey(key string) BatchGetUsersResponseMapPathSelectorUsersSettings {
	return BatchGetUsersResponseMapPathSelectorUsersSettings{key: key}
}

type BatchGetUsersResponseMapPathSelectorUsersSettings struct {
	key string
}

func (s BatchGetUsersResponseMapPathSelectorUsersSettings) FieldPath() *BatchGetUsersResponse_FieldSubPath {
	return &BatchGetUsersResponse_FieldSubPath{
		selector: BatchGetUsersResponse_FieldPathSelectorUsers,
		subPath:  user.NewUserFieldPathBuilder().Settings().WithKey(s.key).FieldPath(),
	}
}

func (s BatchGetUsersResponseMapPathSelectorUsersSettings) WithValue(value string) *BatchGetUsersResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetUsersResponse_FieldSubPathValue)
}

func (s BatchGetUsersResponseMapPathSelectorUsersSettings) WithArrayOfValues(values []string) *BatchGetUsersResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetUsersResponse_FieldSubPathArrayOfValues)
}

type BatchGetUsersResponsePathSelectorUsersRefreshedTime struct{}

func (BatchGetUsersResponsePathSelectorUsersRefreshedTime) FieldPath() *BatchGetUsersResponse_FieldSubPath {
	return &BatchGetUsersResponse_FieldSubPath{
		selector: BatchGetUsersResponse_FieldPathSelectorUsers,
		subPath:  user.NewUserFieldPathBuilder().RefreshedTime().FieldPath(),
	}
}

func (s BatchGetUsersResponsePathSelectorUsersRefreshedTime) WithValue(value *timestamp.Timestamp) *BatchGetUsersResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetUsersResponse_FieldSubPathValue)
}

func (s BatchGetUsersResponsePathSelectorUsersRefreshedTime) WithArrayOfValues(values []*timestamp.Timestamp) *BatchGetUsersResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetUsersResponse_FieldSubPathArrayOfValues)
}

type BatchGetUsersResponsePathSelectorMissing struct{}

func (BatchGetUsersResponsePathSelectorMissing) FieldPath() *BatchGetUsersResponse_FieldTerminalPath {
	return &BatchGetUsersResponse_FieldTerminalPath{selector: BatchGetUsersResponse_FieldPathSelectorMissing}
}

func (s BatchGetUsersResponsePathSelectorMissing) WithValue(value []*user.Reference) *BatchGetUsersResponse_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetUsersResponse_FieldTerminalPathValue)
}

func (s BatchGetUsersResponsePathSelectorMissing) WithArrayOfValues(values [][]*user.Reference) *BatchGetUsersResponse_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetUsersResponse_FieldTerminalPathArrayOfValues)
}

func (s BatchGetUsersResponsePathSelectorMissing) WithItemValue(value *user.Reference) *BatchGetUsersResponse_FieldTerminalPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*BatchGetUsersResponse_FieldTerminalPathArrayItemValue)
}

type ListUsersRequestFieldPathBuilder struct{}

func NewListUsersRequestFieldPathBuilder() ListUsersRequestFieldPathBuilder {
	return ListUsersRequestFieldPathBuilder{}
}
func (ListUsersRequestFieldPathBuilder) PageSize() ListUsersRequestPathSelectorPageSize {
	return ListUsersRequestPathSelectorPageSize{}
}
func (ListUsersRequestFieldPathBuilder) PageToken() ListUsersRequestPathSelectorPageToken {
	return ListUsersRequestPathSelectorPageToken{}
}
func (ListUsersRequestFieldPathBuilder) OrderBy() ListUsersRequestPathSelectorOrderBy {
	return ListUsersRequestPathSelectorOrderBy{}
}
func (ListUsersRequestFieldPathBuilder) Filter() ListUsersRequestPathSelectorFilter {
	return ListUsersRequestPathSelectorFilter{}
}
func (ListUsersRequestFieldPathBuilder) FieldMask() ListUsersRequestPathSelectorFieldMask {
	return ListUsersRequestPathSelectorFieldMask{}
}
func (ListUsersRequestFieldPathBuilder) View() ListUsersRequestPathSelectorView {
	return ListUsersRequestPathSelectorView{}
}
func (ListUsersRequestFieldPathBuilder) IncludePagingInfo() ListUsersRequestPathSelectorIncludePagingInfo {
	return ListUsersRequestPathSelectorIncludePagingInfo{}
}

type ListUsersRequestPathSelectorPageSize struct{}

func (ListUsersRequestPathSelectorPageSize) FieldPath() *ListUsersRequest_FieldTerminalPath {
	return &ListUsersRequest_FieldTerminalPath{selector: ListUsersRequest_FieldPathSelectorPageSize}
}

func (s ListUsersRequestPathSelectorPageSize) WithValue(value int32) *ListUsersRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*ListUsersRequest_FieldTerminalPathValue)
}

func (s ListUsersRequestPathSelectorPageSize) WithArrayOfValues(values []int32) *ListUsersRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListUsersRequest_FieldTerminalPathArrayOfValues)
}

type ListUsersRequestPathSelectorPageToken struct{}

func (ListUsersRequestPathSelectorPageToken) FieldPath() *ListUsersRequest_FieldTerminalPath {
	return &ListUsersRequest_FieldTerminalPath{selector: ListUsersRequest_FieldPathSelectorPageToken}
}

func (s ListUsersRequestPathSelectorPageToken) WithValue(value *user.PagerCursor) *ListUsersRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*ListUsersRequest_FieldTerminalPathValue)
}

func (s ListUsersRequestPathSelectorPageToken) WithArrayOfValues(values []*user.PagerCursor) *ListUsersRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListUsersRequest_FieldTerminalPathArrayOfValues)
}

type ListUsersRequestPathSelectorOrderBy struct{}

func (ListUsersRequestPathSelectorOrderBy) FieldPath() *ListUsersRequest_FieldTerminalPath {
	return &ListUsersRequest_FieldTerminalPath{selector: ListUsersRequest_FieldPathSelectorOrderBy}
}

func (s ListUsersRequestPathSelectorOrderBy) WithValue(value *user.OrderBy) *ListUsersRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*ListUsersRequest_FieldTerminalPathValue)
}

func (s ListUsersRequestPathSelectorOrderBy) WithArrayOfValues(values []*user.OrderBy) *ListUsersRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListUsersRequest_FieldTerminalPathArrayOfValues)
}

type ListUsersRequestPathSelectorFilter struct{}

func (ListUsersRequestPathSelectorFilter) FieldPath() *ListUsersRequest_FieldTerminalPath {
	return &ListUsersRequest_FieldTerminalPath{selector: ListUsersRequest_FieldPathSelectorFilter}
}

func (s ListUsersRequestPathSelectorFilter) WithValue(value *user.Filter) *ListUsersRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*ListUsersRequest_FieldTerminalPathValue)
}

func (s ListUsersRequestPathSelectorFilter) WithArrayOfValues(values []*user.Filter) *ListUsersRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListUsersRequest_FieldTerminalPathArrayOfValues)
}

type ListUsersRequestPathSelectorFieldMask struct{}

func (ListUsersRequestPathSelectorFieldMask) FieldPath() *ListUsersRequest_FieldTerminalPath {
	return &ListUsersRequest_FieldTerminalPath{selector: ListUsersRequest_FieldPathSelectorFieldMask}
}

func (s ListUsersRequestPathSelectorFieldMask) WithValue(value *user.User_FieldMask) *ListUsersRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*ListUsersRequest_FieldTerminalPathValue)
}

func (s ListUsersRequestPathSelectorFieldMask) WithArrayOfValues(values []*user.User_FieldMask) *ListUsersRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListUsersRequest_FieldTerminalPathArrayOfValues)
}

type ListUsersRequestPathSelectorView struct{}

func (ListUsersRequestPathSelectorView) FieldPath() *ListUsersRequest_FieldTerminalPath {
	return &ListUsersRequest_FieldTerminalPath{selector: ListUsersRequest_FieldPathSelectorView}
}

func (s ListUsersRequestPathSelectorView) WithValue(value view.View) *ListUsersRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*ListUsersRequest_FieldTerminalPathValue)
}

func (s ListUsersRequestPathSelectorView) WithArrayOfValues(values []view.View) *ListUsersRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListUsersRequest_FieldTerminalPathArrayOfValues)
}

type ListUsersRequestPathSelectorIncludePagingInfo struct{}

func (ListUsersRequestPathSelectorIncludePagingInfo) FieldPath() *ListUsersRequest_FieldTerminalPath {
	return &ListUsersRequest_FieldTerminalPath{selector: ListUsersRequest_FieldPathSelectorIncludePagingInfo}
}

func (s ListUsersRequestPathSelectorIncludePagingInfo) WithValue(value bool) *ListUsersRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*ListUsersRequest_FieldTerminalPathValue)
}

func (s ListUsersRequestPathSelectorIncludePagingInfo) WithArrayOfValues(values []bool) *ListUsersRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListUsersRequest_FieldTerminalPathArrayOfValues)
}

type ListUsersResponseFieldPathBuilder struct{}

func NewListUsersResponseFieldPathBuilder() ListUsersResponseFieldPathBuilder {
	return ListUsersResponseFieldPathBuilder{}
}
func (ListUsersResponseFieldPathBuilder) Users() ListUsersResponsePathSelectorUsers {
	return ListUsersResponsePathSelectorUsers{}
}
func (ListUsersResponseFieldPathBuilder) PrevPageToken() ListUsersResponsePathSelectorPrevPageToken {
	return ListUsersResponsePathSelectorPrevPageToken{}
}
func (ListUsersResponseFieldPathBuilder) NextPageToken() ListUsersResponsePathSelectorNextPageToken {
	return ListUsersResponsePathSelectorNextPageToken{}
}
func (ListUsersResponseFieldPathBuilder) CurrentOffset() ListUsersResponsePathSelectorCurrentOffset {
	return ListUsersResponsePathSelectorCurrentOffset{}
}
func (ListUsersResponseFieldPathBuilder) TotalResultsCount() ListUsersResponsePathSelectorTotalResultsCount {
	return ListUsersResponsePathSelectorTotalResultsCount{}
}

type ListUsersResponsePathSelectorUsers struct{}

func (ListUsersResponsePathSelectorUsers) FieldPath() *ListUsersResponse_FieldTerminalPath {
	return &ListUsersResponse_FieldTerminalPath{selector: ListUsersResponse_FieldPathSelectorUsers}
}

func (s ListUsersResponsePathSelectorUsers) WithValue(value []*user.User) *ListUsersResponse_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*ListUsersResponse_FieldTerminalPathValue)
}

func (s ListUsersResponsePathSelectorUsers) WithArrayOfValues(values [][]*user.User) *ListUsersResponse_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListUsersResponse_FieldTerminalPathArrayOfValues)
}

func (s ListUsersResponsePathSelectorUsers) WithItemValue(value *user.User) *ListUsersResponse_FieldTerminalPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*ListUsersResponse_FieldTerminalPathArrayItemValue)
}
func (ListUsersResponsePathSelectorUsers) WithSubPath(subPath user.User_FieldPath) *ListUsersResponse_FieldSubPath {
	return &ListUsersResponse_FieldSubPath{selector: ListUsersResponse_FieldPathSelectorUsers, subPath: subPath}
}

func (s ListUsersResponsePathSelectorUsers) WithSubValue(subPathValue user.User_FieldPathValue) *ListUsersResponse_FieldSubPathValue {
	return &ListUsersResponse_FieldSubPathValue{ListUsersResponse_FieldPath: s.WithSubPath(subPathValue), subPathValue: subPathValue}
}

func (s ListUsersResponsePathSelectorUsers) WithSubArrayOfValues(subPathArrayOfValues user.User_FieldPathArrayOfValues) *ListUsersResponse_FieldSubPathArrayOfValues {
	return &ListUsersResponse_FieldSubPathArrayOfValues{ListUsersResponse_FieldPath: s.WithSubPath(subPathArrayOfValues), subPathArrayOfValues: subPathArrayOfValues}
}

func (s ListUsersResponsePathSelectorUsers) WithSubArrayItemValue(subPathArrayItemValue user.User_FieldPathArrayItemValue) *ListUsersResponse_FieldSubPathArrayItemValue {
	return &ListUsersResponse_FieldSubPathArrayItemValue{ListUsersResponse_FieldPath: s.WithSubPath(subPathArrayItemValue), subPathItemValue: subPathArrayItemValue}
}

func (ListUsersResponsePathSelectorUsers) Name() ListUsersResponsePathSelectorUsersName {
	return ListUsersResponsePathSelectorUsersName{}
}

func (ListUsersResponsePathSelectorUsers) FullName() ListUsersResponsePathSelectorUsersFullName {
	return ListUsersResponsePathSelectorUsersFullName{}
}

func (ListUsersResponsePathSelectorUsers) Metadata() ListUsersResponsePathSelectorUsersMetadata {
	return ListUsersResponsePathSelectorUsersMetadata{}
}

func (ListUsersResponsePathSelectorUsers) Email() ListUsersResponsePathSelectorUsersEmail {
	return ListUsersResponsePathSelectorUsersEmail{}
}

func (ListUsersResponsePathSelectorUsers) EmailVerified() ListUsersResponsePathSelectorUsersEmailVerified {
	return ListUsersResponsePathSelectorUsersEmailVerified{}
}

func (ListUsersResponsePathSelectorUsers) AuthInfo() ListUsersResponsePathSelectorUsersAuthInfo {
	return ListUsersResponsePathSelectorUsersAuthInfo{}
}

func (ListUsersResponsePathSelectorUsers) Settings() ListUsersResponsePathSelectorUsersSettings {
	return ListUsersResponsePathSelectorUsersSettings{}
}

func (ListUsersResponsePathSelectorUsers) RefreshedTime() ListUsersResponsePathSelectorUsersRefreshedTime {
	return ListUsersResponsePathSelectorUsersRefreshedTime{}
}

type ListUsersResponsePathSelectorUsersName struct{}

func (ListUsersResponsePathSelectorUsersName) FieldPath() *ListUsersResponse_FieldSubPath {
	return &ListUsersResponse_FieldSubPath{
		selector: ListUsersResponse_FieldPathSelectorUsers,
		subPath:  user.NewUserFieldPathBuilder().Name().FieldPath(),
	}
}

func (s ListUsersResponsePathSelectorUsersName) WithValue(value *user.Name) *ListUsersResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListUsersResponse_FieldSubPathValue)
}

func (s ListUsersResponsePathSelectorUsersName) WithArrayOfValues(values []*user.Name) *ListUsersResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListUsersResponse_FieldSubPathArrayOfValues)
}

type ListUsersResponsePathSelectorUsersFullName struct{}

func (ListUsersResponsePathSelectorUsersFullName) FieldPath() *ListUsersResponse_FieldSubPath {
	return &ListUsersResponse_FieldSubPath{
		selector: ListUsersResponse_FieldPathSelectorUsers,
		subPath:  user.NewUserFieldPathBuilder().FullName().FieldPath(),
	}
}

func (s ListUsersResponsePathSelectorUsersFullName) WithValue(value string) *ListUsersResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListUsersResponse_FieldSubPathValue)
}

func (s ListUsersResponsePathSelectorUsersFullName) WithArrayOfValues(values []string) *ListUsersResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListUsersResponse_FieldSubPathArrayOfValues)
}

type ListUsersResponsePathSelectorUsersMetadata struct{}

func (ListUsersResponsePathSelectorUsersMetadata) FieldPath() *ListUsersResponse_FieldSubPath {
	return &ListUsersResponse_FieldSubPath{
		selector: ListUsersResponse_FieldPathSelectorUsers,
		subPath:  user.NewUserFieldPathBuilder().Metadata().FieldPath(),
	}
}

func (s ListUsersResponsePathSelectorUsersMetadata) WithValue(value *ntt_meta.Meta) *ListUsersResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListUsersResponse_FieldSubPathValue)
}

func (s ListUsersResponsePathSelectorUsersMetadata) WithArrayOfValues(values []*ntt_meta.Meta) *ListUsersResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListUsersResponse_FieldSubPathArrayOfValues)
}

func (ListUsersResponsePathSelectorUsersMetadata) CreateTime() ListUsersResponsePathSelectorUsersMetadataCreateTime {
	return ListUsersResponsePathSelectorUsersMetadataCreateTime{}
}

func (ListUsersResponsePathSelectorUsersMetadata) UpdateTime() ListUsersResponsePathSelectorUsersMetadataUpdateTime {
	return ListUsersResponsePathSelectorUsersMetadataUpdateTime{}
}

func (ListUsersResponsePathSelectorUsersMetadata) DeleteTime() ListUsersResponsePathSelectorUsersMetadataDeleteTime {
	return ListUsersResponsePathSelectorUsersMetadataDeleteTime{}
}

func (ListUsersResponsePathSelectorUsersMetadata) Uuid() ListUsersResponsePathSelectorUsersMetadataUuid {
	return ListUsersResponsePathSelectorUsersMetadataUuid{}
}

func (ListUsersResponsePathSelectorUsersMetadata) Tags() ListUsersResponsePathSelectorUsersMetadataTags {
	return ListUsersResponsePathSelectorUsersMetadataTags{}
}

func (ListUsersResponsePathSelectorUsersMetadata) Labels() ListUsersResponsePathSelectorUsersMetadataLabels {
	return ListUsersResponsePathSelectorUsersMetadataLabels{}
}

func (ListUsersResponsePathSelectorUsersMetadata) Annotations() ListUsersResponsePathSelectorUsersMetadataAnnotations {
	return ListUsersResponsePathSelectorUsersMetadataAnnotations{}
}

func (ListUsersResponsePathSelectorUsersMetadata) Generation() ListUsersResponsePathSelectorUsersMetadataGeneration {
	return ListUsersResponsePathSelectorUsersMetadataGeneration{}
}

func (ListUsersResponsePathSelectorUsersMetadata) ResourceVersion() ListUsersResponsePathSelectorUsersMetadataResourceVersion {
	return ListUsersResponsePathSelectorUsersMetadataResourceVersion{}
}

func (ListUsersResponsePathSelectorUsersMetadata) OwnerReferences() ListUsersResponsePathSelectorUsersMetadataOwnerReferences {
	return ListUsersResponsePathSelectorUsersMetadataOwnerReferences{}
}

func (ListUsersResponsePathSelectorUsersMetadata) Shards() ListUsersResponsePathSelectorUsersMetadataShards {
	return ListUsersResponsePathSelectorUsersMetadataShards{}
}

func (ListUsersResponsePathSelectorUsersMetadata) Syncing() ListUsersResponsePathSelectorUsersMetadataSyncing {
	return ListUsersResponsePathSelectorUsersMetadataSyncing{}
}

func (ListUsersResponsePathSelectorUsersMetadata) Lifecycle() ListUsersResponsePathSelectorUsersMetadataLifecycle {
	return ListUsersResponsePathSelectorUsersMetadataLifecycle{}
}

type ListUsersResponsePathSelectorUsersMetadataCreateTime struct{}

func (ListUsersResponsePathSelectorUsersMetadataCreateTime) FieldPath() *ListUsersResponse_FieldSubPath {
	return &ListUsersResponse_FieldSubPath{
		selector: ListUsersResponse_FieldPathSelectorUsers,
		subPath:  user.NewUserFieldPathBuilder().Metadata().CreateTime().FieldPath(),
	}
}

func (s ListUsersResponsePathSelectorUsersMetadataCreateTime) WithValue(value *timestamp.Timestamp) *ListUsersResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListUsersResponse_FieldSubPathValue)
}

func (s ListUsersResponsePathSelectorUsersMetadataCreateTime) WithArrayOfValues(values []*timestamp.Timestamp) *ListUsersResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListUsersResponse_FieldSubPathArrayOfValues)
}

type ListUsersResponsePathSelectorUsersMetadataUpdateTime struct{}

func (ListUsersResponsePathSelectorUsersMetadataUpdateTime) FieldPath() *ListUsersResponse_FieldSubPath {
	return &ListUsersResponse_FieldSubPath{
		selector: ListUsersResponse_FieldPathSelectorUsers,
		subPath:  user.NewUserFieldPathBuilder().Metadata().UpdateTime().FieldPath(),
	}
}

func (s ListUsersResponsePathSelectorUsersMetadataUpdateTime) WithValue(value *timestamp.Timestamp) *ListUsersResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListUsersResponse_FieldSubPathValue)
}

func (s ListUsersResponsePathSelectorUsersMetadataUpdateTime) WithArrayOfValues(values []*timestamp.Timestamp) *ListUsersResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListUsersResponse_FieldSubPathArrayOfValues)
}

type ListUsersResponsePathSelectorUsersMetadataDeleteTime struct{}

func (ListUsersResponsePathSelectorUsersMetadataDeleteTime) FieldPath() *ListUsersResponse_FieldSubPath {
	return &ListUsersResponse_FieldSubPath{
		selector: ListUsersResponse_FieldPathSelectorUsers,
		subPath:  user.NewUserFieldPathBuilder().Metadata().DeleteTime().FieldPath(),
	}
}

func (s ListUsersResponsePathSelectorUsersMetadataDeleteTime) WithValue(value *timestamp.Timestamp) *ListUsersResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListUsersResponse_FieldSubPathValue)
}

func (s ListUsersResponsePathSelectorUsersMetadataDeleteTime) WithArrayOfValues(values []*timestamp.Timestamp) *ListUsersResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListUsersResponse_FieldSubPathArrayOfValues)
}

type ListUsersResponsePathSelectorUsersMetadataUuid struct{}

func (ListUsersResponsePathSelectorUsersMetadataUuid) FieldPath() *ListUsersResponse_FieldSubPath {
	return &ListUsersResponse_FieldSubPath{
		selector: ListUsersResponse_FieldPathSelectorUsers,
		subPath:  user.NewUserFieldPathBuilder().Metadata().Uuid().FieldPath(),
	}
}

func (s ListUsersResponsePathSelectorUsersMetadataUuid) WithValue(value string) *ListUsersResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListUsersResponse_FieldSubPathValue)
}

func (s ListUsersResponsePathSelectorUsersMetadataUuid) WithArrayOfValues(values []string) *ListUsersResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListUsersResponse_FieldSubPathArrayOfValues)
}

type ListUsersResponsePathSelectorUsersMetadataTags struct{}

func (ListUsersResponsePathSelectorUsersMetadataTags) FieldPath() *ListUsersResponse_FieldSubPath {
	return &ListUsersResponse_FieldSubPath{
		selector: ListUsersResponse_FieldPathSelectorUsers,
		subPath:  user.NewUserFieldPathBuilder().Metadata().Tags().FieldPath(),
	}
}

func (s ListUsersResponsePathSelectorUsersMetadataTags) WithValue(value []string) *ListUsersResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListUsersResponse_FieldSubPathValue)
}

func (s ListUsersResponsePathSelectorUsersMetadataTags) WithArrayOfValues(values [][]string) *ListUsersResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListUsersResponse_FieldSubPathArrayOfValues)
}

func (s ListUsersResponsePathSelectorUsersMetadataTags) WithItemValue(value string) *ListUsersResponse_FieldSubPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*ListUsersResponse_FieldSubPathArrayItemValue)
}

type ListUsersResponsePathSelectorUsersMetadataLabels struct{}

func (ListUsersResponsePathSelectorUsersMetadataLabels) FieldPath() *ListUsersResponse_FieldSubPath {
	return &ListUsersResponse_FieldSubPath{
		selector: ListUsersResponse_FieldPathSelectorUsers,
		subPath:  user.NewUserFieldPathBuilder().Metadata().Labels().FieldPath(),
	}
}

func (s ListUsersResponsePathSelectorUsersMetadataLabels) WithValue(value map[string]string) *ListUsersResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListUsersResponse_FieldSubPathValue)
}

func (s ListUsersResponsePathSelectorUsersMetadataLabels) WithArrayOfValues(values []map[string]string) *ListUsersResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListUsersResponse_FieldSubPathArrayOfValues)
}

func (ListUsersResponsePathSelectorUsersMetadataLabels) WithKey(key string) ListUsersResponseMapPathSelectorUsersMetadataLabels {
	return ListUsersResponseMapPathSelectorUsersMetadataLabels{key: key}
}

type ListUsersResponseMapPathSelectorUsersMetadataLabels struct {
	key string
}

func (s ListUsersResponseMapPathSelectorUsersMetadataLabels) FieldPath() *ListUsersResponse_FieldSubPath {
	return &ListUsersResponse_FieldSubPath{
		selector: ListUsersResponse_FieldPathSelectorUsers,
		subPath:  user.NewUserFieldPathBuilder().Metadata().Labels().WithKey(s.key).FieldPath(),
	}
}

func (s ListUsersResponseMapPathSelectorUsersMetadataLabels) WithValue(value string) *ListUsersResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListUsersResponse_FieldSubPathValue)
}

func (s ListUsersResponseMapPathSelectorUsersMetadataLabels) WithArrayOfValues(values []string) *ListUsersResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListUsersResponse_FieldSubPathArrayOfValues)
}

type ListUsersResponsePathSelectorUsersMetadataAnnotations struct{}

func (ListUsersResponsePathSelectorUsersMetadataAnnotations) FieldPath() *ListUsersResponse_FieldSubPath {
	return &ListUsersResponse_FieldSubPath{
		selector: ListUsersResponse_FieldPathSelectorUsers,
		subPath:  user.NewUserFieldPathBuilder().Metadata().Annotations().FieldPath(),
	}
}

func (s ListUsersResponsePathSelectorUsersMetadataAnnotations) WithValue(value map[string]string) *ListUsersResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListUsersResponse_FieldSubPathValue)
}

func (s ListUsersResponsePathSelectorUsersMetadataAnnotations) WithArrayOfValues(values []map[string]string) *ListUsersResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListUsersResponse_FieldSubPathArrayOfValues)
}

func (ListUsersResponsePathSelectorUsersMetadataAnnotations) WithKey(key string) ListUsersResponseMapPathSelectorUsersMetadataAnnotations {
	return ListUsersResponseMapPathSelectorUsersMetadataAnnotations{key: key}
}

type ListUsersResponseMapPathSelectorUsersMetadataAnnotations struct {
	key string
}

func (s ListUsersResponseMapPathSelectorUsersMetadataAnnotations) FieldPath() *ListUsersResponse_FieldSubPath {
	return &ListUsersResponse_FieldSubPath{
		selector: ListUsersResponse_FieldPathSelectorUsers,
		subPath:  user.NewUserFieldPathBuilder().Metadata().Annotations().WithKey(s.key).FieldPath(),
	}
}

func (s ListUsersResponseMapPathSelectorUsersMetadataAnnotations) WithValue(value string) *ListUsersResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListUsersResponse_FieldSubPathValue)
}

func (s ListUsersResponseMapPathSelectorUsersMetadataAnnotations) WithArrayOfValues(values []string) *ListUsersResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListUsersResponse_FieldSubPathArrayOfValues)
}

type ListUsersResponsePathSelectorUsersMetadataGeneration struct{}

func (ListUsersResponsePathSelectorUsersMetadataGeneration) FieldPath() *ListUsersResponse_FieldSubPath {
	return &ListUsersResponse_FieldSubPath{
		selector: ListUsersResponse_FieldPathSelectorUsers,
		subPath:  user.NewUserFieldPathBuilder().Metadata().Generation().FieldPath(),
	}
}

func (s ListUsersResponsePathSelectorUsersMetadataGeneration) WithValue(value int64) *ListUsersResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListUsersResponse_FieldSubPathValue)
}

func (s ListUsersResponsePathSelectorUsersMetadataGeneration) WithArrayOfValues(values []int64) *ListUsersResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListUsersResponse_FieldSubPathArrayOfValues)
}

type ListUsersResponsePathSelectorUsersMetadataResourceVersion struct{}

func (ListUsersResponsePathSelectorUsersMetadataResourceVersion) FieldPath() *ListUsersResponse_FieldSubPath {
	return &ListUsersResponse_FieldSubPath{
		selector: ListUsersResponse_FieldPathSelectorUsers,
		subPath:  user.NewUserFieldPathBuilder().Metadata().ResourceVersion().FieldPath(),
	}
}

func (s ListUsersResponsePathSelectorUsersMetadataResourceVersion) WithValue(value string) *ListUsersResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListUsersResponse_FieldSubPathValue)
}

func (s ListUsersResponsePathSelectorUsersMetadataResourceVersion) WithArrayOfValues(values []string) *ListUsersResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListUsersResponse_FieldSubPathArrayOfValues)
}

type ListUsersResponsePathSelectorUsersMetadataOwnerReferences struct{}

func (ListUsersResponsePathSelectorUsersMetadataOwnerReferences) FieldPath() *ListUsersResponse_FieldSubPath {
	return &ListUsersResponse_FieldSubPath{
		selector: ListUsersResponse_FieldPathSelectorUsers,
		subPath:  user.NewUserFieldPathBuilder().Metadata().OwnerReferences().FieldPath(),
	}
}

func (s ListUsersResponsePathSelectorUsersMetadataOwnerReferences) WithValue(value []*ntt_meta.OwnerReference) *ListUsersResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListUsersResponse_FieldSubPathValue)
}

func (s ListUsersResponsePathSelectorUsersMetadataOwnerReferences) WithArrayOfValues(values [][]*ntt_meta.OwnerReference) *ListUsersResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListUsersResponse_FieldSubPathArrayOfValues)
}

func (s ListUsersResponsePathSelectorUsersMetadataOwnerReferences) WithItemValue(value *ntt_meta.OwnerReference) *ListUsersResponse_FieldSubPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*ListUsersResponse_FieldSubPathArrayItemValue)
}

func (ListUsersResponsePathSelectorUsersMetadataOwnerReferences) Kind() ListUsersResponsePathSelectorUsersMetadataOwnerReferencesKind {
	return ListUsersResponsePathSelectorUsersMetadataOwnerReferencesKind{}
}

func (ListUsersResponsePathSelectorUsersMetadataOwnerReferences) Version() ListUsersResponsePathSelectorUsersMetadataOwnerReferencesVersion {
	return ListUsersResponsePathSelectorUsersMetadataOwnerReferencesVersion{}
}

func (ListUsersResponsePathSelectorUsersMetadataOwnerReferences) Name() ListUsersResponsePathSelectorUsersMetadataOwnerReferencesName {
	return ListUsersResponsePathSelectorUsersMetadataOwnerReferencesName{}
}

func (ListUsersResponsePathSelectorUsersMetadataOwnerReferences) Region() ListUsersResponsePathSelectorUsersMetadataOwnerReferencesRegion {
	return ListUsersResponsePathSelectorUsersMetadataOwnerReferencesRegion{}
}

func (ListUsersResponsePathSelectorUsersMetadataOwnerReferences) Controller() ListUsersResponsePathSelectorUsersMetadataOwnerReferencesController {
	return ListUsersResponsePathSelectorUsersMetadataOwnerReferencesController{}
}

func (ListUsersResponsePathSelectorUsersMetadataOwnerReferences) BlockOwnerDeletion() ListUsersResponsePathSelectorUsersMetadataOwnerReferencesBlockOwnerDeletion {
	return ListUsersResponsePathSelectorUsersMetadataOwnerReferencesBlockOwnerDeletion{}
}

func (ListUsersResponsePathSelectorUsersMetadataOwnerReferences) RequiresOwnerReference() ListUsersResponsePathSelectorUsersMetadataOwnerReferencesRequiresOwnerReference {
	return ListUsersResponsePathSelectorUsersMetadataOwnerReferencesRequiresOwnerReference{}
}

type ListUsersResponsePathSelectorUsersMetadataOwnerReferencesKind struct{}

func (ListUsersResponsePathSelectorUsersMetadataOwnerReferencesKind) FieldPath() *ListUsersResponse_FieldSubPath {
	return &ListUsersResponse_FieldSubPath{
		selector: ListUsersResponse_FieldPathSelectorUsers,
		subPath:  user.NewUserFieldPathBuilder().Metadata().OwnerReferences().Kind().FieldPath(),
	}
}

func (s ListUsersResponsePathSelectorUsersMetadataOwnerReferencesKind) WithValue(value string) *ListUsersResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListUsersResponse_FieldSubPathValue)
}

func (s ListUsersResponsePathSelectorUsersMetadataOwnerReferencesKind) WithArrayOfValues(values []string) *ListUsersResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListUsersResponse_FieldSubPathArrayOfValues)
}

type ListUsersResponsePathSelectorUsersMetadataOwnerReferencesVersion struct{}

func (ListUsersResponsePathSelectorUsersMetadataOwnerReferencesVersion) FieldPath() *ListUsersResponse_FieldSubPath {
	return &ListUsersResponse_FieldSubPath{
		selector: ListUsersResponse_FieldPathSelectorUsers,
		subPath:  user.NewUserFieldPathBuilder().Metadata().OwnerReferences().Version().FieldPath(),
	}
}

func (s ListUsersResponsePathSelectorUsersMetadataOwnerReferencesVersion) WithValue(value string) *ListUsersResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListUsersResponse_FieldSubPathValue)
}

func (s ListUsersResponsePathSelectorUsersMetadataOwnerReferencesVersion) WithArrayOfValues(values []string) *ListUsersResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListUsersResponse_FieldSubPathArrayOfValues)
}

type ListUsersResponsePathSelectorUsersMetadataOwnerReferencesName struct{}

func (ListUsersResponsePathSelectorUsersMetadataOwnerReferencesName) FieldPath() *ListUsersResponse_FieldSubPath {
	return &ListUsersResponse_FieldSubPath{
		selector: ListUsersResponse_FieldPathSelectorUsers,
		subPath:  user.NewUserFieldPathBuilder().Metadata().OwnerReferences().Name().FieldPath(),
	}
}

func (s ListUsersResponsePathSelectorUsersMetadataOwnerReferencesName) WithValue(value string) *ListUsersResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListUsersResponse_FieldSubPathValue)
}

func (s ListUsersResponsePathSelectorUsersMetadataOwnerReferencesName) WithArrayOfValues(values []string) *ListUsersResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListUsersResponse_FieldSubPathArrayOfValues)
}

type ListUsersResponsePathSelectorUsersMetadataOwnerReferencesRegion struct{}

func (ListUsersResponsePathSelectorUsersMetadataOwnerReferencesRegion) FieldPath() *ListUsersResponse_FieldSubPath {
	return &ListUsersResponse_FieldSubPath{
		selector: ListUsersResponse_FieldPathSelectorUsers,
		subPath:  user.NewUserFieldPathBuilder().Metadata().OwnerReferences().Region().FieldPath(),
	}
}

func (s ListUsersResponsePathSelectorUsersMetadataOwnerReferencesRegion) WithValue(value string) *ListUsersResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListUsersResponse_FieldSubPathValue)
}

func (s ListUsersResponsePathSelectorUsersMetadataOwnerReferencesRegion) WithArrayOfValues(values []string) *ListUsersResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListUsersResponse_FieldSubPathArrayOfValues)
}

type ListUsersResponsePathSelectorUsersMetadataOwnerReferencesController struct{}

func (ListUsersResponsePathSelectorUsersMetadataOwnerReferencesController) FieldPath() *ListUsersResponse_FieldSubPath {
	return &ListUsersResponse_FieldSubPath{
		selector: ListUsersResponse_FieldPathSelectorUsers,
		subPath:  user.NewUserFieldPathBuilder().Metadata().OwnerReferences().Controller().FieldPath(),
	}
}

func (s ListUsersResponsePathSelectorUsersMetadataOwnerReferencesController) WithValue(value bool) *ListUsersResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListUsersResponse_FieldSubPathValue)
}

func (s ListUsersResponsePathSelectorUsersMetadataOwnerReferencesController) WithArrayOfValues(values []bool) *ListUsersResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListUsersResponse_FieldSubPathArrayOfValues)
}

type ListUsersResponsePathSelectorUsersMetadataOwnerReferencesBlockOwnerDeletion struct{}

func (ListUsersResponsePathSelectorUsersMetadataOwnerReferencesBlockOwnerDeletion) FieldPath() *ListUsersResponse_FieldSubPath {
	return &ListUsersResponse_FieldSubPath{
		selector: ListUsersResponse_FieldPathSelectorUsers,
		subPath:  user.NewUserFieldPathBuilder().Metadata().OwnerReferences().BlockOwnerDeletion().FieldPath(),
	}
}

func (s ListUsersResponsePathSelectorUsersMetadataOwnerReferencesBlockOwnerDeletion) WithValue(value bool) *ListUsersResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListUsersResponse_FieldSubPathValue)
}

func (s ListUsersResponsePathSelectorUsersMetadataOwnerReferencesBlockOwnerDeletion) WithArrayOfValues(values []bool) *ListUsersResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListUsersResponse_FieldSubPathArrayOfValues)
}

type ListUsersResponsePathSelectorUsersMetadataOwnerReferencesRequiresOwnerReference struct{}

func (ListUsersResponsePathSelectorUsersMetadataOwnerReferencesRequiresOwnerReference) FieldPath() *ListUsersResponse_FieldSubPath {
	return &ListUsersResponse_FieldSubPath{
		selector: ListUsersResponse_FieldPathSelectorUsers,
		subPath:  user.NewUserFieldPathBuilder().Metadata().OwnerReferences().RequiresOwnerReference().FieldPath(),
	}
}

func (s ListUsersResponsePathSelectorUsersMetadataOwnerReferencesRequiresOwnerReference) WithValue(value bool) *ListUsersResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListUsersResponse_FieldSubPathValue)
}

func (s ListUsersResponsePathSelectorUsersMetadataOwnerReferencesRequiresOwnerReference) WithArrayOfValues(values []bool) *ListUsersResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListUsersResponse_FieldSubPathArrayOfValues)
}

type ListUsersResponsePathSelectorUsersMetadataShards struct{}

func (ListUsersResponsePathSelectorUsersMetadataShards) FieldPath() *ListUsersResponse_FieldSubPath {
	return &ListUsersResponse_FieldSubPath{
		selector: ListUsersResponse_FieldPathSelectorUsers,
		subPath:  user.NewUserFieldPathBuilder().Metadata().Shards().FieldPath(),
	}
}

func (s ListUsersResponsePathSelectorUsersMetadataShards) WithValue(value map[string]int64) *ListUsersResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListUsersResponse_FieldSubPathValue)
}

func (s ListUsersResponsePathSelectorUsersMetadataShards) WithArrayOfValues(values []map[string]int64) *ListUsersResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListUsersResponse_FieldSubPathArrayOfValues)
}

func (ListUsersResponsePathSelectorUsersMetadataShards) WithKey(key string) ListUsersResponseMapPathSelectorUsersMetadataShards {
	return ListUsersResponseMapPathSelectorUsersMetadataShards{key: key}
}

type ListUsersResponseMapPathSelectorUsersMetadataShards struct {
	key string
}

func (s ListUsersResponseMapPathSelectorUsersMetadataShards) FieldPath() *ListUsersResponse_FieldSubPath {
	return &ListUsersResponse_FieldSubPath{
		selector: ListUsersResponse_FieldPathSelectorUsers,
		subPath:  user.NewUserFieldPathBuilder().Metadata().Shards().WithKey(s.key).FieldPath(),
	}
}

func (s ListUsersResponseMapPathSelectorUsersMetadataShards) WithValue(value int64) *ListUsersResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListUsersResponse_FieldSubPathValue)
}

func (s ListUsersResponseMapPathSelectorUsersMetadataShards) WithArrayOfValues(values []int64) *ListUsersResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListUsersResponse_FieldSubPathArrayOfValues)
}

type ListUsersResponsePathSelectorUsersMetadataSyncing struct{}

func (ListUsersResponsePathSelectorUsersMetadataSyncing) FieldPath() *ListUsersResponse_FieldSubPath {
	return &ListUsersResponse_FieldSubPath{
		selector: ListUsersResponse_FieldPathSelectorUsers,
		subPath:  user.NewUserFieldPathBuilder().Metadata().Syncing().FieldPath(),
	}
}

func (s ListUsersResponsePathSelectorUsersMetadataSyncing) WithValue(value *ntt_meta.SyncingMeta) *ListUsersResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListUsersResponse_FieldSubPathValue)
}

func (s ListUsersResponsePathSelectorUsersMetadataSyncing) WithArrayOfValues(values []*ntt_meta.SyncingMeta) *ListUsersResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListUsersResponse_FieldSubPathArrayOfValues)
}

func (ListUsersResponsePathSelectorUsersMetadataSyncing) OwningRegion() ListUsersResponsePathSelectorUsersMetadataSyncingOwningRegion {
	return ListUsersResponsePathSelectorUsersMetadataSyncingOwningRegion{}
}

func (ListUsersResponsePathSelectorUsersMetadataSyncing) Regions() ListUsersResponsePathSelectorUsersMetadataSyncingRegions {
	return ListUsersResponsePathSelectorUsersMetadataSyncingRegions{}
}

type ListUsersResponsePathSelectorUsersMetadataSyncingOwningRegion struct{}

func (ListUsersResponsePathSelectorUsersMetadataSyncingOwningRegion) FieldPath() *ListUsersResponse_FieldSubPath {
	return &ListUsersResponse_FieldSubPath{
		selector: ListUsersResponse_FieldPathSelectorUsers,
		subPath:  user.NewUserFieldPathBuilder().Metadata().Syncing().OwningRegion().FieldPath(),
	}
}

func (s ListUsersResponsePathSelectorUsersMetadataSyncingOwningRegion) WithValue(value string) *ListUsersResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListUsersResponse_FieldSubPathValue)
}

func (s ListUsersResponsePathSelectorUsersMetadataSyncingOwningRegion) WithArrayOfValues(values []string) *ListUsersResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListUsersResponse_FieldSubPathArrayOfValues)
}

type ListUsersResponsePathSelectorUsersMetadataSyncingRegions struct{}

func (ListUsersResponsePathSelectorUsersMetadataSyncingRegions) FieldPath() *ListUsersResponse_FieldSubPath {
	return &ListUsersResponse_FieldSubPath{
		selector: ListUsersResponse_FieldPathSelectorUsers,
		subPath:  user.NewUserFieldPathBuilder().Metadata().Syncing().Regions().FieldPath(),
	}
}

func (s ListUsersResponsePathSelectorUsersMetadataSyncingRegions) WithValue(value []string) *ListUsersResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListUsersResponse_FieldSubPathValue)
}

func (s ListUsersResponsePathSelectorUsersMetadataSyncingRegions) WithArrayOfValues(values [][]string) *ListUsersResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListUsersResponse_FieldSubPathArrayOfValues)
}

func (s ListUsersResponsePathSelectorUsersMetadataSyncingRegions) WithItemValue(value string) *ListUsersResponse_FieldSubPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*ListUsersResponse_FieldSubPathArrayItemValue)
}

type ListUsersResponsePathSelectorUsersMetadataLifecycle struct{}

func (ListUsersResponsePathSelectorUsersMetadataLifecycle) FieldPath() *ListUsersResponse_FieldSubPath {
	return &ListUsersResponse_FieldSubPath{
		selector: ListUsersResponse_FieldPathSelectorUsers,
		subPath:  user.NewUserFieldPathBuilder().Metadata().Lifecycle().FieldPath(),
	}
}

func (s ListUsersResponsePathSelectorUsersMetadataLifecycle) WithValue(value *ntt_meta.Lifecycle) *ListUsersResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListUsersResponse_FieldSubPathValue)
}

func (s ListUsersResponsePathSelectorUsersMetadataLifecycle) WithArrayOfValues(values []*ntt_meta.Lifecycle) *ListUsersResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListUsersResponse_FieldSubPathArrayOfValues)
}

func (ListUsersResponsePathSelectorUsersMetadataLifecycle) State() ListUsersResponsePathSelectorUsersMetadataLifecycleState {
	return ListUsersResponsePathSelectorUsersMetadataLifecycleState{}
}

func (ListUsersResponsePathSelectorUsersMetadataLifecycle) BlockDeletion() ListUsersResponsePathSelectorUsersMetadataLifecycleBlockDeletion {
	return ListUsersResponsePathSelectorUsersMetadataLifecycleBlockDeletion{}
}

type ListUsersResponsePathSelectorUsersMetadataLifecycleState struct{}

func (ListUsersResponsePathSelectorUsersMetadataLifecycleState) FieldPath() *ListUsersResponse_FieldSubPath {
	return &ListUsersResponse_FieldSubPath{
		selector: ListUsersResponse_FieldPathSelectorUsers,
		subPath:  user.NewUserFieldPathBuilder().Metadata().Lifecycle().State().FieldPath(),
	}
}

func (s ListUsersResponsePathSelectorUsersMetadataLifecycleState) WithValue(value ntt_meta.Lifecycle_State) *ListUsersResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListUsersResponse_FieldSubPathValue)
}

func (s ListUsersResponsePathSelectorUsersMetadataLifecycleState) WithArrayOfValues(values []ntt_meta.Lifecycle_State) *ListUsersResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListUsersResponse_FieldSubPathArrayOfValues)
}

type ListUsersResponsePathSelectorUsersMetadataLifecycleBlockDeletion struct{}

func (ListUsersResponsePathSelectorUsersMetadataLifecycleBlockDeletion) FieldPath() *ListUsersResponse_FieldSubPath {
	return &ListUsersResponse_FieldSubPath{
		selector: ListUsersResponse_FieldPathSelectorUsers,
		subPath:  user.NewUserFieldPathBuilder().Metadata().Lifecycle().BlockDeletion().FieldPath(),
	}
}

func (s ListUsersResponsePathSelectorUsersMetadataLifecycleBlockDeletion) WithValue(value bool) *ListUsersResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListUsersResponse_FieldSubPathValue)
}

func (s ListUsersResponsePathSelectorUsersMetadataLifecycleBlockDeletion) WithArrayOfValues(values []bool) *ListUsersResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListUsersResponse_FieldSubPathArrayOfValues)
}

type ListUsersResponsePathSelectorUsersEmail struct{}

func (ListUsersResponsePathSelectorUsersEmail) FieldPath() *ListUsersResponse_FieldSubPath {
	return &ListUsersResponse_FieldSubPath{
		selector: ListUsersResponse_FieldPathSelectorUsers,
		subPath:  user.NewUserFieldPathBuilder().Email().FieldPath(),
	}
}

func (s ListUsersResponsePathSelectorUsersEmail) WithValue(value string) *ListUsersResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListUsersResponse_FieldSubPathValue)
}

func (s ListUsersResponsePathSelectorUsersEmail) WithArrayOfValues(values []string) *ListUsersResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListUsersResponse_FieldSubPathArrayOfValues)
}

type ListUsersResponsePathSelectorUsersEmailVerified struct{}

func (ListUsersResponsePathSelectorUsersEmailVerified) FieldPath() *ListUsersResponse_FieldSubPath {
	return &ListUsersResponse_FieldSubPath{
		selector: ListUsersResponse_FieldPathSelectorUsers,
		subPath:  user.NewUserFieldPathBuilder().EmailVerified().FieldPath(),
	}
}

func (s ListUsersResponsePathSelectorUsersEmailVerified) WithValue(value bool) *ListUsersResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListUsersResponse_FieldSubPathValue)
}

func (s ListUsersResponsePathSelectorUsersEmailVerified) WithArrayOfValues(values []bool) *ListUsersResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListUsersResponse_FieldSubPathArrayOfValues)
}

type ListUsersResponsePathSelectorUsersAuthInfo struct{}

func (ListUsersResponsePathSelectorUsersAuthInfo) FieldPath() *ListUsersResponse_FieldSubPath {
	return &ListUsersResponse_FieldSubPath{
		selector: ListUsersResponse_FieldPathSelectorUsers,
		subPath:  user.NewUserFieldPathBuilder().AuthInfo().FieldPath(),
	}
}

func (s ListUsersResponsePathSelectorUsersAuthInfo) WithValue(value *user.User_AuthInfo) *ListUsersResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListUsersResponse_FieldSubPathValue)
}

func (s ListUsersResponsePathSelectorUsersAuthInfo) WithArrayOfValues(values []*user.User_AuthInfo) *ListUsersResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListUsersResponse_FieldSubPathArrayOfValues)
}

func (ListUsersResponsePathSelectorUsersAuthInfo) Provider() ListUsersResponsePathSelectorUsersAuthInfoProvider {
	return ListUsersResponsePathSelectorUsersAuthInfoProvider{}
}

func (ListUsersResponsePathSelectorUsersAuthInfo) Id() ListUsersResponsePathSelectorUsersAuthInfoId {
	return ListUsersResponsePathSelectorUsersAuthInfoId{}
}

type ListUsersResponsePathSelectorUsersAuthInfoProvider struct{}

func (ListUsersResponsePathSelectorUsersAuthInfoProvider) FieldPath() *ListUsersResponse_FieldSubPath {
	return &ListUsersResponse_FieldSubPath{
		selector: ListUsersResponse_FieldPathSelectorUsers,
		subPath:  user.NewUserFieldPathBuilder().AuthInfo().Provider().FieldPath(),
	}
}

func (s ListUsersResponsePathSelectorUsersAuthInfoProvider) WithValue(value string) *ListUsersResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListUsersResponse_FieldSubPathValue)
}

func (s ListUsersResponsePathSelectorUsersAuthInfoProvider) WithArrayOfValues(values []string) *ListUsersResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListUsersResponse_FieldSubPathArrayOfValues)
}

type ListUsersResponsePathSelectorUsersAuthInfoId struct{}

func (ListUsersResponsePathSelectorUsersAuthInfoId) FieldPath() *ListUsersResponse_FieldSubPath {
	return &ListUsersResponse_FieldSubPath{
		selector: ListUsersResponse_FieldPathSelectorUsers,
		subPath:  user.NewUserFieldPathBuilder().AuthInfo().Id().FieldPath(),
	}
}

func (s ListUsersResponsePathSelectorUsersAuthInfoId) WithValue(value string) *ListUsersResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListUsersResponse_FieldSubPathValue)
}

func (s ListUsersResponsePathSelectorUsersAuthInfoId) WithArrayOfValues(values []string) *ListUsersResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListUsersResponse_FieldSubPathArrayOfValues)
}

type ListUsersResponsePathSelectorUsersSettings struct{}

func (ListUsersResponsePathSelectorUsersSettings) FieldPath() *ListUsersResponse_FieldSubPath {
	return &ListUsersResponse_FieldSubPath{
		selector: ListUsersResponse_FieldPathSelectorUsers,
		subPath:  user.NewUserFieldPathBuilder().Settings().FieldPath(),
	}
}

func (s ListUsersResponsePathSelectorUsersSettings) WithValue(value map[string]string) *ListUsersResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListUsersResponse_FieldSubPathValue)
}

func (s ListUsersResponsePathSelectorUsersSettings) WithArrayOfValues(values []map[string]string) *ListUsersResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListUsersResponse_FieldSubPathArrayOfValues)
}

func (ListUsersResponsePathSelectorUsersSettings) WithKey(key string) ListUsersResponseMapPathSelectorUsersSettings {
	return ListUsersResponseMapPathSelectorUsersSettings{key: key}
}

type ListUsersResponseMapPathSelectorUsersSettings struct {
	key string
}

func (s ListUsersResponseMapPathSelectorUsersSettings) FieldPath() *ListUsersResponse_FieldSubPath {
	return &ListUsersResponse_FieldSubPath{
		selector: ListUsersResponse_FieldPathSelectorUsers,
		subPath:  user.NewUserFieldPathBuilder().Settings().WithKey(s.key).FieldPath(),
	}
}

func (s ListUsersResponseMapPathSelectorUsersSettings) WithValue(value string) *ListUsersResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListUsersResponse_FieldSubPathValue)
}

func (s ListUsersResponseMapPathSelectorUsersSettings) WithArrayOfValues(values []string) *ListUsersResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListUsersResponse_FieldSubPathArrayOfValues)
}

type ListUsersResponsePathSelectorUsersRefreshedTime struct{}

func (ListUsersResponsePathSelectorUsersRefreshedTime) FieldPath() *ListUsersResponse_FieldSubPath {
	return &ListUsersResponse_FieldSubPath{
		selector: ListUsersResponse_FieldPathSelectorUsers,
		subPath:  user.NewUserFieldPathBuilder().RefreshedTime().FieldPath(),
	}
}

func (s ListUsersResponsePathSelectorUsersRefreshedTime) WithValue(value *timestamp.Timestamp) *ListUsersResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListUsersResponse_FieldSubPathValue)
}

func (s ListUsersResponsePathSelectorUsersRefreshedTime) WithArrayOfValues(values []*timestamp.Timestamp) *ListUsersResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListUsersResponse_FieldSubPathArrayOfValues)
}

type ListUsersResponsePathSelectorPrevPageToken struct{}

func (ListUsersResponsePathSelectorPrevPageToken) FieldPath() *ListUsersResponse_FieldTerminalPath {
	return &ListUsersResponse_FieldTerminalPath{selector: ListUsersResponse_FieldPathSelectorPrevPageToken}
}

func (s ListUsersResponsePathSelectorPrevPageToken) WithValue(value *user.PagerCursor) *ListUsersResponse_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*ListUsersResponse_FieldTerminalPathValue)
}

func (s ListUsersResponsePathSelectorPrevPageToken) WithArrayOfValues(values []*user.PagerCursor) *ListUsersResponse_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListUsersResponse_FieldTerminalPathArrayOfValues)
}

type ListUsersResponsePathSelectorNextPageToken struct{}

func (ListUsersResponsePathSelectorNextPageToken) FieldPath() *ListUsersResponse_FieldTerminalPath {
	return &ListUsersResponse_FieldTerminalPath{selector: ListUsersResponse_FieldPathSelectorNextPageToken}
}

func (s ListUsersResponsePathSelectorNextPageToken) WithValue(value *user.PagerCursor) *ListUsersResponse_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*ListUsersResponse_FieldTerminalPathValue)
}

func (s ListUsersResponsePathSelectorNextPageToken) WithArrayOfValues(values []*user.PagerCursor) *ListUsersResponse_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListUsersResponse_FieldTerminalPathArrayOfValues)
}

type ListUsersResponsePathSelectorCurrentOffset struct{}

func (ListUsersResponsePathSelectorCurrentOffset) FieldPath() *ListUsersResponse_FieldTerminalPath {
	return &ListUsersResponse_FieldTerminalPath{selector: ListUsersResponse_FieldPathSelectorCurrentOffset}
}

func (s ListUsersResponsePathSelectorCurrentOffset) WithValue(value int32) *ListUsersResponse_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*ListUsersResponse_FieldTerminalPathValue)
}

func (s ListUsersResponsePathSelectorCurrentOffset) WithArrayOfValues(values []int32) *ListUsersResponse_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListUsersResponse_FieldTerminalPathArrayOfValues)
}

type ListUsersResponsePathSelectorTotalResultsCount struct{}

func (ListUsersResponsePathSelectorTotalResultsCount) FieldPath() *ListUsersResponse_FieldTerminalPath {
	return &ListUsersResponse_FieldTerminalPath{selector: ListUsersResponse_FieldPathSelectorTotalResultsCount}
}

func (s ListUsersResponsePathSelectorTotalResultsCount) WithValue(value int32) *ListUsersResponse_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*ListUsersResponse_FieldTerminalPathValue)
}

func (s ListUsersResponsePathSelectorTotalResultsCount) WithArrayOfValues(values []int32) *ListUsersResponse_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListUsersResponse_FieldTerminalPathArrayOfValues)
}

type WatchUserRequestFieldPathBuilder struct{}

func NewWatchUserRequestFieldPathBuilder() WatchUserRequestFieldPathBuilder {
	return WatchUserRequestFieldPathBuilder{}
}
func (WatchUserRequestFieldPathBuilder) Name() WatchUserRequestPathSelectorName {
	return WatchUserRequestPathSelectorName{}
}
func (WatchUserRequestFieldPathBuilder) FieldMask() WatchUserRequestPathSelectorFieldMask {
	return WatchUserRequestPathSelectorFieldMask{}
}
func (WatchUserRequestFieldPathBuilder) View() WatchUserRequestPathSelectorView {
	return WatchUserRequestPathSelectorView{}
}

type WatchUserRequestPathSelectorName struct{}

func (WatchUserRequestPathSelectorName) FieldPath() *WatchUserRequest_FieldTerminalPath {
	return &WatchUserRequest_FieldTerminalPath{selector: WatchUserRequest_FieldPathSelectorName}
}

func (s WatchUserRequestPathSelectorName) WithValue(value *user.Reference) *WatchUserRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*WatchUserRequest_FieldTerminalPathValue)
}

func (s WatchUserRequestPathSelectorName) WithArrayOfValues(values []*user.Reference) *WatchUserRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*WatchUserRequest_FieldTerminalPathArrayOfValues)
}

type WatchUserRequestPathSelectorFieldMask struct{}

func (WatchUserRequestPathSelectorFieldMask) FieldPath() *WatchUserRequest_FieldTerminalPath {
	return &WatchUserRequest_FieldTerminalPath{selector: WatchUserRequest_FieldPathSelectorFieldMask}
}

func (s WatchUserRequestPathSelectorFieldMask) WithValue(value *user.User_FieldMask) *WatchUserRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*WatchUserRequest_FieldTerminalPathValue)
}

func (s WatchUserRequestPathSelectorFieldMask) WithArrayOfValues(values []*user.User_FieldMask) *WatchUserRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*WatchUserRequest_FieldTerminalPathArrayOfValues)
}

type WatchUserRequestPathSelectorView struct{}

func (WatchUserRequestPathSelectorView) FieldPath() *WatchUserRequest_FieldTerminalPath {
	return &WatchUserRequest_FieldTerminalPath{selector: WatchUserRequest_FieldPathSelectorView}
}

func (s WatchUserRequestPathSelectorView) WithValue(value view.View) *WatchUserRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*WatchUserRequest_FieldTerminalPathValue)
}

func (s WatchUserRequestPathSelectorView) WithArrayOfValues(values []view.View) *WatchUserRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*WatchUserRequest_FieldTerminalPathArrayOfValues)
}

type WatchUserResponseFieldPathBuilder struct{}

func NewWatchUserResponseFieldPathBuilder() WatchUserResponseFieldPathBuilder {
	return WatchUserResponseFieldPathBuilder{}
}
func (WatchUserResponseFieldPathBuilder) Change() WatchUserResponsePathSelectorChange {
	return WatchUserResponsePathSelectorChange{}
}

type WatchUserResponsePathSelectorChange struct{}

func (WatchUserResponsePathSelectorChange) FieldPath() *WatchUserResponse_FieldTerminalPath {
	return &WatchUserResponse_FieldTerminalPath{selector: WatchUserResponse_FieldPathSelectorChange}
}

func (s WatchUserResponsePathSelectorChange) WithValue(value *user.UserChange) *WatchUserResponse_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*WatchUserResponse_FieldTerminalPathValue)
}

func (s WatchUserResponsePathSelectorChange) WithArrayOfValues(values []*user.UserChange) *WatchUserResponse_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*WatchUserResponse_FieldTerminalPathArrayOfValues)
}

type WatchUsersRequestFieldPathBuilder struct{}

func NewWatchUsersRequestFieldPathBuilder() WatchUsersRequestFieldPathBuilder {
	return WatchUsersRequestFieldPathBuilder{}
}
func (WatchUsersRequestFieldPathBuilder) Type() WatchUsersRequestPathSelectorType {
	return WatchUsersRequestPathSelectorType{}
}
func (WatchUsersRequestFieldPathBuilder) PageSize() WatchUsersRequestPathSelectorPageSize {
	return WatchUsersRequestPathSelectorPageSize{}
}
func (WatchUsersRequestFieldPathBuilder) PageToken() WatchUsersRequestPathSelectorPageToken {
	return WatchUsersRequestPathSelectorPageToken{}
}
func (WatchUsersRequestFieldPathBuilder) OrderBy() WatchUsersRequestPathSelectorOrderBy {
	return WatchUsersRequestPathSelectorOrderBy{}
}
func (WatchUsersRequestFieldPathBuilder) ResumeToken() WatchUsersRequestPathSelectorResumeToken {
	return WatchUsersRequestPathSelectorResumeToken{}
}
func (WatchUsersRequestFieldPathBuilder) StartingTime() WatchUsersRequestPathSelectorStartingTime {
	return WatchUsersRequestPathSelectorStartingTime{}
}
func (WatchUsersRequestFieldPathBuilder) Filter() WatchUsersRequestPathSelectorFilter {
	return WatchUsersRequestPathSelectorFilter{}
}
func (WatchUsersRequestFieldPathBuilder) FieldMask() WatchUsersRequestPathSelectorFieldMask {
	return WatchUsersRequestPathSelectorFieldMask{}
}
func (WatchUsersRequestFieldPathBuilder) View() WatchUsersRequestPathSelectorView {
	return WatchUsersRequestPathSelectorView{}
}
func (WatchUsersRequestFieldPathBuilder) MaxChunkSize() WatchUsersRequestPathSelectorMaxChunkSize {
	return WatchUsersRequestPathSelectorMaxChunkSize{}
}

type WatchUsersRequestPathSelectorType struct{}

func (WatchUsersRequestPathSelectorType) FieldPath() *WatchUsersRequest_FieldTerminalPath {
	return &WatchUsersRequest_FieldTerminalPath{selector: WatchUsersRequest_FieldPathSelectorType}
}

func (s WatchUsersRequestPathSelectorType) WithValue(value watch_type.WatchType) *WatchUsersRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*WatchUsersRequest_FieldTerminalPathValue)
}

func (s WatchUsersRequestPathSelectorType) WithArrayOfValues(values []watch_type.WatchType) *WatchUsersRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*WatchUsersRequest_FieldTerminalPathArrayOfValues)
}

type WatchUsersRequestPathSelectorPageSize struct{}

func (WatchUsersRequestPathSelectorPageSize) FieldPath() *WatchUsersRequest_FieldTerminalPath {
	return &WatchUsersRequest_FieldTerminalPath{selector: WatchUsersRequest_FieldPathSelectorPageSize}
}

func (s WatchUsersRequestPathSelectorPageSize) WithValue(value int32) *WatchUsersRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*WatchUsersRequest_FieldTerminalPathValue)
}

func (s WatchUsersRequestPathSelectorPageSize) WithArrayOfValues(values []int32) *WatchUsersRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*WatchUsersRequest_FieldTerminalPathArrayOfValues)
}

type WatchUsersRequestPathSelectorPageToken struct{}

func (WatchUsersRequestPathSelectorPageToken) FieldPath() *WatchUsersRequest_FieldTerminalPath {
	return &WatchUsersRequest_FieldTerminalPath{selector: WatchUsersRequest_FieldPathSelectorPageToken}
}

func (s WatchUsersRequestPathSelectorPageToken) WithValue(value *user.PagerCursor) *WatchUsersRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*WatchUsersRequest_FieldTerminalPathValue)
}

func (s WatchUsersRequestPathSelectorPageToken) WithArrayOfValues(values []*user.PagerCursor) *WatchUsersRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*WatchUsersRequest_FieldTerminalPathArrayOfValues)
}

type WatchUsersRequestPathSelectorOrderBy struct{}

func (WatchUsersRequestPathSelectorOrderBy) FieldPath() *WatchUsersRequest_FieldTerminalPath {
	return &WatchUsersRequest_FieldTerminalPath{selector: WatchUsersRequest_FieldPathSelectorOrderBy}
}

func (s WatchUsersRequestPathSelectorOrderBy) WithValue(value *user.OrderBy) *WatchUsersRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*WatchUsersRequest_FieldTerminalPathValue)
}

func (s WatchUsersRequestPathSelectorOrderBy) WithArrayOfValues(values []*user.OrderBy) *WatchUsersRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*WatchUsersRequest_FieldTerminalPathArrayOfValues)
}

type WatchUsersRequestPathSelectorResumeToken struct{}

func (WatchUsersRequestPathSelectorResumeToken) FieldPath() *WatchUsersRequest_FieldTerminalPath {
	return &WatchUsersRequest_FieldTerminalPath{selector: WatchUsersRequest_FieldPathSelectorResumeToken}
}

func (s WatchUsersRequestPathSelectorResumeToken) WithValue(value string) *WatchUsersRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*WatchUsersRequest_FieldTerminalPathValue)
}

func (s WatchUsersRequestPathSelectorResumeToken) WithArrayOfValues(values []string) *WatchUsersRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*WatchUsersRequest_FieldTerminalPathArrayOfValues)
}

type WatchUsersRequestPathSelectorStartingTime struct{}

func (WatchUsersRequestPathSelectorStartingTime) FieldPath() *WatchUsersRequest_FieldTerminalPath {
	return &WatchUsersRequest_FieldTerminalPath{selector: WatchUsersRequest_FieldPathSelectorStartingTime}
}

func (s WatchUsersRequestPathSelectorStartingTime) WithValue(value *timestamp.Timestamp) *WatchUsersRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*WatchUsersRequest_FieldTerminalPathValue)
}

func (s WatchUsersRequestPathSelectorStartingTime) WithArrayOfValues(values []*timestamp.Timestamp) *WatchUsersRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*WatchUsersRequest_FieldTerminalPathArrayOfValues)
}

type WatchUsersRequestPathSelectorFilter struct{}

func (WatchUsersRequestPathSelectorFilter) FieldPath() *WatchUsersRequest_FieldTerminalPath {
	return &WatchUsersRequest_FieldTerminalPath{selector: WatchUsersRequest_FieldPathSelectorFilter}
}

func (s WatchUsersRequestPathSelectorFilter) WithValue(value *user.Filter) *WatchUsersRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*WatchUsersRequest_FieldTerminalPathValue)
}

func (s WatchUsersRequestPathSelectorFilter) WithArrayOfValues(values []*user.Filter) *WatchUsersRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*WatchUsersRequest_FieldTerminalPathArrayOfValues)
}

type WatchUsersRequestPathSelectorFieldMask struct{}

func (WatchUsersRequestPathSelectorFieldMask) FieldPath() *WatchUsersRequest_FieldTerminalPath {
	return &WatchUsersRequest_FieldTerminalPath{selector: WatchUsersRequest_FieldPathSelectorFieldMask}
}

func (s WatchUsersRequestPathSelectorFieldMask) WithValue(value *user.User_FieldMask) *WatchUsersRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*WatchUsersRequest_FieldTerminalPathValue)
}

func (s WatchUsersRequestPathSelectorFieldMask) WithArrayOfValues(values []*user.User_FieldMask) *WatchUsersRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*WatchUsersRequest_FieldTerminalPathArrayOfValues)
}

type WatchUsersRequestPathSelectorView struct{}

func (WatchUsersRequestPathSelectorView) FieldPath() *WatchUsersRequest_FieldTerminalPath {
	return &WatchUsersRequest_FieldTerminalPath{selector: WatchUsersRequest_FieldPathSelectorView}
}

func (s WatchUsersRequestPathSelectorView) WithValue(value view.View) *WatchUsersRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*WatchUsersRequest_FieldTerminalPathValue)
}

func (s WatchUsersRequestPathSelectorView) WithArrayOfValues(values []view.View) *WatchUsersRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*WatchUsersRequest_FieldTerminalPathArrayOfValues)
}

type WatchUsersRequestPathSelectorMaxChunkSize struct{}

func (WatchUsersRequestPathSelectorMaxChunkSize) FieldPath() *WatchUsersRequest_FieldTerminalPath {
	return &WatchUsersRequest_FieldTerminalPath{selector: WatchUsersRequest_FieldPathSelectorMaxChunkSize}
}

func (s WatchUsersRequestPathSelectorMaxChunkSize) WithValue(value int32) *WatchUsersRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*WatchUsersRequest_FieldTerminalPathValue)
}

func (s WatchUsersRequestPathSelectorMaxChunkSize) WithArrayOfValues(values []int32) *WatchUsersRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*WatchUsersRequest_FieldTerminalPathArrayOfValues)
}

type WatchUsersResponseFieldPathBuilder struct{}

func NewWatchUsersResponseFieldPathBuilder() WatchUsersResponseFieldPathBuilder {
	return WatchUsersResponseFieldPathBuilder{}
}
func (WatchUsersResponseFieldPathBuilder) UserChanges() WatchUsersResponsePathSelectorUserChanges {
	return WatchUsersResponsePathSelectorUserChanges{}
}
func (WatchUsersResponseFieldPathBuilder) IsCurrent() WatchUsersResponsePathSelectorIsCurrent {
	return WatchUsersResponsePathSelectorIsCurrent{}
}
func (WatchUsersResponseFieldPathBuilder) PageTokenChange() WatchUsersResponsePathSelectorPageTokenChange {
	return WatchUsersResponsePathSelectorPageTokenChange{}
}
func (WatchUsersResponseFieldPathBuilder) ResumeToken() WatchUsersResponsePathSelectorResumeToken {
	return WatchUsersResponsePathSelectorResumeToken{}
}
func (WatchUsersResponseFieldPathBuilder) SnapshotSize() WatchUsersResponsePathSelectorSnapshotSize {
	return WatchUsersResponsePathSelectorSnapshotSize{}
}
func (WatchUsersResponseFieldPathBuilder) IsSoftReset() WatchUsersResponsePathSelectorIsSoftReset {
	return WatchUsersResponsePathSelectorIsSoftReset{}
}
func (WatchUsersResponseFieldPathBuilder) IsHardReset() WatchUsersResponsePathSelectorIsHardReset {
	return WatchUsersResponsePathSelectorIsHardReset{}
}

type WatchUsersResponsePathSelectorUserChanges struct{}

func (WatchUsersResponsePathSelectorUserChanges) FieldPath() *WatchUsersResponse_FieldTerminalPath {
	return &WatchUsersResponse_FieldTerminalPath{selector: WatchUsersResponse_FieldPathSelectorUserChanges}
}

func (s WatchUsersResponsePathSelectorUserChanges) WithValue(value []*user.UserChange) *WatchUsersResponse_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*WatchUsersResponse_FieldTerminalPathValue)
}

func (s WatchUsersResponsePathSelectorUserChanges) WithArrayOfValues(values [][]*user.UserChange) *WatchUsersResponse_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*WatchUsersResponse_FieldTerminalPathArrayOfValues)
}

func (s WatchUsersResponsePathSelectorUserChanges) WithItemValue(value *user.UserChange) *WatchUsersResponse_FieldTerminalPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*WatchUsersResponse_FieldTerminalPathArrayItemValue)
}

type WatchUsersResponsePathSelectorIsCurrent struct{}

func (WatchUsersResponsePathSelectorIsCurrent) FieldPath() *WatchUsersResponse_FieldTerminalPath {
	return &WatchUsersResponse_FieldTerminalPath{selector: WatchUsersResponse_FieldPathSelectorIsCurrent}
}

func (s WatchUsersResponsePathSelectorIsCurrent) WithValue(value bool) *WatchUsersResponse_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*WatchUsersResponse_FieldTerminalPathValue)
}

func (s WatchUsersResponsePathSelectorIsCurrent) WithArrayOfValues(values []bool) *WatchUsersResponse_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*WatchUsersResponse_FieldTerminalPathArrayOfValues)
}

type WatchUsersResponsePathSelectorPageTokenChange struct{}

func (WatchUsersResponsePathSelectorPageTokenChange) FieldPath() *WatchUsersResponse_FieldTerminalPath {
	return &WatchUsersResponse_FieldTerminalPath{selector: WatchUsersResponse_FieldPathSelectorPageTokenChange}
}

func (s WatchUsersResponsePathSelectorPageTokenChange) WithValue(value *WatchUsersResponse_PageTokenChange) *WatchUsersResponse_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*WatchUsersResponse_FieldTerminalPathValue)
}

func (s WatchUsersResponsePathSelectorPageTokenChange) WithArrayOfValues(values []*WatchUsersResponse_PageTokenChange) *WatchUsersResponse_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*WatchUsersResponse_FieldTerminalPathArrayOfValues)
}

func (WatchUsersResponsePathSelectorPageTokenChange) WithSubPath(subPath WatchUsersResponsePageTokenChange_FieldPath) *WatchUsersResponse_FieldSubPath {
	return &WatchUsersResponse_FieldSubPath{selector: WatchUsersResponse_FieldPathSelectorPageTokenChange, subPath: subPath}
}

func (s WatchUsersResponsePathSelectorPageTokenChange) WithSubValue(subPathValue WatchUsersResponsePageTokenChange_FieldPathValue) *WatchUsersResponse_FieldSubPathValue {
	return &WatchUsersResponse_FieldSubPathValue{WatchUsersResponse_FieldPath: s.WithSubPath(subPathValue), subPathValue: subPathValue}
}

func (s WatchUsersResponsePathSelectorPageTokenChange) WithSubArrayOfValues(subPathArrayOfValues WatchUsersResponsePageTokenChange_FieldPathArrayOfValues) *WatchUsersResponse_FieldSubPathArrayOfValues {
	return &WatchUsersResponse_FieldSubPathArrayOfValues{WatchUsersResponse_FieldPath: s.WithSubPath(subPathArrayOfValues), subPathArrayOfValues: subPathArrayOfValues}
}

func (s WatchUsersResponsePathSelectorPageTokenChange) WithSubArrayItemValue(subPathArrayItemValue WatchUsersResponsePageTokenChange_FieldPathArrayItemValue) *WatchUsersResponse_FieldSubPathArrayItemValue {
	return &WatchUsersResponse_FieldSubPathArrayItemValue{WatchUsersResponse_FieldPath: s.WithSubPath(subPathArrayItemValue), subPathItemValue: subPathArrayItemValue}
}

func (WatchUsersResponsePathSelectorPageTokenChange) PrevPageToken() WatchUsersResponsePathSelectorPageTokenChangePrevPageToken {
	return WatchUsersResponsePathSelectorPageTokenChangePrevPageToken{}
}

func (WatchUsersResponsePathSelectorPageTokenChange) NextPageToken() WatchUsersResponsePathSelectorPageTokenChangeNextPageToken {
	return WatchUsersResponsePathSelectorPageTokenChangeNextPageToken{}
}

type WatchUsersResponsePathSelectorPageTokenChangePrevPageToken struct{}

func (WatchUsersResponsePathSelectorPageTokenChangePrevPageToken) FieldPath() *WatchUsersResponse_FieldSubPath {
	return &WatchUsersResponse_FieldSubPath{
		selector: WatchUsersResponse_FieldPathSelectorPageTokenChange,
		subPath:  NewWatchUsersResponsePageTokenChangeFieldPathBuilder().PrevPageToken().FieldPath(),
	}
}

func (s WatchUsersResponsePathSelectorPageTokenChangePrevPageToken) WithValue(value *user.PagerCursor) *WatchUsersResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*WatchUsersResponse_FieldSubPathValue)
}

func (s WatchUsersResponsePathSelectorPageTokenChangePrevPageToken) WithArrayOfValues(values []*user.PagerCursor) *WatchUsersResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*WatchUsersResponse_FieldSubPathArrayOfValues)
}

type WatchUsersResponsePathSelectorPageTokenChangeNextPageToken struct{}

func (WatchUsersResponsePathSelectorPageTokenChangeNextPageToken) FieldPath() *WatchUsersResponse_FieldSubPath {
	return &WatchUsersResponse_FieldSubPath{
		selector: WatchUsersResponse_FieldPathSelectorPageTokenChange,
		subPath:  NewWatchUsersResponsePageTokenChangeFieldPathBuilder().NextPageToken().FieldPath(),
	}
}

func (s WatchUsersResponsePathSelectorPageTokenChangeNextPageToken) WithValue(value *user.PagerCursor) *WatchUsersResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*WatchUsersResponse_FieldSubPathValue)
}

func (s WatchUsersResponsePathSelectorPageTokenChangeNextPageToken) WithArrayOfValues(values []*user.PagerCursor) *WatchUsersResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*WatchUsersResponse_FieldSubPathArrayOfValues)
}

type WatchUsersResponsePathSelectorResumeToken struct{}

func (WatchUsersResponsePathSelectorResumeToken) FieldPath() *WatchUsersResponse_FieldTerminalPath {
	return &WatchUsersResponse_FieldTerminalPath{selector: WatchUsersResponse_FieldPathSelectorResumeToken}
}

func (s WatchUsersResponsePathSelectorResumeToken) WithValue(value string) *WatchUsersResponse_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*WatchUsersResponse_FieldTerminalPathValue)
}

func (s WatchUsersResponsePathSelectorResumeToken) WithArrayOfValues(values []string) *WatchUsersResponse_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*WatchUsersResponse_FieldTerminalPathArrayOfValues)
}

type WatchUsersResponsePathSelectorSnapshotSize struct{}

func (WatchUsersResponsePathSelectorSnapshotSize) FieldPath() *WatchUsersResponse_FieldTerminalPath {
	return &WatchUsersResponse_FieldTerminalPath{selector: WatchUsersResponse_FieldPathSelectorSnapshotSize}
}

func (s WatchUsersResponsePathSelectorSnapshotSize) WithValue(value int64) *WatchUsersResponse_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*WatchUsersResponse_FieldTerminalPathValue)
}

func (s WatchUsersResponsePathSelectorSnapshotSize) WithArrayOfValues(values []int64) *WatchUsersResponse_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*WatchUsersResponse_FieldTerminalPathArrayOfValues)
}

type WatchUsersResponsePathSelectorIsSoftReset struct{}

func (WatchUsersResponsePathSelectorIsSoftReset) FieldPath() *WatchUsersResponse_FieldTerminalPath {
	return &WatchUsersResponse_FieldTerminalPath{selector: WatchUsersResponse_FieldPathSelectorIsSoftReset}
}

func (s WatchUsersResponsePathSelectorIsSoftReset) WithValue(value bool) *WatchUsersResponse_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*WatchUsersResponse_FieldTerminalPathValue)
}

func (s WatchUsersResponsePathSelectorIsSoftReset) WithArrayOfValues(values []bool) *WatchUsersResponse_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*WatchUsersResponse_FieldTerminalPathArrayOfValues)
}

type WatchUsersResponsePathSelectorIsHardReset struct{}

func (WatchUsersResponsePathSelectorIsHardReset) FieldPath() *WatchUsersResponse_FieldTerminalPath {
	return &WatchUsersResponse_FieldTerminalPath{selector: WatchUsersResponse_FieldPathSelectorIsHardReset}
}

func (s WatchUsersResponsePathSelectorIsHardReset) WithValue(value bool) *WatchUsersResponse_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*WatchUsersResponse_FieldTerminalPathValue)
}

func (s WatchUsersResponsePathSelectorIsHardReset) WithArrayOfValues(values []bool) *WatchUsersResponse_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*WatchUsersResponse_FieldTerminalPathArrayOfValues)
}

type WatchUsersResponsePageTokenChangeFieldPathBuilder struct{}

func NewWatchUsersResponsePageTokenChangeFieldPathBuilder() WatchUsersResponsePageTokenChangeFieldPathBuilder {
	return WatchUsersResponsePageTokenChangeFieldPathBuilder{}
}
func (WatchUsersResponsePageTokenChangeFieldPathBuilder) PrevPageToken() WatchUsersResponse_PageTokenChangePathSelectorPrevPageToken {
	return WatchUsersResponse_PageTokenChangePathSelectorPrevPageToken{}
}
func (WatchUsersResponsePageTokenChangeFieldPathBuilder) NextPageToken() WatchUsersResponse_PageTokenChangePathSelectorNextPageToken {
	return WatchUsersResponse_PageTokenChangePathSelectorNextPageToken{}
}

type WatchUsersResponse_PageTokenChangePathSelectorPrevPageToken struct{}

func (WatchUsersResponse_PageTokenChangePathSelectorPrevPageToken) FieldPath() *WatchUsersResponsePageTokenChange_FieldTerminalPath {
	return &WatchUsersResponsePageTokenChange_FieldTerminalPath{selector: WatchUsersResponsePageTokenChange_FieldPathSelectorPrevPageToken}
}

func (s WatchUsersResponse_PageTokenChangePathSelectorPrevPageToken) WithValue(value *user.PagerCursor) *WatchUsersResponsePageTokenChange_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*WatchUsersResponsePageTokenChange_FieldTerminalPathValue)
}

func (s WatchUsersResponse_PageTokenChangePathSelectorPrevPageToken) WithArrayOfValues(values []*user.PagerCursor) *WatchUsersResponsePageTokenChange_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*WatchUsersResponsePageTokenChange_FieldTerminalPathArrayOfValues)
}

type WatchUsersResponse_PageTokenChangePathSelectorNextPageToken struct{}

func (WatchUsersResponse_PageTokenChangePathSelectorNextPageToken) FieldPath() *WatchUsersResponsePageTokenChange_FieldTerminalPath {
	return &WatchUsersResponsePageTokenChange_FieldTerminalPath{selector: WatchUsersResponsePageTokenChange_FieldPathSelectorNextPageToken}
}

func (s WatchUsersResponse_PageTokenChangePathSelectorNextPageToken) WithValue(value *user.PagerCursor) *WatchUsersResponsePageTokenChange_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*WatchUsersResponsePageTokenChange_FieldTerminalPathValue)
}

func (s WatchUsersResponse_PageTokenChangePathSelectorNextPageToken) WithArrayOfValues(values []*user.PagerCursor) *WatchUsersResponsePageTokenChange_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*WatchUsersResponsePageTokenChange_FieldTerminalPathArrayOfValues)
}

type CreateUserRequestFieldPathBuilder struct{}

func NewCreateUserRequestFieldPathBuilder() CreateUserRequestFieldPathBuilder {
	return CreateUserRequestFieldPathBuilder{}
}
func (CreateUserRequestFieldPathBuilder) User() CreateUserRequestPathSelectorUser {
	return CreateUserRequestPathSelectorUser{}
}

type CreateUserRequestPathSelectorUser struct{}

func (CreateUserRequestPathSelectorUser) FieldPath() *CreateUserRequest_FieldTerminalPath {
	return &CreateUserRequest_FieldTerminalPath{selector: CreateUserRequest_FieldPathSelectorUser}
}

func (s CreateUserRequestPathSelectorUser) WithValue(value *user.User) *CreateUserRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*CreateUserRequest_FieldTerminalPathValue)
}

func (s CreateUserRequestPathSelectorUser) WithArrayOfValues(values []*user.User) *CreateUserRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CreateUserRequest_FieldTerminalPathArrayOfValues)
}

func (CreateUserRequestPathSelectorUser) WithSubPath(subPath user.User_FieldPath) *CreateUserRequest_FieldSubPath {
	return &CreateUserRequest_FieldSubPath{selector: CreateUserRequest_FieldPathSelectorUser, subPath: subPath}
}

func (s CreateUserRequestPathSelectorUser) WithSubValue(subPathValue user.User_FieldPathValue) *CreateUserRequest_FieldSubPathValue {
	return &CreateUserRequest_FieldSubPathValue{CreateUserRequest_FieldPath: s.WithSubPath(subPathValue), subPathValue: subPathValue}
}

func (s CreateUserRequestPathSelectorUser) WithSubArrayOfValues(subPathArrayOfValues user.User_FieldPathArrayOfValues) *CreateUserRequest_FieldSubPathArrayOfValues {
	return &CreateUserRequest_FieldSubPathArrayOfValues{CreateUserRequest_FieldPath: s.WithSubPath(subPathArrayOfValues), subPathArrayOfValues: subPathArrayOfValues}
}

func (s CreateUserRequestPathSelectorUser) WithSubArrayItemValue(subPathArrayItemValue user.User_FieldPathArrayItemValue) *CreateUserRequest_FieldSubPathArrayItemValue {
	return &CreateUserRequest_FieldSubPathArrayItemValue{CreateUserRequest_FieldPath: s.WithSubPath(subPathArrayItemValue), subPathItemValue: subPathArrayItemValue}
}

func (CreateUserRequestPathSelectorUser) Name() CreateUserRequestPathSelectorUserName {
	return CreateUserRequestPathSelectorUserName{}
}

func (CreateUserRequestPathSelectorUser) FullName() CreateUserRequestPathSelectorUserFullName {
	return CreateUserRequestPathSelectorUserFullName{}
}

func (CreateUserRequestPathSelectorUser) Metadata() CreateUserRequestPathSelectorUserMetadata {
	return CreateUserRequestPathSelectorUserMetadata{}
}

func (CreateUserRequestPathSelectorUser) Email() CreateUserRequestPathSelectorUserEmail {
	return CreateUserRequestPathSelectorUserEmail{}
}

func (CreateUserRequestPathSelectorUser) EmailVerified() CreateUserRequestPathSelectorUserEmailVerified {
	return CreateUserRequestPathSelectorUserEmailVerified{}
}

func (CreateUserRequestPathSelectorUser) AuthInfo() CreateUserRequestPathSelectorUserAuthInfo {
	return CreateUserRequestPathSelectorUserAuthInfo{}
}

func (CreateUserRequestPathSelectorUser) Settings() CreateUserRequestPathSelectorUserSettings {
	return CreateUserRequestPathSelectorUserSettings{}
}

func (CreateUserRequestPathSelectorUser) RefreshedTime() CreateUserRequestPathSelectorUserRefreshedTime {
	return CreateUserRequestPathSelectorUserRefreshedTime{}
}

type CreateUserRequestPathSelectorUserName struct{}

func (CreateUserRequestPathSelectorUserName) FieldPath() *CreateUserRequest_FieldSubPath {
	return &CreateUserRequest_FieldSubPath{
		selector: CreateUserRequest_FieldPathSelectorUser,
		subPath:  user.NewUserFieldPathBuilder().Name().FieldPath(),
	}
}

func (s CreateUserRequestPathSelectorUserName) WithValue(value *user.Name) *CreateUserRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*CreateUserRequest_FieldSubPathValue)
}

func (s CreateUserRequestPathSelectorUserName) WithArrayOfValues(values []*user.Name) *CreateUserRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CreateUserRequest_FieldSubPathArrayOfValues)
}

type CreateUserRequestPathSelectorUserFullName struct{}

func (CreateUserRequestPathSelectorUserFullName) FieldPath() *CreateUserRequest_FieldSubPath {
	return &CreateUserRequest_FieldSubPath{
		selector: CreateUserRequest_FieldPathSelectorUser,
		subPath:  user.NewUserFieldPathBuilder().FullName().FieldPath(),
	}
}

func (s CreateUserRequestPathSelectorUserFullName) WithValue(value string) *CreateUserRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*CreateUserRequest_FieldSubPathValue)
}

func (s CreateUserRequestPathSelectorUserFullName) WithArrayOfValues(values []string) *CreateUserRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CreateUserRequest_FieldSubPathArrayOfValues)
}

type CreateUserRequestPathSelectorUserMetadata struct{}

func (CreateUserRequestPathSelectorUserMetadata) FieldPath() *CreateUserRequest_FieldSubPath {
	return &CreateUserRequest_FieldSubPath{
		selector: CreateUserRequest_FieldPathSelectorUser,
		subPath:  user.NewUserFieldPathBuilder().Metadata().FieldPath(),
	}
}

func (s CreateUserRequestPathSelectorUserMetadata) WithValue(value *ntt_meta.Meta) *CreateUserRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*CreateUserRequest_FieldSubPathValue)
}

func (s CreateUserRequestPathSelectorUserMetadata) WithArrayOfValues(values []*ntt_meta.Meta) *CreateUserRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CreateUserRequest_FieldSubPathArrayOfValues)
}

func (CreateUserRequestPathSelectorUserMetadata) CreateTime() CreateUserRequestPathSelectorUserMetadataCreateTime {
	return CreateUserRequestPathSelectorUserMetadataCreateTime{}
}

func (CreateUserRequestPathSelectorUserMetadata) UpdateTime() CreateUserRequestPathSelectorUserMetadataUpdateTime {
	return CreateUserRequestPathSelectorUserMetadataUpdateTime{}
}

func (CreateUserRequestPathSelectorUserMetadata) DeleteTime() CreateUserRequestPathSelectorUserMetadataDeleteTime {
	return CreateUserRequestPathSelectorUserMetadataDeleteTime{}
}

func (CreateUserRequestPathSelectorUserMetadata) Uuid() CreateUserRequestPathSelectorUserMetadataUuid {
	return CreateUserRequestPathSelectorUserMetadataUuid{}
}

func (CreateUserRequestPathSelectorUserMetadata) Tags() CreateUserRequestPathSelectorUserMetadataTags {
	return CreateUserRequestPathSelectorUserMetadataTags{}
}

func (CreateUserRequestPathSelectorUserMetadata) Labels() CreateUserRequestPathSelectorUserMetadataLabels {
	return CreateUserRequestPathSelectorUserMetadataLabels{}
}

func (CreateUserRequestPathSelectorUserMetadata) Annotations() CreateUserRequestPathSelectorUserMetadataAnnotations {
	return CreateUserRequestPathSelectorUserMetadataAnnotations{}
}

func (CreateUserRequestPathSelectorUserMetadata) Generation() CreateUserRequestPathSelectorUserMetadataGeneration {
	return CreateUserRequestPathSelectorUserMetadataGeneration{}
}

func (CreateUserRequestPathSelectorUserMetadata) ResourceVersion() CreateUserRequestPathSelectorUserMetadataResourceVersion {
	return CreateUserRequestPathSelectorUserMetadataResourceVersion{}
}

func (CreateUserRequestPathSelectorUserMetadata) OwnerReferences() CreateUserRequestPathSelectorUserMetadataOwnerReferences {
	return CreateUserRequestPathSelectorUserMetadataOwnerReferences{}
}

func (CreateUserRequestPathSelectorUserMetadata) Shards() CreateUserRequestPathSelectorUserMetadataShards {
	return CreateUserRequestPathSelectorUserMetadataShards{}
}

func (CreateUserRequestPathSelectorUserMetadata) Syncing() CreateUserRequestPathSelectorUserMetadataSyncing {
	return CreateUserRequestPathSelectorUserMetadataSyncing{}
}

func (CreateUserRequestPathSelectorUserMetadata) Lifecycle() CreateUserRequestPathSelectorUserMetadataLifecycle {
	return CreateUserRequestPathSelectorUserMetadataLifecycle{}
}

type CreateUserRequestPathSelectorUserMetadataCreateTime struct{}

func (CreateUserRequestPathSelectorUserMetadataCreateTime) FieldPath() *CreateUserRequest_FieldSubPath {
	return &CreateUserRequest_FieldSubPath{
		selector: CreateUserRequest_FieldPathSelectorUser,
		subPath:  user.NewUserFieldPathBuilder().Metadata().CreateTime().FieldPath(),
	}
}

func (s CreateUserRequestPathSelectorUserMetadataCreateTime) WithValue(value *timestamp.Timestamp) *CreateUserRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*CreateUserRequest_FieldSubPathValue)
}

func (s CreateUserRequestPathSelectorUserMetadataCreateTime) WithArrayOfValues(values []*timestamp.Timestamp) *CreateUserRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CreateUserRequest_FieldSubPathArrayOfValues)
}

type CreateUserRequestPathSelectorUserMetadataUpdateTime struct{}

func (CreateUserRequestPathSelectorUserMetadataUpdateTime) FieldPath() *CreateUserRequest_FieldSubPath {
	return &CreateUserRequest_FieldSubPath{
		selector: CreateUserRequest_FieldPathSelectorUser,
		subPath:  user.NewUserFieldPathBuilder().Metadata().UpdateTime().FieldPath(),
	}
}

func (s CreateUserRequestPathSelectorUserMetadataUpdateTime) WithValue(value *timestamp.Timestamp) *CreateUserRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*CreateUserRequest_FieldSubPathValue)
}

func (s CreateUserRequestPathSelectorUserMetadataUpdateTime) WithArrayOfValues(values []*timestamp.Timestamp) *CreateUserRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CreateUserRequest_FieldSubPathArrayOfValues)
}

type CreateUserRequestPathSelectorUserMetadataDeleteTime struct{}

func (CreateUserRequestPathSelectorUserMetadataDeleteTime) FieldPath() *CreateUserRequest_FieldSubPath {
	return &CreateUserRequest_FieldSubPath{
		selector: CreateUserRequest_FieldPathSelectorUser,
		subPath:  user.NewUserFieldPathBuilder().Metadata().DeleteTime().FieldPath(),
	}
}

func (s CreateUserRequestPathSelectorUserMetadataDeleteTime) WithValue(value *timestamp.Timestamp) *CreateUserRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*CreateUserRequest_FieldSubPathValue)
}

func (s CreateUserRequestPathSelectorUserMetadataDeleteTime) WithArrayOfValues(values []*timestamp.Timestamp) *CreateUserRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CreateUserRequest_FieldSubPathArrayOfValues)
}

type CreateUserRequestPathSelectorUserMetadataUuid struct{}

func (CreateUserRequestPathSelectorUserMetadataUuid) FieldPath() *CreateUserRequest_FieldSubPath {
	return &CreateUserRequest_FieldSubPath{
		selector: CreateUserRequest_FieldPathSelectorUser,
		subPath:  user.NewUserFieldPathBuilder().Metadata().Uuid().FieldPath(),
	}
}

func (s CreateUserRequestPathSelectorUserMetadataUuid) WithValue(value string) *CreateUserRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*CreateUserRequest_FieldSubPathValue)
}

func (s CreateUserRequestPathSelectorUserMetadataUuid) WithArrayOfValues(values []string) *CreateUserRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CreateUserRequest_FieldSubPathArrayOfValues)
}

type CreateUserRequestPathSelectorUserMetadataTags struct{}

func (CreateUserRequestPathSelectorUserMetadataTags) FieldPath() *CreateUserRequest_FieldSubPath {
	return &CreateUserRequest_FieldSubPath{
		selector: CreateUserRequest_FieldPathSelectorUser,
		subPath:  user.NewUserFieldPathBuilder().Metadata().Tags().FieldPath(),
	}
}

func (s CreateUserRequestPathSelectorUserMetadataTags) WithValue(value []string) *CreateUserRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*CreateUserRequest_FieldSubPathValue)
}

func (s CreateUserRequestPathSelectorUserMetadataTags) WithArrayOfValues(values [][]string) *CreateUserRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CreateUserRequest_FieldSubPathArrayOfValues)
}

func (s CreateUserRequestPathSelectorUserMetadataTags) WithItemValue(value string) *CreateUserRequest_FieldSubPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*CreateUserRequest_FieldSubPathArrayItemValue)
}

type CreateUserRequestPathSelectorUserMetadataLabels struct{}

func (CreateUserRequestPathSelectorUserMetadataLabels) FieldPath() *CreateUserRequest_FieldSubPath {
	return &CreateUserRequest_FieldSubPath{
		selector: CreateUserRequest_FieldPathSelectorUser,
		subPath:  user.NewUserFieldPathBuilder().Metadata().Labels().FieldPath(),
	}
}

func (s CreateUserRequestPathSelectorUserMetadataLabels) WithValue(value map[string]string) *CreateUserRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*CreateUserRequest_FieldSubPathValue)
}

func (s CreateUserRequestPathSelectorUserMetadataLabels) WithArrayOfValues(values []map[string]string) *CreateUserRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CreateUserRequest_FieldSubPathArrayOfValues)
}

func (CreateUserRequestPathSelectorUserMetadataLabels) WithKey(key string) CreateUserRequestMapPathSelectorUserMetadataLabels {
	return CreateUserRequestMapPathSelectorUserMetadataLabels{key: key}
}

type CreateUserRequestMapPathSelectorUserMetadataLabels struct {
	key string
}

func (s CreateUserRequestMapPathSelectorUserMetadataLabels) FieldPath() *CreateUserRequest_FieldSubPath {
	return &CreateUserRequest_FieldSubPath{
		selector: CreateUserRequest_FieldPathSelectorUser,
		subPath:  user.NewUserFieldPathBuilder().Metadata().Labels().WithKey(s.key).FieldPath(),
	}
}

func (s CreateUserRequestMapPathSelectorUserMetadataLabels) WithValue(value string) *CreateUserRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*CreateUserRequest_FieldSubPathValue)
}

func (s CreateUserRequestMapPathSelectorUserMetadataLabels) WithArrayOfValues(values []string) *CreateUserRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CreateUserRequest_FieldSubPathArrayOfValues)
}

type CreateUserRequestPathSelectorUserMetadataAnnotations struct{}

func (CreateUserRequestPathSelectorUserMetadataAnnotations) FieldPath() *CreateUserRequest_FieldSubPath {
	return &CreateUserRequest_FieldSubPath{
		selector: CreateUserRequest_FieldPathSelectorUser,
		subPath:  user.NewUserFieldPathBuilder().Metadata().Annotations().FieldPath(),
	}
}

func (s CreateUserRequestPathSelectorUserMetadataAnnotations) WithValue(value map[string]string) *CreateUserRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*CreateUserRequest_FieldSubPathValue)
}

func (s CreateUserRequestPathSelectorUserMetadataAnnotations) WithArrayOfValues(values []map[string]string) *CreateUserRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CreateUserRequest_FieldSubPathArrayOfValues)
}

func (CreateUserRequestPathSelectorUserMetadataAnnotations) WithKey(key string) CreateUserRequestMapPathSelectorUserMetadataAnnotations {
	return CreateUserRequestMapPathSelectorUserMetadataAnnotations{key: key}
}

type CreateUserRequestMapPathSelectorUserMetadataAnnotations struct {
	key string
}

func (s CreateUserRequestMapPathSelectorUserMetadataAnnotations) FieldPath() *CreateUserRequest_FieldSubPath {
	return &CreateUserRequest_FieldSubPath{
		selector: CreateUserRequest_FieldPathSelectorUser,
		subPath:  user.NewUserFieldPathBuilder().Metadata().Annotations().WithKey(s.key).FieldPath(),
	}
}

func (s CreateUserRequestMapPathSelectorUserMetadataAnnotations) WithValue(value string) *CreateUserRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*CreateUserRequest_FieldSubPathValue)
}

func (s CreateUserRequestMapPathSelectorUserMetadataAnnotations) WithArrayOfValues(values []string) *CreateUserRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CreateUserRequest_FieldSubPathArrayOfValues)
}

type CreateUserRequestPathSelectorUserMetadataGeneration struct{}

func (CreateUserRequestPathSelectorUserMetadataGeneration) FieldPath() *CreateUserRequest_FieldSubPath {
	return &CreateUserRequest_FieldSubPath{
		selector: CreateUserRequest_FieldPathSelectorUser,
		subPath:  user.NewUserFieldPathBuilder().Metadata().Generation().FieldPath(),
	}
}

func (s CreateUserRequestPathSelectorUserMetadataGeneration) WithValue(value int64) *CreateUserRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*CreateUserRequest_FieldSubPathValue)
}

func (s CreateUserRequestPathSelectorUserMetadataGeneration) WithArrayOfValues(values []int64) *CreateUserRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CreateUserRequest_FieldSubPathArrayOfValues)
}

type CreateUserRequestPathSelectorUserMetadataResourceVersion struct{}

func (CreateUserRequestPathSelectorUserMetadataResourceVersion) FieldPath() *CreateUserRequest_FieldSubPath {
	return &CreateUserRequest_FieldSubPath{
		selector: CreateUserRequest_FieldPathSelectorUser,
		subPath:  user.NewUserFieldPathBuilder().Metadata().ResourceVersion().FieldPath(),
	}
}

func (s CreateUserRequestPathSelectorUserMetadataResourceVersion) WithValue(value string) *CreateUserRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*CreateUserRequest_FieldSubPathValue)
}

func (s CreateUserRequestPathSelectorUserMetadataResourceVersion) WithArrayOfValues(values []string) *CreateUserRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CreateUserRequest_FieldSubPathArrayOfValues)
}

type CreateUserRequestPathSelectorUserMetadataOwnerReferences struct{}

func (CreateUserRequestPathSelectorUserMetadataOwnerReferences) FieldPath() *CreateUserRequest_FieldSubPath {
	return &CreateUserRequest_FieldSubPath{
		selector: CreateUserRequest_FieldPathSelectorUser,
		subPath:  user.NewUserFieldPathBuilder().Metadata().OwnerReferences().FieldPath(),
	}
}

func (s CreateUserRequestPathSelectorUserMetadataOwnerReferences) WithValue(value []*ntt_meta.OwnerReference) *CreateUserRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*CreateUserRequest_FieldSubPathValue)
}

func (s CreateUserRequestPathSelectorUserMetadataOwnerReferences) WithArrayOfValues(values [][]*ntt_meta.OwnerReference) *CreateUserRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CreateUserRequest_FieldSubPathArrayOfValues)
}

func (s CreateUserRequestPathSelectorUserMetadataOwnerReferences) WithItemValue(value *ntt_meta.OwnerReference) *CreateUserRequest_FieldSubPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*CreateUserRequest_FieldSubPathArrayItemValue)
}

func (CreateUserRequestPathSelectorUserMetadataOwnerReferences) Kind() CreateUserRequestPathSelectorUserMetadataOwnerReferencesKind {
	return CreateUserRequestPathSelectorUserMetadataOwnerReferencesKind{}
}

func (CreateUserRequestPathSelectorUserMetadataOwnerReferences) Version() CreateUserRequestPathSelectorUserMetadataOwnerReferencesVersion {
	return CreateUserRequestPathSelectorUserMetadataOwnerReferencesVersion{}
}

func (CreateUserRequestPathSelectorUserMetadataOwnerReferences) Name() CreateUserRequestPathSelectorUserMetadataOwnerReferencesName {
	return CreateUserRequestPathSelectorUserMetadataOwnerReferencesName{}
}

func (CreateUserRequestPathSelectorUserMetadataOwnerReferences) Region() CreateUserRequestPathSelectorUserMetadataOwnerReferencesRegion {
	return CreateUserRequestPathSelectorUserMetadataOwnerReferencesRegion{}
}

func (CreateUserRequestPathSelectorUserMetadataOwnerReferences) Controller() CreateUserRequestPathSelectorUserMetadataOwnerReferencesController {
	return CreateUserRequestPathSelectorUserMetadataOwnerReferencesController{}
}

func (CreateUserRequestPathSelectorUserMetadataOwnerReferences) BlockOwnerDeletion() CreateUserRequestPathSelectorUserMetadataOwnerReferencesBlockOwnerDeletion {
	return CreateUserRequestPathSelectorUserMetadataOwnerReferencesBlockOwnerDeletion{}
}

func (CreateUserRequestPathSelectorUserMetadataOwnerReferences) RequiresOwnerReference() CreateUserRequestPathSelectorUserMetadataOwnerReferencesRequiresOwnerReference {
	return CreateUserRequestPathSelectorUserMetadataOwnerReferencesRequiresOwnerReference{}
}

type CreateUserRequestPathSelectorUserMetadataOwnerReferencesKind struct{}

func (CreateUserRequestPathSelectorUserMetadataOwnerReferencesKind) FieldPath() *CreateUserRequest_FieldSubPath {
	return &CreateUserRequest_FieldSubPath{
		selector: CreateUserRequest_FieldPathSelectorUser,
		subPath:  user.NewUserFieldPathBuilder().Metadata().OwnerReferences().Kind().FieldPath(),
	}
}

func (s CreateUserRequestPathSelectorUserMetadataOwnerReferencesKind) WithValue(value string) *CreateUserRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*CreateUserRequest_FieldSubPathValue)
}

func (s CreateUserRequestPathSelectorUserMetadataOwnerReferencesKind) WithArrayOfValues(values []string) *CreateUserRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CreateUserRequest_FieldSubPathArrayOfValues)
}

type CreateUserRequestPathSelectorUserMetadataOwnerReferencesVersion struct{}

func (CreateUserRequestPathSelectorUserMetadataOwnerReferencesVersion) FieldPath() *CreateUserRequest_FieldSubPath {
	return &CreateUserRequest_FieldSubPath{
		selector: CreateUserRequest_FieldPathSelectorUser,
		subPath:  user.NewUserFieldPathBuilder().Metadata().OwnerReferences().Version().FieldPath(),
	}
}

func (s CreateUserRequestPathSelectorUserMetadataOwnerReferencesVersion) WithValue(value string) *CreateUserRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*CreateUserRequest_FieldSubPathValue)
}

func (s CreateUserRequestPathSelectorUserMetadataOwnerReferencesVersion) WithArrayOfValues(values []string) *CreateUserRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CreateUserRequest_FieldSubPathArrayOfValues)
}

type CreateUserRequestPathSelectorUserMetadataOwnerReferencesName struct{}

func (CreateUserRequestPathSelectorUserMetadataOwnerReferencesName) FieldPath() *CreateUserRequest_FieldSubPath {
	return &CreateUserRequest_FieldSubPath{
		selector: CreateUserRequest_FieldPathSelectorUser,
		subPath:  user.NewUserFieldPathBuilder().Metadata().OwnerReferences().Name().FieldPath(),
	}
}

func (s CreateUserRequestPathSelectorUserMetadataOwnerReferencesName) WithValue(value string) *CreateUserRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*CreateUserRequest_FieldSubPathValue)
}

func (s CreateUserRequestPathSelectorUserMetadataOwnerReferencesName) WithArrayOfValues(values []string) *CreateUserRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CreateUserRequest_FieldSubPathArrayOfValues)
}

type CreateUserRequestPathSelectorUserMetadataOwnerReferencesRegion struct{}

func (CreateUserRequestPathSelectorUserMetadataOwnerReferencesRegion) FieldPath() *CreateUserRequest_FieldSubPath {
	return &CreateUserRequest_FieldSubPath{
		selector: CreateUserRequest_FieldPathSelectorUser,
		subPath:  user.NewUserFieldPathBuilder().Metadata().OwnerReferences().Region().FieldPath(),
	}
}

func (s CreateUserRequestPathSelectorUserMetadataOwnerReferencesRegion) WithValue(value string) *CreateUserRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*CreateUserRequest_FieldSubPathValue)
}

func (s CreateUserRequestPathSelectorUserMetadataOwnerReferencesRegion) WithArrayOfValues(values []string) *CreateUserRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CreateUserRequest_FieldSubPathArrayOfValues)
}

type CreateUserRequestPathSelectorUserMetadataOwnerReferencesController struct{}

func (CreateUserRequestPathSelectorUserMetadataOwnerReferencesController) FieldPath() *CreateUserRequest_FieldSubPath {
	return &CreateUserRequest_FieldSubPath{
		selector: CreateUserRequest_FieldPathSelectorUser,
		subPath:  user.NewUserFieldPathBuilder().Metadata().OwnerReferences().Controller().FieldPath(),
	}
}

func (s CreateUserRequestPathSelectorUserMetadataOwnerReferencesController) WithValue(value bool) *CreateUserRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*CreateUserRequest_FieldSubPathValue)
}

func (s CreateUserRequestPathSelectorUserMetadataOwnerReferencesController) WithArrayOfValues(values []bool) *CreateUserRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CreateUserRequest_FieldSubPathArrayOfValues)
}

type CreateUserRequestPathSelectorUserMetadataOwnerReferencesBlockOwnerDeletion struct{}

func (CreateUserRequestPathSelectorUserMetadataOwnerReferencesBlockOwnerDeletion) FieldPath() *CreateUserRequest_FieldSubPath {
	return &CreateUserRequest_FieldSubPath{
		selector: CreateUserRequest_FieldPathSelectorUser,
		subPath:  user.NewUserFieldPathBuilder().Metadata().OwnerReferences().BlockOwnerDeletion().FieldPath(),
	}
}

func (s CreateUserRequestPathSelectorUserMetadataOwnerReferencesBlockOwnerDeletion) WithValue(value bool) *CreateUserRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*CreateUserRequest_FieldSubPathValue)
}

func (s CreateUserRequestPathSelectorUserMetadataOwnerReferencesBlockOwnerDeletion) WithArrayOfValues(values []bool) *CreateUserRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CreateUserRequest_FieldSubPathArrayOfValues)
}

type CreateUserRequestPathSelectorUserMetadataOwnerReferencesRequiresOwnerReference struct{}

func (CreateUserRequestPathSelectorUserMetadataOwnerReferencesRequiresOwnerReference) FieldPath() *CreateUserRequest_FieldSubPath {
	return &CreateUserRequest_FieldSubPath{
		selector: CreateUserRequest_FieldPathSelectorUser,
		subPath:  user.NewUserFieldPathBuilder().Metadata().OwnerReferences().RequiresOwnerReference().FieldPath(),
	}
}

func (s CreateUserRequestPathSelectorUserMetadataOwnerReferencesRequiresOwnerReference) WithValue(value bool) *CreateUserRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*CreateUserRequest_FieldSubPathValue)
}

func (s CreateUserRequestPathSelectorUserMetadataOwnerReferencesRequiresOwnerReference) WithArrayOfValues(values []bool) *CreateUserRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CreateUserRequest_FieldSubPathArrayOfValues)
}

type CreateUserRequestPathSelectorUserMetadataShards struct{}

func (CreateUserRequestPathSelectorUserMetadataShards) FieldPath() *CreateUserRequest_FieldSubPath {
	return &CreateUserRequest_FieldSubPath{
		selector: CreateUserRequest_FieldPathSelectorUser,
		subPath:  user.NewUserFieldPathBuilder().Metadata().Shards().FieldPath(),
	}
}

func (s CreateUserRequestPathSelectorUserMetadataShards) WithValue(value map[string]int64) *CreateUserRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*CreateUserRequest_FieldSubPathValue)
}

func (s CreateUserRequestPathSelectorUserMetadataShards) WithArrayOfValues(values []map[string]int64) *CreateUserRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CreateUserRequest_FieldSubPathArrayOfValues)
}

func (CreateUserRequestPathSelectorUserMetadataShards) WithKey(key string) CreateUserRequestMapPathSelectorUserMetadataShards {
	return CreateUserRequestMapPathSelectorUserMetadataShards{key: key}
}

type CreateUserRequestMapPathSelectorUserMetadataShards struct {
	key string
}

func (s CreateUserRequestMapPathSelectorUserMetadataShards) FieldPath() *CreateUserRequest_FieldSubPath {
	return &CreateUserRequest_FieldSubPath{
		selector: CreateUserRequest_FieldPathSelectorUser,
		subPath:  user.NewUserFieldPathBuilder().Metadata().Shards().WithKey(s.key).FieldPath(),
	}
}

func (s CreateUserRequestMapPathSelectorUserMetadataShards) WithValue(value int64) *CreateUserRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*CreateUserRequest_FieldSubPathValue)
}

func (s CreateUserRequestMapPathSelectorUserMetadataShards) WithArrayOfValues(values []int64) *CreateUserRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CreateUserRequest_FieldSubPathArrayOfValues)
}

type CreateUserRequestPathSelectorUserMetadataSyncing struct{}

func (CreateUserRequestPathSelectorUserMetadataSyncing) FieldPath() *CreateUserRequest_FieldSubPath {
	return &CreateUserRequest_FieldSubPath{
		selector: CreateUserRequest_FieldPathSelectorUser,
		subPath:  user.NewUserFieldPathBuilder().Metadata().Syncing().FieldPath(),
	}
}

func (s CreateUserRequestPathSelectorUserMetadataSyncing) WithValue(value *ntt_meta.SyncingMeta) *CreateUserRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*CreateUserRequest_FieldSubPathValue)
}

func (s CreateUserRequestPathSelectorUserMetadataSyncing) WithArrayOfValues(values []*ntt_meta.SyncingMeta) *CreateUserRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CreateUserRequest_FieldSubPathArrayOfValues)
}

func (CreateUserRequestPathSelectorUserMetadataSyncing) OwningRegion() CreateUserRequestPathSelectorUserMetadataSyncingOwningRegion {
	return CreateUserRequestPathSelectorUserMetadataSyncingOwningRegion{}
}

func (CreateUserRequestPathSelectorUserMetadataSyncing) Regions() CreateUserRequestPathSelectorUserMetadataSyncingRegions {
	return CreateUserRequestPathSelectorUserMetadataSyncingRegions{}
}

type CreateUserRequestPathSelectorUserMetadataSyncingOwningRegion struct{}

func (CreateUserRequestPathSelectorUserMetadataSyncingOwningRegion) FieldPath() *CreateUserRequest_FieldSubPath {
	return &CreateUserRequest_FieldSubPath{
		selector: CreateUserRequest_FieldPathSelectorUser,
		subPath:  user.NewUserFieldPathBuilder().Metadata().Syncing().OwningRegion().FieldPath(),
	}
}

func (s CreateUserRequestPathSelectorUserMetadataSyncingOwningRegion) WithValue(value string) *CreateUserRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*CreateUserRequest_FieldSubPathValue)
}

func (s CreateUserRequestPathSelectorUserMetadataSyncingOwningRegion) WithArrayOfValues(values []string) *CreateUserRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CreateUserRequest_FieldSubPathArrayOfValues)
}

type CreateUserRequestPathSelectorUserMetadataSyncingRegions struct{}

func (CreateUserRequestPathSelectorUserMetadataSyncingRegions) FieldPath() *CreateUserRequest_FieldSubPath {
	return &CreateUserRequest_FieldSubPath{
		selector: CreateUserRequest_FieldPathSelectorUser,
		subPath:  user.NewUserFieldPathBuilder().Metadata().Syncing().Regions().FieldPath(),
	}
}

func (s CreateUserRequestPathSelectorUserMetadataSyncingRegions) WithValue(value []string) *CreateUserRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*CreateUserRequest_FieldSubPathValue)
}

func (s CreateUserRequestPathSelectorUserMetadataSyncingRegions) WithArrayOfValues(values [][]string) *CreateUserRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CreateUserRequest_FieldSubPathArrayOfValues)
}

func (s CreateUserRequestPathSelectorUserMetadataSyncingRegions) WithItemValue(value string) *CreateUserRequest_FieldSubPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*CreateUserRequest_FieldSubPathArrayItemValue)
}

type CreateUserRequestPathSelectorUserMetadataLifecycle struct{}

func (CreateUserRequestPathSelectorUserMetadataLifecycle) FieldPath() *CreateUserRequest_FieldSubPath {
	return &CreateUserRequest_FieldSubPath{
		selector: CreateUserRequest_FieldPathSelectorUser,
		subPath:  user.NewUserFieldPathBuilder().Metadata().Lifecycle().FieldPath(),
	}
}

func (s CreateUserRequestPathSelectorUserMetadataLifecycle) WithValue(value *ntt_meta.Lifecycle) *CreateUserRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*CreateUserRequest_FieldSubPathValue)
}

func (s CreateUserRequestPathSelectorUserMetadataLifecycle) WithArrayOfValues(values []*ntt_meta.Lifecycle) *CreateUserRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CreateUserRequest_FieldSubPathArrayOfValues)
}

func (CreateUserRequestPathSelectorUserMetadataLifecycle) State() CreateUserRequestPathSelectorUserMetadataLifecycleState {
	return CreateUserRequestPathSelectorUserMetadataLifecycleState{}
}

func (CreateUserRequestPathSelectorUserMetadataLifecycle) BlockDeletion() CreateUserRequestPathSelectorUserMetadataLifecycleBlockDeletion {
	return CreateUserRequestPathSelectorUserMetadataLifecycleBlockDeletion{}
}

type CreateUserRequestPathSelectorUserMetadataLifecycleState struct{}

func (CreateUserRequestPathSelectorUserMetadataLifecycleState) FieldPath() *CreateUserRequest_FieldSubPath {
	return &CreateUserRequest_FieldSubPath{
		selector: CreateUserRequest_FieldPathSelectorUser,
		subPath:  user.NewUserFieldPathBuilder().Metadata().Lifecycle().State().FieldPath(),
	}
}

func (s CreateUserRequestPathSelectorUserMetadataLifecycleState) WithValue(value ntt_meta.Lifecycle_State) *CreateUserRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*CreateUserRequest_FieldSubPathValue)
}

func (s CreateUserRequestPathSelectorUserMetadataLifecycleState) WithArrayOfValues(values []ntt_meta.Lifecycle_State) *CreateUserRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CreateUserRequest_FieldSubPathArrayOfValues)
}

type CreateUserRequestPathSelectorUserMetadataLifecycleBlockDeletion struct{}

func (CreateUserRequestPathSelectorUserMetadataLifecycleBlockDeletion) FieldPath() *CreateUserRequest_FieldSubPath {
	return &CreateUserRequest_FieldSubPath{
		selector: CreateUserRequest_FieldPathSelectorUser,
		subPath:  user.NewUserFieldPathBuilder().Metadata().Lifecycle().BlockDeletion().FieldPath(),
	}
}

func (s CreateUserRequestPathSelectorUserMetadataLifecycleBlockDeletion) WithValue(value bool) *CreateUserRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*CreateUserRequest_FieldSubPathValue)
}

func (s CreateUserRequestPathSelectorUserMetadataLifecycleBlockDeletion) WithArrayOfValues(values []bool) *CreateUserRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CreateUserRequest_FieldSubPathArrayOfValues)
}

type CreateUserRequestPathSelectorUserEmail struct{}

func (CreateUserRequestPathSelectorUserEmail) FieldPath() *CreateUserRequest_FieldSubPath {
	return &CreateUserRequest_FieldSubPath{
		selector: CreateUserRequest_FieldPathSelectorUser,
		subPath:  user.NewUserFieldPathBuilder().Email().FieldPath(),
	}
}

func (s CreateUserRequestPathSelectorUserEmail) WithValue(value string) *CreateUserRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*CreateUserRequest_FieldSubPathValue)
}

func (s CreateUserRequestPathSelectorUserEmail) WithArrayOfValues(values []string) *CreateUserRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CreateUserRequest_FieldSubPathArrayOfValues)
}

type CreateUserRequestPathSelectorUserEmailVerified struct{}

func (CreateUserRequestPathSelectorUserEmailVerified) FieldPath() *CreateUserRequest_FieldSubPath {
	return &CreateUserRequest_FieldSubPath{
		selector: CreateUserRequest_FieldPathSelectorUser,
		subPath:  user.NewUserFieldPathBuilder().EmailVerified().FieldPath(),
	}
}

func (s CreateUserRequestPathSelectorUserEmailVerified) WithValue(value bool) *CreateUserRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*CreateUserRequest_FieldSubPathValue)
}

func (s CreateUserRequestPathSelectorUserEmailVerified) WithArrayOfValues(values []bool) *CreateUserRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CreateUserRequest_FieldSubPathArrayOfValues)
}

type CreateUserRequestPathSelectorUserAuthInfo struct{}

func (CreateUserRequestPathSelectorUserAuthInfo) FieldPath() *CreateUserRequest_FieldSubPath {
	return &CreateUserRequest_FieldSubPath{
		selector: CreateUserRequest_FieldPathSelectorUser,
		subPath:  user.NewUserFieldPathBuilder().AuthInfo().FieldPath(),
	}
}

func (s CreateUserRequestPathSelectorUserAuthInfo) WithValue(value *user.User_AuthInfo) *CreateUserRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*CreateUserRequest_FieldSubPathValue)
}

func (s CreateUserRequestPathSelectorUserAuthInfo) WithArrayOfValues(values []*user.User_AuthInfo) *CreateUserRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CreateUserRequest_FieldSubPathArrayOfValues)
}

func (CreateUserRequestPathSelectorUserAuthInfo) Provider() CreateUserRequestPathSelectorUserAuthInfoProvider {
	return CreateUserRequestPathSelectorUserAuthInfoProvider{}
}

func (CreateUserRequestPathSelectorUserAuthInfo) Id() CreateUserRequestPathSelectorUserAuthInfoId {
	return CreateUserRequestPathSelectorUserAuthInfoId{}
}

type CreateUserRequestPathSelectorUserAuthInfoProvider struct{}

func (CreateUserRequestPathSelectorUserAuthInfoProvider) FieldPath() *CreateUserRequest_FieldSubPath {
	return &CreateUserRequest_FieldSubPath{
		selector: CreateUserRequest_FieldPathSelectorUser,
		subPath:  user.NewUserFieldPathBuilder().AuthInfo().Provider().FieldPath(),
	}
}

func (s CreateUserRequestPathSelectorUserAuthInfoProvider) WithValue(value string) *CreateUserRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*CreateUserRequest_FieldSubPathValue)
}

func (s CreateUserRequestPathSelectorUserAuthInfoProvider) WithArrayOfValues(values []string) *CreateUserRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CreateUserRequest_FieldSubPathArrayOfValues)
}

type CreateUserRequestPathSelectorUserAuthInfoId struct{}

func (CreateUserRequestPathSelectorUserAuthInfoId) FieldPath() *CreateUserRequest_FieldSubPath {
	return &CreateUserRequest_FieldSubPath{
		selector: CreateUserRequest_FieldPathSelectorUser,
		subPath:  user.NewUserFieldPathBuilder().AuthInfo().Id().FieldPath(),
	}
}

func (s CreateUserRequestPathSelectorUserAuthInfoId) WithValue(value string) *CreateUserRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*CreateUserRequest_FieldSubPathValue)
}

func (s CreateUserRequestPathSelectorUserAuthInfoId) WithArrayOfValues(values []string) *CreateUserRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CreateUserRequest_FieldSubPathArrayOfValues)
}

type CreateUserRequestPathSelectorUserSettings struct{}

func (CreateUserRequestPathSelectorUserSettings) FieldPath() *CreateUserRequest_FieldSubPath {
	return &CreateUserRequest_FieldSubPath{
		selector: CreateUserRequest_FieldPathSelectorUser,
		subPath:  user.NewUserFieldPathBuilder().Settings().FieldPath(),
	}
}

func (s CreateUserRequestPathSelectorUserSettings) WithValue(value map[string]string) *CreateUserRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*CreateUserRequest_FieldSubPathValue)
}

func (s CreateUserRequestPathSelectorUserSettings) WithArrayOfValues(values []map[string]string) *CreateUserRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CreateUserRequest_FieldSubPathArrayOfValues)
}

func (CreateUserRequestPathSelectorUserSettings) WithKey(key string) CreateUserRequestMapPathSelectorUserSettings {
	return CreateUserRequestMapPathSelectorUserSettings{key: key}
}

type CreateUserRequestMapPathSelectorUserSettings struct {
	key string
}

func (s CreateUserRequestMapPathSelectorUserSettings) FieldPath() *CreateUserRequest_FieldSubPath {
	return &CreateUserRequest_FieldSubPath{
		selector: CreateUserRequest_FieldPathSelectorUser,
		subPath:  user.NewUserFieldPathBuilder().Settings().WithKey(s.key).FieldPath(),
	}
}

func (s CreateUserRequestMapPathSelectorUserSettings) WithValue(value string) *CreateUserRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*CreateUserRequest_FieldSubPathValue)
}

func (s CreateUserRequestMapPathSelectorUserSettings) WithArrayOfValues(values []string) *CreateUserRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CreateUserRequest_FieldSubPathArrayOfValues)
}

type CreateUserRequestPathSelectorUserRefreshedTime struct{}

func (CreateUserRequestPathSelectorUserRefreshedTime) FieldPath() *CreateUserRequest_FieldSubPath {
	return &CreateUserRequest_FieldSubPath{
		selector: CreateUserRequest_FieldPathSelectorUser,
		subPath:  user.NewUserFieldPathBuilder().RefreshedTime().FieldPath(),
	}
}

func (s CreateUserRequestPathSelectorUserRefreshedTime) WithValue(value *timestamp.Timestamp) *CreateUserRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*CreateUserRequest_FieldSubPathValue)
}

func (s CreateUserRequestPathSelectorUserRefreshedTime) WithArrayOfValues(values []*timestamp.Timestamp) *CreateUserRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CreateUserRequest_FieldSubPathArrayOfValues)
}

type UpdateUserRequestFieldPathBuilder struct{}

func NewUpdateUserRequestFieldPathBuilder() UpdateUserRequestFieldPathBuilder {
	return UpdateUserRequestFieldPathBuilder{}
}
func (UpdateUserRequestFieldPathBuilder) User() UpdateUserRequestPathSelectorUser {
	return UpdateUserRequestPathSelectorUser{}
}
func (UpdateUserRequestFieldPathBuilder) UpdateMask() UpdateUserRequestPathSelectorUpdateMask {
	return UpdateUserRequestPathSelectorUpdateMask{}
}
func (UpdateUserRequestFieldPathBuilder) Cas() UpdateUserRequestPathSelectorCas {
	return UpdateUserRequestPathSelectorCas{}
}
func (UpdateUserRequestFieldPathBuilder) AllowMissing() UpdateUserRequestPathSelectorAllowMissing {
	return UpdateUserRequestPathSelectorAllowMissing{}
}

type UpdateUserRequestPathSelectorUser struct{}

func (UpdateUserRequestPathSelectorUser) FieldPath() *UpdateUserRequest_FieldTerminalPath {
	return &UpdateUserRequest_FieldTerminalPath{selector: UpdateUserRequest_FieldPathSelectorUser}
}

func (s UpdateUserRequestPathSelectorUser) WithValue(value *user.User) *UpdateUserRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateUserRequest_FieldTerminalPathValue)
}

func (s UpdateUserRequestPathSelectorUser) WithArrayOfValues(values []*user.User) *UpdateUserRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateUserRequest_FieldTerminalPathArrayOfValues)
}

func (UpdateUserRequestPathSelectorUser) WithSubPath(subPath user.User_FieldPath) *UpdateUserRequest_FieldSubPath {
	return &UpdateUserRequest_FieldSubPath{selector: UpdateUserRequest_FieldPathSelectorUser, subPath: subPath}
}

func (s UpdateUserRequestPathSelectorUser) WithSubValue(subPathValue user.User_FieldPathValue) *UpdateUserRequest_FieldSubPathValue {
	return &UpdateUserRequest_FieldSubPathValue{UpdateUserRequest_FieldPath: s.WithSubPath(subPathValue), subPathValue: subPathValue}
}

func (s UpdateUserRequestPathSelectorUser) WithSubArrayOfValues(subPathArrayOfValues user.User_FieldPathArrayOfValues) *UpdateUserRequest_FieldSubPathArrayOfValues {
	return &UpdateUserRequest_FieldSubPathArrayOfValues{UpdateUserRequest_FieldPath: s.WithSubPath(subPathArrayOfValues), subPathArrayOfValues: subPathArrayOfValues}
}

func (s UpdateUserRequestPathSelectorUser) WithSubArrayItemValue(subPathArrayItemValue user.User_FieldPathArrayItemValue) *UpdateUserRequest_FieldSubPathArrayItemValue {
	return &UpdateUserRequest_FieldSubPathArrayItemValue{UpdateUserRequest_FieldPath: s.WithSubPath(subPathArrayItemValue), subPathItemValue: subPathArrayItemValue}
}

func (UpdateUserRequestPathSelectorUser) Name() UpdateUserRequestPathSelectorUserName {
	return UpdateUserRequestPathSelectorUserName{}
}

func (UpdateUserRequestPathSelectorUser) FullName() UpdateUserRequestPathSelectorUserFullName {
	return UpdateUserRequestPathSelectorUserFullName{}
}

func (UpdateUserRequestPathSelectorUser) Metadata() UpdateUserRequestPathSelectorUserMetadata {
	return UpdateUserRequestPathSelectorUserMetadata{}
}

func (UpdateUserRequestPathSelectorUser) Email() UpdateUserRequestPathSelectorUserEmail {
	return UpdateUserRequestPathSelectorUserEmail{}
}

func (UpdateUserRequestPathSelectorUser) EmailVerified() UpdateUserRequestPathSelectorUserEmailVerified {
	return UpdateUserRequestPathSelectorUserEmailVerified{}
}

func (UpdateUserRequestPathSelectorUser) AuthInfo() UpdateUserRequestPathSelectorUserAuthInfo {
	return UpdateUserRequestPathSelectorUserAuthInfo{}
}

func (UpdateUserRequestPathSelectorUser) Settings() UpdateUserRequestPathSelectorUserSettings {
	return UpdateUserRequestPathSelectorUserSettings{}
}

func (UpdateUserRequestPathSelectorUser) RefreshedTime() UpdateUserRequestPathSelectorUserRefreshedTime {
	return UpdateUserRequestPathSelectorUserRefreshedTime{}
}

type UpdateUserRequestPathSelectorUserName struct{}

func (UpdateUserRequestPathSelectorUserName) FieldPath() *UpdateUserRequest_FieldSubPath {
	return &UpdateUserRequest_FieldSubPath{
		selector: UpdateUserRequest_FieldPathSelectorUser,
		subPath:  user.NewUserFieldPathBuilder().Name().FieldPath(),
	}
}

func (s UpdateUserRequestPathSelectorUserName) WithValue(value *user.Name) *UpdateUserRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateUserRequest_FieldSubPathValue)
}

func (s UpdateUserRequestPathSelectorUserName) WithArrayOfValues(values []*user.Name) *UpdateUserRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateUserRequest_FieldSubPathArrayOfValues)
}

type UpdateUserRequestPathSelectorUserFullName struct{}

func (UpdateUserRequestPathSelectorUserFullName) FieldPath() *UpdateUserRequest_FieldSubPath {
	return &UpdateUserRequest_FieldSubPath{
		selector: UpdateUserRequest_FieldPathSelectorUser,
		subPath:  user.NewUserFieldPathBuilder().FullName().FieldPath(),
	}
}

func (s UpdateUserRequestPathSelectorUserFullName) WithValue(value string) *UpdateUserRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateUserRequest_FieldSubPathValue)
}

func (s UpdateUserRequestPathSelectorUserFullName) WithArrayOfValues(values []string) *UpdateUserRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateUserRequest_FieldSubPathArrayOfValues)
}

type UpdateUserRequestPathSelectorUserMetadata struct{}

func (UpdateUserRequestPathSelectorUserMetadata) FieldPath() *UpdateUserRequest_FieldSubPath {
	return &UpdateUserRequest_FieldSubPath{
		selector: UpdateUserRequest_FieldPathSelectorUser,
		subPath:  user.NewUserFieldPathBuilder().Metadata().FieldPath(),
	}
}

func (s UpdateUserRequestPathSelectorUserMetadata) WithValue(value *ntt_meta.Meta) *UpdateUserRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateUserRequest_FieldSubPathValue)
}

func (s UpdateUserRequestPathSelectorUserMetadata) WithArrayOfValues(values []*ntt_meta.Meta) *UpdateUserRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateUserRequest_FieldSubPathArrayOfValues)
}

func (UpdateUserRequestPathSelectorUserMetadata) CreateTime() UpdateUserRequestPathSelectorUserMetadataCreateTime {
	return UpdateUserRequestPathSelectorUserMetadataCreateTime{}
}

func (UpdateUserRequestPathSelectorUserMetadata) UpdateTime() UpdateUserRequestPathSelectorUserMetadataUpdateTime {
	return UpdateUserRequestPathSelectorUserMetadataUpdateTime{}
}

func (UpdateUserRequestPathSelectorUserMetadata) DeleteTime() UpdateUserRequestPathSelectorUserMetadataDeleteTime {
	return UpdateUserRequestPathSelectorUserMetadataDeleteTime{}
}

func (UpdateUserRequestPathSelectorUserMetadata) Uuid() UpdateUserRequestPathSelectorUserMetadataUuid {
	return UpdateUserRequestPathSelectorUserMetadataUuid{}
}

func (UpdateUserRequestPathSelectorUserMetadata) Tags() UpdateUserRequestPathSelectorUserMetadataTags {
	return UpdateUserRequestPathSelectorUserMetadataTags{}
}

func (UpdateUserRequestPathSelectorUserMetadata) Labels() UpdateUserRequestPathSelectorUserMetadataLabels {
	return UpdateUserRequestPathSelectorUserMetadataLabels{}
}

func (UpdateUserRequestPathSelectorUserMetadata) Annotations() UpdateUserRequestPathSelectorUserMetadataAnnotations {
	return UpdateUserRequestPathSelectorUserMetadataAnnotations{}
}

func (UpdateUserRequestPathSelectorUserMetadata) Generation() UpdateUserRequestPathSelectorUserMetadataGeneration {
	return UpdateUserRequestPathSelectorUserMetadataGeneration{}
}

func (UpdateUserRequestPathSelectorUserMetadata) ResourceVersion() UpdateUserRequestPathSelectorUserMetadataResourceVersion {
	return UpdateUserRequestPathSelectorUserMetadataResourceVersion{}
}

func (UpdateUserRequestPathSelectorUserMetadata) OwnerReferences() UpdateUserRequestPathSelectorUserMetadataOwnerReferences {
	return UpdateUserRequestPathSelectorUserMetadataOwnerReferences{}
}

func (UpdateUserRequestPathSelectorUserMetadata) Shards() UpdateUserRequestPathSelectorUserMetadataShards {
	return UpdateUserRequestPathSelectorUserMetadataShards{}
}

func (UpdateUserRequestPathSelectorUserMetadata) Syncing() UpdateUserRequestPathSelectorUserMetadataSyncing {
	return UpdateUserRequestPathSelectorUserMetadataSyncing{}
}

func (UpdateUserRequestPathSelectorUserMetadata) Lifecycle() UpdateUserRequestPathSelectorUserMetadataLifecycle {
	return UpdateUserRequestPathSelectorUserMetadataLifecycle{}
}

type UpdateUserRequestPathSelectorUserMetadataCreateTime struct{}

func (UpdateUserRequestPathSelectorUserMetadataCreateTime) FieldPath() *UpdateUserRequest_FieldSubPath {
	return &UpdateUserRequest_FieldSubPath{
		selector: UpdateUserRequest_FieldPathSelectorUser,
		subPath:  user.NewUserFieldPathBuilder().Metadata().CreateTime().FieldPath(),
	}
}

func (s UpdateUserRequestPathSelectorUserMetadataCreateTime) WithValue(value *timestamp.Timestamp) *UpdateUserRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateUserRequest_FieldSubPathValue)
}

func (s UpdateUserRequestPathSelectorUserMetadataCreateTime) WithArrayOfValues(values []*timestamp.Timestamp) *UpdateUserRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateUserRequest_FieldSubPathArrayOfValues)
}

type UpdateUserRequestPathSelectorUserMetadataUpdateTime struct{}

func (UpdateUserRequestPathSelectorUserMetadataUpdateTime) FieldPath() *UpdateUserRequest_FieldSubPath {
	return &UpdateUserRequest_FieldSubPath{
		selector: UpdateUserRequest_FieldPathSelectorUser,
		subPath:  user.NewUserFieldPathBuilder().Metadata().UpdateTime().FieldPath(),
	}
}

func (s UpdateUserRequestPathSelectorUserMetadataUpdateTime) WithValue(value *timestamp.Timestamp) *UpdateUserRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateUserRequest_FieldSubPathValue)
}

func (s UpdateUserRequestPathSelectorUserMetadataUpdateTime) WithArrayOfValues(values []*timestamp.Timestamp) *UpdateUserRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateUserRequest_FieldSubPathArrayOfValues)
}

type UpdateUserRequestPathSelectorUserMetadataDeleteTime struct{}

func (UpdateUserRequestPathSelectorUserMetadataDeleteTime) FieldPath() *UpdateUserRequest_FieldSubPath {
	return &UpdateUserRequest_FieldSubPath{
		selector: UpdateUserRequest_FieldPathSelectorUser,
		subPath:  user.NewUserFieldPathBuilder().Metadata().DeleteTime().FieldPath(),
	}
}

func (s UpdateUserRequestPathSelectorUserMetadataDeleteTime) WithValue(value *timestamp.Timestamp) *UpdateUserRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateUserRequest_FieldSubPathValue)
}

func (s UpdateUserRequestPathSelectorUserMetadataDeleteTime) WithArrayOfValues(values []*timestamp.Timestamp) *UpdateUserRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateUserRequest_FieldSubPathArrayOfValues)
}

type UpdateUserRequestPathSelectorUserMetadataUuid struct{}

func (UpdateUserRequestPathSelectorUserMetadataUuid) FieldPath() *UpdateUserRequest_FieldSubPath {
	return &UpdateUserRequest_FieldSubPath{
		selector: UpdateUserRequest_FieldPathSelectorUser,
		subPath:  user.NewUserFieldPathBuilder().Metadata().Uuid().FieldPath(),
	}
}

func (s UpdateUserRequestPathSelectorUserMetadataUuid) WithValue(value string) *UpdateUserRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateUserRequest_FieldSubPathValue)
}

func (s UpdateUserRequestPathSelectorUserMetadataUuid) WithArrayOfValues(values []string) *UpdateUserRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateUserRequest_FieldSubPathArrayOfValues)
}

type UpdateUserRequestPathSelectorUserMetadataTags struct{}

func (UpdateUserRequestPathSelectorUserMetadataTags) FieldPath() *UpdateUserRequest_FieldSubPath {
	return &UpdateUserRequest_FieldSubPath{
		selector: UpdateUserRequest_FieldPathSelectorUser,
		subPath:  user.NewUserFieldPathBuilder().Metadata().Tags().FieldPath(),
	}
}

func (s UpdateUserRequestPathSelectorUserMetadataTags) WithValue(value []string) *UpdateUserRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateUserRequest_FieldSubPathValue)
}

func (s UpdateUserRequestPathSelectorUserMetadataTags) WithArrayOfValues(values [][]string) *UpdateUserRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateUserRequest_FieldSubPathArrayOfValues)
}

func (s UpdateUserRequestPathSelectorUserMetadataTags) WithItemValue(value string) *UpdateUserRequest_FieldSubPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*UpdateUserRequest_FieldSubPathArrayItemValue)
}

type UpdateUserRequestPathSelectorUserMetadataLabels struct{}

func (UpdateUserRequestPathSelectorUserMetadataLabels) FieldPath() *UpdateUserRequest_FieldSubPath {
	return &UpdateUserRequest_FieldSubPath{
		selector: UpdateUserRequest_FieldPathSelectorUser,
		subPath:  user.NewUserFieldPathBuilder().Metadata().Labels().FieldPath(),
	}
}

func (s UpdateUserRequestPathSelectorUserMetadataLabels) WithValue(value map[string]string) *UpdateUserRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateUserRequest_FieldSubPathValue)
}

func (s UpdateUserRequestPathSelectorUserMetadataLabels) WithArrayOfValues(values []map[string]string) *UpdateUserRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateUserRequest_FieldSubPathArrayOfValues)
}

func (UpdateUserRequestPathSelectorUserMetadataLabels) WithKey(key string) UpdateUserRequestMapPathSelectorUserMetadataLabels {
	return UpdateUserRequestMapPathSelectorUserMetadataLabels{key: key}
}

type UpdateUserRequestMapPathSelectorUserMetadataLabels struct {
	key string
}

func (s UpdateUserRequestMapPathSelectorUserMetadataLabels) FieldPath() *UpdateUserRequest_FieldSubPath {
	return &UpdateUserRequest_FieldSubPath{
		selector: UpdateUserRequest_FieldPathSelectorUser,
		subPath:  user.NewUserFieldPathBuilder().Metadata().Labels().WithKey(s.key).FieldPath(),
	}
}

func (s UpdateUserRequestMapPathSelectorUserMetadataLabels) WithValue(value string) *UpdateUserRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateUserRequest_FieldSubPathValue)
}

func (s UpdateUserRequestMapPathSelectorUserMetadataLabels) WithArrayOfValues(values []string) *UpdateUserRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateUserRequest_FieldSubPathArrayOfValues)
}

type UpdateUserRequestPathSelectorUserMetadataAnnotations struct{}

func (UpdateUserRequestPathSelectorUserMetadataAnnotations) FieldPath() *UpdateUserRequest_FieldSubPath {
	return &UpdateUserRequest_FieldSubPath{
		selector: UpdateUserRequest_FieldPathSelectorUser,
		subPath:  user.NewUserFieldPathBuilder().Metadata().Annotations().FieldPath(),
	}
}

func (s UpdateUserRequestPathSelectorUserMetadataAnnotations) WithValue(value map[string]string) *UpdateUserRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateUserRequest_FieldSubPathValue)
}

func (s UpdateUserRequestPathSelectorUserMetadataAnnotations) WithArrayOfValues(values []map[string]string) *UpdateUserRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateUserRequest_FieldSubPathArrayOfValues)
}

func (UpdateUserRequestPathSelectorUserMetadataAnnotations) WithKey(key string) UpdateUserRequestMapPathSelectorUserMetadataAnnotations {
	return UpdateUserRequestMapPathSelectorUserMetadataAnnotations{key: key}
}

type UpdateUserRequestMapPathSelectorUserMetadataAnnotations struct {
	key string
}

func (s UpdateUserRequestMapPathSelectorUserMetadataAnnotations) FieldPath() *UpdateUserRequest_FieldSubPath {
	return &UpdateUserRequest_FieldSubPath{
		selector: UpdateUserRequest_FieldPathSelectorUser,
		subPath:  user.NewUserFieldPathBuilder().Metadata().Annotations().WithKey(s.key).FieldPath(),
	}
}

func (s UpdateUserRequestMapPathSelectorUserMetadataAnnotations) WithValue(value string) *UpdateUserRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateUserRequest_FieldSubPathValue)
}

func (s UpdateUserRequestMapPathSelectorUserMetadataAnnotations) WithArrayOfValues(values []string) *UpdateUserRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateUserRequest_FieldSubPathArrayOfValues)
}

type UpdateUserRequestPathSelectorUserMetadataGeneration struct{}

func (UpdateUserRequestPathSelectorUserMetadataGeneration) FieldPath() *UpdateUserRequest_FieldSubPath {
	return &UpdateUserRequest_FieldSubPath{
		selector: UpdateUserRequest_FieldPathSelectorUser,
		subPath:  user.NewUserFieldPathBuilder().Metadata().Generation().FieldPath(),
	}
}

func (s UpdateUserRequestPathSelectorUserMetadataGeneration) WithValue(value int64) *UpdateUserRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateUserRequest_FieldSubPathValue)
}

func (s UpdateUserRequestPathSelectorUserMetadataGeneration) WithArrayOfValues(values []int64) *UpdateUserRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateUserRequest_FieldSubPathArrayOfValues)
}

type UpdateUserRequestPathSelectorUserMetadataResourceVersion struct{}

func (UpdateUserRequestPathSelectorUserMetadataResourceVersion) FieldPath() *UpdateUserRequest_FieldSubPath {
	return &UpdateUserRequest_FieldSubPath{
		selector: UpdateUserRequest_FieldPathSelectorUser,
		subPath:  user.NewUserFieldPathBuilder().Metadata().ResourceVersion().FieldPath(),
	}
}

func (s UpdateUserRequestPathSelectorUserMetadataResourceVersion) WithValue(value string) *UpdateUserRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateUserRequest_FieldSubPathValue)
}

func (s UpdateUserRequestPathSelectorUserMetadataResourceVersion) WithArrayOfValues(values []string) *UpdateUserRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateUserRequest_FieldSubPathArrayOfValues)
}

type UpdateUserRequestPathSelectorUserMetadataOwnerReferences struct{}

func (UpdateUserRequestPathSelectorUserMetadataOwnerReferences) FieldPath() *UpdateUserRequest_FieldSubPath {
	return &UpdateUserRequest_FieldSubPath{
		selector: UpdateUserRequest_FieldPathSelectorUser,
		subPath:  user.NewUserFieldPathBuilder().Metadata().OwnerReferences().FieldPath(),
	}
}

func (s UpdateUserRequestPathSelectorUserMetadataOwnerReferences) WithValue(value []*ntt_meta.OwnerReference) *UpdateUserRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateUserRequest_FieldSubPathValue)
}

func (s UpdateUserRequestPathSelectorUserMetadataOwnerReferences) WithArrayOfValues(values [][]*ntt_meta.OwnerReference) *UpdateUserRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateUserRequest_FieldSubPathArrayOfValues)
}

func (s UpdateUserRequestPathSelectorUserMetadataOwnerReferences) WithItemValue(value *ntt_meta.OwnerReference) *UpdateUserRequest_FieldSubPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*UpdateUserRequest_FieldSubPathArrayItemValue)
}

func (UpdateUserRequestPathSelectorUserMetadataOwnerReferences) Kind() UpdateUserRequestPathSelectorUserMetadataOwnerReferencesKind {
	return UpdateUserRequestPathSelectorUserMetadataOwnerReferencesKind{}
}

func (UpdateUserRequestPathSelectorUserMetadataOwnerReferences) Version() UpdateUserRequestPathSelectorUserMetadataOwnerReferencesVersion {
	return UpdateUserRequestPathSelectorUserMetadataOwnerReferencesVersion{}
}

func (UpdateUserRequestPathSelectorUserMetadataOwnerReferences) Name() UpdateUserRequestPathSelectorUserMetadataOwnerReferencesName {
	return UpdateUserRequestPathSelectorUserMetadataOwnerReferencesName{}
}

func (UpdateUserRequestPathSelectorUserMetadataOwnerReferences) Region() UpdateUserRequestPathSelectorUserMetadataOwnerReferencesRegion {
	return UpdateUserRequestPathSelectorUserMetadataOwnerReferencesRegion{}
}

func (UpdateUserRequestPathSelectorUserMetadataOwnerReferences) Controller() UpdateUserRequestPathSelectorUserMetadataOwnerReferencesController {
	return UpdateUserRequestPathSelectorUserMetadataOwnerReferencesController{}
}

func (UpdateUserRequestPathSelectorUserMetadataOwnerReferences) BlockOwnerDeletion() UpdateUserRequestPathSelectorUserMetadataOwnerReferencesBlockOwnerDeletion {
	return UpdateUserRequestPathSelectorUserMetadataOwnerReferencesBlockOwnerDeletion{}
}

func (UpdateUserRequestPathSelectorUserMetadataOwnerReferences) RequiresOwnerReference() UpdateUserRequestPathSelectorUserMetadataOwnerReferencesRequiresOwnerReference {
	return UpdateUserRequestPathSelectorUserMetadataOwnerReferencesRequiresOwnerReference{}
}

type UpdateUserRequestPathSelectorUserMetadataOwnerReferencesKind struct{}

func (UpdateUserRequestPathSelectorUserMetadataOwnerReferencesKind) FieldPath() *UpdateUserRequest_FieldSubPath {
	return &UpdateUserRequest_FieldSubPath{
		selector: UpdateUserRequest_FieldPathSelectorUser,
		subPath:  user.NewUserFieldPathBuilder().Metadata().OwnerReferences().Kind().FieldPath(),
	}
}

func (s UpdateUserRequestPathSelectorUserMetadataOwnerReferencesKind) WithValue(value string) *UpdateUserRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateUserRequest_FieldSubPathValue)
}

func (s UpdateUserRequestPathSelectorUserMetadataOwnerReferencesKind) WithArrayOfValues(values []string) *UpdateUserRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateUserRequest_FieldSubPathArrayOfValues)
}

type UpdateUserRequestPathSelectorUserMetadataOwnerReferencesVersion struct{}

func (UpdateUserRequestPathSelectorUserMetadataOwnerReferencesVersion) FieldPath() *UpdateUserRequest_FieldSubPath {
	return &UpdateUserRequest_FieldSubPath{
		selector: UpdateUserRequest_FieldPathSelectorUser,
		subPath:  user.NewUserFieldPathBuilder().Metadata().OwnerReferences().Version().FieldPath(),
	}
}

func (s UpdateUserRequestPathSelectorUserMetadataOwnerReferencesVersion) WithValue(value string) *UpdateUserRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateUserRequest_FieldSubPathValue)
}

func (s UpdateUserRequestPathSelectorUserMetadataOwnerReferencesVersion) WithArrayOfValues(values []string) *UpdateUserRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateUserRequest_FieldSubPathArrayOfValues)
}

type UpdateUserRequestPathSelectorUserMetadataOwnerReferencesName struct{}

func (UpdateUserRequestPathSelectorUserMetadataOwnerReferencesName) FieldPath() *UpdateUserRequest_FieldSubPath {
	return &UpdateUserRequest_FieldSubPath{
		selector: UpdateUserRequest_FieldPathSelectorUser,
		subPath:  user.NewUserFieldPathBuilder().Metadata().OwnerReferences().Name().FieldPath(),
	}
}

func (s UpdateUserRequestPathSelectorUserMetadataOwnerReferencesName) WithValue(value string) *UpdateUserRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateUserRequest_FieldSubPathValue)
}

func (s UpdateUserRequestPathSelectorUserMetadataOwnerReferencesName) WithArrayOfValues(values []string) *UpdateUserRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateUserRequest_FieldSubPathArrayOfValues)
}

type UpdateUserRequestPathSelectorUserMetadataOwnerReferencesRegion struct{}

func (UpdateUserRequestPathSelectorUserMetadataOwnerReferencesRegion) FieldPath() *UpdateUserRequest_FieldSubPath {
	return &UpdateUserRequest_FieldSubPath{
		selector: UpdateUserRequest_FieldPathSelectorUser,
		subPath:  user.NewUserFieldPathBuilder().Metadata().OwnerReferences().Region().FieldPath(),
	}
}

func (s UpdateUserRequestPathSelectorUserMetadataOwnerReferencesRegion) WithValue(value string) *UpdateUserRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateUserRequest_FieldSubPathValue)
}

func (s UpdateUserRequestPathSelectorUserMetadataOwnerReferencesRegion) WithArrayOfValues(values []string) *UpdateUserRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateUserRequest_FieldSubPathArrayOfValues)
}

type UpdateUserRequestPathSelectorUserMetadataOwnerReferencesController struct{}

func (UpdateUserRequestPathSelectorUserMetadataOwnerReferencesController) FieldPath() *UpdateUserRequest_FieldSubPath {
	return &UpdateUserRequest_FieldSubPath{
		selector: UpdateUserRequest_FieldPathSelectorUser,
		subPath:  user.NewUserFieldPathBuilder().Metadata().OwnerReferences().Controller().FieldPath(),
	}
}

func (s UpdateUserRequestPathSelectorUserMetadataOwnerReferencesController) WithValue(value bool) *UpdateUserRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateUserRequest_FieldSubPathValue)
}

func (s UpdateUserRequestPathSelectorUserMetadataOwnerReferencesController) WithArrayOfValues(values []bool) *UpdateUserRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateUserRequest_FieldSubPathArrayOfValues)
}

type UpdateUserRequestPathSelectorUserMetadataOwnerReferencesBlockOwnerDeletion struct{}

func (UpdateUserRequestPathSelectorUserMetadataOwnerReferencesBlockOwnerDeletion) FieldPath() *UpdateUserRequest_FieldSubPath {
	return &UpdateUserRequest_FieldSubPath{
		selector: UpdateUserRequest_FieldPathSelectorUser,
		subPath:  user.NewUserFieldPathBuilder().Metadata().OwnerReferences().BlockOwnerDeletion().FieldPath(),
	}
}

func (s UpdateUserRequestPathSelectorUserMetadataOwnerReferencesBlockOwnerDeletion) WithValue(value bool) *UpdateUserRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateUserRequest_FieldSubPathValue)
}

func (s UpdateUserRequestPathSelectorUserMetadataOwnerReferencesBlockOwnerDeletion) WithArrayOfValues(values []bool) *UpdateUserRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateUserRequest_FieldSubPathArrayOfValues)
}

type UpdateUserRequestPathSelectorUserMetadataOwnerReferencesRequiresOwnerReference struct{}

func (UpdateUserRequestPathSelectorUserMetadataOwnerReferencesRequiresOwnerReference) FieldPath() *UpdateUserRequest_FieldSubPath {
	return &UpdateUserRequest_FieldSubPath{
		selector: UpdateUserRequest_FieldPathSelectorUser,
		subPath:  user.NewUserFieldPathBuilder().Metadata().OwnerReferences().RequiresOwnerReference().FieldPath(),
	}
}

func (s UpdateUserRequestPathSelectorUserMetadataOwnerReferencesRequiresOwnerReference) WithValue(value bool) *UpdateUserRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateUserRequest_FieldSubPathValue)
}

func (s UpdateUserRequestPathSelectorUserMetadataOwnerReferencesRequiresOwnerReference) WithArrayOfValues(values []bool) *UpdateUserRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateUserRequest_FieldSubPathArrayOfValues)
}

type UpdateUserRequestPathSelectorUserMetadataShards struct{}

func (UpdateUserRequestPathSelectorUserMetadataShards) FieldPath() *UpdateUserRequest_FieldSubPath {
	return &UpdateUserRequest_FieldSubPath{
		selector: UpdateUserRequest_FieldPathSelectorUser,
		subPath:  user.NewUserFieldPathBuilder().Metadata().Shards().FieldPath(),
	}
}

func (s UpdateUserRequestPathSelectorUserMetadataShards) WithValue(value map[string]int64) *UpdateUserRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateUserRequest_FieldSubPathValue)
}

func (s UpdateUserRequestPathSelectorUserMetadataShards) WithArrayOfValues(values []map[string]int64) *UpdateUserRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateUserRequest_FieldSubPathArrayOfValues)
}

func (UpdateUserRequestPathSelectorUserMetadataShards) WithKey(key string) UpdateUserRequestMapPathSelectorUserMetadataShards {
	return UpdateUserRequestMapPathSelectorUserMetadataShards{key: key}
}

type UpdateUserRequestMapPathSelectorUserMetadataShards struct {
	key string
}

func (s UpdateUserRequestMapPathSelectorUserMetadataShards) FieldPath() *UpdateUserRequest_FieldSubPath {
	return &UpdateUserRequest_FieldSubPath{
		selector: UpdateUserRequest_FieldPathSelectorUser,
		subPath:  user.NewUserFieldPathBuilder().Metadata().Shards().WithKey(s.key).FieldPath(),
	}
}

func (s UpdateUserRequestMapPathSelectorUserMetadataShards) WithValue(value int64) *UpdateUserRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateUserRequest_FieldSubPathValue)
}

func (s UpdateUserRequestMapPathSelectorUserMetadataShards) WithArrayOfValues(values []int64) *UpdateUserRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateUserRequest_FieldSubPathArrayOfValues)
}

type UpdateUserRequestPathSelectorUserMetadataSyncing struct{}

func (UpdateUserRequestPathSelectorUserMetadataSyncing) FieldPath() *UpdateUserRequest_FieldSubPath {
	return &UpdateUserRequest_FieldSubPath{
		selector: UpdateUserRequest_FieldPathSelectorUser,
		subPath:  user.NewUserFieldPathBuilder().Metadata().Syncing().FieldPath(),
	}
}

func (s UpdateUserRequestPathSelectorUserMetadataSyncing) WithValue(value *ntt_meta.SyncingMeta) *UpdateUserRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateUserRequest_FieldSubPathValue)
}

func (s UpdateUserRequestPathSelectorUserMetadataSyncing) WithArrayOfValues(values []*ntt_meta.SyncingMeta) *UpdateUserRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateUserRequest_FieldSubPathArrayOfValues)
}

func (UpdateUserRequestPathSelectorUserMetadataSyncing) OwningRegion() UpdateUserRequestPathSelectorUserMetadataSyncingOwningRegion {
	return UpdateUserRequestPathSelectorUserMetadataSyncingOwningRegion{}
}

func (UpdateUserRequestPathSelectorUserMetadataSyncing) Regions() UpdateUserRequestPathSelectorUserMetadataSyncingRegions {
	return UpdateUserRequestPathSelectorUserMetadataSyncingRegions{}
}

type UpdateUserRequestPathSelectorUserMetadataSyncingOwningRegion struct{}

func (UpdateUserRequestPathSelectorUserMetadataSyncingOwningRegion) FieldPath() *UpdateUserRequest_FieldSubPath {
	return &UpdateUserRequest_FieldSubPath{
		selector: UpdateUserRequest_FieldPathSelectorUser,
		subPath:  user.NewUserFieldPathBuilder().Metadata().Syncing().OwningRegion().FieldPath(),
	}
}

func (s UpdateUserRequestPathSelectorUserMetadataSyncingOwningRegion) WithValue(value string) *UpdateUserRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateUserRequest_FieldSubPathValue)
}

func (s UpdateUserRequestPathSelectorUserMetadataSyncingOwningRegion) WithArrayOfValues(values []string) *UpdateUserRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateUserRequest_FieldSubPathArrayOfValues)
}

type UpdateUserRequestPathSelectorUserMetadataSyncingRegions struct{}

func (UpdateUserRequestPathSelectorUserMetadataSyncingRegions) FieldPath() *UpdateUserRequest_FieldSubPath {
	return &UpdateUserRequest_FieldSubPath{
		selector: UpdateUserRequest_FieldPathSelectorUser,
		subPath:  user.NewUserFieldPathBuilder().Metadata().Syncing().Regions().FieldPath(),
	}
}

func (s UpdateUserRequestPathSelectorUserMetadataSyncingRegions) WithValue(value []string) *UpdateUserRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateUserRequest_FieldSubPathValue)
}

func (s UpdateUserRequestPathSelectorUserMetadataSyncingRegions) WithArrayOfValues(values [][]string) *UpdateUserRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateUserRequest_FieldSubPathArrayOfValues)
}

func (s UpdateUserRequestPathSelectorUserMetadataSyncingRegions) WithItemValue(value string) *UpdateUserRequest_FieldSubPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*UpdateUserRequest_FieldSubPathArrayItemValue)
}

type UpdateUserRequestPathSelectorUserMetadataLifecycle struct{}

func (UpdateUserRequestPathSelectorUserMetadataLifecycle) FieldPath() *UpdateUserRequest_FieldSubPath {
	return &UpdateUserRequest_FieldSubPath{
		selector: UpdateUserRequest_FieldPathSelectorUser,
		subPath:  user.NewUserFieldPathBuilder().Metadata().Lifecycle().FieldPath(),
	}
}

func (s UpdateUserRequestPathSelectorUserMetadataLifecycle) WithValue(value *ntt_meta.Lifecycle) *UpdateUserRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateUserRequest_FieldSubPathValue)
}

func (s UpdateUserRequestPathSelectorUserMetadataLifecycle) WithArrayOfValues(values []*ntt_meta.Lifecycle) *UpdateUserRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateUserRequest_FieldSubPathArrayOfValues)
}

func (UpdateUserRequestPathSelectorUserMetadataLifecycle) State() UpdateUserRequestPathSelectorUserMetadataLifecycleState {
	return UpdateUserRequestPathSelectorUserMetadataLifecycleState{}
}

func (UpdateUserRequestPathSelectorUserMetadataLifecycle) BlockDeletion() UpdateUserRequestPathSelectorUserMetadataLifecycleBlockDeletion {
	return UpdateUserRequestPathSelectorUserMetadataLifecycleBlockDeletion{}
}

type UpdateUserRequestPathSelectorUserMetadataLifecycleState struct{}

func (UpdateUserRequestPathSelectorUserMetadataLifecycleState) FieldPath() *UpdateUserRequest_FieldSubPath {
	return &UpdateUserRequest_FieldSubPath{
		selector: UpdateUserRequest_FieldPathSelectorUser,
		subPath:  user.NewUserFieldPathBuilder().Metadata().Lifecycle().State().FieldPath(),
	}
}

func (s UpdateUserRequestPathSelectorUserMetadataLifecycleState) WithValue(value ntt_meta.Lifecycle_State) *UpdateUserRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateUserRequest_FieldSubPathValue)
}

func (s UpdateUserRequestPathSelectorUserMetadataLifecycleState) WithArrayOfValues(values []ntt_meta.Lifecycle_State) *UpdateUserRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateUserRequest_FieldSubPathArrayOfValues)
}

type UpdateUserRequestPathSelectorUserMetadataLifecycleBlockDeletion struct{}

func (UpdateUserRequestPathSelectorUserMetadataLifecycleBlockDeletion) FieldPath() *UpdateUserRequest_FieldSubPath {
	return &UpdateUserRequest_FieldSubPath{
		selector: UpdateUserRequest_FieldPathSelectorUser,
		subPath:  user.NewUserFieldPathBuilder().Metadata().Lifecycle().BlockDeletion().FieldPath(),
	}
}

func (s UpdateUserRequestPathSelectorUserMetadataLifecycleBlockDeletion) WithValue(value bool) *UpdateUserRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateUserRequest_FieldSubPathValue)
}

func (s UpdateUserRequestPathSelectorUserMetadataLifecycleBlockDeletion) WithArrayOfValues(values []bool) *UpdateUserRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateUserRequest_FieldSubPathArrayOfValues)
}

type UpdateUserRequestPathSelectorUserEmail struct{}

func (UpdateUserRequestPathSelectorUserEmail) FieldPath() *UpdateUserRequest_FieldSubPath {
	return &UpdateUserRequest_FieldSubPath{
		selector: UpdateUserRequest_FieldPathSelectorUser,
		subPath:  user.NewUserFieldPathBuilder().Email().FieldPath(),
	}
}

func (s UpdateUserRequestPathSelectorUserEmail) WithValue(value string) *UpdateUserRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateUserRequest_FieldSubPathValue)
}

func (s UpdateUserRequestPathSelectorUserEmail) WithArrayOfValues(values []string) *UpdateUserRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateUserRequest_FieldSubPathArrayOfValues)
}

type UpdateUserRequestPathSelectorUserEmailVerified struct{}

func (UpdateUserRequestPathSelectorUserEmailVerified) FieldPath() *UpdateUserRequest_FieldSubPath {
	return &UpdateUserRequest_FieldSubPath{
		selector: UpdateUserRequest_FieldPathSelectorUser,
		subPath:  user.NewUserFieldPathBuilder().EmailVerified().FieldPath(),
	}
}

func (s UpdateUserRequestPathSelectorUserEmailVerified) WithValue(value bool) *UpdateUserRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateUserRequest_FieldSubPathValue)
}

func (s UpdateUserRequestPathSelectorUserEmailVerified) WithArrayOfValues(values []bool) *UpdateUserRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateUserRequest_FieldSubPathArrayOfValues)
}

type UpdateUserRequestPathSelectorUserAuthInfo struct{}

func (UpdateUserRequestPathSelectorUserAuthInfo) FieldPath() *UpdateUserRequest_FieldSubPath {
	return &UpdateUserRequest_FieldSubPath{
		selector: UpdateUserRequest_FieldPathSelectorUser,
		subPath:  user.NewUserFieldPathBuilder().AuthInfo().FieldPath(),
	}
}

func (s UpdateUserRequestPathSelectorUserAuthInfo) WithValue(value *user.User_AuthInfo) *UpdateUserRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateUserRequest_FieldSubPathValue)
}

func (s UpdateUserRequestPathSelectorUserAuthInfo) WithArrayOfValues(values []*user.User_AuthInfo) *UpdateUserRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateUserRequest_FieldSubPathArrayOfValues)
}

func (UpdateUserRequestPathSelectorUserAuthInfo) Provider() UpdateUserRequestPathSelectorUserAuthInfoProvider {
	return UpdateUserRequestPathSelectorUserAuthInfoProvider{}
}

func (UpdateUserRequestPathSelectorUserAuthInfo) Id() UpdateUserRequestPathSelectorUserAuthInfoId {
	return UpdateUserRequestPathSelectorUserAuthInfoId{}
}

type UpdateUserRequestPathSelectorUserAuthInfoProvider struct{}

func (UpdateUserRequestPathSelectorUserAuthInfoProvider) FieldPath() *UpdateUserRequest_FieldSubPath {
	return &UpdateUserRequest_FieldSubPath{
		selector: UpdateUserRequest_FieldPathSelectorUser,
		subPath:  user.NewUserFieldPathBuilder().AuthInfo().Provider().FieldPath(),
	}
}

func (s UpdateUserRequestPathSelectorUserAuthInfoProvider) WithValue(value string) *UpdateUserRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateUserRequest_FieldSubPathValue)
}

func (s UpdateUserRequestPathSelectorUserAuthInfoProvider) WithArrayOfValues(values []string) *UpdateUserRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateUserRequest_FieldSubPathArrayOfValues)
}

type UpdateUserRequestPathSelectorUserAuthInfoId struct{}

func (UpdateUserRequestPathSelectorUserAuthInfoId) FieldPath() *UpdateUserRequest_FieldSubPath {
	return &UpdateUserRequest_FieldSubPath{
		selector: UpdateUserRequest_FieldPathSelectorUser,
		subPath:  user.NewUserFieldPathBuilder().AuthInfo().Id().FieldPath(),
	}
}

func (s UpdateUserRequestPathSelectorUserAuthInfoId) WithValue(value string) *UpdateUserRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateUserRequest_FieldSubPathValue)
}

func (s UpdateUserRequestPathSelectorUserAuthInfoId) WithArrayOfValues(values []string) *UpdateUserRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateUserRequest_FieldSubPathArrayOfValues)
}

type UpdateUserRequestPathSelectorUserSettings struct{}

func (UpdateUserRequestPathSelectorUserSettings) FieldPath() *UpdateUserRequest_FieldSubPath {
	return &UpdateUserRequest_FieldSubPath{
		selector: UpdateUserRequest_FieldPathSelectorUser,
		subPath:  user.NewUserFieldPathBuilder().Settings().FieldPath(),
	}
}

func (s UpdateUserRequestPathSelectorUserSettings) WithValue(value map[string]string) *UpdateUserRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateUserRequest_FieldSubPathValue)
}

func (s UpdateUserRequestPathSelectorUserSettings) WithArrayOfValues(values []map[string]string) *UpdateUserRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateUserRequest_FieldSubPathArrayOfValues)
}

func (UpdateUserRequestPathSelectorUserSettings) WithKey(key string) UpdateUserRequestMapPathSelectorUserSettings {
	return UpdateUserRequestMapPathSelectorUserSettings{key: key}
}

type UpdateUserRequestMapPathSelectorUserSettings struct {
	key string
}

func (s UpdateUserRequestMapPathSelectorUserSettings) FieldPath() *UpdateUserRequest_FieldSubPath {
	return &UpdateUserRequest_FieldSubPath{
		selector: UpdateUserRequest_FieldPathSelectorUser,
		subPath:  user.NewUserFieldPathBuilder().Settings().WithKey(s.key).FieldPath(),
	}
}

func (s UpdateUserRequestMapPathSelectorUserSettings) WithValue(value string) *UpdateUserRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateUserRequest_FieldSubPathValue)
}

func (s UpdateUserRequestMapPathSelectorUserSettings) WithArrayOfValues(values []string) *UpdateUserRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateUserRequest_FieldSubPathArrayOfValues)
}

type UpdateUserRequestPathSelectorUserRefreshedTime struct{}

func (UpdateUserRequestPathSelectorUserRefreshedTime) FieldPath() *UpdateUserRequest_FieldSubPath {
	return &UpdateUserRequest_FieldSubPath{
		selector: UpdateUserRequest_FieldPathSelectorUser,
		subPath:  user.NewUserFieldPathBuilder().RefreshedTime().FieldPath(),
	}
}

func (s UpdateUserRequestPathSelectorUserRefreshedTime) WithValue(value *timestamp.Timestamp) *UpdateUserRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateUserRequest_FieldSubPathValue)
}

func (s UpdateUserRequestPathSelectorUserRefreshedTime) WithArrayOfValues(values []*timestamp.Timestamp) *UpdateUserRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateUserRequest_FieldSubPathArrayOfValues)
}

type UpdateUserRequestPathSelectorUpdateMask struct{}

func (UpdateUserRequestPathSelectorUpdateMask) FieldPath() *UpdateUserRequest_FieldTerminalPath {
	return &UpdateUserRequest_FieldTerminalPath{selector: UpdateUserRequest_FieldPathSelectorUpdateMask}
}

func (s UpdateUserRequestPathSelectorUpdateMask) WithValue(value *user.User_FieldMask) *UpdateUserRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateUserRequest_FieldTerminalPathValue)
}

func (s UpdateUserRequestPathSelectorUpdateMask) WithArrayOfValues(values []*user.User_FieldMask) *UpdateUserRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateUserRequest_FieldTerminalPathArrayOfValues)
}

type UpdateUserRequestPathSelectorCas struct{}

func (UpdateUserRequestPathSelectorCas) FieldPath() *UpdateUserRequest_FieldTerminalPath {
	return &UpdateUserRequest_FieldTerminalPath{selector: UpdateUserRequest_FieldPathSelectorCas}
}

func (s UpdateUserRequestPathSelectorCas) WithValue(value *UpdateUserRequest_CAS) *UpdateUserRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateUserRequest_FieldTerminalPathValue)
}

func (s UpdateUserRequestPathSelectorCas) WithArrayOfValues(values []*UpdateUserRequest_CAS) *UpdateUserRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateUserRequest_FieldTerminalPathArrayOfValues)
}

func (UpdateUserRequestPathSelectorCas) WithSubPath(subPath UpdateUserRequestCAS_FieldPath) *UpdateUserRequest_FieldSubPath {
	return &UpdateUserRequest_FieldSubPath{selector: UpdateUserRequest_FieldPathSelectorCas, subPath: subPath}
}

func (s UpdateUserRequestPathSelectorCas) WithSubValue(subPathValue UpdateUserRequestCAS_FieldPathValue) *UpdateUserRequest_FieldSubPathValue {
	return &UpdateUserRequest_FieldSubPathValue{UpdateUserRequest_FieldPath: s.WithSubPath(subPathValue), subPathValue: subPathValue}
}

func (s UpdateUserRequestPathSelectorCas) WithSubArrayOfValues(subPathArrayOfValues UpdateUserRequestCAS_FieldPathArrayOfValues) *UpdateUserRequest_FieldSubPathArrayOfValues {
	return &UpdateUserRequest_FieldSubPathArrayOfValues{UpdateUserRequest_FieldPath: s.WithSubPath(subPathArrayOfValues), subPathArrayOfValues: subPathArrayOfValues}
}

func (s UpdateUserRequestPathSelectorCas) WithSubArrayItemValue(subPathArrayItemValue UpdateUserRequestCAS_FieldPathArrayItemValue) *UpdateUserRequest_FieldSubPathArrayItemValue {
	return &UpdateUserRequest_FieldSubPathArrayItemValue{UpdateUserRequest_FieldPath: s.WithSubPath(subPathArrayItemValue), subPathItemValue: subPathArrayItemValue}
}

func (UpdateUserRequestPathSelectorCas) ConditionalState() UpdateUserRequestPathSelectorCasConditionalState {
	return UpdateUserRequestPathSelectorCasConditionalState{}
}

func (UpdateUserRequestPathSelectorCas) FieldMask() UpdateUserRequestPathSelectorCasFieldMask {
	return UpdateUserRequestPathSelectorCasFieldMask{}
}

type UpdateUserRequestPathSelectorCasConditionalState struct{}

func (UpdateUserRequestPathSelectorCasConditionalState) FieldPath() *UpdateUserRequest_FieldSubPath {
	return &UpdateUserRequest_FieldSubPath{
		selector: UpdateUserRequest_FieldPathSelectorCas,
		subPath:  NewUpdateUserRequestCASFieldPathBuilder().ConditionalState().FieldPath(),
	}
}

func (s UpdateUserRequestPathSelectorCasConditionalState) WithValue(value *user.User) *UpdateUserRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateUserRequest_FieldSubPathValue)
}

func (s UpdateUserRequestPathSelectorCasConditionalState) WithArrayOfValues(values []*user.User) *UpdateUserRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateUserRequest_FieldSubPathArrayOfValues)
}

func (UpdateUserRequestPathSelectorCasConditionalState) Name() UpdateUserRequestPathSelectorCasConditionalStateName {
	return UpdateUserRequestPathSelectorCasConditionalStateName{}
}

func (UpdateUserRequestPathSelectorCasConditionalState) FullName() UpdateUserRequestPathSelectorCasConditionalStateFullName {
	return UpdateUserRequestPathSelectorCasConditionalStateFullName{}
}

func (UpdateUserRequestPathSelectorCasConditionalState) Metadata() UpdateUserRequestPathSelectorCasConditionalStateMetadata {
	return UpdateUserRequestPathSelectorCasConditionalStateMetadata{}
}

func (UpdateUserRequestPathSelectorCasConditionalState) Email() UpdateUserRequestPathSelectorCasConditionalStateEmail {
	return UpdateUserRequestPathSelectorCasConditionalStateEmail{}
}

func (UpdateUserRequestPathSelectorCasConditionalState) EmailVerified() UpdateUserRequestPathSelectorCasConditionalStateEmailVerified {
	return UpdateUserRequestPathSelectorCasConditionalStateEmailVerified{}
}

func (UpdateUserRequestPathSelectorCasConditionalState) AuthInfo() UpdateUserRequestPathSelectorCasConditionalStateAuthInfo {
	return UpdateUserRequestPathSelectorCasConditionalStateAuthInfo{}
}

func (UpdateUserRequestPathSelectorCasConditionalState) Settings() UpdateUserRequestPathSelectorCasConditionalStateSettings {
	return UpdateUserRequestPathSelectorCasConditionalStateSettings{}
}

func (UpdateUserRequestPathSelectorCasConditionalState) RefreshedTime() UpdateUserRequestPathSelectorCasConditionalStateRefreshedTime {
	return UpdateUserRequestPathSelectorCasConditionalStateRefreshedTime{}
}

type UpdateUserRequestPathSelectorCasConditionalStateName struct{}

func (UpdateUserRequestPathSelectorCasConditionalStateName) FieldPath() *UpdateUserRequest_FieldSubPath {
	return &UpdateUserRequest_FieldSubPath{
		selector: UpdateUserRequest_FieldPathSelectorCas,
		subPath:  NewUpdateUserRequestCASFieldPathBuilder().ConditionalState().Name().FieldPath(),
	}
}

func (s UpdateUserRequestPathSelectorCasConditionalStateName) WithValue(value *user.Name) *UpdateUserRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateUserRequest_FieldSubPathValue)
}

func (s UpdateUserRequestPathSelectorCasConditionalStateName) WithArrayOfValues(values []*user.Name) *UpdateUserRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateUserRequest_FieldSubPathArrayOfValues)
}

type UpdateUserRequestPathSelectorCasConditionalStateFullName struct{}

func (UpdateUserRequestPathSelectorCasConditionalStateFullName) FieldPath() *UpdateUserRequest_FieldSubPath {
	return &UpdateUserRequest_FieldSubPath{
		selector: UpdateUserRequest_FieldPathSelectorCas,
		subPath:  NewUpdateUserRequestCASFieldPathBuilder().ConditionalState().FullName().FieldPath(),
	}
}

func (s UpdateUserRequestPathSelectorCasConditionalStateFullName) WithValue(value string) *UpdateUserRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateUserRequest_FieldSubPathValue)
}

func (s UpdateUserRequestPathSelectorCasConditionalStateFullName) WithArrayOfValues(values []string) *UpdateUserRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateUserRequest_FieldSubPathArrayOfValues)
}

type UpdateUserRequestPathSelectorCasConditionalStateMetadata struct{}

func (UpdateUserRequestPathSelectorCasConditionalStateMetadata) FieldPath() *UpdateUserRequest_FieldSubPath {
	return &UpdateUserRequest_FieldSubPath{
		selector: UpdateUserRequest_FieldPathSelectorCas,
		subPath:  NewUpdateUserRequestCASFieldPathBuilder().ConditionalState().Metadata().FieldPath(),
	}
}

func (s UpdateUserRequestPathSelectorCasConditionalStateMetadata) WithValue(value *ntt_meta.Meta) *UpdateUserRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateUserRequest_FieldSubPathValue)
}

func (s UpdateUserRequestPathSelectorCasConditionalStateMetadata) WithArrayOfValues(values []*ntt_meta.Meta) *UpdateUserRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateUserRequest_FieldSubPathArrayOfValues)
}

func (UpdateUserRequestPathSelectorCasConditionalStateMetadata) CreateTime() UpdateUserRequestPathSelectorCasConditionalStateMetadataCreateTime {
	return UpdateUserRequestPathSelectorCasConditionalStateMetadataCreateTime{}
}

func (UpdateUserRequestPathSelectorCasConditionalStateMetadata) UpdateTime() UpdateUserRequestPathSelectorCasConditionalStateMetadataUpdateTime {
	return UpdateUserRequestPathSelectorCasConditionalStateMetadataUpdateTime{}
}

func (UpdateUserRequestPathSelectorCasConditionalStateMetadata) DeleteTime() UpdateUserRequestPathSelectorCasConditionalStateMetadataDeleteTime {
	return UpdateUserRequestPathSelectorCasConditionalStateMetadataDeleteTime{}
}

func (UpdateUserRequestPathSelectorCasConditionalStateMetadata) Uuid() UpdateUserRequestPathSelectorCasConditionalStateMetadataUuid {
	return UpdateUserRequestPathSelectorCasConditionalStateMetadataUuid{}
}

func (UpdateUserRequestPathSelectorCasConditionalStateMetadata) Tags() UpdateUserRequestPathSelectorCasConditionalStateMetadataTags {
	return UpdateUserRequestPathSelectorCasConditionalStateMetadataTags{}
}

func (UpdateUserRequestPathSelectorCasConditionalStateMetadata) Labels() UpdateUserRequestPathSelectorCasConditionalStateMetadataLabels {
	return UpdateUserRequestPathSelectorCasConditionalStateMetadataLabels{}
}

func (UpdateUserRequestPathSelectorCasConditionalStateMetadata) Annotations() UpdateUserRequestPathSelectorCasConditionalStateMetadataAnnotations {
	return UpdateUserRequestPathSelectorCasConditionalStateMetadataAnnotations{}
}

func (UpdateUserRequestPathSelectorCasConditionalStateMetadata) Generation() UpdateUserRequestPathSelectorCasConditionalStateMetadataGeneration {
	return UpdateUserRequestPathSelectorCasConditionalStateMetadataGeneration{}
}

func (UpdateUserRequestPathSelectorCasConditionalStateMetadata) ResourceVersion() UpdateUserRequestPathSelectorCasConditionalStateMetadataResourceVersion {
	return UpdateUserRequestPathSelectorCasConditionalStateMetadataResourceVersion{}
}

func (UpdateUserRequestPathSelectorCasConditionalStateMetadata) OwnerReferences() UpdateUserRequestPathSelectorCasConditionalStateMetadataOwnerReferences {
	return UpdateUserRequestPathSelectorCasConditionalStateMetadataOwnerReferences{}
}

func (UpdateUserRequestPathSelectorCasConditionalStateMetadata) Shards() UpdateUserRequestPathSelectorCasConditionalStateMetadataShards {
	return UpdateUserRequestPathSelectorCasConditionalStateMetadataShards{}
}

func (UpdateUserRequestPathSelectorCasConditionalStateMetadata) Syncing() UpdateUserRequestPathSelectorCasConditionalStateMetadataSyncing {
	return UpdateUserRequestPathSelectorCasConditionalStateMetadataSyncing{}
}

func (UpdateUserRequestPathSelectorCasConditionalStateMetadata) Lifecycle() UpdateUserRequestPathSelectorCasConditionalStateMetadataLifecycle {
	return UpdateUserRequestPathSelectorCasConditionalStateMetadataLifecycle{}
}

type UpdateUserRequestPathSelectorCasConditionalStateMetadataCreateTime struct{}

func (UpdateUserRequestPathSelectorCasConditionalStateMetadataCreateTime) FieldPath() *UpdateUserRequest_FieldSubPath {
	return &UpdateUserRequest_FieldSubPath{
		selector: UpdateUserRequest_FieldPathSelectorCas,
		subPath:  NewUpdateUserRequestCASFieldPathBuilder().ConditionalState().Metadata().CreateTime().FieldPath(),
	}
}

func (s UpdateUserRequestPathSelectorCasConditionalStateMetadataCreateTime) WithValue(value *timestamp.Timestamp) *UpdateUserRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateUserRequest_FieldSubPathValue)
}

func (s UpdateUserRequestPathSelectorCasConditionalStateMetadataCreateTime) WithArrayOfValues(values []*timestamp.Timestamp) *UpdateUserRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateUserRequest_FieldSubPathArrayOfValues)
}

type UpdateUserRequestPathSelectorCasConditionalStateMetadataUpdateTime struct{}

func (UpdateUserRequestPathSelectorCasConditionalStateMetadataUpdateTime) FieldPath() *UpdateUserRequest_FieldSubPath {
	return &UpdateUserRequest_FieldSubPath{
		selector: UpdateUserRequest_FieldPathSelectorCas,
		subPath:  NewUpdateUserRequestCASFieldPathBuilder().ConditionalState().Metadata().UpdateTime().FieldPath(),
	}
}

func (s UpdateUserRequestPathSelectorCasConditionalStateMetadataUpdateTime) WithValue(value *timestamp.Timestamp) *UpdateUserRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateUserRequest_FieldSubPathValue)
}

func (s UpdateUserRequestPathSelectorCasConditionalStateMetadataUpdateTime) WithArrayOfValues(values []*timestamp.Timestamp) *UpdateUserRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateUserRequest_FieldSubPathArrayOfValues)
}

type UpdateUserRequestPathSelectorCasConditionalStateMetadataDeleteTime struct{}

func (UpdateUserRequestPathSelectorCasConditionalStateMetadataDeleteTime) FieldPath() *UpdateUserRequest_FieldSubPath {
	return &UpdateUserRequest_FieldSubPath{
		selector: UpdateUserRequest_FieldPathSelectorCas,
		subPath:  NewUpdateUserRequestCASFieldPathBuilder().ConditionalState().Metadata().DeleteTime().FieldPath(),
	}
}

func (s UpdateUserRequestPathSelectorCasConditionalStateMetadataDeleteTime) WithValue(value *timestamp.Timestamp) *UpdateUserRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateUserRequest_FieldSubPathValue)
}

func (s UpdateUserRequestPathSelectorCasConditionalStateMetadataDeleteTime) WithArrayOfValues(values []*timestamp.Timestamp) *UpdateUserRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateUserRequest_FieldSubPathArrayOfValues)
}

type UpdateUserRequestPathSelectorCasConditionalStateMetadataUuid struct{}

func (UpdateUserRequestPathSelectorCasConditionalStateMetadataUuid) FieldPath() *UpdateUserRequest_FieldSubPath {
	return &UpdateUserRequest_FieldSubPath{
		selector: UpdateUserRequest_FieldPathSelectorCas,
		subPath:  NewUpdateUserRequestCASFieldPathBuilder().ConditionalState().Metadata().Uuid().FieldPath(),
	}
}

func (s UpdateUserRequestPathSelectorCasConditionalStateMetadataUuid) WithValue(value string) *UpdateUserRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateUserRequest_FieldSubPathValue)
}

func (s UpdateUserRequestPathSelectorCasConditionalStateMetadataUuid) WithArrayOfValues(values []string) *UpdateUserRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateUserRequest_FieldSubPathArrayOfValues)
}

type UpdateUserRequestPathSelectorCasConditionalStateMetadataTags struct{}

func (UpdateUserRequestPathSelectorCasConditionalStateMetadataTags) FieldPath() *UpdateUserRequest_FieldSubPath {
	return &UpdateUserRequest_FieldSubPath{
		selector: UpdateUserRequest_FieldPathSelectorCas,
		subPath:  NewUpdateUserRequestCASFieldPathBuilder().ConditionalState().Metadata().Tags().FieldPath(),
	}
}

func (s UpdateUserRequestPathSelectorCasConditionalStateMetadataTags) WithValue(value []string) *UpdateUserRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateUserRequest_FieldSubPathValue)
}

func (s UpdateUserRequestPathSelectorCasConditionalStateMetadataTags) WithArrayOfValues(values [][]string) *UpdateUserRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateUserRequest_FieldSubPathArrayOfValues)
}

func (s UpdateUserRequestPathSelectorCasConditionalStateMetadataTags) WithItemValue(value string) *UpdateUserRequest_FieldSubPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*UpdateUserRequest_FieldSubPathArrayItemValue)
}

type UpdateUserRequestPathSelectorCasConditionalStateMetadataLabels struct{}

func (UpdateUserRequestPathSelectorCasConditionalStateMetadataLabels) FieldPath() *UpdateUserRequest_FieldSubPath {
	return &UpdateUserRequest_FieldSubPath{
		selector: UpdateUserRequest_FieldPathSelectorCas,
		subPath:  NewUpdateUserRequestCASFieldPathBuilder().ConditionalState().Metadata().Labels().FieldPath(),
	}
}

func (s UpdateUserRequestPathSelectorCasConditionalStateMetadataLabels) WithValue(value map[string]string) *UpdateUserRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateUserRequest_FieldSubPathValue)
}

func (s UpdateUserRequestPathSelectorCasConditionalStateMetadataLabels) WithArrayOfValues(values []map[string]string) *UpdateUserRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateUserRequest_FieldSubPathArrayOfValues)
}

func (UpdateUserRequestPathSelectorCasConditionalStateMetadataLabels) WithKey(key string) UpdateUserRequestMapPathSelectorCasConditionalStateMetadataLabels {
	return UpdateUserRequestMapPathSelectorCasConditionalStateMetadataLabels{key: key}
}

type UpdateUserRequestMapPathSelectorCasConditionalStateMetadataLabels struct {
	key string
}

func (s UpdateUserRequestMapPathSelectorCasConditionalStateMetadataLabels) FieldPath() *UpdateUserRequest_FieldSubPath {
	return &UpdateUserRequest_FieldSubPath{
		selector: UpdateUserRequest_FieldPathSelectorCas,
		subPath:  NewUpdateUserRequestCASFieldPathBuilder().ConditionalState().Metadata().Labels().WithKey(s.key).FieldPath(),
	}
}

func (s UpdateUserRequestMapPathSelectorCasConditionalStateMetadataLabels) WithValue(value string) *UpdateUserRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateUserRequest_FieldSubPathValue)
}

func (s UpdateUserRequestMapPathSelectorCasConditionalStateMetadataLabels) WithArrayOfValues(values []string) *UpdateUserRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateUserRequest_FieldSubPathArrayOfValues)
}

type UpdateUserRequestPathSelectorCasConditionalStateMetadataAnnotations struct{}

func (UpdateUserRequestPathSelectorCasConditionalStateMetadataAnnotations) FieldPath() *UpdateUserRequest_FieldSubPath {
	return &UpdateUserRequest_FieldSubPath{
		selector: UpdateUserRequest_FieldPathSelectorCas,
		subPath:  NewUpdateUserRequestCASFieldPathBuilder().ConditionalState().Metadata().Annotations().FieldPath(),
	}
}

func (s UpdateUserRequestPathSelectorCasConditionalStateMetadataAnnotations) WithValue(value map[string]string) *UpdateUserRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateUserRequest_FieldSubPathValue)
}

func (s UpdateUserRequestPathSelectorCasConditionalStateMetadataAnnotations) WithArrayOfValues(values []map[string]string) *UpdateUserRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateUserRequest_FieldSubPathArrayOfValues)
}

func (UpdateUserRequestPathSelectorCasConditionalStateMetadataAnnotations) WithKey(key string) UpdateUserRequestMapPathSelectorCasConditionalStateMetadataAnnotations {
	return UpdateUserRequestMapPathSelectorCasConditionalStateMetadataAnnotations{key: key}
}

type UpdateUserRequestMapPathSelectorCasConditionalStateMetadataAnnotations struct {
	key string
}

func (s UpdateUserRequestMapPathSelectorCasConditionalStateMetadataAnnotations) FieldPath() *UpdateUserRequest_FieldSubPath {
	return &UpdateUserRequest_FieldSubPath{
		selector: UpdateUserRequest_FieldPathSelectorCas,
		subPath:  NewUpdateUserRequestCASFieldPathBuilder().ConditionalState().Metadata().Annotations().WithKey(s.key).FieldPath(),
	}
}

func (s UpdateUserRequestMapPathSelectorCasConditionalStateMetadataAnnotations) WithValue(value string) *UpdateUserRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateUserRequest_FieldSubPathValue)
}

func (s UpdateUserRequestMapPathSelectorCasConditionalStateMetadataAnnotations) WithArrayOfValues(values []string) *UpdateUserRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateUserRequest_FieldSubPathArrayOfValues)
}

type UpdateUserRequestPathSelectorCasConditionalStateMetadataGeneration struct{}

func (UpdateUserRequestPathSelectorCasConditionalStateMetadataGeneration) FieldPath() *UpdateUserRequest_FieldSubPath {
	return &UpdateUserRequest_FieldSubPath{
		selector: UpdateUserRequest_FieldPathSelectorCas,
		subPath:  NewUpdateUserRequestCASFieldPathBuilder().ConditionalState().Metadata().Generation().FieldPath(),
	}
}

func (s UpdateUserRequestPathSelectorCasConditionalStateMetadataGeneration) WithValue(value int64) *UpdateUserRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateUserRequest_FieldSubPathValue)
}

func (s UpdateUserRequestPathSelectorCasConditionalStateMetadataGeneration) WithArrayOfValues(values []int64) *UpdateUserRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateUserRequest_FieldSubPathArrayOfValues)
}

type UpdateUserRequestPathSelectorCasConditionalStateMetadataResourceVersion struct{}

func (UpdateUserRequestPathSelectorCasConditionalStateMetadataResourceVersion) FieldPath() *UpdateUserRequest_FieldSubPath {
	return &UpdateUserRequest_FieldSubPath{
		selector: UpdateUserRequest_FieldPathSelectorCas,
		subPath:  NewUpdateUserRequestCASFieldPathBuilder().ConditionalState().Metadata().ResourceVersion().FieldPath(),
	}
}

func (s UpdateUserRequestPathSelectorCasConditionalStateMetadataResourceVersion) WithValue(value string) *UpdateUserRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateUserRequest_FieldSubPathValue)
}

func (s UpdateUserRequestPathSelectorCasConditionalStateMetadataResourceVersion) WithArrayOfValues(values []string) *UpdateUserRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateUserRequest_FieldSubPathArrayOfValues)
}

type UpdateUserRequestPathSelectorCasConditionalStateMetadataOwnerReferences struct{}

func (UpdateUserRequestPathSelectorCasConditionalStateMetadataOwnerReferences) FieldPath() *UpdateUserRequest_FieldSubPath {
	return &UpdateUserRequest_FieldSubPath{
		selector: UpdateUserRequest_FieldPathSelectorCas,
		subPath:  NewUpdateUserRequestCASFieldPathBuilder().ConditionalState().Metadata().OwnerReferences().FieldPath(),
	}
}

func (s UpdateUserRequestPathSelectorCasConditionalStateMetadataOwnerReferences) WithValue(value []*ntt_meta.OwnerReference) *UpdateUserRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateUserRequest_FieldSubPathValue)
}

func (s UpdateUserRequestPathSelectorCasConditionalStateMetadataOwnerReferences) WithArrayOfValues(values [][]*ntt_meta.OwnerReference) *UpdateUserRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateUserRequest_FieldSubPathArrayOfValues)
}

func (s UpdateUserRequestPathSelectorCasConditionalStateMetadataOwnerReferences) WithItemValue(value *ntt_meta.OwnerReference) *UpdateUserRequest_FieldSubPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*UpdateUserRequest_FieldSubPathArrayItemValue)
}

func (UpdateUserRequestPathSelectorCasConditionalStateMetadataOwnerReferences) Kind() UpdateUserRequestPathSelectorCasConditionalStateMetadataOwnerReferencesKind {
	return UpdateUserRequestPathSelectorCasConditionalStateMetadataOwnerReferencesKind{}
}

func (UpdateUserRequestPathSelectorCasConditionalStateMetadataOwnerReferences) Version() UpdateUserRequestPathSelectorCasConditionalStateMetadataOwnerReferencesVersion {
	return UpdateUserRequestPathSelectorCasConditionalStateMetadataOwnerReferencesVersion{}
}

func (UpdateUserRequestPathSelectorCasConditionalStateMetadataOwnerReferences) Name() UpdateUserRequestPathSelectorCasConditionalStateMetadataOwnerReferencesName {
	return UpdateUserRequestPathSelectorCasConditionalStateMetadataOwnerReferencesName{}
}

func (UpdateUserRequestPathSelectorCasConditionalStateMetadataOwnerReferences) Region() UpdateUserRequestPathSelectorCasConditionalStateMetadataOwnerReferencesRegion {
	return UpdateUserRequestPathSelectorCasConditionalStateMetadataOwnerReferencesRegion{}
}

func (UpdateUserRequestPathSelectorCasConditionalStateMetadataOwnerReferences) Controller() UpdateUserRequestPathSelectorCasConditionalStateMetadataOwnerReferencesController {
	return UpdateUserRequestPathSelectorCasConditionalStateMetadataOwnerReferencesController{}
}

func (UpdateUserRequestPathSelectorCasConditionalStateMetadataOwnerReferences) BlockOwnerDeletion() UpdateUserRequestPathSelectorCasConditionalStateMetadataOwnerReferencesBlockOwnerDeletion {
	return UpdateUserRequestPathSelectorCasConditionalStateMetadataOwnerReferencesBlockOwnerDeletion{}
}

func (UpdateUserRequestPathSelectorCasConditionalStateMetadataOwnerReferences) RequiresOwnerReference() UpdateUserRequestPathSelectorCasConditionalStateMetadataOwnerReferencesRequiresOwnerReference {
	return UpdateUserRequestPathSelectorCasConditionalStateMetadataOwnerReferencesRequiresOwnerReference{}
}

type UpdateUserRequestPathSelectorCasConditionalStateMetadataOwnerReferencesKind struct{}

func (UpdateUserRequestPathSelectorCasConditionalStateMetadataOwnerReferencesKind) FieldPath() *UpdateUserRequest_FieldSubPath {
	return &UpdateUserRequest_FieldSubPath{
		selector: UpdateUserRequest_FieldPathSelectorCas,
		subPath:  NewUpdateUserRequestCASFieldPathBuilder().ConditionalState().Metadata().OwnerReferences().Kind().FieldPath(),
	}
}

func (s UpdateUserRequestPathSelectorCasConditionalStateMetadataOwnerReferencesKind) WithValue(value string) *UpdateUserRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateUserRequest_FieldSubPathValue)
}

func (s UpdateUserRequestPathSelectorCasConditionalStateMetadataOwnerReferencesKind) WithArrayOfValues(values []string) *UpdateUserRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateUserRequest_FieldSubPathArrayOfValues)
}

type UpdateUserRequestPathSelectorCasConditionalStateMetadataOwnerReferencesVersion struct{}

func (UpdateUserRequestPathSelectorCasConditionalStateMetadataOwnerReferencesVersion) FieldPath() *UpdateUserRequest_FieldSubPath {
	return &UpdateUserRequest_FieldSubPath{
		selector: UpdateUserRequest_FieldPathSelectorCas,
		subPath:  NewUpdateUserRequestCASFieldPathBuilder().ConditionalState().Metadata().OwnerReferences().Version().FieldPath(),
	}
}

func (s UpdateUserRequestPathSelectorCasConditionalStateMetadataOwnerReferencesVersion) WithValue(value string) *UpdateUserRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateUserRequest_FieldSubPathValue)
}

func (s UpdateUserRequestPathSelectorCasConditionalStateMetadataOwnerReferencesVersion) WithArrayOfValues(values []string) *UpdateUserRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateUserRequest_FieldSubPathArrayOfValues)
}

type UpdateUserRequestPathSelectorCasConditionalStateMetadataOwnerReferencesName struct{}

func (UpdateUserRequestPathSelectorCasConditionalStateMetadataOwnerReferencesName) FieldPath() *UpdateUserRequest_FieldSubPath {
	return &UpdateUserRequest_FieldSubPath{
		selector: UpdateUserRequest_FieldPathSelectorCas,
		subPath:  NewUpdateUserRequestCASFieldPathBuilder().ConditionalState().Metadata().OwnerReferences().Name().FieldPath(),
	}
}

func (s UpdateUserRequestPathSelectorCasConditionalStateMetadataOwnerReferencesName) WithValue(value string) *UpdateUserRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateUserRequest_FieldSubPathValue)
}

func (s UpdateUserRequestPathSelectorCasConditionalStateMetadataOwnerReferencesName) WithArrayOfValues(values []string) *UpdateUserRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateUserRequest_FieldSubPathArrayOfValues)
}

type UpdateUserRequestPathSelectorCasConditionalStateMetadataOwnerReferencesRegion struct{}

func (UpdateUserRequestPathSelectorCasConditionalStateMetadataOwnerReferencesRegion) FieldPath() *UpdateUserRequest_FieldSubPath {
	return &UpdateUserRequest_FieldSubPath{
		selector: UpdateUserRequest_FieldPathSelectorCas,
		subPath:  NewUpdateUserRequestCASFieldPathBuilder().ConditionalState().Metadata().OwnerReferences().Region().FieldPath(),
	}
}

func (s UpdateUserRequestPathSelectorCasConditionalStateMetadataOwnerReferencesRegion) WithValue(value string) *UpdateUserRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateUserRequest_FieldSubPathValue)
}

func (s UpdateUserRequestPathSelectorCasConditionalStateMetadataOwnerReferencesRegion) WithArrayOfValues(values []string) *UpdateUserRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateUserRequest_FieldSubPathArrayOfValues)
}

type UpdateUserRequestPathSelectorCasConditionalStateMetadataOwnerReferencesController struct{}

func (UpdateUserRequestPathSelectorCasConditionalStateMetadataOwnerReferencesController) FieldPath() *UpdateUserRequest_FieldSubPath {
	return &UpdateUserRequest_FieldSubPath{
		selector: UpdateUserRequest_FieldPathSelectorCas,
		subPath:  NewUpdateUserRequestCASFieldPathBuilder().ConditionalState().Metadata().OwnerReferences().Controller().FieldPath(),
	}
}

func (s UpdateUserRequestPathSelectorCasConditionalStateMetadataOwnerReferencesController) WithValue(value bool) *UpdateUserRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateUserRequest_FieldSubPathValue)
}

func (s UpdateUserRequestPathSelectorCasConditionalStateMetadataOwnerReferencesController) WithArrayOfValues(values []bool) *UpdateUserRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateUserRequest_FieldSubPathArrayOfValues)
}

type UpdateUserRequestPathSelectorCasConditionalStateMetadataOwnerReferencesBlockOwnerDeletion struct{}

func (UpdateUserRequestPathSelectorCasConditionalStateMetadataOwnerReferencesBlockOwnerDeletion) FieldPath() *UpdateUserRequest_FieldSubPath {
	return &UpdateUserRequest_FieldSubPath{
		selector: UpdateUserRequest_FieldPathSelectorCas,
		subPath:  NewUpdateUserRequestCASFieldPathBuilder().ConditionalState().Metadata().OwnerReferences().BlockOwnerDeletion().FieldPath(),
	}
}

func (s UpdateUserRequestPathSelectorCasConditionalStateMetadataOwnerReferencesBlockOwnerDeletion) WithValue(value bool) *UpdateUserRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateUserRequest_FieldSubPathValue)
}

func (s UpdateUserRequestPathSelectorCasConditionalStateMetadataOwnerReferencesBlockOwnerDeletion) WithArrayOfValues(values []bool) *UpdateUserRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateUserRequest_FieldSubPathArrayOfValues)
}

type UpdateUserRequestPathSelectorCasConditionalStateMetadataOwnerReferencesRequiresOwnerReference struct{}

func (UpdateUserRequestPathSelectorCasConditionalStateMetadataOwnerReferencesRequiresOwnerReference) FieldPath() *UpdateUserRequest_FieldSubPath {
	return &UpdateUserRequest_FieldSubPath{
		selector: UpdateUserRequest_FieldPathSelectorCas,
		subPath:  NewUpdateUserRequestCASFieldPathBuilder().ConditionalState().Metadata().OwnerReferences().RequiresOwnerReference().FieldPath(),
	}
}

func (s UpdateUserRequestPathSelectorCasConditionalStateMetadataOwnerReferencesRequiresOwnerReference) WithValue(value bool) *UpdateUserRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateUserRequest_FieldSubPathValue)
}

func (s UpdateUserRequestPathSelectorCasConditionalStateMetadataOwnerReferencesRequiresOwnerReference) WithArrayOfValues(values []bool) *UpdateUserRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateUserRequest_FieldSubPathArrayOfValues)
}

type UpdateUserRequestPathSelectorCasConditionalStateMetadataShards struct{}

func (UpdateUserRequestPathSelectorCasConditionalStateMetadataShards) FieldPath() *UpdateUserRequest_FieldSubPath {
	return &UpdateUserRequest_FieldSubPath{
		selector: UpdateUserRequest_FieldPathSelectorCas,
		subPath:  NewUpdateUserRequestCASFieldPathBuilder().ConditionalState().Metadata().Shards().FieldPath(),
	}
}

func (s UpdateUserRequestPathSelectorCasConditionalStateMetadataShards) WithValue(value map[string]int64) *UpdateUserRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateUserRequest_FieldSubPathValue)
}

func (s UpdateUserRequestPathSelectorCasConditionalStateMetadataShards) WithArrayOfValues(values []map[string]int64) *UpdateUserRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateUserRequest_FieldSubPathArrayOfValues)
}

func (UpdateUserRequestPathSelectorCasConditionalStateMetadataShards) WithKey(key string) UpdateUserRequestMapPathSelectorCasConditionalStateMetadataShards {
	return UpdateUserRequestMapPathSelectorCasConditionalStateMetadataShards{key: key}
}

type UpdateUserRequestMapPathSelectorCasConditionalStateMetadataShards struct {
	key string
}

func (s UpdateUserRequestMapPathSelectorCasConditionalStateMetadataShards) FieldPath() *UpdateUserRequest_FieldSubPath {
	return &UpdateUserRequest_FieldSubPath{
		selector: UpdateUserRequest_FieldPathSelectorCas,
		subPath:  NewUpdateUserRequestCASFieldPathBuilder().ConditionalState().Metadata().Shards().WithKey(s.key).FieldPath(),
	}
}

func (s UpdateUserRequestMapPathSelectorCasConditionalStateMetadataShards) WithValue(value int64) *UpdateUserRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateUserRequest_FieldSubPathValue)
}

func (s UpdateUserRequestMapPathSelectorCasConditionalStateMetadataShards) WithArrayOfValues(values []int64) *UpdateUserRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateUserRequest_FieldSubPathArrayOfValues)
}

type UpdateUserRequestPathSelectorCasConditionalStateMetadataSyncing struct{}

func (UpdateUserRequestPathSelectorCasConditionalStateMetadataSyncing) FieldPath() *UpdateUserRequest_FieldSubPath {
	return &UpdateUserRequest_FieldSubPath{
		selector: UpdateUserRequest_FieldPathSelectorCas,
		subPath:  NewUpdateUserRequestCASFieldPathBuilder().ConditionalState().Metadata().Syncing().FieldPath(),
	}
}

func (s UpdateUserRequestPathSelectorCasConditionalStateMetadataSyncing) WithValue(value *ntt_meta.SyncingMeta) *UpdateUserRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateUserRequest_FieldSubPathValue)
}

func (s UpdateUserRequestPathSelectorCasConditionalStateMetadataSyncing) WithArrayOfValues(values []*ntt_meta.SyncingMeta) *UpdateUserRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateUserRequest_FieldSubPathArrayOfValues)
}

func (UpdateUserRequestPathSelectorCasConditionalStateMetadataSyncing) OwningRegion() UpdateUserRequestPathSelectorCasConditionalStateMetadataSyncingOwningRegion {
	return UpdateUserRequestPathSelectorCasConditionalStateMetadataSyncingOwningRegion{}
}

func (UpdateUserRequestPathSelectorCasConditionalStateMetadataSyncing) Regions() UpdateUserRequestPathSelectorCasConditionalStateMetadataSyncingRegions {
	return UpdateUserRequestPathSelectorCasConditionalStateMetadataSyncingRegions{}
}

type UpdateUserRequestPathSelectorCasConditionalStateMetadataSyncingOwningRegion struct{}

func (UpdateUserRequestPathSelectorCasConditionalStateMetadataSyncingOwningRegion) FieldPath() *UpdateUserRequest_FieldSubPath {
	return &UpdateUserRequest_FieldSubPath{
		selector: UpdateUserRequest_FieldPathSelectorCas,
		subPath:  NewUpdateUserRequestCASFieldPathBuilder().ConditionalState().Metadata().Syncing().OwningRegion().FieldPath(),
	}
}

func (s UpdateUserRequestPathSelectorCasConditionalStateMetadataSyncingOwningRegion) WithValue(value string) *UpdateUserRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateUserRequest_FieldSubPathValue)
}

func (s UpdateUserRequestPathSelectorCasConditionalStateMetadataSyncingOwningRegion) WithArrayOfValues(values []string) *UpdateUserRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateUserRequest_FieldSubPathArrayOfValues)
}

type UpdateUserRequestPathSelectorCasConditionalStateMetadataSyncingRegions struct{}

func (UpdateUserRequestPathSelectorCasConditionalStateMetadataSyncingRegions) FieldPath() *UpdateUserRequest_FieldSubPath {
	return &UpdateUserRequest_FieldSubPath{
		selector: UpdateUserRequest_FieldPathSelectorCas,
		subPath:  NewUpdateUserRequestCASFieldPathBuilder().ConditionalState().Metadata().Syncing().Regions().FieldPath(),
	}
}

func (s UpdateUserRequestPathSelectorCasConditionalStateMetadataSyncingRegions) WithValue(value []string) *UpdateUserRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateUserRequest_FieldSubPathValue)
}

func (s UpdateUserRequestPathSelectorCasConditionalStateMetadataSyncingRegions) WithArrayOfValues(values [][]string) *UpdateUserRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateUserRequest_FieldSubPathArrayOfValues)
}

func (s UpdateUserRequestPathSelectorCasConditionalStateMetadataSyncingRegions) WithItemValue(value string) *UpdateUserRequest_FieldSubPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*UpdateUserRequest_FieldSubPathArrayItemValue)
}

type UpdateUserRequestPathSelectorCasConditionalStateMetadataLifecycle struct{}

func (UpdateUserRequestPathSelectorCasConditionalStateMetadataLifecycle) FieldPath() *UpdateUserRequest_FieldSubPath {
	return &UpdateUserRequest_FieldSubPath{
		selector: UpdateUserRequest_FieldPathSelectorCas,
		subPath:  NewUpdateUserRequestCASFieldPathBuilder().ConditionalState().Metadata().Lifecycle().FieldPath(),
	}
}

func (s UpdateUserRequestPathSelectorCasConditionalStateMetadataLifecycle) WithValue(value *ntt_meta.Lifecycle) *UpdateUserRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateUserRequest_FieldSubPathValue)
}

func (s UpdateUserRequestPathSelectorCasConditionalStateMetadataLifecycle) WithArrayOfValues(values []*ntt_meta.Lifecycle) *UpdateUserRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateUserRequest_FieldSubPathArrayOfValues)
}

func (UpdateUserRequestPathSelectorCasConditionalStateMetadataLifecycle) State() UpdateUserRequestPathSelectorCasConditionalStateMetadataLifecycleState {
	return UpdateUserRequestPathSelectorCasConditionalStateMetadataLifecycleState{}
}

func (UpdateUserRequestPathSelectorCasConditionalStateMetadataLifecycle) BlockDeletion() UpdateUserRequestPathSelectorCasConditionalStateMetadataLifecycleBlockDeletion {
	return UpdateUserRequestPathSelectorCasConditionalStateMetadataLifecycleBlockDeletion{}
}

type UpdateUserRequestPathSelectorCasConditionalStateMetadataLifecycleState struct{}

func (UpdateUserRequestPathSelectorCasConditionalStateMetadataLifecycleState) FieldPath() *UpdateUserRequest_FieldSubPath {
	return &UpdateUserRequest_FieldSubPath{
		selector: UpdateUserRequest_FieldPathSelectorCas,
		subPath:  NewUpdateUserRequestCASFieldPathBuilder().ConditionalState().Metadata().Lifecycle().State().FieldPath(),
	}
}

func (s UpdateUserRequestPathSelectorCasConditionalStateMetadataLifecycleState) WithValue(value ntt_meta.Lifecycle_State) *UpdateUserRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateUserRequest_FieldSubPathValue)
}

func (s UpdateUserRequestPathSelectorCasConditionalStateMetadataLifecycleState) WithArrayOfValues(values []ntt_meta.Lifecycle_State) *UpdateUserRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateUserRequest_FieldSubPathArrayOfValues)
}

type UpdateUserRequestPathSelectorCasConditionalStateMetadataLifecycleBlockDeletion struct{}

func (UpdateUserRequestPathSelectorCasConditionalStateMetadataLifecycleBlockDeletion) FieldPath() *UpdateUserRequest_FieldSubPath {
	return &UpdateUserRequest_FieldSubPath{
		selector: UpdateUserRequest_FieldPathSelectorCas,
		subPath:  NewUpdateUserRequestCASFieldPathBuilder().ConditionalState().Metadata().Lifecycle().BlockDeletion().FieldPath(),
	}
}

func (s UpdateUserRequestPathSelectorCasConditionalStateMetadataLifecycleBlockDeletion) WithValue(value bool) *UpdateUserRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateUserRequest_FieldSubPathValue)
}

func (s UpdateUserRequestPathSelectorCasConditionalStateMetadataLifecycleBlockDeletion) WithArrayOfValues(values []bool) *UpdateUserRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateUserRequest_FieldSubPathArrayOfValues)
}

type UpdateUserRequestPathSelectorCasConditionalStateEmail struct{}

func (UpdateUserRequestPathSelectorCasConditionalStateEmail) FieldPath() *UpdateUserRequest_FieldSubPath {
	return &UpdateUserRequest_FieldSubPath{
		selector: UpdateUserRequest_FieldPathSelectorCas,
		subPath:  NewUpdateUserRequestCASFieldPathBuilder().ConditionalState().Email().FieldPath(),
	}
}

func (s UpdateUserRequestPathSelectorCasConditionalStateEmail) WithValue(value string) *UpdateUserRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateUserRequest_FieldSubPathValue)
}

func (s UpdateUserRequestPathSelectorCasConditionalStateEmail) WithArrayOfValues(values []string) *UpdateUserRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateUserRequest_FieldSubPathArrayOfValues)
}

type UpdateUserRequestPathSelectorCasConditionalStateEmailVerified struct{}

func (UpdateUserRequestPathSelectorCasConditionalStateEmailVerified) FieldPath() *UpdateUserRequest_FieldSubPath {
	return &UpdateUserRequest_FieldSubPath{
		selector: UpdateUserRequest_FieldPathSelectorCas,
		subPath:  NewUpdateUserRequestCASFieldPathBuilder().ConditionalState().EmailVerified().FieldPath(),
	}
}

func (s UpdateUserRequestPathSelectorCasConditionalStateEmailVerified) WithValue(value bool) *UpdateUserRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateUserRequest_FieldSubPathValue)
}

func (s UpdateUserRequestPathSelectorCasConditionalStateEmailVerified) WithArrayOfValues(values []bool) *UpdateUserRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateUserRequest_FieldSubPathArrayOfValues)
}

type UpdateUserRequestPathSelectorCasConditionalStateAuthInfo struct{}

func (UpdateUserRequestPathSelectorCasConditionalStateAuthInfo) FieldPath() *UpdateUserRequest_FieldSubPath {
	return &UpdateUserRequest_FieldSubPath{
		selector: UpdateUserRequest_FieldPathSelectorCas,
		subPath:  NewUpdateUserRequestCASFieldPathBuilder().ConditionalState().AuthInfo().FieldPath(),
	}
}

func (s UpdateUserRequestPathSelectorCasConditionalStateAuthInfo) WithValue(value *user.User_AuthInfo) *UpdateUserRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateUserRequest_FieldSubPathValue)
}

func (s UpdateUserRequestPathSelectorCasConditionalStateAuthInfo) WithArrayOfValues(values []*user.User_AuthInfo) *UpdateUserRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateUserRequest_FieldSubPathArrayOfValues)
}

func (UpdateUserRequestPathSelectorCasConditionalStateAuthInfo) Provider() UpdateUserRequestPathSelectorCasConditionalStateAuthInfoProvider {
	return UpdateUserRequestPathSelectorCasConditionalStateAuthInfoProvider{}
}

func (UpdateUserRequestPathSelectorCasConditionalStateAuthInfo) Id() UpdateUserRequestPathSelectorCasConditionalStateAuthInfoId {
	return UpdateUserRequestPathSelectorCasConditionalStateAuthInfoId{}
}

type UpdateUserRequestPathSelectorCasConditionalStateAuthInfoProvider struct{}

func (UpdateUserRequestPathSelectorCasConditionalStateAuthInfoProvider) FieldPath() *UpdateUserRequest_FieldSubPath {
	return &UpdateUserRequest_FieldSubPath{
		selector: UpdateUserRequest_FieldPathSelectorCas,
		subPath:  NewUpdateUserRequestCASFieldPathBuilder().ConditionalState().AuthInfo().Provider().FieldPath(),
	}
}

func (s UpdateUserRequestPathSelectorCasConditionalStateAuthInfoProvider) WithValue(value string) *UpdateUserRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateUserRequest_FieldSubPathValue)
}

func (s UpdateUserRequestPathSelectorCasConditionalStateAuthInfoProvider) WithArrayOfValues(values []string) *UpdateUserRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateUserRequest_FieldSubPathArrayOfValues)
}

type UpdateUserRequestPathSelectorCasConditionalStateAuthInfoId struct{}

func (UpdateUserRequestPathSelectorCasConditionalStateAuthInfoId) FieldPath() *UpdateUserRequest_FieldSubPath {
	return &UpdateUserRequest_FieldSubPath{
		selector: UpdateUserRequest_FieldPathSelectorCas,
		subPath:  NewUpdateUserRequestCASFieldPathBuilder().ConditionalState().AuthInfo().Id().FieldPath(),
	}
}

func (s UpdateUserRequestPathSelectorCasConditionalStateAuthInfoId) WithValue(value string) *UpdateUserRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateUserRequest_FieldSubPathValue)
}

func (s UpdateUserRequestPathSelectorCasConditionalStateAuthInfoId) WithArrayOfValues(values []string) *UpdateUserRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateUserRequest_FieldSubPathArrayOfValues)
}

type UpdateUserRequestPathSelectorCasConditionalStateSettings struct{}

func (UpdateUserRequestPathSelectorCasConditionalStateSettings) FieldPath() *UpdateUserRequest_FieldSubPath {
	return &UpdateUserRequest_FieldSubPath{
		selector: UpdateUserRequest_FieldPathSelectorCas,
		subPath:  NewUpdateUserRequestCASFieldPathBuilder().ConditionalState().Settings().FieldPath(),
	}
}

func (s UpdateUserRequestPathSelectorCasConditionalStateSettings) WithValue(value map[string]string) *UpdateUserRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateUserRequest_FieldSubPathValue)
}

func (s UpdateUserRequestPathSelectorCasConditionalStateSettings) WithArrayOfValues(values []map[string]string) *UpdateUserRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateUserRequest_FieldSubPathArrayOfValues)
}

func (UpdateUserRequestPathSelectorCasConditionalStateSettings) WithKey(key string) UpdateUserRequestMapPathSelectorCasConditionalStateSettings {
	return UpdateUserRequestMapPathSelectorCasConditionalStateSettings{key: key}
}

type UpdateUserRequestMapPathSelectorCasConditionalStateSettings struct {
	key string
}

func (s UpdateUserRequestMapPathSelectorCasConditionalStateSettings) FieldPath() *UpdateUserRequest_FieldSubPath {
	return &UpdateUserRequest_FieldSubPath{
		selector: UpdateUserRequest_FieldPathSelectorCas,
		subPath:  NewUpdateUserRequestCASFieldPathBuilder().ConditionalState().Settings().WithKey(s.key).FieldPath(),
	}
}

func (s UpdateUserRequestMapPathSelectorCasConditionalStateSettings) WithValue(value string) *UpdateUserRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateUserRequest_FieldSubPathValue)
}

func (s UpdateUserRequestMapPathSelectorCasConditionalStateSettings) WithArrayOfValues(values []string) *UpdateUserRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateUserRequest_FieldSubPathArrayOfValues)
}

type UpdateUserRequestPathSelectorCasConditionalStateRefreshedTime struct{}

func (UpdateUserRequestPathSelectorCasConditionalStateRefreshedTime) FieldPath() *UpdateUserRequest_FieldSubPath {
	return &UpdateUserRequest_FieldSubPath{
		selector: UpdateUserRequest_FieldPathSelectorCas,
		subPath:  NewUpdateUserRequestCASFieldPathBuilder().ConditionalState().RefreshedTime().FieldPath(),
	}
}

func (s UpdateUserRequestPathSelectorCasConditionalStateRefreshedTime) WithValue(value *timestamp.Timestamp) *UpdateUserRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateUserRequest_FieldSubPathValue)
}

func (s UpdateUserRequestPathSelectorCasConditionalStateRefreshedTime) WithArrayOfValues(values []*timestamp.Timestamp) *UpdateUserRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateUserRequest_FieldSubPathArrayOfValues)
}

type UpdateUserRequestPathSelectorCasFieldMask struct{}

func (UpdateUserRequestPathSelectorCasFieldMask) FieldPath() *UpdateUserRequest_FieldSubPath {
	return &UpdateUserRequest_FieldSubPath{
		selector: UpdateUserRequest_FieldPathSelectorCas,
		subPath:  NewUpdateUserRequestCASFieldPathBuilder().FieldMask().FieldPath(),
	}
}

func (s UpdateUserRequestPathSelectorCasFieldMask) WithValue(value *user.User_FieldMask) *UpdateUserRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateUserRequest_FieldSubPathValue)
}

func (s UpdateUserRequestPathSelectorCasFieldMask) WithArrayOfValues(values []*user.User_FieldMask) *UpdateUserRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateUserRequest_FieldSubPathArrayOfValues)
}

type UpdateUserRequestPathSelectorAllowMissing struct{}

func (UpdateUserRequestPathSelectorAllowMissing) FieldPath() *UpdateUserRequest_FieldTerminalPath {
	return &UpdateUserRequest_FieldTerminalPath{selector: UpdateUserRequest_FieldPathSelectorAllowMissing}
}

func (s UpdateUserRequestPathSelectorAllowMissing) WithValue(value bool) *UpdateUserRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateUserRequest_FieldTerminalPathValue)
}

func (s UpdateUserRequestPathSelectorAllowMissing) WithArrayOfValues(values []bool) *UpdateUserRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateUserRequest_FieldTerminalPathArrayOfValues)
}

type UpdateUserRequestCASFieldPathBuilder struct{}

func NewUpdateUserRequestCASFieldPathBuilder() UpdateUserRequestCASFieldPathBuilder {
	return UpdateUserRequestCASFieldPathBuilder{}
}
func (UpdateUserRequestCASFieldPathBuilder) ConditionalState() UpdateUserRequest_CASPathSelectorConditionalState {
	return UpdateUserRequest_CASPathSelectorConditionalState{}
}
func (UpdateUserRequestCASFieldPathBuilder) FieldMask() UpdateUserRequest_CASPathSelectorFieldMask {
	return UpdateUserRequest_CASPathSelectorFieldMask{}
}

type UpdateUserRequest_CASPathSelectorConditionalState struct{}

func (UpdateUserRequest_CASPathSelectorConditionalState) FieldPath() *UpdateUserRequestCAS_FieldTerminalPath {
	return &UpdateUserRequestCAS_FieldTerminalPath{selector: UpdateUserRequestCAS_FieldPathSelectorConditionalState}
}

func (s UpdateUserRequest_CASPathSelectorConditionalState) WithValue(value *user.User) *UpdateUserRequestCAS_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateUserRequestCAS_FieldTerminalPathValue)
}

func (s UpdateUserRequest_CASPathSelectorConditionalState) WithArrayOfValues(values []*user.User) *UpdateUserRequestCAS_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateUserRequestCAS_FieldTerminalPathArrayOfValues)
}

func (UpdateUserRequest_CASPathSelectorConditionalState) WithSubPath(subPath user.User_FieldPath) *UpdateUserRequestCAS_FieldSubPath {
	return &UpdateUserRequestCAS_FieldSubPath{selector: UpdateUserRequestCAS_FieldPathSelectorConditionalState, subPath: subPath}
}

func (s UpdateUserRequest_CASPathSelectorConditionalState) WithSubValue(subPathValue user.User_FieldPathValue) *UpdateUserRequestCAS_FieldSubPathValue {
	return &UpdateUserRequestCAS_FieldSubPathValue{UpdateUserRequestCAS_FieldPath: s.WithSubPath(subPathValue), subPathValue: subPathValue}
}

func (s UpdateUserRequest_CASPathSelectorConditionalState) WithSubArrayOfValues(subPathArrayOfValues user.User_FieldPathArrayOfValues) *UpdateUserRequestCAS_FieldSubPathArrayOfValues {
	return &UpdateUserRequestCAS_FieldSubPathArrayOfValues{UpdateUserRequestCAS_FieldPath: s.WithSubPath(subPathArrayOfValues), subPathArrayOfValues: subPathArrayOfValues}
}

func (s UpdateUserRequest_CASPathSelectorConditionalState) WithSubArrayItemValue(subPathArrayItemValue user.User_FieldPathArrayItemValue) *UpdateUserRequestCAS_FieldSubPathArrayItemValue {
	return &UpdateUserRequestCAS_FieldSubPathArrayItemValue{UpdateUserRequestCAS_FieldPath: s.WithSubPath(subPathArrayItemValue), subPathItemValue: subPathArrayItemValue}
}

func (UpdateUserRequest_CASPathSelectorConditionalState) Name() UpdateUserRequest_CASPathSelectorConditionalStateName {
	return UpdateUserRequest_CASPathSelectorConditionalStateName{}
}

func (UpdateUserRequest_CASPathSelectorConditionalState) FullName() UpdateUserRequest_CASPathSelectorConditionalStateFullName {
	return UpdateUserRequest_CASPathSelectorConditionalStateFullName{}
}

func (UpdateUserRequest_CASPathSelectorConditionalState) Metadata() UpdateUserRequest_CASPathSelectorConditionalStateMetadata {
	return UpdateUserRequest_CASPathSelectorConditionalStateMetadata{}
}

func (UpdateUserRequest_CASPathSelectorConditionalState) Email() UpdateUserRequest_CASPathSelectorConditionalStateEmail {
	return UpdateUserRequest_CASPathSelectorConditionalStateEmail{}
}

func (UpdateUserRequest_CASPathSelectorConditionalState) EmailVerified() UpdateUserRequest_CASPathSelectorConditionalStateEmailVerified {
	return UpdateUserRequest_CASPathSelectorConditionalStateEmailVerified{}
}

func (UpdateUserRequest_CASPathSelectorConditionalState) AuthInfo() UpdateUserRequest_CASPathSelectorConditionalStateAuthInfo {
	return UpdateUserRequest_CASPathSelectorConditionalStateAuthInfo{}
}

func (UpdateUserRequest_CASPathSelectorConditionalState) Settings() UpdateUserRequest_CASPathSelectorConditionalStateSettings {
	return UpdateUserRequest_CASPathSelectorConditionalStateSettings{}
}

func (UpdateUserRequest_CASPathSelectorConditionalState) RefreshedTime() UpdateUserRequest_CASPathSelectorConditionalStateRefreshedTime {
	return UpdateUserRequest_CASPathSelectorConditionalStateRefreshedTime{}
}

type UpdateUserRequest_CASPathSelectorConditionalStateName struct{}

func (UpdateUserRequest_CASPathSelectorConditionalStateName) FieldPath() *UpdateUserRequestCAS_FieldSubPath {
	return &UpdateUserRequestCAS_FieldSubPath{
		selector: UpdateUserRequestCAS_FieldPathSelectorConditionalState,
		subPath:  user.NewUserFieldPathBuilder().Name().FieldPath(),
	}
}

func (s UpdateUserRequest_CASPathSelectorConditionalStateName) WithValue(value *user.Name) *UpdateUserRequestCAS_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateUserRequestCAS_FieldSubPathValue)
}

func (s UpdateUserRequest_CASPathSelectorConditionalStateName) WithArrayOfValues(values []*user.Name) *UpdateUserRequestCAS_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateUserRequestCAS_FieldSubPathArrayOfValues)
}

type UpdateUserRequest_CASPathSelectorConditionalStateFullName struct{}

func (UpdateUserRequest_CASPathSelectorConditionalStateFullName) FieldPath() *UpdateUserRequestCAS_FieldSubPath {
	return &UpdateUserRequestCAS_FieldSubPath{
		selector: UpdateUserRequestCAS_FieldPathSelectorConditionalState,
		subPath:  user.NewUserFieldPathBuilder().FullName().FieldPath(),
	}
}

func (s UpdateUserRequest_CASPathSelectorConditionalStateFullName) WithValue(value string) *UpdateUserRequestCAS_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateUserRequestCAS_FieldSubPathValue)
}

func (s UpdateUserRequest_CASPathSelectorConditionalStateFullName) WithArrayOfValues(values []string) *UpdateUserRequestCAS_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateUserRequestCAS_FieldSubPathArrayOfValues)
}

type UpdateUserRequest_CASPathSelectorConditionalStateMetadata struct{}

func (UpdateUserRequest_CASPathSelectorConditionalStateMetadata) FieldPath() *UpdateUserRequestCAS_FieldSubPath {
	return &UpdateUserRequestCAS_FieldSubPath{
		selector: UpdateUserRequestCAS_FieldPathSelectorConditionalState,
		subPath:  user.NewUserFieldPathBuilder().Metadata().FieldPath(),
	}
}

func (s UpdateUserRequest_CASPathSelectorConditionalStateMetadata) WithValue(value *ntt_meta.Meta) *UpdateUserRequestCAS_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateUserRequestCAS_FieldSubPathValue)
}

func (s UpdateUserRequest_CASPathSelectorConditionalStateMetadata) WithArrayOfValues(values []*ntt_meta.Meta) *UpdateUserRequestCAS_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateUserRequestCAS_FieldSubPathArrayOfValues)
}

func (UpdateUserRequest_CASPathSelectorConditionalStateMetadata) CreateTime() UpdateUserRequest_CASPathSelectorConditionalStateMetadataCreateTime {
	return UpdateUserRequest_CASPathSelectorConditionalStateMetadataCreateTime{}
}

func (UpdateUserRequest_CASPathSelectorConditionalStateMetadata) UpdateTime() UpdateUserRequest_CASPathSelectorConditionalStateMetadataUpdateTime {
	return UpdateUserRequest_CASPathSelectorConditionalStateMetadataUpdateTime{}
}

func (UpdateUserRequest_CASPathSelectorConditionalStateMetadata) DeleteTime() UpdateUserRequest_CASPathSelectorConditionalStateMetadataDeleteTime {
	return UpdateUserRequest_CASPathSelectorConditionalStateMetadataDeleteTime{}
}

func (UpdateUserRequest_CASPathSelectorConditionalStateMetadata) Uuid() UpdateUserRequest_CASPathSelectorConditionalStateMetadataUuid {
	return UpdateUserRequest_CASPathSelectorConditionalStateMetadataUuid{}
}

func (UpdateUserRequest_CASPathSelectorConditionalStateMetadata) Tags() UpdateUserRequest_CASPathSelectorConditionalStateMetadataTags {
	return UpdateUserRequest_CASPathSelectorConditionalStateMetadataTags{}
}

func (UpdateUserRequest_CASPathSelectorConditionalStateMetadata) Labels() UpdateUserRequest_CASPathSelectorConditionalStateMetadataLabels {
	return UpdateUserRequest_CASPathSelectorConditionalStateMetadataLabels{}
}

func (UpdateUserRequest_CASPathSelectorConditionalStateMetadata) Annotations() UpdateUserRequest_CASPathSelectorConditionalStateMetadataAnnotations {
	return UpdateUserRequest_CASPathSelectorConditionalStateMetadataAnnotations{}
}

func (UpdateUserRequest_CASPathSelectorConditionalStateMetadata) Generation() UpdateUserRequest_CASPathSelectorConditionalStateMetadataGeneration {
	return UpdateUserRequest_CASPathSelectorConditionalStateMetadataGeneration{}
}

func (UpdateUserRequest_CASPathSelectorConditionalStateMetadata) ResourceVersion() UpdateUserRequest_CASPathSelectorConditionalStateMetadataResourceVersion {
	return UpdateUserRequest_CASPathSelectorConditionalStateMetadataResourceVersion{}
}

func (UpdateUserRequest_CASPathSelectorConditionalStateMetadata) OwnerReferences() UpdateUserRequest_CASPathSelectorConditionalStateMetadataOwnerReferences {
	return UpdateUserRequest_CASPathSelectorConditionalStateMetadataOwnerReferences{}
}

func (UpdateUserRequest_CASPathSelectorConditionalStateMetadata) Shards() UpdateUserRequest_CASPathSelectorConditionalStateMetadataShards {
	return UpdateUserRequest_CASPathSelectorConditionalStateMetadataShards{}
}

func (UpdateUserRequest_CASPathSelectorConditionalStateMetadata) Syncing() UpdateUserRequest_CASPathSelectorConditionalStateMetadataSyncing {
	return UpdateUserRequest_CASPathSelectorConditionalStateMetadataSyncing{}
}

func (UpdateUserRequest_CASPathSelectorConditionalStateMetadata) Lifecycle() UpdateUserRequest_CASPathSelectorConditionalStateMetadataLifecycle {
	return UpdateUserRequest_CASPathSelectorConditionalStateMetadataLifecycle{}
}

type UpdateUserRequest_CASPathSelectorConditionalStateMetadataCreateTime struct{}

func (UpdateUserRequest_CASPathSelectorConditionalStateMetadataCreateTime) FieldPath() *UpdateUserRequestCAS_FieldSubPath {
	return &UpdateUserRequestCAS_FieldSubPath{
		selector: UpdateUserRequestCAS_FieldPathSelectorConditionalState,
		subPath:  user.NewUserFieldPathBuilder().Metadata().CreateTime().FieldPath(),
	}
}

func (s UpdateUserRequest_CASPathSelectorConditionalStateMetadataCreateTime) WithValue(value *timestamp.Timestamp) *UpdateUserRequestCAS_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateUserRequestCAS_FieldSubPathValue)
}

func (s UpdateUserRequest_CASPathSelectorConditionalStateMetadataCreateTime) WithArrayOfValues(values []*timestamp.Timestamp) *UpdateUserRequestCAS_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateUserRequestCAS_FieldSubPathArrayOfValues)
}

type UpdateUserRequest_CASPathSelectorConditionalStateMetadataUpdateTime struct{}

func (UpdateUserRequest_CASPathSelectorConditionalStateMetadataUpdateTime) FieldPath() *UpdateUserRequestCAS_FieldSubPath {
	return &UpdateUserRequestCAS_FieldSubPath{
		selector: UpdateUserRequestCAS_FieldPathSelectorConditionalState,
		subPath:  user.NewUserFieldPathBuilder().Metadata().UpdateTime().FieldPath(),
	}
}

func (s UpdateUserRequest_CASPathSelectorConditionalStateMetadataUpdateTime) WithValue(value *timestamp.Timestamp) *UpdateUserRequestCAS_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateUserRequestCAS_FieldSubPathValue)
}

func (s UpdateUserRequest_CASPathSelectorConditionalStateMetadataUpdateTime) WithArrayOfValues(values []*timestamp.Timestamp) *UpdateUserRequestCAS_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateUserRequestCAS_FieldSubPathArrayOfValues)
}

type UpdateUserRequest_CASPathSelectorConditionalStateMetadataDeleteTime struct{}

func (UpdateUserRequest_CASPathSelectorConditionalStateMetadataDeleteTime) FieldPath() *UpdateUserRequestCAS_FieldSubPath {
	return &UpdateUserRequestCAS_FieldSubPath{
		selector: UpdateUserRequestCAS_FieldPathSelectorConditionalState,
		subPath:  user.NewUserFieldPathBuilder().Metadata().DeleteTime().FieldPath(),
	}
}

func (s UpdateUserRequest_CASPathSelectorConditionalStateMetadataDeleteTime) WithValue(value *timestamp.Timestamp) *UpdateUserRequestCAS_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateUserRequestCAS_FieldSubPathValue)
}

func (s UpdateUserRequest_CASPathSelectorConditionalStateMetadataDeleteTime) WithArrayOfValues(values []*timestamp.Timestamp) *UpdateUserRequestCAS_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateUserRequestCAS_FieldSubPathArrayOfValues)
}

type UpdateUserRequest_CASPathSelectorConditionalStateMetadataUuid struct{}

func (UpdateUserRequest_CASPathSelectorConditionalStateMetadataUuid) FieldPath() *UpdateUserRequestCAS_FieldSubPath {
	return &UpdateUserRequestCAS_FieldSubPath{
		selector: UpdateUserRequestCAS_FieldPathSelectorConditionalState,
		subPath:  user.NewUserFieldPathBuilder().Metadata().Uuid().FieldPath(),
	}
}

func (s UpdateUserRequest_CASPathSelectorConditionalStateMetadataUuid) WithValue(value string) *UpdateUserRequestCAS_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateUserRequestCAS_FieldSubPathValue)
}

func (s UpdateUserRequest_CASPathSelectorConditionalStateMetadataUuid) WithArrayOfValues(values []string) *UpdateUserRequestCAS_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateUserRequestCAS_FieldSubPathArrayOfValues)
}

type UpdateUserRequest_CASPathSelectorConditionalStateMetadataTags struct{}

func (UpdateUserRequest_CASPathSelectorConditionalStateMetadataTags) FieldPath() *UpdateUserRequestCAS_FieldSubPath {
	return &UpdateUserRequestCAS_FieldSubPath{
		selector: UpdateUserRequestCAS_FieldPathSelectorConditionalState,
		subPath:  user.NewUserFieldPathBuilder().Metadata().Tags().FieldPath(),
	}
}

func (s UpdateUserRequest_CASPathSelectorConditionalStateMetadataTags) WithValue(value []string) *UpdateUserRequestCAS_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateUserRequestCAS_FieldSubPathValue)
}

func (s UpdateUserRequest_CASPathSelectorConditionalStateMetadataTags) WithArrayOfValues(values [][]string) *UpdateUserRequestCAS_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateUserRequestCAS_FieldSubPathArrayOfValues)
}

func (s UpdateUserRequest_CASPathSelectorConditionalStateMetadataTags) WithItemValue(value string) *UpdateUserRequestCAS_FieldSubPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*UpdateUserRequestCAS_FieldSubPathArrayItemValue)
}

type UpdateUserRequest_CASPathSelectorConditionalStateMetadataLabels struct{}

func (UpdateUserRequest_CASPathSelectorConditionalStateMetadataLabels) FieldPath() *UpdateUserRequestCAS_FieldSubPath {
	return &UpdateUserRequestCAS_FieldSubPath{
		selector: UpdateUserRequestCAS_FieldPathSelectorConditionalState,
		subPath:  user.NewUserFieldPathBuilder().Metadata().Labels().FieldPath(),
	}
}

func (s UpdateUserRequest_CASPathSelectorConditionalStateMetadataLabels) WithValue(value map[string]string) *UpdateUserRequestCAS_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateUserRequestCAS_FieldSubPathValue)
}

func (s UpdateUserRequest_CASPathSelectorConditionalStateMetadataLabels) WithArrayOfValues(values []map[string]string) *UpdateUserRequestCAS_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateUserRequestCAS_FieldSubPathArrayOfValues)
}

func (UpdateUserRequest_CASPathSelectorConditionalStateMetadataLabels) WithKey(key string) UpdateUserRequest_CASMapPathSelectorConditionalStateMetadataLabels {
	return UpdateUserRequest_CASMapPathSelectorConditionalStateMetadataLabels{key: key}
}

type UpdateUserRequest_CASMapPathSelectorConditionalStateMetadataLabels struct {
	key string
}

func (s UpdateUserRequest_CASMapPathSelectorConditionalStateMetadataLabels) FieldPath() *UpdateUserRequestCAS_FieldSubPath {
	return &UpdateUserRequestCAS_FieldSubPath{
		selector: UpdateUserRequestCAS_FieldPathSelectorConditionalState,
		subPath:  user.NewUserFieldPathBuilder().Metadata().Labels().WithKey(s.key).FieldPath(),
	}
}

func (s UpdateUserRequest_CASMapPathSelectorConditionalStateMetadataLabels) WithValue(value string) *UpdateUserRequestCAS_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateUserRequestCAS_FieldSubPathValue)
}

func (s UpdateUserRequest_CASMapPathSelectorConditionalStateMetadataLabels) WithArrayOfValues(values []string) *UpdateUserRequestCAS_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateUserRequestCAS_FieldSubPathArrayOfValues)
}

type UpdateUserRequest_CASPathSelectorConditionalStateMetadataAnnotations struct{}

func (UpdateUserRequest_CASPathSelectorConditionalStateMetadataAnnotations) FieldPath() *UpdateUserRequestCAS_FieldSubPath {
	return &UpdateUserRequestCAS_FieldSubPath{
		selector: UpdateUserRequestCAS_FieldPathSelectorConditionalState,
		subPath:  user.NewUserFieldPathBuilder().Metadata().Annotations().FieldPath(),
	}
}

func (s UpdateUserRequest_CASPathSelectorConditionalStateMetadataAnnotations) WithValue(value map[string]string) *UpdateUserRequestCAS_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateUserRequestCAS_FieldSubPathValue)
}

func (s UpdateUserRequest_CASPathSelectorConditionalStateMetadataAnnotations) WithArrayOfValues(values []map[string]string) *UpdateUserRequestCAS_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateUserRequestCAS_FieldSubPathArrayOfValues)
}

func (UpdateUserRequest_CASPathSelectorConditionalStateMetadataAnnotations) WithKey(key string) UpdateUserRequest_CASMapPathSelectorConditionalStateMetadataAnnotations {
	return UpdateUserRequest_CASMapPathSelectorConditionalStateMetadataAnnotations{key: key}
}

type UpdateUserRequest_CASMapPathSelectorConditionalStateMetadataAnnotations struct {
	key string
}

func (s UpdateUserRequest_CASMapPathSelectorConditionalStateMetadataAnnotations) FieldPath() *UpdateUserRequestCAS_FieldSubPath {
	return &UpdateUserRequestCAS_FieldSubPath{
		selector: UpdateUserRequestCAS_FieldPathSelectorConditionalState,
		subPath:  user.NewUserFieldPathBuilder().Metadata().Annotations().WithKey(s.key).FieldPath(),
	}
}

func (s UpdateUserRequest_CASMapPathSelectorConditionalStateMetadataAnnotations) WithValue(value string) *UpdateUserRequestCAS_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateUserRequestCAS_FieldSubPathValue)
}

func (s UpdateUserRequest_CASMapPathSelectorConditionalStateMetadataAnnotations) WithArrayOfValues(values []string) *UpdateUserRequestCAS_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateUserRequestCAS_FieldSubPathArrayOfValues)
}

type UpdateUserRequest_CASPathSelectorConditionalStateMetadataGeneration struct{}

func (UpdateUserRequest_CASPathSelectorConditionalStateMetadataGeneration) FieldPath() *UpdateUserRequestCAS_FieldSubPath {
	return &UpdateUserRequestCAS_FieldSubPath{
		selector: UpdateUserRequestCAS_FieldPathSelectorConditionalState,
		subPath:  user.NewUserFieldPathBuilder().Metadata().Generation().FieldPath(),
	}
}

func (s UpdateUserRequest_CASPathSelectorConditionalStateMetadataGeneration) WithValue(value int64) *UpdateUserRequestCAS_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateUserRequestCAS_FieldSubPathValue)
}

func (s UpdateUserRequest_CASPathSelectorConditionalStateMetadataGeneration) WithArrayOfValues(values []int64) *UpdateUserRequestCAS_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateUserRequestCAS_FieldSubPathArrayOfValues)
}

type UpdateUserRequest_CASPathSelectorConditionalStateMetadataResourceVersion struct{}

func (UpdateUserRequest_CASPathSelectorConditionalStateMetadataResourceVersion) FieldPath() *UpdateUserRequestCAS_FieldSubPath {
	return &UpdateUserRequestCAS_FieldSubPath{
		selector: UpdateUserRequestCAS_FieldPathSelectorConditionalState,
		subPath:  user.NewUserFieldPathBuilder().Metadata().ResourceVersion().FieldPath(),
	}
}

func (s UpdateUserRequest_CASPathSelectorConditionalStateMetadataResourceVersion) WithValue(value string) *UpdateUserRequestCAS_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateUserRequestCAS_FieldSubPathValue)
}

func (s UpdateUserRequest_CASPathSelectorConditionalStateMetadataResourceVersion) WithArrayOfValues(values []string) *UpdateUserRequestCAS_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateUserRequestCAS_FieldSubPathArrayOfValues)
}

type UpdateUserRequest_CASPathSelectorConditionalStateMetadataOwnerReferences struct{}

func (UpdateUserRequest_CASPathSelectorConditionalStateMetadataOwnerReferences) FieldPath() *UpdateUserRequestCAS_FieldSubPath {
	return &UpdateUserRequestCAS_FieldSubPath{
		selector: UpdateUserRequestCAS_FieldPathSelectorConditionalState,
		subPath:  user.NewUserFieldPathBuilder().Metadata().OwnerReferences().FieldPath(),
	}
}

func (s UpdateUserRequest_CASPathSelectorConditionalStateMetadataOwnerReferences) WithValue(value []*ntt_meta.OwnerReference) *UpdateUserRequestCAS_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateUserRequestCAS_FieldSubPathValue)
}

func (s UpdateUserRequest_CASPathSelectorConditionalStateMetadataOwnerReferences) WithArrayOfValues(values [][]*ntt_meta.OwnerReference) *UpdateUserRequestCAS_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateUserRequestCAS_FieldSubPathArrayOfValues)
}

func (s UpdateUserRequest_CASPathSelectorConditionalStateMetadataOwnerReferences) WithItemValue(value *ntt_meta.OwnerReference) *UpdateUserRequestCAS_FieldSubPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*UpdateUserRequestCAS_FieldSubPathArrayItemValue)
}

func (UpdateUserRequest_CASPathSelectorConditionalStateMetadataOwnerReferences) Kind() UpdateUserRequest_CASPathSelectorConditionalStateMetadataOwnerReferencesKind {
	return UpdateUserRequest_CASPathSelectorConditionalStateMetadataOwnerReferencesKind{}
}

func (UpdateUserRequest_CASPathSelectorConditionalStateMetadataOwnerReferences) Version() UpdateUserRequest_CASPathSelectorConditionalStateMetadataOwnerReferencesVersion {
	return UpdateUserRequest_CASPathSelectorConditionalStateMetadataOwnerReferencesVersion{}
}

func (UpdateUserRequest_CASPathSelectorConditionalStateMetadataOwnerReferences) Name() UpdateUserRequest_CASPathSelectorConditionalStateMetadataOwnerReferencesName {
	return UpdateUserRequest_CASPathSelectorConditionalStateMetadataOwnerReferencesName{}
}

func (UpdateUserRequest_CASPathSelectorConditionalStateMetadataOwnerReferences) Region() UpdateUserRequest_CASPathSelectorConditionalStateMetadataOwnerReferencesRegion {
	return UpdateUserRequest_CASPathSelectorConditionalStateMetadataOwnerReferencesRegion{}
}

func (UpdateUserRequest_CASPathSelectorConditionalStateMetadataOwnerReferences) Controller() UpdateUserRequest_CASPathSelectorConditionalStateMetadataOwnerReferencesController {
	return UpdateUserRequest_CASPathSelectorConditionalStateMetadataOwnerReferencesController{}
}

func (UpdateUserRequest_CASPathSelectorConditionalStateMetadataOwnerReferences) BlockOwnerDeletion() UpdateUserRequest_CASPathSelectorConditionalStateMetadataOwnerReferencesBlockOwnerDeletion {
	return UpdateUserRequest_CASPathSelectorConditionalStateMetadataOwnerReferencesBlockOwnerDeletion{}
}

func (UpdateUserRequest_CASPathSelectorConditionalStateMetadataOwnerReferences) RequiresOwnerReference() UpdateUserRequest_CASPathSelectorConditionalStateMetadataOwnerReferencesRequiresOwnerReference {
	return UpdateUserRequest_CASPathSelectorConditionalStateMetadataOwnerReferencesRequiresOwnerReference{}
}

type UpdateUserRequest_CASPathSelectorConditionalStateMetadataOwnerReferencesKind struct{}

func (UpdateUserRequest_CASPathSelectorConditionalStateMetadataOwnerReferencesKind) FieldPath() *UpdateUserRequestCAS_FieldSubPath {
	return &UpdateUserRequestCAS_FieldSubPath{
		selector: UpdateUserRequestCAS_FieldPathSelectorConditionalState,
		subPath:  user.NewUserFieldPathBuilder().Metadata().OwnerReferences().Kind().FieldPath(),
	}
}

func (s UpdateUserRequest_CASPathSelectorConditionalStateMetadataOwnerReferencesKind) WithValue(value string) *UpdateUserRequestCAS_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateUserRequestCAS_FieldSubPathValue)
}

func (s UpdateUserRequest_CASPathSelectorConditionalStateMetadataOwnerReferencesKind) WithArrayOfValues(values []string) *UpdateUserRequestCAS_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateUserRequestCAS_FieldSubPathArrayOfValues)
}

type UpdateUserRequest_CASPathSelectorConditionalStateMetadataOwnerReferencesVersion struct{}

func (UpdateUserRequest_CASPathSelectorConditionalStateMetadataOwnerReferencesVersion) FieldPath() *UpdateUserRequestCAS_FieldSubPath {
	return &UpdateUserRequestCAS_FieldSubPath{
		selector: UpdateUserRequestCAS_FieldPathSelectorConditionalState,
		subPath:  user.NewUserFieldPathBuilder().Metadata().OwnerReferences().Version().FieldPath(),
	}
}

func (s UpdateUserRequest_CASPathSelectorConditionalStateMetadataOwnerReferencesVersion) WithValue(value string) *UpdateUserRequestCAS_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateUserRequestCAS_FieldSubPathValue)
}

func (s UpdateUserRequest_CASPathSelectorConditionalStateMetadataOwnerReferencesVersion) WithArrayOfValues(values []string) *UpdateUserRequestCAS_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateUserRequestCAS_FieldSubPathArrayOfValues)
}

type UpdateUserRequest_CASPathSelectorConditionalStateMetadataOwnerReferencesName struct{}

func (UpdateUserRequest_CASPathSelectorConditionalStateMetadataOwnerReferencesName) FieldPath() *UpdateUserRequestCAS_FieldSubPath {
	return &UpdateUserRequestCAS_FieldSubPath{
		selector: UpdateUserRequestCAS_FieldPathSelectorConditionalState,
		subPath:  user.NewUserFieldPathBuilder().Metadata().OwnerReferences().Name().FieldPath(),
	}
}

func (s UpdateUserRequest_CASPathSelectorConditionalStateMetadataOwnerReferencesName) WithValue(value string) *UpdateUserRequestCAS_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateUserRequestCAS_FieldSubPathValue)
}

func (s UpdateUserRequest_CASPathSelectorConditionalStateMetadataOwnerReferencesName) WithArrayOfValues(values []string) *UpdateUserRequestCAS_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateUserRequestCAS_FieldSubPathArrayOfValues)
}

type UpdateUserRequest_CASPathSelectorConditionalStateMetadataOwnerReferencesRegion struct{}

func (UpdateUserRequest_CASPathSelectorConditionalStateMetadataOwnerReferencesRegion) FieldPath() *UpdateUserRequestCAS_FieldSubPath {
	return &UpdateUserRequestCAS_FieldSubPath{
		selector: UpdateUserRequestCAS_FieldPathSelectorConditionalState,
		subPath:  user.NewUserFieldPathBuilder().Metadata().OwnerReferences().Region().FieldPath(),
	}
}

func (s UpdateUserRequest_CASPathSelectorConditionalStateMetadataOwnerReferencesRegion) WithValue(value string) *UpdateUserRequestCAS_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateUserRequestCAS_FieldSubPathValue)
}

func (s UpdateUserRequest_CASPathSelectorConditionalStateMetadataOwnerReferencesRegion) WithArrayOfValues(values []string) *UpdateUserRequestCAS_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateUserRequestCAS_FieldSubPathArrayOfValues)
}

type UpdateUserRequest_CASPathSelectorConditionalStateMetadataOwnerReferencesController struct{}

func (UpdateUserRequest_CASPathSelectorConditionalStateMetadataOwnerReferencesController) FieldPath() *UpdateUserRequestCAS_FieldSubPath {
	return &UpdateUserRequestCAS_FieldSubPath{
		selector: UpdateUserRequestCAS_FieldPathSelectorConditionalState,
		subPath:  user.NewUserFieldPathBuilder().Metadata().OwnerReferences().Controller().FieldPath(),
	}
}

func (s UpdateUserRequest_CASPathSelectorConditionalStateMetadataOwnerReferencesController) WithValue(value bool) *UpdateUserRequestCAS_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateUserRequestCAS_FieldSubPathValue)
}

func (s UpdateUserRequest_CASPathSelectorConditionalStateMetadataOwnerReferencesController) WithArrayOfValues(values []bool) *UpdateUserRequestCAS_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateUserRequestCAS_FieldSubPathArrayOfValues)
}

type UpdateUserRequest_CASPathSelectorConditionalStateMetadataOwnerReferencesBlockOwnerDeletion struct{}

func (UpdateUserRequest_CASPathSelectorConditionalStateMetadataOwnerReferencesBlockOwnerDeletion) FieldPath() *UpdateUserRequestCAS_FieldSubPath {
	return &UpdateUserRequestCAS_FieldSubPath{
		selector: UpdateUserRequestCAS_FieldPathSelectorConditionalState,
		subPath:  user.NewUserFieldPathBuilder().Metadata().OwnerReferences().BlockOwnerDeletion().FieldPath(),
	}
}

func (s UpdateUserRequest_CASPathSelectorConditionalStateMetadataOwnerReferencesBlockOwnerDeletion) WithValue(value bool) *UpdateUserRequestCAS_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateUserRequestCAS_FieldSubPathValue)
}

func (s UpdateUserRequest_CASPathSelectorConditionalStateMetadataOwnerReferencesBlockOwnerDeletion) WithArrayOfValues(values []bool) *UpdateUserRequestCAS_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateUserRequestCAS_FieldSubPathArrayOfValues)
}

type UpdateUserRequest_CASPathSelectorConditionalStateMetadataOwnerReferencesRequiresOwnerReference struct{}

func (UpdateUserRequest_CASPathSelectorConditionalStateMetadataOwnerReferencesRequiresOwnerReference) FieldPath() *UpdateUserRequestCAS_FieldSubPath {
	return &UpdateUserRequestCAS_FieldSubPath{
		selector: UpdateUserRequestCAS_FieldPathSelectorConditionalState,
		subPath:  user.NewUserFieldPathBuilder().Metadata().OwnerReferences().RequiresOwnerReference().FieldPath(),
	}
}

func (s UpdateUserRequest_CASPathSelectorConditionalStateMetadataOwnerReferencesRequiresOwnerReference) WithValue(value bool) *UpdateUserRequestCAS_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateUserRequestCAS_FieldSubPathValue)
}

func (s UpdateUserRequest_CASPathSelectorConditionalStateMetadataOwnerReferencesRequiresOwnerReference) WithArrayOfValues(values []bool) *UpdateUserRequestCAS_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateUserRequestCAS_FieldSubPathArrayOfValues)
}

type UpdateUserRequest_CASPathSelectorConditionalStateMetadataShards struct{}

func (UpdateUserRequest_CASPathSelectorConditionalStateMetadataShards) FieldPath() *UpdateUserRequestCAS_FieldSubPath {
	return &UpdateUserRequestCAS_FieldSubPath{
		selector: UpdateUserRequestCAS_FieldPathSelectorConditionalState,
		subPath:  user.NewUserFieldPathBuilder().Metadata().Shards().FieldPath(),
	}
}

func (s UpdateUserRequest_CASPathSelectorConditionalStateMetadataShards) WithValue(value map[string]int64) *UpdateUserRequestCAS_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateUserRequestCAS_FieldSubPathValue)
}

func (s UpdateUserRequest_CASPathSelectorConditionalStateMetadataShards) WithArrayOfValues(values []map[string]int64) *UpdateUserRequestCAS_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateUserRequestCAS_FieldSubPathArrayOfValues)
}

func (UpdateUserRequest_CASPathSelectorConditionalStateMetadataShards) WithKey(key string) UpdateUserRequest_CASMapPathSelectorConditionalStateMetadataShards {
	return UpdateUserRequest_CASMapPathSelectorConditionalStateMetadataShards{key: key}
}

type UpdateUserRequest_CASMapPathSelectorConditionalStateMetadataShards struct {
	key string
}

func (s UpdateUserRequest_CASMapPathSelectorConditionalStateMetadataShards) FieldPath() *UpdateUserRequestCAS_FieldSubPath {
	return &UpdateUserRequestCAS_FieldSubPath{
		selector: UpdateUserRequestCAS_FieldPathSelectorConditionalState,
		subPath:  user.NewUserFieldPathBuilder().Metadata().Shards().WithKey(s.key).FieldPath(),
	}
}

func (s UpdateUserRequest_CASMapPathSelectorConditionalStateMetadataShards) WithValue(value int64) *UpdateUserRequestCAS_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateUserRequestCAS_FieldSubPathValue)
}

func (s UpdateUserRequest_CASMapPathSelectorConditionalStateMetadataShards) WithArrayOfValues(values []int64) *UpdateUserRequestCAS_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateUserRequestCAS_FieldSubPathArrayOfValues)
}

type UpdateUserRequest_CASPathSelectorConditionalStateMetadataSyncing struct{}

func (UpdateUserRequest_CASPathSelectorConditionalStateMetadataSyncing) FieldPath() *UpdateUserRequestCAS_FieldSubPath {
	return &UpdateUserRequestCAS_FieldSubPath{
		selector: UpdateUserRequestCAS_FieldPathSelectorConditionalState,
		subPath:  user.NewUserFieldPathBuilder().Metadata().Syncing().FieldPath(),
	}
}

func (s UpdateUserRequest_CASPathSelectorConditionalStateMetadataSyncing) WithValue(value *ntt_meta.SyncingMeta) *UpdateUserRequestCAS_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateUserRequestCAS_FieldSubPathValue)
}

func (s UpdateUserRequest_CASPathSelectorConditionalStateMetadataSyncing) WithArrayOfValues(values []*ntt_meta.SyncingMeta) *UpdateUserRequestCAS_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateUserRequestCAS_FieldSubPathArrayOfValues)
}

func (UpdateUserRequest_CASPathSelectorConditionalStateMetadataSyncing) OwningRegion() UpdateUserRequest_CASPathSelectorConditionalStateMetadataSyncingOwningRegion {
	return UpdateUserRequest_CASPathSelectorConditionalStateMetadataSyncingOwningRegion{}
}

func (UpdateUserRequest_CASPathSelectorConditionalStateMetadataSyncing) Regions() UpdateUserRequest_CASPathSelectorConditionalStateMetadataSyncingRegions {
	return UpdateUserRequest_CASPathSelectorConditionalStateMetadataSyncingRegions{}
}

type UpdateUserRequest_CASPathSelectorConditionalStateMetadataSyncingOwningRegion struct{}

func (UpdateUserRequest_CASPathSelectorConditionalStateMetadataSyncingOwningRegion) FieldPath() *UpdateUserRequestCAS_FieldSubPath {
	return &UpdateUserRequestCAS_FieldSubPath{
		selector: UpdateUserRequestCAS_FieldPathSelectorConditionalState,
		subPath:  user.NewUserFieldPathBuilder().Metadata().Syncing().OwningRegion().FieldPath(),
	}
}

func (s UpdateUserRequest_CASPathSelectorConditionalStateMetadataSyncingOwningRegion) WithValue(value string) *UpdateUserRequestCAS_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateUserRequestCAS_FieldSubPathValue)
}

func (s UpdateUserRequest_CASPathSelectorConditionalStateMetadataSyncingOwningRegion) WithArrayOfValues(values []string) *UpdateUserRequestCAS_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateUserRequestCAS_FieldSubPathArrayOfValues)
}

type UpdateUserRequest_CASPathSelectorConditionalStateMetadataSyncingRegions struct{}

func (UpdateUserRequest_CASPathSelectorConditionalStateMetadataSyncingRegions) FieldPath() *UpdateUserRequestCAS_FieldSubPath {
	return &UpdateUserRequestCAS_FieldSubPath{
		selector: UpdateUserRequestCAS_FieldPathSelectorConditionalState,
		subPath:  user.NewUserFieldPathBuilder().Metadata().Syncing().Regions().FieldPath(),
	}
}

func (s UpdateUserRequest_CASPathSelectorConditionalStateMetadataSyncingRegions) WithValue(value []string) *UpdateUserRequestCAS_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateUserRequestCAS_FieldSubPathValue)
}

func (s UpdateUserRequest_CASPathSelectorConditionalStateMetadataSyncingRegions) WithArrayOfValues(values [][]string) *UpdateUserRequestCAS_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateUserRequestCAS_FieldSubPathArrayOfValues)
}

func (s UpdateUserRequest_CASPathSelectorConditionalStateMetadataSyncingRegions) WithItemValue(value string) *UpdateUserRequestCAS_FieldSubPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*UpdateUserRequestCAS_FieldSubPathArrayItemValue)
}

type UpdateUserRequest_CASPathSelectorConditionalStateMetadataLifecycle struct{}

func (UpdateUserRequest_CASPathSelectorConditionalStateMetadataLifecycle) FieldPath() *UpdateUserRequestCAS_FieldSubPath {
	return &UpdateUserRequestCAS_FieldSubPath{
		selector: UpdateUserRequestCAS_FieldPathSelectorConditionalState,
		subPath:  user.NewUserFieldPathBuilder().Metadata().Lifecycle().FieldPath(),
	}
}

func (s UpdateUserRequest_CASPathSelectorConditionalStateMetadataLifecycle) WithValue(value *ntt_meta.Lifecycle) *UpdateUserRequestCAS_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateUserRequestCAS_FieldSubPathValue)
}

func (s UpdateUserRequest_CASPathSelectorConditionalStateMetadataLifecycle) WithArrayOfValues(values []*ntt_meta.Lifecycle) *UpdateUserRequestCAS_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateUserRequestCAS_FieldSubPathArrayOfValues)
}

func (UpdateUserRequest_CASPathSelectorConditionalStateMetadataLifecycle) State() UpdateUserRequest_CASPathSelectorConditionalStateMetadataLifecycleState {
	return UpdateUserRequest_CASPathSelectorConditionalStateMetadataLifecycleState{}
}

func (UpdateUserRequest_CASPathSelectorConditionalStateMetadataLifecycle) BlockDeletion() UpdateUserRequest_CASPathSelectorConditionalStateMetadataLifecycleBlockDeletion {
	return UpdateUserRequest_CASPathSelectorConditionalStateMetadataLifecycleBlockDeletion{}
}

type UpdateUserRequest_CASPathSelectorConditionalStateMetadataLifecycleState struct{}

func (UpdateUserRequest_CASPathSelectorConditionalStateMetadataLifecycleState) FieldPath() *UpdateUserRequestCAS_FieldSubPath {
	return &UpdateUserRequestCAS_FieldSubPath{
		selector: UpdateUserRequestCAS_FieldPathSelectorConditionalState,
		subPath:  user.NewUserFieldPathBuilder().Metadata().Lifecycle().State().FieldPath(),
	}
}

func (s UpdateUserRequest_CASPathSelectorConditionalStateMetadataLifecycleState) WithValue(value ntt_meta.Lifecycle_State) *UpdateUserRequestCAS_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateUserRequestCAS_FieldSubPathValue)
}

func (s UpdateUserRequest_CASPathSelectorConditionalStateMetadataLifecycleState) WithArrayOfValues(values []ntt_meta.Lifecycle_State) *UpdateUserRequestCAS_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateUserRequestCAS_FieldSubPathArrayOfValues)
}

type UpdateUserRequest_CASPathSelectorConditionalStateMetadataLifecycleBlockDeletion struct{}

func (UpdateUserRequest_CASPathSelectorConditionalStateMetadataLifecycleBlockDeletion) FieldPath() *UpdateUserRequestCAS_FieldSubPath {
	return &UpdateUserRequestCAS_FieldSubPath{
		selector: UpdateUserRequestCAS_FieldPathSelectorConditionalState,
		subPath:  user.NewUserFieldPathBuilder().Metadata().Lifecycle().BlockDeletion().FieldPath(),
	}
}

func (s UpdateUserRequest_CASPathSelectorConditionalStateMetadataLifecycleBlockDeletion) WithValue(value bool) *UpdateUserRequestCAS_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateUserRequestCAS_FieldSubPathValue)
}

func (s UpdateUserRequest_CASPathSelectorConditionalStateMetadataLifecycleBlockDeletion) WithArrayOfValues(values []bool) *UpdateUserRequestCAS_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateUserRequestCAS_FieldSubPathArrayOfValues)
}

type UpdateUserRequest_CASPathSelectorConditionalStateEmail struct{}

func (UpdateUserRequest_CASPathSelectorConditionalStateEmail) FieldPath() *UpdateUserRequestCAS_FieldSubPath {
	return &UpdateUserRequestCAS_FieldSubPath{
		selector: UpdateUserRequestCAS_FieldPathSelectorConditionalState,
		subPath:  user.NewUserFieldPathBuilder().Email().FieldPath(),
	}
}

func (s UpdateUserRequest_CASPathSelectorConditionalStateEmail) WithValue(value string) *UpdateUserRequestCAS_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateUserRequestCAS_FieldSubPathValue)
}

func (s UpdateUserRequest_CASPathSelectorConditionalStateEmail) WithArrayOfValues(values []string) *UpdateUserRequestCAS_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateUserRequestCAS_FieldSubPathArrayOfValues)
}

type UpdateUserRequest_CASPathSelectorConditionalStateEmailVerified struct{}

func (UpdateUserRequest_CASPathSelectorConditionalStateEmailVerified) FieldPath() *UpdateUserRequestCAS_FieldSubPath {
	return &UpdateUserRequestCAS_FieldSubPath{
		selector: UpdateUserRequestCAS_FieldPathSelectorConditionalState,
		subPath:  user.NewUserFieldPathBuilder().EmailVerified().FieldPath(),
	}
}

func (s UpdateUserRequest_CASPathSelectorConditionalStateEmailVerified) WithValue(value bool) *UpdateUserRequestCAS_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateUserRequestCAS_FieldSubPathValue)
}

func (s UpdateUserRequest_CASPathSelectorConditionalStateEmailVerified) WithArrayOfValues(values []bool) *UpdateUserRequestCAS_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateUserRequestCAS_FieldSubPathArrayOfValues)
}

type UpdateUserRequest_CASPathSelectorConditionalStateAuthInfo struct{}

func (UpdateUserRequest_CASPathSelectorConditionalStateAuthInfo) FieldPath() *UpdateUserRequestCAS_FieldSubPath {
	return &UpdateUserRequestCAS_FieldSubPath{
		selector: UpdateUserRequestCAS_FieldPathSelectorConditionalState,
		subPath:  user.NewUserFieldPathBuilder().AuthInfo().FieldPath(),
	}
}

func (s UpdateUserRequest_CASPathSelectorConditionalStateAuthInfo) WithValue(value *user.User_AuthInfo) *UpdateUserRequestCAS_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateUserRequestCAS_FieldSubPathValue)
}

func (s UpdateUserRequest_CASPathSelectorConditionalStateAuthInfo) WithArrayOfValues(values []*user.User_AuthInfo) *UpdateUserRequestCAS_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateUserRequestCAS_FieldSubPathArrayOfValues)
}

func (UpdateUserRequest_CASPathSelectorConditionalStateAuthInfo) Provider() UpdateUserRequest_CASPathSelectorConditionalStateAuthInfoProvider {
	return UpdateUserRequest_CASPathSelectorConditionalStateAuthInfoProvider{}
}

func (UpdateUserRequest_CASPathSelectorConditionalStateAuthInfo) Id() UpdateUserRequest_CASPathSelectorConditionalStateAuthInfoId {
	return UpdateUserRequest_CASPathSelectorConditionalStateAuthInfoId{}
}

type UpdateUserRequest_CASPathSelectorConditionalStateAuthInfoProvider struct{}

func (UpdateUserRequest_CASPathSelectorConditionalStateAuthInfoProvider) FieldPath() *UpdateUserRequestCAS_FieldSubPath {
	return &UpdateUserRequestCAS_FieldSubPath{
		selector: UpdateUserRequestCAS_FieldPathSelectorConditionalState,
		subPath:  user.NewUserFieldPathBuilder().AuthInfo().Provider().FieldPath(),
	}
}

func (s UpdateUserRequest_CASPathSelectorConditionalStateAuthInfoProvider) WithValue(value string) *UpdateUserRequestCAS_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateUserRequestCAS_FieldSubPathValue)
}

func (s UpdateUserRequest_CASPathSelectorConditionalStateAuthInfoProvider) WithArrayOfValues(values []string) *UpdateUserRequestCAS_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateUserRequestCAS_FieldSubPathArrayOfValues)
}

type UpdateUserRequest_CASPathSelectorConditionalStateAuthInfoId struct{}

func (UpdateUserRequest_CASPathSelectorConditionalStateAuthInfoId) FieldPath() *UpdateUserRequestCAS_FieldSubPath {
	return &UpdateUserRequestCAS_FieldSubPath{
		selector: UpdateUserRequestCAS_FieldPathSelectorConditionalState,
		subPath:  user.NewUserFieldPathBuilder().AuthInfo().Id().FieldPath(),
	}
}

func (s UpdateUserRequest_CASPathSelectorConditionalStateAuthInfoId) WithValue(value string) *UpdateUserRequestCAS_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateUserRequestCAS_FieldSubPathValue)
}

func (s UpdateUserRequest_CASPathSelectorConditionalStateAuthInfoId) WithArrayOfValues(values []string) *UpdateUserRequestCAS_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateUserRequestCAS_FieldSubPathArrayOfValues)
}

type UpdateUserRequest_CASPathSelectorConditionalStateSettings struct{}

func (UpdateUserRequest_CASPathSelectorConditionalStateSettings) FieldPath() *UpdateUserRequestCAS_FieldSubPath {
	return &UpdateUserRequestCAS_FieldSubPath{
		selector: UpdateUserRequestCAS_FieldPathSelectorConditionalState,
		subPath:  user.NewUserFieldPathBuilder().Settings().FieldPath(),
	}
}

func (s UpdateUserRequest_CASPathSelectorConditionalStateSettings) WithValue(value map[string]string) *UpdateUserRequestCAS_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateUserRequestCAS_FieldSubPathValue)
}

func (s UpdateUserRequest_CASPathSelectorConditionalStateSettings) WithArrayOfValues(values []map[string]string) *UpdateUserRequestCAS_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateUserRequestCAS_FieldSubPathArrayOfValues)
}

func (UpdateUserRequest_CASPathSelectorConditionalStateSettings) WithKey(key string) UpdateUserRequest_CASMapPathSelectorConditionalStateSettings {
	return UpdateUserRequest_CASMapPathSelectorConditionalStateSettings{key: key}
}

type UpdateUserRequest_CASMapPathSelectorConditionalStateSettings struct {
	key string
}

func (s UpdateUserRequest_CASMapPathSelectorConditionalStateSettings) FieldPath() *UpdateUserRequestCAS_FieldSubPath {
	return &UpdateUserRequestCAS_FieldSubPath{
		selector: UpdateUserRequestCAS_FieldPathSelectorConditionalState,
		subPath:  user.NewUserFieldPathBuilder().Settings().WithKey(s.key).FieldPath(),
	}
}

func (s UpdateUserRequest_CASMapPathSelectorConditionalStateSettings) WithValue(value string) *UpdateUserRequestCAS_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateUserRequestCAS_FieldSubPathValue)
}

func (s UpdateUserRequest_CASMapPathSelectorConditionalStateSettings) WithArrayOfValues(values []string) *UpdateUserRequestCAS_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateUserRequestCAS_FieldSubPathArrayOfValues)
}

type UpdateUserRequest_CASPathSelectorConditionalStateRefreshedTime struct{}

func (UpdateUserRequest_CASPathSelectorConditionalStateRefreshedTime) FieldPath() *UpdateUserRequestCAS_FieldSubPath {
	return &UpdateUserRequestCAS_FieldSubPath{
		selector: UpdateUserRequestCAS_FieldPathSelectorConditionalState,
		subPath:  user.NewUserFieldPathBuilder().RefreshedTime().FieldPath(),
	}
}

func (s UpdateUserRequest_CASPathSelectorConditionalStateRefreshedTime) WithValue(value *timestamp.Timestamp) *UpdateUserRequestCAS_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateUserRequestCAS_FieldSubPathValue)
}

func (s UpdateUserRequest_CASPathSelectorConditionalStateRefreshedTime) WithArrayOfValues(values []*timestamp.Timestamp) *UpdateUserRequestCAS_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateUserRequestCAS_FieldSubPathArrayOfValues)
}

type UpdateUserRequest_CASPathSelectorFieldMask struct{}

func (UpdateUserRequest_CASPathSelectorFieldMask) FieldPath() *UpdateUserRequestCAS_FieldTerminalPath {
	return &UpdateUserRequestCAS_FieldTerminalPath{selector: UpdateUserRequestCAS_FieldPathSelectorFieldMask}
}

func (s UpdateUserRequest_CASPathSelectorFieldMask) WithValue(value *user.User_FieldMask) *UpdateUserRequestCAS_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateUserRequestCAS_FieldTerminalPathValue)
}

func (s UpdateUserRequest_CASPathSelectorFieldMask) WithArrayOfValues(values []*user.User_FieldMask) *UpdateUserRequestCAS_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateUserRequestCAS_FieldTerminalPathArrayOfValues)
}

type DeleteUserRequestFieldPathBuilder struct{}

func NewDeleteUserRequestFieldPathBuilder() DeleteUserRequestFieldPathBuilder {
	return DeleteUserRequestFieldPathBuilder{}
}
func (DeleteUserRequestFieldPathBuilder) Name() DeleteUserRequestPathSelectorName {
	return DeleteUserRequestPathSelectorName{}
}

type DeleteUserRequestPathSelectorName struct{}

func (DeleteUserRequestPathSelectorName) FieldPath() *DeleteUserRequest_FieldTerminalPath {
	return &DeleteUserRequest_FieldTerminalPath{selector: DeleteUserRequest_FieldPathSelectorName}
}

func (s DeleteUserRequestPathSelectorName) WithValue(value *user.Reference) *DeleteUserRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*DeleteUserRequest_FieldTerminalPathValue)
}

func (s DeleteUserRequestPathSelectorName) WithArrayOfValues(values []*user.Reference) *DeleteUserRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*DeleteUserRequest_FieldTerminalPathArrayOfValues)
}
