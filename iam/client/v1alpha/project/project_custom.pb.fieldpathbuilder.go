// Code generated by protoc-gen-goten-object
// File: edgelq/iam/proto/v1alpha/project_custom.proto
// DO NOT EDIT!!!

package project_client

// proto imports
import (
	ntt_meta "github.com/cloudwan/edgelq-sdk/common/types/meta"
	organization "github.com/cloudwan/edgelq-sdk/iam/resources/v1alpha/organization"
	project "github.com/cloudwan/edgelq-sdk/iam/resources/v1alpha/project"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	field_mask "google.golang.org/genproto/protobuf/field_mask"
)

// make sure we're using proto imports
var (
	_ = &ntt_meta.Meta{}
	_ = &organization.Organization{}
	_ = &project.Project{}
	_ = &field_mask.FieldMask{}
	_ = &timestamp.Timestamp{}
)

type ListMyProjectsRequestFieldPathBuilder struct{}

func NewListMyProjectsRequestFieldPathBuilder() ListMyProjectsRequestFieldPathBuilder {
	return ListMyProjectsRequestFieldPathBuilder{}
}
func (ListMyProjectsRequestFieldPathBuilder) Filter() ListMyProjectsRequestPathSelectorFilter {
	return ListMyProjectsRequestPathSelectorFilter{}
}
func (ListMyProjectsRequestFieldPathBuilder) FieldMask() ListMyProjectsRequestPathSelectorFieldMask {
	return ListMyProjectsRequestPathSelectorFieldMask{}
}

type ListMyProjectsRequestPathSelectorFilter struct{}

func (ListMyProjectsRequestPathSelectorFilter) FieldPath() *ListMyProjectsRequest_FieldTerminalPath {
	return &ListMyProjectsRequest_FieldTerminalPath{selector: ListMyProjectsRequest_FieldPathSelectorFilter}
}

func (s ListMyProjectsRequestPathSelectorFilter) WithValue(value *project.Filter) *ListMyProjectsRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*ListMyProjectsRequest_FieldTerminalPathValue)
}

func (s ListMyProjectsRequestPathSelectorFilter) WithArrayOfValues(values []*project.Filter) *ListMyProjectsRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListMyProjectsRequest_FieldTerminalPathArrayOfValues)
}

type ListMyProjectsRequestPathSelectorFieldMask struct{}

func (ListMyProjectsRequestPathSelectorFieldMask) FieldPath() *ListMyProjectsRequest_FieldTerminalPath {
	return &ListMyProjectsRequest_FieldTerminalPath{selector: ListMyProjectsRequest_FieldPathSelectorFieldMask}
}

func (s ListMyProjectsRequestPathSelectorFieldMask) WithValue(value *project.Project_FieldMask) *ListMyProjectsRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*ListMyProjectsRequest_FieldTerminalPathValue)
}

func (s ListMyProjectsRequestPathSelectorFieldMask) WithArrayOfValues(values []*project.Project_FieldMask) *ListMyProjectsRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListMyProjectsRequest_FieldTerminalPathArrayOfValues)
}

type ListMyProjectsResponseFieldPathBuilder struct{}

func NewListMyProjectsResponseFieldPathBuilder() ListMyProjectsResponseFieldPathBuilder {
	return ListMyProjectsResponseFieldPathBuilder{}
}
func (ListMyProjectsResponseFieldPathBuilder) Projects() ListMyProjectsResponsePathSelectorProjects {
	return ListMyProjectsResponsePathSelectorProjects{}
}

type ListMyProjectsResponsePathSelectorProjects struct{}

func (ListMyProjectsResponsePathSelectorProjects) FieldPath() *ListMyProjectsResponse_FieldTerminalPath {
	return &ListMyProjectsResponse_FieldTerminalPath{selector: ListMyProjectsResponse_FieldPathSelectorProjects}
}

func (s ListMyProjectsResponsePathSelectorProjects) WithValue(value []*project.Project) *ListMyProjectsResponse_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*ListMyProjectsResponse_FieldTerminalPathValue)
}

func (s ListMyProjectsResponsePathSelectorProjects) WithArrayOfValues(values [][]*project.Project) *ListMyProjectsResponse_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListMyProjectsResponse_FieldTerminalPathArrayOfValues)
}

func (s ListMyProjectsResponsePathSelectorProjects) WithItemValue(value *project.Project) *ListMyProjectsResponse_FieldTerminalPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*ListMyProjectsResponse_FieldTerminalPathArrayItemValue)
}
func (ListMyProjectsResponsePathSelectorProjects) WithSubPath(subPath project.Project_FieldPath) *ListMyProjectsResponse_FieldSubPath {
	return &ListMyProjectsResponse_FieldSubPath{selector: ListMyProjectsResponse_FieldPathSelectorProjects, subPath: subPath}
}

func (s ListMyProjectsResponsePathSelectorProjects) WithSubValue(subPathValue project.Project_FieldPathValue) *ListMyProjectsResponse_FieldSubPathValue {
	return &ListMyProjectsResponse_FieldSubPathValue{ListMyProjectsResponse_FieldPath: s.WithSubPath(subPathValue), subPathValue: subPathValue}
}

func (s ListMyProjectsResponsePathSelectorProjects) WithSubArrayOfValues(subPathArrayOfValues project.Project_FieldPathArrayOfValues) *ListMyProjectsResponse_FieldSubPathArrayOfValues {
	return &ListMyProjectsResponse_FieldSubPathArrayOfValues{ListMyProjectsResponse_FieldPath: s.WithSubPath(subPathArrayOfValues), subPathArrayOfValues: subPathArrayOfValues}
}

func (s ListMyProjectsResponsePathSelectorProjects) WithSubArrayItemValue(subPathArrayItemValue project.Project_FieldPathArrayItemValue) *ListMyProjectsResponse_FieldSubPathArrayItemValue {
	return &ListMyProjectsResponse_FieldSubPathArrayItemValue{ListMyProjectsResponse_FieldPath: s.WithSubPath(subPathArrayItemValue), subPathItemValue: subPathArrayItemValue}
}

func (ListMyProjectsResponsePathSelectorProjects) Name() ListMyProjectsResponsePathSelectorProjectsName {
	return ListMyProjectsResponsePathSelectorProjectsName{}
}

func (ListMyProjectsResponsePathSelectorProjects) Title() ListMyProjectsResponsePathSelectorProjectsTitle {
	return ListMyProjectsResponsePathSelectorProjectsTitle{}
}

func (ListMyProjectsResponsePathSelectorProjects) ParentOrganization() ListMyProjectsResponsePathSelectorProjectsParentOrganization {
	return ListMyProjectsResponsePathSelectorProjectsParentOrganization{}
}

func (ListMyProjectsResponsePathSelectorProjects) RootOrganization() ListMyProjectsResponsePathSelectorProjectsRootOrganization {
	return ListMyProjectsResponsePathSelectorProjectsRootOrganization{}
}

func (ListMyProjectsResponsePathSelectorProjects) AncestryPath() ListMyProjectsResponsePathSelectorProjectsAncestryPath {
	return ListMyProjectsResponsePathSelectorProjectsAncestryPath{}
}

func (ListMyProjectsResponsePathSelectorProjects) Metadata() ListMyProjectsResponsePathSelectorProjectsMetadata {
	return ListMyProjectsResponsePathSelectorProjectsMetadata{}
}

type ListMyProjectsResponsePathSelectorProjectsName struct{}

func (ListMyProjectsResponsePathSelectorProjectsName) FieldPath() *ListMyProjectsResponse_FieldSubPath {
	return &ListMyProjectsResponse_FieldSubPath{
		selector: ListMyProjectsResponse_FieldPathSelectorProjects,
		subPath:  project.NewProjectFieldPathBuilder().Name().FieldPath(),
	}
}

func (s ListMyProjectsResponsePathSelectorProjectsName) WithValue(value *project.Name) *ListMyProjectsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListMyProjectsResponse_FieldSubPathValue)
}

func (s ListMyProjectsResponsePathSelectorProjectsName) WithArrayOfValues(values []*project.Name) *ListMyProjectsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListMyProjectsResponse_FieldSubPathArrayOfValues)
}

type ListMyProjectsResponsePathSelectorProjectsTitle struct{}

func (ListMyProjectsResponsePathSelectorProjectsTitle) FieldPath() *ListMyProjectsResponse_FieldSubPath {
	return &ListMyProjectsResponse_FieldSubPath{
		selector: ListMyProjectsResponse_FieldPathSelectorProjects,
		subPath:  project.NewProjectFieldPathBuilder().Title().FieldPath(),
	}
}

func (s ListMyProjectsResponsePathSelectorProjectsTitle) WithValue(value string) *ListMyProjectsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListMyProjectsResponse_FieldSubPathValue)
}

func (s ListMyProjectsResponsePathSelectorProjectsTitle) WithArrayOfValues(values []string) *ListMyProjectsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListMyProjectsResponse_FieldSubPathArrayOfValues)
}

type ListMyProjectsResponsePathSelectorProjectsParentOrganization struct{}

func (ListMyProjectsResponsePathSelectorProjectsParentOrganization) FieldPath() *ListMyProjectsResponse_FieldSubPath {
	return &ListMyProjectsResponse_FieldSubPath{
		selector: ListMyProjectsResponse_FieldPathSelectorProjects,
		subPath:  project.NewProjectFieldPathBuilder().ParentOrganization().FieldPath(),
	}
}

func (s ListMyProjectsResponsePathSelectorProjectsParentOrganization) WithValue(value *organization.Reference) *ListMyProjectsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListMyProjectsResponse_FieldSubPathValue)
}

func (s ListMyProjectsResponsePathSelectorProjectsParentOrganization) WithArrayOfValues(values []*organization.Reference) *ListMyProjectsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListMyProjectsResponse_FieldSubPathArrayOfValues)
}

type ListMyProjectsResponsePathSelectorProjectsRootOrganization struct{}

func (ListMyProjectsResponsePathSelectorProjectsRootOrganization) FieldPath() *ListMyProjectsResponse_FieldSubPath {
	return &ListMyProjectsResponse_FieldSubPath{
		selector: ListMyProjectsResponse_FieldPathSelectorProjects,
		subPath:  project.NewProjectFieldPathBuilder().RootOrganization().FieldPath(),
	}
}

func (s ListMyProjectsResponsePathSelectorProjectsRootOrganization) WithValue(value *organization.Reference) *ListMyProjectsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListMyProjectsResponse_FieldSubPathValue)
}

func (s ListMyProjectsResponsePathSelectorProjectsRootOrganization) WithArrayOfValues(values []*organization.Reference) *ListMyProjectsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListMyProjectsResponse_FieldSubPathArrayOfValues)
}

type ListMyProjectsResponsePathSelectorProjectsAncestryPath struct{}

func (ListMyProjectsResponsePathSelectorProjectsAncestryPath) FieldPath() *ListMyProjectsResponse_FieldSubPath {
	return &ListMyProjectsResponse_FieldSubPath{
		selector: ListMyProjectsResponse_FieldPathSelectorProjects,
		subPath:  project.NewProjectFieldPathBuilder().AncestryPath().FieldPath(),
	}
}

func (s ListMyProjectsResponsePathSelectorProjectsAncestryPath) WithValue(value []*organization.Reference) *ListMyProjectsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListMyProjectsResponse_FieldSubPathValue)
}

func (s ListMyProjectsResponsePathSelectorProjectsAncestryPath) WithArrayOfValues(values [][]*organization.Reference) *ListMyProjectsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListMyProjectsResponse_FieldSubPathArrayOfValues)
}

func (s ListMyProjectsResponsePathSelectorProjectsAncestryPath) WithItemValue(value *organization.Reference) *ListMyProjectsResponse_FieldSubPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*ListMyProjectsResponse_FieldSubPathArrayItemValue)
}

type ListMyProjectsResponsePathSelectorProjectsMetadata struct{}

func (ListMyProjectsResponsePathSelectorProjectsMetadata) FieldPath() *ListMyProjectsResponse_FieldSubPath {
	return &ListMyProjectsResponse_FieldSubPath{
		selector: ListMyProjectsResponse_FieldPathSelectorProjects,
		subPath:  project.NewProjectFieldPathBuilder().Metadata().FieldPath(),
	}
}

func (s ListMyProjectsResponsePathSelectorProjectsMetadata) WithValue(value *ntt_meta.Meta) *ListMyProjectsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListMyProjectsResponse_FieldSubPathValue)
}

func (s ListMyProjectsResponsePathSelectorProjectsMetadata) WithArrayOfValues(values []*ntt_meta.Meta) *ListMyProjectsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListMyProjectsResponse_FieldSubPathArrayOfValues)
}

func (ListMyProjectsResponsePathSelectorProjectsMetadata) CreateTime() ListMyProjectsResponsePathSelectorProjectsMetadataCreateTime {
	return ListMyProjectsResponsePathSelectorProjectsMetadataCreateTime{}
}

func (ListMyProjectsResponsePathSelectorProjectsMetadata) UpdateTime() ListMyProjectsResponsePathSelectorProjectsMetadataUpdateTime {
	return ListMyProjectsResponsePathSelectorProjectsMetadataUpdateTime{}
}

func (ListMyProjectsResponsePathSelectorProjectsMetadata) Uuid() ListMyProjectsResponsePathSelectorProjectsMetadataUuid {
	return ListMyProjectsResponsePathSelectorProjectsMetadataUuid{}
}

func (ListMyProjectsResponsePathSelectorProjectsMetadata) Tags() ListMyProjectsResponsePathSelectorProjectsMetadataTags {
	return ListMyProjectsResponsePathSelectorProjectsMetadataTags{}
}

func (ListMyProjectsResponsePathSelectorProjectsMetadata) Labels() ListMyProjectsResponsePathSelectorProjectsMetadataLabels {
	return ListMyProjectsResponsePathSelectorProjectsMetadataLabels{}
}

func (ListMyProjectsResponsePathSelectorProjectsMetadata) Annotations() ListMyProjectsResponsePathSelectorProjectsMetadataAnnotations {
	return ListMyProjectsResponsePathSelectorProjectsMetadataAnnotations{}
}

func (ListMyProjectsResponsePathSelectorProjectsMetadata) Generation() ListMyProjectsResponsePathSelectorProjectsMetadataGeneration {
	return ListMyProjectsResponsePathSelectorProjectsMetadataGeneration{}
}

func (ListMyProjectsResponsePathSelectorProjectsMetadata) ResourceVersion() ListMyProjectsResponsePathSelectorProjectsMetadataResourceVersion {
	return ListMyProjectsResponsePathSelectorProjectsMetadataResourceVersion{}
}

func (ListMyProjectsResponsePathSelectorProjectsMetadata) OwnerReferences() ListMyProjectsResponsePathSelectorProjectsMetadataOwnerReferences {
	return ListMyProjectsResponsePathSelectorProjectsMetadataOwnerReferences{}
}

func (ListMyProjectsResponsePathSelectorProjectsMetadata) Shards() ListMyProjectsResponsePathSelectorProjectsMetadataShards {
	return ListMyProjectsResponsePathSelectorProjectsMetadataShards{}
}

func (ListMyProjectsResponsePathSelectorProjectsMetadata) Syncing() ListMyProjectsResponsePathSelectorProjectsMetadataSyncing {
	return ListMyProjectsResponsePathSelectorProjectsMetadataSyncing{}
}

type ListMyProjectsResponsePathSelectorProjectsMetadataCreateTime struct{}

func (ListMyProjectsResponsePathSelectorProjectsMetadataCreateTime) FieldPath() *ListMyProjectsResponse_FieldSubPath {
	return &ListMyProjectsResponse_FieldSubPath{
		selector: ListMyProjectsResponse_FieldPathSelectorProjects,
		subPath:  project.NewProjectFieldPathBuilder().Metadata().CreateTime().FieldPath(),
	}
}

func (s ListMyProjectsResponsePathSelectorProjectsMetadataCreateTime) WithValue(value *timestamp.Timestamp) *ListMyProjectsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListMyProjectsResponse_FieldSubPathValue)
}

func (s ListMyProjectsResponsePathSelectorProjectsMetadataCreateTime) WithArrayOfValues(values []*timestamp.Timestamp) *ListMyProjectsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListMyProjectsResponse_FieldSubPathArrayOfValues)
}

type ListMyProjectsResponsePathSelectorProjectsMetadataUpdateTime struct{}

func (ListMyProjectsResponsePathSelectorProjectsMetadataUpdateTime) FieldPath() *ListMyProjectsResponse_FieldSubPath {
	return &ListMyProjectsResponse_FieldSubPath{
		selector: ListMyProjectsResponse_FieldPathSelectorProjects,
		subPath:  project.NewProjectFieldPathBuilder().Metadata().UpdateTime().FieldPath(),
	}
}

func (s ListMyProjectsResponsePathSelectorProjectsMetadataUpdateTime) WithValue(value *timestamp.Timestamp) *ListMyProjectsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListMyProjectsResponse_FieldSubPathValue)
}

func (s ListMyProjectsResponsePathSelectorProjectsMetadataUpdateTime) WithArrayOfValues(values []*timestamp.Timestamp) *ListMyProjectsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListMyProjectsResponse_FieldSubPathArrayOfValues)
}

type ListMyProjectsResponsePathSelectorProjectsMetadataUuid struct{}

func (ListMyProjectsResponsePathSelectorProjectsMetadataUuid) FieldPath() *ListMyProjectsResponse_FieldSubPath {
	return &ListMyProjectsResponse_FieldSubPath{
		selector: ListMyProjectsResponse_FieldPathSelectorProjects,
		subPath:  project.NewProjectFieldPathBuilder().Metadata().Uuid().FieldPath(),
	}
}

func (s ListMyProjectsResponsePathSelectorProjectsMetadataUuid) WithValue(value string) *ListMyProjectsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListMyProjectsResponse_FieldSubPathValue)
}

func (s ListMyProjectsResponsePathSelectorProjectsMetadataUuid) WithArrayOfValues(values []string) *ListMyProjectsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListMyProjectsResponse_FieldSubPathArrayOfValues)
}

type ListMyProjectsResponsePathSelectorProjectsMetadataTags struct{}

func (ListMyProjectsResponsePathSelectorProjectsMetadataTags) FieldPath() *ListMyProjectsResponse_FieldSubPath {
	return &ListMyProjectsResponse_FieldSubPath{
		selector: ListMyProjectsResponse_FieldPathSelectorProjects,
		subPath:  project.NewProjectFieldPathBuilder().Metadata().Tags().FieldPath(),
	}
}

func (s ListMyProjectsResponsePathSelectorProjectsMetadataTags) WithValue(value []string) *ListMyProjectsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListMyProjectsResponse_FieldSubPathValue)
}

func (s ListMyProjectsResponsePathSelectorProjectsMetadataTags) WithArrayOfValues(values [][]string) *ListMyProjectsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListMyProjectsResponse_FieldSubPathArrayOfValues)
}

func (s ListMyProjectsResponsePathSelectorProjectsMetadataTags) WithItemValue(value string) *ListMyProjectsResponse_FieldSubPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*ListMyProjectsResponse_FieldSubPathArrayItemValue)
}

type ListMyProjectsResponsePathSelectorProjectsMetadataLabels struct{}

func (ListMyProjectsResponsePathSelectorProjectsMetadataLabels) FieldPath() *ListMyProjectsResponse_FieldSubPath {
	return &ListMyProjectsResponse_FieldSubPath{
		selector: ListMyProjectsResponse_FieldPathSelectorProjects,
		subPath:  project.NewProjectFieldPathBuilder().Metadata().Labels().FieldPath(),
	}
}

func (s ListMyProjectsResponsePathSelectorProjectsMetadataLabels) WithValue(value map[string]string) *ListMyProjectsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListMyProjectsResponse_FieldSubPathValue)
}

func (s ListMyProjectsResponsePathSelectorProjectsMetadataLabels) WithArrayOfValues(values []map[string]string) *ListMyProjectsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListMyProjectsResponse_FieldSubPathArrayOfValues)
}

func (ListMyProjectsResponsePathSelectorProjectsMetadataLabels) WithKey(key string) ListMyProjectsResponseMapPathSelectorProjectsMetadataLabels {
	return ListMyProjectsResponseMapPathSelectorProjectsMetadataLabels{key: key}
}

type ListMyProjectsResponseMapPathSelectorProjectsMetadataLabels struct {
	key string
}

func (s ListMyProjectsResponseMapPathSelectorProjectsMetadataLabels) FieldPath() *ListMyProjectsResponse_FieldSubPath {
	return &ListMyProjectsResponse_FieldSubPath{
		selector: ListMyProjectsResponse_FieldPathSelectorProjects,
		subPath:  project.NewProjectFieldPathBuilder().Metadata().Labels().WithKey(s.key).FieldPath(),
	}
}

func (s ListMyProjectsResponseMapPathSelectorProjectsMetadataLabels) WithValue(value string) *ListMyProjectsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListMyProjectsResponse_FieldSubPathValue)
}

func (s ListMyProjectsResponseMapPathSelectorProjectsMetadataLabels) WithArrayOfValues(values []string) *ListMyProjectsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListMyProjectsResponse_FieldSubPathArrayOfValues)
}

type ListMyProjectsResponsePathSelectorProjectsMetadataAnnotations struct{}

func (ListMyProjectsResponsePathSelectorProjectsMetadataAnnotations) FieldPath() *ListMyProjectsResponse_FieldSubPath {
	return &ListMyProjectsResponse_FieldSubPath{
		selector: ListMyProjectsResponse_FieldPathSelectorProjects,
		subPath:  project.NewProjectFieldPathBuilder().Metadata().Annotations().FieldPath(),
	}
}

func (s ListMyProjectsResponsePathSelectorProjectsMetadataAnnotations) WithValue(value map[string]string) *ListMyProjectsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListMyProjectsResponse_FieldSubPathValue)
}

func (s ListMyProjectsResponsePathSelectorProjectsMetadataAnnotations) WithArrayOfValues(values []map[string]string) *ListMyProjectsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListMyProjectsResponse_FieldSubPathArrayOfValues)
}

func (ListMyProjectsResponsePathSelectorProjectsMetadataAnnotations) WithKey(key string) ListMyProjectsResponseMapPathSelectorProjectsMetadataAnnotations {
	return ListMyProjectsResponseMapPathSelectorProjectsMetadataAnnotations{key: key}
}

type ListMyProjectsResponseMapPathSelectorProjectsMetadataAnnotations struct {
	key string
}

func (s ListMyProjectsResponseMapPathSelectorProjectsMetadataAnnotations) FieldPath() *ListMyProjectsResponse_FieldSubPath {
	return &ListMyProjectsResponse_FieldSubPath{
		selector: ListMyProjectsResponse_FieldPathSelectorProjects,
		subPath:  project.NewProjectFieldPathBuilder().Metadata().Annotations().WithKey(s.key).FieldPath(),
	}
}

func (s ListMyProjectsResponseMapPathSelectorProjectsMetadataAnnotations) WithValue(value string) *ListMyProjectsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListMyProjectsResponse_FieldSubPathValue)
}

func (s ListMyProjectsResponseMapPathSelectorProjectsMetadataAnnotations) WithArrayOfValues(values []string) *ListMyProjectsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListMyProjectsResponse_FieldSubPathArrayOfValues)
}

type ListMyProjectsResponsePathSelectorProjectsMetadataGeneration struct{}

func (ListMyProjectsResponsePathSelectorProjectsMetadataGeneration) FieldPath() *ListMyProjectsResponse_FieldSubPath {
	return &ListMyProjectsResponse_FieldSubPath{
		selector: ListMyProjectsResponse_FieldPathSelectorProjects,
		subPath:  project.NewProjectFieldPathBuilder().Metadata().Generation().FieldPath(),
	}
}

func (s ListMyProjectsResponsePathSelectorProjectsMetadataGeneration) WithValue(value int64) *ListMyProjectsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListMyProjectsResponse_FieldSubPathValue)
}

func (s ListMyProjectsResponsePathSelectorProjectsMetadataGeneration) WithArrayOfValues(values []int64) *ListMyProjectsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListMyProjectsResponse_FieldSubPathArrayOfValues)
}

type ListMyProjectsResponsePathSelectorProjectsMetadataResourceVersion struct{}

func (ListMyProjectsResponsePathSelectorProjectsMetadataResourceVersion) FieldPath() *ListMyProjectsResponse_FieldSubPath {
	return &ListMyProjectsResponse_FieldSubPath{
		selector: ListMyProjectsResponse_FieldPathSelectorProjects,
		subPath:  project.NewProjectFieldPathBuilder().Metadata().ResourceVersion().FieldPath(),
	}
}

func (s ListMyProjectsResponsePathSelectorProjectsMetadataResourceVersion) WithValue(value string) *ListMyProjectsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListMyProjectsResponse_FieldSubPathValue)
}

func (s ListMyProjectsResponsePathSelectorProjectsMetadataResourceVersion) WithArrayOfValues(values []string) *ListMyProjectsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListMyProjectsResponse_FieldSubPathArrayOfValues)
}

type ListMyProjectsResponsePathSelectorProjectsMetadataOwnerReferences struct{}

func (ListMyProjectsResponsePathSelectorProjectsMetadataOwnerReferences) FieldPath() *ListMyProjectsResponse_FieldSubPath {
	return &ListMyProjectsResponse_FieldSubPath{
		selector: ListMyProjectsResponse_FieldPathSelectorProjects,
		subPath:  project.NewProjectFieldPathBuilder().Metadata().OwnerReferences().FieldPath(),
	}
}

func (s ListMyProjectsResponsePathSelectorProjectsMetadataOwnerReferences) WithValue(value []*ntt_meta.OwnerReference) *ListMyProjectsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListMyProjectsResponse_FieldSubPathValue)
}

func (s ListMyProjectsResponsePathSelectorProjectsMetadataOwnerReferences) WithArrayOfValues(values [][]*ntt_meta.OwnerReference) *ListMyProjectsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListMyProjectsResponse_FieldSubPathArrayOfValues)
}

func (s ListMyProjectsResponsePathSelectorProjectsMetadataOwnerReferences) WithItemValue(value *ntt_meta.OwnerReference) *ListMyProjectsResponse_FieldSubPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*ListMyProjectsResponse_FieldSubPathArrayItemValue)
}

func (ListMyProjectsResponsePathSelectorProjectsMetadataOwnerReferences) ApiVersion() ListMyProjectsResponsePathSelectorProjectsMetadataOwnerReferencesApiVersion {
	return ListMyProjectsResponsePathSelectorProjectsMetadataOwnerReferencesApiVersion{}
}

func (ListMyProjectsResponsePathSelectorProjectsMetadataOwnerReferences) Kind() ListMyProjectsResponsePathSelectorProjectsMetadataOwnerReferencesKind {
	return ListMyProjectsResponsePathSelectorProjectsMetadataOwnerReferencesKind{}
}

func (ListMyProjectsResponsePathSelectorProjectsMetadataOwnerReferences) Name() ListMyProjectsResponsePathSelectorProjectsMetadataOwnerReferencesName {
	return ListMyProjectsResponsePathSelectorProjectsMetadataOwnerReferencesName{}
}

func (ListMyProjectsResponsePathSelectorProjectsMetadataOwnerReferences) Uid() ListMyProjectsResponsePathSelectorProjectsMetadataOwnerReferencesUid {
	return ListMyProjectsResponsePathSelectorProjectsMetadataOwnerReferencesUid{}
}

func (ListMyProjectsResponsePathSelectorProjectsMetadataOwnerReferences) Controller() ListMyProjectsResponsePathSelectorProjectsMetadataOwnerReferencesController {
	return ListMyProjectsResponsePathSelectorProjectsMetadataOwnerReferencesController{}
}

func (ListMyProjectsResponsePathSelectorProjectsMetadataOwnerReferences) BlockOwnerDeletion() ListMyProjectsResponsePathSelectorProjectsMetadataOwnerReferencesBlockOwnerDeletion {
	return ListMyProjectsResponsePathSelectorProjectsMetadataOwnerReferencesBlockOwnerDeletion{}
}

type ListMyProjectsResponsePathSelectorProjectsMetadataOwnerReferencesApiVersion struct{}

func (ListMyProjectsResponsePathSelectorProjectsMetadataOwnerReferencesApiVersion) FieldPath() *ListMyProjectsResponse_FieldSubPath {
	return &ListMyProjectsResponse_FieldSubPath{
		selector: ListMyProjectsResponse_FieldPathSelectorProjects,
		subPath:  project.NewProjectFieldPathBuilder().Metadata().OwnerReferences().ApiVersion().FieldPath(),
	}
}

func (s ListMyProjectsResponsePathSelectorProjectsMetadataOwnerReferencesApiVersion) WithValue(value string) *ListMyProjectsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListMyProjectsResponse_FieldSubPathValue)
}

func (s ListMyProjectsResponsePathSelectorProjectsMetadataOwnerReferencesApiVersion) WithArrayOfValues(values []string) *ListMyProjectsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListMyProjectsResponse_FieldSubPathArrayOfValues)
}

type ListMyProjectsResponsePathSelectorProjectsMetadataOwnerReferencesKind struct{}

func (ListMyProjectsResponsePathSelectorProjectsMetadataOwnerReferencesKind) FieldPath() *ListMyProjectsResponse_FieldSubPath {
	return &ListMyProjectsResponse_FieldSubPath{
		selector: ListMyProjectsResponse_FieldPathSelectorProjects,
		subPath:  project.NewProjectFieldPathBuilder().Metadata().OwnerReferences().Kind().FieldPath(),
	}
}

func (s ListMyProjectsResponsePathSelectorProjectsMetadataOwnerReferencesKind) WithValue(value string) *ListMyProjectsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListMyProjectsResponse_FieldSubPathValue)
}

func (s ListMyProjectsResponsePathSelectorProjectsMetadataOwnerReferencesKind) WithArrayOfValues(values []string) *ListMyProjectsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListMyProjectsResponse_FieldSubPathArrayOfValues)
}

type ListMyProjectsResponsePathSelectorProjectsMetadataOwnerReferencesName struct{}

func (ListMyProjectsResponsePathSelectorProjectsMetadataOwnerReferencesName) FieldPath() *ListMyProjectsResponse_FieldSubPath {
	return &ListMyProjectsResponse_FieldSubPath{
		selector: ListMyProjectsResponse_FieldPathSelectorProjects,
		subPath:  project.NewProjectFieldPathBuilder().Metadata().OwnerReferences().Name().FieldPath(),
	}
}

func (s ListMyProjectsResponsePathSelectorProjectsMetadataOwnerReferencesName) WithValue(value string) *ListMyProjectsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListMyProjectsResponse_FieldSubPathValue)
}

func (s ListMyProjectsResponsePathSelectorProjectsMetadataOwnerReferencesName) WithArrayOfValues(values []string) *ListMyProjectsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListMyProjectsResponse_FieldSubPathArrayOfValues)
}

type ListMyProjectsResponsePathSelectorProjectsMetadataOwnerReferencesUid struct{}

func (ListMyProjectsResponsePathSelectorProjectsMetadataOwnerReferencesUid) FieldPath() *ListMyProjectsResponse_FieldSubPath {
	return &ListMyProjectsResponse_FieldSubPath{
		selector: ListMyProjectsResponse_FieldPathSelectorProjects,
		subPath:  project.NewProjectFieldPathBuilder().Metadata().OwnerReferences().Uid().FieldPath(),
	}
}

func (s ListMyProjectsResponsePathSelectorProjectsMetadataOwnerReferencesUid) WithValue(value string) *ListMyProjectsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListMyProjectsResponse_FieldSubPathValue)
}

func (s ListMyProjectsResponsePathSelectorProjectsMetadataOwnerReferencesUid) WithArrayOfValues(values []string) *ListMyProjectsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListMyProjectsResponse_FieldSubPathArrayOfValues)
}

type ListMyProjectsResponsePathSelectorProjectsMetadataOwnerReferencesController struct{}

func (ListMyProjectsResponsePathSelectorProjectsMetadataOwnerReferencesController) FieldPath() *ListMyProjectsResponse_FieldSubPath {
	return &ListMyProjectsResponse_FieldSubPath{
		selector: ListMyProjectsResponse_FieldPathSelectorProjects,
		subPath:  project.NewProjectFieldPathBuilder().Metadata().OwnerReferences().Controller().FieldPath(),
	}
}

func (s ListMyProjectsResponsePathSelectorProjectsMetadataOwnerReferencesController) WithValue(value bool) *ListMyProjectsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListMyProjectsResponse_FieldSubPathValue)
}

func (s ListMyProjectsResponsePathSelectorProjectsMetadataOwnerReferencesController) WithArrayOfValues(values []bool) *ListMyProjectsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListMyProjectsResponse_FieldSubPathArrayOfValues)
}

type ListMyProjectsResponsePathSelectorProjectsMetadataOwnerReferencesBlockOwnerDeletion struct{}

func (ListMyProjectsResponsePathSelectorProjectsMetadataOwnerReferencesBlockOwnerDeletion) FieldPath() *ListMyProjectsResponse_FieldSubPath {
	return &ListMyProjectsResponse_FieldSubPath{
		selector: ListMyProjectsResponse_FieldPathSelectorProjects,
		subPath:  project.NewProjectFieldPathBuilder().Metadata().OwnerReferences().BlockOwnerDeletion().FieldPath(),
	}
}

func (s ListMyProjectsResponsePathSelectorProjectsMetadataOwnerReferencesBlockOwnerDeletion) WithValue(value bool) *ListMyProjectsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListMyProjectsResponse_FieldSubPathValue)
}

func (s ListMyProjectsResponsePathSelectorProjectsMetadataOwnerReferencesBlockOwnerDeletion) WithArrayOfValues(values []bool) *ListMyProjectsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListMyProjectsResponse_FieldSubPathArrayOfValues)
}

type ListMyProjectsResponsePathSelectorProjectsMetadataShards struct{}

func (ListMyProjectsResponsePathSelectorProjectsMetadataShards) FieldPath() *ListMyProjectsResponse_FieldSubPath {
	return &ListMyProjectsResponse_FieldSubPath{
		selector: ListMyProjectsResponse_FieldPathSelectorProjects,
		subPath:  project.NewProjectFieldPathBuilder().Metadata().Shards().FieldPath(),
	}
}

func (s ListMyProjectsResponsePathSelectorProjectsMetadataShards) WithValue(value map[string]int64) *ListMyProjectsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListMyProjectsResponse_FieldSubPathValue)
}

func (s ListMyProjectsResponsePathSelectorProjectsMetadataShards) WithArrayOfValues(values []map[string]int64) *ListMyProjectsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListMyProjectsResponse_FieldSubPathArrayOfValues)
}

func (ListMyProjectsResponsePathSelectorProjectsMetadataShards) WithKey(key string) ListMyProjectsResponseMapPathSelectorProjectsMetadataShards {
	return ListMyProjectsResponseMapPathSelectorProjectsMetadataShards{key: key}
}

type ListMyProjectsResponseMapPathSelectorProjectsMetadataShards struct {
	key string
}

func (s ListMyProjectsResponseMapPathSelectorProjectsMetadataShards) FieldPath() *ListMyProjectsResponse_FieldSubPath {
	return &ListMyProjectsResponse_FieldSubPath{
		selector: ListMyProjectsResponse_FieldPathSelectorProjects,
		subPath:  project.NewProjectFieldPathBuilder().Metadata().Shards().WithKey(s.key).FieldPath(),
	}
}

func (s ListMyProjectsResponseMapPathSelectorProjectsMetadataShards) WithValue(value int64) *ListMyProjectsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListMyProjectsResponse_FieldSubPathValue)
}

func (s ListMyProjectsResponseMapPathSelectorProjectsMetadataShards) WithArrayOfValues(values []int64) *ListMyProjectsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListMyProjectsResponse_FieldSubPathArrayOfValues)
}

type ListMyProjectsResponsePathSelectorProjectsMetadataSyncing struct{}

func (ListMyProjectsResponsePathSelectorProjectsMetadataSyncing) FieldPath() *ListMyProjectsResponse_FieldSubPath {
	return &ListMyProjectsResponse_FieldSubPath{
		selector: ListMyProjectsResponse_FieldPathSelectorProjects,
		subPath:  project.NewProjectFieldPathBuilder().Metadata().Syncing().FieldPath(),
	}
}

func (s ListMyProjectsResponsePathSelectorProjectsMetadataSyncing) WithValue(value *ntt_meta.SyncingMeta) *ListMyProjectsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListMyProjectsResponse_FieldSubPathValue)
}

func (s ListMyProjectsResponsePathSelectorProjectsMetadataSyncing) WithArrayOfValues(values []*ntt_meta.SyncingMeta) *ListMyProjectsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListMyProjectsResponse_FieldSubPathArrayOfValues)
}

func (ListMyProjectsResponsePathSelectorProjectsMetadataSyncing) OwningRegion() ListMyProjectsResponsePathSelectorProjectsMetadataSyncingOwningRegion {
	return ListMyProjectsResponsePathSelectorProjectsMetadataSyncingOwningRegion{}
}

func (ListMyProjectsResponsePathSelectorProjectsMetadataSyncing) Regions() ListMyProjectsResponsePathSelectorProjectsMetadataSyncingRegions {
	return ListMyProjectsResponsePathSelectorProjectsMetadataSyncingRegions{}
}

type ListMyProjectsResponsePathSelectorProjectsMetadataSyncingOwningRegion struct{}

func (ListMyProjectsResponsePathSelectorProjectsMetadataSyncingOwningRegion) FieldPath() *ListMyProjectsResponse_FieldSubPath {
	return &ListMyProjectsResponse_FieldSubPath{
		selector: ListMyProjectsResponse_FieldPathSelectorProjects,
		subPath:  project.NewProjectFieldPathBuilder().Metadata().Syncing().OwningRegion().FieldPath(),
	}
}

func (s ListMyProjectsResponsePathSelectorProjectsMetadataSyncingOwningRegion) WithValue(value string) *ListMyProjectsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListMyProjectsResponse_FieldSubPathValue)
}

func (s ListMyProjectsResponsePathSelectorProjectsMetadataSyncingOwningRegion) WithArrayOfValues(values []string) *ListMyProjectsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListMyProjectsResponse_FieldSubPathArrayOfValues)
}

type ListMyProjectsResponsePathSelectorProjectsMetadataSyncingRegions struct{}

func (ListMyProjectsResponsePathSelectorProjectsMetadataSyncingRegions) FieldPath() *ListMyProjectsResponse_FieldSubPath {
	return &ListMyProjectsResponse_FieldSubPath{
		selector: ListMyProjectsResponse_FieldPathSelectorProjects,
		subPath:  project.NewProjectFieldPathBuilder().Metadata().Syncing().Regions().FieldPath(),
	}
}

func (s ListMyProjectsResponsePathSelectorProjectsMetadataSyncingRegions) WithValue(value []string) *ListMyProjectsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListMyProjectsResponse_FieldSubPathValue)
}

func (s ListMyProjectsResponsePathSelectorProjectsMetadataSyncingRegions) WithArrayOfValues(values [][]string) *ListMyProjectsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListMyProjectsResponse_FieldSubPathArrayOfValues)
}

func (s ListMyProjectsResponsePathSelectorProjectsMetadataSyncingRegions) WithItemValue(value string) *ListMyProjectsResponse_FieldSubPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*ListMyProjectsResponse_FieldSubPathArrayItemValue)
}
