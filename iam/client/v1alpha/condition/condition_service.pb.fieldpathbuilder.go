// Code generated by protoc-gen-goten-object
// File: edgelq/iam/proto/v1alpha/condition_service.proto
// DO NOT EDIT!!!

package condition_client

// proto imports
import (
	ntt_meta "github.com/cloudwan/edgelq-sdk/common/types/meta"
	condition "github.com/cloudwan/edgelq-sdk/iam/resources/v1alpha/condition"
	organization "github.com/cloudwan/edgelq-sdk/iam/resources/v1alpha/organization"
	project "github.com/cloudwan/edgelq-sdk/iam/resources/v1alpha/project"
	view "github.com/cloudwan/goten-sdk/runtime/api/view"
	watch_type "github.com/cloudwan/goten-sdk/runtime/api/watch_type"
	empty "github.com/golang/protobuf/ptypes/empty"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	field_mask "google.golang.org/genproto/protobuf/field_mask"
)

// make sure we're using proto imports
var (
	_ = &ntt_meta.Meta{}
	_ = &condition.Condition{}
	_ = &organization.Organization{}
	_ = &project.Project{}
	_ = &empty.Empty{}
	_ = &field_mask.FieldMask{}
	_ = &timestamp.Timestamp{}
	_ = view.View(0)
	_ = watch_type.WatchType(0)
)

type GetConditionRequestFieldPathBuilder struct{}

func NewGetConditionRequestFieldPathBuilder() GetConditionRequestFieldPathBuilder {
	return GetConditionRequestFieldPathBuilder{}
}
func (GetConditionRequestFieldPathBuilder) Name() GetConditionRequestPathSelectorName {
	return GetConditionRequestPathSelectorName{}
}
func (GetConditionRequestFieldPathBuilder) FieldMask() GetConditionRequestPathSelectorFieldMask {
	return GetConditionRequestPathSelectorFieldMask{}
}
func (GetConditionRequestFieldPathBuilder) View() GetConditionRequestPathSelectorView {
	return GetConditionRequestPathSelectorView{}
}

type GetConditionRequestPathSelectorName struct{}

func (GetConditionRequestPathSelectorName) FieldPath() *GetConditionRequest_FieldTerminalPath {
	return &GetConditionRequest_FieldTerminalPath{selector: GetConditionRequest_FieldPathSelectorName}
}

func (s GetConditionRequestPathSelectorName) WithValue(value *condition.Reference) *GetConditionRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*GetConditionRequest_FieldTerminalPathValue)
}

func (s GetConditionRequestPathSelectorName) WithArrayOfValues(values []*condition.Reference) *GetConditionRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*GetConditionRequest_FieldTerminalPathArrayOfValues)
}

type GetConditionRequestPathSelectorFieldMask struct{}

func (GetConditionRequestPathSelectorFieldMask) FieldPath() *GetConditionRequest_FieldTerminalPath {
	return &GetConditionRequest_FieldTerminalPath{selector: GetConditionRequest_FieldPathSelectorFieldMask}
}

func (s GetConditionRequestPathSelectorFieldMask) WithValue(value *condition.Condition_FieldMask) *GetConditionRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*GetConditionRequest_FieldTerminalPathValue)
}

func (s GetConditionRequestPathSelectorFieldMask) WithArrayOfValues(values []*condition.Condition_FieldMask) *GetConditionRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*GetConditionRequest_FieldTerminalPathArrayOfValues)
}

type GetConditionRequestPathSelectorView struct{}

func (GetConditionRequestPathSelectorView) FieldPath() *GetConditionRequest_FieldTerminalPath {
	return &GetConditionRequest_FieldTerminalPath{selector: GetConditionRequest_FieldPathSelectorView}
}

func (s GetConditionRequestPathSelectorView) WithValue(value view.View) *GetConditionRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*GetConditionRequest_FieldTerminalPathValue)
}

func (s GetConditionRequestPathSelectorView) WithArrayOfValues(values []view.View) *GetConditionRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*GetConditionRequest_FieldTerminalPathArrayOfValues)
}

type BatchGetConditionsRequestFieldPathBuilder struct{}

func NewBatchGetConditionsRequestFieldPathBuilder() BatchGetConditionsRequestFieldPathBuilder {
	return BatchGetConditionsRequestFieldPathBuilder{}
}
func (BatchGetConditionsRequestFieldPathBuilder) Names() BatchGetConditionsRequestPathSelectorNames {
	return BatchGetConditionsRequestPathSelectorNames{}
}
func (BatchGetConditionsRequestFieldPathBuilder) FieldMask() BatchGetConditionsRequestPathSelectorFieldMask {
	return BatchGetConditionsRequestPathSelectorFieldMask{}
}
func (BatchGetConditionsRequestFieldPathBuilder) View() BatchGetConditionsRequestPathSelectorView {
	return BatchGetConditionsRequestPathSelectorView{}
}

type BatchGetConditionsRequestPathSelectorNames struct{}

func (BatchGetConditionsRequestPathSelectorNames) FieldPath() *BatchGetConditionsRequest_FieldTerminalPath {
	return &BatchGetConditionsRequest_FieldTerminalPath{selector: BatchGetConditionsRequest_FieldPathSelectorNames}
}

func (s BatchGetConditionsRequestPathSelectorNames) WithValue(value []*condition.Reference) *BatchGetConditionsRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetConditionsRequest_FieldTerminalPathValue)
}

func (s BatchGetConditionsRequestPathSelectorNames) WithArrayOfValues(values [][]*condition.Reference) *BatchGetConditionsRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetConditionsRequest_FieldTerminalPathArrayOfValues)
}

func (s BatchGetConditionsRequestPathSelectorNames) WithItemValue(value *condition.Reference) *BatchGetConditionsRequest_FieldTerminalPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*BatchGetConditionsRequest_FieldTerminalPathArrayItemValue)
}

type BatchGetConditionsRequestPathSelectorFieldMask struct{}

func (BatchGetConditionsRequestPathSelectorFieldMask) FieldPath() *BatchGetConditionsRequest_FieldTerminalPath {
	return &BatchGetConditionsRequest_FieldTerminalPath{selector: BatchGetConditionsRequest_FieldPathSelectorFieldMask}
}

func (s BatchGetConditionsRequestPathSelectorFieldMask) WithValue(value *condition.Condition_FieldMask) *BatchGetConditionsRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetConditionsRequest_FieldTerminalPathValue)
}

func (s BatchGetConditionsRequestPathSelectorFieldMask) WithArrayOfValues(values []*condition.Condition_FieldMask) *BatchGetConditionsRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetConditionsRequest_FieldTerminalPathArrayOfValues)
}

type BatchGetConditionsRequestPathSelectorView struct{}

func (BatchGetConditionsRequestPathSelectorView) FieldPath() *BatchGetConditionsRequest_FieldTerminalPath {
	return &BatchGetConditionsRequest_FieldTerminalPath{selector: BatchGetConditionsRequest_FieldPathSelectorView}
}

func (s BatchGetConditionsRequestPathSelectorView) WithValue(value view.View) *BatchGetConditionsRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetConditionsRequest_FieldTerminalPathValue)
}

func (s BatchGetConditionsRequestPathSelectorView) WithArrayOfValues(values []view.View) *BatchGetConditionsRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetConditionsRequest_FieldTerminalPathArrayOfValues)
}

type BatchGetConditionsResponseFieldPathBuilder struct{}

func NewBatchGetConditionsResponseFieldPathBuilder() BatchGetConditionsResponseFieldPathBuilder {
	return BatchGetConditionsResponseFieldPathBuilder{}
}
func (BatchGetConditionsResponseFieldPathBuilder) Conditions() BatchGetConditionsResponsePathSelectorConditions {
	return BatchGetConditionsResponsePathSelectorConditions{}
}
func (BatchGetConditionsResponseFieldPathBuilder) Missing() BatchGetConditionsResponsePathSelectorMissing {
	return BatchGetConditionsResponsePathSelectorMissing{}
}

type BatchGetConditionsResponsePathSelectorConditions struct{}

func (BatchGetConditionsResponsePathSelectorConditions) FieldPath() *BatchGetConditionsResponse_FieldTerminalPath {
	return &BatchGetConditionsResponse_FieldTerminalPath{selector: BatchGetConditionsResponse_FieldPathSelectorConditions}
}

func (s BatchGetConditionsResponsePathSelectorConditions) WithValue(value []*condition.Condition) *BatchGetConditionsResponse_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetConditionsResponse_FieldTerminalPathValue)
}

func (s BatchGetConditionsResponsePathSelectorConditions) WithArrayOfValues(values [][]*condition.Condition) *BatchGetConditionsResponse_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetConditionsResponse_FieldTerminalPathArrayOfValues)
}

func (s BatchGetConditionsResponsePathSelectorConditions) WithItemValue(value *condition.Condition) *BatchGetConditionsResponse_FieldTerminalPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*BatchGetConditionsResponse_FieldTerminalPathArrayItemValue)
}
func (BatchGetConditionsResponsePathSelectorConditions) WithSubPath(subPath condition.Condition_FieldPath) *BatchGetConditionsResponse_FieldSubPath {
	return &BatchGetConditionsResponse_FieldSubPath{selector: BatchGetConditionsResponse_FieldPathSelectorConditions, subPath: subPath}
}

func (s BatchGetConditionsResponsePathSelectorConditions) WithSubValue(subPathValue condition.Condition_FieldPathValue) *BatchGetConditionsResponse_FieldSubPathValue {
	return &BatchGetConditionsResponse_FieldSubPathValue{BatchGetConditionsResponse_FieldPath: s.WithSubPath(subPathValue), subPathValue: subPathValue}
}

func (s BatchGetConditionsResponsePathSelectorConditions) WithSubArrayOfValues(subPathArrayOfValues condition.Condition_FieldPathArrayOfValues) *BatchGetConditionsResponse_FieldSubPathArrayOfValues {
	return &BatchGetConditionsResponse_FieldSubPathArrayOfValues{BatchGetConditionsResponse_FieldPath: s.WithSubPath(subPathArrayOfValues), subPathArrayOfValues: subPathArrayOfValues}
}

func (s BatchGetConditionsResponsePathSelectorConditions) WithSubArrayItemValue(subPathArrayItemValue condition.Condition_FieldPathArrayItemValue) *BatchGetConditionsResponse_FieldSubPathArrayItemValue {
	return &BatchGetConditionsResponse_FieldSubPathArrayItemValue{BatchGetConditionsResponse_FieldPath: s.WithSubPath(subPathArrayItemValue), subPathItemValue: subPathArrayItemValue}
}

func (BatchGetConditionsResponsePathSelectorConditions) Name() BatchGetConditionsResponsePathSelectorConditionsName {
	return BatchGetConditionsResponsePathSelectorConditionsName{}
}

func (BatchGetConditionsResponsePathSelectorConditions) DisplayName() BatchGetConditionsResponsePathSelectorConditionsDisplayName {
	return BatchGetConditionsResponsePathSelectorConditionsDisplayName{}
}

func (BatchGetConditionsResponsePathSelectorConditions) Description() BatchGetConditionsResponsePathSelectorConditionsDescription {
	return BatchGetConditionsResponsePathSelectorConditionsDescription{}
}

func (BatchGetConditionsResponsePathSelectorConditions) Expression() BatchGetConditionsResponsePathSelectorConditionsExpression {
	return BatchGetConditionsResponsePathSelectorConditionsExpression{}
}

func (BatchGetConditionsResponsePathSelectorConditions) ParameterDeclarations() BatchGetConditionsResponsePathSelectorConditionsParameterDeclarations {
	return BatchGetConditionsResponsePathSelectorConditionsParameterDeclarations{}
}

type BatchGetConditionsResponsePathSelectorConditionsName struct{}

func (BatchGetConditionsResponsePathSelectorConditionsName) FieldPath() *BatchGetConditionsResponse_FieldSubPath {
	return &BatchGetConditionsResponse_FieldSubPath{
		selector: BatchGetConditionsResponse_FieldPathSelectorConditions,
		subPath:  condition.NewConditionFieldPathBuilder().Name().FieldPath(),
	}
}

func (s BatchGetConditionsResponsePathSelectorConditionsName) WithValue(value *condition.Name) *BatchGetConditionsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetConditionsResponse_FieldSubPathValue)
}

func (s BatchGetConditionsResponsePathSelectorConditionsName) WithArrayOfValues(values []*condition.Name) *BatchGetConditionsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetConditionsResponse_FieldSubPathArrayOfValues)
}

type BatchGetConditionsResponsePathSelectorConditionsDisplayName struct{}

func (BatchGetConditionsResponsePathSelectorConditionsDisplayName) FieldPath() *BatchGetConditionsResponse_FieldSubPath {
	return &BatchGetConditionsResponse_FieldSubPath{
		selector: BatchGetConditionsResponse_FieldPathSelectorConditions,
		subPath:  condition.NewConditionFieldPathBuilder().DisplayName().FieldPath(),
	}
}

func (s BatchGetConditionsResponsePathSelectorConditionsDisplayName) WithValue(value string) *BatchGetConditionsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetConditionsResponse_FieldSubPathValue)
}

func (s BatchGetConditionsResponsePathSelectorConditionsDisplayName) WithArrayOfValues(values []string) *BatchGetConditionsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetConditionsResponse_FieldSubPathArrayOfValues)
}

type BatchGetConditionsResponsePathSelectorConditionsDescription struct{}

func (BatchGetConditionsResponsePathSelectorConditionsDescription) FieldPath() *BatchGetConditionsResponse_FieldSubPath {
	return &BatchGetConditionsResponse_FieldSubPath{
		selector: BatchGetConditionsResponse_FieldPathSelectorConditions,
		subPath:  condition.NewConditionFieldPathBuilder().Description().FieldPath(),
	}
}

func (s BatchGetConditionsResponsePathSelectorConditionsDescription) WithValue(value string) *BatchGetConditionsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetConditionsResponse_FieldSubPathValue)
}

func (s BatchGetConditionsResponsePathSelectorConditionsDescription) WithArrayOfValues(values []string) *BatchGetConditionsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetConditionsResponse_FieldSubPathArrayOfValues)
}

type BatchGetConditionsResponsePathSelectorConditionsExpression struct{}

func (BatchGetConditionsResponsePathSelectorConditionsExpression) FieldPath() *BatchGetConditionsResponse_FieldSubPath {
	return &BatchGetConditionsResponse_FieldSubPath{
		selector: BatchGetConditionsResponse_FieldPathSelectorConditions,
		subPath:  condition.NewConditionFieldPathBuilder().Expression().FieldPath(),
	}
}

func (s BatchGetConditionsResponsePathSelectorConditionsExpression) WithValue(value string) *BatchGetConditionsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetConditionsResponse_FieldSubPathValue)
}

func (s BatchGetConditionsResponsePathSelectorConditionsExpression) WithArrayOfValues(values []string) *BatchGetConditionsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetConditionsResponse_FieldSubPathArrayOfValues)
}

type BatchGetConditionsResponsePathSelectorConditionsParameterDeclarations struct{}

func (BatchGetConditionsResponsePathSelectorConditionsParameterDeclarations) FieldPath() *BatchGetConditionsResponse_FieldSubPath {
	return &BatchGetConditionsResponse_FieldSubPath{
		selector: BatchGetConditionsResponse_FieldPathSelectorConditions,
		subPath:  condition.NewConditionFieldPathBuilder().ParameterDeclarations().FieldPath(),
	}
}

func (s BatchGetConditionsResponsePathSelectorConditionsParameterDeclarations) WithValue(value []*condition.Condition_ParameterDeclaration) *BatchGetConditionsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetConditionsResponse_FieldSubPathValue)
}

func (s BatchGetConditionsResponsePathSelectorConditionsParameterDeclarations) WithArrayOfValues(values [][]*condition.Condition_ParameterDeclaration) *BatchGetConditionsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetConditionsResponse_FieldSubPathArrayOfValues)
}

func (s BatchGetConditionsResponsePathSelectorConditionsParameterDeclarations) WithItemValue(value *condition.Condition_ParameterDeclaration) *BatchGetConditionsResponse_FieldSubPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*BatchGetConditionsResponse_FieldSubPathArrayItemValue)
}

func (BatchGetConditionsResponsePathSelectorConditionsParameterDeclarations) Key() BatchGetConditionsResponsePathSelectorConditionsParameterDeclarationsKey {
	return BatchGetConditionsResponsePathSelectorConditionsParameterDeclarationsKey{}
}

func (BatchGetConditionsResponsePathSelectorConditionsParameterDeclarations) Type() BatchGetConditionsResponsePathSelectorConditionsParameterDeclarationsType {
	return BatchGetConditionsResponsePathSelectorConditionsParameterDeclarationsType{}
}

type BatchGetConditionsResponsePathSelectorConditionsParameterDeclarationsKey struct{}

func (BatchGetConditionsResponsePathSelectorConditionsParameterDeclarationsKey) FieldPath() *BatchGetConditionsResponse_FieldSubPath {
	return &BatchGetConditionsResponse_FieldSubPath{
		selector: BatchGetConditionsResponse_FieldPathSelectorConditions,
		subPath:  condition.NewConditionFieldPathBuilder().ParameterDeclarations().Key().FieldPath(),
	}
}

func (s BatchGetConditionsResponsePathSelectorConditionsParameterDeclarationsKey) WithValue(value string) *BatchGetConditionsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetConditionsResponse_FieldSubPathValue)
}

func (s BatchGetConditionsResponsePathSelectorConditionsParameterDeclarationsKey) WithArrayOfValues(values []string) *BatchGetConditionsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetConditionsResponse_FieldSubPathArrayOfValues)
}

type BatchGetConditionsResponsePathSelectorConditionsParameterDeclarationsType struct{}

func (BatchGetConditionsResponsePathSelectorConditionsParameterDeclarationsType) FieldPath() *BatchGetConditionsResponse_FieldSubPath {
	return &BatchGetConditionsResponse_FieldSubPath{
		selector: BatchGetConditionsResponse_FieldPathSelectorConditions,
		subPath:  condition.NewConditionFieldPathBuilder().ParameterDeclarations().Type().FieldPath(),
	}
}

func (s BatchGetConditionsResponsePathSelectorConditionsParameterDeclarationsType) WithValue(value condition.Condition_ParameterType) *BatchGetConditionsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetConditionsResponse_FieldSubPathValue)
}

func (s BatchGetConditionsResponsePathSelectorConditionsParameterDeclarationsType) WithArrayOfValues(values []condition.Condition_ParameterType) *BatchGetConditionsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetConditionsResponse_FieldSubPathArrayOfValues)
}

type BatchGetConditionsResponsePathSelectorMissing struct{}

func (BatchGetConditionsResponsePathSelectorMissing) FieldPath() *BatchGetConditionsResponse_FieldTerminalPath {
	return &BatchGetConditionsResponse_FieldTerminalPath{selector: BatchGetConditionsResponse_FieldPathSelectorMissing}
}

func (s BatchGetConditionsResponsePathSelectorMissing) WithValue(value []*condition.Reference) *BatchGetConditionsResponse_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetConditionsResponse_FieldTerminalPathValue)
}

func (s BatchGetConditionsResponsePathSelectorMissing) WithArrayOfValues(values [][]*condition.Reference) *BatchGetConditionsResponse_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetConditionsResponse_FieldTerminalPathArrayOfValues)
}

func (s BatchGetConditionsResponsePathSelectorMissing) WithItemValue(value *condition.Reference) *BatchGetConditionsResponse_FieldTerminalPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*BatchGetConditionsResponse_FieldTerminalPathArrayItemValue)
}

type ListConditionsRequestFieldPathBuilder struct{}

func NewListConditionsRequestFieldPathBuilder() ListConditionsRequestFieldPathBuilder {
	return ListConditionsRequestFieldPathBuilder{}
}
func (ListConditionsRequestFieldPathBuilder) Parent() ListConditionsRequestPathSelectorParent {
	return ListConditionsRequestPathSelectorParent{}
}
func (ListConditionsRequestFieldPathBuilder) PageSize() ListConditionsRequestPathSelectorPageSize {
	return ListConditionsRequestPathSelectorPageSize{}
}
func (ListConditionsRequestFieldPathBuilder) PageToken() ListConditionsRequestPathSelectorPageToken {
	return ListConditionsRequestPathSelectorPageToken{}
}
func (ListConditionsRequestFieldPathBuilder) OrderBy() ListConditionsRequestPathSelectorOrderBy {
	return ListConditionsRequestPathSelectorOrderBy{}
}
func (ListConditionsRequestFieldPathBuilder) Filter() ListConditionsRequestPathSelectorFilter {
	return ListConditionsRequestPathSelectorFilter{}
}
func (ListConditionsRequestFieldPathBuilder) FieldMask() ListConditionsRequestPathSelectorFieldMask {
	return ListConditionsRequestPathSelectorFieldMask{}
}
func (ListConditionsRequestFieldPathBuilder) View() ListConditionsRequestPathSelectorView {
	return ListConditionsRequestPathSelectorView{}
}
func (ListConditionsRequestFieldPathBuilder) IncludePagingInfo() ListConditionsRequestPathSelectorIncludePagingInfo {
	return ListConditionsRequestPathSelectorIncludePagingInfo{}
}

type ListConditionsRequestPathSelectorParent struct{}

func (ListConditionsRequestPathSelectorParent) FieldPath() *ListConditionsRequest_FieldTerminalPath {
	return &ListConditionsRequest_FieldTerminalPath{selector: ListConditionsRequest_FieldPathSelectorParent}
}

func (s ListConditionsRequestPathSelectorParent) WithValue(value *condition.ParentName) *ListConditionsRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*ListConditionsRequest_FieldTerminalPathValue)
}

func (s ListConditionsRequestPathSelectorParent) WithArrayOfValues(values []*condition.ParentName) *ListConditionsRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListConditionsRequest_FieldTerminalPathArrayOfValues)
}

type ListConditionsRequestPathSelectorPageSize struct{}

func (ListConditionsRequestPathSelectorPageSize) FieldPath() *ListConditionsRequest_FieldTerminalPath {
	return &ListConditionsRequest_FieldTerminalPath{selector: ListConditionsRequest_FieldPathSelectorPageSize}
}

func (s ListConditionsRequestPathSelectorPageSize) WithValue(value int32) *ListConditionsRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*ListConditionsRequest_FieldTerminalPathValue)
}

func (s ListConditionsRequestPathSelectorPageSize) WithArrayOfValues(values []int32) *ListConditionsRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListConditionsRequest_FieldTerminalPathArrayOfValues)
}

type ListConditionsRequestPathSelectorPageToken struct{}

func (ListConditionsRequestPathSelectorPageToken) FieldPath() *ListConditionsRequest_FieldTerminalPath {
	return &ListConditionsRequest_FieldTerminalPath{selector: ListConditionsRequest_FieldPathSelectorPageToken}
}

func (s ListConditionsRequestPathSelectorPageToken) WithValue(value *condition.PagerCursor) *ListConditionsRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*ListConditionsRequest_FieldTerminalPathValue)
}

func (s ListConditionsRequestPathSelectorPageToken) WithArrayOfValues(values []*condition.PagerCursor) *ListConditionsRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListConditionsRequest_FieldTerminalPathArrayOfValues)
}

type ListConditionsRequestPathSelectorOrderBy struct{}

func (ListConditionsRequestPathSelectorOrderBy) FieldPath() *ListConditionsRequest_FieldTerminalPath {
	return &ListConditionsRequest_FieldTerminalPath{selector: ListConditionsRequest_FieldPathSelectorOrderBy}
}

func (s ListConditionsRequestPathSelectorOrderBy) WithValue(value *condition.OrderBy) *ListConditionsRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*ListConditionsRequest_FieldTerminalPathValue)
}

func (s ListConditionsRequestPathSelectorOrderBy) WithArrayOfValues(values []*condition.OrderBy) *ListConditionsRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListConditionsRequest_FieldTerminalPathArrayOfValues)
}

type ListConditionsRequestPathSelectorFilter struct{}

func (ListConditionsRequestPathSelectorFilter) FieldPath() *ListConditionsRequest_FieldTerminalPath {
	return &ListConditionsRequest_FieldTerminalPath{selector: ListConditionsRequest_FieldPathSelectorFilter}
}

func (s ListConditionsRequestPathSelectorFilter) WithValue(value *condition.Filter) *ListConditionsRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*ListConditionsRequest_FieldTerminalPathValue)
}

func (s ListConditionsRequestPathSelectorFilter) WithArrayOfValues(values []*condition.Filter) *ListConditionsRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListConditionsRequest_FieldTerminalPathArrayOfValues)
}

type ListConditionsRequestPathSelectorFieldMask struct{}

func (ListConditionsRequestPathSelectorFieldMask) FieldPath() *ListConditionsRequest_FieldTerminalPath {
	return &ListConditionsRequest_FieldTerminalPath{selector: ListConditionsRequest_FieldPathSelectorFieldMask}
}

func (s ListConditionsRequestPathSelectorFieldMask) WithValue(value *condition.Condition_FieldMask) *ListConditionsRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*ListConditionsRequest_FieldTerminalPathValue)
}

func (s ListConditionsRequestPathSelectorFieldMask) WithArrayOfValues(values []*condition.Condition_FieldMask) *ListConditionsRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListConditionsRequest_FieldTerminalPathArrayOfValues)
}

type ListConditionsRequestPathSelectorView struct{}

func (ListConditionsRequestPathSelectorView) FieldPath() *ListConditionsRequest_FieldTerminalPath {
	return &ListConditionsRequest_FieldTerminalPath{selector: ListConditionsRequest_FieldPathSelectorView}
}

func (s ListConditionsRequestPathSelectorView) WithValue(value view.View) *ListConditionsRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*ListConditionsRequest_FieldTerminalPathValue)
}

func (s ListConditionsRequestPathSelectorView) WithArrayOfValues(values []view.View) *ListConditionsRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListConditionsRequest_FieldTerminalPathArrayOfValues)
}

type ListConditionsRequestPathSelectorIncludePagingInfo struct{}

func (ListConditionsRequestPathSelectorIncludePagingInfo) FieldPath() *ListConditionsRequest_FieldTerminalPath {
	return &ListConditionsRequest_FieldTerminalPath{selector: ListConditionsRequest_FieldPathSelectorIncludePagingInfo}
}

func (s ListConditionsRequestPathSelectorIncludePagingInfo) WithValue(value bool) *ListConditionsRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*ListConditionsRequest_FieldTerminalPathValue)
}

func (s ListConditionsRequestPathSelectorIncludePagingInfo) WithArrayOfValues(values []bool) *ListConditionsRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListConditionsRequest_FieldTerminalPathArrayOfValues)
}

type ListConditionsResponseFieldPathBuilder struct{}

func NewListConditionsResponseFieldPathBuilder() ListConditionsResponseFieldPathBuilder {
	return ListConditionsResponseFieldPathBuilder{}
}
func (ListConditionsResponseFieldPathBuilder) Conditions() ListConditionsResponsePathSelectorConditions {
	return ListConditionsResponsePathSelectorConditions{}
}
func (ListConditionsResponseFieldPathBuilder) PrevPageToken() ListConditionsResponsePathSelectorPrevPageToken {
	return ListConditionsResponsePathSelectorPrevPageToken{}
}
func (ListConditionsResponseFieldPathBuilder) NextPageToken() ListConditionsResponsePathSelectorNextPageToken {
	return ListConditionsResponsePathSelectorNextPageToken{}
}
func (ListConditionsResponseFieldPathBuilder) CurrentOffset() ListConditionsResponsePathSelectorCurrentOffset {
	return ListConditionsResponsePathSelectorCurrentOffset{}
}
func (ListConditionsResponseFieldPathBuilder) TotalResultsCount() ListConditionsResponsePathSelectorTotalResultsCount {
	return ListConditionsResponsePathSelectorTotalResultsCount{}
}

type ListConditionsResponsePathSelectorConditions struct{}

func (ListConditionsResponsePathSelectorConditions) FieldPath() *ListConditionsResponse_FieldTerminalPath {
	return &ListConditionsResponse_FieldTerminalPath{selector: ListConditionsResponse_FieldPathSelectorConditions}
}

func (s ListConditionsResponsePathSelectorConditions) WithValue(value []*condition.Condition) *ListConditionsResponse_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*ListConditionsResponse_FieldTerminalPathValue)
}

func (s ListConditionsResponsePathSelectorConditions) WithArrayOfValues(values [][]*condition.Condition) *ListConditionsResponse_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListConditionsResponse_FieldTerminalPathArrayOfValues)
}

func (s ListConditionsResponsePathSelectorConditions) WithItemValue(value *condition.Condition) *ListConditionsResponse_FieldTerminalPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*ListConditionsResponse_FieldTerminalPathArrayItemValue)
}
func (ListConditionsResponsePathSelectorConditions) WithSubPath(subPath condition.Condition_FieldPath) *ListConditionsResponse_FieldSubPath {
	return &ListConditionsResponse_FieldSubPath{selector: ListConditionsResponse_FieldPathSelectorConditions, subPath: subPath}
}

func (s ListConditionsResponsePathSelectorConditions) WithSubValue(subPathValue condition.Condition_FieldPathValue) *ListConditionsResponse_FieldSubPathValue {
	return &ListConditionsResponse_FieldSubPathValue{ListConditionsResponse_FieldPath: s.WithSubPath(subPathValue), subPathValue: subPathValue}
}

func (s ListConditionsResponsePathSelectorConditions) WithSubArrayOfValues(subPathArrayOfValues condition.Condition_FieldPathArrayOfValues) *ListConditionsResponse_FieldSubPathArrayOfValues {
	return &ListConditionsResponse_FieldSubPathArrayOfValues{ListConditionsResponse_FieldPath: s.WithSubPath(subPathArrayOfValues), subPathArrayOfValues: subPathArrayOfValues}
}

func (s ListConditionsResponsePathSelectorConditions) WithSubArrayItemValue(subPathArrayItemValue condition.Condition_FieldPathArrayItemValue) *ListConditionsResponse_FieldSubPathArrayItemValue {
	return &ListConditionsResponse_FieldSubPathArrayItemValue{ListConditionsResponse_FieldPath: s.WithSubPath(subPathArrayItemValue), subPathItemValue: subPathArrayItemValue}
}

func (ListConditionsResponsePathSelectorConditions) Name() ListConditionsResponsePathSelectorConditionsName {
	return ListConditionsResponsePathSelectorConditionsName{}
}

func (ListConditionsResponsePathSelectorConditions) DisplayName() ListConditionsResponsePathSelectorConditionsDisplayName {
	return ListConditionsResponsePathSelectorConditionsDisplayName{}
}

func (ListConditionsResponsePathSelectorConditions) Description() ListConditionsResponsePathSelectorConditionsDescription {
	return ListConditionsResponsePathSelectorConditionsDescription{}
}

func (ListConditionsResponsePathSelectorConditions) Expression() ListConditionsResponsePathSelectorConditionsExpression {
	return ListConditionsResponsePathSelectorConditionsExpression{}
}

func (ListConditionsResponsePathSelectorConditions) ParameterDeclarations() ListConditionsResponsePathSelectorConditionsParameterDeclarations {
	return ListConditionsResponsePathSelectorConditionsParameterDeclarations{}
}

type ListConditionsResponsePathSelectorConditionsName struct{}

func (ListConditionsResponsePathSelectorConditionsName) FieldPath() *ListConditionsResponse_FieldSubPath {
	return &ListConditionsResponse_FieldSubPath{
		selector: ListConditionsResponse_FieldPathSelectorConditions,
		subPath:  condition.NewConditionFieldPathBuilder().Name().FieldPath(),
	}
}

func (s ListConditionsResponsePathSelectorConditionsName) WithValue(value *condition.Name) *ListConditionsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListConditionsResponse_FieldSubPathValue)
}

func (s ListConditionsResponsePathSelectorConditionsName) WithArrayOfValues(values []*condition.Name) *ListConditionsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListConditionsResponse_FieldSubPathArrayOfValues)
}

type ListConditionsResponsePathSelectorConditionsDisplayName struct{}

func (ListConditionsResponsePathSelectorConditionsDisplayName) FieldPath() *ListConditionsResponse_FieldSubPath {
	return &ListConditionsResponse_FieldSubPath{
		selector: ListConditionsResponse_FieldPathSelectorConditions,
		subPath:  condition.NewConditionFieldPathBuilder().DisplayName().FieldPath(),
	}
}

func (s ListConditionsResponsePathSelectorConditionsDisplayName) WithValue(value string) *ListConditionsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListConditionsResponse_FieldSubPathValue)
}

func (s ListConditionsResponsePathSelectorConditionsDisplayName) WithArrayOfValues(values []string) *ListConditionsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListConditionsResponse_FieldSubPathArrayOfValues)
}

type ListConditionsResponsePathSelectorConditionsDescription struct{}

func (ListConditionsResponsePathSelectorConditionsDescription) FieldPath() *ListConditionsResponse_FieldSubPath {
	return &ListConditionsResponse_FieldSubPath{
		selector: ListConditionsResponse_FieldPathSelectorConditions,
		subPath:  condition.NewConditionFieldPathBuilder().Description().FieldPath(),
	}
}

func (s ListConditionsResponsePathSelectorConditionsDescription) WithValue(value string) *ListConditionsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListConditionsResponse_FieldSubPathValue)
}

func (s ListConditionsResponsePathSelectorConditionsDescription) WithArrayOfValues(values []string) *ListConditionsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListConditionsResponse_FieldSubPathArrayOfValues)
}

type ListConditionsResponsePathSelectorConditionsExpression struct{}

func (ListConditionsResponsePathSelectorConditionsExpression) FieldPath() *ListConditionsResponse_FieldSubPath {
	return &ListConditionsResponse_FieldSubPath{
		selector: ListConditionsResponse_FieldPathSelectorConditions,
		subPath:  condition.NewConditionFieldPathBuilder().Expression().FieldPath(),
	}
}

func (s ListConditionsResponsePathSelectorConditionsExpression) WithValue(value string) *ListConditionsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListConditionsResponse_FieldSubPathValue)
}

func (s ListConditionsResponsePathSelectorConditionsExpression) WithArrayOfValues(values []string) *ListConditionsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListConditionsResponse_FieldSubPathArrayOfValues)
}

type ListConditionsResponsePathSelectorConditionsParameterDeclarations struct{}

func (ListConditionsResponsePathSelectorConditionsParameterDeclarations) FieldPath() *ListConditionsResponse_FieldSubPath {
	return &ListConditionsResponse_FieldSubPath{
		selector: ListConditionsResponse_FieldPathSelectorConditions,
		subPath:  condition.NewConditionFieldPathBuilder().ParameterDeclarations().FieldPath(),
	}
}

func (s ListConditionsResponsePathSelectorConditionsParameterDeclarations) WithValue(value []*condition.Condition_ParameterDeclaration) *ListConditionsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListConditionsResponse_FieldSubPathValue)
}

func (s ListConditionsResponsePathSelectorConditionsParameterDeclarations) WithArrayOfValues(values [][]*condition.Condition_ParameterDeclaration) *ListConditionsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListConditionsResponse_FieldSubPathArrayOfValues)
}

func (s ListConditionsResponsePathSelectorConditionsParameterDeclarations) WithItemValue(value *condition.Condition_ParameterDeclaration) *ListConditionsResponse_FieldSubPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*ListConditionsResponse_FieldSubPathArrayItemValue)
}

func (ListConditionsResponsePathSelectorConditionsParameterDeclarations) Key() ListConditionsResponsePathSelectorConditionsParameterDeclarationsKey {
	return ListConditionsResponsePathSelectorConditionsParameterDeclarationsKey{}
}

func (ListConditionsResponsePathSelectorConditionsParameterDeclarations) Type() ListConditionsResponsePathSelectorConditionsParameterDeclarationsType {
	return ListConditionsResponsePathSelectorConditionsParameterDeclarationsType{}
}

type ListConditionsResponsePathSelectorConditionsParameterDeclarationsKey struct{}

func (ListConditionsResponsePathSelectorConditionsParameterDeclarationsKey) FieldPath() *ListConditionsResponse_FieldSubPath {
	return &ListConditionsResponse_FieldSubPath{
		selector: ListConditionsResponse_FieldPathSelectorConditions,
		subPath:  condition.NewConditionFieldPathBuilder().ParameterDeclarations().Key().FieldPath(),
	}
}

func (s ListConditionsResponsePathSelectorConditionsParameterDeclarationsKey) WithValue(value string) *ListConditionsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListConditionsResponse_FieldSubPathValue)
}

func (s ListConditionsResponsePathSelectorConditionsParameterDeclarationsKey) WithArrayOfValues(values []string) *ListConditionsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListConditionsResponse_FieldSubPathArrayOfValues)
}

type ListConditionsResponsePathSelectorConditionsParameterDeclarationsType struct{}

func (ListConditionsResponsePathSelectorConditionsParameterDeclarationsType) FieldPath() *ListConditionsResponse_FieldSubPath {
	return &ListConditionsResponse_FieldSubPath{
		selector: ListConditionsResponse_FieldPathSelectorConditions,
		subPath:  condition.NewConditionFieldPathBuilder().ParameterDeclarations().Type().FieldPath(),
	}
}

func (s ListConditionsResponsePathSelectorConditionsParameterDeclarationsType) WithValue(value condition.Condition_ParameterType) *ListConditionsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListConditionsResponse_FieldSubPathValue)
}

func (s ListConditionsResponsePathSelectorConditionsParameterDeclarationsType) WithArrayOfValues(values []condition.Condition_ParameterType) *ListConditionsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListConditionsResponse_FieldSubPathArrayOfValues)
}

type ListConditionsResponsePathSelectorPrevPageToken struct{}

func (ListConditionsResponsePathSelectorPrevPageToken) FieldPath() *ListConditionsResponse_FieldTerminalPath {
	return &ListConditionsResponse_FieldTerminalPath{selector: ListConditionsResponse_FieldPathSelectorPrevPageToken}
}

func (s ListConditionsResponsePathSelectorPrevPageToken) WithValue(value *condition.PagerCursor) *ListConditionsResponse_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*ListConditionsResponse_FieldTerminalPathValue)
}

func (s ListConditionsResponsePathSelectorPrevPageToken) WithArrayOfValues(values []*condition.PagerCursor) *ListConditionsResponse_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListConditionsResponse_FieldTerminalPathArrayOfValues)
}

type ListConditionsResponsePathSelectorNextPageToken struct{}

func (ListConditionsResponsePathSelectorNextPageToken) FieldPath() *ListConditionsResponse_FieldTerminalPath {
	return &ListConditionsResponse_FieldTerminalPath{selector: ListConditionsResponse_FieldPathSelectorNextPageToken}
}

func (s ListConditionsResponsePathSelectorNextPageToken) WithValue(value *condition.PagerCursor) *ListConditionsResponse_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*ListConditionsResponse_FieldTerminalPathValue)
}

func (s ListConditionsResponsePathSelectorNextPageToken) WithArrayOfValues(values []*condition.PagerCursor) *ListConditionsResponse_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListConditionsResponse_FieldTerminalPathArrayOfValues)
}

type ListConditionsResponsePathSelectorCurrentOffset struct{}

func (ListConditionsResponsePathSelectorCurrentOffset) FieldPath() *ListConditionsResponse_FieldTerminalPath {
	return &ListConditionsResponse_FieldTerminalPath{selector: ListConditionsResponse_FieldPathSelectorCurrentOffset}
}

func (s ListConditionsResponsePathSelectorCurrentOffset) WithValue(value int32) *ListConditionsResponse_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*ListConditionsResponse_FieldTerminalPathValue)
}

func (s ListConditionsResponsePathSelectorCurrentOffset) WithArrayOfValues(values []int32) *ListConditionsResponse_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListConditionsResponse_FieldTerminalPathArrayOfValues)
}

type ListConditionsResponsePathSelectorTotalResultsCount struct{}

func (ListConditionsResponsePathSelectorTotalResultsCount) FieldPath() *ListConditionsResponse_FieldTerminalPath {
	return &ListConditionsResponse_FieldTerminalPath{selector: ListConditionsResponse_FieldPathSelectorTotalResultsCount}
}

func (s ListConditionsResponsePathSelectorTotalResultsCount) WithValue(value int32) *ListConditionsResponse_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*ListConditionsResponse_FieldTerminalPathValue)
}

func (s ListConditionsResponsePathSelectorTotalResultsCount) WithArrayOfValues(values []int32) *ListConditionsResponse_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListConditionsResponse_FieldTerminalPathArrayOfValues)
}

type WatchConditionRequestFieldPathBuilder struct{}

func NewWatchConditionRequestFieldPathBuilder() WatchConditionRequestFieldPathBuilder {
	return WatchConditionRequestFieldPathBuilder{}
}
func (WatchConditionRequestFieldPathBuilder) Name() WatchConditionRequestPathSelectorName {
	return WatchConditionRequestPathSelectorName{}
}
func (WatchConditionRequestFieldPathBuilder) FieldMask() WatchConditionRequestPathSelectorFieldMask {
	return WatchConditionRequestPathSelectorFieldMask{}
}
func (WatchConditionRequestFieldPathBuilder) View() WatchConditionRequestPathSelectorView {
	return WatchConditionRequestPathSelectorView{}
}

type WatchConditionRequestPathSelectorName struct{}

func (WatchConditionRequestPathSelectorName) FieldPath() *WatchConditionRequest_FieldTerminalPath {
	return &WatchConditionRequest_FieldTerminalPath{selector: WatchConditionRequest_FieldPathSelectorName}
}

func (s WatchConditionRequestPathSelectorName) WithValue(value *condition.Reference) *WatchConditionRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*WatchConditionRequest_FieldTerminalPathValue)
}

func (s WatchConditionRequestPathSelectorName) WithArrayOfValues(values []*condition.Reference) *WatchConditionRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*WatchConditionRequest_FieldTerminalPathArrayOfValues)
}

type WatchConditionRequestPathSelectorFieldMask struct{}

func (WatchConditionRequestPathSelectorFieldMask) FieldPath() *WatchConditionRequest_FieldTerminalPath {
	return &WatchConditionRequest_FieldTerminalPath{selector: WatchConditionRequest_FieldPathSelectorFieldMask}
}

func (s WatchConditionRequestPathSelectorFieldMask) WithValue(value *condition.Condition_FieldMask) *WatchConditionRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*WatchConditionRequest_FieldTerminalPathValue)
}

func (s WatchConditionRequestPathSelectorFieldMask) WithArrayOfValues(values []*condition.Condition_FieldMask) *WatchConditionRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*WatchConditionRequest_FieldTerminalPathArrayOfValues)
}

type WatchConditionRequestPathSelectorView struct{}

func (WatchConditionRequestPathSelectorView) FieldPath() *WatchConditionRequest_FieldTerminalPath {
	return &WatchConditionRequest_FieldTerminalPath{selector: WatchConditionRequest_FieldPathSelectorView}
}

func (s WatchConditionRequestPathSelectorView) WithValue(value view.View) *WatchConditionRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*WatchConditionRequest_FieldTerminalPathValue)
}

func (s WatchConditionRequestPathSelectorView) WithArrayOfValues(values []view.View) *WatchConditionRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*WatchConditionRequest_FieldTerminalPathArrayOfValues)
}

type WatchConditionResponseFieldPathBuilder struct{}

func NewWatchConditionResponseFieldPathBuilder() WatchConditionResponseFieldPathBuilder {
	return WatchConditionResponseFieldPathBuilder{}
}
func (WatchConditionResponseFieldPathBuilder) Change() WatchConditionResponsePathSelectorChange {
	return WatchConditionResponsePathSelectorChange{}
}

type WatchConditionResponsePathSelectorChange struct{}

func (WatchConditionResponsePathSelectorChange) FieldPath() *WatchConditionResponse_FieldTerminalPath {
	return &WatchConditionResponse_FieldTerminalPath{selector: WatchConditionResponse_FieldPathSelectorChange}
}

func (s WatchConditionResponsePathSelectorChange) WithValue(value *condition.ConditionChange) *WatchConditionResponse_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*WatchConditionResponse_FieldTerminalPathValue)
}

func (s WatchConditionResponsePathSelectorChange) WithArrayOfValues(values []*condition.ConditionChange) *WatchConditionResponse_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*WatchConditionResponse_FieldTerminalPathArrayOfValues)
}

type WatchConditionsRequestFieldPathBuilder struct{}

func NewWatchConditionsRequestFieldPathBuilder() WatchConditionsRequestFieldPathBuilder {
	return WatchConditionsRequestFieldPathBuilder{}
}
func (WatchConditionsRequestFieldPathBuilder) Type() WatchConditionsRequestPathSelectorType {
	return WatchConditionsRequestPathSelectorType{}
}
func (WatchConditionsRequestFieldPathBuilder) Parent() WatchConditionsRequestPathSelectorParent {
	return WatchConditionsRequestPathSelectorParent{}
}
func (WatchConditionsRequestFieldPathBuilder) PageSize() WatchConditionsRequestPathSelectorPageSize {
	return WatchConditionsRequestPathSelectorPageSize{}
}
func (WatchConditionsRequestFieldPathBuilder) PageToken() WatchConditionsRequestPathSelectorPageToken {
	return WatchConditionsRequestPathSelectorPageToken{}
}
func (WatchConditionsRequestFieldPathBuilder) OrderBy() WatchConditionsRequestPathSelectorOrderBy {
	return WatchConditionsRequestPathSelectorOrderBy{}
}
func (WatchConditionsRequestFieldPathBuilder) ResumeToken() WatchConditionsRequestPathSelectorResumeToken {
	return WatchConditionsRequestPathSelectorResumeToken{}
}
func (WatchConditionsRequestFieldPathBuilder) StartingTime() WatchConditionsRequestPathSelectorStartingTime {
	return WatchConditionsRequestPathSelectorStartingTime{}
}
func (WatchConditionsRequestFieldPathBuilder) Filter() WatchConditionsRequestPathSelectorFilter {
	return WatchConditionsRequestPathSelectorFilter{}
}
func (WatchConditionsRequestFieldPathBuilder) FieldMask() WatchConditionsRequestPathSelectorFieldMask {
	return WatchConditionsRequestPathSelectorFieldMask{}
}
func (WatchConditionsRequestFieldPathBuilder) View() WatchConditionsRequestPathSelectorView {
	return WatchConditionsRequestPathSelectorView{}
}
func (WatchConditionsRequestFieldPathBuilder) MaxChunkSize() WatchConditionsRequestPathSelectorMaxChunkSize {
	return WatchConditionsRequestPathSelectorMaxChunkSize{}
}

type WatchConditionsRequestPathSelectorType struct{}

func (WatchConditionsRequestPathSelectorType) FieldPath() *WatchConditionsRequest_FieldTerminalPath {
	return &WatchConditionsRequest_FieldTerminalPath{selector: WatchConditionsRequest_FieldPathSelectorType}
}

func (s WatchConditionsRequestPathSelectorType) WithValue(value watch_type.WatchType) *WatchConditionsRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*WatchConditionsRequest_FieldTerminalPathValue)
}

func (s WatchConditionsRequestPathSelectorType) WithArrayOfValues(values []watch_type.WatchType) *WatchConditionsRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*WatchConditionsRequest_FieldTerminalPathArrayOfValues)
}

type WatchConditionsRequestPathSelectorParent struct{}

func (WatchConditionsRequestPathSelectorParent) FieldPath() *WatchConditionsRequest_FieldTerminalPath {
	return &WatchConditionsRequest_FieldTerminalPath{selector: WatchConditionsRequest_FieldPathSelectorParent}
}

func (s WatchConditionsRequestPathSelectorParent) WithValue(value *condition.ParentReference) *WatchConditionsRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*WatchConditionsRequest_FieldTerminalPathValue)
}

func (s WatchConditionsRequestPathSelectorParent) WithArrayOfValues(values []*condition.ParentReference) *WatchConditionsRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*WatchConditionsRequest_FieldTerminalPathArrayOfValues)
}

type WatchConditionsRequestPathSelectorPageSize struct{}

func (WatchConditionsRequestPathSelectorPageSize) FieldPath() *WatchConditionsRequest_FieldTerminalPath {
	return &WatchConditionsRequest_FieldTerminalPath{selector: WatchConditionsRequest_FieldPathSelectorPageSize}
}

func (s WatchConditionsRequestPathSelectorPageSize) WithValue(value int32) *WatchConditionsRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*WatchConditionsRequest_FieldTerminalPathValue)
}

func (s WatchConditionsRequestPathSelectorPageSize) WithArrayOfValues(values []int32) *WatchConditionsRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*WatchConditionsRequest_FieldTerminalPathArrayOfValues)
}

type WatchConditionsRequestPathSelectorPageToken struct{}

func (WatchConditionsRequestPathSelectorPageToken) FieldPath() *WatchConditionsRequest_FieldTerminalPath {
	return &WatchConditionsRequest_FieldTerminalPath{selector: WatchConditionsRequest_FieldPathSelectorPageToken}
}

func (s WatchConditionsRequestPathSelectorPageToken) WithValue(value *condition.PagerCursor) *WatchConditionsRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*WatchConditionsRequest_FieldTerminalPathValue)
}

func (s WatchConditionsRequestPathSelectorPageToken) WithArrayOfValues(values []*condition.PagerCursor) *WatchConditionsRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*WatchConditionsRequest_FieldTerminalPathArrayOfValues)
}

type WatchConditionsRequestPathSelectorOrderBy struct{}

func (WatchConditionsRequestPathSelectorOrderBy) FieldPath() *WatchConditionsRequest_FieldTerminalPath {
	return &WatchConditionsRequest_FieldTerminalPath{selector: WatchConditionsRequest_FieldPathSelectorOrderBy}
}

func (s WatchConditionsRequestPathSelectorOrderBy) WithValue(value *condition.OrderBy) *WatchConditionsRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*WatchConditionsRequest_FieldTerminalPathValue)
}

func (s WatchConditionsRequestPathSelectorOrderBy) WithArrayOfValues(values []*condition.OrderBy) *WatchConditionsRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*WatchConditionsRequest_FieldTerminalPathArrayOfValues)
}

type WatchConditionsRequestPathSelectorResumeToken struct{}

func (WatchConditionsRequestPathSelectorResumeToken) FieldPath() *WatchConditionsRequest_FieldTerminalPath {
	return &WatchConditionsRequest_FieldTerminalPath{selector: WatchConditionsRequest_FieldPathSelectorResumeToken}
}

func (s WatchConditionsRequestPathSelectorResumeToken) WithValue(value string) *WatchConditionsRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*WatchConditionsRequest_FieldTerminalPathValue)
}

func (s WatchConditionsRequestPathSelectorResumeToken) WithArrayOfValues(values []string) *WatchConditionsRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*WatchConditionsRequest_FieldTerminalPathArrayOfValues)
}

type WatchConditionsRequestPathSelectorStartingTime struct{}

func (WatchConditionsRequestPathSelectorStartingTime) FieldPath() *WatchConditionsRequest_FieldTerminalPath {
	return &WatchConditionsRequest_FieldTerminalPath{selector: WatchConditionsRequest_FieldPathSelectorStartingTime}
}

func (s WatchConditionsRequestPathSelectorStartingTime) WithValue(value *timestamp.Timestamp) *WatchConditionsRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*WatchConditionsRequest_FieldTerminalPathValue)
}

func (s WatchConditionsRequestPathSelectorStartingTime) WithArrayOfValues(values []*timestamp.Timestamp) *WatchConditionsRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*WatchConditionsRequest_FieldTerminalPathArrayOfValues)
}

type WatchConditionsRequestPathSelectorFilter struct{}

func (WatchConditionsRequestPathSelectorFilter) FieldPath() *WatchConditionsRequest_FieldTerminalPath {
	return &WatchConditionsRequest_FieldTerminalPath{selector: WatchConditionsRequest_FieldPathSelectorFilter}
}

func (s WatchConditionsRequestPathSelectorFilter) WithValue(value *condition.Filter) *WatchConditionsRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*WatchConditionsRequest_FieldTerminalPathValue)
}

func (s WatchConditionsRequestPathSelectorFilter) WithArrayOfValues(values []*condition.Filter) *WatchConditionsRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*WatchConditionsRequest_FieldTerminalPathArrayOfValues)
}

type WatchConditionsRequestPathSelectorFieldMask struct{}

func (WatchConditionsRequestPathSelectorFieldMask) FieldPath() *WatchConditionsRequest_FieldTerminalPath {
	return &WatchConditionsRequest_FieldTerminalPath{selector: WatchConditionsRequest_FieldPathSelectorFieldMask}
}

func (s WatchConditionsRequestPathSelectorFieldMask) WithValue(value *condition.Condition_FieldMask) *WatchConditionsRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*WatchConditionsRequest_FieldTerminalPathValue)
}

func (s WatchConditionsRequestPathSelectorFieldMask) WithArrayOfValues(values []*condition.Condition_FieldMask) *WatchConditionsRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*WatchConditionsRequest_FieldTerminalPathArrayOfValues)
}

type WatchConditionsRequestPathSelectorView struct{}

func (WatchConditionsRequestPathSelectorView) FieldPath() *WatchConditionsRequest_FieldTerminalPath {
	return &WatchConditionsRequest_FieldTerminalPath{selector: WatchConditionsRequest_FieldPathSelectorView}
}

func (s WatchConditionsRequestPathSelectorView) WithValue(value view.View) *WatchConditionsRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*WatchConditionsRequest_FieldTerminalPathValue)
}

func (s WatchConditionsRequestPathSelectorView) WithArrayOfValues(values []view.View) *WatchConditionsRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*WatchConditionsRequest_FieldTerminalPathArrayOfValues)
}

type WatchConditionsRequestPathSelectorMaxChunkSize struct{}

func (WatchConditionsRequestPathSelectorMaxChunkSize) FieldPath() *WatchConditionsRequest_FieldTerminalPath {
	return &WatchConditionsRequest_FieldTerminalPath{selector: WatchConditionsRequest_FieldPathSelectorMaxChunkSize}
}

func (s WatchConditionsRequestPathSelectorMaxChunkSize) WithValue(value int32) *WatchConditionsRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*WatchConditionsRequest_FieldTerminalPathValue)
}

func (s WatchConditionsRequestPathSelectorMaxChunkSize) WithArrayOfValues(values []int32) *WatchConditionsRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*WatchConditionsRequest_FieldTerminalPathArrayOfValues)
}

type WatchConditionsResponseFieldPathBuilder struct{}

func NewWatchConditionsResponseFieldPathBuilder() WatchConditionsResponseFieldPathBuilder {
	return WatchConditionsResponseFieldPathBuilder{}
}
func (WatchConditionsResponseFieldPathBuilder) ConditionChanges() WatchConditionsResponsePathSelectorConditionChanges {
	return WatchConditionsResponsePathSelectorConditionChanges{}
}
func (WatchConditionsResponseFieldPathBuilder) IsCurrent() WatchConditionsResponsePathSelectorIsCurrent {
	return WatchConditionsResponsePathSelectorIsCurrent{}
}
func (WatchConditionsResponseFieldPathBuilder) PageTokenChange() WatchConditionsResponsePathSelectorPageTokenChange {
	return WatchConditionsResponsePathSelectorPageTokenChange{}
}
func (WatchConditionsResponseFieldPathBuilder) ResumeToken() WatchConditionsResponsePathSelectorResumeToken {
	return WatchConditionsResponsePathSelectorResumeToken{}
}
func (WatchConditionsResponseFieldPathBuilder) SnapshotSize() WatchConditionsResponsePathSelectorSnapshotSize {
	return WatchConditionsResponsePathSelectorSnapshotSize{}
}
func (WatchConditionsResponseFieldPathBuilder) IsSoftReset() WatchConditionsResponsePathSelectorIsSoftReset {
	return WatchConditionsResponsePathSelectorIsSoftReset{}
}
func (WatchConditionsResponseFieldPathBuilder) IsHardReset() WatchConditionsResponsePathSelectorIsHardReset {
	return WatchConditionsResponsePathSelectorIsHardReset{}
}

type WatchConditionsResponsePathSelectorConditionChanges struct{}

func (WatchConditionsResponsePathSelectorConditionChanges) FieldPath() *WatchConditionsResponse_FieldTerminalPath {
	return &WatchConditionsResponse_FieldTerminalPath{selector: WatchConditionsResponse_FieldPathSelectorConditionChanges}
}

func (s WatchConditionsResponsePathSelectorConditionChanges) WithValue(value []*condition.ConditionChange) *WatchConditionsResponse_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*WatchConditionsResponse_FieldTerminalPathValue)
}

func (s WatchConditionsResponsePathSelectorConditionChanges) WithArrayOfValues(values [][]*condition.ConditionChange) *WatchConditionsResponse_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*WatchConditionsResponse_FieldTerminalPathArrayOfValues)
}

func (s WatchConditionsResponsePathSelectorConditionChanges) WithItemValue(value *condition.ConditionChange) *WatchConditionsResponse_FieldTerminalPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*WatchConditionsResponse_FieldTerminalPathArrayItemValue)
}

type WatchConditionsResponsePathSelectorIsCurrent struct{}

func (WatchConditionsResponsePathSelectorIsCurrent) FieldPath() *WatchConditionsResponse_FieldTerminalPath {
	return &WatchConditionsResponse_FieldTerminalPath{selector: WatchConditionsResponse_FieldPathSelectorIsCurrent}
}

func (s WatchConditionsResponsePathSelectorIsCurrent) WithValue(value bool) *WatchConditionsResponse_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*WatchConditionsResponse_FieldTerminalPathValue)
}

func (s WatchConditionsResponsePathSelectorIsCurrent) WithArrayOfValues(values []bool) *WatchConditionsResponse_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*WatchConditionsResponse_FieldTerminalPathArrayOfValues)
}

type WatchConditionsResponsePathSelectorPageTokenChange struct{}

func (WatchConditionsResponsePathSelectorPageTokenChange) FieldPath() *WatchConditionsResponse_FieldTerminalPath {
	return &WatchConditionsResponse_FieldTerminalPath{selector: WatchConditionsResponse_FieldPathSelectorPageTokenChange}
}

func (s WatchConditionsResponsePathSelectorPageTokenChange) WithValue(value *WatchConditionsResponse_PageTokenChange) *WatchConditionsResponse_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*WatchConditionsResponse_FieldTerminalPathValue)
}

func (s WatchConditionsResponsePathSelectorPageTokenChange) WithArrayOfValues(values []*WatchConditionsResponse_PageTokenChange) *WatchConditionsResponse_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*WatchConditionsResponse_FieldTerminalPathArrayOfValues)
}

func (WatchConditionsResponsePathSelectorPageTokenChange) WithSubPath(subPath WatchConditionsResponsePageTokenChange_FieldPath) *WatchConditionsResponse_FieldSubPath {
	return &WatchConditionsResponse_FieldSubPath{selector: WatchConditionsResponse_FieldPathSelectorPageTokenChange, subPath: subPath}
}

func (s WatchConditionsResponsePathSelectorPageTokenChange) WithSubValue(subPathValue WatchConditionsResponsePageTokenChange_FieldPathValue) *WatchConditionsResponse_FieldSubPathValue {
	return &WatchConditionsResponse_FieldSubPathValue{WatchConditionsResponse_FieldPath: s.WithSubPath(subPathValue), subPathValue: subPathValue}
}

func (s WatchConditionsResponsePathSelectorPageTokenChange) WithSubArrayOfValues(subPathArrayOfValues WatchConditionsResponsePageTokenChange_FieldPathArrayOfValues) *WatchConditionsResponse_FieldSubPathArrayOfValues {
	return &WatchConditionsResponse_FieldSubPathArrayOfValues{WatchConditionsResponse_FieldPath: s.WithSubPath(subPathArrayOfValues), subPathArrayOfValues: subPathArrayOfValues}
}

func (s WatchConditionsResponsePathSelectorPageTokenChange) WithSubArrayItemValue(subPathArrayItemValue WatchConditionsResponsePageTokenChange_FieldPathArrayItemValue) *WatchConditionsResponse_FieldSubPathArrayItemValue {
	return &WatchConditionsResponse_FieldSubPathArrayItemValue{WatchConditionsResponse_FieldPath: s.WithSubPath(subPathArrayItemValue), subPathItemValue: subPathArrayItemValue}
}

func (WatchConditionsResponsePathSelectorPageTokenChange) PrevPageToken() WatchConditionsResponsePathSelectorPageTokenChangePrevPageToken {
	return WatchConditionsResponsePathSelectorPageTokenChangePrevPageToken{}
}

func (WatchConditionsResponsePathSelectorPageTokenChange) NextPageToken() WatchConditionsResponsePathSelectorPageTokenChangeNextPageToken {
	return WatchConditionsResponsePathSelectorPageTokenChangeNextPageToken{}
}

type WatchConditionsResponsePathSelectorPageTokenChangePrevPageToken struct{}

func (WatchConditionsResponsePathSelectorPageTokenChangePrevPageToken) FieldPath() *WatchConditionsResponse_FieldSubPath {
	return &WatchConditionsResponse_FieldSubPath{
		selector: WatchConditionsResponse_FieldPathSelectorPageTokenChange,
		subPath:  NewWatchConditionsResponsePageTokenChangeFieldPathBuilder().PrevPageToken().FieldPath(),
	}
}

func (s WatchConditionsResponsePathSelectorPageTokenChangePrevPageToken) WithValue(value *condition.PagerCursor) *WatchConditionsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*WatchConditionsResponse_FieldSubPathValue)
}

func (s WatchConditionsResponsePathSelectorPageTokenChangePrevPageToken) WithArrayOfValues(values []*condition.PagerCursor) *WatchConditionsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*WatchConditionsResponse_FieldSubPathArrayOfValues)
}

type WatchConditionsResponsePathSelectorPageTokenChangeNextPageToken struct{}

func (WatchConditionsResponsePathSelectorPageTokenChangeNextPageToken) FieldPath() *WatchConditionsResponse_FieldSubPath {
	return &WatchConditionsResponse_FieldSubPath{
		selector: WatchConditionsResponse_FieldPathSelectorPageTokenChange,
		subPath:  NewWatchConditionsResponsePageTokenChangeFieldPathBuilder().NextPageToken().FieldPath(),
	}
}

func (s WatchConditionsResponsePathSelectorPageTokenChangeNextPageToken) WithValue(value *condition.PagerCursor) *WatchConditionsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*WatchConditionsResponse_FieldSubPathValue)
}

func (s WatchConditionsResponsePathSelectorPageTokenChangeNextPageToken) WithArrayOfValues(values []*condition.PagerCursor) *WatchConditionsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*WatchConditionsResponse_FieldSubPathArrayOfValues)
}

type WatchConditionsResponsePathSelectorResumeToken struct{}

func (WatchConditionsResponsePathSelectorResumeToken) FieldPath() *WatchConditionsResponse_FieldTerminalPath {
	return &WatchConditionsResponse_FieldTerminalPath{selector: WatchConditionsResponse_FieldPathSelectorResumeToken}
}

func (s WatchConditionsResponsePathSelectorResumeToken) WithValue(value string) *WatchConditionsResponse_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*WatchConditionsResponse_FieldTerminalPathValue)
}

func (s WatchConditionsResponsePathSelectorResumeToken) WithArrayOfValues(values []string) *WatchConditionsResponse_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*WatchConditionsResponse_FieldTerminalPathArrayOfValues)
}

type WatchConditionsResponsePathSelectorSnapshotSize struct{}

func (WatchConditionsResponsePathSelectorSnapshotSize) FieldPath() *WatchConditionsResponse_FieldTerminalPath {
	return &WatchConditionsResponse_FieldTerminalPath{selector: WatchConditionsResponse_FieldPathSelectorSnapshotSize}
}

func (s WatchConditionsResponsePathSelectorSnapshotSize) WithValue(value int64) *WatchConditionsResponse_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*WatchConditionsResponse_FieldTerminalPathValue)
}

func (s WatchConditionsResponsePathSelectorSnapshotSize) WithArrayOfValues(values []int64) *WatchConditionsResponse_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*WatchConditionsResponse_FieldTerminalPathArrayOfValues)
}

type WatchConditionsResponsePathSelectorIsSoftReset struct{}

func (WatchConditionsResponsePathSelectorIsSoftReset) FieldPath() *WatchConditionsResponse_FieldTerminalPath {
	return &WatchConditionsResponse_FieldTerminalPath{selector: WatchConditionsResponse_FieldPathSelectorIsSoftReset}
}

func (s WatchConditionsResponsePathSelectorIsSoftReset) WithValue(value bool) *WatchConditionsResponse_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*WatchConditionsResponse_FieldTerminalPathValue)
}

func (s WatchConditionsResponsePathSelectorIsSoftReset) WithArrayOfValues(values []bool) *WatchConditionsResponse_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*WatchConditionsResponse_FieldTerminalPathArrayOfValues)
}

type WatchConditionsResponsePathSelectorIsHardReset struct{}

func (WatchConditionsResponsePathSelectorIsHardReset) FieldPath() *WatchConditionsResponse_FieldTerminalPath {
	return &WatchConditionsResponse_FieldTerminalPath{selector: WatchConditionsResponse_FieldPathSelectorIsHardReset}
}

func (s WatchConditionsResponsePathSelectorIsHardReset) WithValue(value bool) *WatchConditionsResponse_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*WatchConditionsResponse_FieldTerminalPathValue)
}

func (s WatchConditionsResponsePathSelectorIsHardReset) WithArrayOfValues(values []bool) *WatchConditionsResponse_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*WatchConditionsResponse_FieldTerminalPathArrayOfValues)
}

type WatchConditionsResponsePageTokenChangeFieldPathBuilder struct{}

func NewWatchConditionsResponsePageTokenChangeFieldPathBuilder() WatchConditionsResponsePageTokenChangeFieldPathBuilder {
	return WatchConditionsResponsePageTokenChangeFieldPathBuilder{}
}
func (WatchConditionsResponsePageTokenChangeFieldPathBuilder) PrevPageToken() WatchConditionsResponse_PageTokenChangePathSelectorPrevPageToken {
	return WatchConditionsResponse_PageTokenChangePathSelectorPrevPageToken{}
}
func (WatchConditionsResponsePageTokenChangeFieldPathBuilder) NextPageToken() WatchConditionsResponse_PageTokenChangePathSelectorNextPageToken {
	return WatchConditionsResponse_PageTokenChangePathSelectorNextPageToken{}
}

type WatchConditionsResponse_PageTokenChangePathSelectorPrevPageToken struct{}

func (WatchConditionsResponse_PageTokenChangePathSelectorPrevPageToken) FieldPath() *WatchConditionsResponsePageTokenChange_FieldTerminalPath {
	return &WatchConditionsResponsePageTokenChange_FieldTerminalPath{selector: WatchConditionsResponsePageTokenChange_FieldPathSelectorPrevPageToken}
}

func (s WatchConditionsResponse_PageTokenChangePathSelectorPrevPageToken) WithValue(value *condition.PagerCursor) *WatchConditionsResponsePageTokenChange_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*WatchConditionsResponsePageTokenChange_FieldTerminalPathValue)
}

func (s WatchConditionsResponse_PageTokenChangePathSelectorPrevPageToken) WithArrayOfValues(values []*condition.PagerCursor) *WatchConditionsResponsePageTokenChange_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*WatchConditionsResponsePageTokenChange_FieldTerminalPathArrayOfValues)
}

type WatchConditionsResponse_PageTokenChangePathSelectorNextPageToken struct{}

func (WatchConditionsResponse_PageTokenChangePathSelectorNextPageToken) FieldPath() *WatchConditionsResponsePageTokenChange_FieldTerminalPath {
	return &WatchConditionsResponsePageTokenChange_FieldTerminalPath{selector: WatchConditionsResponsePageTokenChange_FieldPathSelectorNextPageToken}
}

func (s WatchConditionsResponse_PageTokenChangePathSelectorNextPageToken) WithValue(value *condition.PagerCursor) *WatchConditionsResponsePageTokenChange_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*WatchConditionsResponsePageTokenChange_FieldTerminalPathValue)
}

func (s WatchConditionsResponse_PageTokenChangePathSelectorNextPageToken) WithArrayOfValues(values []*condition.PagerCursor) *WatchConditionsResponsePageTokenChange_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*WatchConditionsResponsePageTokenChange_FieldTerminalPathArrayOfValues)
}

type CreateConditionRequestFieldPathBuilder struct{}

func NewCreateConditionRequestFieldPathBuilder() CreateConditionRequestFieldPathBuilder {
	return CreateConditionRequestFieldPathBuilder{}
}
func (CreateConditionRequestFieldPathBuilder) Parent() CreateConditionRequestPathSelectorParent {
	return CreateConditionRequestPathSelectorParent{}
}
func (CreateConditionRequestFieldPathBuilder) Condition() CreateConditionRequestPathSelectorCondition {
	return CreateConditionRequestPathSelectorCondition{}
}

type CreateConditionRequestPathSelectorParent struct{}

func (CreateConditionRequestPathSelectorParent) FieldPath() *CreateConditionRequest_FieldTerminalPath {
	return &CreateConditionRequest_FieldTerminalPath{selector: CreateConditionRequest_FieldPathSelectorParent}
}

func (s CreateConditionRequestPathSelectorParent) WithValue(value *condition.ParentReference) *CreateConditionRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*CreateConditionRequest_FieldTerminalPathValue)
}

func (s CreateConditionRequestPathSelectorParent) WithArrayOfValues(values []*condition.ParentReference) *CreateConditionRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CreateConditionRequest_FieldTerminalPathArrayOfValues)
}

type CreateConditionRequestPathSelectorCondition struct{}

func (CreateConditionRequestPathSelectorCondition) FieldPath() *CreateConditionRequest_FieldTerminalPath {
	return &CreateConditionRequest_FieldTerminalPath{selector: CreateConditionRequest_FieldPathSelectorCondition}
}

func (s CreateConditionRequestPathSelectorCondition) WithValue(value *condition.Condition) *CreateConditionRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*CreateConditionRequest_FieldTerminalPathValue)
}

func (s CreateConditionRequestPathSelectorCondition) WithArrayOfValues(values []*condition.Condition) *CreateConditionRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CreateConditionRequest_FieldTerminalPathArrayOfValues)
}

func (CreateConditionRequestPathSelectorCondition) WithSubPath(subPath condition.Condition_FieldPath) *CreateConditionRequest_FieldSubPath {
	return &CreateConditionRequest_FieldSubPath{selector: CreateConditionRequest_FieldPathSelectorCondition, subPath: subPath}
}

func (s CreateConditionRequestPathSelectorCondition) WithSubValue(subPathValue condition.Condition_FieldPathValue) *CreateConditionRequest_FieldSubPathValue {
	return &CreateConditionRequest_FieldSubPathValue{CreateConditionRequest_FieldPath: s.WithSubPath(subPathValue), subPathValue: subPathValue}
}

func (s CreateConditionRequestPathSelectorCondition) WithSubArrayOfValues(subPathArrayOfValues condition.Condition_FieldPathArrayOfValues) *CreateConditionRequest_FieldSubPathArrayOfValues {
	return &CreateConditionRequest_FieldSubPathArrayOfValues{CreateConditionRequest_FieldPath: s.WithSubPath(subPathArrayOfValues), subPathArrayOfValues: subPathArrayOfValues}
}

func (s CreateConditionRequestPathSelectorCondition) WithSubArrayItemValue(subPathArrayItemValue condition.Condition_FieldPathArrayItemValue) *CreateConditionRequest_FieldSubPathArrayItemValue {
	return &CreateConditionRequest_FieldSubPathArrayItemValue{CreateConditionRequest_FieldPath: s.WithSubPath(subPathArrayItemValue), subPathItemValue: subPathArrayItemValue}
}

func (CreateConditionRequestPathSelectorCondition) Name() CreateConditionRequestPathSelectorConditionName {
	return CreateConditionRequestPathSelectorConditionName{}
}

func (CreateConditionRequestPathSelectorCondition) DisplayName() CreateConditionRequestPathSelectorConditionDisplayName {
	return CreateConditionRequestPathSelectorConditionDisplayName{}
}

func (CreateConditionRequestPathSelectorCondition) Description() CreateConditionRequestPathSelectorConditionDescription {
	return CreateConditionRequestPathSelectorConditionDescription{}
}

func (CreateConditionRequestPathSelectorCondition) Expression() CreateConditionRequestPathSelectorConditionExpression {
	return CreateConditionRequestPathSelectorConditionExpression{}
}

func (CreateConditionRequestPathSelectorCondition) ParameterDeclarations() CreateConditionRequestPathSelectorConditionParameterDeclarations {
	return CreateConditionRequestPathSelectorConditionParameterDeclarations{}
}

type CreateConditionRequestPathSelectorConditionName struct{}

func (CreateConditionRequestPathSelectorConditionName) FieldPath() *CreateConditionRequest_FieldSubPath {
	return &CreateConditionRequest_FieldSubPath{
		selector: CreateConditionRequest_FieldPathSelectorCondition,
		subPath:  condition.NewConditionFieldPathBuilder().Name().FieldPath(),
	}
}

func (s CreateConditionRequestPathSelectorConditionName) WithValue(value *condition.Name) *CreateConditionRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*CreateConditionRequest_FieldSubPathValue)
}

func (s CreateConditionRequestPathSelectorConditionName) WithArrayOfValues(values []*condition.Name) *CreateConditionRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CreateConditionRequest_FieldSubPathArrayOfValues)
}

type CreateConditionRequestPathSelectorConditionDisplayName struct{}

func (CreateConditionRequestPathSelectorConditionDisplayName) FieldPath() *CreateConditionRequest_FieldSubPath {
	return &CreateConditionRequest_FieldSubPath{
		selector: CreateConditionRequest_FieldPathSelectorCondition,
		subPath:  condition.NewConditionFieldPathBuilder().DisplayName().FieldPath(),
	}
}

func (s CreateConditionRequestPathSelectorConditionDisplayName) WithValue(value string) *CreateConditionRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*CreateConditionRequest_FieldSubPathValue)
}

func (s CreateConditionRequestPathSelectorConditionDisplayName) WithArrayOfValues(values []string) *CreateConditionRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CreateConditionRequest_FieldSubPathArrayOfValues)
}

type CreateConditionRequestPathSelectorConditionDescription struct{}

func (CreateConditionRequestPathSelectorConditionDescription) FieldPath() *CreateConditionRequest_FieldSubPath {
	return &CreateConditionRequest_FieldSubPath{
		selector: CreateConditionRequest_FieldPathSelectorCondition,
		subPath:  condition.NewConditionFieldPathBuilder().Description().FieldPath(),
	}
}

func (s CreateConditionRequestPathSelectorConditionDescription) WithValue(value string) *CreateConditionRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*CreateConditionRequest_FieldSubPathValue)
}

func (s CreateConditionRequestPathSelectorConditionDescription) WithArrayOfValues(values []string) *CreateConditionRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CreateConditionRequest_FieldSubPathArrayOfValues)
}

type CreateConditionRequestPathSelectorConditionExpression struct{}

func (CreateConditionRequestPathSelectorConditionExpression) FieldPath() *CreateConditionRequest_FieldSubPath {
	return &CreateConditionRequest_FieldSubPath{
		selector: CreateConditionRequest_FieldPathSelectorCondition,
		subPath:  condition.NewConditionFieldPathBuilder().Expression().FieldPath(),
	}
}

func (s CreateConditionRequestPathSelectorConditionExpression) WithValue(value string) *CreateConditionRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*CreateConditionRequest_FieldSubPathValue)
}

func (s CreateConditionRequestPathSelectorConditionExpression) WithArrayOfValues(values []string) *CreateConditionRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CreateConditionRequest_FieldSubPathArrayOfValues)
}

type CreateConditionRequestPathSelectorConditionParameterDeclarations struct{}

func (CreateConditionRequestPathSelectorConditionParameterDeclarations) FieldPath() *CreateConditionRequest_FieldSubPath {
	return &CreateConditionRequest_FieldSubPath{
		selector: CreateConditionRequest_FieldPathSelectorCondition,
		subPath:  condition.NewConditionFieldPathBuilder().ParameterDeclarations().FieldPath(),
	}
}

func (s CreateConditionRequestPathSelectorConditionParameterDeclarations) WithValue(value []*condition.Condition_ParameterDeclaration) *CreateConditionRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*CreateConditionRequest_FieldSubPathValue)
}

func (s CreateConditionRequestPathSelectorConditionParameterDeclarations) WithArrayOfValues(values [][]*condition.Condition_ParameterDeclaration) *CreateConditionRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CreateConditionRequest_FieldSubPathArrayOfValues)
}

func (s CreateConditionRequestPathSelectorConditionParameterDeclarations) WithItemValue(value *condition.Condition_ParameterDeclaration) *CreateConditionRequest_FieldSubPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*CreateConditionRequest_FieldSubPathArrayItemValue)
}

func (CreateConditionRequestPathSelectorConditionParameterDeclarations) Key() CreateConditionRequestPathSelectorConditionParameterDeclarationsKey {
	return CreateConditionRequestPathSelectorConditionParameterDeclarationsKey{}
}

func (CreateConditionRequestPathSelectorConditionParameterDeclarations) Type() CreateConditionRequestPathSelectorConditionParameterDeclarationsType {
	return CreateConditionRequestPathSelectorConditionParameterDeclarationsType{}
}

type CreateConditionRequestPathSelectorConditionParameterDeclarationsKey struct{}

func (CreateConditionRequestPathSelectorConditionParameterDeclarationsKey) FieldPath() *CreateConditionRequest_FieldSubPath {
	return &CreateConditionRequest_FieldSubPath{
		selector: CreateConditionRequest_FieldPathSelectorCondition,
		subPath:  condition.NewConditionFieldPathBuilder().ParameterDeclarations().Key().FieldPath(),
	}
}

func (s CreateConditionRequestPathSelectorConditionParameterDeclarationsKey) WithValue(value string) *CreateConditionRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*CreateConditionRequest_FieldSubPathValue)
}

func (s CreateConditionRequestPathSelectorConditionParameterDeclarationsKey) WithArrayOfValues(values []string) *CreateConditionRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CreateConditionRequest_FieldSubPathArrayOfValues)
}

type CreateConditionRequestPathSelectorConditionParameterDeclarationsType struct{}

func (CreateConditionRequestPathSelectorConditionParameterDeclarationsType) FieldPath() *CreateConditionRequest_FieldSubPath {
	return &CreateConditionRequest_FieldSubPath{
		selector: CreateConditionRequest_FieldPathSelectorCondition,
		subPath:  condition.NewConditionFieldPathBuilder().ParameterDeclarations().Type().FieldPath(),
	}
}

func (s CreateConditionRequestPathSelectorConditionParameterDeclarationsType) WithValue(value condition.Condition_ParameterType) *CreateConditionRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*CreateConditionRequest_FieldSubPathValue)
}

func (s CreateConditionRequestPathSelectorConditionParameterDeclarationsType) WithArrayOfValues(values []condition.Condition_ParameterType) *CreateConditionRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CreateConditionRequest_FieldSubPathArrayOfValues)
}

type UpdateConditionRequestFieldPathBuilder struct{}

func NewUpdateConditionRequestFieldPathBuilder() UpdateConditionRequestFieldPathBuilder {
	return UpdateConditionRequestFieldPathBuilder{}
}
func (UpdateConditionRequestFieldPathBuilder) Condition() UpdateConditionRequestPathSelectorCondition {
	return UpdateConditionRequestPathSelectorCondition{}
}
func (UpdateConditionRequestFieldPathBuilder) UpdateMask() UpdateConditionRequestPathSelectorUpdateMask {
	return UpdateConditionRequestPathSelectorUpdateMask{}
}
func (UpdateConditionRequestFieldPathBuilder) Cas() UpdateConditionRequestPathSelectorCas {
	return UpdateConditionRequestPathSelectorCas{}
}

type UpdateConditionRequestPathSelectorCondition struct{}

func (UpdateConditionRequestPathSelectorCondition) FieldPath() *UpdateConditionRequest_FieldTerminalPath {
	return &UpdateConditionRequest_FieldTerminalPath{selector: UpdateConditionRequest_FieldPathSelectorCondition}
}

func (s UpdateConditionRequestPathSelectorCondition) WithValue(value *condition.Condition) *UpdateConditionRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateConditionRequest_FieldTerminalPathValue)
}

func (s UpdateConditionRequestPathSelectorCondition) WithArrayOfValues(values []*condition.Condition) *UpdateConditionRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateConditionRequest_FieldTerminalPathArrayOfValues)
}

func (UpdateConditionRequestPathSelectorCondition) WithSubPath(subPath condition.Condition_FieldPath) *UpdateConditionRequest_FieldSubPath {
	return &UpdateConditionRequest_FieldSubPath{selector: UpdateConditionRequest_FieldPathSelectorCondition, subPath: subPath}
}

func (s UpdateConditionRequestPathSelectorCondition) WithSubValue(subPathValue condition.Condition_FieldPathValue) *UpdateConditionRequest_FieldSubPathValue {
	return &UpdateConditionRequest_FieldSubPathValue{UpdateConditionRequest_FieldPath: s.WithSubPath(subPathValue), subPathValue: subPathValue}
}

func (s UpdateConditionRequestPathSelectorCondition) WithSubArrayOfValues(subPathArrayOfValues condition.Condition_FieldPathArrayOfValues) *UpdateConditionRequest_FieldSubPathArrayOfValues {
	return &UpdateConditionRequest_FieldSubPathArrayOfValues{UpdateConditionRequest_FieldPath: s.WithSubPath(subPathArrayOfValues), subPathArrayOfValues: subPathArrayOfValues}
}

func (s UpdateConditionRequestPathSelectorCondition) WithSubArrayItemValue(subPathArrayItemValue condition.Condition_FieldPathArrayItemValue) *UpdateConditionRequest_FieldSubPathArrayItemValue {
	return &UpdateConditionRequest_FieldSubPathArrayItemValue{UpdateConditionRequest_FieldPath: s.WithSubPath(subPathArrayItemValue), subPathItemValue: subPathArrayItemValue}
}

func (UpdateConditionRequestPathSelectorCondition) Name() UpdateConditionRequestPathSelectorConditionName {
	return UpdateConditionRequestPathSelectorConditionName{}
}

func (UpdateConditionRequestPathSelectorCondition) DisplayName() UpdateConditionRequestPathSelectorConditionDisplayName {
	return UpdateConditionRequestPathSelectorConditionDisplayName{}
}

func (UpdateConditionRequestPathSelectorCondition) Description() UpdateConditionRequestPathSelectorConditionDescription {
	return UpdateConditionRequestPathSelectorConditionDescription{}
}

func (UpdateConditionRequestPathSelectorCondition) Expression() UpdateConditionRequestPathSelectorConditionExpression {
	return UpdateConditionRequestPathSelectorConditionExpression{}
}

func (UpdateConditionRequestPathSelectorCondition) ParameterDeclarations() UpdateConditionRequestPathSelectorConditionParameterDeclarations {
	return UpdateConditionRequestPathSelectorConditionParameterDeclarations{}
}

type UpdateConditionRequestPathSelectorConditionName struct{}

func (UpdateConditionRequestPathSelectorConditionName) FieldPath() *UpdateConditionRequest_FieldSubPath {
	return &UpdateConditionRequest_FieldSubPath{
		selector: UpdateConditionRequest_FieldPathSelectorCondition,
		subPath:  condition.NewConditionFieldPathBuilder().Name().FieldPath(),
	}
}

func (s UpdateConditionRequestPathSelectorConditionName) WithValue(value *condition.Name) *UpdateConditionRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateConditionRequest_FieldSubPathValue)
}

func (s UpdateConditionRequestPathSelectorConditionName) WithArrayOfValues(values []*condition.Name) *UpdateConditionRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateConditionRequest_FieldSubPathArrayOfValues)
}

type UpdateConditionRequestPathSelectorConditionDisplayName struct{}

func (UpdateConditionRequestPathSelectorConditionDisplayName) FieldPath() *UpdateConditionRequest_FieldSubPath {
	return &UpdateConditionRequest_FieldSubPath{
		selector: UpdateConditionRequest_FieldPathSelectorCondition,
		subPath:  condition.NewConditionFieldPathBuilder().DisplayName().FieldPath(),
	}
}

func (s UpdateConditionRequestPathSelectorConditionDisplayName) WithValue(value string) *UpdateConditionRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateConditionRequest_FieldSubPathValue)
}

func (s UpdateConditionRequestPathSelectorConditionDisplayName) WithArrayOfValues(values []string) *UpdateConditionRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateConditionRequest_FieldSubPathArrayOfValues)
}

type UpdateConditionRequestPathSelectorConditionDescription struct{}

func (UpdateConditionRequestPathSelectorConditionDescription) FieldPath() *UpdateConditionRequest_FieldSubPath {
	return &UpdateConditionRequest_FieldSubPath{
		selector: UpdateConditionRequest_FieldPathSelectorCondition,
		subPath:  condition.NewConditionFieldPathBuilder().Description().FieldPath(),
	}
}

func (s UpdateConditionRequestPathSelectorConditionDescription) WithValue(value string) *UpdateConditionRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateConditionRequest_FieldSubPathValue)
}

func (s UpdateConditionRequestPathSelectorConditionDescription) WithArrayOfValues(values []string) *UpdateConditionRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateConditionRequest_FieldSubPathArrayOfValues)
}

type UpdateConditionRequestPathSelectorConditionExpression struct{}

func (UpdateConditionRequestPathSelectorConditionExpression) FieldPath() *UpdateConditionRequest_FieldSubPath {
	return &UpdateConditionRequest_FieldSubPath{
		selector: UpdateConditionRequest_FieldPathSelectorCondition,
		subPath:  condition.NewConditionFieldPathBuilder().Expression().FieldPath(),
	}
}

func (s UpdateConditionRequestPathSelectorConditionExpression) WithValue(value string) *UpdateConditionRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateConditionRequest_FieldSubPathValue)
}

func (s UpdateConditionRequestPathSelectorConditionExpression) WithArrayOfValues(values []string) *UpdateConditionRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateConditionRequest_FieldSubPathArrayOfValues)
}

type UpdateConditionRequestPathSelectorConditionParameterDeclarations struct{}

func (UpdateConditionRequestPathSelectorConditionParameterDeclarations) FieldPath() *UpdateConditionRequest_FieldSubPath {
	return &UpdateConditionRequest_FieldSubPath{
		selector: UpdateConditionRequest_FieldPathSelectorCondition,
		subPath:  condition.NewConditionFieldPathBuilder().ParameterDeclarations().FieldPath(),
	}
}

func (s UpdateConditionRequestPathSelectorConditionParameterDeclarations) WithValue(value []*condition.Condition_ParameterDeclaration) *UpdateConditionRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateConditionRequest_FieldSubPathValue)
}

func (s UpdateConditionRequestPathSelectorConditionParameterDeclarations) WithArrayOfValues(values [][]*condition.Condition_ParameterDeclaration) *UpdateConditionRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateConditionRequest_FieldSubPathArrayOfValues)
}

func (s UpdateConditionRequestPathSelectorConditionParameterDeclarations) WithItemValue(value *condition.Condition_ParameterDeclaration) *UpdateConditionRequest_FieldSubPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*UpdateConditionRequest_FieldSubPathArrayItemValue)
}

func (UpdateConditionRequestPathSelectorConditionParameterDeclarations) Key() UpdateConditionRequestPathSelectorConditionParameterDeclarationsKey {
	return UpdateConditionRequestPathSelectorConditionParameterDeclarationsKey{}
}

func (UpdateConditionRequestPathSelectorConditionParameterDeclarations) Type() UpdateConditionRequestPathSelectorConditionParameterDeclarationsType {
	return UpdateConditionRequestPathSelectorConditionParameterDeclarationsType{}
}

type UpdateConditionRequestPathSelectorConditionParameterDeclarationsKey struct{}

func (UpdateConditionRequestPathSelectorConditionParameterDeclarationsKey) FieldPath() *UpdateConditionRequest_FieldSubPath {
	return &UpdateConditionRequest_FieldSubPath{
		selector: UpdateConditionRequest_FieldPathSelectorCondition,
		subPath:  condition.NewConditionFieldPathBuilder().ParameterDeclarations().Key().FieldPath(),
	}
}

func (s UpdateConditionRequestPathSelectorConditionParameterDeclarationsKey) WithValue(value string) *UpdateConditionRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateConditionRequest_FieldSubPathValue)
}

func (s UpdateConditionRequestPathSelectorConditionParameterDeclarationsKey) WithArrayOfValues(values []string) *UpdateConditionRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateConditionRequest_FieldSubPathArrayOfValues)
}

type UpdateConditionRequestPathSelectorConditionParameterDeclarationsType struct{}

func (UpdateConditionRequestPathSelectorConditionParameterDeclarationsType) FieldPath() *UpdateConditionRequest_FieldSubPath {
	return &UpdateConditionRequest_FieldSubPath{
		selector: UpdateConditionRequest_FieldPathSelectorCondition,
		subPath:  condition.NewConditionFieldPathBuilder().ParameterDeclarations().Type().FieldPath(),
	}
}

func (s UpdateConditionRequestPathSelectorConditionParameterDeclarationsType) WithValue(value condition.Condition_ParameterType) *UpdateConditionRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateConditionRequest_FieldSubPathValue)
}

func (s UpdateConditionRequestPathSelectorConditionParameterDeclarationsType) WithArrayOfValues(values []condition.Condition_ParameterType) *UpdateConditionRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateConditionRequest_FieldSubPathArrayOfValues)
}

type UpdateConditionRequestPathSelectorUpdateMask struct{}

func (UpdateConditionRequestPathSelectorUpdateMask) FieldPath() *UpdateConditionRequest_FieldTerminalPath {
	return &UpdateConditionRequest_FieldTerminalPath{selector: UpdateConditionRequest_FieldPathSelectorUpdateMask}
}

func (s UpdateConditionRequestPathSelectorUpdateMask) WithValue(value *condition.Condition_FieldMask) *UpdateConditionRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateConditionRequest_FieldTerminalPathValue)
}

func (s UpdateConditionRequestPathSelectorUpdateMask) WithArrayOfValues(values []*condition.Condition_FieldMask) *UpdateConditionRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateConditionRequest_FieldTerminalPathArrayOfValues)
}

type UpdateConditionRequestPathSelectorCas struct{}

func (UpdateConditionRequestPathSelectorCas) FieldPath() *UpdateConditionRequest_FieldTerminalPath {
	return &UpdateConditionRequest_FieldTerminalPath{selector: UpdateConditionRequest_FieldPathSelectorCas}
}

func (s UpdateConditionRequestPathSelectorCas) WithValue(value *UpdateConditionRequest_CAS) *UpdateConditionRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateConditionRequest_FieldTerminalPathValue)
}

func (s UpdateConditionRequestPathSelectorCas) WithArrayOfValues(values []*UpdateConditionRequest_CAS) *UpdateConditionRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateConditionRequest_FieldTerminalPathArrayOfValues)
}

func (UpdateConditionRequestPathSelectorCas) WithSubPath(subPath UpdateConditionRequestCAS_FieldPath) *UpdateConditionRequest_FieldSubPath {
	return &UpdateConditionRequest_FieldSubPath{selector: UpdateConditionRequest_FieldPathSelectorCas, subPath: subPath}
}

func (s UpdateConditionRequestPathSelectorCas) WithSubValue(subPathValue UpdateConditionRequestCAS_FieldPathValue) *UpdateConditionRequest_FieldSubPathValue {
	return &UpdateConditionRequest_FieldSubPathValue{UpdateConditionRequest_FieldPath: s.WithSubPath(subPathValue), subPathValue: subPathValue}
}

func (s UpdateConditionRequestPathSelectorCas) WithSubArrayOfValues(subPathArrayOfValues UpdateConditionRequestCAS_FieldPathArrayOfValues) *UpdateConditionRequest_FieldSubPathArrayOfValues {
	return &UpdateConditionRequest_FieldSubPathArrayOfValues{UpdateConditionRequest_FieldPath: s.WithSubPath(subPathArrayOfValues), subPathArrayOfValues: subPathArrayOfValues}
}

func (s UpdateConditionRequestPathSelectorCas) WithSubArrayItemValue(subPathArrayItemValue UpdateConditionRequestCAS_FieldPathArrayItemValue) *UpdateConditionRequest_FieldSubPathArrayItemValue {
	return &UpdateConditionRequest_FieldSubPathArrayItemValue{UpdateConditionRequest_FieldPath: s.WithSubPath(subPathArrayItemValue), subPathItemValue: subPathArrayItemValue}
}

func (UpdateConditionRequestPathSelectorCas) ConditionalState() UpdateConditionRequestPathSelectorCasConditionalState {
	return UpdateConditionRequestPathSelectorCasConditionalState{}
}

func (UpdateConditionRequestPathSelectorCas) FieldMask() UpdateConditionRequestPathSelectorCasFieldMask {
	return UpdateConditionRequestPathSelectorCasFieldMask{}
}

type UpdateConditionRequestPathSelectorCasConditionalState struct{}

func (UpdateConditionRequestPathSelectorCasConditionalState) FieldPath() *UpdateConditionRequest_FieldSubPath {
	return &UpdateConditionRequest_FieldSubPath{
		selector: UpdateConditionRequest_FieldPathSelectorCas,
		subPath:  NewUpdateConditionRequestCASFieldPathBuilder().ConditionalState().FieldPath(),
	}
}

func (s UpdateConditionRequestPathSelectorCasConditionalState) WithValue(value *condition.Condition) *UpdateConditionRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateConditionRequest_FieldSubPathValue)
}

func (s UpdateConditionRequestPathSelectorCasConditionalState) WithArrayOfValues(values []*condition.Condition) *UpdateConditionRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateConditionRequest_FieldSubPathArrayOfValues)
}

func (UpdateConditionRequestPathSelectorCasConditionalState) Name() UpdateConditionRequestPathSelectorCasConditionalStateName {
	return UpdateConditionRequestPathSelectorCasConditionalStateName{}
}

func (UpdateConditionRequestPathSelectorCasConditionalState) DisplayName() UpdateConditionRequestPathSelectorCasConditionalStateDisplayName {
	return UpdateConditionRequestPathSelectorCasConditionalStateDisplayName{}
}

func (UpdateConditionRequestPathSelectorCasConditionalState) Description() UpdateConditionRequestPathSelectorCasConditionalStateDescription {
	return UpdateConditionRequestPathSelectorCasConditionalStateDescription{}
}

func (UpdateConditionRequestPathSelectorCasConditionalState) Expression() UpdateConditionRequestPathSelectorCasConditionalStateExpression {
	return UpdateConditionRequestPathSelectorCasConditionalStateExpression{}
}

func (UpdateConditionRequestPathSelectorCasConditionalState) ParameterDeclarations() UpdateConditionRequestPathSelectorCasConditionalStateParameterDeclarations {
	return UpdateConditionRequestPathSelectorCasConditionalStateParameterDeclarations{}
}

type UpdateConditionRequestPathSelectorCasConditionalStateName struct{}

func (UpdateConditionRequestPathSelectorCasConditionalStateName) FieldPath() *UpdateConditionRequest_FieldSubPath {
	return &UpdateConditionRequest_FieldSubPath{
		selector: UpdateConditionRequest_FieldPathSelectorCas,
		subPath:  NewUpdateConditionRequestCASFieldPathBuilder().ConditionalState().Name().FieldPath(),
	}
}

func (s UpdateConditionRequestPathSelectorCasConditionalStateName) WithValue(value *condition.Name) *UpdateConditionRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateConditionRequest_FieldSubPathValue)
}

func (s UpdateConditionRequestPathSelectorCasConditionalStateName) WithArrayOfValues(values []*condition.Name) *UpdateConditionRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateConditionRequest_FieldSubPathArrayOfValues)
}

type UpdateConditionRequestPathSelectorCasConditionalStateDisplayName struct{}

func (UpdateConditionRequestPathSelectorCasConditionalStateDisplayName) FieldPath() *UpdateConditionRequest_FieldSubPath {
	return &UpdateConditionRequest_FieldSubPath{
		selector: UpdateConditionRequest_FieldPathSelectorCas,
		subPath:  NewUpdateConditionRequestCASFieldPathBuilder().ConditionalState().DisplayName().FieldPath(),
	}
}

func (s UpdateConditionRequestPathSelectorCasConditionalStateDisplayName) WithValue(value string) *UpdateConditionRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateConditionRequest_FieldSubPathValue)
}

func (s UpdateConditionRequestPathSelectorCasConditionalStateDisplayName) WithArrayOfValues(values []string) *UpdateConditionRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateConditionRequest_FieldSubPathArrayOfValues)
}

type UpdateConditionRequestPathSelectorCasConditionalStateDescription struct{}

func (UpdateConditionRequestPathSelectorCasConditionalStateDescription) FieldPath() *UpdateConditionRequest_FieldSubPath {
	return &UpdateConditionRequest_FieldSubPath{
		selector: UpdateConditionRequest_FieldPathSelectorCas,
		subPath:  NewUpdateConditionRequestCASFieldPathBuilder().ConditionalState().Description().FieldPath(),
	}
}

func (s UpdateConditionRequestPathSelectorCasConditionalStateDescription) WithValue(value string) *UpdateConditionRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateConditionRequest_FieldSubPathValue)
}

func (s UpdateConditionRequestPathSelectorCasConditionalStateDescription) WithArrayOfValues(values []string) *UpdateConditionRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateConditionRequest_FieldSubPathArrayOfValues)
}

type UpdateConditionRequestPathSelectorCasConditionalStateExpression struct{}

func (UpdateConditionRequestPathSelectorCasConditionalStateExpression) FieldPath() *UpdateConditionRequest_FieldSubPath {
	return &UpdateConditionRequest_FieldSubPath{
		selector: UpdateConditionRequest_FieldPathSelectorCas,
		subPath:  NewUpdateConditionRequestCASFieldPathBuilder().ConditionalState().Expression().FieldPath(),
	}
}

func (s UpdateConditionRequestPathSelectorCasConditionalStateExpression) WithValue(value string) *UpdateConditionRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateConditionRequest_FieldSubPathValue)
}

func (s UpdateConditionRequestPathSelectorCasConditionalStateExpression) WithArrayOfValues(values []string) *UpdateConditionRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateConditionRequest_FieldSubPathArrayOfValues)
}

type UpdateConditionRequestPathSelectorCasConditionalStateParameterDeclarations struct{}

func (UpdateConditionRequestPathSelectorCasConditionalStateParameterDeclarations) FieldPath() *UpdateConditionRequest_FieldSubPath {
	return &UpdateConditionRequest_FieldSubPath{
		selector: UpdateConditionRequest_FieldPathSelectorCas,
		subPath:  NewUpdateConditionRequestCASFieldPathBuilder().ConditionalState().ParameterDeclarations().FieldPath(),
	}
}

func (s UpdateConditionRequestPathSelectorCasConditionalStateParameterDeclarations) WithValue(value []*condition.Condition_ParameterDeclaration) *UpdateConditionRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateConditionRequest_FieldSubPathValue)
}

func (s UpdateConditionRequestPathSelectorCasConditionalStateParameterDeclarations) WithArrayOfValues(values [][]*condition.Condition_ParameterDeclaration) *UpdateConditionRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateConditionRequest_FieldSubPathArrayOfValues)
}

func (s UpdateConditionRequestPathSelectorCasConditionalStateParameterDeclarations) WithItemValue(value *condition.Condition_ParameterDeclaration) *UpdateConditionRequest_FieldSubPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*UpdateConditionRequest_FieldSubPathArrayItemValue)
}

func (UpdateConditionRequestPathSelectorCasConditionalStateParameterDeclarations) Key() UpdateConditionRequestPathSelectorCasConditionalStateParameterDeclarationsKey {
	return UpdateConditionRequestPathSelectorCasConditionalStateParameterDeclarationsKey{}
}

func (UpdateConditionRequestPathSelectorCasConditionalStateParameterDeclarations) Type() UpdateConditionRequestPathSelectorCasConditionalStateParameterDeclarationsType {
	return UpdateConditionRequestPathSelectorCasConditionalStateParameterDeclarationsType{}
}

type UpdateConditionRequestPathSelectorCasConditionalStateParameterDeclarationsKey struct{}

func (UpdateConditionRequestPathSelectorCasConditionalStateParameterDeclarationsKey) FieldPath() *UpdateConditionRequest_FieldSubPath {
	return &UpdateConditionRequest_FieldSubPath{
		selector: UpdateConditionRequest_FieldPathSelectorCas,
		subPath:  NewUpdateConditionRequestCASFieldPathBuilder().ConditionalState().ParameterDeclarations().Key().FieldPath(),
	}
}

func (s UpdateConditionRequestPathSelectorCasConditionalStateParameterDeclarationsKey) WithValue(value string) *UpdateConditionRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateConditionRequest_FieldSubPathValue)
}

func (s UpdateConditionRequestPathSelectorCasConditionalStateParameterDeclarationsKey) WithArrayOfValues(values []string) *UpdateConditionRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateConditionRequest_FieldSubPathArrayOfValues)
}

type UpdateConditionRequestPathSelectorCasConditionalStateParameterDeclarationsType struct{}

func (UpdateConditionRequestPathSelectorCasConditionalStateParameterDeclarationsType) FieldPath() *UpdateConditionRequest_FieldSubPath {
	return &UpdateConditionRequest_FieldSubPath{
		selector: UpdateConditionRequest_FieldPathSelectorCas,
		subPath:  NewUpdateConditionRequestCASFieldPathBuilder().ConditionalState().ParameterDeclarations().Type().FieldPath(),
	}
}

func (s UpdateConditionRequestPathSelectorCasConditionalStateParameterDeclarationsType) WithValue(value condition.Condition_ParameterType) *UpdateConditionRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateConditionRequest_FieldSubPathValue)
}

func (s UpdateConditionRequestPathSelectorCasConditionalStateParameterDeclarationsType) WithArrayOfValues(values []condition.Condition_ParameterType) *UpdateConditionRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateConditionRequest_FieldSubPathArrayOfValues)
}

type UpdateConditionRequestPathSelectorCasFieldMask struct{}

func (UpdateConditionRequestPathSelectorCasFieldMask) FieldPath() *UpdateConditionRequest_FieldSubPath {
	return &UpdateConditionRequest_FieldSubPath{
		selector: UpdateConditionRequest_FieldPathSelectorCas,
		subPath:  NewUpdateConditionRequestCASFieldPathBuilder().FieldMask().FieldPath(),
	}
}

func (s UpdateConditionRequestPathSelectorCasFieldMask) WithValue(value *condition.Condition_FieldMask) *UpdateConditionRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateConditionRequest_FieldSubPathValue)
}

func (s UpdateConditionRequestPathSelectorCasFieldMask) WithArrayOfValues(values []*condition.Condition_FieldMask) *UpdateConditionRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateConditionRequest_FieldSubPathArrayOfValues)
}

type UpdateConditionRequestCASFieldPathBuilder struct{}

func NewUpdateConditionRequestCASFieldPathBuilder() UpdateConditionRequestCASFieldPathBuilder {
	return UpdateConditionRequestCASFieldPathBuilder{}
}
func (UpdateConditionRequestCASFieldPathBuilder) ConditionalState() UpdateConditionRequest_CASPathSelectorConditionalState {
	return UpdateConditionRequest_CASPathSelectorConditionalState{}
}
func (UpdateConditionRequestCASFieldPathBuilder) FieldMask() UpdateConditionRequest_CASPathSelectorFieldMask {
	return UpdateConditionRequest_CASPathSelectorFieldMask{}
}

type UpdateConditionRequest_CASPathSelectorConditionalState struct{}

func (UpdateConditionRequest_CASPathSelectorConditionalState) FieldPath() *UpdateConditionRequestCAS_FieldTerminalPath {
	return &UpdateConditionRequestCAS_FieldTerminalPath{selector: UpdateConditionRequestCAS_FieldPathSelectorConditionalState}
}

func (s UpdateConditionRequest_CASPathSelectorConditionalState) WithValue(value *condition.Condition) *UpdateConditionRequestCAS_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateConditionRequestCAS_FieldTerminalPathValue)
}

func (s UpdateConditionRequest_CASPathSelectorConditionalState) WithArrayOfValues(values []*condition.Condition) *UpdateConditionRequestCAS_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateConditionRequestCAS_FieldTerminalPathArrayOfValues)
}

func (UpdateConditionRequest_CASPathSelectorConditionalState) WithSubPath(subPath condition.Condition_FieldPath) *UpdateConditionRequestCAS_FieldSubPath {
	return &UpdateConditionRequestCAS_FieldSubPath{selector: UpdateConditionRequestCAS_FieldPathSelectorConditionalState, subPath: subPath}
}

func (s UpdateConditionRequest_CASPathSelectorConditionalState) WithSubValue(subPathValue condition.Condition_FieldPathValue) *UpdateConditionRequestCAS_FieldSubPathValue {
	return &UpdateConditionRequestCAS_FieldSubPathValue{UpdateConditionRequestCAS_FieldPath: s.WithSubPath(subPathValue), subPathValue: subPathValue}
}

func (s UpdateConditionRequest_CASPathSelectorConditionalState) WithSubArrayOfValues(subPathArrayOfValues condition.Condition_FieldPathArrayOfValues) *UpdateConditionRequestCAS_FieldSubPathArrayOfValues {
	return &UpdateConditionRequestCAS_FieldSubPathArrayOfValues{UpdateConditionRequestCAS_FieldPath: s.WithSubPath(subPathArrayOfValues), subPathArrayOfValues: subPathArrayOfValues}
}

func (s UpdateConditionRequest_CASPathSelectorConditionalState) WithSubArrayItemValue(subPathArrayItemValue condition.Condition_FieldPathArrayItemValue) *UpdateConditionRequestCAS_FieldSubPathArrayItemValue {
	return &UpdateConditionRequestCAS_FieldSubPathArrayItemValue{UpdateConditionRequestCAS_FieldPath: s.WithSubPath(subPathArrayItemValue), subPathItemValue: subPathArrayItemValue}
}

func (UpdateConditionRequest_CASPathSelectorConditionalState) Name() UpdateConditionRequest_CASPathSelectorConditionalStateName {
	return UpdateConditionRequest_CASPathSelectorConditionalStateName{}
}

func (UpdateConditionRequest_CASPathSelectorConditionalState) DisplayName() UpdateConditionRequest_CASPathSelectorConditionalStateDisplayName {
	return UpdateConditionRequest_CASPathSelectorConditionalStateDisplayName{}
}

func (UpdateConditionRequest_CASPathSelectorConditionalState) Description() UpdateConditionRequest_CASPathSelectorConditionalStateDescription {
	return UpdateConditionRequest_CASPathSelectorConditionalStateDescription{}
}

func (UpdateConditionRequest_CASPathSelectorConditionalState) Expression() UpdateConditionRequest_CASPathSelectorConditionalStateExpression {
	return UpdateConditionRequest_CASPathSelectorConditionalStateExpression{}
}

func (UpdateConditionRequest_CASPathSelectorConditionalState) ParameterDeclarations() UpdateConditionRequest_CASPathSelectorConditionalStateParameterDeclarations {
	return UpdateConditionRequest_CASPathSelectorConditionalStateParameterDeclarations{}
}

type UpdateConditionRequest_CASPathSelectorConditionalStateName struct{}

func (UpdateConditionRequest_CASPathSelectorConditionalStateName) FieldPath() *UpdateConditionRequestCAS_FieldSubPath {
	return &UpdateConditionRequestCAS_FieldSubPath{
		selector: UpdateConditionRequestCAS_FieldPathSelectorConditionalState,
		subPath:  condition.NewConditionFieldPathBuilder().Name().FieldPath(),
	}
}

func (s UpdateConditionRequest_CASPathSelectorConditionalStateName) WithValue(value *condition.Name) *UpdateConditionRequestCAS_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateConditionRequestCAS_FieldSubPathValue)
}

func (s UpdateConditionRequest_CASPathSelectorConditionalStateName) WithArrayOfValues(values []*condition.Name) *UpdateConditionRequestCAS_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateConditionRequestCAS_FieldSubPathArrayOfValues)
}

type UpdateConditionRequest_CASPathSelectorConditionalStateDisplayName struct{}

func (UpdateConditionRequest_CASPathSelectorConditionalStateDisplayName) FieldPath() *UpdateConditionRequestCAS_FieldSubPath {
	return &UpdateConditionRequestCAS_FieldSubPath{
		selector: UpdateConditionRequestCAS_FieldPathSelectorConditionalState,
		subPath:  condition.NewConditionFieldPathBuilder().DisplayName().FieldPath(),
	}
}

func (s UpdateConditionRequest_CASPathSelectorConditionalStateDisplayName) WithValue(value string) *UpdateConditionRequestCAS_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateConditionRequestCAS_FieldSubPathValue)
}

func (s UpdateConditionRequest_CASPathSelectorConditionalStateDisplayName) WithArrayOfValues(values []string) *UpdateConditionRequestCAS_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateConditionRequestCAS_FieldSubPathArrayOfValues)
}

type UpdateConditionRequest_CASPathSelectorConditionalStateDescription struct{}

func (UpdateConditionRequest_CASPathSelectorConditionalStateDescription) FieldPath() *UpdateConditionRequestCAS_FieldSubPath {
	return &UpdateConditionRequestCAS_FieldSubPath{
		selector: UpdateConditionRequestCAS_FieldPathSelectorConditionalState,
		subPath:  condition.NewConditionFieldPathBuilder().Description().FieldPath(),
	}
}

func (s UpdateConditionRequest_CASPathSelectorConditionalStateDescription) WithValue(value string) *UpdateConditionRequestCAS_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateConditionRequestCAS_FieldSubPathValue)
}

func (s UpdateConditionRequest_CASPathSelectorConditionalStateDescription) WithArrayOfValues(values []string) *UpdateConditionRequestCAS_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateConditionRequestCAS_FieldSubPathArrayOfValues)
}

type UpdateConditionRequest_CASPathSelectorConditionalStateExpression struct{}

func (UpdateConditionRequest_CASPathSelectorConditionalStateExpression) FieldPath() *UpdateConditionRequestCAS_FieldSubPath {
	return &UpdateConditionRequestCAS_FieldSubPath{
		selector: UpdateConditionRequestCAS_FieldPathSelectorConditionalState,
		subPath:  condition.NewConditionFieldPathBuilder().Expression().FieldPath(),
	}
}

func (s UpdateConditionRequest_CASPathSelectorConditionalStateExpression) WithValue(value string) *UpdateConditionRequestCAS_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateConditionRequestCAS_FieldSubPathValue)
}

func (s UpdateConditionRequest_CASPathSelectorConditionalStateExpression) WithArrayOfValues(values []string) *UpdateConditionRequestCAS_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateConditionRequestCAS_FieldSubPathArrayOfValues)
}

type UpdateConditionRequest_CASPathSelectorConditionalStateParameterDeclarations struct{}

func (UpdateConditionRequest_CASPathSelectorConditionalStateParameterDeclarations) FieldPath() *UpdateConditionRequestCAS_FieldSubPath {
	return &UpdateConditionRequestCAS_FieldSubPath{
		selector: UpdateConditionRequestCAS_FieldPathSelectorConditionalState,
		subPath:  condition.NewConditionFieldPathBuilder().ParameterDeclarations().FieldPath(),
	}
}

func (s UpdateConditionRequest_CASPathSelectorConditionalStateParameterDeclarations) WithValue(value []*condition.Condition_ParameterDeclaration) *UpdateConditionRequestCAS_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateConditionRequestCAS_FieldSubPathValue)
}

func (s UpdateConditionRequest_CASPathSelectorConditionalStateParameterDeclarations) WithArrayOfValues(values [][]*condition.Condition_ParameterDeclaration) *UpdateConditionRequestCAS_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateConditionRequestCAS_FieldSubPathArrayOfValues)
}

func (s UpdateConditionRequest_CASPathSelectorConditionalStateParameterDeclarations) WithItemValue(value *condition.Condition_ParameterDeclaration) *UpdateConditionRequestCAS_FieldSubPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*UpdateConditionRequestCAS_FieldSubPathArrayItemValue)
}

func (UpdateConditionRequest_CASPathSelectorConditionalStateParameterDeclarations) Key() UpdateConditionRequest_CASPathSelectorConditionalStateParameterDeclarationsKey {
	return UpdateConditionRequest_CASPathSelectorConditionalStateParameterDeclarationsKey{}
}

func (UpdateConditionRequest_CASPathSelectorConditionalStateParameterDeclarations) Type() UpdateConditionRequest_CASPathSelectorConditionalStateParameterDeclarationsType {
	return UpdateConditionRequest_CASPathSelectorConditionalStateParameterDeclarationsType{}
}

type UpdateConditionRequest_CASPathSelectorConditionalStateParameterDeclarationsKey struct{}

func (UpdateConditionRequest_CASPathSelectorConditionalStateParameterDeclarationsKey) FieldPath() *UpdateConditionRequestCAS_FieldSubPath {
	return &UpdateConditionRequestCAS_FieldSubPath{
		selector: UpdateConditionRequestCAS_FieldPathSelectorConditionalState,
		subPath:  condition.NewConditionFieldPathBuilder().ParameterDeclarations().Key().FieldPath(),
	}
}

func (s UpdateConditionRequest_CASPathSelectorConditionalStateParameterDeclarationsKey) WithValue(value string) *UpdateConditionRequestCAS_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateConditionRequestCAS_FieldSubPathValue)
}

func (s UpdateConditionRequest_CASPathSelectorConditionalStateParameterDeclarationsKey) WithArrayOfValues(values []string) *UpdateConditionRequestCAS_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateConditionRequestCAS_FieldSubPathArrayOfValues)
}

type UpdateConditionRequest_CASPathSelectorConditionalStateParameterDeclarationsType struct{}

func (UpdateConditionRequest_CASPathSelectorConditionalStateParameterDeclarationsType) FieldPath() *UpdateConditionRequestCAS_FieldSubPath {
	return &UpdateConditionRequestCAS_FieldSubPath{
		selector: UpdateConditionRequestCAS_FieldPathSelectorConditionalState,
		subPath:  condition.NewConditionFieldPathBuilder().ParameterDeclarations().Type().FieldPath(),
	}
}

func (s UpdateConditionRequest_CASPathSelectorConditionalStateParameterDeclarationsType) WithValue(value condition.Condition_ParameterType) *UpdateConditionRequestCAS_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateConditionRequestCAS_FieldSubPathValue)
}

func (s UpdateConditionRequest_CASPathSelectorConditionalStateParameterDeclarationsType) WithArrayOfValues(values []condition.Condition_ParameterType) *UpdateConditionRequestCAS_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateConditionRequestCAS_FieldSubPathArrayOfValues)
}

type UpdateConditionRequest_CASPathSelectorFieldMask struct{}

func (UpdateConditionRequest_CASPathSelectorFieldMask) FieldPath() *UpdateConditionRequestCAS_FieldTerminalPath {
	return &UpdateConditionRequestCAS_FieldTerminalPath{selector: UpdateConditionRequestCAS_FieldPathSelectorFieldMask}
}

func (s UpdateConditionRequest_CASPathSelectorFieldMask) WithValue(value *condition.Condition_FieldMask) *UpdateConditionRequestCAS_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateConditionRequestCAS_FieldTerminalPathValue)
}

func (s UpdateConditionRequest_CASPathSelectorFieldMask) WithArrayOfValues(values []*condition.Condition_FieldMask) *UpdateConditionRequestCAS_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateConditionRequestCAS_FieldTerminalPathArrayOfValues)
}

type DeleteConditionRequestFieldPathBuilder struct{}

func NewDeleteConditionRequestFieldPathBuilder() DeleteConditionRequestFieldPathBuilder {
	return DeleteConditionRequestFieldPathBuilder{}
}
func (DeleteConditionRequestFieldPathBuilder) Name() DeleteConditionRequestPathSelectorName {
	return DeleteConditionRequestPathSelectorName{}
}

type DeleteConditionRequestPathSelectorName struct{}

func (DeleteConditionRequestPathSelectorName) FieldPath() *DeleteConditionRequest_FieldTerminalPath {
	return &DeleteConditionRequest_FieldTerminalPath{selector: DeleteConditionRequest_FieldPathSelectorName}
}

func (s DeleteConditionRequestPathSelectorName) WithValue(value *condition.Reference) *DeleteConditionRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*DeleteConditionRequest_FieldTerminalPathValue)
}

func (s DeleteConditionRequestPathSelectorName) WithArrayOfValues(values []*condition.Reference) *DeleteConditionRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*DeleteConditionRequest_FieldTerminalPathArrayOfValues)
}
