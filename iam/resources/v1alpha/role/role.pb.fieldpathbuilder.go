// Code generated by protoc-gen-goten-object
// File: edgelq/iam/proto/v1alpha/role.proto
// DO NOT EDIT!!!

package role

// proto imports
import (
	ntt_meta "github.com/cloudwan/edgelq-sdk/common/types/meta"
	condition "github.com/cloudwan/edgelq-sdk/iam/resources/v1alpha/condition"
	organization "github.com/cloudwan/edgelq-sdk/iam/resources/v1alpha/organization"
	permission "github.com/cloudwan/edgelq-sdk/iam/resources/v1alpha/permission"
	project "github.com/cloudwan/edgelq-sdk/iam/resources/v1alpha/project"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
)

// make sure we're using proto imports
var (
	_ = &ntt_meta.Meta{}
	_ = &condition.Condition{}
	_ = &organization.Organization{}
	_ = &permission.Permission{}
	_ = &project.Project{}
	_ = &timestamp.Timestamp{}
)

type RoleFieldPathBuilder struct{}

func NewRoleFieldPathBuilder() RoleFieldPathBuilder {
	return RoleFieldPathBuilder{}
}
func (RoleFieldPathBuilder) Name() RolePathSelectorName {
	return RolePathSelectorName{}
}
func (RoleFieldPathBuilder) DisplayName() RolePathSelectorDisplayName {
	return RolePathSelectorDisplayName{}
}
func (RoleFieldPathBuilder) IncludedPermissions() RolePathSelectorIncludedPermissions {
	return RolePathSelectorIncludedPermissions{}
}
func (RoleFieldPathBuilder) DefaultConditionBinding() RolePathSelectorDefaultConditionBinding {
	return RolePathSelectorDefaultConditionBinding{}
}

type RolePathSelectorName struct{}

func (RolePathSelectorName) FieldPath() *Role_FieldTerminalPath {
	return &Role_FieldTerminalPath{selector: Role_FieldPathSelectorName}
}

func (s RolePathSelectorName) WithValue(value *Name) *Role_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*Role_FieldTerminalPathValue)
}

func (s RolePathSelectorName) WithArrayOfValues(values []*Name) *Role_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*Role_FieldTerminalPathArrayOfValues)
}

type RolePathSelectorDisplayName struct{}

func (RolePathSelectorDisplayName) FieldPath() *Role_FieldTerminalPath {
	return &Role_FieldTerminalPath{selector: Role_FieldPathSelectorDisplayName}
}

func (s RolePathSelectorDisplayName) WithValue(value string) *Role_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*Role_FieldTerminalPathValue)
}

func (s RolePathSelectorDisplayName) WithArrayOfValues(values []string) *Role_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*Role_FieldTerminalPathArrayOfValues)
}

type RolePathSelectorIncludedPermissions struct{}

func (RolePathSelectorIncludedPermissions) FieldPath() *Role_FieldTerminalPath {
	return &Role_FieldTerminalPath{selector: Role_FieldPathSelectorIncludedPermissions}
}

func (s RolePathSelectorIncludedPermissions) WithValue(value []*permission.Reference) *Role_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*Role_FieldTerminalPathValue)
}

func (s RolePathSelectorIncludedPermissions) WithArrayOfValues(values [][]*permission.Reference) *Role_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*Role_FieldTerminalPathArrayOfValues)
}

func (s RolePathSelectorIncludedPermissions) WithItemValue(value *permission.Reference) *Role_FieldTerminalPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*Role_FieldTerminalPathArrayItemValue)
}

type RolePathSelectorDefaultConditionBinding struct{}

func (RolePathSelectorDefaultConditionBinding) FieldPath() *Role_FieldTerminalPath {
	return &Role_FieldTerminalPath{selector: Role_FieldPathSelectorDefaultConditionBinding}
}

func (s RolePathSelectorDefaultConditionBinding) WithValue(value *condition.ConditionBinding) *Role_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*Role_FieldTerminalPathValue)
}

func (s RolePathSelectorDefaultConditionBinding) WithArrayOfValues(values []*condition.ConditionBinding) *Role_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*Role_FieldTerminalPathArrayOfValues)
}

func (RolePathSelectorDefaultConditionBinding) WithSubPath(subPath condition.ConditionBinding_FieldPath) *Role_FieldSubPath {
	return &Role_FieldSubPath{selector: Role_FieldPathSelectorDefaultConditionBinding, subPath: subPath}
}

func (s RolePathSelectorDefaultConditionBinding) WithSubValue(subPathValue condition.ConditionBinding_FieldPathValue) *Role_FieldSubPathValue {
	return &Role_FieldSubPathValue{Role_FieldPath: s.WithSubPath(subPathValue), subPathValue: subPathValue}
}

func (s RolePathSelectorDefaultConditionBinding) WithSubArrayOfValues(subPathArrayOfValues condition.ConditionBinding_FieldPathArrayOfValues) *Role_FieldSubPathArrayOfValues {
	return &Role_FieldSubPathArrayOfValues{Role_FieldPath: s.WithSubPath(subPathArrayOfValues), subPathArrayOfValues: subPathArrayOfValues}
}

func (s RolePathSelectorDefaultConditionBinding) WithSubArrayItemValue(subPathArrayItemValue condition.ConditionBinding_FieldPathArrayItemValue) *Role_FieldSubPathArrayItemValue {
	return &Role_FieldSubPathArrayItemValue{Role_FieldPath: s.WithSubPath(subPathArrayItemValue), subPathItemValue: subPathArrayItemValue}
}

func (RolePathSelectorDefaultConditionBinding) Condition() RolePathSelectorDefaultConditionBindingCondition {
	return RolePathSelectorDefaultConditionBindingCondition{}
}

func (RolePathSelectorDefaultConditionBinding) Parameters() RolePathSelectorDefaultConditionBindingParameters {
	return RolePathSelectorDefaultConditionBindingParameters{}
}

type RolePathSelectorDefaultConditionBindingCondition struct{}

func (RolePathSelectorDefaultConditionBindingCondition) FieldPath() *Role_FieldSubPath {
	return &Role_FieldSubPath{
		selector: Role_FieldPathSelectorDefaultConditionBinding,
		subPath:  condition.NewConditionBindingFieldPathBuilder().Condition().FieldPath(),
	}
}

func (s RolePathSelectorDefaultConditionBindingCondition) WithValue(value *condition.Reference) *Role_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*Role_FieldSubPathValue)
}

func (s RolePathSelectorDefaultConditionBindingCondition) WithArrayOfValues(values []*condition.Reference) *Role_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*Role_FieldSubPathArrayOfValues)
}

type RolePathSelectorDefaultConditionBindingParameters struct{}

func (RolePathSelectorDefaultConditionBindingParameters) FieldPath() *Role_FieldSubPath {
	return &Role_FieldSubPath{
		selector: Role_FieldPathSelectorDefaultConditionBinding,
		subPath:  condition.NewConditionBindingFieldPathBuilder().Parameters().FieldPath(),
	}
}

func (s RolePathSelectorDefaultConditionBindingParameters) WithValue(value map[string]string) *Role_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*Role_FieldSubPathValue)
}

func (s RolePathSelectorDefaultConditionBindingParameters) WithArrayOfValues(values []map[string]string) *Role_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*Role_FieldSubPathArrayOfValues)
}

func (RolePathSelectorDefaultConditionBindingParameters) WithKey(key string) RoleMapPathSelectorDefaultConditionBindingParameters {
	return RoleMapPathSelectorDefaultConditionBindingParameters{key: key}
}

type RoleMapPathSelectorDefaultConditionBindingParameters struct {
	key string
}

func (s RoleMapPathSelectorDefaultConditionBindingParameters) FieldPath() *Role_FieldSubPath {
	return &Role_FieldSubPath{
		selector: Role_FieldPathSelectorDefaultConditionBinding,
		subPath:  condition.NewConditionBindingFieldPathBuilder().Parameters().WithKey(s.key).FieldPath(),
	}
}

func (s RoleMapPathSelectorDefaultConditionBindingParameters) WithValue(value string) *Role_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*Role_FieldSubPathValue)
}

func (s RoleMapPathSelectorDefaultConditionBindingParameters) WithArrayOfValues(values []string) *Role_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*Role_FieldSubPathArrayOfValues)
}
