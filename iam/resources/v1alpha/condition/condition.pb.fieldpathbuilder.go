// Code generated by protoc-gen-goten-object
// File: edgelq/iam/proto/v1alpha/condition.proto
// DO NOT EDIT!!!

package condition

// proto imports
import (
	ntt_meta "github.com/cloudwan/edgelq-sdk/common/types/meta"
	organization "github.com/cloudwan/edgelq-sdk/iam/resources/v1alpha/organization"
	project "github.com/cloudwan/edgelq-sdk/iam/resources/v1alpha/project"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
)

// make sure we're using proto imports
var (
	_ = &ntt_meta.Meta{}
	_ = &organization.Organization{}
	_ = &project.Project{}
	_ = &timestamp.Timestamp{}
)

type ConditionFieldPathBuilder struct{}

func NewConditionFieldPathBuilder() ConditionFieldPathBuilder {
	return ConditionFieldPathBuilder{}
}
func (ConditionFieldPathBuilder) Name() ConditionPathSelectorName {
	return ConditionPathSelectorName{}
}
func (ConditionFieldPathBuilder) DisplayName() ConditionPathSelectorDisplayName {
	return ConditionPathSelectorDisplayName{}
}
func (ConditionFieldPathBuilder) Description() ConditionPathSelectorDescription {
	return ConditionPathSelectorDescription{}
}
func (ConditionFieldPathBuilder) Expression() ConditionPathSelectorExpression {
	return ConditionPathSelectorExpression{}
}
func (ConditionFieldPathBuilder) ParameterDeclarations() ConditionPathSelectorParameterDeclarations {
	return ConditionPathSelectorParameterDeclarations{}
}

type ConditionPathSelectorName struct{}

func (ConditionPathSelectorName) FieldPath() *Condition_FieldTerminalPath {
	return &Condition_FieldTerminalPath{selector: Condition_FieldPathSelectorName}
}

func (s ConditionPathSelectorName) WithValue(value *Name) *Condition_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*Condition_FieldTerminalPathValue)
}

func (s ConditionPathSelectorName) WithArrayOfValues(values []*Name) *Condition_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*Condition_FieldTerminalPathArrayOfValues)
}

type ConditionPathSelectorDisplayName struct{}

func (ConditionPathSelectorDisplayName) FieldPath() *Condition_FieldTerminalPath {
	return &Condition_FieldTerminalPath{selector: Condition_FieldPathSelectorDisplayName}
}

func (s ConditionPathSelectorDisplayName) WithValue(value string) *Condition_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*Condition_FieldTerminalPathValue)
}

func (s ConditionPathSelectorDisplayName) WithArrayOfValues(values []string) *Condition_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*Condition_FieldTerminalPathArrayOfValues)
}

type ConditionPathSelectorDescription struct{}

func (ConditionPathSelectorDescription) FieldPath() *Condition_FieldTerminalPath {
	return &Condition_FieldTerminalPath{selector: Condition_FieldPathSelectorDescription}
}

func (s ConditionPathSelectorDescription) WithValue(value string) *Condition_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*Condition_FieldTerminalPathValue)
}

func (s ConditionPathSelectorDescription) WithArrayOfValues(values []string) *Condition_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*Condition_FieldTerminalPathArrayOfValues)
}

type ConditionPathSelectorExpression struct{}

func (ConditionPathSelectorExpression) FieldPath() *Condition_FieldTerminalPath {
	return &Condition_FieldTerminalPath{selector: Condition_FieldPathSelectorExpression}
}

func (s ConditionPathSelectorExpression) WithValue(value string) *Condition_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*Condition_FieldTerminalPathValue)
}

func (s ConditionPathSelectorExpression) WithArrayOfValues(values []string) *Condition_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*Condition_FieldTerminalPathArrayOfValues)
}

type ConditionPathSelectorParameterDeclarations struct{}

func (ConditionPathSelectorParameterDeclarations) FieldPath() *Condition_FieldTerminalPath {
	return &Condition_FieldTerminalPath{selector: Condition_FieldPathSelectorParameterDeclarations}
}

func (s ConditionPathSelectorParameterDeclarations) WithValue(value []*Condition_ParameterDeclaration) *Condition_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*Condition_FieldTerminalPathValue)
}

func (s ConditionPathSelectorParameterDeclarations) WithArrayOfValues(values [][]*Condition_ParameterDeclaration) *Condition_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*Condition_FieldTerminalPathArrayOfValues)
}

func (s ConditionPathSelectorParameterDeclarations) WithItemValue(value *Condition_ParameterDeclaration) *Condition_FieldTerminalPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*Condition_FieldTerminalPathArrayItemValue)
}
func (ConditionPathSelectorParameterDeclarations) WithSubPath(subPath ConditionParameterDeclaration_FieldPath) *Condition_FieldSubPath {
	return &Condition_FieldSubPath{selector: Condition_FieldPathSelectorParameterDeclarations, subPath: subPath}
}

func (s ConditionPathSelectorParameterDeclarations) WithSubValue(subPathValue ConditionParameterDeclaration_FieldPathValue) *Condition_FieldSubPathValue {
	return &Condition_FieldSubPathValue{Condition_FieldPath: s.WithSubPath(subPathValue), subPathValue: subPathValue}
}

func (s ConditionPathSelectorParameterDeclarations) WithSubArrayOfValues(subPathArrayOfValues ConditionParameterDeclaration_FieldPathArrayOfValues) *Condition_FieldSubPathArrayOfValues {
	return &Condition_FieldSubPathArrayOfValues{Condition_FieldPath: s.WithSubPath(subPathArrayOfValues), subPathArrayOfValues: subPathArrayOfValues}
}

func (s ConditionPathSelectorParameterDeclarations) WithSubArrayItemValue(subPathArrayItemValue ConditionParameterDeclaration_FieldPathArrayItemValue) *Condition_FieldSubPathArrayItemValue {
	return &Condition_FieldSubPathArrayItemValue{Condition_FieldPath: s.WithSubPath(subPathArrayItemValue), subPathItemValue: subPathArrayItemValue}
}

func (ConditionPathSelectorParameterDeclarations) Key() ConditionPathSelectorParameterDeclarationsKey {
	return ConditionPathSelectorParameterDeclarationsKey{}
}

func (ConditionPathSelectorParameterDeclarations) Type() ConditionPathSelectorParameterDeclarationsType {
	return ConditionPathSelectorParameterDeclarationsType{}
}

type ConditionPathSelectorParameterDeclarationsKey struct{}

func (ConditionPathSelectorParameterDeclarationsKey) FieldPath() *Condition_FieldSubPath {
	return &Condition_FieldSubPath{
		selector: Condition_FieldPathSelectorParameterDeclarations,
		subPath:  NewConditionParameterDeclarationFieldPathBuilder().Key().FieldPath(),
	}
}

func (s ConditionPathSelectorParameterDeclarationsKey) WithValue(value string) *Condition_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*Condition_FieldSubPathValue)
}

func (s ConditionPathSelectorParameterDeclarationsKey) WithArrayOfValues(values []string) *Condition_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*Condition_FieldSubPathArrayOfValues)
}

type ConditionPathSelectorParameterDeclarationsType struct{}

func (ConditionPathSelectorParameterDeclarationsType) FieldPath() *Condition_FieldSubPath {
	return &Condition_FieldSubPath{
		selector: Condition_FieldPathSelectorParameterDeclarations,
		subPath:  NewConditionParameterDeclarationFieldPathBuilder().Type().FieldPath(),
	}
}

func (s ConditionPathSelectorParameterDeclarationsType) WithValue(value Condition_ParameterType) *Condition_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*Condition_FieldSubPathValue)
}

func (s ConditionPathSelectorParameterDeclarationsType) WithArrayOfValues(values []Condition_ParameterType) *Condition_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*Condition_FieldSubPathArrayOfValues)
}

type ConditionParameterDeclarationFieldPathBuilder struct{}

func NewConditionParameterDeclarationFieldPathBuilder() ConditionParameterDeclarationFieldPathBuilder {
	return ConditionParameterDeclarationFieldPathBuilder{}
}
func (ConditionParameterDeclarationFieldPathBuilder) Key() Condition_ParameterDeclarationPathSelectorKey {
	return Condition_ParameterDeclarationPathSelectorKey{}
}
func (ConditionParameterDeclarationFieldPathBuilder) Type() Condition_ParameterDeclarationPathSelectorType {
	return Condition_ParameterDeclarationPathSelectorType{}
}

type Condition_ParameterDeclarationPathSelectorKey struct{}

func (Condition_ParameterDeclarationPathSelectorKey) FieldPath() *ConditionParameterDeclaration_FieldTerminalPath {
	return &ConditionParameterDeclaration_FieldTerminalPath{selector: ConditionParameterDeclaration_FieldPathSelectorKey}
}

func (s Condition_ParameterDeclarationPathSelectorKey) WithValue(value string) *ConditionParameterDeclaration_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*ConditionParameterDeclaration_FieldTerminalPathValue)
}

func (s Condition_ParameterDeclarationPathSelectorKey) WithArrayOfValues(values []string) *ConditionParameterDeclaration_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ConditionParameterDeclaration_FieldTerminalPathArrayOfValues)
}

type Condition_ParameterDeclarationPathSelectorType struct{}

func (Condition_ParameterDeclarationPathSelectorType) FieldPath() *ConditionParameterDeclaration_FieldTerminalPath {
	return &ConditionParameterDeclaration_FieldTerminalPath{selector: ConditionParameterDeclaration_FieldPathSelectorType}
}

func (s Condition_ParameterDeclarationPathSelectorType) WithValue(value Condition_ParameterType) *ConditionParameterDeclaration_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*ConditionParameterDeclaration_FieldTerminalPathValue)
}

func (s Condition_ParameterDeclarationPathSelectorType) WithArrayOfValues(values []Condition_ParameterType) *ConditionParameterDeclaration_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ConditionParameterDeclaration_FieldTerminalPathArrayOfValues)
}

type ConditionBindingFieldPathBuilder struct{}

func NewConditionBindingFieldPathBuilder() ConditionBindingFieldPathBuilder {
	return ConditionBindingFieldPathBuilder{}
}
func (ConditionBindingFieldPathBuilder) Condition() ConditionBindingPathSelectorCondition {
	return ConditionBindingPathSelectorCondition{}
}
func (ConditionBindingFieldPathBuilder) Parameters() ConditionBindingPathSelectorParameters {
	return ConditionBindingPathSelectorParameters{}
}

type ConditionBindingPathSelectorCondition struct{}

func (ConditionBindingPathSelectorCondition) FieldPath() *ConditionBinding_FieldTerminalPath {
	return &ConditionBinding_FieldTerminalPath{selector: ConditionBinding_FieldPathSelectorCondition}
}

func (s ConditionBindingPathSelectorCondition) WithValue(value *Reference) *ConditionBinding_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*ConditionBinding_FieldTerminalPathValue)
}

func (s ConditionBindingPathSelectorCondition) WithArrayOfValues(values []*Reference) *ConditionBinding_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ConditionBinding_FieldTerminalPathArrayOfValues)
}

type ConditionBindingPathSelectorParameters struct{}

func (ConditionBindingPathSelectorParameters) FieldPath() *ConditionBinding_FieldTerminalPath {
	return &ConditionBinding_FieldTerminalPath{selector: ConditionBinding_FieldPathSelectorParameters}
}

func (s ConditionBindingPathSelectorParameters) WithValue(value map[string]string) *ConditionBinding_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*ConditionBinding_FieldTerminalPathValue)
}

func (s ConditionBindingPathSelectorParameters) WithArrayOfValues(values []map[string]string) *ConditionBinding_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ConditionBinding_FieldTerminalPathArrayOfValues)
}

func (ConditionBindingPathSelectorParameters) WithKey(key string) ConditionBindingMapPathSelectorParameters {
	return ConditionBindingMapPathSelectorParameters{key: key}
}

type ConditionBindingMapPathSelectorParameters struct {
	key string
}

func (s ConditionBindingMapPathSelectorParameters) FieldPath() *ConditionBinding_FieldPathMap {
	return &ConditionBinding_FieldPathMap{selector: ConditionBinding_FieldPathSelectorParameters, key: s.key}
}

func (s ConditionBindingMapPathSelectorParameters) WithValue(value string) *ConditionBinding_FieldPathMapValue {
	return s.FieldPath().WithIValue(value).(*ConditionBinding_FieldPathMapValue)
}

func (s ConditionBindingMapPathSelectorParameters) WithArrayOfValues(values []string) *ConditionBinding_FieldPathMapArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ConditionBinding_FieldPathMapArrayOfValues)
}
