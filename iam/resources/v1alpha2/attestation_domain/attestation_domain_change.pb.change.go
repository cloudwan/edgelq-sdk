// Code generated by protoc-gen-goten-resource
// Resource change: AttestationDomainChange
// DO NOT EDIT!!!

package attestation_domain

import (
	gotenresource "github.com/cloudwan/goten-sdk/runtime/resource"
)

// proto imports
import (
	project "github.com/cloudwan/edgelq-sdk/iam/resources/v1alpha2/project"
	field_mask "google.golang.org/genproto/protobuf/field_mask"
)

// ensure the imports are used
var (
	_ = gotenresource.ListQuery(nil)
)

// make sure we're using proto imports
var (
	_ = &project.Project{}
	_ = &field_mask.FieldMask{}
)

func (c *AttestationDomainChange) IsAdd() bool {
	if c == nil {
		return false
	}
	_, ok := c.ChangeType.(*AttestationDomainChange_Added_)
	return ok
}

func (c *AttestationDomainChange) IsModify() bool {
	if c == nil {
		return false
	}
	_, ok := c.ChangeType.(*AttestationDomainChange_Modified_)
	return ok
}

func (c *AttestationDomainChange) IsCurrent() bool {
	if c == nil {
		return false
	}
	_, ok := c.ChangeType.(*AttestationDomainChange_Current_)
	return ok
}

func (c *AttestationDomainChange) IsDelete() bool {
	if c == nil {
		return false
	}
	_, ok := c.ChangeType.(*AttestationDomainChange_Removed_)
	return ok
}

func (c *AttestationDomainChange) GetCurrentViewIndex() int32 {
	switch cType := c.ChangeType.(type) {
	case *AttestationDomainChange_Added_:
		return cType.Added.ViewIndex
	case *AttestationDomainChange_Modified_:
		return cType.Modified.ViewIndex
	}
	return 0
}

func (c *AttestationDomainChange) GetPreviousViewIndex() int32 {
	switch cType := c.ChangeType.(type) {
	case *AttestationDomainChange_Removed_:
		return cType.Removed.ViewIndex
	case *AttestationDomainChange_Modified_:
		return cType.Modified.PreviousViewIndex
	}
	return 0
}

func (c *AttestationDomainChange) GetAttestationDomain() *AttestationDomain {
	if c == nil {
		return nil
	}
	switch cType := c.ChangeType.(type) {
	case *AttestationDomainChange_Added_:
		return cType.Added.AttestationDomain
	case *AttestationDomainChange_Modified_:
		return cType.Modified.AttestationDomain
	case *AttestationDomainChange_Current_:
		return cType.Current.AttestationDomain
	case *AttestationDomainChange_Removed_:
		return nil
	}
	return nil
}

func (c *AttestationDomainChange) GetRawResource() gotenresource.Resource {
	return c.GetAttestationDomain()
}

func (c *AttestationDomainChange) GetAttestationDomainName() *Name {
	if c == nil {
		return nil
	}
	switch cType := c.ChangeType.(type) {
	case *AttestationDomainChange_Added_:
		return cType.Added.AttestationDomain.GetName()
	case *AttestationDomainChange_Modified_:
		return cType.Modified.Name
	case *AttestationDomainChange_Current_:
		return cType.Current.AttestationDomain.GetName()
	case *AttestationDomainChange_Removed_:
		return cType.Removed.Name
	}
	return nil
}

func (c *AttestationDomainChange) GetRawName() gotenresource.Name {
	return c.GetAttestationDomainName()
}

func (c *AttestationDomainChange) SetAddedRaw(snapshot gotenresource.Resource, idx int) {
	c.ChangeType = &AttestationDomainChange_Added_{
		Added: &AttestationDomainChange_Added{
			AttestationDomain: snapshot.(*AttestationDomain),
			ViewIndex:         int32(idx),
		},
	}
}

func (c *AttestationDomainChange) SetModifiedRaw(name gotenresource.Name, snapshot gotenresource.Resource, prevIdx int, newIdx int) {
	c.ChangeType = &AttestationDomainChange_Modified_{
		Modified: &AttestationDomainChange_Modified{
			Name:              name.(*Name),
			AttestationDomain: snapshot.(*AttestationDomain),
			PreviousViewIndex: int32(prevIdx),
			ViewIndex:         int32(newIdx),
		},
	}
}

func (c *AttestationDomainChange) SetCurrentRaw(snapshot gotenresource.Resource) {
	c.ChangeType = &AttestationDomainChange_Current_{
		Current: &AttestationDomainChange_Current{
			AttestationDomain: snapshot.(*AttestationDomain),
		},
	}
}

func (c *AttestationDomainChange) SetDeletedRaw(name gotenresource.Name, idx int) {
	c.ChangeType = &AttestationDomainChange_Removed_{
		Removed: &AttestationDomainChange_Removed{
			Name:      name.(*Name),
			ViewIndex: int32(idx),
		},
	}
}
