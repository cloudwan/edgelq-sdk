// Code generated by protoc-gen-goten-object
// File: edgelq/iam/proto/v1alpha2/user.proto
// DO NOT EDIT!!!

package user

// proto imports
import (
	meta "github.com/cloudwan/goten-sdk/types/meta"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
)

// make sure we're using proto imports
var (
	_ = &timestamppb.Timestamp{}
	_ = &meta.Meta{}
)

type UserFieldPathBuilder struct{}

func NewUserFieldPathBuilder() UserFieldPathBuilder {
	return UserFieldPathBuilder{}
}
func (UserFieldPathBuilder) Name() UserPathSelectorName {
	return UserPathSelectorName{}
}
func (UserFieldPathBuilder) FullName() UserPathSelectorFullName {
	return UserPathSelectorFullName{}
}
func (UserFieldPathBuilder) Metadata() UserPathSelectorMetadata {
	return UserPathSelectorMetadata{}
}
func (UserFieldPathBuilder) Email() UserPathSelectorEmail {
	return UserPathSelectorEmail{}
}
func (UserFieldPathBuilder) EmailVerified() UserPathSelectorEmailVerified {
	return UserPathSelectorEmailVerified{}
}
func (UserFieldPathBuilder) AuthInfo() UserPathSelectorAuthInfo {
	return UserPathSelectorAuthInfo{}
}
func (UserFieldPathBuilder) Settings() UserPathSelectorSettings {
	return UserPathSelectorSettings{}
}
func (UserFieldPathBuilder) RefreshedTime() UserPathSelectorRefreshedTime {
	return UserPathSelectorRefreshedTime{}
}

type UserPathSelectorName struct{}

func (UserPathSelectorName) FieldPath() *User_FieldTerminalPath {
	return &User_FieldTerminalPath{selector: User_FieldPathSelectorName}
}

func (s UserPathSelectorName) WithValue(value *Name) *User_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*User_FieldTerminalPathValue)
}

func (s UserPathSelectorName) WithArrayOfValues(values []*Name) *User_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*User_FieldTerminalPathArrayOfValues)
}

type UserPathSelectorFullName struct{}

func (UserPathSelectorFullName) FieldPath() *User_FieldTerminalPath {
	return &User_FieldTerminalPath{selector: User_FieldPathSelectorFullName}
}

func (s UserPathSelectorFullName) WithValue(value string) *User_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*User_FieldTerminalPathValue)
}

func (s UserPathSelectorFullName) WithArrayOfValues(values []string) *User_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*User_FieldTerminalPathArrayOfValues)
}

type UserPathSelectorMetadata struct{}

func (UserPathSelectorMetadata) FieldPath() *User_FieldTerminalPath {
	return &User_FieldTerminalPath{selector: User_FieldPathSelectorMetadata}
}

func (s UserPathSelectorMetadata) WithValue(value *meta.Meta) *User_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*User_FieldTerminalPathValue)
}

func (s UserPathSelectorMetadata) WithArrayOfValues(values []*meta.Meta) *User_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*User_FieldTerminalPathArrayOfValues)
}

func (UserPathSelectorMetadata) WithSubPath(subPath meta.Meta_FieldPath) *User_FieldSubPath {
	return &User_FieldSubPath{selector: User_FieldPathSelectorMetadata, subPath: subPath}
}

func (s UserPathSelectorMetadata) WithSubValue(subPathValue meta.Meta_FieldPathValue) *User_FieldSubPathValue {
	return &User_FieldSubPathValue{User_FieldPath: s.WithSubPath(subPathValue), subPathValue: subPathValue}
}

func (s UserPathSelectorMetadata) WithSubArrayOfValues(subPathArrayOfValues meta.Meta_FieldPathArrayOfValues) *User_FieldSubPathArrayOfValues {
	return &User_FieldSubPathArrayOfValues{User_FieldPath: s.WithSubPath(subPathArrayOfValues), subPathArrayOfValues: subPathArrayOfValues}
}

func (s UserPathSelectorMetadata) WithSubArrayItemValue(subPathArrayItemValue meta.Meta_FieldPathArrayItemValue) *User_FieldSubPathArrayItemValue {
	return &User_FieldSubPathArrayItemValue{User_FieldPath: s.WithSubPath(subPathArrayItemValue), subPathItemValue: subPathArrayItemValue}
}

func (UserPathSelectorMetadata) CreateTime() UserPathSelectorMetadataCreateTime {
	return UserPathSelectorMetadataCreateTime{}
}

func (UserPathSelectorMetadata) UpdateTime() UserPathSelectorMetadataUpdateTime {
	return UserPathSelectorMetadataUpdateTime{}
}

func (UserPathSelectorMetadata) DeleteTime() UserPathSelectorMetadataDeleteTime {
	return UserPathSelectorMetadataDeleteTime{}
}

func (UserPathSelectorMetadata) Uuid() UserPathSelectorMetadataUuid {
	return UserPathSelectorMetadataUuid{}
}

func (UserPathSelectorMetadata) Tags() UserPathSelectorMetadataTags {
	return UserPathSelectorMetadataTags{}
}

func (UserPathSelectorMetadata) Labels() UserPathSelectorMetadataLabels {
	return UserPathSelectorMetadataLabels{}
}

func (UserPathSelectorMetadata) Annotations() UserPathSelectorMetadataAnnotations {
	return UserPathSelectorMetadataAnnotations{}
}

func (UserPathSelectorMetadata) Generation() UserPathSelectorMetadataGeneration {
	return UserPathSelectorMetadataGeneration{}
}

func (UserPathSelectorMetadata) ResourceVersion() UserPathSelectorMetadataResourceVersion {
	return UserPathSelectorMetadataResourceVersion{}
}

func (UserPathSelectorMetadata) OwnerReferences() UserPathSelectorMetadataOwnerReferences {
	return UserPathSelectorMetadataOwnerReferences{}
}

func (UserPathSelectorMetadata) Shards() UserPathSelectorMetadataShards {
	return UserPathSelectorMetadataShards{}
}

func (UserPathSelectorMetadata) Syncing() UserPathSelectorMetadataSyncing {
	return UserPathSelectorMetadataSyncing{}
}

func (UserPathSelectorMetadata) Lifecycle() UserPathSelectorMetadataLifecycle {
	return UserPathSelectorMetadataLifecycle{}
}

func (UserPathSelectorMetadata) Services() UserPathSelectorMetadataServices {
	return UserPathSelectorMetadataServices{}
}

type UserPathSelectorMetadataCreateTime struct{}

func (UserPathSelectorMetadataCreateTime) FieldPath() *User_FieldSubPath {
	return &User_FieldSubPath{
		selector: User_FieldPathSelectorMetadata,
		subPath:  meta.NewMetaFieldPathBuilder().CreateTime().FieldPath(),
	}
}

func (s UserPathSelectorMetadataCreateTime) WithValue(value *timestamppb.Timestamp) *User_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*User_FieldSubPathValue)
}

func (s UserPathSelectorMetadataCreateTime) WithArrayOfValues(values []*timestamppb.Timestamp) *User_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*User_FieldSubPathArrayOfValues)
}

type UserPathSelectorMetadataUpdateTime struct{}

func (UserPathSelectorMetadataUpdateTime) FieldPath() *User_FieldSubPath {
	return &User_FieldSubPath{
		selector: User_FieldPathSelectorMetadata,
		subPath:  meta.NewMetaFieldPathBuilder().UpdateTime().FieldPath(),
	}
}

func (s UserPathSelectorMetadataUpdateTime) WithValue(value *timestamppb.Timestamp) *User_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*User_FieldSubPathValue)
}

func (s UserPathSelectorMetadataUpdateTime) WithArrayOfValues(values []*timestamppb.Timestamp) *User_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*User_FieldSubPathArrayOfValues)
}

type UserPathSelectorMetadataDeleteTime struct{}

func (UserPathSelectorMetadataDeleteTime) FieldPath() *User_FieldSubPath {
	return &User_FieldSubPath{
		selector: User_FieldPathSelectorMetadata,
		subPath:  meta.NewMetaFieldPathBuilder().DeleteTime().FieldPath(),
	}
}

func (s UserPathSelectorMetadataDeleteTime) WithValue(value *timestamppb.Timestamp) *User_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*User_FieldSubPathValue)
}

func (s UserPathSelectorMetadataDeleteTime) WithArrayOfValues(values []*timestamppb.Timestamp) *User_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*User_FieldSubPathArrayOfValues)
}

type UserPathSelectorMetadataUuid struct{}

func (UserPathSelectorMetadataUuid) FieldPath() *User_FieldSubPath {
	return &User_FieldSubPath{
		selector: User_FieldPathSelectorMetadata,
		subPath:  meta.NewMetaFieldPathBuilder().Uuid().FieldPath(),
	}
}

func (s UserPathSelectorMetadataUuid) WithValue(value string) *User_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*User_FieldSubPathValue)
}

func (s UserPathSelectorMetadataUuid) WithArrayOfValues(values []string) *User_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*User_FieldSubPathArrayOfValues)
}

type UserPathSelectorMetadataTags struct{}

func (UserPathSelectorMetadataTags) FieldPath() *User_FieldSubPath {
	return &User_FieldSubPath{
		selector: User_FieldPathSelectorMetadata,
		subPath:  meta.NewMetaFieldPathBuilder().Tags().FieldPath(),
	}
}

func (s UserPathSelectorMetadataTags) WithValue(value []string) *User_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*User_FieldSubPathValue)
}

func (s UserPathSelectorMetadataTags) WithArrayOfValues(values [][]string) *User_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*User_FieldSubPathArrayOfValues)
}

func (s UserPathSelectorMetadataTags) WithItemValue(value string) *User_FieldSubPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*User_FieldSubPathArrayItemValue)
}

type UserPathSelectorMetadataLabels struct{}

func (UserPathSelectorMetadataLabels) FieldPath() *User_FieldSubPath {
	return &User_FieldSubPath{
		selector: User_FieldPathSelectorMetadata,
		subPath:  meta.NewMetaFieldPathBuilder().Labels().FieldPath(),
	}
}

func (s UserPathSelectorMetadataLabels) WithValue(value map[string]string) *User_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*User_FieldSubPathValue)
}

func (s UserPathSelectorMetadataLabels) WithArrayOfValues(values []map[string]string) *User_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*User_FieldSubPathArrayOfValues)
}

func (UserPathSelectorMetadataLabels) WithKey(key string) UserMapPathSelectorMetadataLabels {
	return UserMapPathSelectorMetadataLabels{key: key}
}

type UserMapPathSelectorMetadataLabels struct {
	key string
}

func (s UserMapPathSelectorMetadataLabels) FieldPath() *User_FieldSubPath {
	return &User_FieldSubPath{
		selector: User_FieldPathSelectorMetadata,
		subPath:  meta.NewMetaFieldPathBuilder().Labels().WithKey(s.key).FieldPath(),
	}
}

func (s UserMapPathSelectorMetadataLabels) WithValue(value string) *User_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*User_FieldSubPathValue)
}

func (s UserMapPathSelectorMetadataLabels) WithArrayOfValues(values []string) *User_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*User_FieldSubPathArrayOfValues)
}

type UserPathSelectorMetadataAnnotations struct{}

func (UserPathSelectorMetadataAnnotations) FieldPath() *User_FieldSubPath {
	return &User_FieldSubPath{
		selector: User_FieldPathSelectorMetadata,
		subPath:  meta.NewMetaFieldPathBuilder().Annotations().FieldPath(),
	}
}

func (s UserPathSelectorMetadataAnnotations) WithValue(value map[string]string) *User_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*User_FieldSubPathValue)
}

func (s UserPathSelectorMetadataAnnotations) WithArrayOfValues(values []map[string]string) *User_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*User_FieldSubPathArrayOfValues)
}

func (UserPathSelectorMetadataAnnotations) WithKey(key string) UserMapPathSelectorMetadataAnnotations {
	return UserMapPathSelectorMetadataAnnotations{key: key}
}

type UserMapPathSelectorMetadataAnnotations struct {
	key string
}

func (s UserMapPathSelectorMetadataAnnotations) FieldPath() *User_FieldSubPath {
	return &User_FieldSubPath{
		selector: User_FieldPathSelectorMetadata,
		subPath:  meta.NewMetaFieldPathBuilder().Annotations().WithKey(s.key).FieldPath(),
	}
}

func (s UserMapPathSelectorMetadataAnnotations) WithValue(value string) *User_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*User_FieldSubPathValue)
}

func (s UserMapPathSelectorMetadataAnnotations) WithArrayOfValues(values []string) *User_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*User_FieldSubPathArrayOfValues)
}

type UserPathSelectorMetadataGeneration struct{}

func (UserPathSelectorMetadataGeneration) FieldPath() *User_FieldSubPath {
	return &User_FieldSubPath{
		selector: User_FieldPathSelectorMetadata,
		subPath:  meta.NewMetaFieldPathBuilder().Generation().FieldPath(),
	}
}

func (s UserPathSelectorMetadataGeneration) WithValue(value int64) *User_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*User_FieldSubPathValue)
}

func (s UserPathSelectorMetadataGeneration) WithArrayOfValues(values []int64) *User_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*User_FieldSubPathArrayOfValues)
}

type UserPathSelectorMetadataResourceVersion struct{}

func (UserPathSelectorMetadataResourceVersion) FieldPath() *User_FieldSubPath {
	return &User_FieldSubPath{
		selector: User_FieldPathSelectorMetadata,
		subPath:  meta.NewMetaFieldPathBuilder().ResourceVersion().FieldPath(),
	}
}

func (s UserPathSelectorMetadataResourceVersion) WithValue(value string) *User_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*User_FieldSubPathValue)
}

func (s UserPathSelectorMetadataResourceVersion) WithArrayOfValues(values []string) *User_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*User_FieldSubPathArrayOfValues)
}

type UserPathSelectorMetadataOwnerReferences struct{}

func (UserPathSelectorMetadataOwnerReferences) FieldPath() *User_FieldSubPath {
	return &User_FieldSubPath{
		selector: User_FieldPathSelectorMetadata,
		subPath:  meta.NewMetaFieldPathBuilder().OwnerReferences().FieldPath(),
	}
}

func (s UserPathSelectorMetadataOwnerReferences) WithValue(value []*meta.OwnerReference) *User_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*User_FieldSubPathValue)
}

func (s UserPathSelectorMetadataOwnerReferences) WithArrayOfValues(values [][]*meta.OwnerReference) *User_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*User_FieldSubPathArrayOfValues)
}

func (s UserPathSelectorMetadataOwnerReferences) WithItemValue(value *meta.OwnerReference) *User_FieldSubPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*User_FieldSubPathArrayItemValue)
}

func (UserPathSelectorMetadataOwnerReferences) Kind() UserPathSelectorMetadataOwnerReferencesKind {
	return UserPathSelectorMetadataOwnerReferencesKind{}
}

func (UserPathSelectorMetadataOwnerReferences) Version() UserPathSelectorMetadataOwnerReferencesVersion {
	return UserPathSelectorMetadataOwnerReferencesVersion{}
}

func (UserPathSelectorMetadataOwnerReferences) Name() UserPathSelectorMetadataOwnerReferencesName {
	return UserPathSelectorMetadataOwnerReferencesName{}
}

func (UserPathSelectorMetadataOwnerReferences) Region() UserPathSelectorMetadataOwnerReferencesRegion {
	return UserPathSelectorMetadataOwnerReferencesRegion{}
}

func (UserPathSelectorMetadataOwnerReferences) Controller() UserPathSelectorMetadataOwnerReferencesController {
	return UserPathSelectorMetadataOwnerReferencesController{}
}

func (UserPathSelectorMetadataOwnerReferences) RequiresOwnerReference() UserPathSelectorMetadataOwnerReferencesRequiresOwnerReference {
	return UserPathSelectorMetadataOwnerReferencesRequiresOwnerReference{}
}

func (UserPathSelectorMetadataOwnerReferences) UnsetOnDelete() UserPathSelectorMetadataOwnerReferencesUnsetOnDelete {
	return UserPathSelectorMetadataOwnerReferencesUnsetOnDelete{}
}

type UserPathSelectorMetadataOwnerReferencesKind struct{}

func (UserPathSelectorMetadataOwnerReferencesKind) FieldPath() *User_FieldSubPath {
	return &User_FieldSubPath{
		selector: User_FieldPathSelectorMetadata,
		subPath:  meta.NewMetaFieldPathBuilder().OwnerReferences().Kind().FieldPath(),
	}
}

func (s UserPathSelectorMetadataOwnerReferencesKind) WithValue(value string) *User_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*User_FieldSubPathValue)
}

func (s UserPathSelectorMetadataOwnerReferencesKind) WithArrayOfValues(values []string) *User_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*User_FieldSubPathArrayOfValues)
}

type UserPathSelectorMetadataOwnerReferencesVersion struct{}

func (UserPathSelectorMetadataOwnerReferencesVersion) FieldPath() *User_FieldSubPath {
	return &User_FieldSubPath{
		selector: User_FieldPathSelectorMetadata,
		subPath:  meta.NewMetaFieldPathBuilder().OwnerReferences().Version().FieldPath(),
	}
}

func (s UserPathSelectorMetadataOwnerReferencesVersion) WithValue(value string) *User_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*User_FieldSubPathValue)
}

func (s UserPathSelectorMetadataOwnerReferencesVersion) WithArrayOfValues(values []string) *User_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*User_FieldSubPathArrayOfValues)
}

type UserPathSelectorMetadataOwnerReferencesName struct{}

func (UserPathSelectorMetadataOwnerReferencesName) FieldPath() *User_FieldSubPath {
	return &User_FieldSubPath{
		selector: User_FieldPathSelectorMetadata,
		subPath:  meta.NewMetaFieldPathBuilder().OwnerReferences().Name().FieldPath(),
	}
}

func (s UserPathSelectorMetadataOwnerReferencesName) WithValue(value string) *User_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*User_FieldSubPathValue)
}

func (s UserPathSelectorMetadataOwnerReferencesName) WithArrayOfValues(values []string) *User_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*User_FieldSubPathArrayOfValues)
}

type UserPathSelectorMetadataOwnerReferencesRegion struct{}

func (UserPathSelectorMetadataOwnerReferencesRegion) FieldPath() *User_FieldSubPath {
	return &User_FieldSubPath{
		selector: User_FieldPathSelectorMetadata,
		subPath:  meta.NewMetaFieldPathBuilder().OwnerReferences().Region().FieldPath(),
	}
}

func (s UserPathSelectorMetadataOwnerReferencesRegion) WithValue(value string) *User_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*User_FieldSubPathValue)
}

func (s UserPathSelectorMetadataOwnerReferencesRegion) WithArrayOfValues(values []string) *User_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*User_FieldSubPathArrayOfValues)
}

type UserPathSelectorMetadataOwnerReferencesController struct{}

func (UserPathSelectorMetadataOwnerReferencesController) FieldPath() *User_FieldSubPath {
	return &User_FieldSubPath{
		selector: User_FieldPathSelectorMetadata,
		subPath:  meta.NewMetaFieldPathBuilder().OwnerReferences().Controller().FieldPath(),
	}
}

func (s UserPathSelectorMetadataOwnerReferencesController) WithValue(value bool) *User_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*User_FieldSubPathValue)
}

func (s UserPathSelectorMetadataOwnerReferencesController) WithArrayOfValues(values []bool) *User_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*User_FieldSubPathArrayOfValues)
}

type UserPathSelectorMetadataOwnerReferencesRequiresOwnerReference struct{}

func (UserPathSelectorMetadataOwnerReferencesRequiresOwnerReference) FieldPath() *User_FieldSubPath {
	return &User_FieldSubPath{
		selector: User_FieldPathSelectorMetadata,
		subPath:  meta.NewMetaFieldPathBuilder().OwnerReferences().RequiresOwnerReference().FieldPath(),
	}
}

func (s UserPathSelectorMetadataOwnerReferencesRequiresOwnerReference) WithValue(value bool) *User_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*User_FieldSubPathValue)
}

func (s UserPathSelectorMetadataOwnerReferencesRequiresOwnerReference) WithArrayOfValues(values []bool) *User_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*User_FieldSubPathArrayOfValues)
}

type UserPathSelectorMetadataOwnerReferencesUnsetOnDelete struct{}

func (UserPathSelectorMetadataOwnerReferencesUnsetOnDelete) FieldPath() *User_FieldSubPath {
	return &User_FieldSubPath{
		selector: User_FieldPathSelectorMetadata,
		subPath:  meta.NewMetaFieldPathBuilder().OwnerReferences().UnsetOnDelete().FieldPath(),
	}
}

func (s UserPathSelectorMetadataOwnerReferencesUnsetOnDelete) WithValue(value bool) *User_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*User_FieldSubPathValue)
}

func (s UserPathSelectorMetadataOwnerReferencesUnsetOnDelete) WithArrayOfValues(values []bool) *User_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*User_FieldSubPathArrayOfValues)
}

type UserPathSelectorMetadataShards struct{}

func (UserPathSelectorMetadataShards) FieldPath() *User_FieldSubPath {
	return &User_FieldSubPath{
		selector: User_FieldPathSelectorMetadata,
		subPath:  meta.NewMetaFieldPathBuilder().Shards().FieldPath(),
	}
}

func (s UserPathSelectorMetadataShards) WithValue(value map[string]int64) *User_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*User_FieldSubPathValue)
}

func (s UserPathSelectorMetadataShards) WithArrayOfValues(values []map[string]int64) *User_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*User_FieldSubPathArrayOfValues)
}

func (UserPathSelectorMetadataShards) WithKey(key string) UserMapPathSelectorMetadataShards {
	return UserMapPathSelectorMetadataShards{key: key}
}

type UserMapPathSelectorMetadataShards struct {
	key string
}

func (s UserMapPathSelectorMetadataShards) FieldPath() *User_FieldSubPath {
	return &User_FieldSubPath{
		selector: User_FieldPathSelectorMetadata,
		subPath:  meta.NewMetaFieldPathBuilder().Shards().WithKey(s.key).FieldPath(),
	}
}

func (s UserMapPathSelectorMetadataShards) WithValue(value int64) *User_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*User_FieldSubPathValue)
}

func (s UserMapPathSelectorMetadataShards) WithArrayOfValues(values []int64) *User_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*User_FieldSubPathArrayOfValues)
}

type UserPathSelectorMetadataSyncing struct{}

func (UserPathSelectorMetadataSyncing) FieldPath() *User_FieldSubPath {
	return &User_FieldSubPath{
		selector: User_FieldPathSelectorMetadata,
		subPath:  meta.NewMetaFieldPathBuilder().Syncing().FieldPath(),
	}
}

func (s UserPathSelectorMetadataSyncing) WithValue(value *meta.SyncingMeta) *User_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*User_FieldSubPathValue)
}

func (s UserPathSelectorMetadataSyncing) WithArrayOfValues(values []*meta.SyncingMeta) *User_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*User_FieldSubPathArrayOfValues)
}

func (UserPathSelectorMetadataSyncing) OwningRegion() UserPathSelectorMetadataSyncingOwningRegion {
	return UserPathSelectorMetadataSyncingOwningRegion{}
}

func (UserPathSelectorMetadataSyncing) Regions() UserPathSelectorMetadataSyncingRegions {
	return UserPathSelectorMetadataSyncingRegions{}
}

type UserPathSelectorMetadataSyncingOwningRegion struct{}

func (UserPathSelectorMetadataSyncingOwningRegion) FieldPath() *User_FieldSubPath {
	return &User_FieldSubPath{
		selector: User_FieldPathSelectorMetadata,
		subPath:  meta.NewMetaFieldPathBuilder().Syncing().OwningRegion().FieldPath(),
	}
}

func (s UserPathSelectorMetadataSyncingOwningRegion) WithValue(value string) *User_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*User_FieldSubPathValue)
}

func (s UserPathSelectorMetadataSyncingOwningRegion) WithArrayOfValues(values []string) *User_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*User_FieldSubPathArrayOfValues)
}

type UserPathSelectorMetadataSyncingRegions struct{}

func (UserPathSelectorMetadataSyncingRegions) FieldPath() *User_FieldSubPath {
	return &User_FieldSubPath{
		selector: User_FieldPathSelectorMetadata,
		subPath:  meta.NewMetaFieldPathBuilder().Syncing().Regions().FieldPath(),
	}
}

func (s UserPathSelectorMetadataSyncingRegions) WithValue(value []string) *User_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*User_FieldSubPathValue)
}

func (s UserPathSelectorMetadataSyncingRegions) WithArrayOfValues(values [][]string) *User_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*User_FieldSubPathArrayOfValues)
}

func (s UserPathSelectorMetadataSyncingRegions) WithItemValue(value string) *User_FieldSubPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*User_FieldSubPathArrayItemValue)
}

type UserPathSelectorMetadataLifecycle struct{}

func (UserPathSelectorMetadataLifecycle) FieldPath() *User_FieldSubPath {
	return &User_FieldSubPath{
		selector: User_FieldPathSelectorMetadata,
		subPath:  meta.NewMetaFieldPathBuilder().Lifecycle().FieldPath(),
	}
}

func (s UserPathSelectorMetadataLifecycle) WithValue(value *meta.Lifecycle) *User_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*User_FieldSubPathValue)
}

func (s UserPathSelectorMetadataLifecycle) WithArrayOfValues(values []*meta.Lifecycle) *User_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*User_FieldSubPathArrayOfValues)
}

func (UserPathSelectorMetadataLifecycle) State() UserPathSelectorMetadataLifecycleState {
	return UserPathSelectorMetadataLifecycleState{}
}

func (UserPathSelectorMetadataLifecycle) BlockDeletion() UserPathSelectorMetadataLifecycleBlockDeletion {
	return UserPathSelectorMetadataLifecycleBlockDeletion{}
}

type UserPathSelectorMetadataLifecycleState struct{}

func (UserPathSelectorMetadataLifecycleState) FieldPath() *User_FieldSubPath {
	return &User_FieldSubPath{
		selector: User_FieldPathSelectorMetadata,
		subPath:  meta.NewMetaFieldPathBuilder().Lifecycle().State().FieldPath(),
	}
}

func (s UserPathSelectorMetadataLifecycleState) WithValue(value meta.Lifecycle_State) *User_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*User_FieldSubPathValue)
}

func (s UserPathSelectorMetadataLifecycleState) WithArrayOfValues(values []meta.Lifecycle_State) *User_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*User_FieldSubPathArrayOfValues)
}

type UserPathSelectorMetadataLifecycleBlockDeletion struct{}

func (UserPathSelectorMetadataLifecycleBlockDeletion) FieldPath() *User_FieldSubPath {
	return &User_FieldSubPath{
		selector: User_FieldPathSelectorMetadata,
		subPath:  meta.NewMetaFieldPathBuilder().Lifecycle().BlockDeletion().FieldPath(),
	}
}

func (s UserPathSelectorMetadataLifecycleBlockDeletion) WithValue(value bool) *User_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*User_FieldSubPathValue)
}

func (s UserPathSelectorMetadataLifecycleBlockDeletion) WithArrayOfValues(values []bool) *User_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*User_FieldSubPathArrayOfValues)
}

type UserPathSelectorMetadataServices struct{}

func (UserPathSelectorMetadataServices) FieldPath() *User_FieldSubPath {
	return &User_FieldSubPath{
		selector: User_FieldPathSelectorMetadata,
		subPath:  meta.NewMetaFieldPathBuilder().Services().FieldPath(),
	}
}

func (s UserPathSelectorMetadataServices) WithValue(value *meta.ServicesInfo) *User_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*User_FieldSubPathValue)
}

func (s UserPathSelectorMetadataServices) WithArrayOfValues(values []*meta.ServicesInfo) *User_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*User_FieldSubPathArrayOfValues)
}

func (UserPathSelectorMetadataServices) OwningService() UserPathSelectorMetadataServicesOwningService {
	return UserPathSelectorMetadataServicesOwningService{}
}

func (UserPathSelectorMetadataServices) AllowedServices() UserPathSelectorMetadataServicesAllowedServices {
	return UserPathSelectorMetadataServicesAllowedServices{}
}

type UserPathSelectorMetadataServicesOwningService struct{}

func (UserPathSelectorMetadataServicesOwningService) FieldPath() *User_FieldSubPath {
	return &User_FieldSubPath{
		selector: User_FieldPathSelectorMetadata,
		subPath:  meta.NewMetaFieldPathBuilder().Services().OwningService().FieldPath(),
	}
}

func (s UserPathSelectorMetadataServicesOwningService) WithValue(value string) *User_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*User_FieldSubPathValue)
}

func (s UserPathSelectorMetadataServicesOwningService) WithArrayOfValues(values []string) *User_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*User_FieldSubPathArrayOfValues)
}

type UserPathSelectorMetadataServicesAllowedServices struct{}

func (UserPathSelectorMetadataServicesAllowedServices) FieldPath() *User_FieldSubPath {
	return &User_FieldSubPath{
		selector: User_FieldPathSelectorMetadata,
		subPath:  meta.NewMetaFieldPathBuilder().Services().AllowedServices().FieldPath(),
	}
}

func (s UserPathSelectorMetadataServicesAllowedServices) WithValue(value []string) *User_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*User_FieldSubPathValue)
}

func (s UserPathSelectorMetadataServicesAllowedServices) WithArrayOfValues(values [][]string) *User_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*User_FieldSubPathArrayOfValues)
}

func (s UserPathSelectorMetadataServicesAllowedServices) WithItemValue(value string) *User_FieldSubPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*User_FieldSubPathArrayItemValue)
}

type UserPathSelectorEmail struct{}

func (UserPathSelectorEmail) FieldPath() *User_FieldTerminalPath {
	return &User_FieldTerminalPath{selector: User_FieldPathSelectorEmail}
}

func (s UserPathSelectorEmail) WithValue(value string) *User_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*User_FieldTerminalPathValue)
}

func (s UserPathSelectorEmail) WithArrayOfValues(values []string) *User_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*User_FieldTerminalPathArrayOfValues)
}

type UserPathSelectorEmailVerified struct{}

func (UserPathSelectorEmailVerified) FieldPath() *User_FieldTerminalPath {
	return &User_FieldTerminalPath{selector: User_FieldPathSelectorEmailVerified}
}

func (s UserPathSelectorEmailVerified) WithValue(value bool) *User_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*User_FieldTerminalPathValue)
}

func (s UserPathSelectorEmailVerified) WithArrayOfValues(values []bool) *User_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*User_FieldTerminalPathArrayOfValues)
}

type UserPathSelectorAuthInfo struct{}

func (UserPathSelectorAuthInfo) FieldPath() *User_FieldTerminalPath {
	return &User_FieldTerminalPath{selector: User_FieldPathSelectorAuthInfo}
}

func (s UserPathSelectorAuthInfo) WithValue(value *User_AuthInfo) *User_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*User_FieldTerminalPathValue)
}

func (s UserPathSelectorAuthInfo) WithArrayOfValues(values []*User_AuthInfo) *User_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*User_FieldTerminalPathArrayOfValues)
}

func (UserPathSelectorAuthInfo) WithSubPath(subPath UserAuthInfo_FieldPath) *User_FieldSubPath {
	return &User_FieldSubPath{selector: User_FieldPathSelectorAuthInfo, subPath: subPath}
}

func (s UserPathSelectorAuthInfo) WithSubValue(subPathValue UserAuthInfo_FieldPathValue) *User_FieldSubPathValue {
	return &User_FieldSubPathValue{User_FieldPath: s.WithSubPath(subPathValue), subPathValue: subPathValue}
}

func (s UserPathSelectorAuthInfo) WithSubArrayOfValues(subPathArrayOfValues UserAuthInfo_FieldPathArrayOfValues) *User_FieldSubPathArrayOfValues {
	return &User_FieldSubPathArrayOfValues{User_FieldPath: s.WithSubPath(subPathArrayOfValues), subPathArrayOfValues: subPathArrayOfValues}
}

func (s UserPathSelectorAuthInfo) WithSubArrayItemValue(subPathArrayItemValue UserAuthInfo_FieldPathArrayItemValue) *User_FieldSubPathArrayItemValue {
	return &User_FieldSubPathArrayItemValue{User_FieldPath: s.WithSubPath(subPathArrayItemValue), subPathItemValue: subPathArrayItemValue}
}

func (UserPathSelectorAuthInfo) Provider() UserPathSelectorAuthInfoProvider {
	return UserPathSelectorAuthInfoProvider{}
}

func (UserPathSelectorAuthInfo) Id() UserPathSelectorAuthInfoId {
	return UserPathSelectorAuthInfoId{}
}

type UserPathSelectorAuthInfoProvider struct{}

func (UserPathSelectorAuthInfoProvider) FieldPath() *User_FieldSubPath {
	return &User_FieldSubPath{
		selector: User_FieldPathSelectorAuthInfo,
		subPath:  NewUserAuthInfoFieldPathBuilder().Provider().FieldPath(),
	}
}

func (s UserPathSelectorAuthInfoProvider) WithValue(value string) *User_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*User_FieldSubPathValue)
}

func (s UserPathSelectorAuthInfoProvider) WithArrayOfValues(values []string) *User_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*User_FieldSubPathArrayOfValues)
}

type UserPathSelectorAuthInfoId struct{}

func (UserPathSelectorAuthInfoId) FieldPath() *User_FieldSubPath {
	return &User_FieldSubPath{
		selector: User_FieldPathSelectorAuthInfo,
		subPath:  NewUserAuthInfoFieldPathBuilder().Id().FieldPath(),
	}
}

func (s UserPathSelectorAuthInfoId) WithValue(value string) *User_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*User_FieldSubPathValue)
}

func (s UserPathSelectorAuthInfoId) WithArrayOfValues(values []string) *User_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*User_FieldSubPathArrayOfValues)
}

type UserPathSelectorSettings struct{}

func (UserPathSelectorSettings) FieldPath() *User_FieldTerminalPath {
	return &User_FieldTerminalPath{selector: User_FieldPathSelectorSettings}
}

func (s UserPathSelectorSettings) WithValue(value map[string]string) *User_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*User_FieldTerminalPathValue)
}

func (s UserPathSelectorSettings) WithArrayOfValues(values []map[string]string) *User_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*User_FieldTerminalPathArrayOfValues)
}

func (UserPathSelectorSettings) WithKey(key string) UserMapPathSelectorSettings {
	return UserMapPathSelectorSettings{key: key}
}

type UserMapPathSelectorSettings struct {
	key string
}

func (s UserMapPathSelectorSettings) FieldPath() *User_FieldPathMap {
	return &User_FieldPathMap{selector: User_FieldPathSelectorSettings, key: s.key}
}

func (s UserMapPathSelectorSettings) WithValue(value string) *User_FieldPathMapValue {
	return s.FieldPath().WithIValue(value).(*User_FieldPathMapValue)
}

func (s UserMapPathSelectorSettings) WithArrayOfValues(values []string) *User_FieldPathMapArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*User_FieldPathMapArrayOfValues)
}

type UserPathSelectorRefreshedTime struct{}

func (UserPathSelectorRefreshedTime) FieldPath() *User_FieldTerminalPath {
	return &User_FieldTerminalPath{selector: User_FieldPathSelectorRefreshedTime}
}

func (s UserPathSelectorRefreshedTime) WithValue(value *timestamppb.Timestamp) *User_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*User_FieldTerminalPathValue)
}

func (s UserPathSelectorRefreshedTime) WithArrayOfValues(values []*timestamppb.Timestamp) *User_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*User_FieldTerminalPathArrayOfValues)
}

type UserAuthInfoFieldPathBuilder struct{}

func NewUserAuthInfoFieldPathBuilder() UserAuthInfoFieldPathBuilder {
	return UserAuthInfoFieldPathBuilder{}
}
func (UserAuthInfoFieldPathBuilder) Provider() User_AuthInfoPathSelectorProvider {
	return User_AuthInfoPathSelectorProvider{}
}
func (UserAuthInfoFieldPathBuilder) Id() User_AuthInfoPathSelectorId {
	return User_AuthInfoPathSelectorId{}
}

type User_AuthInfoPathSelectorProvider struct{}

func (User_AuthInfoPathSelectorProvider) FieldPath() *UserAuthInfo_FieldTerminalPath {
	return &UserAuthInfo_FieldTerminalPath{selector: UserAuthInfo_FieldPathSelectorProvider}
}

func (s User_AuthInfoPathSelectorProvider) WithValue(value string) *UserAuthInfo_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*UserAuthInfo_FieldTerminalPathValue)
}

func (s User_AuthInfoPathSelectorProvider) WithArrayOfValues(values []string) *UserAuthInfo_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UserAuthInfo_FieldTerminalPathArrayOfValues)
}

type User_AuthInfoPathSelectorId struct{}

func (User_AuthInfoPathSelectorId) FieldPath() *UserAuthInfo_FieldTerminalPath {
	return &UserAuthInfo_FieldTerminalPath{selector: UserAuthInfo_FieldPathSelectorId}
}

func (s User_AuthInfoPathSelectorId) WithValue(value string) *UserAuthInfo_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*UserAuthInfo_FieldTerminalPathValue)
}

func (s User_AuthInfoPathSelectorId) WithArrayOfValues(values []string) *UserAuthInfo_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UserAuthInfo_FieldTerminalPathArrayOfValues)
}
