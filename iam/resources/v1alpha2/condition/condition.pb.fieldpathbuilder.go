// Code generated by protoc-gen-goten-object
// File: edgelq/iam/proto/v1alpha2/condition.proto
// DO NOT EDIT!!!

package condition

// proto imports
import (
	ntt_meta "github.com/cloudwan/edgelq-sdk/common/types/meta"
	multi_region_policy "github.com/cloudwan/edgelq-sdk/common/types/multi_region_policy"
	organization "github.com/cloudwan/edgelq-sdk/iam/resources/v1alpha2/organization"
	project "github.com/cloudwan/edgelq-sdk/iam/resources/v1alpha2/project"
	meta_service "github.com/cloudwan/edgelq-sdk/meta/resources/v1alpha2/service"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
)

// make sure we're using proto imports
var (
	_ = &ntt_meta.Meta{}
	_ = &multi_region_policy.MultiRegionPolicy{}
	_ = &organization.Organization{}
	_ = &project.Project{}
	_ = &meta_service.Service{}
	_ = &timestamp.Timestamp{}
)

type ConditionFieldPathBuilder struct{}

func NewConditionFieldPathBuilder() ConditionFieldPathBuilder {
	return ConditionFieldPathBuilder{}
}
func (ConditionFieldPathBuilder) Name() ConditionPathSelectorName {
	return ConditionPathSelectorName{}
}
func (ConditionFieldPathBuilder) DisplayName() ConditionPathSelectorDisplayName {
	return ConditionPathSelectorDisplayName{}
}
func (ConditionFieldPathBuilder) Description() ConditionPathSelectorDescription {
	return ConditionPathSelectorDescription{}
}
func (ConditionFieldPathBuilder) Expression() ConditionPathSelectorExpression {
	return ConditionPathSelectorExpression{}
}
func (ConditionFieldPathBuilder) ParameterDeclarations() ConditionPathSelectorParameterDeclarations {
	return ConditionPathSelectorParameterDeclarations{}
}
func (ConditionFieldPathBuilder) Metadata() ConditionPathSelectorMetadata {
	return ConditionPathSelectorMetadata{}
}

type ConditionPathSelectorName struct{}

func (ConditionPathSelectorName) FieldPath() *Condition_FieldTerminalPath {
	return &Condition_FieldTerminalPath{selector: Condition_FieldPathSelectorName}
}

func (s ConditionPathSelectorName) WithValue(value *Name) *Condition_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*Condition_FieldTerminalPathValue)
}

func (s ConditionPathSelectorName) WithArrayOfValues(values []*Name) *Condition_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*Condition_FieldTerminalPathArrayOfValues)
}

type ConditionPathSelectorDisplayName struct{}

func (ConditionPathSelectorDisplayName) FieldPath() *Condition_FieldTerminalPath {
	return &Condition_FieldTerminalPath{selector: Condition_FieldPathSelectorDisplayName}
}

func (s ConditionPathSelectorDisplayName) WithValue(value string) *Condition_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*Condition_FieldTerminalPathValue)
}

func (s ConditionPathSelectorDisplayName) WithArrayOfValues(values []string) *Condition_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*Condition_FieldTerminalPathArrayOfValues)
}

type ConditionPathSelectorDescription struct{}

func (ConditionPathSelectorDescription) FieldPath() *Condition_FieldTerminalPath {
	return &Condition_FieldTerminalPath{selector: Condition_FieldPathSelectorDescription}
}

func (s ConditionPathSelectorDescription) WithValue(value string) *Condition_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*Condition_FieldTerminalPathValue)
}

func (s ConditionPathSelectorDescription) WithArrayOfValues(values []string) *Condition_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*Condition_FieldTerminalPathArrayOfValues)
}

type ConditionPathSelectorExpression struct{}

func (ConditionPathSelectorExpression) FieldPath() *Condition_FieldTerminalPath {
	return &Condition_FieldTerminalPath{selector: Condition_FieldPathSelectorExpression}
}

func (s ConditionPathSelectorExpression) WithValue(value string) *Condition_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*Condition_FieldTerminalPathValue)
}

func (s ConditionPathSelectorExpression) WithArrayOfValues(values []string) *Condition_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*Condition_FieldTerminalPathArrayOfValues)
}

type ConditionPathSelectorParameterDeclarations struct{}

func (ConditionPathSelectorParameterDeclarations) FieldPath() *Condition_FieldTerminalPath {
	return &Condition_FieldTerminalPath{selector: Condition_FieldPathSelectorParameterDeclarations}
}

func (s ConditionPathSelectorParameterDeclarations) WithValue(value []*Condition_ParameterDeclaration) *Condition_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*Condition_FieldTerminalPathValue)
}

func (s ConditionPathSelectorParameterDeclarations) WithArrayOfValues(values [][]*Condition_ParameterDeclaration) *Condition_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*Condition_FieldTerminalPathArrayOfValues)
}

func (s ConditionPathSelectorParameterDeclarations) WithItemValue(value *Condition_ParameterDeclaration) *Condition_FieldTerminalPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*Condition_FieldTerminalPathArrayItemValue)
}
func (ConditionPathSelectorParameterDeclarations) WithSubPath(subPath ConditionParameterDeclaration_FieldPath) *Condition_FieldSubPath {
	return &Condition_FieldSubPath{selector: Condition_FieldPathSelectorParameterDeclarations, subPath: subPath}
}

func (s ConditionPathSelectorParameterDeclarations) WithSubValue(subPathValue ConditionParameterDeclaration_FieldPathValue) *Condition_FieldSubPathValue {
	return &Condition_FieldSubPathValue{Condition_FieldPath: s.WithSubPath(subPathValue), subPathValue: subPathValue}
}

func (s ConditionPathSelectorParameterDeclarations) WithSubArrayOfValues(subPathArrayOfValues ConditionParameterDeclaration_FieldPathArrayOfValues) *Condition_FieldSubPathArrayOfValues {
	return &Condition_FieldSubPathArrayOfValues{Condition_FieldPath: s.WithSubPath(subPathArrayOfValues), subPathArrayOfValues: subPathArrayOfValues}
}

func (s ConditionPathSelectorParameterDeclarations) WithSubArrayItemValue(subPathArrayItemValue ConditionParameterDeclaration_FieldPathArrayItemValue) *Condition_FieldSubPathArrayItemValue {
	return &Condition_FieldSubPathArrayItemValue{Condition_FieldPath: s.WithSubPath(subPathArrayItemValue), subPathItemValue: subPathArrayItemValue}
}

func (ConditionPathSelectorParameterDeclarations) Key() ConditionPathSelectorParameterDeclarationsKey {
	return ConditionPathSelectorParameterDeclarationsKey{}
}

func (ConditionPathSelectorParameterDeclarations) Type() ConditionPathSelectorParameterDeclarationsType {
	return ConditionPathSelectorParameterDeclarationsType{}
}

type ConditionPathSelectorParameterDeclarationsKey struct{}

func (ConditionPathSelectorParameterDeclarationsKey) FieldPath() *Condition_FieldSubPath {
	return &Condition_FieldSubPath{
		selector: Condition_FieldPathSelectorParameterDeclarations,
		subPath:  NewConditionParameterDeclarationFieldPathBuilder().Key().FieldPath(),
	}
}

func (s ConditionPathSelectorParameterDeclarationsKey) WithValue(value string) *Condition_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*Condition_FieldSubPathValue)
}

func (s ConditionPathSelectorParameterDeclarationsKey) WithArrayOfValues(values []string) *Condition_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*Condition_FieldSubPathArrayOfValues)
}

type ConditionPathSelectorParameterDeclarationsType struct{}

func (ConditionPathSelectorParameterDeclarationsType) FieldPath() *Condition_FieldSubPath {
	return &Condition_FieldSubPath{
		selector: Condition_FieldPathSelectorParameterDeclarations,
		subPath:  NewConditionParameterDeclarationFieldPathBuilder().Type().FieldPath(),
	}
}

func (s ConditionPathSelectorParameterDeclarationsType) WithValue(value Condition_ParameterType) *Condition_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*Condition_FieldSubPathValue)
}

func (s ConditionPathSelectorParameterDeclarationsType) WithArrayOfValues(values []Condition_ParameterType) *Condition_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*Condition_FieldSubPathArrayOfValues)
}

type ConditionPathSelectorMetadata struct{}

func (ConditionPathSelectorMetadata) FieldPath() *Condition_FieldTerminalPath {
	return &Condition_FieldTerminalPath{selector: Condition_FieldPathSelectorMetadata}
}

func (s ConditionPathSelectorMetadata) WithValue(value *ntt_meta.Meta) *Condition_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*Condition_FieldTerminalPathValue)
}

func (s ConditionPathSelectorMetadata) WithArrayOfValues(values []*ntt_meta.Meta) *Condition_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*Condition_FieldTerminalPathArrayOfValues)
}

func (ConditionPathSelectorMetadata) WithSubPath(subPath ntt_meta.Meta_FieldPath) *Condition_FieldSubPath {
	return &Condition_FieldSubPath{selector: Condition_FieldPathSelectorMetadata, subPath: subPath}
}

func (s ConditionPathSelectorMetadata) WithSubValue(subPathValue ntt_meta.Meta_FieldPathValue) *Condition_FieldSubPathValue {
	return &Condition_FieldSubPathValue{Condition_FieldPath: s.WithSubPath(subPathValue), subPathValue: subPathValue}
}

func (s ConditionPathSelectorMetadata) WithSubArrayOfValues(subPathArrayOfValues ntt_meta.Meta_FieldPathArrayOfValues) *Condition_FieldSubPathArrayOfValues {
	return &Condition_FieldSubPathArrayOfValues{Condition_FieldPath: s.WithSubPath(subPathArrayOfValues), subPathArrayOfValues: subPathArrayOfValues}
}

func (s ConditionPathSelectorMetadata) WithSubArrayItemValue(subPathArrayItemValue ntt_meta.Meta_FieldPathArrayItemValue) *Condition_FieldSubPathArrayItemValue {
	return &Condition_FieldSubPathArrayItemValue{Condition_FieldPath: s.WithSubPath(subPathArrayItemValue), subPathItemValue: subPathArrayItemValue}
}

func (ConditionPathSelectorMetadata) CreateTime() ConditionPathSelectorMetadataCreateTime {
	return ConditionPathSelectorMetadataCreateTime{}
}

func (ConditionPathSelectorMetadata) UpdateTime() ConditionPathSelectorMetadataUpdateTime {
	return ConditionPathSelectorMetadataUpdateTime{}
}

func (ConditionPathSelectorMetadata) Uuid() ConditionPathSelectorMetadataUuid {
	return ConditionPathSelectorMetadataUuid{}
}

func (ConditionPathSelectorMetadata) Tags() ConditionPathSelectorMetadataTags {
	return ConditionPathSelectorMetadataTags{}
}

func (ConditionPathSelectorMetadata) Labels() ConditionPathSelectorMetadataLabels {
	return ConditionPathSelectorMetadataLabels{}
}

func (ConditionPathSelectorMetadata) Annotations() ConditionPathSelectorMetadataAnnotations {
	return ConditionPathSelectorMetadataAnnotations{}
}

func (ConditionPathSelectorMetadata) Generation() ConditionPathSelectorMetadataGeneration {
	return ConditionPathSelectorMetadataGeneration{}
}

func (ConditionPathSelectorMetadata) ResourceVersion() ConditionPathSelectorMetadataResourceVersion {
	return ConditionPathSelectorMetadataResourceVersion{}
}

func (ConditionPathSelectorMetadata) OwnerReferences() ConditionPathSelectorMetadataOwnerReferences {
	return ConditionPathSelectorMetadataOwnerReferences{}
}

func (ConditionPathSelectorMetadata) Shards() ConditionPathSelectorMetadataShards {
	return ConditionPathSelectorMetadataShards{}
}

func (ConditionPathSelectorMetadata) Syncing() ConditionPathSelectorMetadataSyncing {
	return ConditionPathSelectorMetadataSyncing{}
}

type ConditionPathSelectorMetadataCreateTime struct{}

func (ConditionPathSelectorMetadataCreateTime) FieldPath() *Condition_FieldSubPath {
	return &Condition_FieldSubPath{
		selector: Condition_FieldPathSelectorMetadata,
		subPath:  ntt_meta.NewMetaFieldPathBuilder().CreateTime().FieldPath(),
	}
}

func (s ConditionPathSelectorMetadataCreateTime) WithValue(value *timestamp.Timestamp) *Condition_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*Condition_FieldSubPathValue)
}

func (s ConditionPathSelectorMetadataCreateTime) WithArrayOfValues(values []*timestamp.Timestamp) *Condition_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*Condition_FieldSubPathArrayOfValues)
}

type ConditionPathSelectorMetadataUpdateTime struct{}

func (ConditionPathSelectorMetadataUpdateTime) FieldPath() *Condition_FieldSubPath {
	return &Condition_FieldSubPath{
		selector: Condition_FieldPathSelectorMetadata,
		subPath:  ntt_meta.NewMetaFieldPathBuilder().UpdateTime().FieldPath(),
	}
}

func (s ConditionPathSelectorMetadataUpdateTime) WithValue(value *timestamp.Timestamp) *Condition_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*Condition_FieldSubPathValue)
}

func (s ConditionPathSelectorMetadataUpdateTime) WithArrayOfValues(values []*timestamp.Timestamp) *Condition_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*Condition_FieldSubPathArrayOfValues)
}

type ConditionPathSelectorMetadataUuid struct{}

func (ConditionPathSelectorMetadataUuid) FieldPath() *Condition_FieldSubPath {
	return &Condition_FieldSubPath{
		selector: Condition_FieldPathSelectorMetadata,
		subPath:  ntt_meta.NewMetaFieldPathBuilder().Uuid().FieldPath(),
	}
}

func (s ConditionPathSelectorMetadataUuid) WithValue(value string) *Condition_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*Condition_FieldSubPathValue)
}

func (s ConditionPathSelectorMetadataUuid) WithArrayOfValues(values []string) *Condition_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*Condition_FieldSubPathArrayOfValues)
}

type ConditionPathSelectorMetadataTags struct{}

func (ConditionPathSelectorMetadataTags) FieldPath() *Condition_FieldSubPath {
	return &Condition_FieldSubPath{
		selector: Condition_FieldPathSelectorMetadata,
		subPath:  ntt_meta.NewMetaFieldPathBuilder().Tags().FieldPath(),
	}
}

func (s ConditionPathSelectorMetadataTags) WithValue(value []string) *Condition_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*Condition_FieldSubPathValue)
}

func (s ConditionPathSelectorMetadataTags) WithArrayOfValues(values [][]string) *Condition_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*Condition_FieldSubPathArrayOfValues)
}

func (s ConditionPathSelectorMetadataTags) WithItemValue(value string) *Condition_FieldSubPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*Condition_FieldSubPathArrayItemValue)
}

type ConditionPathSelectorMetadataLabels struct{}

func (ConditionPathSelectorMetadataLabels) FieldPath() *Condition_FieldSubPath {
	return &Condition_FieldSubPath{
		selector: Condition_FieldPathSelectorMetadata,
		subPath:  ntt_meta.NewMetaFieldPathBuilder().Labels().FieldPath(),
	}
}

func (s ConditionPathSelectorMetadataLabels) WithValue(value map[string]string) *Condition_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*Condition_FieldSubPathValue)
}

func (s ConditionPathSelectorMetadataLabels) WithArrayOfValues(values []map[string]string) *Condition_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*Condition_FieldSubPathArrayOfValues)
}

func (ConditionPathSelectorMetadataLabels) WithKey(key string) ConditionMapPathSelectorMetadataLabels {
	return ConditionMapPathSelectorMetadataLabels{key: key}
}

type ConditionMapPathSelectorMetadataLabels struct {
	key string
}

func (s ConditionMapPathSelectorMetadataLabels) FieldPath() *Condition_FieldSubPath {
	return &Condition_FieldSubPath{
		selector: Condition_FieldPathSelectorMetadata,
		subPath:  ntt_meta.NewMetaFieldPathBuilder().Labels().WithKey(s.key).FieldPath(),
	}
}

func (s ConditionMapPathSelectorMetadataLabels) WithValue(value string) *Condition_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*Condition_FieldSubPathValue)
}

func (s ConditionMapPathSelectorMetadataLabels) WithArrayOfValues(values []string) *Condition_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*Condition_FieldSubPathArrayOfValues)
}

type ConditionPathSelectorMetadataAnnotations struct{}

func (ConditionPathSelectorMetadataAnnotations) FieldPath() *Condition_FieldSubPath {
	return &Condition_FieldSubPath{
		selector: Condition_FieldPathSelectorMetadata,
		subPath:  ntt_meta.NewMetaFieldPathBuilder().Annotations().FieldPath(),
	}
}

func (s ConditionPathSelectorMetadataAnnotations) WithValue(value map[string]string) *Condition_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*Condition_FieldSubPathValue)
}

func (s ConditionPathSelectorMetadataAnnotations) WithArrayOfValues(values []map[string]string) *Condition_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*Condition_FieldSubPathArrayOfValues)
}

func (ConditionPathSelectorMetadataAnnotations) WithKey(key string) ConditionMapPathSelectorMetadataAnnotations {
	return ConditionMapPathSelectorMetadataAnnotations{key: key}
}

type ConditionMapPathSelectorMetadataAnnotations struct {
	key string
}

func (s ConditionMapPathSelectorMetadataAnnotations) FieldPath() *Condition_FieldSubPath {
	return &Condition_FieldSubPath{
		selector: Condition_FieldPathSelectorMetadata,
		subPath:  ntt_meta.NewMetaFieldPathBuilder().Annotations().WithKey(s.key).FieldPath(),
	}
}

func (s ConditionMapPathSelectorMetadataAnnotations) WithValue(value string) *Condition_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*Condition_FieldSubPathValue)
}

func (s ConditionMapPathSelectorMetadataAnnotations) WithArrayOfValues(values []string) *Condition_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*Condition_FieldSubPathArrayOfValues)
}

type ConditionPathSelectorMetadataGeneration struct{}

func (ConditionPathSelectorMetadataGeneration) FieldPath() *Condition_FieldSubPath {
	return &Condition_FieldSubPath{
		selector: Condition_FieldPathSelectorMetadata,
		subPath:  ntt_meta.NewMetaFieldPathBuilder().Generation().FieldPath(),
	}
}

func (s ConditionPathSelectorMetadataGeneration) WithValue(value int64) *Condition_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*Condition_FieldSubPathValue)
}

func (s ConditionPathSelectorMetadataGeneration) WithArrayOfValues(values []int64) *Condition_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*Condition_FieldSubPathArrayOfValues)
}

type ConditionPathSelectorMetadataResourceVersion struct{}

func (ConditionPathSelectorMetadataResourceVersion) FieldPath() *Condition_FieldSubPath {
	return &Condition_FieldSubPath{
		selector: Condition_FieldPathSelectorMetadata,
		subPath:  ntt_meta.NewMetaFieldPathBuilder().ResourceVersion().FieldPath(),
	}
}

func (s ConditionPathSelectorMetadataResourceVersion) WithValue(value string) *Condition_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*Condition_FieldSubPathValue)
}

func (s ConditionPathSelectorMetadataResourceVersion) WithArrayOfValues(values []string) *Condition_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*Condition_FieldSubPathArrayOfValues)
}

type ConditionPathSelectorMetadataOwnerReferences struct{}

func (ConditionPathSelectorMetadataOwnerReferences) FieldPath() *Condition_FieldSubPath {
	return &Condition_FieldSubPath{
		selector: Condition_FieldPathSelectorMetadata,
		subPath:  ntt_meta.NewMetaFieldPathBuilder().OwnerReferences().FieldPath(),
	}
}

func (s ConditionPathSelectorMetadataOwnerReferences) WithValue(value []*ntt_meta.OwnerReference) *Condition_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*Condition_FieldSubPathValue)
}

func (s ConditionPathSelectorMetadataOwnerReferences) WithArrayOfValues(values [][]*ntt_meta.OwnerReference) *Condition_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*Condition_FieldSubPathArrayOfValues)
}

func (s ConditionPathSelectorMetadataOwnerReferences) WithItemValue(value *ntt_meta.OwnerReference) *Condition_FieldSubPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*Condition_FieldSubPathArrayItemValue)
}

func (ConditionPathSelectorMetadataOwnerReferences) ApiVersion() ConditionPathSelectorMetadataOwnerReferencesApiVersion {
	return ConditionPathSelectorMetadataOwnerReferencesApiVersion{}
}

func (ConditionPathSelectorMetadataOwnerReferences) Kind() ConditionPathSelectorMetadataOwnerReferencesKind {
	return ConditionPathSelectorMetadataOwnerReferencesKind{}
}

func (ConditionPathSelectorMetadataOwnerReferences) Name() ConditionPathSelectorMetadataOwnerReferencesName {
	return ConditionPathSelectorMetadataOwnerReferencesName{}
}

func (ConditionPathSelectorMetadataOwnerReferences) Uid() ConditionPathSelectorMetadataOwnerReferencesUid {
	return ConditionPathSelectorMetadataOwnerReferencesUid{}
}

func (ConditionPathSelectorMetadataOwnerReferences) Controller() ConditionPathSelectorMetadataOwnerReferencesController {
	return ConditionPathSelectorMetadataOwnerReferencesController{}
}

func (ConditionPathSelectorMetadataOwnerReferences) BlockOwnerDeletion() ConditionPathSelectorMetadataOwnerReferencesBlockOwnerDeletion {
	return ConditionPathSelectorMetadataOwnerReferencesBlockOwnerDeletion{}
}

type ConditionPathSelectorMetadataOwnerReferencesApiVersion struct{}

func (ConditionPathSelectorMetadataOwnerReferencesApiVersion) FieldPath() *Condition_FieldSubPath {
	return &Condition_FieldSubPath{
		selector: Condition_FieldPathSelectorMetadata,
		subPath:  ntt_meta.NewMetaFieldPathBuilder().OwnerReferences().ApiVersion().FieldPath(),
	}
}

func (s ConditionPathSelectorMetadataOwnerReferencesApiVersion) WithValue(value string) *Condition_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*Condition_FieldSubPathValue)
}

func (s ConditionPathSelectorMetadataOwnerReferencesApiVersion) WithArrayOfValues(values []string) *Condition_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*Condition_FieldSubPathArrayOfValues)
}

type ConditionPathSelectorMetadataOwnerReferencesKind struct{}

func (ConditionPathSelectorMetadataOwnerReferencesKind) FieldPath() *Condition_FieldSubPath {
	return &Condition_FieldSubPath{
		selector: Condition_FieldPathSelectorMetadata,
		subPath:  ntt_meta.NewMetaFieldPathBuilder().OwnerReferences().Kind().FieldPath(),
	}
}

func (s ConditionPathSelectorMetadataOwnerReferencesKind) WithValue(value string) *Condition_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*Condition_FieldSubPathValue)
}

func (s ConditionPathSelectorMetadataOwnerReferencesKind) WithArrayOfValues(values []string) *Condition_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*Condition_FieldSubPathArrayOfValues)
}

type ConditionPathSelectorMetadataOwnerReferencesName struct{}

func (ConditionPathSelectorMetadataOwnerReferencesName) FieldPath() *Condition_FieldSubPath {
	return &Condition_FieldSubPath{
		selector: Condition_FieldPathSelectorMetadata,
		subPath:  ntt_meta.NewMetaFieldPathBuilder().OwnerReferences().Name().FieldPath(),
	}
}

func (s ConditionPathSelectorMetadataOwnerReferencesName) WithValue(value string) *Condition_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*Condition_FieldSubPathValue)
}

func (s ConditionPathSelectorMetadataOwnerReferencesName) WithArrayOfValues(values []string) *Condition_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*Condition_FieldSubPathArrayOfValues)
}

type ConditionPathSelectorMetadataOwnerReferencesUid struct{}

func (ConditionPathSelectorMetadataOwnerReferencesUid) FieldPath() *Condition_FieldSubPath {
	return &Condition_FieldSubPath{
		selector: Condition_FieldPathSelectorMetadata,
		subPath:  ntt_meta.NewMetaFieldPathBuilder().OwnerReferences().Uid().FieldPath(),
	}
}

func (s ConditionPathSelectorMetadataOwnerReferencesUid) WithValue(value string) *Condition_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*Condition_FieldSubPathValue)
}

func (s ConditionPathSelectorMetadataOwnerReferencesUid) WithArrayOfValues(values []string) *Condition_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*Condition_FieldSubPathArrayOfValues)
}

type ConditionPathSelectorMetadataOwnerReferencesController struct{}

func (ConditionPathSelectorMetadataOwnerReferencesController) FieldPath() *Condition_FieldSubPath {
	return &Condition_FieldSubPath{
		selector: Condition_FieldPathSelectorMetadata,
		subPath:  ntt_meta.NewMetaFieldPathBuilder().OwnerReferences().Controller().FieldPath(),
	}
}

func (s ConditionPathSelectorMetadataOwnerReferencesController) WithValue(value bool) *Condition_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*Condition_FieldSubPathValue)
}

func (s ConditionPathSelectorMetadataOwnerReferencesController) WithArrayOfValues(values []bool) *Condition_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*Condition_FieldSubPathArrayOfValues)
}

type ConditionPathSelectorMetadataOwnerReferencesBlockOwnerDeletion struct{}

func (ConditionPathSelectorMetadataOwnerReferencesBlockOwnerDeletion) FieldPath() *Condition_FieldSubPath {
	return &Condition_FieldSubPath{
		selector: Condition_FieldPathSelectorMetadata,
		subPath:  ntt_meta.NewMetaFieldPathBuilder().OwnerReferences().BlockOwnerDeletion().FieldPath(),
	}
}

func (s ConditionPathSelectorMetadataOwnerReferencesBlockOwnerDeletion) WithValue(value bool) *Condition_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*Condition_FieldSubPathValue)
}

func (s ConditionPathSelectorMetadataOwnerReferencesBlockOwnerDeletion) WithArrayOfValues(values []bool) *Condition_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*Condition_FieldSubPathArrayOfValues)
}

type ConditionPathSelectorMetadataShards struct{}

func (ConditionPathSelectorMetadataShards) FieldPath() *Condition_FieldSubPath {
	return &Condition_FieldSubPath{
		selector: Condition_FieldPathSelectorMetadata,
		subPath:  ntt_meta.NewMetaFieldPathBuilder().Shards().FieldPath(),
	}
}

func (s ConditionPathSelectorMetadataShards) WithValue(value map[string]int64) *Condition_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*Condition_FieldSubPathValue)
}

func (s ConditionPathSelectorMetadataShards) WithArrayOfValues(values []map[string]int64) *Condition_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*Condition_FieldSubPathArrayOfValues)
}

func (ConditionPathSelectorMetadataShards) WithKey(key string) ConditionMapPathSelectorMetadataShards {
	return ConditionMapPathSelectorMetadataShards{key: key}
}

type ConditionMapPathSelectorMetadataShards struct {
	key string
}

func (s ConditionMapPathSelectorMetadataShards) FieldPath() *Condition_FieldSubPath {
	return &Condition_FieldSubPath{
		selector: Condition_FieldPathSelectorMetadata,
		subPath:  ntt_meta.NewMetaFieldPathBuilder().Shards().WithKey(s.key).FieldPath(),
	}
}

func (s ConditionMapPathSelectorMetadataShards) WithValue(value int64) *Condition_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*Condition_FieldSubPathValue)
}

func (s ConditionMapPathSelectorMetadataShards) WithArrayOfValues(values []int64) *Condition_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*Condition_FieldSubPathArrayOfValues)
}

type ConditionPathSelectorMetadataSyncing struct{}

func (ConditionPathSelectorMetadataSyncing) FieldPath() *Condition_FieldSubPath {
	return &Condition_FieldSubPath{
		selector: Condition_FieldPathSelectorMetadata,
		subPath:  ntt_meta.NewMetaFieldPathBuilder().Syncing().FieldPath(),
	}
}

func (s ConditionPathSelectorMetadataSyncing) WithValue(value *ntt_meta.SyncingMeta) *Condition_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*Condition_FieldSubPathValue)
}

func (s ConditionPathSelectorMetadataSyncing) WithArrayOfValues(values []*ntt_meta.SyncingMeta) *Condition_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*Condition_FieldSubPathArrayOfValues)
}

func (ConditionPathSelectorMetadataSyncing) OwningRegion() ConditionPathSelectorMetadataSyncingOwningRegion {
	return ConditionPathSelectorMetadataSyncingOwningRegion{}
}

func (ConditionPathSelectorMetadataSyncing) Regions() ConditionPathSelectorMetadataSyncingRegions {
	return ConditionPathSelectorMetadataSyncingRegions{}
}

type ConditionPathSelectorMetadataSyncingOwningRegion struct{}

func (ConditionPathSelectorMetadataSyncingOwningRegion) FieldPath() *Condition_FieldSubPath {
	return &Condition_FieldSubPath{
		selector: Condition_FieldPathSelectorMetadata,
		subPath:  ntt_meta.NewMetaFieldPathBuilder().Syncing().OwningRegion().FieldPath(),
	}
}

func (s ConditionPathSelectorMetadataSyncingOwningRegion) WithValue(value string) *Condition_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*Condition_FieldSubPathValue)
}

func (s ConditionPathSelectorMetadataSyncingOwningRegion) WithArrayOfValues(values []string) *Condition_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*Condition_FieldSubPathArrayOfValues)
}

type ConditionPathSelectorMetadataSyncingRegions struct{}

func (ConditionPathSelectorMetadataSyncingRegions) FieldPath() *Condition_FieldSubPath {
	return &Condition_FieldSubPath{
		selector: Condition_FieldPathSelectorMetadata,
		subPath:  ntt_meta.NewMetaFieldPathBuilder().Syncing().Regions().FieldPath(),
	}
}

func (s ConditionPathSelectorMetadataSyncingRegions) WithValue(value []string) *Condition_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*Condition_FieldSubPathValue)
}

func (s ConditionPathSelectorMetadataSyncingRegions) WithArrayOfValues(values [][]string) *Condition_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*Condition_FieldSubPathArrayOfValues)
}

func (s ConditionPathSelectorMetadataSyncingRegions) WithItemValue(value string) *Condition_FieldSubPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*Condition_FieldSubPathArrayItemValue)
}

type ConditionParameterDeclarationFieldPathBuilder struct{}

func NewConditionParameterDeclarationFieldPathBuilder() ConditionParameterDeclarationFieldPathBuilder {
	return ConditionParameterDeclarationFieldPathBuilder{}
}
func (ConditionParameterDeclarationFieldPathBuilder) Key() Condition_ParameterDeclarationPathSelectorKey {
	return Condition_ParameterDeclarationPathSelectorKey{}
}
func (ConditionParameterDeclarationFieldPathBuilder) Type() Condition_ParameterDeclarationPathSelectorType {
	return Condition_ParameterDeclarationPathSelectorType{}
}

type Condition_ParameterDeclarationPathSelectorKey struct{}

func (Condition_ParameterDeclarationPathSelectorKey) FieldPath() *ConditionParameterDeclaration_FieldTerminalPath {
	return &ConditionParameterDeclaration_FieldTerminalPath{selector: ConditionParameterDeclaration_FieldPathSelectorKey}
}

func (s Condition_ParameterDeclarationPathSelectorKey) WithValue(value string) *ConditionParameterDeclaration_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*ConditionParameterDeclaration_FieldTerminalPathValue)
}

func (s Condition_ParameterDeclarationPathSelectorKey) WithArrayOfValues(values []string) *ConditionParameterDeclaration_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ConditionParameterDeclaration_FieldTerminalPathArrayOfValues)
}

type Condition_ParameterDeclarationPathSelectorType struct{}

func (Condition_ParameterDeclarationPathSelectorType) FieldPath() *ConditionParameterDeclaration_FieldTerminalPath {
	return &ConditionParameterDeclaration_FieldTerminalPath{selector: ConditionParameterDeclaration_FieldPathSelectorType}
}

func (s Condition_ParameterDeclarationPathSelectorType) WithValue(value Condition_ParameterType) *ConditionParameterDeclaration_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*ConditionParameterDeclaration_FieldTerminalPathValue)
}

func (s Condition_ParameterDeclarationPathSelectorType) WithArrayOfValues(values []Condition_ParameterType) *ConditionParameterDeclaration_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ConditionParameterDeclaration_FieldTerminalPathArrayOfValues)
}

type ConditionBindingFieldPathBuilder struct{}

func NewConditionBindingFieldPathBuilder() ConditionBindingFieldPathBuilder {
	return ConditionBindingFieldPathBuilder{}
}
func (ConditionBindingFieldPathBuilder) Condition() ConditionBindingPathSelectorCondition {
	return ConditionBindingPathSelectorCondition{}
}
func (ConditionBindingFieldPathBuilder) Parameters() ConditionBindingPathSelectorParameters {
	return ConditionBindingPathSelectorParameters{}
}

type ConditionBindingPathSelectorCondition struct{}

func (ConditionBindingPathSelectorCondition) FieldPath() *ConditionBinding_FieldTerminalPath {
	return &ConditionBinding_FieldTerminalPath{selector: ConditionBinding_FieldPathSelectorCondition}
}

func (s ConditionBindingPathSelectorCondition) WithValue(value *Reference) *ConditionBinding_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*ConditionBinding_FieldTerminalPathValue)
}

func (s ConditionBindingPathSelectorCondition) WithArrayOfValues(values []*Reference) *ConditionBinding_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ConditionBinding_FieldTerminalPathArrayOfValues)
}

type ConditionBindingPathSelectorParameters struct{}

func (ConditionBindingPathSelectorParameters) FieldPath() *ConditionBinding_FieldTerminalPath {
	return &ConditionBinding_FieldTerminalPath{selector: ConditionBinding_FieldPathSelectorParameters}
}

func (s ConditionBindingPathSelectorParameters) WithValue(value map[string]string) *ConditionBinding_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*ConditionBinding_FieldTerminalPathValue)
}

func (s ConditionBindingPathSelectorParameters) WithArrayOfValues(values []map[string]string) *ConditionBinding_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ConditionBinding_FieldTerminalPathArrayOfValues)
}

func (ConditionBindingPathSelectorParameters) WithKey(key string) ConditionBindingMapPathSelectorParameters {
	return ConditionBindingMapPathSelectorParameters{key: key}
}

type ConditionBindingMapPathSelectorParameters struct {
	key string
}

func (s ConditionBindingMapPathSelectorParameters) FieldPath() *ConditionBinding_FieldPathMap {
	return &ConditionBinding_FieldPathMap{selector: ConditionBinding_FieldPathSelectorParameters, key: s.key}
}

func (s ConditionBindingMapPathSelectorParameters) WithValue(value string) *ConditionBinding_FieldPathMapValue {
	return s.FieldPath().WithIValue(value).(*ConditionBinding_FieldPathMapValue)
}

func (s ConditionBindingMapPathSelectorParameters) WithArrayOfValues(values []string) *ConditionBinding_FieldPathMapArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ConditionBinding_FieldPathMapArrayOfValues)
}
