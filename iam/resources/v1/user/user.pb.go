// Code generated by protoc-gen-goten-go
// File: edgelq/iam/proto/v1/user.proto
// DO NOT EDIT!!!

package user

import (
	"fmt"
	"reflect"
	"sync"

	"google.golang.org/protobuf/encoding/protojson"
	"google.golang.org/protobuf/proto"
	preflect "google.golang.org/protobuf/reflect/protoreflect"
	"google.golang.org/protobuf/runtime/protoimpl"
)

// proto imports
import (
	meta "github.com/cloudwan/goten-sdk/types/meta"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
)

// Reference imports to suppress errors if they are not otherwise used.
var (
	_ = fmt.Errorf
	_ = reflect.Method{}
	_ = sync.Once{}

	_ = protojson.MarshalOptions{}
	_ = proto.MarshalOptions{}
	_ = preflect.Value{}
	_ = protoimpl.DescBuilder{}
)

// make sure we're using proto imports
var (
	_ = &timestamppb.Timestamp{}
	_ = &meta.Meta{}
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// User Resource
type User struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
	// Name of User
	// When creating a new instance, this field is optional and if not provided,
	// it will be generated automatically. Last ID segment must conform to the
	// following regex: [a-z][a-z0-9\\-]{0,28}[a-z0-9]
	Name *Name `protobuf:"bytes,1,opt,customtype=Name,name=name,proto3" json:"name,omitempty"`
	// Metadata is an object with information like create, update and delete time
	// (for async deleted resources), has user labels/annotations, sharding
	// information, multi-region syncing information and may have non-schema
	// owners (useful for taking ownership of resources belonging to lower level
	// services by higher ones).
	Metadata *meta.Meta `protobuf:"bytes,8,opt,name=metadata,proto3" json:"metadata,omitempty"`
	// Full Name
	FullName string `protobuf:"bytes,2,opt,name=full_name,json=fullName,proto3" json:"full_name,omitempty"`
	// Email
	Email string `protobuf:"bytes,3,opt,name=email,proto3" json:"email,omitempty"`
	// Is email verified
	EmailVerified bool           `protobuf:"varint,4,opt,name=email_verified,json=emailVerified,proto3" json:"email_verified,omitempty"`
	AuthInfo      *User_AuthInfo `protobuf:"bytes,5,opt,name=auth_info,json=authInfo,proto3" json:"auth_info,omitempty"`
	// User settings and preferences
	Settings      map[string]string      `protobuf:"bytes,7,rep,name=settings,proto3" json:"settings,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	RefreshedTime *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=refreshed_time,json=refreshedTime,proto3" json:"refreshed_time,omitempty"`
	// Internal status used by controller.
	CtrlStatus *User_WorkStatus `protobuf:"bytes,9,opt,name=ctrl_status,json=ctrlStatus,proto3" json:"ctrl_status,omitempty"`
}

func (m *User) Reset() {
	*m = User{}
	if protoimpl.UnsafeEnabled {
		mi := &edgelq_iam_proto_v1_user_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(m))
		ms.StoreMessageInfo(mi)
	}
}

func (m *User) String() string {
	return protoimpl.X.MessageStringOf(m)
}

func (*User) ProtoMessage() {}

func (m *User) ProtoReflect() preflect.Message {
	mi := &edgelq_iam_proto_v1_user_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && m != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(m))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(m)
}

func (*User) GotenMessage() {}

// Deprecated, Use User.ProtoReflect.Descriptor instead.
func (*User) Descriptor() ([]byte, []int) {
	return edgelq_iam_proto_v1_user_proto_rawDescGZIP(), []int{0}
}

func (m *User) Unmarshal(b []byte) error {
	return proto.Unmarshal(b, m)
}

func (m *User) Marshal() ([]byte, error) {
	return proto.Marshal(m)
}

func (m *User) MarshalJSON() ([]byte, error) {
	return protojson.MarshalOptions{}.Marshal(m)
}

func (m *User) UnmarshalJSON(data []byte) error {
	return protojson.Unmarshal(data, m)
}

func (m *User) GetName() *Name {
	if m != nil {
		return m.Name
	}
	return nil
}

func (m *User) GetMetadata() *meta.Meta {
	if m != nil {
		return m.Metadata
	}
	return nil
}

func (m *User) GetFullName() string {
	if m != nil {
		return m.FullName
	}
	return ""
}

func (m *User) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *User) GetEmailVerified() bool {
	if m != nil {
		return m.EmailVerified
	}
	return false
}

func (m *User) GetAuthInfo() *User_AuthInfo {
	if m != nil {
		return m.AuthInfo
	}
	return nil
}

func (m *User) GetSettings() map[string]string {
	if m != nil {
		return m.Settings
	}
	return nil
}

func (m *User) GetRefreshedTime() *timestamppb.Timestamp {
	if m != nil {
		return m.RefreshedTime
	}
	return nil
}

func (m *User) GetCtrlStatus() *User_WorkStatus {
	if m != nil {
		return m.CtrlStatus
	}
	return nil
}

func (m *User) SetName(fv *Name) {
	if m == nil {
		panic(fmt.Errorf("can't set %s on nil %s", "Name", "User"))
	}
	m.Name = fv
}

func (m *User) SetMetadata(fv *meta.Meta) {
	if m == nil {
		panic(fmt.Errorf("can't set %s on nil %s", "Metadata", "User"))
	}
	m.Metadata = fv
}

func (m *User) SetFullName(fv string) {
	if m == nil {
		panic(fmt.Errorf("can't set %s on nil %s", "FullName", "User"))
	}
	m.FullName = fv
}

func (m *User) SetEmail(fv string) {
	if m == nil {
		panic(fmt.Errorf("can't set %s on nil %s", "Email", "User"))
	}
	m.Email = fv
}

func (m *User) SetEmailVerified(fv bool) {
	if m == nil {
		panic(fmt.Errorf("can't set %s on nil %s", "EmailVerified", "User"))
	}
	m.EmailVerified = fv
}

func (m *User) SetAuthInfo(fv *User_AuthInfo) {
	if m == nil {
		panic(fmt.Errorf("can't set %s on nil %s", "AuthInfo", "User"))
	}
	m.AuthInfo = fv
}

func (m *User) SetSettings(fv map[string]string) {
	if m == nil {
		panic(fmt.Errorf("can't set %s on nil %s", "Settings", "User"))
	}
	m.Settings = fv
}

func (m *User) SetRefreshedTime(fv *timestamppb.Timestamp) {
	if m == nil {
		panic(fmt.Errorf("can't set %s on nil %s", "RefreshedTime", "User"))
	}
	m.RefreshedTime = fv
}

func (m *User) SetCtrlStatus(fv *User_WorkStatus) {
	if m == nil {
		panic(fmt.Errorf("can't set %s on nil %s", "CtrlStatus", "User"))
	}
	m.CtrlStatus = fv
}

type User_AuthInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
	// auth provider
	Provider string `protobuf:"bytes,1,opt,name=provider,proto3" json:"provider,omitempty"`
	// auth provider id
	Id string `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
}

func (m *User_AuthInfo) Reset() {
	*m = User_AuthInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &edgelq_iam_proto_v1_user_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(m))
		ms.StoreMessageInfo(mi)
	}
}

func (m *User_AuthInfo) String() string {
	return protoimpl.X.MessageStringOf(m)
}

func (*User_AuthInfo) ProtoMessage() {}

func (m *User_AuthInfo) ProtoReflect() preflect.Message {
	mi := &edgelq_iam_proto_v1_user_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && m != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(m))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(m)
}

func (*User_AuthInfo) GotenMessage() {}

// Deprecated, Use User_AuthInfo.ProtoReflect.Descriptor instead.
func (*User_AuthInfo) Descriptor() ([]byte, []int) {
	return edgelq_iam_proto_v1_user_proto_rawDescGZIP(), []int{0, 0}
}

func (m *User_AuthInfo) Unmarshal(b []byte) error {
	return proto.Unmarshal(b, m)
}

func (m *User_AuthInfo) Marshal() ([]byte, error) {
	return proto.Marshal(m)
}

func (m *User_AuthInfo) MarshalJSON() ([]byte, error) {
	return protojson.MarshalOptions{}.Marshal(m)
}

func (m *User_AuthInfo) UnmarshalJSON(data []byte) error {
	return protojson.Unmarshal(data, m)
}

func (m *User_AuthInfo) GetProvider() string {
	if m != nil {
		return m.Provider
	}
	return ""
}

func (m *User_AuthInfo) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *User_AuthInfo) SetProvider(fv string) {
	if m == nil {
		panic(fmt.Errorf("can't set %s on nil %s", "Provider", "User_AuthInfo"))
	}
	m.Provider = fv
}

func (m *User_AuthInfo) SetId(fv string) {
	if m == nil {
		panic(fmt.Errorf("can't set %s on nil %s", "Id", "User_AuthInfo"))
	}
	m.Id = fv
}

type User_WorkStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
	// if controller has some work on this resource
	Pending bool `protobuf:"varint,1,opt,name=pending,proto3" json:"pending,omitempty"`
}

func (m *User_WorkStatus) Reset() {
	*m = User_WorkStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &edgelq_iam_proto_v1_user_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(m))
		ms.StoreMessageInfo(mi)
	}
}

func (m *User_WorkStatus) String() string {
	return protoimpl.X.MessageStringOf(m)
}

func (*User_WorkStatus) ProtoMessage() {}

func (m *User_WorkStatus) ProtoReflect() preflect.Message {
	mi := &edgelq_iam_proto_v1_user_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && m != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(m))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(m)
}

func (*User_WorkStatus) GotenMessage() {}

// Deprecated, Use User_WorkStatus.ProtoReflect.Descriptor instead.
func (*User_WorkStatus) Descriptor() ([]byte, []int) {
	return edgelq_iam_proto_v1_user_proto_rawDescGZIP(), []int{0, 2}
}

func (m *User_WorkStatus) Unmarshal(b []byte) error {
	return proto.Unmarshal(b, m)
}

func (m *User_WorkStatus) Marshal() ([]byte, error) {
	return proto.Marshal(m)
}

func (m *User_WorkStatus) MarshalJSON() ([]byte, error) {
	return protojson.MarshalOptions{}.Marshal(m)
}

func (m *User_WorkStatus) UnmarshalJSON(data []byte) error {
	return protojson.Unmarshal(data, m)
}

func (m *User_WorkStatus) GetPending() bool {
	if m != nil {
		return m.Pending
	}
	return false
}

func (m *User_WorkStatus) SetPending(fv bool) {
	if m == nil {
		panic(fmt.Errorf("can't set %s on nil %s", "Pending", "User_WorkStatus"))
	}
	m.Pending = fv
}

var edgelq_iam_proto_v1_user_proto preflect.FileDescriptor

var edgelq_iam_proto_v1_user_proto_rawDesc = []byte{
	0x0a, 0x1e, 0x65, 0x64, 0x67, 0x65, 0x6c, 0x71, 0x2f, 0x69, 0x61, 0x6d, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2f, 0x76, 0x31, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x0a, 0x6e, 0x74, 0x74, 0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x76, 0x31, 0x1a, 0x19, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x20, 0x67, 0x6f, 0x74, 0x65, 0x6e, 0x2f, 0x61,
	0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64,
	0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1d, 0x67, 0x6f, 0x74, 0x65, 0x6e,
	0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x67, 0x6f, 0x74,
	0x65, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x20, 0x67, 0x6f, 0x74, 0x65, 0x6e, 0x2f,
	0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x72, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1d, 0x67, 0x6f, 0x74, 0x65,
	0x6e, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x73, 0x74,
	0x6f, 0x72, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x74, 0x65, 0x6e,
	0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x24, 0x67, 0x6f, 0x74, 0x65,
	0x6e, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x6d, 0x75,
	0x6c, 0x74, 0x69, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x20, 0x65, 0x64, 0x67, 0x65, 0x6c, 0x71, 0x2f, 0x69, 0x61, 0x6d, 0x2f, 0x61, 0x6e, 0x6e,
	0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x69, 0x61, 0x6d, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x24, 0x65, 0x64, 0x67, 0x65, 0x6c, 0x71, 0x2f, 0x61, 0x75, 0x64, 0x69, 0x74,
	0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x61, 0x75, 0x64,
	0x69, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x16, 0x67, 0x6f, 0x74, 0x65, 0x6e,
	0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2f, 0x6d, 0x65, 0x74, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0x94, 0x07, 0x0a, 0x04, 0x55, 0x73, 0x65, 0x72, 0x12, 0x20, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0c, 0xb2, 0xda, 0x21, 0x08, 0x0a, 0x06,
	0x0a, 0x04, 0x55, 0x73, 0x65, 0x72, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x2d, 0x0a, 0x08,
	0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11,
	0x2e, 0x67, 0x6f, 0x74, 0x65, 0x6e, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x4d, 0x65, 0x74,
	0x61, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x1b, 0x0a, 0x09, 0x66,
	0x75, 0x6c, 0x6c, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x66, 0x75, 0x6c, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69,
	0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0xca, 0xc6, 0x27, 0x06, 0x2a, 0x04, 0x52,
	0x02, 0x58, 0x01, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x25, 0x0a, 0x0e, 0x65, 0x6d,
	0x61, 0x69, 0x6c, 0x5f, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x0d, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65,
	0x64, 0x12, 0x36, 0x0a, 0x09, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x6e, 0x74, 0x74, 0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x76,
	0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x08, 0x61, 0x75, 0x74, 0x68, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x3a, 0x0a, 0x08, 0x73, 0x65, 0x74,
	0x74, 0x69, 0x6e, 0x67, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x6e, 0x74,
	0x74, 0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x2e, 0x53, 0x65,
	0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x08, 0x73, 0x65, 0x74,
	0x74, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x47, 0x0a, 0x0e, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68,
	0x65, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x42, 0x04, 0xf0, 0xd9, 0x21, 0x01, 0x52,
	0x0d, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x3c,
	0x0a, 0x0b, 0x63, 0x74, 0x72, 0x6c, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x6e, 0x74, 0x74, 0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x76, 0x31,
	0x2e, 0x55, 0x73, 0x65, 0x72, 0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x52, 0x0a, 0x63, 0x74, 0x72, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x1a, 0x36, 0x0a, 0x08,
	0x41, 0x75, 0x74, 0x68, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x76,
	0x69, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x76,
	0x69, 0x64, 0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x69, 0x64, 0x1a, 0x3b, 0x0a, 0x0d, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38,
	0x01, 0x1a, 0x26, 0x0a, 0x0a, 0x57, 0x6f, 0x72, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x18, 0x0a, 0x07, 0x70, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x07, 0x70, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x3a, 0xbc, 0x02, 0xea, 0x41, 0x23, 0x0a,
	0x13, 0x69, 0x61, 0x6d, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x6c, 0x71, 0x2e, 0x63, 0x6f, 0x6d, 0x2f,
	0x55, 0x73, 0x65, 0x72, 0x12, 0x0c, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2f, 0x7b, 0x75, 0x73, 0x65,
	0x72, 0x7d, 0x92, 0xd9, 0x21, 0x72, 0x0a, 0x05, 0x75, 0x73, 0x65, 0x72, 0x73, 0x12, 0x05, 0x75,
	0x73, 0x65, 0x72, 0x73, 0x2a, 0x10, 0x5b, 0x5c, 0x77, 0x2e, 0x40, 0x7c, 0x5f, 0x2d, 0x5d, 0x7b,
	0x31, 0x2c, 0x31, 0x32, 0x38, 0x7d, 0x42, 0x50, 0x08, 0x02, 0x12, 0x06, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x07, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x0b, 0x0a, 0x09, 0x66,
	0x75, 0x6c, 0x6c, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x0e, 0x65, 0x6d, 0x61, 0x69,
	0x6c, 0x5f, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x64, 0x12, 0x1c, 0x0a, 0x0e, 0x72, 0x65,
	0x66, 0x72, 0x65, 0x73, 0x68, 0x65, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x0a, 0x4c, 0x61,
	0x73, 0x74, 0x20, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0xb2, 0xdf, 0x21, 0x09, 0x12, 0x07, 0x0a, 0x05,
	0x65, 0x6d, 0x61, 0x69, 0x6c, 0xda, 0x94, 0x23, 0x09, 0x12, 0x07, 0x0a, 0x05, 0x65, 0x6d, 0x61,
	0x69, 0x6c, 0xca, 0xa3, 0x22, 0x1a, 0x0a, 0x18, 0x0a, 0x0c, 0x72, 0x65, 0x61, 0x64, 0x53, 0x65,
	0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x08, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73,
	0xc2, 0x85, 0x2c, 0x64, 0x22, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x09, 0x66, 0x75, 0x6c, 0x6c,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x22, 0x0e, 0x65, 0x6d,
	0x61, 0x69, 0x6c, 0x5f, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x64, 0x22, 0x09, 0x61, 0x75,
	0x74, 0x68, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x22, 0x08, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67,
	0x73, 0x42, 0x0e, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x65, 0x64, 0x5f, 0x74, 0x69, 0x6d,
	0x65, 0x42, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x42, 0x0b, 0x63, 0x74, 0x72,
	0x6c, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x42, 0xdb, 0x01, 0xe8, 0xde, 0x21, 0x01, 0xd2,
	0xff, 0xd0, 0x02, 0x3a, 0x0a, 0x0a, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x73, 0x74, 0x6f, 0x72, 0x65,
	0x12, 0x2c, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x6c, 0x6f,
	0x75, 0x64, 0x77, 0x61, 0x6e, 0x2f, 0x65, 0x64, 0x67, 0x65, 0x6c, 0x71, 0x2f, 0x69, 0x61, 0x6d,
	0x2f, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2f, 0x76, 0x31, 0x2f, 0x75, 0x73, 0x65, 0x72, 0xa2, 0x80,
	0xd1, 0x02, 0x3c, 0x0a, 0x0b, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x12, 0x2d, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x6c, 0x6f,
	0x75, 0x64, 0x77, 0x61, 0x6e, 0x2f, 0x65, 0x64, 0x67, 0x65, 0x6c, 0x71, 0x2f, 0x69, 0x61, 0x6d,
	0x2f, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x2f, 0x76, 0x31, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x0a,
	0x11, 0x63, 0x6f, 0x6d, 0x2e, 0x6e, 0x74, 0x74, 0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x70, 0x62, 0x2e,
	0x76, 0x31, 0x42, 0x09, 0x55, 0x73, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a,
	0x35, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x6c, 0x6f, 0x75,
	0x64, 0x77, 0x61, 0x6e, 0x2f, 0x65, 0x64, 0x67, 0x65, 0x6c, 0x71, 0x2f, 0x69, 0x61, 0x6d, 0x2f,
	0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2f, 0x76, 0x31, 0x2f, 0x75, 0x73, 0x65,
	0x72, 0x3b, 0x75, 0x73, 0x65, 0x72, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	edgelq_iam_proto_v1_user_proto_rawDescOnce sync.Once
	edgelq_iam_proto_v1_user_proto_rawDescData = edgelq_iam_proto_v1_user_proto_rawDesc
)

func edgelq_iam_proto_v1_user_proto_rawDescGZIP() []byte {
	edgelq_iam_proto_v1_user_proto_rawDescOnce.Do(func() {
		edgelq_iam_proto_v1_user_proto_rawDescData = protoimpl.X.CompressGZIP(edgelq_iam_proto_v1_user_proto_rawDescData)
	})
	return edgelq_iam_proto_v1_user_proto_rawDescData
}

var edgelq_iam_proto_v1_user_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var edgelq_iam_proto_v1_user_proto_goTypes = []interface{}{
	(*User)(nil),                  // 0: ntt.iam.v1.User
	(*User_AuthInfo)(nil),         // 1: ntt.iam.v1.User.AuthInfo
	nil,                           // 2: ntt.iam.v1.User.SettingsEntry
	(*User_WorkStatus)(nil),       // 3: ntt.iam.v1.User.WorkStatus
	(*meta.Meta)(nil),             // 4: goten.types.Meta
	(*timestamppb.Timestamp)(nil), // 5: google.protobuf.Timestamp
}
var edgelq_iam_proto_v1_user_proto_depIdxs = []int32{
	4, // 0: ntt.iam.v1.User.metadata:type_name -> goten.types.Meta
	1, // 1: ntt.iam.v1.User.auth_info:type_name -> ntt.iam.v1.User.AuthInfo
	2, // 2: ntt.iam.v1.User.settings:type_name -> ntt.iam.v1.User.SettingsEntry
	5, // 3: ntt.iam.v1.User.refreshed_time:type_name -> google.protobuf.Timestamp
	3, // 4: ntt.iam.v1.User.ctrl_status:type_name -> ntt.iam.v1.User.WorkStatus
	5, // [5:5] is the sub-list for method output_type
	5, // [5:5] is the sub-list for method input_type
	5, // [5:5] is the sub-list for extension type_name
	5, // [5:5] is the sub-list for extension extendee
	0, // [0:5] is the sub-list for field type_name
}

func init() { edgelq_iam_proto_v1_user_proto_init() }
func edgelq_iam_proto_v1_user_proto_init() {
	if edgelq_iam_proto_v1_user_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {

		edgelq_iam_proto_v1_user_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*User); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		edgelq_iam_proto_v1_user_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*User_AuthInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		edgelq_iam_proto_v1_user_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*User_WorkStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}

	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: edgelq_iam_proto_v1_user_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           edgelq_iam_proto_v1_user_proto_goTypes,
		DependencyIndexes: edgelq_iam_proto_v1_user_proto_depIdxs,
		MessageInfos:      edgelq_iam_proto_v1_user_proto_msgTypes,
	}.Build()
	edgelq_iam_proto_v1_user_proto = out.File
	edgelq_iam_proto_v1_user_proto_rawDesc = nil
	edgelq_iam_proto_v1_user_proto_goTypes = nil
	edgelq_iam_proto_v1_user_proto_depIdxs = nil
}
