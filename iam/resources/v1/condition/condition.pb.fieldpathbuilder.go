// Code generated by protoc-gen-goten-object
// File: edgelq/iam/proto/v1/condition.proto
// DO NOT EDIT!!!

package condition

// proto imports
import (
	iam_common "github.com/cloudwan/edgelq-sdk/iam/resources/v1/common"
	organization "github.com/cloudwan/edgelq-sdk/iam/resources/v1/organization"
	project "github.com/cloudwan/edgelq-sdk/iam/resources/v1/project"
	meta_common "github.com/cloudwan/goten-sdk/meta-service/resources/v1/common"
	meta_service "github.com/cloudwan/goten-sdk/meta-service/resources/v1/service"
	meta "github.com/cloudwan/goten-sdk/types/meta"
	multi_region_policy "github.com/cloudwan/goten-sdk/types/multi_region_policy"
	structpb "google.golang.org/protobuf/types/known/structpb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
)

// make sure we're using proto imports
var (
	_ = &iam_common.PCR{}
	_ = &organization.Organization{}
	_ = &project.Project{}
	_ = &structpb.Struct{}
	_ = &timestamppb.Timestamp{}
	_ = &meta_common.LabelledDomain{}
	_ = &meta_service.Service{}
	_ = &meta.Meta{}
	_ = &multi_region_policy.MultiRegionPolicy{}
)

type ConditionFieldPathBuilder struct{}

func NewConditionFieldPathBuilder() ConditionFieldPathBuilder {
	return ConditionFieldPathBuilder{}
}
func (ConditionFieldPathBuilder) Name() ConditionPathSelectorName {
	return ConditionPathSelectorName{}
}
func (ConditionFieldPathBuilder) Metadata() ConditionPathSelectorMetadata {
	return ConditionPathSelectorMetadata{}
}
func (ConditionFieldPathBuilder) DisplayName() ConditionPathSelectorDisplayName {
	return ConditionPathSelectorDisplayName{}
}
func (ConditionFieldPathBuilder) Description() ConditionPathSelectorDescription {
	return ConditionPathSelectorDescription{}
}
func (ConditionFieldPathBuilder) Expression() ConditionPathSelectorExpression {
	return ConditionPathSelectorExpression{}
}
func (ConditionFieldPathBuilder) ParameterDeclarations() ConditionPathSelectorParameterDeclarations {
	return ConditionPathSelectorParameterDeclarations{}
}

type ConditionPathSelectorName struct{}

func (ConditionPathSelectorName) FieldPath() *Condition_FieldTerminalPath {
	return &Condition_FieldTerminalPath{selector: Condition_FieldPathSelectorName}
}

func (s ConditionPathSelectorName) WithValue(value *Name) *Condition_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*Condition_FieldTerminalPathValue)
}

func (s ConditionPathSelectorName) WithArrayOfValues(values []*Name) *Condition_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*Condition_FieldTerminalPathArrayOfValues)
}

type ConditionPathSelectorMetadata struct{}

func (ConditionPathSelectorMetadata) FieldPath() *Condition_FieldTerminalPath {
	return &Condition_FieldTerminalPath{selector: Condition_FieldPathSelectorMetadata}
}

func (s ConditionPathSelectorMetadata) WithValue(value *meta.Meta) *Condition_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*Condition_FieldTerminalPathValue)
}

func (s ConditionPathSelectorMetadata) WithArrayOfValues(values []*meta.Meta) *Condition_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*Condition_FieldTerminalPathArrayOfValues)
}

func (ConditionPathSelectorMetadata) WithSubPath(subPath meta.Meta_FieldPath) *Condition_FieldSubPath {
	return &Condition_FieldSubPath{selector: Condition_FieldPathSelectorMetadata, subPath: subPath}
}

func (s ConditionPathSelectorMetadata) WithSubValue(subPathValue meta.Meta_FieldPathValue) *Condition_FieldSubPathValue {
	return &Condition_FieldSubPathValue{Condition_FieldPath: s.WithSubPath(subPathValue), subPathValue: subPathValue}
}

func (s ConditionPathSelectorMetadata) WithSubArrayOfValues(subPathArrayOfValues meta.Meta_FieldPathArrayOfValues) *Condition_FieldSubPathArrayOfValues {
	return &Condition_FieldSubPathArrayOfValues{Condition_FieldPath: s.WithSubPath(subPathArrayOfValues), subPathArrayOfValues: subPathArrayOfValues}
}

func (s ConditionPathSelectorMetadata) WithSubArrayItemValue(subPathArrayItemValue meta.Meta_FieldPathArrayItemValue) *Condition_FieldSubPathArrayItemValue {
	return &Condition_FieldSubPathArrayItemValue{Condition_FieldPath: s.WithSubPath(subPathArrayItemValue), subPathItemValue: subPathArrayItemValue}
}

func (ConditionPathSelectorMetadata) CreateTime() ConditionPathSelectorMetadataCreateTime {
	return ConditionPathSelectorMetadataCreateTime{}
}

func (ConditionPathSelectorMetadata) UpdateTime() ConditionPathSelectorMetadataUpdateTime {
	return ConditionPathSelectorMetadataUpdateTime{}
}

func (ConditionPathSelectorMetadata) DeleteTime() ConditionPathSelectorMetadataDeleteTime {
	return ConditionPathSelectorMetadataDeleteTime{}
}

func (ConditionPathSelectorMetadata) Uuid() ConditionPathSelectorMetadataUuid {
	return ConditionPathSelectorMetadataUuid{}
}

func (ConditionPathSelectorMetadata) Tags() ConditionPathSelectorMetadataTags {
	return ConditionPathSelectorMetadataTags{}
}

func (ConditionPathSelectorMetadata) Labels() ConditionPathSelectorMetadataLabels {
	return ConditionPathSelectorMetadataLabels{}
}

func (ConditionPathSelectorMetadata) Annotations() ConditionPathSelectorMetadataAnnotations {
	return ConditionPathSelectorMetadataAnnotations{}
}

func (ConditionPathSelectorMetadata) Generation() ConditionPathSelectorMetadataGeneration {
	return ConditionPathSelectorMetadataGeneration{}
}

func (ConditionPathSelectorMetadata) ResourceVersion() ConditionPathSelectorMetadataResourceVersion {
	return ConditionPathSelectorMetadataResourceVersion{}
}

func (ConditionPathSelectorMetadata) OwnerReferences() ConditionPathSelectorMetadataOwnerReferences {
	return ConditionPathSelectorMetadataOwnerReferences{}
}

func (ConditionPathSelectorMetadata) Shards() ConditionPathSelectorMetadataShards {
	return ConditionPathSelectorMetadataShards{}
}

func (ConditionPathSelectorMetadata) Syncing() ConditionPathSelectorMetadataSyncing {
	return ConditionPathSelectorMetadataSyncing{}
}

func (ConditionPathSelectorMetadata) Lifecycle() ConditionPathSelectorMetadataLifecycle {
	return ConditionPathSelectorMetadataLifecycle{}
}

func (ConditionPathSelectorMetadata) Services() ConditionPathSelectorMetadataServices {
	return ConditionPathSelectorMetadataServices{}
}

type ConditionPathSelectorMetadataCreateTime struct{}

func (ConditionPathSelectorMetadataCreateTime) FieldPath() *Condition_FieldSubPath {
	return &Condition_FieldSubPath{
		selector: Condition_FieldPathSelectorMetadata,
		subPath:  meta.NewMetaFieldPathBuilder().CreateTime().FieldPath(),
	}
}

func (s ConditionPathSelectorMetadataCreateTime) WithValue(value *timestamppb.Timestamp) *Condition_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*Condition_FieldSubPathValue)
}

func (s ConditionPathSelectorMetadataCreateTime) WithArrayOfValues(values []*timestamppb.Timestamp) *Condition_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*Condition_FieldSubPathArrayOfValues)
}

type ConditionPathSelectorMetadataUpdateTime struct{}

func (ConditionPathSelectorMetadataUpdateTime) FieldPath() *Condition_FieldSubPath {
	return &Condition_FieldSubPath{
		selector: Condition_FieldPathSelectorMetadata,
		subPath:  meta.NewMetaFieldPathBuilder().UpdateTime().FieldPath(),
	}
}

func (s ConditionPathSelectorMetadataUpdateTime) WithValue(value *timestamppb.Timestamp) *Condition_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*Condition_FieldSubPathValue)
}

func (s ConditionPathSelectorMetadataUpdateTime) WithArrayOfValues(values []*timestamppb.Timestamp) *Condition_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*Condition_FieldSubPathArrayOfValues)
}

type ConditionPathSelectorMetadataDeleteTime struct{}

func (ConditionPathSelectorMetadataDeleteTime) FieldPath() *Condition_FieldSubPath {
	return &Condition_FieldSubPath{
		selector: Condition_FieldPathSelectorMetadata,
		subPath:  meta.NewMetaFieldPathBuilder().DeleteTime().FieldPath(),
	}
}

func (s ConditionPathSelectorMetadataDeleteTime) WithValue(value *timestamppb.Timestamp) *Condition_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*Condition_FieldSubPathValue)
}

func (s ConditionPathSelectorMetadataDeleteTime) WithArrayOfValues(values []*timestamppb.Timestamp) *Condition_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*Condition_FieldSubPathArrayOfValues)
}

type ConditionPathSelectorMetadataUuid struct{}

func (ConditionPathSelectorMetadataUuid) FieldPath() *Condition_FieldSubPath {
	return &Condition_FieldSubPath{
		selector: Condition_FieldPathSelectorMetadata,
		subPath:  meta.NewMetaFieldPathBuilder().Uuid().FieldPath(),
	}
}

func (s ConditionPathSelectorMetadataUuid) WithValue(value string) *Condition_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*Condition_FieldSubPathValue)
}

func (s ConditionPathSelectorMetadataUuid) WithArrayOfValues(values []string) *Condition_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*Condition_FieldSubPathArrayOfValues)
}

type ConditionPathSelectorMetadataTags struct{}

func (ConditionPathSelectorMetadataTags) FieldPath() *Condition_FieldSubPath {
	return &Condition_FieldSubPath{
		selector: Condition_FieldPathSelectorMetadata,
		subPath:  meta.NewMetaFieldPathBuilder().Tags().FieldPath(),
	}
}

func (s ConditionPathSelectorMetadataTags) WithValue(value []string) *Condition_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*Condition_FieldSubPathValue)
}

func (s ConditionPathSelectorMetadataTags) WithArrayOfValues(values [][]string) *Condition_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*Condition_FieldSubPathArrayOfValues)
}

func (s ConditionPathSelectorMetadataTags) WithItemValue(value string) *Condition_FieldSubPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*Condition_FieldSubPathArrayItemValue)
}

type ConditionPathSelectorMetadataLabels struct{}

func (ConditionPathSelectorMetadataLabels) FieldPath() *Condition_FieldSubPath {
	return &Condition_FieldSubPath{
		selector: Condition_FieldPathSelectorMetadata,
		subPath:  meta.NewMetaFieldPathBuilder().Labels().FieldPath(),
	}
}

func (s ConditionPathSelectorMetadataLabels) WithValue(value map[string]string) *Condition_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*Condition_FieldSubPathValue)
}

func (s ConditionPathSelectorMetadataLabels) WithArrayOfValues(values []map[string]string) *Condition_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*Condition_FieldSubPathArrayOfValues)
}

func (ConditionPathSelectorMetadataLabels) WithKey(key string) ConditionMapPathSelectorMetadataLabels {
	return ConditionMapPathSelectorMetadataLabels{key: key}
}

type ConditionMapPathSelectorMetadataLabels struct {
	key string
}

func (s ConditionMapPathSelectorMetadataLabels) FieldPath() *Condition_FieldSubPath {
	return &Condition_FieldSubPath{
		selector: Condition_FieldPathSelectorMetadata,
		subPath:  meta.NewMetaFieldPathBuilder().Labels().WithKey(s.key).FieldPath(),
	}
}

func (s ConditionMapPathSelectorMetadataLabels) WithValue(value string) *Condition_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*Condition_FieldSubPathValue)
}

func (s ConditionMapPathSelectorMetadataLabels) WithArrayOfValues(values []string) *Condition_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*Condition_FieldSubPathArrayOfValues)
}

type ConditionPathSelectorMetadataAnnotations struct{}

func (ConditionPathSelectorMetadataAnnotations) FieldPath() *Condition_FieldSubPath {
	return &Condition_FieldSubPath{
		selector: Condition_FieldPathSelectorMetadata,
		subPath:  meta.NewMetaFieldPathBuilder().Annotations().FieldPath(),
	}
}

func (s ConditionPathSelectorMetadataAnnotations) WithValue(value map[string]string) *Condition_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*Condition_FieldSubPathValue)
}

func (s ConditionPathSelectorMetadataAnnotations) WithArrayOfValues(values []map[string]string) *Condition_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*Condition_FieldSubPathArrayOfValues)
}

func (ConditionPathSelectorMetadataAnnotations) WithKey(key string) ConditionMapPathSelectorMetadataAnnotations {
	return ConditionMapPathSelectorMetadataAnnotations{key: key}
}

type ConditionMapPathSelectorMetadataAnnotations struct {
	key string
}

func (s ConditionMapPathSelectorMetadataAnnotations) FieldPath() *Condition_FieldSubPath {
	return &Condition_FieldSubPath{
		selector: Condition_FieldPathSelectorMetadata,
		subPath:  meta.NewMetaFieldPathBuilder().Annotations().WithKey(s.key).FieldPath(),
	}
}

func (s ConditionMapPathSelectorMetadataAnnotations) WithValue(value string) *Condition_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*Condition_FieldSubPathValue)
}

func (s ConditionMapPathSelectorMetadataAnnotations) WithArrayOfValues(values []string) *Condition_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*Condition_FieldSubPathArrayOfValues)
}

type ConditionPathSelectorMetadataGeneration struct{}

func (ConditionPathSelectorMetadataGeneration) FieldPath() *Condition_FieldSubPath {
	return &Condition_FieldSubPath{
		selector: Condition_FieldPathSelectorMetadata,
		subPath:  meta.NewMetaFieldPathBuilder().Generation().FieldPath(),
	}
}

func (s ConditionPathSelectorMetadataGeneration) WithValue(value int64) *Condition_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*Condition_FieldSubPathValue)
}

func (s ConditionPathSelectorMetadataGeneration) WithArrayOfValues(values []int64) *Condition_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*Condition_FieldSubPathArrayOfValues)
}

type ConditionPathSelectorMetadataResourceVersion struct{}

func (ConditionPathSelectorMetadataResourceVersion) FieldPath() *Condition_FieldSubPath {
	return &Condition_FieldSubPath{
		selector: Condition_FieldPathSelectorMetadata,
		subPath:  meta.NewMetaFieldPathBuilder().ResourceVersion().FieldPath(),
	}
}

func (s ConditionPathSelectorMetadataResourceVersion) WithValue(value string) *Condition_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*Condition_FieldSubPathValue)
}

func (s ConditionPathSelectorMetadataResourceVersion) WithArrayOfValues(values []string) *Condition_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*Condition_FieldSubPathArrayOfValues)
}

type ConditionPathSelectorMetadataOwnerReferences struct{}

func (ConditionPathSelectorMetadataOwnerReferences) FieldPath() *Condition_FieldSubPath {
	return &Condition_FieldSubPath{
		selector: Condition_FieldPathSelectorMetadata,
		subPath:  meta.NewMetaFieldPathBuilder().OwnerReferences().FieldPath(),
	}
}

func (s ConditionPathSelectorMetadataOwnerReferences) WithValue(value []*meta.OwnerReference) *Condition_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*Condition_FieldSubPathValue)
}

func (s ConditionPathSelectorMetadataOwnerReferences) WithArrayOfValues(values [][]*meta.OwnerReference) *Condition_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*Condition_FieldSubPathArrayOfValues)
}

func (s ConditionPathSelectorMetadataOwnerReferences) WithItemValue(value *meta.OwnerReference) *Condition_FieldSubPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*Condition_FieldSubPathArrayItemValue)
}

func (ConditionPathSelectorMetadataOwnerReferences) Kind() ConditionPathSelectorMetadataOwnerReferencesKind {
	return ConditionPathSelectorMetadataOwnerReferencesKind{}
}

func (ConditionPathSelectorMetadataOwnerReferences) Version() ConditionPathSelectorMetadataOwnerReferencesVersion {
	return ConditionPathSelectorMetadataOwnerReferencesVersion{}
}

func (ConditionPathSelectorMetadataOwnerReferences) Name() ConditionPathSelectorMetadataOwnerReferencesName {
	return ConditionPathSelectorMetadataOwnerReferencesName{}
}

func (ConditionPathSelectorMetadataOwnerReferences) Region() ConditionPathSelectorMetadataOwnerReferencesRegion {
	return ConditionPathSelectorMetadataOwnerReferencesRegion{}
}

func (ConditionPathSelectorMetadataOwnerReferences) Controller() ConditionPathSelectorMetadataOwnerReferencesController {
	return ConditionPathSelectorMetadataOwnerReferencesController{}
}

func (ConditionPathSelectorMetadataOwnerReferences) RequiresOwnerReference() ConditionPathSelectorMetadataOwnerReferencesRequiresOwnerReference {
	return ConditionPathSelectorMetadataOwnerReferencesRequiresOwnerReference{}
}

func (ConditionPathSelectorMetadataOwnerReferences) UnsetOnDelete() ConditionPathSelectorMetadataOwnerReferencesUnsetOnDelete {
	return ConditionPathSelectorMetadataOwnerReferencesUnsetOnDelete{}
}

type ConditionPathSelectorMetadataOwnerReferencesKind struct{}

func (ConditionPathSelectorMetadataOwnerReferencesKind) FieldPath() *Condition_FieldSubPath {
	return &Condition_FieldSubPath{
		selector: Condition_FieldPathSelectorMetadata,
		subPath:  meta.NewMetaFieldPathBuilder().OwnerReferences().Kind().FieldPath(),
	}
}

func (s ConditionPathSelectorMetadataOwnerReferencesKind) WithValue(value string) *Condition_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*Condition_FieldSubPathValue)
}

func (s ConditionPathSelectorMetadataOwnerReferencesKind) WithArrayOfValues(values []string) *Condition_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*Condition_FieldSubPathArrayOfValues)
}

type ConditionPathSelectorMetadataOwnerReferencesVersion struct{}

func (ConditionPathSelectorMetadataOwnerReferencesVersion) FieldPath() *Condition_FieldSubPath {
	return &Condition_FieldSubPath{
		selector: Condition_FieldPathSelectorMetadata,
		subPath:  meta.NewMetaFieldPathBuilder().OwnerReferences().Version().FieldPath(),
	}
}

func (s ConditionPathSelectorMetadataOwnerReferencesVersion) WithValue(value string) *Condition_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*Condition_FieldSubPathValue)
}

func (s ConditionPathSelectorMetadataOwnerReferencesVersion) WithArrayOfValues(values []string) *Condition_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*Condition_FieldSubPathArrayOfValues)
}

type ConditionPathSelectorMetadataOwnerReferencesName struct{}

func (ConditionPathSelectorMetadataOwnerReferencesName) FieldPath() *Condition_FieldSubPath {
	return &Condition_FieldSubPath{
		selector: Condition_FieldPathSelectorMetadata,
		subPath:  meta.NewMetaFieldPathBuilder().OwnerReferences().Name().FieldPath(),
	}
}

func (s ConditionPathSelectorMetadataOwnerReferencesName) WithValue(value string) *Condition_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*Condition_FieldSubPathValue)
}

func (s ConditionPathSelectorMetadataOwnerReferencesName) WithArrayOfValues(values []string) *Condition_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*Condition_FieldSubPathArrayOfValues)
}

type ConditionPathSelectorMetadataOwnerReferencesRegion struct{}

func (ConditionPathSelectorMetadataOwnerReferencesRegion) FieldPath() *Condition_FieldSubPath {
	return &Condition_FieldSubPath{
		selector: Condition_FieldPathSelectorMetadata,
		subPath:  meta.NewMetaFieldPathBuilder().OwnerReferences().Region().FieldPath(),
	}
}

func (s ConditionPathSelectorMetadataOwnerReferencesRegion) WithValue(value string) *Condition_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*Condition_FieldSubPathValue)
}

func (s ConditionPathSelectorMetadataOwnerReferencesRegion) WithArrayOfValues(values []string) *Condition_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*Condition_FieldSubPathArrayOfValues)
}

type ConditionPathSelectorMetadataOwnerReferencesController struct{}

func (ConditionPathSelectorMetadataOwnerReferencesController) FieldPath() *Condition_FieldSubPath {
	return &Condition_FieldSubPath{
		selector: Condition_FieldPathSelectorMetadata,
		subPath:  meta.NewMetaFieldPathBuilder().OwnerReferences().Controller().FieldPath(),
	}
}

func (s ConditionPathSelectorMetadataOwnerReferencesController) WithValue(value bool) *Condition_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*Condition_FieldSubPathValue)
}

func (s ConditionPathSelectorMetadataOwnerReferencesController) WithArrayOfValues(values []bool) *Condition_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*Condition_FieldSubPathArrayOfValues)
}

type ConditionPathSelectorMetadataOwnerReferencesRequiresOwnerReference struct{}

func (ConditionPathSelectorMetadataOwnerReferencesRequiresOwnerReference) FieldPath() *Condition_FieldSubPath {
	return &Condition_FieldSubPath{
		selector: Condition_FieldPathSelectorMetadata,
		subPath:  meta.NewMetaFieldPathBuilder().OwnerReferences().RequiresOwnerReference().FieldPath(),
	}
}

func (s ConditionPathSelectorMetadataOwnerReferencesRequiresOwnerReference) WithValue(value bool) *Condition_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*Condition_FieldSubPathValue)
}

func (s ConditionPathSelectorMetadataOwnerReferencesRequiresOwnerReference) WithArrayOfValues(values []bool) *Condition_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*Condition_FieldSubPathArrayOfValues)
}

type ConditionPathSelectorMetadataOwnerReferencesUnsetOnDelete struct{}

func (ConditionPathSelectorMetadataOwnerReferencesUnsetOnDelete) FieldPath() *Condition_FieldSubPath {
	return &Condition_FieldSubPath{
		selector: Condition_FieldPathSelectorMetadata,
		subPath:  meta.NewMetaFieldPathBuilder().OwnerReferences().UnsetOnDelete().FieldPath(),
	}
}

func (s ConditionPathSelectorMetadataOwnerReferencesUnsetOnDelete) WithValue(value bool) *Condition_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*Condition_FieldSubPathValue)
}

func (s ConditionPathSelectorMetadataOwnerReferencesUnsetOnDelete) WithArrayOfValues(values []bool) *Condition_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*Condition_FieldSubPathArrayOfValues)
}

type ConditionPathSelectorMetadataShards struct{}

func (ConditionPathSelectorMetadataShards) FieldPath() *Condition_FieldSubPath {
	return &Condition_FieldSubPath{
		selector: Condition_FieldPathSelectorMetadata,
		subPath:  meta.NewMetaFieldPathBuilder().Shards().FieldPath(),
	}
}

func (s ConditionPathSelectorMetadataShards) WithValue(value map[string]int64) *Condition_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*Condition_FieldSubPathValue)
}

func (s ConditionPathSelectorMetadataShards) WithArrayOfValues(values []map[string]int64) *Condition_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*Condition_FieldSubPathArrayOfValues)
}

func (ConditionPathSelectorMetadataShards) WithKey(key string) ConditionMapPathSelectorMetadataShards {
	return ConditionMapPathSelectorMetadataShards{key: key}
}

type ConditionMapPathSelectorMetadataShards struct {
	key string
}

func (s ConditionMapPathSelectorMetadataShards) FieldPath() *Condition_FieldSubPath {
	return &Condition_FieldSubPath{
		selector: Condition_FieldPathSelectorMetadata,
		subPath:  meta.NewMetaFieldPathBuilder().Shards().WithKey(s.key).FieldPath(),
	}
}

func (s ConditionMapPathSelectorMetadataShards) WithValue(value int64) *Condition_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*Condition_FieldSubPathValue)
}

func (s ConditionMapPathSelectorMetadataShards) WithArrayOfValues(values []int64) *Condition_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*Condition_FieldSubPathArrayOfValues)
}

type ConditionPathSelectorMetadataSyncing struct{}

func (ConditionPathSelectorMetadataSyncing) FieldPath() *Condition_FieldSubPath {
	return &Condition_FieldSubPath{
		selector: Condition_FieldPathSelectorMetadata,
		subPath:  meta.NewMetaFieldPathBuilder().Syncing().FieldPath(),
	}
}

func (s ConditionPathSelectorMetadataSyncing) WithValue(value *meta.SyncingMeta) *Condition_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*Condition_FieldSubPathValue)
}

func (s ConditionPathSelectorMetadataSyncing) WithArrayOfValues(values []*meta.SyncingMeta) *Condition_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*Condition_FieldSubPathArrayOfValues)
}

func (ConditionPathSelectorMetadataSyncing) OwningRegion() ConditionPathSelectorMetadataSyncingOwningRegion {
	return ConditionPathSelectorMetadataSyncingOwningRegion{}
}

func (ConditionPathSelectorMetadataSyncing) Regions() ConditionPathSelectorMetadataSyncingRegions {
	return ConditionPathSelectorMetadataSyncingRegions{}
}

type ConditionPathSelectorMetadataSyncingOwningRegion struct{}

func (ConditionPathSelectorMetadataSyncingOwningRegion) FieldPath() *Condition_FieldSubPath {
	return &Condition_FieldSubPath{
		selector: Condition_FieldPathSelectorMetadata,
		subPath:  meta.NewMetaFieldPathBuilder().Syncing().OwningRegion().FieldPath(),
	}
}

func (s ConditionPathSelectorMetadataSyncingOwningRegion) WithValue(value string) *Condition_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*Condition_FieldSubPathValue)
}

func (s ConditionPathSelectorMetadataSyncingOwningRegion) WithArrayOfValues(values []string) *Condition_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*Condition_FieldSubPathArrayOfValues)
}

type ConditionPathSelectorMetadataSyncingRegions struct{}

func (ConditionPathSelectorMetadataSyncingRegions) FieldPath() *Condition_FieldSubPath {
	return &Condition_FieldSubPath{
		selector: Condition_FieldPathSelectorMetadata,
		subPath:  meta.NewMetaFieldPathBuilder().Syncing().Regions().FieldPath(),
	}
}

func (s ConditionPathSelectorMetadataSyncingRegions) WithValue(value []string) *Condition_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*Condition_FieldSubPathValue)
}

func (s ConditionPathSelectorMetadataSyncingRegions) WithArrayOfValues(values [][]string) *Condition_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*Condition_FieldSubPathArrayOfValues)
}

func (s ConditionPathSelectorMetadataSyncingRegions) WithItemValue(value string) *Condition_FieldSubPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*Condition_FieldSubPathArrayItemValue)
}

type ConditionPathSelectorMetadataLifecycle struct{}

func (ConditionPathSelectorMetadataLifecycle) FieldPath() *Condition_FieldSubPath {
	return &Condition_FieldSubPath{
		selector: Condition_FieldPathSelectorMetadata,
		subPath:  meta.NewMetaFieldPathBuilder().Lifecycle().FieldPath(),
	}
}

func (s ConditionPathSelectorMetadataLifecycle) WithValue(value *meta.Lifecycle) *Condition_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*Condition_FieldSubPathValue)
}

func (s ConditionPathSelectorMetadataLifecycle) WithArrayOfValues(values []*meta.Lifecycle) *Condition_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*Condition_FieldSubPathArrayOfValues)
}

func (ConditionPathSelectorMetadataLifecycle) State() ConditionPathSelectorMetadataLifecycleState {
	return ConditionPathSelectorMetadataLifecycleState{}
}

func (ConditionPathSelectorMetadataLifecycle) BlockDeletion() ConditionPathSelectorMetadataLifecycleBlockDeletion {
	return ConditionPathSelectorMetadataLifecycleBlockDeletion{}
}

type ConditionPathSelectorMetadataLifecycleState struct{}

func (ConditionPathSelectorMetadataLifecycleState) FieldPath() *Condition_FieldSubPath {
	return &Condition_FieldSubPath{
		selector: Condition_FieldPathSelectorMetadata,
		subPath:  meta.NewMetaFieldPathBuilder().Lifecycle().State().FieldPath(),
	}
}

func (s ConditionPathSelectorMetadataLifecycleState) WithValue(value meta.Lifecycle_State) *Condition_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*Condition_FieldSubPathValue)
}

func (s ConditionPathSelectorMetadataLifecycleState) WithArrayOfValues(values []meta.Lifecycle_State) *Condition_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*Condition_FieldSubPathArrayOfValues)
}

type ConditionPathSelectorMetadataLifecycleBlockDeletion struct{}

func (ConditionPathSelectorMetadataLifecycleBlockDeletion) FieldPath() *Condition_FieldSubPath {
	return &Condition_FieldSubPath{
		selector: Condition_FieldPathSelectorMetadata,
		subPath:  meta.NewMetaFieldPathBuilder().Lifecycle().BlockDeletion().FieldPath(),
	}
}

func (s ConditionPathSelectorMetadataLifecycleBlockDeletion) WithValue(value bool) *Condition_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*Condition_FieldSubPathValue)
}

func (s ConditionPathSelectorMetadataLifecycleBlockDeletion) WithArrayOfValues(values []bool) *Condition_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*Condition_FieldSubPathArrayOfValues)
}

type ConditionPathSelectorMetadataServices struct{}

func (ConditionPathSelectorMetadataServices) FieldPath() *Condition_FieldSubPath {
	return &Condition_FieldSubPath{
		selector: Condition_FieldPathSelectorMetadata,
		subPath:  meta.NewMetaFieldPathBuilder().Services().FieldPath(),
	}
}

func (s ConditionPathSelectorMetadataServices) WithValue(value *meta.ServicesInfo) *Condition_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*Condition_FieldSubPathValue)
}

func (s ConditionPathSelectorMetadataServices) WithArrayOfValues(values []*meta.ServicesInfo) *Condition_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*Condition_FieldSubPathArrayOfValues)
}

func (ConditionPathSelectorMetadataServices) OwningService() ConditionPathSelectorMetadataServicesOwningService {
	return ConditionPathSelectorMetadataServicesOwningService{}
}

func (ConditionPathSelectorMetadataServices) AllowedServices() ConditionPathSelectorMetadataServicesAllowedServices {
	return ConditionPathSelectorMetadataServicesAllowedServices{}
}

type ConditionPathSelectorMetadataServicesOwningService struct{}

func (ConditionPathSelectorMetadataServicesOwningService) FieldPath() *Condition_FieldSubPath {
	return &Condition_FieldSubPath{
		selector: Condition_FieldPathSelectorMetadata,
		subPath:  meta.NewMetaFieldPathBuilder().Services().OwningService().FieldPath(),
	}
}

func (s ConditionPathSelectorMetadataServicesOwningService) WithValue(value string) *Condition_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*Condition_FieldSubPathValue)
}

func (s ConditionPathSelectorMetadataServicesOwningService) WithArrayOfValues(values []string) *Condition_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*Condition_FieldSubPathArrayOfValues)
}

type ConditionPathSelectorMetadataServicesAllowedServices struct{}

func (ConditionPathSelectorMetadataServicesAllowedServices) FieldPath() *Condition_FieldSubPath {
	return &Condition_FieldSubPath{
		selector: Condition_FieldPathSelectorMetadata,
		subPath:  meta.NewMetaFieldPathBuilder().Services().AllowedServices().FieldPath(),
	}
}

func (s ConditionPathSelectorMetadataServicesAllowedServices) WithValue(value []string) *Condition_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*Condition_FieldSubPathValue)
}

func (s ConditionPathSelectorMetadataServicesAllowedServices) WithArrayOfValues(values [][]string) *Condition_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*Condition_FieldSubPathArrayOfValues)
}

func (s ConditionPathSelectorMetadataServicesAllowedServices) WithItemValue(value string) *Condition_FieldSubPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*Condition_FieldSubPathArrayItemValue)
}

type ConditionPathSelectorDisplayName struct{}

func (ConditionPathSelectorDisplayName) FieldPath() *Condition_FieldTerminalPath {
	return &Condition_FieldTerminalPath{selector: Condition_FieldPathSelectorDisplayName}
}

func (s ConditionPathSelectorDisplayName) WithValue(value string) *Condition_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*Condition_FieldTerminalPathValue)
}

func (s ConditionPathSelectorDisplayName) WithArrayOfValues(values []string) *Condition_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*Condition_FieldTerminalPathArrayOfValues)
}

type ConditionPathSelectorDescription struct{}

func (ConditionPathSelectorDescription) FieldPath() *Condition_FieldTerminalPath {
	return &Condition_FieldTerminalPath{selector: Condition_FieldPathSelectorDescription}
}

func (s ConditionPathSelectorDescription) WithValue(value string) *Condition_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*Condition_FieldTerminalPathValue)
}

func (s ConditionPathSelectorDescription) WithArrayOfValues(values []string) *Condition_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*Condition_FieldTerminalPathArrayOfValues)
}

type ConditionPathSelectorExpression struct{}

func (ConditionPathSelectorExpression) FieldPath() *Condition_FieldTerminalPath {
	return &Condition_FieldTerminalPath{selector: Condition_FieldPathSelectorExpression}
}

func (s ConditionPathSelectorExpression) WithValue(value string) *Condition_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*Condition_FieldTerminalPathValue)
}

func (s ConditionPathSelectorExpression) WithArrayOfValues(values []string) *Condition_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*Condition_FieldTerminalPathArrayOfValues)
}

type ConditionPathSelectorParameterDeclarations struct{}

func (ConditionPathSelectorParameterDeclarations) FieldPath() *Condition_FieldTerminalPath {
	return &Condition_FieldTerminalPath{selector: Condition_FieldPathSelectorParameterDeclarations}
}

func (s ConditionPathSelectorParameterDeclarations) WithValue(value []*Condition_ParameterDeclaration) *Condition_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*Condition_FieldTerminalPathValue)
}

func (s ConditionPathSelectorParameterDeclarations) WithArrayOfValues(values [][]*Condition_ParameterDeclaration) *Condition_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*Condition_FieldTerminalPathArrayOfValues)
}

func (s ConditionPathSelectorParameterDeclarations) WithItemValue(value *Condition_ParameterDeclaration) *Condition_FieldTerminalPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*Condition_FieldTerminalPathArrayItemValue)
}
func (ConditionPathSelectorParameterDeclarations) WithSubPath(subPath ConditionParameterDeclaration_FieldPath) *Condition_FieldSubPath {
	return &Condition_FieldSubPath{selector: Condition_FieldPathSelectorParameterDeclarations, subPath: subPath}
}

func (s ConditionPathSelectorParameterDeclarations) WithSubValue(subPathValue ConditionParameterDeclaration_FieldPathValue) *Condition_FieldSubPathValue {
	return &Condition_FieldSubPathValue{Condition_FieldPath: s.WithSubPath(subPathValue), subPathValue: subPathValue}
}

func (s ConditionPathSelectorParameterDeclarations) WithSubArrayOfValues(subPathArrayOfValues ConditionParameterDeclaration_FieldPathArrayOfValues) *Condition_FieldSubPathArrayOfValues {
	return &Condition_FieldSubPathArrayOfValues{Condition_FieldPath: s.WithSubPath(subPathArrayOfValues), subPathArrayOfValues: subPathArrayOfValues}
}

func (s ConditionPathSelectorParameterDeclarations) WithSubArrayItemValue(subPathArrayItemValue ConditionParameterDeclaration_FieldPathArrayItemValue) *Condition_FieldSubPathArrayItemValue {
	return &Condition_FieldSubPathArrayItemValue{Condition_FieldPath: s.WithSubPath(subPathArrayItemValue), subPathItemValue: subPathArrayItemValue}
}

func (ConditionPathSelectorParameterDeclarations) Key() ConditionPathSelectorParameterDeclarationsKey {
	return ConditionPathSelectorParameterDeclarationsKey{}
}

func (ConditionPathSelectorParameterDeclarations) Type() ConditionPathSelectorParameterDeclarationsType {
	return ConditionPathSelectorParameterDeclarationsType{}
}

type ConditionPathSelectorParameterDeclarationsKey struct{}

func (ConditionPathSelectorParameterDeclarationsKey) FieldPath() *Condition_FieldSubPath {
	return &Condition_FieldSubPath{
		selector: Condition_FieldPathSelectorParameterDeclarations,
		subPath:  NewConditionParameterDeclarationFieldPathBuilder().Key().FieldPath(),
	}
}

func (s ConditionPathSelectorParameterDeclarationsKey) WithValue(value string) *Condition_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*Condition_FieldSubPathValue)
}

func (s ConditionPathSelectorParameterDeclarationsKey) WithArrayOfValues(values []string) *Condition_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*Condition_FieldSubPathArrayOfValues)
}

type ConditionPathSelectorParameterDeclarationsType struct{}

func (ConditionPathSelectorParameterDeclarationsType) FieldPath() *Condition_FieldSubPath {
	return &Condition_FieldSubPath{
		selector: Condition_FieldPathSelectorParameterDeclarations,
		subPath:  NewConditionParameterDeclarationFieldPathBuilder().Type().FieldPath(),
	}
}

func (s ConditionPathSelectorParameterDeclarationsType) WithValue(value Condition_ParameterType) *Condition_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*Condition_FieldSubPathValue)
}

func (s ConditionPathSelectorParameterDeclarationsType) WithArrayOfValues(values []Condition_ParameterType) *Condition_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*Condition_FieldSubPathArrayOfValues)
}

type ConditionParameterDeclarationFieldPathBuilder struct{}

func NewConditionParameterDeclarationFieldPathBuilder() ConditionParameterDeclarationFieldPathBuilder {
	return ConditionParameterDeclarationFieldPathBuilder{}
}
func (ConditionParameterDeclarationFieldPathBuilder) Key() Condition_ParameterDeclarationPathSelectorKey {
	return Condition_ParameterDeclarationPathSelectorKey{}
}
func (ConditionParameterDeclarationFieldPathBuilder) Type() Condition_ParameterDeclarationPathSelectorType {
	return Condition_ParameterDeclarationPathSelectorType{}
}

type Condition_ParameterDeclarationPathSelectorKey struct{}

func (Condition_ParameterDeclarationPathSelectorKey) FieldPath() *ConditionParameterDeclaration_FieldTerminalPath {
	return &ConditionParameterDeclaration_FieldTerminalPath{selector: ConditionParameterDeclaration_FieldPathSelectorKey}
}

func (s Condition_ParameterDeclarationPathSelectorKey) WithValue(value string) *ConditionParameterDeclaration_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*ConditionParameterDeclaration_FieldTerminalPathValue)
}

func (s Condition_ParameterDeclarationPathSelectorKey) WithArrayOfValues(values []string) *ConditionParameterDeclaration_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ConditionParameterDeclaration_FieldTerminalPathArrayOfValues)
}

type Condition_ParameterDeclarationPathSelectorType struct{}

func (Condition_ParameterDeclarationPathSelectorType) FieldPath() *ConditionParameterDeclaration_FieldTerminalPath {
	return &ConditionParameterDeclaration_FieldTerminalPath{selector: ConditionParameterDeclaration_FieldPathSelectorType}
}

func (s Condition_ParameterDeclarationPathSelectorType) WithValue(value Condition_ParameterType) *ConditionParameterDeclaration_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*ConditionParameterDeclaration_FieldTerminalPathValue)
}

func (s Condition_ParameterDeclarationPathSelectorType) WithArrayOfValues(values []Condition_ParameterType) *ConditionParameterDeclaration_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ConditionParameterDeclaration_FieldTerminalPathArrayOfValues)
}

type ExecutableConditionFieldPathBuilder struct{}

func NewExecutableConditionFieldPathBuilder() ExecutableConditionFieldPathBuilder {
	return ExecutableConditionFieldPathBuilder{}
}
func (ExecutableConditionFieldPathBuilder) Condition() ExecutableConditionPathSelectorCondition {
	return ExecutableConditionPathSelectorCondition{}
}
func (ExecutableConditionFieldPathBuilder) Params() ExecutableConditionPathSelectorParams {
	return ExecutableConditionPathSelectorParams{}
}

type ExecutableConditionPathSelectorCondition struct{}

func (ExecutableConditionPathSelectorCondition) FieldPath() *ExecutableCondition_FieldTerminalPath {
	return &ExecutableCondition_FieldTerminalPath{selector: ExecutableCondition_FieldPathSelectorCondition}
}

func (s ExecutableConditionPathSelectorCondition) WithValue(value *Reference) *ExecutableCondition_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*ExecutableCondition_FieldTerminalPathValue)
}

func (s ExecutableConditionPathSelectorCondition) WithArrayOfValues(values []*Reference) *ExecutableCondition_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ExecutableCondition_FieldTerminalPathArrayOfValues)
}

type ExecutableConditionPathSelectorParams struct{}

func (ExecutableConditionPathSelectorParams) FieldPath() *ExecutableCondition_FieldTerminalPath {
	return &ExecutableCondition_FieldTerminalPath{selector: ExecutableCondition_FieldPathSelectorParams}
}

func (s ExecutableConditionPathSelectorParams) WithValue(value *structpb.Struct) *ExecutableCondition_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*ExecutableCondition_FieldTerminalPathValue)
}

func (s ExecutableConditionPathSelectorParams) WithArrayOfValues(values []*structpb.Struct) *ExecutableCondition_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ExecutableCondition_FieldTerminalPathArrayOfValues)
}
