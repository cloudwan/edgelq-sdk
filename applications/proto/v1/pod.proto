syntax = "proto3";

package ntt.applications.v1;

import "edgelq-sdk/applications/proto/v1/common.proto";
import "google/api/resource.proto";
import "google/protobuf/timestamp.proto";
import "goten-sdk/types/meta.proto";

option go_package = "github.com/cloudwan/edgelq-sdk/applications/resources/v1/pod;pod";
option java_multiple_files = true;
option java_outer_classname = "PodProto";
option java_package = "com.ntt.applications.pb.v1";

// Pod Resource
message Pod {
  option (google.api.resource) = {
    type : "applications.edgelq.com/Pod"
    pattern : "projects/{project}/regions/{region}/pods/{pod}"
  };

  // Name of Pod
  // When creating a new instance, this field is optional and if not provided,
  // it will be generated automatically. Last ID segment must conform to the
  // following regex: [a-z][a-z0-9\\-]{0,28}[a-z0-9]
  string name = 1;

  // Metadata is an object with information like create, update and delete time
  // (for async deleted resources), has user labels/annotations, sharding
  // information, multi-region syncing information and may have non-schema
  // owners (useful for taking ownership of resources belonging to lower level
  // services by higher ones).
  goten.types.Meta metadata = 3;

  // Display name of Pod
  string display_name = 2;

  // Optional. Description of the Pod.
  string description = 7;

  PodSpec spec = 4;

  // Optional managing distribution.
  string distribution = 6;

  Status status = 5;

  // Status defines the status of a Pod
  message Status {
    // Phase is the state of the entire Pod.
    Phase phase = 1;

    // container_statuses lists individual status of the containers.
    repeated Container container_statuses = 2;

    // Error message if Status.Phase is FAILED.
    string error = 3;

    // Container defines status of a Container.
    message Container {
      // name is the name of the container
      string name = 1;

      State state = 3;

      StateWaiting waiting = 4;

      StateRunning running = 5;

      StateTerminated terminated = 6;

      message StateWaiting {
        // reason explains why the container is waiting now.
        string reason = 1;

        // message gives a human readable message that explains the state.
        string message = 2;
      }

      message StateRunning {
        // started_at indicates when the container started at.
        google.protobuf.Timestamp started_at = 1;
      }

      message StateTerminated {
        // exit_code is the exist code that the process returns at the end.
        int32 exit_code = 1;

        // signal is the signal used to kill the process.
        int32 signal = 2;

        // reason explains why the container is terminated.
        string reason = 3;

        // message has detailed human readable message.
        string message = 4;

        // started_at indicates when the container started at.
        google.protobuf.Timestamp started_at = 5;

        // finished_at indicates when the container exited at.
        google.protobuf.Timestamp finished_at = 6;

        // containerID is the ID of the container when it was running.
        string container_id = 7;
      }

      // TODO remove prefixes when the name conflict issue by gogo is resolved
      enum State {
        STATE_UNSPECIFIED = 0;

        WAITING = 1;

        RUNNING = 2;

        TERMINATED = 3;

        UNKNOWN = 4;
      }
    }

    // PodPhase is states of Pod.
    // TODO remove prefixes when the name conflict issue by gogo is resolved
    enum Phase {
      // PhaseUnspecified means the Pod is in unknown state. This state is
      // usually not used.
      PHASE_UNSPECIFIED = 0;

      // PhasePending is used when the Pod is accepted by the system and it's
      // under processing to be launched.
      PENDING = 1;

      // PhaseRunning indicates all the containers supposed to be running are up
      // and running.
      RUNNING = 2;

      // PhaseSucceeded indicates the Pod is terminated however the exit codes
      // of the containers are non-error numbers.
      SUCCEEDED = 3;

      // PhaseFailed is used when the Pod encountered an issue and some or all
      // of the container are not running.
      FAILED = 4;

      // PhaseUnknown is used when the assigned node doesn't respond anymore
      UNKNOWN = 5;
    }
  }
}
