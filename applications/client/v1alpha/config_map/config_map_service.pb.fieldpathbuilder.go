// Code generated by protoc-gen-goten-object
// File: edgelq/applications/proto/v1alpha/config_map_service.proto
// DO NOT EDIT!!!

package config_map_client

// proto imports
import (
	config_map "github.com/cloudwan/edgelq-sdk/applications/resources/v1alpha/config_map"
	project "github.com/cloudwan/edgelq-sdk/applications/resources/v1alpha/project"
	ntt_meta "github.com/cloudwan/edgelq-sdk/common/types/meta"
	view "github.com/cloudwan/goten-sdk/runtime/api/view"
	watch_type "github.com/cloudwan/goten-sdk/runtime/api/watch_type"
	empty "github.com/golang/protobuf/ptypes/empty"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	field_mask "google.golang.org/genproto/protobuf/field_mask"
)

// make sure we're using proto imports
var (
	_ = &config_map.ConfigMap{}
	_ = &project.Project{}
	_ = &ntt_meta.Meta{}
	_ = &empty.Empty{}
	_ = &field_mask.FieldMask{}
	_ = &timestamp.Timestamp{}
	_ = view.View(0)
	_ = watch_type.WatchType(0)
)

type GetConfigMapRequestFieldPathBuilder struct{}

func NewGetConfigMapRequestFieldPathBuilder() GetConfigMapRequestFieldPathBuilder {
	return GetConfigMapRequestFieldPathBuilder{}
}
func (GetConfigMapRequestFieldPathBuilder) Name() GetConfigMapRequestPathSelectorName {
	return GetConfigMapRequestPathSelectorName{}
}
func (GetConfigMapRequestFieldPathBuilder) FieldMask() GetConfigMapRequestPathSelectorFieldMask {
	return GetConfigMapRequestPathSelectorFieldMask{}
}
func (GetConfigMapRequestFieldPathBuilder) View() GetConfigMapRequestPathSelectorView {
	return GetConfigMapRequestPathSelectorView{}
}

type GetConfigMapRequestPathSelectorName struct{}

func (GetConfigMapRequestPathSelectorName) FieldPath() *GetConfigMapRequest_FieldTerminalPath {
	return &GetConfigMapRequest_FieldTerminalPath{selector: GetConfigMapRequest_FieldPathSelectorName}
}

func (s GetConfigMapRequestPathSelectorName) WithValue(value *config_map.Reference) *GetConfigMapRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*GetConfigMapRequest_FieldTerminalPathValue)
}

func (s GetConfigMapRequestPathSelectorName) WithArrayOfValues(values []*config_map.Reference) *GetConfigMapRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*GetConfigMapRequest_FieldTerminalPathArrayOfValues)
}

type GetConfigMapRequestPathSelectorFieldMask struct{}

func (GetConfigMapRequestPathSelectorFieldMask) FieldPath() *GetConfigMapRequest_FieldTerminalPath {
	return &GetConfigMapRequest_FieldTerminalPath{selector: GetConfigMapRequest_FieldPathSelectorFieldMask}
}

func (s GetConfigMapRequestPathSelectorFieldMask) WithValue(value *config_map.ConfigMap_FieldMask) *GetConfigMapRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*GetConfigMapRequest_FieldTerminalPathValue)
}

func (s GetConfigMapRequestPathSelectorFieldMask) WithArrayOfValues(values []*config_map.ConfigMap_FieldMask) *GetConfigMapRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*GetConfigMapRequest_FieldTerminalPathArrayOfValues)
}

type GetConfigMapRequestPathSelectorView struct{}

func (GetConfigMapRequestPathSelectorView) FieldPath() *GetConfigMapRequest_FieldTerminalPath {
	return &GetConfigMapRequest_FieldTerminalPath{selector: GetConfigMapRequest_FieldPathSelectorView}
}

func (s GetConfigMapRequestPathSelectorView) WithValue(value view.View) *GetConfigMapRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*GetConfigMapRequest_FieldTerminalPathValue)
}

func (s GetConfigMapRequestPathSelectorView) WithArrayOfValues(values []view.View) *GetConfigMapRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*GetConfigMapRequest_FieldTerminalPathArrayOfValues)
}

type BatchGetConfigMapsRequestFieldPathBuilder struct{}

func NewBatchGetConfigMapsRequestFieldPathBuilder() BatchGetConfigMapsRequestFieldPathBuilder {
	return BatchGetConfigMapsRequestFieldPathBuilder{}
}
func (BatchGetConfigMapsRequestFieldPathBuilder) Names() BatchGetConfigMapsRequestPathSelectorNames {
	return BatchGetConfigMapsRequestPathSelectorNames{}
}
func (BatchGetConfigMapsRequestFieldPathBuilder) FieldMask() BatchGetConfigMapsRequestPathSelectorFieldMask {
	return BatchGetConfigMapsRequestPathSelectorFieldMask{}
}
func (BatchGetConfigMapsRequestFieldPathBuilder) View() BatchGetConfigMapsRequestPathSelectorView {
	return BatchGetConfigMapsRequestPathSelectorView{}
}

type BatchGetConfigMapsRequestPathSelectorNames struct{}

func (BatchGetConfigMapsRequestPathSelectorNames) FieldPath() *BatchGetConfigMapsRequest_FieldTerminalPath {
	return &BatchGetConfigMapsRequest_FieldTerminalPath{selector: BatchGetConfigMapsRequest_FieldPathSelectorNames}
}

func (s BatchGetConfigMapsRequestPathSelectorNames) WithValue(value []*config_map.Reference) *BatchGetConfigMapsRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetConfigMapsRequest_FieldTerminalPathValue)
}

func (s BatchGetConfigMapsRequestPathSelectorNames) WithArrayOfValues(values [][]*config_map.Reference) *BatchGetConfigMapsRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetConfigMapsRequest_FieldTerminalPathArrayOfValues)
}

func (s BatchGetConfigMapsRequestPathSelectorNames) WithItemValue(value *config_map.Reference) *BatchGetConfigMapsRequest_FieldTerminalPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*BatchGetConfigMapsRequest_FieldTerminalPathArrayItemValue)
}

type BatchGetConfigMapsRequestPathSelectorFieldMask struct{}

func (BatchGetConfigMapsRequestPathSelectorFieldMask) FieldPath() *BatchGetConfigMapsRequest_FieldTerminalPath {
	return &BatchGetConfigMapsRequest_FieldTerminalPath{selector: BatchGetConfigMapsRequest_FieldPathSelectorFieldMask}
}

func (s BatchGetConfigMapsRequestPathSelectorFieldMask) WithValue(value *config_map.ConfigMap_FieldMask) *BatchGetConfigMapsRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetConfigMapsRequest_FieldTerminalPathValue)
}

func (s BatchGetConfigMapsRequestPathSelectorFieldMask) WithArrayOfValues(values []*config_map.ConfigMap_FieldMask) *BatchGetConfigMapsRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetConfigMapsRequest_FieldTerminalPathArrayOfValues)
}

type BatchGetConfigMapsRequestPathSelectorView struct{}

func (BatchGetConfigMapsRequestPathSelectorView) FieldPath() *BatchGetConfigMapsRequest_FieldTerminalPath {
	return &BatchGetConfigMapsRequest_FieldTerminalPath{selector: BatchGetConfigMapsRequest_FieldPathSelectorView}
}

func (s BatchGetConfigMapsRequestPathSelectorView) WithValue(value view.View) *BatchGetConfigMapsRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetConfigMapsRequest_FieldTerminalPathValue)
}

func (s BatchGetConfigMapsRequestPathSelectorView) WithArrayOfValues(values []view.View) *BatchGetConfigMapsRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetConfigMapsRequest_FieldTerminalPathArrayOfValues)
}

type BatchGetConfigMapsResponseFieldPathBuilder struct{}

func NewBatchGetConfigMapsResponseFieldPathBuilder() BatchGetConfigMapsResponseFieldPathBuilder {
	return BatchGetConfigMapsResponseFieldPathBuilder{}
}
func (BatchGetConfigMapsResponseFieldPathBuilder) ConfigMaps() BatchGetConfigMapsResponsePathSelectorConfigMaps {
	return BatchGetConfigMapsResponsePathSelectorConfigMaps{}
}
func (BatchGetConfigMapsResponseFieldPathBuilder) Missing() BatchGetConfigMapsResponsePathSelectorMissing {
	return BatchGetConfigMapsResponsePathSelectorMissing{}
}

type BatchGetConfigMapsResponsePathSelectorConfigMaps struct{}

func (BatchGetConfigMapsResponsePathSelectorConfigMaps) FieldPath() *BatchGetConfigMapsResponse_FieldTerminalPath {
	return &BatchGetConfigMapsResponse_FieldTerminalPath{selector: BatchGetConfigMapsResponse_FieldPathSelectorConfigMaps}
}

func (s BatchGetConfigMapsResponsePathSelectorConfigMaps) WithValue(value []*config_map.ConfigMap) *BatchGetConfigMapsResponse_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetConfigMapsResponse_FieldTerminalPathValue)
}

func (s BatchGetConfigMapsResponsePathSelectorConfigMaps) WithArrayOfValues(values [][]*config_map.ConfigMap) *BatchGetConfigMapsResponse_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetConfigMapsResponse_FieldTerminalPathArrayOfValues)
}

func (s BatchGetConfigMapsResponsePathSelectorConfigMaps) WithItemValue(value *config_map.ConfigMap) *BatchGetConfigMapsResponse_FieldTerminalPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*BatchGetConfigMapsResponse_FieldTerminalPathArrayItemValue)
}
func (BatchGetConfigMapsResponsePathSelectorConfigMaps) WithSubPath(subPath config_map.ConfigMap_FieldPath) *BatchGetConfigMapsResponse_FieldSubPath {
	return &BatchGetConfigMapsResponse_FieldSubPath{selector: BatchGetConfigMapsResponse_FieldPathSelectorConfigMaps, subPath: subPath}
}

func (s BatchGetConfigMapsResponsePathSelectorConfigMaps) WithSubValue(subPathValue config_map.ConfigMap_FieldPathValue) *BatchGetConfigMapsResponse_FieldSubPathValue {
	return &BatchGetConfigMapsResponse_FieldSubPathValue{BatchGetConfigMapsResponse_FieldPath: s.WithSubPath(subPathValue), subPathValue: subPathValue}
}

func (s BatchGetConfigMapsResponsePathSelectorConfigMaps) WithSubArrayOfValues(subPathArrayOfValues config_map.ConfigMap_FieldPathArrayOfValues) *BatchGetConfigMapsResponse_FieldSubPathArrayOfValues {
	return &BatchGetConfigMapsResponse_FieldSubPathArrayOfValues{BatchGetConfigMapsResponse_FieldPath: s.WithSubPath(subPathArrayOfValues), subPathArrayOfValues: subPathArrayOfValues}
}

func (s BatchGetConfigMapsResponsePathSelectorConfigMaps) WithSubArrayItemValue(subPathArrayItemValue config_map.ConfigMap_FieldPathArrayItemValue) *BatchGetConfigMapsResponse_FieldSubPathArrayItemValue {
	return &BatchGetConfigMapsResponse_FieldSubPathArrayItemValue{BatchGetConfigMapsResponse_FieldPath: s.WithSubPath(subPathArrayItemValue), subPathItemValue: subPathArrayItemValue}
}

func (BatchGetConfigMapsResponsePathSelectorConfigMaps) Name() BatchGetConfigMapsResponsePathSelectorConfigMapsName {
	return BatchGetConfigMapsResponsePathSelectorConfigMapsName{}
}

func (BatchGetConfigMapsResponsePathSelectorConfigMaps) DisplayName() BatchGetConfigMapsResponsePathSelectorConfigMapsDisplayName {
	return BatchGetConfigMapsResponsePathSelectorConfigMapsDisplayName{}
}

func (BatchGetConfigMapsResponsePathSelectorConfigMaps) Metadata() BatchGetConfigMapsResponsePathSelectorConfigMapsMetadata {
	return BatchGetConfigMapsResponsePathSelectorConfigMapsMetadata{}
}

func (BatchGetConfigMapsResponsePathSelectorConfigMaps) Data() BatchGetConfigMapsResponsePathSelectorConfigMapsData {
	return BatchGetConfigMapsResponsePathSelectorConfigMapsData{}
}

func (BatchGetConfigMapsResponsePathSelectorConfigMaps) BinaryData() BatchGetConfigMapsResponsePathSelectorConfigMapsBinaryData {
	return BatchGetConfigMapsResponsePathSelectorConfigMapsBinaryData{}
}

type BatchGetConfigMapsResponsePathSelectorConfigMapsName struct{}

func (BatchGetConfigMapsResponsePathSelectorConfigMapsName) FieldPath() *BatchGetConfigMapsResponse_FieldSubPath {
	return &BatchGetConfigMapsResponse_FieldSubPath{
		selector: BatchGetConfigMapsResponse_FieldPathSelectorConfigMaps,
		subPath:  config_map.NewConfigMapFieldPathBuilder().Name().FieldPath(),
	}
}

func (s BatchGetConfigMapsResponsePathSelectorConfigMapsName) WithValue(value *config_map.Name) *BatchGetConfigMapsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetConfigMapsResponse_FieldSubPathValue)
}

func (s BatchGetConfigMapsResponsePathSelectorConfigMapsName) WithArrayOfValues(values []*config_map.Name) *BatchGetConfigMapsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetConfigMapsResponse_FieldSubPathArrayOfValues)
}

type BatchGetConfigMapsResponsePathSelectorConfigMapsDisplayName struct{}

func (BatchGetConfigMapsResponsePathSelectorConfigMapsDisplayName) FieldPath() *BatchGetConfigMapsResponse_FieldSubPath {
	return &BatchGetConfigMapsResponse_FieldSubPath{
		selector: BatchGetConfigMapsResponse_FieldPathSelectorConfigMaps,
		subPath:  config_map.NewConfigMapFieldPathBuilder().DisplayName().FieldPath(),
	}
}

func (s BatchGetConfigMapsResponsePathSelectorConfigMapsDisplayName) WithValue(value string) *BatchGetConfigMapsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetConfigMapsResponse_FieldSubPathValue)
}

func (s BatchGetConfigMapsResponsePathSelectorConfigMapsDisplayName) WithArrayOfValues(values []string) *BatchGetConfigMapsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetConfigMapsResponse_FieldSubPathArrayOfValues)
}

type BatchGetConfigMapsResponsePathSelectorConfigMapsMetadata struct{}

func (BatchGetConfigMapsResponsePathSelectorConfigMapsMetadata) FieldPath() *BatchGetConfigMapsResponse_FieldSubPath {
	return &BatchGetConfigMapsResponse_FieldSubPath{
		selector: BatchGetConfigMapsResponse_FieldPathSelectorConfigMaps,
		subPath:  config_map.NewConfigMapFieldPathBuilder().Metadata().FieldPath(),
	}
}

func (s BatchGetConfigMapsResponsePathSelectorConfigMapsMetadata) WithValue(value *ntt_meta.Meta) *BatchGetConfigMapsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetConfigMapsResponse_FieldSubPathValue)
}

func (s BatchGetConfigMapsResponsePathSelectorConfigMapsMetadata) WithArrayOfValues(values []*ntt_meta.Meta) *BatchGetConfigMapsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetConfigMapsResponse_FieldSubPathArrayOfValues)
}

func (BatchGetConfigMapsResponsePathSelectorConfigMapsMetadata) CreateTime() BatchGetConfigMapsResponsePathSelectorConfigMapsMetadataCreateTime {
	return BatchGetConfigMapsResponsePathSelectorConfigMapsMetadataCreateTime{}
}

func (BatchGetConfigMapsResponsePathSelectorConfigMapsMetadata) UpdateTime() BatchGetConfigMapsResponsePathSelectorConfigMapsMetadataUpdateTime {
	return BatchGetConfigMapsResponsePathSelectorConfigMapsMetadataUpdateTime{}
}

func (BatchGetConfigMapsResponsePathSelectorConfigMapsMetadata) DeleteTime() BatchGetConfigMapsResponsePathSelectorConfigMapsMetadataDeleteTime {
	return BatchGetConfigMapsResponsePathSelectorConfigMapsMetadataDeleteTime{}
}

func (BatchGetConfigMapsResponsePathSelectorConfigMapsMetadata) Uuid() BatchGetConfigMapsResponsePathSelectorConfigMapsMetadataUuid {
	return BatchGetConfigMapsResponsePathSelectorConfigMapsMetadataUuid{}
}

func (BatchGetConfigMapsResponsePathSelectorConfigMapsMetadata) Tags() BatchGetConfigMapsResponsePathSelectorConfigMapsMetadataTags {
	return BatchGetConfigMapsResponsePathSelectorConfigMapsMetadataTags{}
}

func (BatchGetConfigMapsResponsePathSelectorConfigMapsMetadata) Labels() BatchGetConfigMapsResponsePathSelectorConfigMapsMetadataLabels {
	return BatchGetConfigMapsResponsePathSelectorConfigMapsMetadataLabels{}
}

func (BatchGetConfigMapsResponsePathSelectorConfigMapsMetadata) Annotations() BatchGetConfigMapsResponsePathSelectorConfigMapsMetadataAnnotations {
	return BatchGetConfigMapsResponsePathSelectorConfigMapsMetadataAnnotations{}
}

func (BatchGetConfigMapsResponsePathSelectorConfigMapsMetadata) Generation() BatchGetConfigMapsResponsePathSelectorConfigMapsMetadataGeneration {
	return BatchGetConfigMapsResponsePathSelectorConfigMapsMetadataGeneration{}
}

func (BatchGetConfigMapsResponsePathSelectorConfigMapsMetadata) ResourceVersion() BatchGetConfigMapsResponsePathSelectorConfigMapsMetadataResourceVersion {
	return BatchGetConfigMapsResponsePathSelectorConfigMapsMetadataResourceVersion{}
}

func (BatchGetConfigMapsResponsePathSelectorConfigMapsMetadata) OwnerReferences() BatchGetConfigMapsResponsePathSelectorConfigMapsMetadataOwnerReferences {
	return BatchGetConfigMapsResponsePathSelectorConfigMapsMetadataOwnerReferences{}
}

func (BatchGetConfigMapsResponsePathSelectorConfigMapsMetadata) Shards() BatchGetConfigMapsResponsePathSelectorConfigMapsMetadataShards {
	return BatchGetConfigMapsResponsePathSelectorConfigMapsMetadataShards{}
}

func (BatchGetConfigMapsResponsePathSelectorConfigMapsMetadata) Syncing() BatchGetConfigMapsResponsePathSelectorConfigMapsMetadataSyncing {
	return BatchGetConfigMapsResponsePathSelectorConfigMapsMetadataSyncing{}
}

func (BatchGetConfigMapsResponsePathSelectorConfigMapsMetadata) Lifecycle() BatchGetConfigMapsResponsePathSelectorConfigMapsMetadataLifecycle {
	return BatchGetConfigMapsResponsePathSelectorConfigMapsMetadataLifecycle{}
}

type BatchGetConfigMapsResponsePathSelectorConfigMapsMetadataCreateTime struct{}

func (BatchGetConfigMapsResponsePathSelectorConfigMapsMetadataCreateTime) FieldPath() *BatchGetConfigMapsResponse_FieldSubPath {
	return &BatchGetConfigMapsResponse_FieldSubPath{
		selector: BatchGetConfigMapsResponse_FieldPathSelectorConfigMaps,
		subPath:  config_map.NewConfigMapFieldPathBuilder().Metadata().CreateTime().FieldPath(),
	}
}

func (s BatchGetConfigMapsResponsePathSelectorConfigMapsMetadataCreateTime) WithValue(value *timestamp.Timestamp) *BatchGetConfigMapsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetConfigMapsResponse_FieldSubPathValue)
}

func (s BatchGetConfigMapsResponsePathSelectorConfigMapsMetadataCreateTime) WithArrayOfValues(values []*timestamp.Timestamp) *BatchGetConfigMapsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetConfigMapsResponse_FieldSubPathArrayOfValues)
}

type BatchGetConfigMapsResponsePathSelectorConfigMapsMetadataUpdateTime struct{}

func (BatchGetConfigMapsResponsePathSelectorConfigMapsMetadataUpdateTime) FieldPath() *BatchGetConfigMapsResponse_FieldSubPath {
	return &BatchGetConfigMapsResponse_FieldSubPath{
		selector: BatchGetConfigMapsResponse_FieldPathSelectorConfigMaps,
		subPath:  config_map.NewConfigMapFieldPathBuilder().Metadata().UpdateTime().FieldPath(),
	}
}

func (s BatchGetConfigMapsResponsePathSelectorConfigMapsMetadataUpdateTime) WithValue(value *timestamp.Timestamp) *BatchGetConfigMapsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetConfigMapsResponse_FieldSubPathValue)
}

func (s BatchGetConfigMapsResponsePathSelectorConfigMapsMetadataUpdateTime) WithArrayOfValues(values []*timestamp.Timestamp) *BatchGetConfigMapsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetConfigMapsResponse_FieldSubPathArrayOfValues)
}

type BatchGetConfigMapsResponsePathSelectorConfigMapsMetadataDeleteTime struct{}

func (BatchGetConfigMapsResponsePathSelectorConfigMapsMetadataDeleteTime) FieldPath() *BatchGetConfigMapsResponse_FieldSubPath {
	return &BatchGetConfigMapsResponse_FieldSubPath{
		selector: BatchGetConfigMapsResponse_FieldPathSelectorConfigMaps,
		subPath:  config_map.NewConfigMapFieldPathBuilder().Metadata().DeleteTime().FieldPath(),
	}
}

func (s BatchGetConfigMapsResponsePathSelectorConfigMapsMetadataDeleteTime) WithValue(value *timestamp.Timestamp) *BatchGetConfigMapsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetConfigMapsResponse_FieldSubPathValue)
}

func (s BatchGetConfigMapsResponsePathSelectorConfigMapsMetadataDeleteTime) WithArrayOfValues(values []*timestamp.Timestamp) *BatchGetConfigMapsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetConfigMapsResponse_FieldSubPathArrayOfValues)
}

type BatchGetConfigMapsResponsePathSelectorConfigMapsMetadataUuid struct{}

func (BatchGetConfigMapsResponsePathSelectorConfigMapsMetadataUuid) FieldPath() *BatchGetConfigMapsResponse_FieldSubPath {
	return &BatchGetConfigMapsResponse_FieldSubPath{
		selector: BatchGetConfigMapsResponse_FieldPathSelectorConfigMaps,
		subPath:  config_map.NewConfigMapFieldPathBuilder().Metadata().Uuid().FieldPath(),
	}
}

func (s BatchGetConfigMapsResponsePathSelectorConfigMapsMetadataUuid) WithValue(value string) *BatchGetConfigMapsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetConfigMapsResponse_FieldSubPathValue)
}

func (s BatchGetConfigMapsResponsePathSelectorConfigMapsMetadataUuid) WithArrayOfValues(values []string) *BatchGetConfigMapsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetConfigMapsResponse_FieldSubPathArrayOfValues)
}

type BatchGetConfigMapsResponsePathSelectorConfigMapsMetadataTags struct{}

func (BatchGetConfigMapsResponsePathSelectorConfigMapsMetadataTags) FieldPath() *BatchGetConfigMapsResponse_FieldSubPath {
	return &BatchGetConfigMapsResponse_FieldSubPath{
		selector: BatchGetConfigMapsResponse_FieldPathSelectorConfigMaps,
		subPath:  config_map.NewConfigMapFieldPathBuilder().Metadata().Tags().FieldPath(),
	}
}

func (s BatchGetConfigMapsResponsePathSelectorConfigMapsMetadataTags) WithValue(value []string) *BatchGetConfigMapsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetConfigMapsResponse_FieldSubPathValue)
}

func (s BatchGetConfigMapsResponsePathSelectorConfigMapsMetadataTags) WithArrayOfValues(values [][]string) *BatchGetConfigMapsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetConfigMapsResponse_FieldSubPathArrayOfValues)
}

func (s BatchGetConfigMapsResponsePathSelectorConfigMapsMetadataTags) WithItemValue(value string) *BatchGetConfigMapsResponse_FieldSubPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*BatchGetConfigMapsResponse_FieldSubPathArrayItemValue)
}

type BatchGetConfigMapsResponsePathSelectorConfigMapsMetadataLabels struct{}

func (BatchGetConfigMapsResponsePathSelectorConfigMapsMetadataLabels) FieldPath() *BatchGetConfigMapsResponse_FieldSubPath {
	return &BatchGetConfigMapsResponse_FieldSubPath{
		selector: BatchGetConfigMapsResponse_FieldPathSelectorConfigMaps,
		subPath:  config_map.NewConfigMapFieldPathBuilder().Metadata().Labels().FieldPath(),
	}
}

func (s BatchGetConfigMapsResponsePathSelectorConfigMapsMetadataLabels) WithValue(value map[string]string) *BatchGetConfigMapsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetConfigMapsResponse_FieldSubPathValue)
}

func (s BatchGetConfigMapsResponsePathSelectorConfigMapsMetadataLabels) WithArrayOfValues(values []map[string]string) *BatchGetConfigMapsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetConfigMapsResponse_FieldSubPathArrayOfValues)
}

func (BatchGetConfigMapsResponsePathSelectorConfigMapsMetadataLabels) WithKey(key string) BatchGetConfigMapsResponseMapPathSelectorConfigMapsMetadataLabels {
	return BatchGetConfigMapsResponseMapPathSelectorConfigMapsMetadataLabels{key: key}
}

type BatchGetConfigMapsResponseMapPathSelectorConfigMapsMetadataLabels struct {
	key string
}

func (s BatchGetConfigMapsResponseMapPathSelectorConfigMapsMetadataLabels) FieldPath() *BatchGetConfigMapsResponse_FieldSubPath {
	return &BatchGetConfigMapsResponse_FieldSubPath{
		selector: BatchGetConfigMapsResponse_FieldPathSelectorConfigMaps,
		subPath:  config_map.NewConfigMapFieldPathBuilder().Metadata().Labels().WithKey(s.key).FieldPath(),
	}
}

func (s BatchGetConfigMapsResponseMapPathSelectorConfigMapsMetadataLabels) WithValue(value string) *BatchGetConfigMapsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetConfigMapsResponse_FieldSubPathValue)
}

func (s BatchGetConfigMapsResponseMapPathSelectorConfigMapsMetadataLabels) WithArrayOfValues(values []string) *BatchGetConfigMapsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetConfigMapsResponse_FieldSubPathArrayOfValues)
}

type BatchGetConfigMapsResponsePathSelectorConfigMapsMetadataAnnotations struct{}

func (BatchGetConfigMapsResponsePathSelectorConfigMapsMetadataAnnotations) FieldPath() *BatchGetConfigMapsResponse_FieldSubPath {
	return &BatchGetConfigMapsResponse_FieldSubPath{
		selector: BatchGetConfigMapsResponse_FieldPathSelectorConfigMaps,
		subPath:  config_map.NewConfigMapFieldPathBuilder().Metadata().Annotations().FieldPath(),
	}
}

func (s BatchGetConfigMapsResponsePathSelectorConfigMapsMetadataAnnotations) WithValue(value map[string]string) *BatchGetConfigMapsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetConfigMapsResponse_FieldSubPathValue)
}

func (s BatchGetConfigMapsResponsePathSelectorConfigMapsMetadataAnnotations) WithArrayOfValues(values []map[string]string) *BatchGetConfigMapsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetConfigMapsResponse_FieldSubPathArrayOfValues)
}

func (BatchGetConfigMapsResponsePathSelectorConfigMapsMetadataAnnotations) WithKey(key string) BatchGetConfigMapsResponseMapPathSelectorConfigMapsMetadataAnnotations {
	return BatchGetConfigMapsResponseMapPathSelectorConfigMapsMetadataAnnotations{key: key}
}

type BatchGetConfigMapsResponseMapPathSelectorConfigMapsMetadataAnnotations struct {
	key string
}

func (s BatchGetConfigMapsResponseMapPathSelectorConfigMapsMetadataAnnotations) FieldPath() *BatchGetConfigMapsResponse_FieldSubPath {
	return &BatchGetConfigMapsResponse_FieldSubPath{
		selector: BatchGetConfigMapsResponse_FieldPathSelectorConfigMaps,
		subPath:  config_map.NewConfigMapFieldPathBuilder().Metadata().Annotations().WithKey(s.key).FieldPath(),
	}
}

func (s BatchGetConfigMapsResponseMapPathSelectorConfigMapsMetadataAnnotations) WithValue(value string) *BatchGetConfigMapsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetConfigMapsResponse_FieldSubPathValue)
}

func (s BatchGetConfigMapsResponseMapPathSelectorConfigMapsMetadataAnnotations) WithArrayOfValues(values []string) *BatchGetConfigMapsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetConfigMapsResponse_FieldSubPathArrayOfValues)
}

type BatchGetConfigMapsResponsePathSelectorConfigMapsMetadataGeneration struct{}

func (BatchGetConfigMapsResponsePathSelectorConfigMapsMetadataGeneration) FieldPath() *BatchGetConfigMapsResponse_FieldSubPath {
	return &BatchGetConfigMapsResponse_FieldSubPath{
		selector: BatchGetConfigMapsResponse_FieldPathSelectorConfigMaps,
		subPath:  config_map.NewConfigMapFieldPathBuilder().Metadata().Generation().FieldPath(),
	}
}

func (s BatchGetConfigMapsResponsePathSelectorConfigMapsMetadataGeneration) WithValue(value int64) *BatchGetConfigMapsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetConfigMapsResponse_FieldSubPathValue)
}

func (s BatchGetConfigMapsResponsePathSelectorConfigMapsMetadataGeneration) WithArrayOfValues(values []int64) *BatchGetConfigMapsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetConfigMapsResponse_FieldSubPathArrayOfValues)
}

type BatchGetConfigMapsResponsePathSelectorConfigMapsMetadataResourceVersion struct{}

func (BatchGetConfigMapsResponsePathSelectorConfigMapsMetadataResourceVersion) FieldPath() *BatchGetConfigMapsResponse_FieldSubPath {
	return &BatchGetConfigMapsResponse_FieldSubPath{
		selector: BatchGetConfigMapsResponse_FieldPathSelectorConfigMaps,
		subPath:  config_map.NewConfigMapFieldPathBuilder().Metadata().ResourceVersion().FieldPath(),
	}
}

func (s BatchGetConfigMapsResponsePathSelectorConfigMapsMetadataResourceVersion) WithValue(value string) *BatchGetConfigMapsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetConfigMapsResponse_FieldSubPathValue)
}

func (s BatchGetConfigMapsResponsePathSelectorConfigMapsMetadataResourceVersion) WithArrayOfValues(values []string) *BatchGetConfigMapsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetConfigMapsResponse_FieldSubPathArrayOfValues)
}

type BatchGetConfigMapsResponsePathSelectorConfigMapsMetadataOwnerReferences struct{}

func (BatchGetConfigMapsResponsePathSelectorConfigMapsMetadataOwnerReferences) FieldPath() *BatchGetConfigMapsResponse_FieldSubPath {
	return &BatchGetConfigMapsResponse_FieldSubPath{
		selector: BatchGetConfigMapsResponse_FieldPathSelectorConfigMaps,
		subPath:  config_map.NewConfigMapFieldPathBuilder().Metadata().OwnerReferences().FieldPath(),
	}
}

func (s BatchGetConfigMapsResponsePathSelectorConfigMapsMetadataOwnerReferences) WithValue(value []*ntt_meta.OwnerReference) *BatchGetConfigMapsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetConfigMapsResponse_FieldSubPathValue)
}

func (s BatchGetConfigMapsResponsePathSelectorConfigMapsMetadataOwnerReferences) WithArrayOfValues(values [][]*ntt_meta.OwnerReference) *BatchGetConfigMapsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetConfigMapsResponse_FieldSubPathArrayOfValues)
}

func (s BatchGetConfigMapsResponsePathSelectorConfigMapsMetadataOwnerReferences) WithItemValue(value *ntt_meta.OwnerReference) *BatchGetConfigMapsResponse_FieldSubPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*BatchGetConfigMapsResponse_FieldSubPathArrayItemValue)
}

func (BatchGetConfigMapsResponsePathSelectorConfigMapsMetadataOwnerReferences) Kind() BatchGetConfigMapsResponsePathSelectorConfigMapsMetadataOwnerReferencesKind {
	return BatchGetConfigMapsResponsePathSelectorConfigMapsMetadataOwnerReferencesKind{}
}

func (BatchGetConfigMapsResponsePathSelectorConfigMapsMetadataOwnerReferences) Version() BatchGetConfigMapsResponsePathSelectorConfigMapsMetadataOwnerReferencesVersion {
	return BatchGetConfigMapsResponsePathSelectorConfigMapsMetadataOwnerReferencesVersion{}
}

func (BatchGetConfigMapsResponsePathSelectorConfigMapsMetadataOwnerReferences) Name() BatchGetConfigMapsResponsePathSelectorConfigMapsMetadataOwnerReferencesName {
	return BatchGetConfigMapsResponsePathSelectorConfigMapsMetadataOwnerReferencesName{}
}

func (BatchGetConfigMapsResponsePathSelectorConfigMapsMetadataOwnerReferences) Region() BatchGetConfigMapsResponsePathSelectorConfigMapsMetadataOwnerReferencesRegion {
	return BatchGetConfigMapsResponsePathSelectorConfigMapsMetadataOwnerReferencesRegion{}
}

func (BatchGetConfigMapsResponsePathSelectorConfigMapsMetadataOwnerReferences) Controller() BatchGetConfigMapsResponsePathSelectorConfigMapsMetadataOwnerReferencesController {
	return BatchGetConfigMapsResponsePathSelectorConfigMapsMetadataOwnerReferencesController{}
}

func (BatchGetConfigMapsResponsePathSelectorConfigMapsMetadataOwnerReferences) BlockOwnerDeletion() BatchGetConfigMapsResponsePathSelectorConfigMapsMetadataOwnerReferencesBlockOwnerDeletion {
	return BatchGetConfigMapsResponsePathSelectorConfigMapsMetadataOwnerReferencesBlockOwnerDeletion{}
}

func (BatchGetConfigMapsResponsePathSelectorConfigMapsMetadataOwnerReferences) RequiresOwnerReference() BatchGetConfigMapsResponsePathSelectorConfigMapsMetadataOwnerReferencesRequiresOwnerReference {
	return BatchGetConfigMapsResponsePathSelectorConfigMapsMetadataOwnerReferencesRequiresOwnerReference{}
}

type BatchGetConfigMapsResponsePathSelectorConfigMapsMetadataOwnerReferencesKind struct{}

func (BatchGetConfigMapsResponsePathSelectorConfigMapsMetadataOwnerReferencesKind) FieldPath() *BatchGetConfigMapsResponse_FieldSubPath {
	return &BatchGetConfigMapsResponse_FieldSubPath{
		selector: BatchGetConfigMapsResponse_FieldPathSelectorConfigMaps,
		subPath:  config_map.NewConfigMapFieldPathBuilder().Metadata().OwnerReferences().Kind().FieldPath(),
	}
}

func (s BatchGetConfigMapsResponsePathSelectorConfigMapsMetadataOwnerReferencesKind) WithValue(value string) *BatchGetConfigMapsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetConfigMapsResponse_FieldSubPathValue)
}

func (s BatchGetConfigMapsResponsePathSelectorConfigMapsMetadataOwnerReferencesKind) WithArrayOfValues(values []string) *BatchGetConfigMapsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetConfigMapsResponse_FieldSubPathArrayOfValues)
}

type BatchGetConfigMapsResponsePathSelectorConfigMapsMetadataOwnerReferencesVersion struct{}

func (BatchGetConfigMapsResponsePathSelectorConfigMapsMetadataOwnerReferencesVersion) FieldPath() *BatchGetConfigMapsResponse_FieldSubPath {
	return &BatchGetConfigMapsResponse_FieldSubPath{
		selector: BatchGetConfigMapsResponse_FieldPathSelectorConfigMaps,
		subPath:  config_map.NewConfigMapFieldPathBuilder().Metadata().OwnerReferences().Version().FieldPath(),
	}
}

func (s BatchGetConfigMapsResponsePathSelectorConfigMapsMetadataOwnerReferencesVersion) WithValue(value string) *BatchGetConfigMapsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetConfigMapsResponse_FieldSubPathValue)
}

func (s BatchGetConfigMapsResponsePathSelectorConfigMapsMetadataOwnerReferencesVersion) WithArrayOfValues(values []string) *BatchGetConfigMapsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetConfigMapsResponse_FieldSubPathArrayOfValues)
}

type BatchGetConfigMapsResponsePathSelectorConfigMapsMetadataOwnerReferencesName struct{}

func (BatchGetConfigMapsResponsePathSelectorConfigMapsMetadataOwnerReferencesName) FieldPath() *BatchGetConfigMapsResponse_FieldSubPath {
	return &BatchGetConfigMapsResponse_FieldSubPath{
		selector: BatchGetConfigMapsResponse_FieldPathSelectorConfigMaps,
		subPath:  config_map.NewConfigMapFieldPathBuilder().Metadata().OwnerReferences().Name().FieldPath(),
	}
}

func (s BatchGetConfigMapsResponsePathSelectorConfigMapsMetadataOwnerReferencesName) WithValue(value string) *BatchGetConfigMapsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetConfigMapsResponse_FieldSubPathValue)
}

func (s BatchGetConfigMapsResponsePathSelectorConfigMapsMetadataOwnerReferencesName) WithArrayOfValues(values []string) *BatchGetConfigMapsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetConfigMapsResponse_FieldSubPathArrayOfValues)
}

type BatchGetConfigMapsResponsePathSelectorConfigMapsMetadataOwnerReferencesRegion struct{}

func (BatchGetConfigMapsResponsePathSelectorConfigMapsMetadataOwnerReferencesRegion) FieldPath() *BatchGetConfigMapsResponse_FieldSubPath {
	return &BatchGetConfigMapsResponse_FieldSubPath{
		selector: BatchGetConfigMapsResponse_FieldPathSelectorConfigMaps,
		subPath:  config_map.NewConfigMapFieldPathBuilder().Metadata().OwnerReferences().Region().FieldPath(),
	}
}

func (s BatchGetConfigMapsResponsePathSelectorConfigMapsMetadataOwnerReferencesRegion) WithValue(value string) *BatchGetConfigMapsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetConfigMapsResponse_FieldSubPathValue)
}

func (s BatchGetConfigMapsResponsePathSelectorConfigMapsMetadataOwnerReferencesRegion) WithArrayOfValues(values []string) *BatchGetConfigMapsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetConfigMapsResponse_FieldSubPathArrayOfValues)
}

type BatchGetConfigMapsResponsePathSelectorConfigMapsMetadataOwnerReferencesController struct{}

func (BatchGetConfigMapsResponsePathSelectorConfigMapsMetadataOwnerReferencesController) FieldPath() *BatchGetConfigMapsResponse_FieldSubPath {
	return &BatchGetConfigMapsResponse_FieldSubPath{
		selector: BatchGetConfigMapsResponse_FieldPathSelectorConfigMaps,
		subPath:  config_map.NewConfigMapFieldPathBuilder().Metadata().OwnerReferences().Controller().FieldPath(),
	}
}

func (s BatchGetConfigMapsResponsePathSelectorConfigMapsMetadataOwnerReferencesController) WithValue(value bool) *BatchGetConfigMapsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetConfigMapsResponse_FieldSubPathValue)
}

func (s BatchGetConfigMapsResponsePathSelectorConfigMapsMetadataOwnerReferencesController) WithArrayOfValues(values []bool) *BatchGetConfigMapsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetConfigMapsResponse_FieldSubPathArrayOfValues)
}

type BatchGetConfigMapsResponsePathSelectorConfigMapsMetadataOwnerReferencesBlockOwnerDeletion struct{}

func (BatchGetConfigMapsResponsePathSelectorConfigMapsMetadataOwnerReferencesBlockOwnerDeletion) FieldPath() *BatchGetConfigMapsResponse_FieldSubPath {
	return &BatchGetConfigMapsResponse_FieldSubPath{
		selector: BatchGetConfigMapsResponse_FieldPathSelectorConfigMaps,
		subPath:  config_map.NewConfigMapFieldPathBuilder().Metadata().OwnerReferences().BlockOwnerDeletion().FieldPath(),
	}
}

func (s BatchGetConfigMapsResponsePathSelectorConfigMapsMetadataOwnerReferencesBlockOwnerDeletion) WithValue(value bool) *BatchGetConfigMapsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetConfigMapsResponse_FieldSubPathValue)
}

func (s BatchGetConfigMapsResponsePathSelectorConfigMapsMetadataOwnerReferencesBlockOwnerDeletion) WithArrayOfValues(values []bool) *BatchGetConfigMapsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetConfigMapsResponse_FieldSubPathArrayOfValues)
}

type BatchGetConfigMapsResponsePathSelectorConfigMapsMetadataOwnerReferencesRequiresOwnerReference struct{}

func (BatchGetConfigMapsResponsePathSelectorConfigMapsMetadataOwnerReferencesRequiresOwnerReference) FieldPath() *BatchGetConfigMapsResponse_FieldSubPath {
	return &BatchGetConfigMapsResponse_FieldSubPath{
		selector: BatchGetConfigMapsResponse_FieldPathSelectorConfigMaps,
		subPath:  config_map.NewConfigMapFieldPathBuilder().Metadata().OwnerReferences().RequiresOwnerReference().FieldPath(),
	}
}

func (s BatchGetConfigMapsResponsePathSelectorConfigMapsMetadataOwnerReferencesRequiresOwnerReference) WithValue(value bool) *BatchGetConfigMapsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetConfigMapsResponse_FieldSubPathValue)
}

func (s BatchGetConfigMapsResponsePathSelectorConfigMapsMetadataOwnerReferencesRequiresOwnerReference) WithArrayOfValues(values []bool) *BatchGetConfigMapsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetConfigMapsResponse_FieldSubPathArrayOfValues)
}

type BatchGetConfigMapsResponsePathSelectorConfigMapsMetadataShards struct{}

func (BatchGetConfigMapsResponsePathSelectorConfigMapsMetadataShards) FieldPath() *BatchGetConfigMapsResponse_FieldSubPath {
	return &BatchGetConfigMapsResponse_FieldSubPath{
		selector: BatchGetConfigMapsResponse_FieldPathSelectorConfigMaps,
		subPath:  config_map.NewConfigMapFieldPathBuilder().Metadata().Shards().FieldPath(),
	}
}

func (s BatchGetConfigMapsResponsePathSelectorConfigMapsMetadataShards) WithValue(value map[string]int64) *BatchGetConfigMapsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetConfigMapsResponse_FieldSubPathValue)
}

func (s BatchGetConfigMapsResponsePathSelectorConfigMapsMetadataShards) WithArrayOfValues(values []map[string]int64) *BatchGetConfigMapsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetConfigMapsResponse_FieldSubPathArrayOfValues)
}

func (BatchGetConfigMapsResponsePathSelectorConfigMapsMetadataShards) WithKey(key string) BatchGetConfigMapsResponseMapPathSelectorConfigMapsMetadataShards {
	return BatchGetConfigMapsResponseMapPathSelectorConfigMapsMetadataShards{key: key}
}

type BatchGetConfigMapsResponseMapPathSelectorConfigMapsMetadataShards struct {
	key string
}

func (s BatchGetConfigMapsResponseMapPathSelectorConfigMapsMetadataShards) FieldPath() *BatchGetConfigMapsResponse_FieldSubPath {
	return &BatchGetConfigMapsResponse_FieldSubPath{
		selector: BatchGetConfigMapsResponse_FieldPathSelectorConfigMaps,
		subPath:  config_map.NewConfigMapFieldPathBuilder().Metadata().Shards().WithKey(s.key).FieldPath(),
	}
}

func (s BatchGetConfigMapsResponseMapPathSelectorConfigMapsMetadataShards) WithValue(value int64) *BatchGetConfigMapsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetConfigMapsResponse_FieldSubPathValue)
}

func (s BatchGetConfigMapsResponseMapPathSelectorConfigMapsMetadataShards) WithArrayOfValues(values []int64) *BatchGetConfigMapsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetConfigMapsResponse_FieldSubPathArrayOfValues)
}

type BatchGetConfigMapsResponsePathSelectorConfigMapsMetadataSyncing struct{}

func (BatchGetConfigMapsResponsePathSelectorConfigMapsMetadataSyncing) FieldPath() *BatchGetConfigMapsResponse_FieldSubPath {
	return &BatchGetConfigMapsResponse_FieldSubPath{
		selector: BatchGetConfigMapsResponse_FieldPathSelectorConfigMaps,
		subPath:  config_map.NewConfigMapFieldPathBuilder().Metadata().Syncing().FieldPath(),
	}
}

func (s BatchGetConfigMapsResponsePathSelectorConfigMapsMetadataSyncing) WithValue(value *ntt_meta.SyncingMeta) *BatchGetConfigMapsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetConfigMapsResponse_FieldSubPathValue)
}

func (s BatchGetConfigMapsResponsePathSelectorConfigMapsMetadataSyncing) WithArrayOfValues(values []*ntt_meta.SyncingMeta) *BatchGetConfigMapsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetConfigMapsResponse_FieldSubPathArrayOfValues)
}

func (BatchGetConfigMapsResponsePathSelectorConfigMapsMetadataSyncing) OwningRegion() BatchGetConfigMapsResponsePathSelectorConfigMapsMetadataSyncingOwningRegion {
	return BatchGetConfigMapsResponsePathSelectorConfigMapsMetadataSyncingOwningRegion{}
}

func (BatchGetConfigMapsResponsePathSelectorConfigMapsMetadataSyncing) Regions() BatchGetConfigMapsResponsePathSelectorConfigMapsMetadataSyncingRegions {
	return BatchGetConfigMapsResponsePathSelectorConfigMapsMetadataSyncingRegions{}
}

type BatchGetConfigMapsResponsePathSelectorConfigMapsMetadataSyncingOwningRegion struct{}

func (BatchGetConfigMapsResponsePathSelectorConfigMapsMetadataSyncingOwningRegion) FieldPath() *BatchGetConfigMapsResponse_FieldSubPath {
	return &BatchGetConfigMapsResponse_FieldSubPath{
		selector: BatchGetConfigMapsResponse_FieldPathSelectorConfigMaps,
		subPath:  config_map.NewConfigMapFieldPathBuilder().Metadata().Syncing().OwningRegion().FieldPath(),
	}
}

func (s BatchGetConfigMapsResponsePathSelectorConfigMapsMetadataSyncingOwningRegion) WithValue(value string) *BatchGetConfigMapsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetConfigMapsResponse_FieldSubPathValue)
}

func (s BatchGetConfigMapsResponsePathSelectorConfigMapsMetadataSyncingOwningRegion) WithArrayOfValues(values []string) *BatchGetConfigMapsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetConfigMapsResponse_FieldSubPathArrayOfValues)
}

type BatchGetConfigMapsResponsePathSelectorConfigMapsMetadataSyncingRegions struct{}

func (BatchGetConfigMapsResponsePathSelectorConfigMapsMetadataSyncingRegions) FieldPath() *BatchGetConfigMapsResponse_FieldSubPath {
	return &BatchGetConfigMapsResponse_FieldSubPath{
		selector: BatchGetConfigMapsResponse_FieldPathSelectorConfigMaps,
		subPath:  config_map.NewConfigMapFieldPathBuilder().Metadata().Syncing().Regions().FieldPath(),
	}
}

func (s BatchGetConfigMapsResponsePathSelectorConfigMapsMetadataSyncingRegions) WithValue(value []string) *BatchGetConfigMapsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetConfigMapsResponse_FieldSubPathValue)
}

func (s BatchGetConfigMapsResponsePathSelectorConfigMapsMetadataSyncingRegions) WithArrayOfValues(values [][]string) *BatchGetConfigMapsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetConfigMapsResponse_FieldSubPathArrayOfValues)
}

func (s BatchGetConfigMapsResponsePathSelectorConfigMapsMetadataSyncingRegions) WithItemValue(value string) *BatchGetConfigMapsResponse_FieldSubPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*BatchGetConfigMapsResponse_FieldSubPathArrayItemValue)
}

type BatchGetConfigMapsResponsePathSelectorConfigMapsMetadataLifecycle struct{}

func (BatchGetConfigMapsResponsePathSelectorConfigMapsMetadataLifecycle) FieldPath() *BatchGetConfigMapsResponse_FieldSubPath {
	return &BatchGetConfigMapsResponse_FieldSubPath{
		selector: BatchGetConfigMapsResponse_FieldPathSelectorConfigMaps,
		subPath:  config_map.NewConfigMapFieldPathBuilder().Metadata().Lifecycle().FieldPath(),
	}
}

func (s BatchGetConfigMapsResponsePathSelectorConfigMapsMetadataLifecycle) WithValue(value *ntt_meta.Lifecycle) *BatchGetConfigMapsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetConfigMapsResponse_FieldSubPathValue)
}

func (s BatchGetConfigMapsResponsePathSelectorConfigMapsMetadataLifecycle) WithArrayOfValues(values []*ntt_meta.Lifecycle) *BatchGetConfigMapsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetConfigMapsResponse_FieldSubPathArrayOfValues)
}

func (BatchGetConfigMapsResponsePathSelectorConfigMapsMetadataLifecycle) State() BatchGetConfigMapsResponsePathSelectorConfigMapsMetadataLifecycleState {
	return BatchGetConfigMapsResponsePathSelectorConfigMapsMetadataLifecycleState{}
}

func (BatchGetConfigMapsResponsePathSelectorConfigMapsMetadataLifecycle) BlockDeletion() BatchGetConfigMapsResponsePathSelectorConfigMapsMetadataLifecycleBlockDeletion {
	return BatchGetConfigMapsResponsePathSelectorConfigMapsMetadataLifecycleBlockDeletion{}
}

type BatchGetConfigMapsResponsePathSelectorConfigMapsMetadataLifecycleState struct{}

func (BatchGetConfigMapsResponsePathSelectorConfigMapsMetadataLifecycleState) FieldPath() *BatchGetConfigMapsResponse_FieldSubPath {
	return &BatchGetConfigMapsResponse_FieldSubPath{
		selector: BatchGetConfigMapsResponse_FieldPathSelectorConfigMaps,
		subPath:  config_map.NewConfigMapFieldPathBuilder().Metadata().Lifecycle().State().FieldPath(),
	}
}

func (s BatchGetConfigMapsResponsePathSelectorConfigMapsMetadataLifecycleState) WithValue(value ntt_meta.Lifecycle_State) *BatchGetConfigMapsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetConfigMapsResponse_FieldSubPathValue)
}

func (s BatchGetConfigMapsResponsePathSelectorConfigMapsMetadataLifecycleState) WithArrayOfValues(values []ntt_meta.Lifecycle_State) *BatchGetConfigMapsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetConfigMapsResponse_FieldSubPathArrayOfValues)
}

type BatchGetConfigMapsResponsePathSelectorConfigMapsMetadataLifecycleBlockDeletion struct{}

func (BatchGetConfigMapsResponsePathSelectorConfigMapsMetadataLifecycleBlockDeletion) FieldPath() *BatchGetConfigMapsResponse_FieldSubPath {
	return &BatchGetConfigMapsResponse_FieldSubPath{
		selector: BatchGetConfigMapsResponse_FieldPathSelectorConfigMaps,
		subPath:  config_map.NewConfigMapFieldPathBuilder().Metadata().Lifecycle().BlockDeletion().FieldPath(),
	}
}

func (s BatchGetConfigMapsResponsePathSelectorConfigMapsMetadataLifecycleBlockDeletion) WithValue(value bool) *BatchGetConfigMapsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetConfigMapsResponse_FieldSubPathValue)
}

func (s BatchGetConfigMapsResponsePathSelectorConfigMapsMetadataLifecycleBlockDeletion) WithArrayOfValues(values []bool) *BatchGetConfigMapsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetConfigMapsResponse_FieldSubPathArrayOfValues)
}

type BatchGetConfigMapsResponsePathSelectorConfigMapsData struct{}

func (BatchGetConfigMapsResponsePathSelectorConfigMapsData) FieldPath() *BatchGetConfigMapsResponse_FieldSubPath {
	return &BatchGetConfigMapsResponse_FieldSubPath{
		selector: BatchGetConfigMapsResponse_FieldPathSelectorConfigMaps,
		subPath:  config_map.NewConfigMapFieldPathBuilder().Data().FieldPath(),
	}
}

func (s BatchGetConfigMapsResponsePathSelectorConfigMapsData) WithValue(value map[string]string) *BatchGetConfigMapsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetConfigMapsResponse_FieldSubPathValue)
}

func (s BatchGetConfigMapsResponsePathSelectorConfigMapsData) WithArrayOfValues(values []map[string]string) *BatchGetConfigMapsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetConfigMapsResponse_FieldSubPathArrayOfValues)
}

func (BatchGetConfigMapsResponsePathSelectorConfigMapsData) WithKey(key string) BatchGetConfigMapsResponseMapPathSelectorConfigMapsData {
	return BatchGetConfigMapsResponseMapPathSelectorConfigMapsData{key: key}
}

type BatchGetConfigMapsResponseMapPathSelectorConfigMapsData struct {
	key string
}

func (s BatchGetConfigMapsResponseMapPathSelectorConfigMapsData) FieldPath() *BatchGetConfigMapsResponse_FieldSubPath {
	return &BatchGetConfigMapsResponse_FieldSubPath{
		selector: BatchGetConfigMapsResponse_FieldPathSelectorConfigMaps,
		subPath:  config_map.NewConfigMapFieldPathBuilder().Data().WithKey(s.key).FieldPath(),
	}
}

func (s BatchGetConfigMapsResponseMapPathSelectorConfigMapsData) WithValue(value string) *BatchGetConfigMapsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetConfigMapsResponse_FieldSubPathValue)
}

func (s BatchGetConfigMapsResponseMapPathSelectorConfigMapsData) WithArrayOfValues(values []string) *BatchGetConfigMapsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetConfigMapsResponse_FieldSubPathArrayOfValues)
}

type BatchGetConfigMapsResponsePathSelectorConfigMapsBinaryData struct{}

func (BatchGetConfigMapsResponsePathSelectorConfigMapsBinaryData) FieldPath() *BatchGetConfigMapsResponse_FieldSubPath {
	return &BatchGetConfigMapsResponse_FieldSubPath{
		selector: BatchGetConfigMapsResponse_FieldPathSelectorConfigMaps,
		subPath:  config_map.NewConfigMapFieldPathBuilder().BinaryData().FieldPath(),
	}
}

func (s BatchGetConfigMapsResponsePathSelectorConfigMapsBinaryData) WithValue(value map[string][]byte) *BatchGetConfigMapsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetConfigMapsResponse_FieldSubPathValue)
}

func (s BatchGetConfigMapsResponsePathSelectorConfigMapsBinaryData) WithArrayOfValues(values []map[string][]byte) *BatchGetConfigMapsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetConfigMapsResponse_FieldSubPathArrayOfValues)
}

func (BatchGetConfigMapsResponsePathSelectorConfigMapsBinaryData) WithKey(key string) BatchGetConfigMapsResponseMapPathSelectorConfigMapsBinaryData {
	return BatchGetConfigMapsResponseMapPathSelectorConfigMapsBinaryData{key: key}
}

type BatchGetConfigMapsResponseMapPathSelectorConfigMapsBinaryData struct {
	key string
}

func (s BatchGetConfigMapsResponseMapPathSelectorConfigMapsBinaryData) FieldPath() *BatchGetConfigMapsResponse_FieldSubPath {
	return &BatchGetConfigMapsResponse_FieldSubPath{
		selector: BatchGetConfigMapsResponse_FieldPathSelectorConfigMaps,
		subPath:  config_map.NewConfigMapFieldPathBuilder().BinaryData().WithKey(s.key).FieldPath(),
	}
}

func (s BatchGetConfigMapsResponseMapPathSelectorConfigMapsBinaryData) WithValue(value []byte) *BatchGetConfigMapsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetConfigMapsResponse_FieldSubPathValue)
}

func (s BatchGetConfigMapsResponseMapPathSelectorConfigMapsBinaryData) WithArrayOfValues(values [][]byte) *BatchGetConfigMapsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetConfigMapsResponse_FieldSubPathArrayOfValues)
}

type BatchGetConfigMapsResponsePathSelectorMissing struct{}

func (BatchGetConfigMapsResponsePathSelectorMissing) FieldPath() *BatchGetConfigMapsResponse_FieldTerminalPath {
	return &BatchGetConfigMapsResponse_FieldTerminalPath{selector: BatchGetConfigMapsResponse_FieldPathSelectorMissing}
}

func (s BatchGetConfigMapsResponsePathSelectorMissing) WithValue(value []*config_map.Reference) *BatchGetConfigMapsResponse_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*BatchGetConfigMapsResponse_FieldTerminalPathValue)
}

func (s BatchGetConfigMapsResponsePathSelectorMissing) WithArrayOfValues(values [][]*config_map.Reference) *BatchGetConfigMapsResponse_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*BatchGetConfigMapsResponse_FieldTerminalPathArrayOfValues)
}

func (s BatchGetConfigMapsResponsePathSelectorMissing) WithItemValue(value *config_map.Reference) *BatchGetConfigMapsResponse_FieldTerminalPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*BatchGetConfigMapsResponse_FieldTerminalPathArrayItemValue)
}

type ListConfigMapsRequestFieldPathBuilder struct{}

func NewListConfigMapsRequestFieldPathBuilder() ListConfigMapsRequestFieldPathBuilder {
	return ListConfigMapsRequestFieldPathBuilder{}
}
func (ListConfigMapsRequestFieldPathBuilder) Parent() ListConfigMapsRequestPathSelectorParent {
	return ListConfigMapsRequestPathSelectorParent{}
}
func (ListConfigMapsRequestFieldPathBuilder) PageSize() ListConfigMapsRequestPathSelectorPageSize {
	return ListConfigMapsRequestPathSelectorPageSize{}
}
func (ListConfigMapsRequestFieldPathBuilder) PageToken() ListConfigMapsRequestPathSelectorPageToken {
	return ListConfigMapsRequestPathSelectorPageToken{}
}
func (ListConfigMapsRequestFieldPathBuilder) OrderBy() ListConfigMapsRequestPathSelectorOrderBy {
	return ListConfigMapsRequestPathSelectorOrderBy{}
}
func (ListConfigMapsRequestFieldPathBuilder) Filter() ListConfigMapsRequestPathSelectorFilter {
	return ListConfigMapsRequestPathSelectorFilter{}
}
func (ListConfigMapsRequestFieldPathBuilder) FieldMask() ListConfigMapsRequestPathSelectorFieldMask {
	return ListConfigMapsRequestPathSelectorFieldMask{}
}
func (ListConfigMapsRequestFieldPathBuilder) View() ListConfigMapsRequestPathSelectorView {
	return ListConfigMapsRequestPathSelectorView{}
}

type ListConfigMapsRequestPathSelectorParent struct{}

func (ListConfigMapsRequestPathSelectorParent) FieldPath() *ListConfigMapsRequest_FieldTerminalPath {
	return &ListConfigMapsRequest_FieldTerminalPath{selector: ListConfigMapsRequest_FieldPathSelectorParent}
}

func (s ListConfigMapsRequestPathSelectorParent) WithValue(value *config_map.ParentName) *ListConfigMapsRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*ListConfigMapsRequest_FieldTerminalPathValue)
}

func (s ListConfigMapsRequestPathSelectorParent) WithArrayOfValues(values []*config_map.ParentName) *ListConfigMapsRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListConfigMapsRequest_FieldTerminalPathArrayOfValues)
}

type ListConfigMapsRequestPathSelectorPageSize struct{}

func (ListConfigMapsRequestPathSelectorPageSize) FieldPath() *ListConfigMapsRequest_FieldTerminalPath {
	return &ListConfigMapsRequest_FieldTerminalPath{selector: ListConfigMapsRequest_FieldPathSelectorPageSize}
}

func (s ListConfigMapsRequestPathSelectorPageSize) WithValue(value int32) *ListConfigMapsRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*ListConfigMapsRequest_FieldTerminalPathValue)
}

func (s ListConfigMapsRequestPathSelectorPageSize) WithArrayOfValues(values []int32) *ListConfigMapsRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListConfigMapsRequest_FieldTerminalPathArrayOfValues)
}

type ListConfigMapsRequestPathSelectorPageToken struct{}

func (ListConfigMapsRequestPathSelectorPageToken) FieldPath() *ListConfigMapsRequest_FieldTerminalPath {
	return &ListConfigMapsRequest_FieldTerminalPath{selector: ListConfigMapsRequest_FieldPathSelectorPageToken}
}

func (s ListConfigMapsRequestPathSelectorPageToken) WithValue(value *config_map.PagerCursor) *ListConfigMapsRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*ListConfigMapsRequest_FieldTerminalPathValue)
}

func (s ListConfigMapsRequestPathSelectorPageToken) WithArrayOfValues(values []*config_map.PagerCursor) *ListConfigMapsRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListConfigMapsRequest_FieldTerminalPathArrayOfValues)
}

type ListConfigMapsRequestPathSelectorOrderBy struct{}

func (ListConfigMapsRequestPathSelectorOrderBy) FieldPath() *ListConfigMapsRequest_FieldTerminalPath {
	return &ListConfigMapsRequest_FieldTerminalPath{selector: ListConfigMapsRequest_FieldPathSelectorOrderBy}
}

func (s ListConfigMapsRequestPathSelectorOrderBy) WithValue(value *config_map.OrderBy) *ListConfigMapsRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*ListConfigMapsRequest_FieldTerminalPathValue)
}

func (s ListConfigMapsRequestPathSelectorOrderBy) WithArrayOfValues(values []*config_map.OrderBy) *ListConfigMapsRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListConfigMapsRequest_FieldTerminalPathArrayOfValues)
}

type ListConfigMapsRequestPathSelectorFilter struct{}

func (ListConfigMapsRequestPathSelectorFilter) FieldPath() *ListConfigMapsRequest_FieldTerminalPath {
	return &ListConfigMapsRequest_FieldTerminalPath{selector: ListConfigMapsRequest_FieldPathSelectorFilter}
}

func (s ListConfigMapsRequestPathSelectorFilter) WithValue(value *config_map.Filter) *ListConfigMapsRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*ListConfigMapsRequest_FieldTerminalPathValue)
}

func (s ListConfigMapsRequestPathSelectorFilter) WithArrayOfValues(values []*config_map.Filter) *ListConfigMapsRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListConfigMapsRequest_FieldTerminalPathArrayOfValues)
}

type ListConfigMapsRequestPathSelectorFieldMask struct{}

func (ListConfigMapsRequestPathSelectorFieldMask) FieldPath() *ListConfigMapsRequest_FieldTerminalPath {
	return &ListConfigMapsRequest_FieldTerminalPath{selector: ListConfigMapsRequest_FieldPathSelectorFieldMask}
}

func (s ListConfigMapsRequestPathSelectorFieldMask) WithValue(value *config_map.ConfigMap_FieldMask) *ListConfigMapsRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*ListConfigMapsRequest_FieldTerminalPathValue)
}

func (s ListConfigMapsRequestPathSelectorFieldMask) WithArrayOfValues(values []*config_map.ConfigMap_FieldMask) *ListConfigMapsRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListConfigMapsRequest_FieldTerminalPathArrayOfValues)
}

type ListConfigMapsRequestPathSelectorView struct{}

func (ListConfigMapsRequestPathSelectorView) FieldPath() *ListConfigMapsRequest_FieldTerminalPath {
	return &ListConfigMapsRequest_FieldTerminalPath{selector: ListConfigMapsRequest_FieldPathSelectorView}
}

func (s ListConfigMapsRequestPathSelectorView) WithValue(value view.View) *ListConfigMapsRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*ListConfigMapsRequest_FieldTerminalPathValue)
}

func (s ListConfigMapsRequestPathSelectorView) WithArrayOfValues(values []view.View) *ListConfigMapsRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListConfigMapsRequest_FieldTerminalPathArrayOfValues)
}

type ListConfigMapsResponseFieldPathBuilder struct{}

func NewListConfigMapsResponseFieldPathBuilder() ListConfigMapsResponseFieldPathBuilder {
	return ListConfigMapsResponseFieldPathBuilder{}
}
func (ListConfigMapsResponseFieldPathBuilder) ConfigMaps() ListConfigMapsResponsePathSelectorConfigMaps {
	return ListConfigMapsResponsePathSelectorConfigMaps{}
}
func (ListConfigMapsResponseFieldPathBuilder) PrevPageToken() ListConfigMapsResponsePathSelectorPrevPageToken {
	return ListConfigMapsResponsePathSelectorPrevPageToken{}
}
func (ListConfigMapsResponseFieldPathBuilder) NextPageToken() ListConfigMapsResponsePathSelectorNextPageToken {
	return ListConfigMapsResponsePathSelectorNextPageToken{}
}

type ListConfigMapsResponsePathSelectorConfigMaps struct{}

func (ListConfigMapsResponsePathSelectorConfigMaps) FieldPath() *ListConfigMapsResponse_FieldTerminalPath {
	return &ListConfigMapsResponse_FieldTerminalPath{selector: ListConfigMapsResponse_FieldPathSelectorConfigMaps}
}

func (s ListConfigMapsResponsePathSelectorConfigMaps) WithValue(value []*config_map.ConfigMap) *ListConfigMapsResponse_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*ListConfigMapsResponse_FieldTerminalPathValue)
}

func (s ListConfigMapsResponsePathSelectorConfigMaps) WithArrayOfValues(values [][]*config_map.ConfigMap) *ListConfigMapsResponse_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListConfigMapsResponse_FieldTerminalPathArrayOfValues)
}

func (s ListConfigMapsResponsePathSelectorConfigMaps) WithItemValue(value *config_map.ConfigMap) *ListConfigMapsResponse_FieldTerminalPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*ListConfigMapsResponse_FieldTerminalPathArrayItemValue)
}
func (ListConfigMapsResponsePathSelectorConfigMaps) WithSubPath(subPath config_map.ConfigMap_FieldPath) *ListConfigMapsResponse_FieldSubPath {
	return &ListConfigMapsResponse_FieldSubPath{selector: ListConfigMapsResponse_FieldPathSelectorConfigMaps, subPath: subPath}
}

func (s ListConfigMapsResponsePathSelectorConfigMaps) WithSubValue(subPathValue config_map.ConfigMap_FieldPathValue) *ListConfigMapsResponse_FieldSubPathValue {
	return &ListConfigMapsResponse_FieldSubPathValue{ListConfigMapsResponse_FieldPath: s.WithSubPath(subPathValue), subPathValue: subPathValue}
}

func (s ListConfigMapsResponsePathSelectorConfigMaps) WithSubArrayOfValues(subPathArrayOfValues config_map.ConfigMap_FieldPathArrayOfValues) *ListConfigMapsResponse_FieldSubPathArrayOfValues {
	return &ListConfigMapsResponse_FieldSubPathArrayOfValues{ListConfigMapsResponse_FieldPath: s.WithSubPath(subPathArrayOfValues), subPathArrayOfValues: subPathArrayOfValues}
}

func (s ListConfigMapsResponsePathSelectorConfigMaps) WithSubArrayItemValue(subPathArrayItemValue config_map.ConfigMap_FieldPathArrayItemValue) *ListConfigMapsResponse_FieldSubPathArrayItemValue {
	return &ListConfigMapsResponse_FieldSubPathArrayItemValue{ListConfigMapsResponse_FieldPath: s.WithSubPath(subPathArrayItemValue), subPathItemValue: subPathArrayItemValue}
}

func (ListConfigMapsResponsePathSelectorConfigMaps) Name() ListConfigMapsResponsePathSelectorConfigMapsName {
	return ListConfigMapsResponsePathSelectorConfigMapsName{}
}

func (ListConfigMapsResponsePathSelectorConfigMaps) DisplayName() ListConfigMapsResponsePathSelectorConfigMapsDisplayName {
	return ListConfigMapsResponsePathSelectorConfigMapsDisplayName{}
}

func (ListConfigMapsResponsePathSelectorConfigMaps) Metadata() ListConfigMapsResponsePathSelectorConfigMapsMetadata {
	return ListConfigMapsResponsePathSelectorConfigMapsMetadata{}
}

func (ListConfigMapsResponsePathSelectorConfigMaps) Data() ListConfigMapsResponsePathSelectorConfigMapsData {
	return ListConfigMapsResponsePathSelectorConfigMapsData{}
}

func (ListConfigMapsResponsePathSelectorConfigMaps) BinaryData() ListConfigMapsResponsePathSelectorConfigMapsBinaryData {
	return ListConfigMapsResponsePathSelectorConfigMapsBinaryData{}
}

type ListConfigMapsResponsePathSelectorConfigMapsName struct{}

func (ListConfigMapsResponsePathSelectorConfigMapsName) FieldPath() *ListConfigMapsResponse_FieldSubPath {
	return &ListConfigMapsResponse_FieldSubPath{
		selector: ListConfigMapsResponse_FieldPathSelectorConfigMaps,
		subPath:  config_map.NewConfigMapFieldPathBuilder().Name().FieldPath(),
	}
}

func (s ListConfigMapsResponsePathSelectorConfigMapsName) WithValue(value *config_map.Name) *ListConfigMapsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListConfigMapsResponse_FieldSubPathValue)
}

func (s ListConfigMapsResponsePathSelectorConfigMapsName) WithArrayOfValues(values []*config_map.Name) *ListConfigMapsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListConfigMapsResponse_FieldSubPathArrayOfValues)
}

type ListConfigMapsResponsePathSelectorConfigMapsDisplayName struct{}

func (ListConfigMapsResponsePathSelectorConfigMapsDisplayName) FieldPath() *ListConfigMapsResponse_FieldSubPath {
	return &ListConfigMapsResponse_FieldSubPath{
		selector: ListConfigMapsResponse_FieldPathSelectorConfigMaps,
		subPath:  config_map.NewConfigMapFieldPathBuilder().DisplayName().FieldPath(),
	}
}

func (s ListConfigMapsResponsePathSelectorConfigMapsDisplayName) WithValue(value string) *ListConfigMapsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListConfigMapsResponse_FieldSubPathValue)
}

func (s ListConfigMapsResponsePathSelectorConfigMapsDisplayName) WithArrayOfValues(values []string) *ListConfigMapsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListConfigMapsResponse_FieldSubPathArrayOfValues)
}

type ListConfigMapsResponsePathSelectorConfigMapsMetadata struct{}

func (ListConfigMapsResponsePathSelectorConfigMapsMetadata) FieldPath() *ListConfigMapsResponse_FieldSubPath {
	return &ListConfigMapsResponse_FieldSubPath{
		selector: ListConfigMapsResponse_FieldPathSelectorConfigMaps,
		subPath:  config_map.NewConfigMapFieldPathBuilder().Metadata().FieldPath(),
	}
}

func (s ListConfigMapsResponsePathSelectorConfigMapsMetadata) WithValue(value *ntt_meta.Meta) *ListConfigMapsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListConfigMapsResponse_FieldSubPathValue)
}

func (s ListConfigMapsResponsePathSelectorConfigMapsMetadata) WithArrayOfValues(values []*ntt_meta.Meta) *ListConfigMapsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListConfigMapsResponse_FieldSubPathArrayOfValues)
}

func (ListConfigMapsResponsePathSelectorConfigMapsMetadata) CreateTime() ListConfigMapsResponsePathSelectorConfigMapsMetadataCreateTime {
	return ListConfigMapsResponsePathSelectorConfigMapsMetadataCreateTime{}
}

func (ListConfigMapsResponsePathSelectorConfigMapsMetadata) UpdateTime() ListConfigMapsResponsePathSelectorConfigMapsMetadataUpdateTime {
	return ListConfigMapsResponsePathSelectorConfigMapsMetadataUpdateTime{}
}

func (ListConfigMapsResponsePathSelectorConfigMapsMetadata) DeleteTime() ListConfigMapsResponsePathSelectorConfigMapsMetadataDeleteTime {
	return ListConfigMapsResponsePathSelectorConfigMapsMetadataDeleteTime{}
}

func (ListConfigMapsResponsePathSelectorConfigMapsMetadata) Uuid() ListConfigMapsResponsePathSelectorConfigMapsMetadataUuid {
	return ListConfigMapsResponsePathSelectorConfigMapsMetadataUuid{}
}

func (ListConfigMapsResponsePathSelectorConfigMapsMetadata) Tags() ListConfigMapsResponsePathSelectorConfigMapsMetadataTags {
	return ListConfigMapsResponsePathSelectorConfigMapsMetadataTags{}
}

func (ListConfigMapsResponsePathSelectorConfigMapsMetadata) Labels() ListConfigMapsResponsePathSelectorConfigMapsMetadataLabels {
	return ListConfigMapsResponsePathSelectorConfigMapsMetadataLabels{}
}

func (ListConfigMapsResponsePathSelectorConfigMapsMetadata) Annotations() ListConfigMapsResponsePathSelectorConfigMapsMetadataAnnotations {
	return ListConfigMapsResponsePathSelectorConfigMapsMetadataAnnotations{}
}

func (ListConfigMapsResponsePathSelectorConfigMapsMetadata) Generation() ListConfigMapsResponsePathSelectorConfigMapsMetadataGeneration {
	return ListConfigMapsResponsePathSelectorConfigMapsMetadataGeneration{}
}

func (ListConfigMapsResponsePathSelectorConfigMapsMetadata) ResourceVersion() ListConfigMapsResponsePathSelectorConfigMapsMetadataResourceVersion {
	return ListConfigMapsResponsePathSelectorConfigMapsMetadataResourceVersion{}
}

func (ListConfigMapsResponsePathSelectorConfigMapsMetadata) OwnerReferences() ListConfigMapsResponsePathSelectorConfigMapsMetadataOwnerReferences {
	return ListConfigMapsResponsePathSelectorConfigMapsMetadataOwnerReferences{}
}

func (ListConfigMapsResponsePathSelectorConfigMapsMetadata) Shards() ListConfigMapsResponsePathSelectorConfigMapsMetadataShards {
	return ListConfigMapsResponsePathSelectorConfigMapsMetadataShards{}
}

func (ListConfigMapsResponsePathSelectorConfigMapsMetadata) Syncing() ListConfigMapsResponsePathSelectorConfigMapsMetadataSyncing {
	return ListConfigMapsResponsePathSelectorConfigMapsMetadataSyncing{}
}

func (ListConfigMapsResponsePathSelectorConfigMapsMetadata) Lifecycle() ListConfigMapsResponsePathSelectorConfigMapsMetadataLifecycle {
	return ListConfigMapsResponsePathSelectorConfigMapsMetadataLifecycle{}
}

type ListConfigMapsResponsePathSelectorConfigMapsMetadataCreateTime struct{}

func (ListConfigMapsResponsePathSelectorConfigMapsMetadataCreateTime) FieldPath() *ListConfigMapsResponse_FieldSubPath {
	return &ListConfigMapsResponse_FieldSubPath{
		selector: ListConfigMapsResponse_FieldPathSelectorConfigMaps,
		subPath:  config_map.NewConfigMapFieldPathBuilder().Metadata().CreateTime().FieldPath(),
	}
}

func (s ListConfigMapsResponsePathSelectorConfigMapsMetadataCreateTime) WithValue(value *timestamp.Timestamp) *ListConfigMapsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListConfigMapsResponse_FieldSubPathValue)
}

func (s ListConfigMapsResponsePathSelectorConfigMapsMetadataCreateTime) WithArrayOfValues(values []*timestamp.Timestamp) *ListConfigMapsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListConfigMapsResponse_FieldSubPathArrayOfValues)
}

type ListConfigMapsResponsePathSelectorConfigMapsMetadataUpdateTime struct{}

func (ListConfigMapsResponsePathSelectorConfigMapsMetadataUpdateTime) FieldPath() *ListConfigMapsResponse_FieldSubPath {
	return &ListConfigMapsResponse_FieldSubPath{
		selector: ListConfigMapsResponse_FieldPathSelectorConfigMaps,
		subPath:  config_map.NewConfigMapFieldPathBuilder().Metadata().UpdateTime().FieldPath(),
	}
}

func (s ListConfigMapsResponsePathSelectorConfigMapsMetadataUpdateTime) WithValue(value *timestamp.Timestamp) *ListConfigMapsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListConfigMapsResponse_FieldSubPathValue)
}

func (s ListConfigMapsResponsePathSelectorConfigMapsMetadataUpdateTime) WithArrayOfValues(values []*timestamp.Timestamp) *ListConfigMapsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListConfigMapsResponse_FieldSubPathArrayOfValues)
}

type ListConfigMapsResponsePathSelectorConfigMapsMetadataDeleteTime struct{}

func (ListConfigMapsResponsePathSelectorConfigMapsMetadataDeleteTime) FieldPath() *ListConfigMapsResponse_FieldSubPath {
	return &ListConfigMapsResponse_FieldSubPath{
		selector: ListConfigMapsResponse_FieldPathSelectorConfigMaps,
		subPath:  config_map.NewConfigMapFieldPathBuilder().Metadata().DeleteTime().FieldPath(),
	}
}

func (s ListConfigMapsResponsePathSelectorConfigMapsMetadataDeleteTime) WithValue(value *timestamp.Timestamp) *ListConfigMapsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListConfigMapsResponse_FieldSubPathValue)
}

func (s ListConfigMapsResponsePathSelectorConfigMapsMetadataDeleteTime) WithArrayOfValues(values []*timestamp.Timestamp) *ListConfigMapsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListConfigMapsResponse_FieldSubPathArrayOfValues)
}

type ListConfigMapsResponsePathSelectorConfigMapsMetadataUuid struct{}

func (ListConfigMapsResponsePathSelectorConfigMapsMetadataUuid) FieldPath() *ListConfigMapsResponse_FieldSubPath {
	return &ListConfigMapsResponse_FieldSubPath{
		selector: ListConfigMapsResponse_FieldPathSelectorConfigMaps,
		subPath:  config_map.NewConfigMapFieldPathBuilder().Metadata().Uuid().FieldPath(),
	}
}

func (s ListConfigMapsResponsePathSelectorConfigMapsMetadataUuid) WithValue(value string) *ListConfigMapsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListConfigMapsResponse_FieldSubPathValue)
}

func (s ListConfigMapsResponsePathSelectorConfigMapsMetadataUuid) WithArrayOfValues(values []string) *ListConfigMapsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListConfigMapsResponse_FieldSubPathArrayOfValues)
}

type ListConfigMapsResponsePathSelectorConfigMapsMetadataTags struct{}

func (ListConfigMapsResponsePathSelectorConfigMapsMetadataTags) FieldPath() *ListConfigMapsResponse_FieldSubPath {
	return &ListConfigMapsResponse_FieldSubPath{
		selector: ListConfigMapsResponse_FieldPathSelectorConfigMaps,
		subPath:  config_map.NewConfigMapFieldPathBuilder().Metadata().Tags().FieldPath(),
	}
}

func (s ListConfigMapsResponsePathSelectorConfigMapsMetadataTags) WithValue(value []string) *ListConfigMapsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListConfigMapsResponse_FieldSubPathValue)
}

func (s ListConfigMapsResponsePathSelectorConfigMapsMetadataTags) WithArrayOfValues(values [][]string) *ListConfigMapsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListConfigMapsResponse_FieldSubPathArrayOfValues)
}

func (s ListConfigMapsResponsePathSelectorConfigMapsMetadataTags) WithItemValue(value string) *ListConfigMapsResponse_FieldSubPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*ListConfigMapsResponse_FieldSubPathArrayItemValue)
}

type ListConfigMapsResponsePathSelectorConfigMapsMetadataLabels struct{}

func (ListConfigMapsResponsePathSelectorConfigMapsMetadataLabels) FieldPath() *ListConfigMapsResponse_FieldSubPath {
	return &ListConfigMapsResponse_FieldSubPath{
		selector: ListConfigMapsResponse_FieldPathSelectorConfigMaps,
		subPath:  config_map.NewConfigMapFieldPathBuilder().Metadata().Labels().FieldPath(),
	}
}

func (s ListConfigMapsResponsePathSelectorConfigMapsMetadataLabels) WithValue(value map[string]string) *ListConfigMapsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListConfigMapsResponse_FieldSubPathValue)
}

func (s ListConfigMapsResponsePathSelectorConfigMapsMetadataLabels) WithArrayOfValues(values []map[string]string) *ListConfigMapsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListConfigMapsResponse_FieldSubPathArrayOfValues)
}

func (ListConfigMapsResponsePathSelectorConfigMapsMetadataLabels) WithKey(key string) ListConfigMapsResponseMapPathSelectorConfigMapsMetadataLabels {
	return ListConfigMapsResponseMapPathSelectorConfigMapsMetadataLabels{key: key}
}

type ListConfigMapsResponseMapPathSelectorConfigMapsMetadataLabels struct {
	key string
}

func (s ListConfigMapsResponseMapPathSelectorConfigMapsMetadataLabels) FieldPath() *ListConfigMapsResponse_FieldSubPath {
	return &ListConfigMapsResponse_FieldSubPath{
		selector: ListConfigMapsResponse_FieldPathSelectorConfigMaps,
		subPath:  config_map.NewConfigMapFieldPathBuilder().Metadata().Labels().WithKey(s.key).FieldPath(),
	}
}

func (s ListConfigMapsResponseMapPathSelectorConfigMapsMetadataLabels) WithValue(value string) *ListConfigMapsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListConfigMapsResponse_FieldSubPathValue)
}

func (s ListConfigMapsResponseMapPathSelectorConfigMapsMetadataLabels) WithArrayOfValues(values []string) *ListConfigMapsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListConfigMapsResponse_FieldSubPathArrayOfValues)
}

type ListConfigMapsResponsePathSelectorConfigMapsMetadataAnnotations struct{}

func (ListConfigMapsResponsePathSelectorConfigMapsMetadataAnnotations) FieldPath() *ListConfigMapsResponse_FieldSubPath {
	return &ListConfigMapsResponse_FieldSubPath{
		selector: ListConfigMapsResponse_FieldPathSelectorConfigMaps,
		subPath:  config_map.NewConfigMapFieldPathBuilder().Metadata().Annotations().FieldPath(),
	}
}

func (s ListConfigMapsResponsePathSelectorConfigMapsMetadataAnnotations) WithValue(value map[string]string) *ListConfigMapsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListConfigMapsResponse_FieldSubPathValue)
}

func (s ListConfigMapsResponsePathSelectorConfigMapsMetadataAnnotations) WithArrayOfValues(values []map[string]string) *ListConfigMapsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListConfigMapsResponse_FieldSubPathArrayOfValues)
}

func (ListConfigMapsResponsePathSelectorConfigMapsMetadataAnnotations) WithKey(key string) ListConfigMapsResponseMapPathSelectorConfigMapsMetadataAnnotations {
	return ListConfigMapsResponseMapPathSelectorConfigMapsMetadataAnnotations{key: key}
}

type ListConfigMapsResponseMapPathSelectorConfigMapsMetadataAnnotations struct {
	key string
}

func (s ListConfigMapsResponseMapPathSelectorConfigMapsMetadataAnnotations) FieldPath() *ListConfigMapsResponse_FieldSubPath {
	return &ListConfigMapsResponse_FieldSubPath{
		selector: ListConfigMapsResponse_FieldPathSelectorConfigMaps,
		subPath:  config_map.NewConfigMapFieldPathBuilder().Metadata().Annotations().WithKey(s.key).FieldPath(),
	}
}

func (s ListConfigMapsResponseMapPathSelectorConfigMapsMetadataAnnotations) WithValue(value string) *ListConfigMapsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListConfigMapsResponse_FieldSubPathValue)
}

func (s ListConfigMapsResponseMapPathSelectorConfigMapsMetadataAnnotations) WithArrayOfValues(values []string) *ListConfigMapsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListConfigMapsResponse_FieldSubPathArrayOfValues)
}

type ListConfigMapsResponsePathSelectorConfigMapsMetadataGeneration struct{}

func (ListConfigMapsResponsePathSelectorConfigMapsMetadataGeneration) FieldPath() *ListConfigMapsResponse_FieldSubPath {
	return &ListConfigMapsResponse_FieldSubPath{
		selector: ListConfigMapsResponse_FieldPathSelectorConfigMaps,
		subPath:  config_map.NewConfigMapFieldPathBuilder().Metadata().Generation().FieldPath(),
	}
}

func (s ListConfigMapsResponsePathSelectorConfigMapsMetadataGeneration) WithValue(value int64) *ListConfigMapsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListConfigMapsResponse_FieldSubPathValue)
}

func (s ListConfigMapsResponsePathSelectorConfigMapsMetadataGeneration) WithArrayOfValues(values []int64) *ListConfigMapsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListConfigMapsResponse_FieldSubPathArrayOfValues)
}

type ListConfigMapsResponsePathSelectorConfigMapsMetadataResourceVersion struct{}

func (ListConfigMapsResponsePathSelectorConfigMapsMetadataResourceVersion) FieldPath() *ListConfigMapsResponse_FieldSubPath {
	return &ListConfigMapsResponse_FieldSubPath{
		selector: ListConfigMapsResponse_FieldPathSelectorConfigMaps,
		subPath:  config_map.NewConfigMapFieldPathBuilder().Metadata().ResourceVersion().FieldPath(),
	}
}

func (s ListConfigMapsResponsePathSelectorConfigMapsMetadataResourceVersion) WithValue(value string) *ListConfigMapsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListConfigMapsResponse_FieldSubPathValue)
}

func (s ListConfigMapsResponsePathSelectorConfigMapsMetadataResourceVersion) WithArrayOfValues(values []string) *ListConfigMapsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListConfigMapsResponse_FieldSubPathArrayOfValues)
}

type ListConfigMapsResponsePathSelectorConfigMapsMetadataOwnerReferences struct{}

func (ListConfigMapsResponsePathSelectorConfigMapsMetadataOwnerReferences) FieldPath() *ListConfigMapsResponse_FieldSubPath {
	return &ListConfigMapsResponse_FieldSubPath{
		selector: ListConfigMapsResponse_FieldPathSelectorConfigMaps,
		subPath:  config_map.NewConfigMapFieldPathBuilder().Metadata().OwnerReferences().FieldPath(),
	}
}

func (s ListConfigMapsResponsePathSelectorConfigMapsMetadataOwnerReferences) WithValue(value []*ntt_meta.OwnerReference) *ListConfigMapsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListConfigMapsResponse_FieldSubPathValue)
}

func (s ListConfigMapsResponsePathSelectorConfigMapsMetadataOwnerReferences) WithArrayOfValues(values [][]*ntt_meta.OwnerReference) *ListConfigMapsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListConfigMapsResponse_FieldSubPathArrayOfValues)
}

func (s ListConfigMapsResponsePathSelectorConfigMapsMetadataOwnerReferences) WithItemValue(value *ntt_meta.OwnerReference) *ListConfigMapsResponse_FieldSubPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*ListConfigMapsResponse_FieldSubPathArrayItemValue)
}

func (ListConfigMapsResponsePathSelectorConfigMapsMetadataOwnerReferences) Kind() ListConfigMapsResponsePathSelectorConfigMapsMetadataOwnerReferencesKind {
	return ListConfigMapsResponsePathSelectorConfigMapsMetadataOwnerReferencesKind{}
}

func (ListConfigMapsResponsePathSelectorConfigMapsMetadataOwnerReferences) Version() ListConfigMapsResponsePathSelectorConfigMapsMetadataOwnerReferencesVersion {
	return ListConfigMapsResponsePathSelectorConfigMapsMetadataOwnerReferencesVersion{}
}

func (ListConfigMapsResponsePathSelectorConfigMapsMetadataOwnerReferences) Name() ListConfigMapsResponsePathSelectorConfigMapsMetadataOwnerReferencesName {
	return ListConfigMapsResponsePathSelectorConfigMapsMetadataOwnerReferencesName{}
}

func (ListConfigMapsResponsePathSelectorConfigMapsMetadataOwnerReferences) Region() ListConfigMapsResponsePathSelectorConfigMapsMetadataOwnerReferencesRegion {
	return ListConfigMapsResponsePathSelectorConfigMapsMetadataOwnerReferencesRegion{}
}

func (ListConfigMapsResponsePathSelectorConfigMapsMetadataOwnerReferences) Controller() ListConfigMapsResponsePathSelectorConfigMapsMetadataOwnerReferencesController {
	return ListConfigMapsResponsePathSelectorConfigMapsMetadataOwnerReferencesController{}
}

func (ListConfigMapsResponsePathSelectorConfigMapsMetadataOwnerReferences) BlockOwnerDeletion() ListConfigMapsResponsePathSelectorConfigMapsMetadataOwnerReferencesBlockOwnerDeletion {
	return ListConfigMapsResponsePathSelectorConfigMapsMetadataOwnerReferencesBlockOwnerDeletion{}
}

func (ListConfigMapsResponsePathSelectorConfigMapsMetadataOwnerReferences) RequiresOwnerReference() ListConfigMapsResponsePathSelectorConfigMapsMetadataOwnerReferencesRequiresOwnerReference {
	return ListConfigMapsResponsePathSelectorConfigMapsMetadataOwnerReferencesRequiresOwnerReference{}
}

type ListConfigMapsResponsePathSelectorConfigMapsMetadataOwnerReferencesKind struct{}

func (ListConfigMapsResponsePathSelectorConfigMapsMetadataOwnerReferencesKind) FieldPath() *ListConfigMapsResponse_FieldSubPath {
	return &ListConfigMapsResponse_FieldSubPath{
		selector: ListConfigMapsResponse_FieldPathSelectorConfigMaps,
		subPath:  config_map.NewConfigMapFieldPathBuilder().Metadata().OwnerReferences().Kind().FieldPath(),
	}
}

func (s ListConfigMapsResponsePathSelectorConfigMapsMetadataOwnerReferencesKind) WithValue(value string) *ListConfigMapsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListConfigMapsResponse_FieldSubPathValue)
}

func (s ListConfigMapsResponsePathSelectorConfigMapsMetadataOwnerReferencesKind) WithArrayOfValues(values []string) *ListConfigMapsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListConfigMapsResponse_FieldSubPathArrayOfValues)
}

type ListConfigMapsResponsePathSelectorConfigMapsMetadataOwnerReferencesVersion struct{}

func (ListConfigMapsResponsePathSelectorConfigMapsMetadataOwnerReferencesVersion) FieldPath() *ListConfigMapsResponse_FieldSubPath {
	return &ListConfigMapsResponse_FieldSubPath{
		selector: ListConfigMapsResponse_FieldPathSelectorConfigMaps,
		subPath:  config_map.NewConfigMapFieldPathBuilder().Metadata().OwnerReferences().Version().FieldPath(),
	}
}

func (s ListConfigMapsResponsePathSelectorConfigMapsMetadataOwnerReferencesVersion) WithValue(value string) *ListConfigMapsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListConfigMapsResponse_FieldSubPathValue)
}

func (s ListConfigMapsResponsePathSelectorConfigMapsMetadataOwnerReferencesVersion) WithArrayOfValues(values []string) *ListConfigMapsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListConfigMapsResponse_FieldSubPathArrayOfValues)
}

type ListConfigMapsResponsePathSelectorConfigMapsMetadataOwnerReferencesName struct{}

func (ListConfigMapsResponsePathSelectorConfigMapsMetadataOwnerReferencesName) FieldPath() *ListConfigMapsResponse_FieldSubPath {
	return &ListConfigMapsResponse_FieldSubPath{
		selector: ListConfigMapsResponse_FieldPathSelectorConfigMaps,
		subPath:  config_map.NewConfigMapFieldPathBuilder().Metadata().OwnerReferences().Name().FieldPath(),
	}
}

func (s ListConfigMapsResponsePathSelectorConfigMapsMetadataOwnerReferencesName) WithValue(value string) *ListConfigMapsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListConfigMapsResponse_FieldSubPathValue)
}

func (s ListConfigMapsResponsePathSelectorConfigMapsMetadataOwnerReferencesName) WithArrayOfValues(values []string) *ListConfigMapsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListConfigMapsResponse_FieldSubPathArrayOfValues)
}

type ListConfigMapsResponsePathSelectorConfigMapsMetadataOwnerReferencesRegion struct{}

func (ListConfigMapsResponsePathSelectorConfigMapsMetadataOwnerReferencesRegion) FieldPath() *ListConfigMapsResponse_FieldSubPath {
	return &ListConfigMapsResponse_FieldSubPath{
		selector: ListConfigMapsResponse_FieldPathSelectorConfigMaps,
		subPath:  config_map.NewConfigMapFieldPathBuilder().Metadata().OwnerReferences().Region().FieldPath(),
	}
}

func (s ListConfigMapsResponsePathSelectorConfigMapsMetadataOwnerReferencesRegion) WithValue(value string) *ListConfigMapsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListConfigMapsResponse_FieldSubPathValue)
}

func (s ListConfigMapsResponsePathSelectorConfigMapsMetadataOwnerReferencesRegion) WithArrayOfValues(values []string) *ListConfigMapsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListConfigMapsResponse_FieldSubPathArrayOfValues)
}

type ListConfigMapsResponsePathSelectorConfigMapsMetadataOwnerReferencesController struct{}

func (ListConfigMapsResponsePathSelectorConfigMapsMetadataOwnerReferencesController) FieldPath() *ListConfigMapsResponse_FieldSubPath {
	return &ListConfigMapsResponse_FieldSubPath{
		selector: ListConfigMapsResponse_FieldPathSelectorConfigMaps,
		subPath:  config_map.NewConfigMapFieldPathBuilder().Metadata().OwnerReferences().Controller().FieldPath(),
	}
}

func (s ListConfigMapsResponsePathSelectorConfigMapsMetadataOwnerReferencesController) WithValue(value bool) *ListConfigMapsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListConfigMapsResponse_FieldSubPathValue)
}

func (s ListConfigMapsResponsePathSelectorConfigMapsMetadataOwnerReferencesController) WithArrayOfValues(values []bool) *ListConfigMapsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListConfigMapsResponse_FieldSubPathArrayOfValues)
}

type ListConfigMapsResponsePathSelectorConfigMapsMetadataOwnerReferencesBlockOwnerDeletion struct{}

func (ListConfigMapsResponsePathSelectorConfigMapsMetadataOwnerReferencesBlockOwnerDeletion) FieldPath() *ListConfigMapsResponse_FieldSubPath {
	return &ListConfigMapsResponse_FieldSubPath{
		selector: ListConfigMapsResponse_FieldPathSelectorConfigMaps,
		subPath:  config_map.NewConfigMapFieldPathBuilder().Metadata().OwnerReferences().BlockOwnerDeletion().FieldPath(),
	}
}

func (s ListConfigMapsResponsePathSelectorConfigMapsMetadataOwnerReferencesBlockOwnerDeletion) WithValue(value bool) *ListConfigMapsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListConfigMapsResponse_FieldSubPathValue)
}

func (s ListConfigMapsResponsePathSelectorConfigMapsMetadataOwnerReferencesBlockOwnerDeletion) WithArrayOfValues(values []bool) *ListConfigMapsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListConfigMapsResponse_FieldSubPathArrayOfValues)
}

type ListConfigMapsResponsePathSelectorConfigMapsMetadataOwnerReferencesRequiresOwnerReference struct{}

func (ListConfigMapsResponsePathSelectorConfigMapsMetadataOwnerReferencesRequiresOwnerReference) FieldPath() *ListConfigMapsResponse_FieldSubPath {
	return &ListConfigMapsResponse_FieldSubPath{
		selector: ListConfigMapsResponse_FieldPathSelectorConfigMaps,
		subPath:  config_map.NewConfigMapFieldPathBuilder().Metadata().OwnerReferences().RequiresOwnerReference().FieldPath(),
	}
}

func (s ListConfigMapsResponsePathSelectorConfigMapsMetadataOwnerReferencesRequiresOwnerReference) WithValue(value bool) *ListConfigMapsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListConfigMapsResponse_FieldSubPathValue)
}

func (s ListConfigMapsResponsePathSelectorConfigMapsMetadataOwnerReferencesRequiresOwnerReference) WithArrayOfValues(values []bool) *ListConfigMapsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListConfigMapsResponse_FieldSubPathArrayOfValues)
}

type ListConfigMapsResponsePathSelectorConfigMapsMetadataShards struct{}

func (ListConfigMapsResponsePathSelectorConfigMapsMetadataShards) FieldPath() *ListConfigMapsResponse_FieldSubPath {
	return &ListConfigMapsResponse_FieldSubPath{
		selector: ListConfigMapsResponse_FieldPathSelectorConfigMaps,
		subPath:  config_map.NewConfigMapFieldPathBuilder().Metadata().Shards().FieldPath(),
	}
}

func (s ListConfigMapsResponsePathSelectorConfigMapsMetadataShards) WithValue(value map[string]int64) *ListConfigMapsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListConfigMapsResponse_FieldSubPathValue)
}

func (s ListConfigMapsResponsePathSelectorConfigMapsMetadataShards) WithArrayOfValues(values []map[string]int64) *ListConfigMapsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListConfigMapsResponse_FieldSubPathArrayOfValues)
}

func (ListConfigMapsResponsePathSelectorConfigMapsMetadataShards) WithKey(key string) ListConfigMapsResponseMapPathSelectorConfigMapsMetadataShards {
	return ListConfigMapsResponseMapPathSelectorConfigMapsMetadataShards{key: key}
}

type ListConfigMapsResponseMapPathSelectorConfigMapsMetadataShards struct {
	key string
}

func (s ListConfigMapsResponseMapPathSelectorConfigMapsMetadataShards) FieldPath() *ListConfigMapsResponse_FieldSubPath {
	return &ListConfigMapsResponse_FieldSubPath{
		selector: ListConfigMapsResponse_FieldPathSelectorConfigMaps,
		subPath:  config_map.NewConfigMapFieldPathBuilder().Metadata().Shards().WithKey(s.key).FieldPath(),
	}
}

func (s ListConfigMapsResponseMapPathSelectorConfigMapsMetadataShards) WithValue(value int64) *ListConfigMapsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListConfigMapsResponse_FieldSubPathValue)
}

func (s ListConfigMapsResponseMapPathSelectorConfigMapsMetadataShards) WithArrayOfValues(values []int64) *ListConfigMapsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListConfigMapsResponse_FieldSubPathArrayOfValues)
}

type ListConfigMapsResponsePathSelectorConfigMapsMetadataSyncing struct{}

func (ListConfigMapsResponsePathSelectorConfigMapsMetadataSyncing) FieldPath() *ListConfigMapsResponse_FieldSubPath {
	return &ListConfigMapsResponse_FieldSubPath{
		selector: ListConfigMapsResponse_FieldPathSelectorConfigMaps,
		subPath:  config_map.NewConfigMapFieldPathBuilder().Metadata().Syncing().FieldPath(),
	}
}

func (s ListConfigMapsResponsePathSelectorConfigMapsMetadataSyncing) WithValue(value *ntt_meta.SyncingMeta) *ListConfigMapsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListConfigMapsResponse_FieldSubPathValue)
}

func (s ListConfigMapsResponsePathSelectorConfigMapsMetadataSyncing) WithArrayOfValues(values []*ntt_meta.SyncingMeta) *ListConfigMapsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListConfigMapsResponse_FieldSubPathArrayOfValues)
}

func (ListConfigMapsResponsePathSelectorConfigMapsMetadataSyncing) OwningRegion() ListConfigMapsResponsePathSelectorConfigMapsMetadataSyncingOwningRegion {
	return ListConfigMapsResponsePathSelectorConfigMapsMetadataSyncingOwningRegion{}
}

func (ListConfigMapsResponsePathSelectorConfigMapsMetadataSyncing) Regions() ListConfigMapsResponsePathSelectorConfigMapsMetadataSyncingRegions {
	return ListConfigMapsResponsePathSelectorConfigMapsMetadataSyncingRegions{}
}

type ListConfigMapsResponsePathSelectorConfigMapsMetadataSyncingOwningRegion struct{}

func (ListConfigMapsResponsePathSelectorConfigMapsMetadataSyncingOwningRegion) FieldPath() *ListConfigMapsResponse_FieldSubPath {
	return &ListConfigMapsResponse_FieldSubPath{
		selector: ListConfigMapsResponse_FieldPathSelectorConfigMaps,
		subPath:  config_map.NewConfigMapFieldPathBuilder().Metadata().Syncing().OwningRegion().FieldPath(),
	}
}

func (s ListConfigMapsResponsePathSelectorConfigMapsMetadataSyncingOwningRegion) WithValue(value string) *ListConfigMapsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListConfigMapsResponse_FieldSubPathValue)
}

func (s ListConfigMapsResponsePathSelectorConfigMapsMetadataSyncingOwningRegion) WithArrayOfValues(values []string) *ListConfigMapsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListConfigMapsResponse_FieldSubPathArrayOfValues)
}

type ListConfigMapsResponsePathSelectorConfigMapsMetadataSyncingRegions struct{}

func (ListConfigMapsResponsePathSelectorConfigMapsMetadataSyncingRegions) FieldPath() *ListConfigMapsResponse_FieldSubPath {
	return &ListConfigMapsResponse_FieldSubPath{
		selector: ListConfigMapsResponse_FieldPathSelectorConfigMaps,
		subPath:  config_map.NewConfigMapFieldPathBuilder().Metadata().Syncing().Regions().FieldPath(),
	}
}

func (s ListConfigMapsResponsePathSelectorConfigMapsMetadataSyncingRegions) WithValue(value []string) *ListConfigMapsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListConfigMapsResponse_FieldSubPathValue)
}

func (s ListConfigMapsResponsePathSelectorConfigMapsMetadataSyncingRegions) WithArrayOfValues(values [][]string) *ListConfigMapsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListConfigMapsResponse_FieldSubPathArrayOfValues)
}

func (s ListConfigMapsResponsePathSelectorConfigMapsMetadataSyncingRegions) WithItemValue(value string) *ListConfigMapsResponse_FieldSubPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*ListConfigMapsResponse_FieldSubPathArrayItemValue)
}

type ListConfigMapsResponsePathSelectorConfigMapsMetadataLifecycle struct{}

func (ListConfigMapsResponsePathSelectorConfigMapsMetadataLifecycle) FieldPath() *ListConfigMapsResponse_FieldSubPath {
	return &ListConfigMapsResponse_FieldSubPath{
		selector: ListConfigMapsResponse_FieldPathSelectorConfigMaps,
		subPath:  config_map.NewConfigMapFieldPathBuilder().Metadata().Lifecycle().FieldPath(),
	}
}

func (s ListConfigMapsResponsePathSelectorConfigMapsMetadataLifecycle) WithValue(value *ntt_meta.Lifecycle) *ListConfigMapsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListConfigMapsResponse_FieldSubPathValue)
}

func (s ListConfigMapsResponsePathSelectorConfigMapsMetadataLifecycle) WithArrayOfValues(values []*ntt_meta.Lifecycle) *ListConfigMapsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListConfigMapsResponse_FieldSubPathArrayOfValues)
}

func (ListConfigMapsResponsePathSelectorConfigMapsMetadataLifecycle) State() ListConfigMapsResponsePathSelectorConfigMapsMetadataLifecycleState {
	return ListConfigMapsResponsePathSelectorConfigMapsMetadataLifecycleState{}
}

func (ListConfigMapsResponsePathSelectorConfigMapsMetadataLifecycle) BlockDeletion() ListConfigMapsResponsePathSelectorConfigMapsMetadataLifecycleBlockDeletion {
	return ListConfigMapsResponsePathSelectorConfigMapsMetadataLifecycleBlockDeletion{}
}

type ListConfigMapsResponsePathSelectorConfigMapsMetadataLifecycleState struct{}

func (ListConfigMapsResponsePathSelectorConfigMapsMetadataLifecycleState) FieldPath() *ListConfigMapsResponse_FieldSubPath {
	return &ListConfigMapsResponse_FieldSubPath{
		selector: ListConfigMapsResponse_FieldPathSelectorConfigMaps,
		subPath:  config_map.NewConfigMapFieldPathBuilder().Metadata().Lifecycle().State().FieldPath(),
	}
}

func (s ListConfigMapsResponsePathSelectorConfigMapsMetadataLifecycleState) WithValue(value ntt_meta.Lifecycle_State) *ListConfigMapsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListConfigMapsResponse_FieldSubPathValue)
}

func (s ListConfigMapsResponsePathSelectorConfigMapsMetadataLifecycleState) WithArrayOfValues(values []ntt_meta.Lifecycle_State) *ListConfigMapsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListConfigMapsResponse_FieldSubPathArrayOfValues)
}

type ListConfigMapsResponsePathSelectorConfigMapsMetadataLifecycleBlockDeletion struct{}

func (ListConfigMapsResponsePathSelectorConfigMapsMetadataLifecycleBlockDeletion) FieldPath() *ListConfigMapsResponse_FieldSubPath {
	return &ListConfigMapsResponse_FieldSubPath{
		selector: ListConfigMapsResponse_FieldPathSelectorConfigMaps,
		subPath:  config_map.NewConfigMapFieldPathBuilder().Metadata().Lifecycle().BlockDeletion().FieldPath(),
	}
}

func (s ListConfigMapsResponsePathSelectorConfigMapsMetadataLifecycleBlockDeletion) WithValue(value bool) *ListConfigMapsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListConfigMapsResponse_FieldSubPathValue)
}

func (s ListConfigMapsResponsePathSelectorConfigMapsMetadataLifecycleBlockDeletion) WithArrayOfValues(values []bool) *ListConfigMapsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListConfigMapsResponse_FieldSubPathArrayOfValues)
}

type ListConfigMapsResponsePathSelectorConfigMapsData struct{}

func (ListConfigMapsResponsePathSelectorConfigMapsData) FieldPath() *ListConfigMapsResponse_FieldSubPath {
	return &ListConfigMapsResponse_FieldSubPath{
		selector: ListConfigMapsResponse_FieldPathSelectorConfigMaps,
		subPath:  config_map.NewConfigMapFieldPathBuilder().Data().FieldPath(),
	}
}

func (s ListConfigMapsResponsePathSelectorConfigMapsData) WithValue(value map[string]string) *ListConfigMapsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListConfigMapsResponse_FieldSubPathValue)
}

func (s ListConfigMapsResponsePathSelectorConfigMapsData) WithArrayOfValues(values []map[string]string) *ListConfigMapsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListConfigMapsResponse_FieldSubPathArrayOfValues)
}

func (ListConfigMapsResponsePathSelectorConfigMapsData) WithKey(key string) ListConfigMapsResponseMapPathSelectorConfigMapsData {
	return ListConfigMapsResponseMapPathSelectorConfigMapsData{key: key}
}

type ListConfigMapsResponseMapPathSelectorConfigMapsData struct {
	key string
}

func (s ListConfigMapsResponseMapPathSelectorConfigMapsData) FieldPath() *ListConfigMapsResponse_FieldSubPath {
	return &ListConfigMapsResponse_FieldSubPath{
		selector: ListConfigMapsResponse_FieldPathSelectorConfigMaps,
		subPath:  config_map.NewConfigMapFieldPathBuilder().Data().WithKey(s.key).FieldPath(),
	}
}

func (s ListConfigMapsResponseMapPathSelectorConfigMapsData) WithValue(value string) *ListConfigMapsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListConfigMapsResponse_FieldSubPathValue)
}

func (s ListConfigMapsResponseMapPathSelectorConfigMapsData) WithArrayOfValues(values []string) *ListConfigMapsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListConfigMapsResponse_FieldSubPathArrayOfValues)
}

type ListConfigMapsResponsePathSelectorConfigMapsBinaryData struct{}

func (ListConfigMapsResponsePathSelectorConfigMapsBinaryData) FieldPath() *ListConfigMapsResponse_FieldSubPath {
	return &ListConfigMapsResponse_FieldSubPath{
		selector: ListConfigMapsResponse_FieldPathSelectorConfigMaps,
		subPath:  config_map.NewConfigMapFieldPathBuilder().BinaryData().FieldPath(),
	}
}

func (s ListConfigMapsResponsePathSelectorConfigMapsBinaryData) WithValue(value map[string][]byte) *ListConfigMapsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListConfigMapsResponse_FieldSubPathValue)
}

func (s ListConfigMapsResponsePathSelectorConfigMapsBinaryData) WithArrayOfValues(values []map[string][]byte) *ListConfigMapsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListConfigMapsResponse_FieldSubPathArrayOfValues)
}

func (ListConfigMapsResponsePathSelectorConfigMapsBinaryData) WithKey(key string) ListConfigMapsResponseMapPathSelectorConfigMapsBinaryData {
	return ListConfigMapsResponseMapPathSelectorConfigMapsBinaryData{key: key}
}

type ListConfigMapsResponseMapPathSelectorConfigMapsBinaryData struct {
	key string
}

func (s ListConfigMapsResponseMapPathSelectorConfigMapsBinaryData) FieldPath() *ListConfigMapsResponse_FieldSubPath {
	return &ListConfigMapsResponse_FieldSubPath{
		selector: ListConfigMapsResponse_FieldPathSelectorConfigMaps,
		subPath:  config_map.NewConfigMapFieldPathBuilder().BinaryData().WithKey(s.key).FieldPath(),
	}
}

func (s ListConfigMapsResponseMapPathSelectorConfigMapsBinaryData) WithValue(value []byte) *ListConfigMapsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ListConfigMapsResponse_FieldSubPathValue)
}

func (s ListConfigMapsResponseMapPathSelectorConfigMapsBinaryData) WithArrayOfValues(values [][]byte) *ListConfigMapsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListConfigMapsResponse_FieldSubPathArrayOfValues)
}

type ListConfigMapsResponsePathSelectorPrevPageToken struct{}

func (ListConfigMapsResponsePathSelectorPrevPageToken) FieldPath() *ListConfigMapsResponse_FieldTerminalPath {
	return &ListConfigMapsResponse_FieldTerminalPath{selector: ListConfigMapsResponse_FieldPathSelectorPrevPageToken}
}

func (s ListConfigMapsResponsePathSelectorPrevPageToken) WithValue(value *config_map.PagerCursor) *ListConfigMapsResponse_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*ListConfigMapsResponse_FieldTerminalPathValue)
}

func (s ListConfigMapsResponsePathSelectorPrevPageToken) WithArrayOfValues(values []*config_map.PagerCursor) *ListConfigMapsResponse_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListConfigMapsResponse_FieldTerminalPathArrayOfValues)
}

type ListConfigMapsResponsePathSelectorNextPageToken struct{}

func (ListConfigMapsResponsePathSelectorNextPageToken) FieldPath() *ListConfigMapsResponse_FieldTerminalPath {
	return &ListConfigMapsResponse_FieldTerminalPath{selector: ListConfigMapsResponse_FieldPathSelectorNextPageToken}
}

func (s ListConfigMapsResponsePathSelectorNextPageToken) WithValue(value *config_map.PagerCursor) *ListConfigMapsResponse_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*ListConfigMapsResponse_FieldTerminalPathValue)
}

func (s ListConfigMapsResponsePathSelectorNextPageToken) WithArrayOfValues(values []*config_map.PagerCursor) *ListConfigMapsResponse_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ListConfigMapsResponse_FieldTerminalPathArrayOfValues)
}

type WatchConfigMapRequestFieldPathBuilder struct{}

func NewWatchConfigMapRequestFieldPathBuilder() WatchConfigMapRequestFieldPathBuilder {
	return WatchConfigMapRequestFieldPathBuilder{}
}
func (WatchConfigMapRequestFieldPathBuilder) Name() WatchConfigMapRequestPathSelectorName {
	return WatchConfigMapRequestPathSelectorName{}
}
func (WatchConfigMapRequestFieldPathBuilder) FieldMask() WatchConfigMapRequestPathSelectorFieldMask {
	return WatchConfigMapRequestPathSelectorFieldMask{}
}
func (WatchConfigMapRequestFieldPathBuilder) View() WatchConfigMapRequestPathSelectorView {
	return WatchConfigMapRequestPathSelectorView{}
}

type WatchConfigMapRequestPathSelectorName struct{}

func (WatchConfigMapRequestPathSelectorName) FieldPath() *WatchConfigMapRequest_FieldTerminalPath {
	return &WatchConfigMapRequest_FieldTerminalPath{selector: WatchConfigMapRequest_FieldPathSelectorName}
}

func (s WatchConfigMapRequestPathSelectorName) WithValue(value *config_map.Reference) *WatchConfigMapRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*WatchConfigMapRequest_FieldTerminalPathValue)
}

func (s WatchConfigMapRequestPathSelectorName) WithArrayOfValues(values []*config_map.Reference) *WatchConfigMapRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*WatchConfigMapRequest_FieldTerminalPathArrayOfValues)
}

type WatchConfigMapRequestPathSelectorFieldMask struct{}

func (WatchConfigMapRequestPathSelectorFieldMask) FieldPath() *WatchConfigMapRequest_FieldTerminalPath {
	return &WatchConfigMapRequest_FieldTerminalPath{selector: WatchConfigMapRequest_FieldPathSelectorFieldMask}
}

func (s WatchConfigMapRequestPathSelectorFieldMask) WithValue(value *config_map.ConfigMap_FieldMask) *WatchConfigMapRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*WatchConfigMapRequest_FieldTerminalPathValue)
}

func (s WatchConfigMapRequestPathSelectorFieldMask) WithArrayOfValues(values []*config_map.ConfigMap_FieldMask) *WatchConfigMapRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*WatchConfigMapRequest_FieldTerminalPathArrayOfValues)
}

type WatchConfigMapRequestPathSelectorView struct{}

func (WatchConfigMapRequestPathSelectorView) FieldPath() *WatchConfigMapRequest_FieldTerminalPath {
	return &WatchConfigMapRequest_FieldTerminalPath{selector: WatchConfigMapRequest_FieldPathSelectorView}
}

func (s WatchConfigMapRequestPathSelectorView) WithValue(value view.View) *WatchConfigMapRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*WatchConfigMapRequest_FieldTerminalPathValue)
}

func (s WatchConfigMapRequestPathSelectorView) WithArrayOfValues(values []view.View) *WatchConfigMapRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*WatchConfigMapRequest_FieldTerminalPathArrayOfValues)
}

type WatchConfigMapResponseFieldPathBuilder struct{}

func NewWatchConfigMapResponseFieldPathBuilder() WatchConfigMapResponseFieldPathBuilder {
	return WatchConfigMapResponseFieldPathBuilder{}
}
func (WatchConfigMapResponseFieldPathBuilder) Change() WatchConfigMapResponsePathSelectorChange {
	return WatchConfigMapResponsePathSelectorChange{}
}

type WatchConfigMapResponsePathSelectorChange struct{}

func (WatchConfigMapResponsePathSelectorChange) FieldPath() *WatchConfigMapResponse_FieldTerminalPath {
	return &WatchConfigMapResponse_FieldTerminalPath{selector: WatchConfigMapResponse_FieldPathSelectorChange}
}

func (s WatchConfigMapResponsePathSelectorChange) WithValue(value *config_map.ConfigMapChange) *WatchConfigMapResponse_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*WatchConfigMapResponse_FieldTerminalPathValue)
}

func (s WatchConfigMapResponsePathSelectorChange) WithArrayOfValues(values []*config_map.ConfigMapChange) *WatchConfigMapResponse_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*WatchConfigMapResponse_FieldTerminalPathArrayOfValues)
}

type WatchConfigMapsRequestFieldPathBuilder struct{}

func NewWatchConfigMapsRequestFieldPathBuilder() WatchConfigMapsRequestFieldPathBuilder {
	return WatchConfigMapsRequestFieldPathBuilder{}
}
func (WatchConfigMapsRequestFieldPathBuilder) Type() WatchConfigMapsRequestPathSelectorType {
	return WatchConfigMapsRequestPathSelectorType{}
}
func (WatchConfigMapsRequestFieldPathBuilder) Parent() WatchConfigMapsRequestPathSelectorParent {
	return WatchConfigMapsRequestPathSelectorParent{}
}
func (WatchConfigMapsRequestFieldPathBuilder) PageSize() WatchConfigMapsRequestPathSelectorPageSize {
	return WatchConfigMapsRequestPathSelectorPageSize{}
}
func (WatchConfigMapsRequestFieldPathBuilder) PageToken() WatchConfigMapsRequestPathSelectorPageToken {
	return WatchConfigMapsRequestPathSelectorPageToken{}
}
func (WatchConfigMapsRequestFieldPathBuilder) OrderBy() WatchConfigMapsRequestPathSelectorOrderBy {
	return WatchConfigMapsRequestPathSelectorOrderBy{}
}
func (WatchConfigMapsRequestFieldPathBuilder) ResumeToken() WatchConfigMapsRequestPathSelectorResumeToken {
	return WatchConfigMapsRequestPathSelectorResumeToken{}
}
func (WatchConfigMapsRequestFieldPathBuilder) Filter() WatchConfigMapsRequestPathSelectorFilter {
	return WatchConfigMapsRequestPathSelectorFilter{}
}
func (WatchConfigMapsRequestFieldPathBuilder) FieldMask() WatchConfigMapsRequestPathSelectorFieldMask {
	return WatchConfigMapsRequestPathSelectorFieldMask{}
}
func (WatchConfigMapsRequestFieldPathBuilder) View() WatchConfigMapsRequestPathSelectorView {
	return WatchConfigMapsRequestPathSelectorView{}
}
func (WatchConfigMapsRequestFieldPathBuilder) MaxChunkSize() WatchConfigMapsRequestPathSelectorMaxChunkSize {
	return WatchConfigMapsRequestPathSelectorMaxChunkSize{}
}

type WatchConfigMapsRequestPathSelectorType struct{}

func (WatchConfigMapsRequestPathSelectorType) FieldPath() *WatchConfigMapsRequest_FieldTerminalPath {
	return &WatchConfigMapsRequest_FieldTerminalPath{selector: WatchConfigMapsRequest_FieldPathSelectorType}
}

func (s WatchConfigMapsRequestPathSelectorType) WithValue(value watch_type.WatchType) *WatchConfigMapsRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*WatchConfigMapsRequest_FieldTerminalPathValue)
}

func (s WatchConfigMapsRequestPathSelectorType) WithArrayOfValues(values []watch_type.WatchType) *WatchConfigMapsRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*WatchConfigMapsRequest_FieldTerminalPathArrayOfValues)
}

type WatchConfigMapsRequestPathSelectorParent struct{}

func (WatchConfigMapsRequestPathSelectorParent) FieldPath() *WatchConfigMapsRequest_FieldTerminalPath {
	return &WatchConfigMapsRequest_FieldTerminalPath{selector: WatchConfigMapsRequest_FieldPathSelectorParent}
}

func (s WatchConfigMapsRequestPathSelectorParent) WithValue(value *config_map.ParentReference) *WatchConfigMapsRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*WatchConfigMapsRequest_FieldTerminalPathValue)
}

func (s WatchConfigMapsRequestPathSelectorParent) WithArrayOfValues(values []*config_map.ParentReference) *WatchConfigMapsRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*WatchConfigMapsRequest_FieldTerminalPathArrayOfValues)
}

type WatchConfigMapsRequestPathSelectorPageSize struct{}

func (WatchConfigMapsRequestPathSelectorPageSize) FieldPath() *WatchConfigMapsRequest_FieldTerminalPath {
	return &WatchConfigMapsRequest_FieldTerminalPath{selector: WatchConfigMapsRequest_FieldPathSelectorPageSize}
}

func (s WatchConfigMapsRequestPathSelectorPageSize) WithValue(value int32) *WatchConfigMapsRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*WatchConfigMapsRequest_FieldTerminalPathValue)
}

func (s WatchConfigMapsRequestPathSelectorPageSize) WithArrayOfValues(values []int32) *WatchConfigMapsRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*WatchConfigMapsRequest_FieldTerminalPathArrayOfValues)
}

type WatchConfigMapsRequestPathSelectorPageToken struct{}

func (WatchConfigMapsRequestPathSelectorPageToken) FieldPath() *WatchConfigMapsRequest_FieldTerminalPath {
	return &WatchConfigMapsRequest_FieldTerminalPath{selector: WatchConfigMapsRequest_FieldPathSelectorPageToken}
}

func (s WatchConfigMapsRequestPathSelectorPageToken) WithValue(value *config_map.PagerCursor) *WatchConfigMapsRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*WatchConfigMapsRequest_FieldTerminalPathValue)
}

func (s WatchConfigMapsRequestPathSelectorPageToken) WithArrayOfValues(values []*config_map.PagerCursor) *WatchConfigMapsRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*WatchConfigMapsRequest_FieldTerminalPathArrayOfValues)
}

type WatchConfigMapsRequestPathSelectorOrderBy struct{}

func (WatchConfigMapsRequestPathSelectorOrderBy) FieldPath() *WatchConfigMapsRequest_FieldTerminalPath {
	return &WatchConfigMapsRequest_FieldTerminalPath{selector: WatchConfigMapsRequest_FieldPathSelectorOrderBy}
}

func (s WatchConfigMapsRequestPathSelectorOrderBy) WithValue(value *config_map.OrderBy) *WatchConfigMapsRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*WatchConfigMapsRequest_FieldTerminalPathValue)
}

func (s WatchConfigMapsRequestPathSelectorOrderBy) WithArrayOfValues(values []*config_map.OrderBy) *WatchConfigMapsRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*WatchConfigMapsRequest_FieldTerminalPathArrayOfValues)
}

type WatchConfigMapsRequestPathSelectorResumeToken struct{}

func (WatchConfigMapsRequestPathSelectorResumeToken) FieldPath() *WatchConfigMapsRequest_FieldTerminalPath {
	return &WatchConfigMapsRequest_FieldTerminalPath{selector: WatchConfigMapsRequest_FieldPathSelectorResumeToken}
}

func (s WatchConfigMapsRequestPathSelectorResumeToken) WithValue(value string) *WatchConfigMapsRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*WatchConfigMapsRequest_FieldTerminalPathValue)
}

func (s WatchConfigMapsRequestPathSelectorResumeToken) WithArrayOfValues(values []string) *WatchConfigMapsRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*WatchConfigMapsRequest_FieldTerminalPathArrayOfValues)
}

type WatchConfigMapsRequestPathSelectorFilter struct{}

func (WatchConfigMapsRequestPathSelectorFilter) FieldPath() *WatchConfigMapsRequest_FieldTerminalPath {
	return &WatchConfigMapsRequest_FieldTerminalPath{selector: WatchConfigMapsRequest_FieldPathSelectorFilter}
}

func (s WatchConfigMapsRequestPathSelectorFilter) WithValue(value *config_map.Filter) *WatchConfigMapsRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*WatchConfigMapsRequest_FieldTerminalPathValue)
}

func (s WatchConfigMapsRequestPathSelectorFilter) WithArrayOfValues(values []*config_map.Filter) *WatchConfigMapsRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*WatchConfigMapsRequest_FieldTerminalPathArrayOfValues)
}

type WatchConfigMapsRequestPathSelectorFieldMask struct{}

func (WatchConfigMapsRequestPathSelectorFieldMask) FieldPath() *WatchConfigMapsRequest_FieldTerminalPath {
	return &WatchConfigMapsRequest_FieldTerminalPath{selector: WatchConfigMapsRequest_FieldPathSelectorFieldMask}
}

func (s WatchConfigMapsRequestPathSelectorFieldMask) WithValue(value *config_map.ConfigMap_FieldMask) *WatchConfigMapsRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*WatchConfigMapsRequest_FieldTerminalPathValue)
}

func (s WatchConfigMapsRequestPathSelectorFieldMask) WithArrayOfValues(values []*config_map.ConfigMap_FieldMask) *WatchConfigMapsRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*WatchConfigMapsRequest_FieldTerminalPathArrayOfValues)
}

type WatchConfigMapsRequestPathSelectorView struct{}

func (WatchConfigMapsRequestPathSelectorView) FieldPath() *WatchConfigMapsRequest_FieldTerminalPath {
	return &WatchConfigMapsRequest_FieldTerminalPath{selector: WatchConfigMapsRequest_FieldPathSelectorView}
}

func (s WatchConfigMapsRequestPathSelectorView) WithValue(value view.View) *WatchConfigMapsRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*WatchConfigMapsRequest_FieldTerminalPathValue)
}

func (s WatchConfigMapsRequestPathSelectorView) WithArrayOfValues(values []view.View) *WatchConfigMapsRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*WatchConfigMapsRequest_FieldTerminalPathArrayOfValues)
}

type WatchConfigMapsRequestPathSelectorMaxChunkSize struct{}

func (WatchConfigMapsRequestPathSelectorMaxChunkSize) FieldPath() *WatchConfigMapsRequest_FieldTerminalPath {
	return &WatchConfigMapsRequest_FieldTerminalPath{selector: WatchConfigMapsRequest_FieldPathSelectorMaxChunkSize}
}

func (s WatchConfigMapsRequestPathSelectorMaxChunkSize) WithValue(value int32) *WatchConfigMapsRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*WatchConfigMapsRequest_FieldTerminalPathValue)
}

func (s WatchConfigMapsRequestPathSelectorMaxChunkSize) WithArrayOfValues(values []int32) *WatchConfigMapsRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*WatchConfigMapsRequest_FieldTerminalPathArrayOfValues)
}

type WatchConfigMapsResponseFieldPathBuilder struct{}

func NewWatchConfigMapsResponseFieldPathBuilder() WatchConfigMapsResponseFieldPathBuilder {
	return WatchConfigMapsResponseFieldPathBuilder{}
}
func (WatchConfigMapsResponseFieldPathBuilder) ConfigMapChanges() WatchConfigMapsResponsePathSelectorConfigMapChanges {
	return WatchConfigMapsResponsePathSelectorConfigMapChanges{}
}
func (WatchConfigMapsResponseFieldPathBuilder) IsCurrent() WatchConfigMapsResponsePathSelectorIsCurrent {
	return WatchConfigMapsResponsePathSelectorIsCurrent{}
}
func (WatchConfigMapsResponseFieldPathBuilder) PageTokenChange() WatchConfigMapsResponsePathSelectorPageTokenChange {
	return WatchConfigMapsResponsePathSelectorPageTokenChange{}
}
func (WatchConfigMapsResponseFieldPathBuilder) ResumeToken() WatchConfigMapsResponsePathSelectorResumeToken {
	return WatchConfigMapsResponsePathSelectorResumeToken{}
}
func (WatchConfigMapsResponseFieldPathBuilder) SnapshotSize() WatchConfigMapsResponsePathSelectorSnapshotSize {
	return WatchConfigMapsResponsePathSelectorSnapshotSize{}
}
func (WatchConfigMapsResponseFieldPathBuilder) IsSoftReset() WatchConfigMapsResponsePathSelectorIsSoftReset {
	return WatchConfigMapsResponsePathSelectorIsSoftReset{}
}
func (WatchConfigMapsResponseFieldPathBuilder) IsHardReset() WatchConfigMapsResponsePathSelectorIsHardReset {
	return WatchConfigMapsResponsePathSelectorIsHardReset{}
}

type WatchConfigMapsResponsePathSelectorConfigMapChanges struct{}

func (WatchConfigMapsResponsePathSelectorConfigMapChanges) FieldPath() *WatchConfigMapsResponse_FieldTerminalPath {
	return &WatchConfigMapsResponse_FieldTerminalPath{selector: WatchConfigMapsResponse_FieldPathSelectorConfigMapChanges}
}

func (s WatchConfigMapsResponsePathSelectorConfigMapChanges) WithValue(value []*config_map.ConfigMapChange) *WatchConfigMapsResponse_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*WatchConfigMapsResponse_FieldTerminalPathValue)
}

func (s WatchConfigMapsResponsePathSelectorConfigMapChanges) WithArrayOfValues(values [][]*config_map.ConfigMapChange) *WatchConfigMapsResponse_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*WatchConfigMapsResponse_FieldTerminalPathArrayOfValues)
}

func (s WatchConfigMapsResponsePathSelectorConfigMapChanges) WithItemValue(value *config_map.ConfigMapChange) *WatchConfigMapsResponse_FieldTerminalPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*WatchConfigMapsResponse_FieldTerminalPathArrayItemValue)
}

type WatchConfigMapsResponsePathSelectorIsCurrent struct{}

func (WatchConfigMapsResponsePathSelectorIsCurrent) FieldPath() *WatchConfigMapsResponse_FieldTerminalPath {
	return &WatchConfigMapsResponse_FieldTerminalPath{selector: WatchConfigMapsResponse_FieldPathSelectorIsCurrent}
}

func (s WatchConfigMapsResponsePathSelectorIsCurrent) WithValue(value bool) *WatchConfigMapsResponse_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*WatchConfigMapsResponse_FieldTerminalPathValue)
}

func (s WatchConfigMapsResponsePathSelectorIsCurrent) WithArrayOfValues(values []bool) *WatchConfigMapsResponse_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*WatchConfigMapsResponse_FieldTerminalPathArrayOfValues)
}

type WatchConfigMapsResponsePathSelectorPageTokenChange struct{}

func (WatchConfigMapsResponsePathSelectorPageTokenChange) FieldPath() *WatchConfigMapsResponse_FieldTerminalPath {
	return &WatchConfigMapsResponse_FieldTerminalPath{selector: WatchConfigMapsResponse_FieldPathSelectorPageTokenChange}
}

func (s WatchConfigMapsResponsePathSelectorPageTokenChange) WithValue(value *WatchConfigMapsResponse_PageTokenChange) *WatchConfigMapsResponse_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*WatchConfigMapsResponse_FieldTerminalPathValue)
}

func (s WatchConfigMapsResponsePathSelectorPageTokenChange) WithArrayOfValues(values []*WatchConfigMapsResponse_PageTokenChange) *WatchConfigMapsResponse_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*WatchConfigMapsResponse_FieldTerminalPathArrayOfValues)
}

func (WatchConfigMapsResponsePathSelectorPageTokenChange) WithSubPath(subPath WatchConfigMapsResponsePageTokenChange_FieldPath) *WatchConfigMapsResponse_FieldSubPath {
	return &WatchConfigMapsResponse_FieldSubPath{selector: WatchConfigMapsResponse_FieldPathSelectorPageTokenChange, subPath: subPath}
}

func (s WatchConfigMapsResponsePathSelectorPageTokenChange) WithSubValue(subPathValue WatchConfigMapsResponsePageTokenChange_FieldPathValue) *WatchConfigMapsResponse_FieldSubPathValue {
	return &WatchConfigMapsResponse_FieldSubPathValue{WatchConfigMapsResponse_FieldPath: s.WithSubPath(subPathValue), subPathValue: subPathValue}
}

func (s WatchConfigMapsResponsePathSelectorPageTokenChange) WithSubArrayOfValues(subPathArrayOfValues WatchConfigMapsResponsePageTokenChange_FieldPathArrayOfValues) *WatchConfigMapsResponse_FieldSubPathArrayOfValues {
	return &WatchConfigMapsResponse_FieldSubPathArrayOfValues{WatchConfigMapsResponse_FieldPath: s.WithSubPath(subPathArrayOfValues), subPathArrayOfValues: subPathArrayOfValues}
}

func (s WatchConfigMapsResponsePathSelectorPageTokenChange) WithSubArrayItemValue(subPathArrayItemValue WatchConfigMapsResponsePageTokenChange_FieldPathArrayItemValue) *WatchConfigMapsResponse_FieldSubPathArrayItemValue {
	return &WatchConfigMapsResponse_FieldSubPathArrayItemValue{WatchConfigMapsResponse_FieldPath: s.WithSubPath(subPathArrayItemValue), subPathItemValue: subPathArrayItemValue}
}

func (WatchConfigMapsResponsePathSelectorPageTokenChange) PrevPageToken() WatchConfigMapsResponsePathSelectorPageTokenChangePrevPageToken {
	return WatchConfigMapsResponsePathSelectorPageTokenChangePrevPageToken{}
}

func (WatchConfigMapsResponsePathSelectorPageTokenChange) NextPageToken() WatchConfigMapsResponsePathSelectorPageTokenChangeNextPageToken {
	return WatchConfigMapsResponsePathSelectorPageTokenChangeNextPageToken{}
}

type WatchConfigMapsResponsePathSelectorPageTokenChangePrevPageToken struct{}

func (WatchConfigMapsResponsePathSelectorPageTokenChangePrevPageToken) FieldPath() *WatchConfigMapsResponse_FieldSubPath {
	return &WatchConfigMapsResponse_FieldSubPath{
		selector: WatchConfigMapsResponse_FieldPathSelectorPageTokenChange,
		subPath:  NewWatchConfigMapsResponsePageTokenChangeFieldPathBuilder().PrevPageToken().FieldPath(),
	}
}

func (s WatchConfigMapsResponsePathSelectorPageTokenChangePrevPageToken) WithValue(value *config_map.PagerCursor) *WatchConfigMapsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*WatchConfigMapsResponse_FieldSubPathValue)
}

func (s WatchConfigMapsResponsePathSelectorPageTokenChangePrevPageToken) WithArrayOfValues(values []*config_map.PagerCursor) *WatchConfigMapsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*WatchConfigMapsResponse_FieldSubPathArrayOfValues)
}

type WatchConfigMapsResponsePathSelectorPageTokenChangeNextPageToken struct{}

func (WatchConfigMapsResponsePathSelectorPageTokenChangeNextPageToken) FieldPath() *WatchConfigMapsResponse_FieldSubPath {
	return &WatchConfigMapsResponse_FieldSubPath{
		selector: WatchConfigMapsResponse_FieldPathSelectorPageTokenChange,
		subPath:  NewWatchConfigMapsResponsePageTokenChangeFieldPathBuilder().NextPageToken().FieldPath(),
	}
}

func (s WatchConfigMapsResponsePathSelectorPageTokenChangeNextPageToken) WithValue(value *config_map.PagerCursor) *WatchConfigMapsResponse_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*WatchConfigMapsResponse_FieldSubPathValue)
}

func (s WatchConfigMapsResponsePathSelectorPageTokenChangeNextPageToken) WithArrayOfValues(values []*config_map.PagerCursor) *WatchConfigMapsResponse_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*WatchConfigMapsResponse_FieldSubPathArrayOfValues)
}

type WatchConfigMapsResponsePathSelectorResumeToken struct{}

func (WatchConfigMapsResponsePathSelectorResumeToken) FieldPath() *WatchConfigMapsResponse_FieldTerminalPath {
	return &WatchConfigMapsResponse_FieldTerminalPath{selector: WatchConfigMapsResponse_FieldPathSelectorResumeToken}
}

func (s WatchConfigMapsResponsePathSelectorResumeToken) WithValue(value string) *WatchConfigMapsResponse_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*WatchConfigMapsResponse_FieldTerminalPathValue)
}

func (s WatchConfigMapsResponsePathSelectorResumeToken) WithArrayOfValues(values []string) *WatchConfigMapsResponse_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*WatchConfigMapsResponse_FieldTerminalPathArrayOfValues)
}

type WatchConfigMapsResponsePathSelectorSnapshotSize struct{}

func (WatchConfigMapsResponsePathSelectorSnapshotSize) FieldPath() *WatchConfigMapsResponse_FieldTerminalPath {
	return &WatchConfigMapsResponse_FieldTerminalPath{selector: WatchConfigMapsResponse_FieldPathSelectorSnapshotSize}
}

func (s WatchConfigMapsResponsePathSelectorSnapshotSize) WithValue(value int64) *WatchConfigMapsResponse_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*WatchConfigMapsResponse_FieldTerminalPathValue)
}

func (s WatchConfigMapsResponsePathSelectorSnapshotSize) WithArrayOfValues(values []int64) *WatchConfigMapsResponse_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*WatchConfigMapsResponse_FieldTerminalPathArrayOfValues)
}

type WatchConfigMapsResponsePathSelectorIsSoftReset struct{}

func (WatchConfigMapsResponsePathSelectorIsSoftReset) FieldPath() *WatchConfigMapsResponse_FieldTerminalPath {
	return &WatchConfigMapsResponse_FieldTerminalPath{selector: WatchConfigMapsResponse_FieldPathSelectorIsSoftReset}
}

func (s WatchConfigMapsResponsePathSelectorIsSoftReset) WithValue(value bool) *WatchConfigMapsResponse_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*WatchConfigMapsResponse_FieldTerminalPathValue)
}

func (s WatchConfigMapsResponsePathSelectorIsSoftReset) WithArrayOfValues(values []bool) *WatchConfigMapsResponse_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*WatchConfigMapsResponse_FieldTerminalPathArrayOfValues)
}

type WatchConfigMapsResponsePathSelectorIsHardReset struct{}

func (WatchConfigMapsResponsePathSelectorIsHardReset) FieldPath() *WatchConfigMapsResponse_FieldTerminalPath {
	return &WatchConfigMapsResponse_FieldTerminalPath{selector: WatchConfigMapsResponse_FieldPathSelectorIsHardReset}
}

func (s WatchConfigMapsResponsePathSelectorIsHardReset) WithValue(value bool) *WatchConfigMapsResponse_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*WatchConfigMapsResponse_FieldTerminalPathValue)
}

func (s WatchConfigMapsResponsePathSelectorIsHardReset) WithArrayOfValues(values []bool) *WatchConfigMapsResponse_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*WatchConfigMapsResponse_FieldTerminalPathArrayOfValues)
}

type WatchConfigMapsResponsePageTokenChangeFieldPathBuilder struct{}

func NewWatchConfigMapsResponsePageTokenChangeFieldPathBuilder() WatchConfigMapsResponsePageTokenChangeFieldPathBuilder {
	return WatchConfigMapsResponsePageTokenChangeFieldPathBuilder{}
}
func (WatchConfigMapsResponsePageTokenChangeFieldPathBuilder) PrevPageToken() WatchConfigMapsResponse_PageTokenChangePathSelectorPrevPageToken {
	return WatchConfigMapsResponse_PageTokenChangePathSelectorPrevPageToken{}
}
func (WatchConfigMapsResponsePageTokenChangeFieldPathBuilder) NextPageToken() WatchConfigMapsResponse_PageTokenChangePathSelectorNextPageToken {
	return WatchConfigMapsResponse_PageTokenChangePathSelectorNextPageToken{}
}

type WatchConfigMapsResponse_PageTokenChangePathSelectorPrevPageToken struct{}

func (WatchConfigMapsResponse_PageTokenChangePathSelectorPrevPageToken) FieldPath() *WatchConfigMapsResponsePageTokenChange_FieldTerminalPath {
	return &WatchConfigMapsResponsePageTokenChange_FieldTerminalPath{selector: WatchConfigMapsResponsePageTokenChange_FieldPathSelectorPrevPageToken}
}

func (s WatchConfigMapsResponse_PageTokenChangePathSelectorPrevPageToken) WithValue(value *config_map.PagerCursor) *WatchConfigMapsResponsePageTokenChange_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*WatchConfigMapsResponsePageTokenChange_FieldTerminalPathValue)
}

func (s WatchConfigMapsResponse_PageTokenChangePathSelectorPrevPageToken) WithArrayOfValues(values []*config_map.PagerCursor) *WatchConfigMapsResponsePageTokenChange_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*WatchConfigMapsResponsePageTokenChange_FieldTerminalPathArrayOfValues)
}

type WatchConfigMapsResponse_PageTokenChangePathSelectorNextPageToken struct{}

func (WatchConfigMapsResponse_PageTokenChangePathSelectorNextPageToken) FieldPath() *WatchConfigMapsResponsePageTokenChange_FieldTerminalPath {
	return &WatchConfigMapsResponsePageTokenChange_FieldTerminalPath{selector: WatchConfigMapsResponsePageTokenChange_FieldPathSelectorNextPageToken}
}

func (s WatchConfigMapsResponse_PageTokenChangePathSelectorNextPageToken) WithValue(value *config_map.PagerCursor) *WatchConfigMapsResponsePageTokenChange_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*WatchConfigMapsResponsePageTokenChange_FieldTerminalPathValue)
}

func (s WatchConfigMapsResponse_PageTokenChangePathSelectorNextPageToken) WithArrayOfValues(values []*config_map.PagerCursor) *WatchConfigMapsResponsePageTokenChange_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*WatchConfigMapsResponsePageTokenChange_FieldTerminalPathArrayOfValues)
}

type CreateConfigMapRequestFieldPathBuilder struct{}

func NewCreateConfigMapRequestFieldPathBuilder() CreateConfigMapRequestFieldPathBuilder {
	return CreateConfigMapRequestFieldPathBuilder{}
}
func (CreateConfigMapRequestFieldPathBuilder) Parent() CreateConfigMapRequestPathSelectorParent {
	return CreateConfigMapRequestPathSelectorParent{}
}
func (CreateConfigMapRequestFieldPathBuilder) ConfigMap() CreateConfigMapRequestPathSelectorConfigMap {
	return CreateConfigMapRequestPathSelectorConfigMap{}
}

type CreateConfigMapRequestPathSelectorParent struct{}

func (CreateConfigMapRequestPathSelectorParent) FieldPath() *CreateConfigMapRequest_FieldTerminalPath {
	return &CreateConfigMapRequest_FieldTerminalPath{selector: CreateConfigMapRequest_FieldPathSelectorParent}
}

func (s CreateConfigMapRequestPathSelectorParent) WithValue(value *config_map.ParentReference) *CreateConfigMapRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*CreateConfigMapRequest_FieldTerminalPathValue)
}

func (s CreateConfigMapRequestPathSelectorParent) WithArrayOfValues(values []*config_map.ParentReference) *CreateConfigMapRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CreateConfigMapRequest_FieldTerminalPathArrayOfValues)
}

type CreateConfigMapRequestPathSelectorConfigMap struct{}

func (CreateConfigMapRequestPathSelectorConfigMap) FieldPath() *CreateConfigMapRequest_FieldTerminalPath {
	return &CreateConfigMapRequest_FieldTerminalPath{selector: CreateConfigMapRequest_FieldPathSelectorConfigMap}
}

func (s CreateConfigMapRequestPathSelectorConfigMap) WithValue(value *config_map.ConfigMap) *CreateConfigMapRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*CreateConfigMapRequest_FieldTerminalPathValue)
}

func (s CreateConfigMapRequestPathSelectorConfigMap) WithArrayOfValues(values []*config_map.ConfigMap) *CreateConfigMapRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CreateConfigMapRequest_FieldTerminalPathArrayOfValues)
}

func (CreateConfigMapRequestPathSelectorConfigMap) WithSubPath(subPath config_map.ConfigMap_FieldPath) *CreateConfigMapRequest_FieldSubPath {
	return &CreateConfigMapRequest_FieldSubPath{selector: CreateConfigMapRequest_FieldPathSelectorConfigMap, subPath: subPath}
}

func (s CreateConfigMapRequestPathSelectorConfigMap) WithSubValue(subPathValue config_map.ConfigMap_FieldPathValue) *CreateConfigMapRequest_FieldSubPathValue {
	return &CreateConfigMapRequest_FieldSubPathValue{CreateConfigMapRequest_FieldPath: s.WithSubPath(subPathValue), subPathValue: subPathValue}
}

func (s CreateConfigMapRequestPathSelectorConfigMap) WithSubArrayOfValues(subPathArrayOfValues config_map.ConfigMap_FieldPathArrayOfValues) *CreateConfigMapRequest_FieldSubPathArrayOfValues {
	return &CreateConfigMapRequest_FieldSubPathArrayOfValues{CreateConfigMapRequest_FieldPath: s.WithSubPath(subPathArrayOfValues), subPathArrayOfValues: subPathArrayOfValues}
}

func (s CreateConfigMapRequestPathSelectorConfigMap) WithSubArrayItemValue(subPathArrayItemValue config_map.ConfigMap_FieldPathArrayItemValue) *CreateConfigMapRequest_FieldSubPathArrayItemValue {
	return &CreateConfigMapRequest_FieldSubPathArrayItemValue{CreateConfigMapRequest_FieldPath: s.WithSubPath(subPathArrayItemValue), subPathItemValue: subPathArrayItemValue}
}

func (CreateConfigMapRequestPathSelectorConfigMap) Name() CreateConfigMapRequestPathSelectorConfigMapName {
	return CreateConfigMapRequestPathSelectorConfigMapName{}
}

func (CreateConfigMapRequestPathSelectorConfigMap) DisplayName() CreateConfigMapRequestPathSelectorConfigMapDisplayName {
	return CreateConfigMapRequestPathSelectorConfigMapDisplayName{}
}

func (CreateConfigMapRequestPathSelectorConfigMap) Metadata() CreateConfigMapRequestPathSelectorConfigMapMetadata {
	return CreateConfigMapRequestPathSelectorConfigMapMetadata{}
}

func (CreateConfigMapRequestPathSelectorConfigMap) Data() CreateConfigMapRequestPathSelectorConfigMapData {
	return CreateConfigMapRequestPathSelectorConfigMapData{}
}

func (CreateConfigMapRequestPathSelectorConfigMap) BinaryData() CreateConfigMapRequestPathSelectorConfigMapBinaryData {
	return CreateConfigMapRequestPathSelectorConfigMapBinaryData{}
}

type CreateConfigMapRequestPathSelectorConfigMapName struct{}

func (CreateConfigMapRequestPathSelectorConfigMapName) FieldPath() *CreateConfigMapRequest_FieldSubPath {
	return &CreateConfigMapRequest_FieldSubPath{
		selector: CreateConfigMapRequest_FieldPathSelectorConfigMap,
		subPath:  config_map.NewConfigMapFieldPathBuilder().Name().FieldPath(),
	}
}

func (s CreateConfigMapRequestPathSelectorConfigMapName) WithValue(value *config_map.Name) *CreateConfigMapRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*CreateConfigMapRequest_FieldSubPathValue)
}

func (s CreateConfigMapRequestPathSelectorConfigMapName) WithArrayOfValues(values []*config_map.Name) *CreateConfigMapRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CreateConfigMapRequest_FieldSubPathArrayOfValues)
}

type CreateConfigMapRequestPathSelectorConfigMapDisplayName struct{}

func (CreateConfigMapRequestPathSelectorConfigMapDisplayName) FieldPath() *CreateConfigMapRequest_FieldSubPath {
	return &CreateConfigMapRequest_FieldSubPath{
		selector: CreateConfigMapRequest_FieldPathSelectorConfigMap,
		subPath:  config_map.NewConfigMapFieldPathBuilder().DisplayName().FieldPath(),
	}
}

func (s CreateConfigMapRequestPathSelectorConfigMapDisplayName) WithValue(value string) *CreateConfigMapRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*CreateConfigMapRequest_FieldSubPathValue)
}

func (s CreateConfigMapRequestPathSelectorConfigMapDisplayName) WithArrayOfValues(values []string) *CreateConfigMapRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CreateConfigMapRequest_FieldSubPathArrayOfValues)
}

type CreateConfigMapRequestPathSelectorConfigMapMetadata struct{}

func (CreateConfigMapRequestPathSelectorConfigMapMetadata) FieldPath() *CreateConfigMapRequest_FieldSubPath {
	return &CreateConfigMapRequest_FieldSubPath{
		selector: CreateConfigMapRequest_FieldPathSelectorConfigMap,
		subPath:  config_map.NewConfigMapFieldPathBuilder().Metadata().FieldPath(),
	}
}

func (s CreateConfigMapRequestPathSelectorConfigMapMetadata) WithValue(value *ntt_meta.Meta) *CreateConfigMapRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*CreateConfigMapRequest_FieldSubPathValue)
}

func (s CreateConfigMapRequestPathSelectorConfigMapMetadata) WithArrayOfValues(values []*ntt_meta.Meta) *CreateConfigMapRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CreateConfigMapRequest_FieldSubPathArrayOfValues)
}

func (CreateConfigMapRequestPathSelectorConfigMapMetadata) CreateTime() CreateConfigMapRequestPathSelectorConfigMapMetadataCreateTime {
	return CreateConfigMapRequestPathSelectorConfigMapMetadataCreateTime{}
}

func (CreateConfigMapRequestPathSelectorConfigMapMetadata) UpdateTime() CreateConfigMapRequestPathSelectorConfigMapMetadataUpdateTime {
	return CreateConfigMapRequestPathSelectorConfigMapMetadataUpdateTime{}
}

func (CreateConfigMapRequestPathSelectorConfigMapMetadata) DeleteTime() CreateConfigMapRequestPathSelectorConfigMapMetadataDeleteTime {
	return CreateConfigMapRequestPathSelectorConfigMapMetadataDeleteTime{}
}

func (CreateConfigMapRequestPathSelectorConfigMapMetadata) Uuid() CreateConfigMapRequestPathSelectorConfigMapMetadataUuid {
	return CreateConfigMapRequestPathSelectorConfigMapMetadataUuid{}
}

func (CreateConfigMapRequestPathSelectorConfigMapMetadata) Tags() CreateConfigMapRequestPathSelectorConfigMapMetadataTags {
	return CreateConfigMapRequestPathSelectorConfigMapMetadataTags{}
}

func (CreateConfigMapRequestPathSelectorConfigMapMetadata) Labels() CreateConfigMapRequestPathSelectorConfigMapMetadataLabels {
	return CreateConfigMapRequestPathSelectorConfigMapMetadataLabels{}
}

func (CreateConfigMapRequestPathSelectorConfigMapMetadata) Annotations() CreateConfigMapRequestPathSelectorConfigMapMetadataAnnotations {
	return CreateConfigMapRequestPathSelectorConfigMapMetadataAnnotations{}
}

func (CreateConfigMapRequestPathSelectorConfigMapMetadata) Generation() CreateConfigMapRequestPathSelectorConfigMapMetadataGeneration {
	return CreateConfigMapRequestPathSelectorConfigMapMetadataGeneration{}
}

func (CreateConfigMapRequestPathSelectorConfigMapMetadata) ResourceVersion() CreateConfigMapRequestPathSelectorConfigMapMetadataResourceVersion {
	return CreateConfigMapRequestPathSelectorConfigMapMetadataResourceVersion{}
}

func (CreateConfigMapRequestPathSelectorConfigMapMetadata) OwnerReferences() CreateConfigMapRequestPathSelectorConfigMapMetadataOwnerReferences {
	return CreateConfigMapRequestPathSelectorConfigMapMetadataOwnerReferences{}
}

func (CreateConfigMapRequestPathSelectorConfigMapMetadata) Shards() CreateConfigMapRequestPathSelectorConfigMapMetadataShards {
	return CreateConfigMapRequestPathSelectorConfigMapMetadataShards{}
}

func (CreateConfigMapRequestPathSelectorConfigMapMetadata) Syncing() CreateConfigMapRequestPathSelectorConfigMapMetadataSyncing {
	return CreateConfigMapRequestPathSelectorConfigMapMetadataSyncing{}
}

func (CreateConfigMapRequestPathSelectorConfigMapMetadata) Lifecycle() CreateConfigMapRequestPathSelectorConfigMapMetadataLifecycle {
	return CreateConfigMapRequestPathSelectorConfigMapMetadataLifecycle{}
}

type CreateConfigMapRequestPathSelectorConfigMapMetadataCreateTime struct{}

func (CreateConfigMapRequestPathSelectorConfigMapMetadataCreateTime) FieldPath() *CreateConfigMapRequest_FieldSubPath {
	return &CreateConfigMapRequest_FieldSubPath{
		selector: CreateConfigMapRequest_FieldPathSelectorConfigMap,
		subPath:  config_map.NewConfigMapFieldPathBuilder().Metadata().CreateTime().FieldPath(),
	}
}

func (s CreateConfigMapRequestPathSelectorConfigMapMetadataCreateTime) WithValue(value *timestamp.Timestamp) *CreateConfigMapRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*CreateConfigMapRequest_FieldSubPathValue)
}

func (s CreateConfigMapRequestPathSelectorConfigMapMetadataCreateTime) WithArrayOfValues(values []*timestamp.Timestamp) *CreateConfigMapRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CreateConfigMapRequest_FieldSubPathArrayOfValues)
}

type CreateConfigMapRequestPathSelectorConfigMapMetadataUpdateTime struct{}

func (CreateConfigMapRequestPathSelectorConfigMapMetadataUpdateTime) FieldPath() *CreateConfigMapRequest_FieldSubPath {
	return &CreateConfigMapRequest_FieldSubPath{
		selector: CreateConfigMapRequest_FieldPathSelectorConfigMap,
		subPath:  config_map.NewConfigMapFieldPathBuilder().Metadata().UpdateTime().FieldPath(),
	}
}

func (s CreateConfigMapRequestPathSelectorConfigMapMetadataUpdateTime) WithValue(value *timestamp.Timestamp) *CreateConfigMapRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*CreateConfigMapRequest_FieldSubPathValue)
}

func (s CreateConfigMapRequestPathSelectorConfigMapMetadataUpdateTime) WithArrayOfValues(values []*timestamp.Timestamp) *CreateConfigMapRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CreateConfigMapRequest_FieldSubPathArrayOfValues)
}

type CreateConfigMapRequestPathSelectorConfigMapMetadataDeleteTime struct{}

func (CreateConfigMapRequestPathSelectorConfigMapMetadataDeleteTime) FieldPath() *CreateConfigMapRequest_FieldSubPath {
	return &CreateConfigMapRequest_FieldSubPath{
		selector: CreateConfigMapRequest_FieldPathSelectorConfigMap,
		subPath:  config_map.NewConfigMapFieldPathBuilder().Metadata().DeleteTime().FieldPath(),
	}
}

func (s CreateConfigMapRequestPathSelectorConfigMapMetadataDeleteTime) WithValue(value *timestamp.Timestamp) *CreateConfigMapRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*CreateConfigMapRequest_FieldSubPathValue)
}

func (s CreateConfigMapRequestPathSelectorConfigMapMetadataDeleteTime) WithArrayOfValues(values []*timestamp.Timestamp) *CreateConfigMapRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CreateConfigMapRequest_FieldSubPathArrayOfValues)
}

type CreateConfigMapRequestPathSelectorConfigMapMetadataUuid struct{}

func (CreateConfigMapRequestPathSelectorConfigMapMetadataUuid) FieldPath() *CreateConfigMapRequest_FieldSubPath {
	return &CreateConfigMapRequest_FieldSubPath{
		selector: CreateConfigMapRequest_FieldPathSelectorConfigMap,
		subPath:  config_map.NewConfigMapFieldPathBuilder().Metadata().Uuid().FieldPath(),
	}
}

func (s CreateConfigMapRequestPathSelectorConfigMapMetadataUuid) WithValue(value string) *CreateConfigMapRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*CreateConfigMapRequest_FieldSubPathValue)
}

func (s CreateConfigMapRequestPathSelectorConfigMapMetadataUuid) WithArrayOfValues(values []string) *CreateConfigMapRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CreateConfigMapRequest_FieldSubPathArrayOfValues)
}

type CreateConfigMapRequestPathSelectorConfigMapMetadataTags struct{}

func (CreateConfigMapRequestPathSelectorConfigMapMetadataTags) FieldPath() *CreateConfigMapRequest_FieldSubPath {
	return &CreateConfigMapRequest_FieldSubPath{
		selector: CreateConfigMapRequest_FieldPathSelectorConfigMap,
		subPath:  config_map.NewConfigMapFieldPathBuilder().Metadata().Tags().FieldPath(),
	}
}

func (s CreateConfigMapRequestPathSelectorConfigMapMetadataTags) WithValue(value []string) *CreateConfigMapRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*CreateConfigMapRequest_FieldSubPathValue)
}

func (s CreateConfigMapRequestPathSelectorConfigMapMetadataTags) WithArrayOfValues(values [][]string) *CreateConfigMapRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CreateConfigMapRequest_FieldSubPathArrayOfValues)
}

func (s CreateConfigMapRequestPathSelectorConfigMapMetadataTags) WithItemValue(value string) *CreateConfigMapRequest_FieldSubPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*CreateConfigMapRequest_FieldSubPathArrayItemValue)
}

type CreateConfigMapRequestPathSelectorConfigMapMetadataLabels struct{}

func (CreateConfigMapRequestPathSelectorConfigMapMetadataLabels) FieldPath() *CreateConfigMapRequest_FieldSubPath {
	return &CreateConfigMapRequest_FieldSubPath{
		selector: CreateConfigMapRequest_FieldPathSelectorConfigMap,
		subPath:  config_map.NewConfigMapFieldPathBuilder().Metadata().Labels().FieldPath(),
	}
}

func (s CreateConfigMapRequestPathSelectorConfigMapMetadataLabels) WithValue(value map[string]string) *CreateConfigMapRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*CreateConfigMapRequest_FieldSubPathValue)
}

func (s CreateConfigMapRequestPathSelectorConfigMapMetadataLabels) WithArrayOfValues(values []map[string]string) *CreateConfigMapRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CreateConfigMapRequest_FieldSubPathArrayOfValues)
}

func (CreateConfigMapRequestPathSelectorConfigMapMetadataLabels) WithKey(key string) CreateConfigMapRequestMapPathSelectorConfigMapMetadataLabels {
	return CreateConfigMapRequestMapPathSelectorConfigMapMetadataLabels{key: key}
}

type CreateConfigMapRequestMapPathSelectorConfigMapMetadataLabels struct {
	key string
}

func (s CreateConfigMapRequestMapPathSelectorConfigMapMetadataLabels) FieldPath() *CreateConfigMapRequest_FieldSubPath {
	return &CreateConfigMapRequest_FieldSubPath{
		selector: CreateConfigMapRequest_FieldPathSelectorConfigMap,
		subPath:  config_map.NewConfigMapFieldPathBuilder().Metadata().Labels().WithKey(s.key).FieldPath(),
	}
}

func (s CreateConfigMapRequestMapPathSelectorConfigMapMetadataLabels) WithValue(value string) *CreateConfigMapRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*CreateConfigMapRequest_FieldSubPathValue)
}

func (s CreateConfigMapRequestMapPathSelectorConfigMapMetadataLabels) WithArrayOfValues(values []string) *CreateConfigMapRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CreateConfigMapRequest_FieldSubPathArrayOfValues)
}

type CreateConfigMapRequestPathSelectorConfigMapMetadataAnnotations struct{}

func (CreateConfigMapRequestPathSelectorConfigMapMetadataAnnotations) FieldPath() *CreateConfigMapRequest_FieldSubPath {
	return &CreateConfigMapRequest_FieldSubPath{
		selector: CreateConfigMapRequest_FieldPathSelectorConfigMap,
		subPath:  config_map.NewConfigMapFieldPathBuilder().Metadata().Annotations().FieldPath(),
	}
}

func (s CreateConfigMapRequestPathSelectorConfigMapMetadataAnnotations) WithValue(value map[string]string) *CreateConfigMapRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*CreateConfigMapRequest_FieldSubPathValue)
}

func (s CreateConfigMapRequestPathSelectorConfigMapMetadataAnnotations) WithArrayOfValues(values []map[string]string) *CreateConfigMapRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CreateConfigMapRequest_FieldSubPathArrayOfValues)
}

func (CreateConfigMapRequestPathSelectorConfigMapMetadataAnnotations) WithKey(key string) CreateConfigMapRequestMapPathSelectorConfigMapMetadataAnnotations {
	return CreateConfigMapRequestMapPathSelectorConfigMapMetadataAnnotations{key: key}
}

type CreateConfigMapRequestMapPathSelectorConfigMapMetadataAnnotations struct {
	key string
}

func (s CreateConfigMapRequestMapPathSelectorConfigMapMetadataAnnotations) FieldPath() *CreateConfigMapRequest_FieldSubPath {
	return &CreateConfigMapRequest_FieldSubPath{
		selector: CreateConfigMapRequest_FieldPathSelectorConfigMap,
		subPath:  config_map.NewConfigMapFieldPathBuilder().Metadata().Annotations().WithKey(s.key).FieldPath(),
	}
}

func (s CreateConfigMapRequestMapPathSelectorConfigMapMetadataAnnotations) WithValue(value string) *CreateConfigMapRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*CreateConfigMapRequest_FieldSubPathValue)
}

func (s CreateConfigMapRequestMapPathSelectorConfigMapMetadataAnnotations) WithArrayOfValues(values []string) *CreateConfigMapRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CreateConfigMapRequest_FieldSubPathArrayOfValues)
}

type CreateConfigMapRequestPathSelectorConfigMapMetadataGeneration struct{}

func (CreateConfigMapRequestPathSelectorConfigMapMetadataGeneration) FieldPath() *CreateConfigMapRequest_FieldSubPath {
	return &CreateConfigMapRequest_FieldSubPath{
		selector: CreateConfigMapRequest_FieldPathSelectorConfigMap,
		subPath:  config_map.NewConfigMapFieldPathBuilder().Metadata().Generation().FieldPath(),
	}
}

func (s CreateConfigMapRequestPathSelectorConfigMapMetadataGeneration) WithValue(value int64) *CreateConfigMapRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*CreateConfigMapRequest_FieldSubPathValue)
}

func (s CreateConfigMapRequestPathSelectorConfigMapMetadataGeneration) WithArrayOfValues(values []int64) *CreateConfigMapRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CreateConfigMapRequest_FieldSubPathArrayOfValues)
}

type CreateConfigMapRequestPathSelectorConfigMapMetadataResourceVersion struct{}

func (CreateConfigMapRequestPathSelectorConfigMapMetadataResourceVersion) FieldPath() *CreateConfigMapRequest_FieldSubPath {
	return &CreateConfigMapRequest_FieldSubPath{
		selector: CreateConfigMapRequest_FieldPathSelectorConfigMap,
		subPath:  config_map.NewConfigMapFieldPathBuilder().Metadata().ResourceVersion().FieldPath(),
	}
}

func (s CreateConfigMapRequestPathSelectorConfigMapMetadataResourceVersion) WithValue(value string) *CreateConfigMapRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*CreateConfigMapRequest_FieldSubPathValue)
}

func (s CreateConfigMapRequestPathSelectorConfigMapMetadataResourceVersion) WithArrayOfValues(values []string) *CreateConfigMapRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CreateConfigMapRequest_FieldSubPathArrayOfValues)
}

type CreateConfigMapRequestPathSelectorConfigMapMetadataOwnerReferences struct{}

func (CreateConfigMapRequestPathSelectorConfigMapMetadataOwnerReferences) FieldPath() *CreateConfigMapRequest_FieldSubPath {
	return &CreateConfigMapRequest_FieldSubPath{
		selector: CreateConfigMapRequest_FieldPathSelectorConfigMap,
		subPath:  config_map.NewConfigMapFieldPathBuilder().Metadata().OwnerReferences().FieldPath(),
	}
}

func (s CreateConfigMapRequestPathSelectorConfigMapMetadataOwnerReferences) WithValue(value []*ntt_meta.OwnerReference) *CreateConfigMapRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*CreateConfigMapRequest_FieldSubPathValue)
}

func (s CreateConfigMapRequestPathSelectorConfigMapMetadataOwnerReferences) WithArrayOfValues(values [][]*ntt_meta.OwnerReference) *CreateConfigMapRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CreateConfigMapRequest_FieldSubPathArrayOfValues)
}

func (s CreateConfigMapRequestPathSelectorConfigMapMetadataOwnerReferences) WithItemValue(value *ntt_meta.OwnerReference) *CreateConfigMapRequest_FieldSubPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*CreateConfigMapRequest_FieldSubPathArrayItemValue)
}

func (CreateConfigMapRequestPathSelectorConfigMapMetadataOwnerReferences) Kind() CreateConfigMapRequestPathSelectorConfigMapMetadataOwnerReferencesKind {
	return CreateConfigMapRequestPathSelectorConfigMapMetadataOwnerReferencesKind{}
}

func (CreateConfigMapRequestPathSelectorConfigMapMetadataOwnerReferences) Version() CreateConfigMapRequestPathSelectorConfigMapMetadataOwnerReferencesVersion {
	return CreateConfigMapRequestPathSelectorConfigMapMetadataOwnerReferencesVersion{}
}

func (CreateConfigMapRequestPathSelectorConfigMapMetadataOwnerReferences) Name() CreateConfigMapRequestPathSelectorConfigMapMetadataOwnerReferencesName {
	return CreateConfigMapRequestPathSelectorConfigMapMetadataOwnerReferencesName{}
}

func (CreateConfigMapRequestPathSelectorConfigMapMetadataOwnerReferences) Region() CreateConfigMapRequestPathSelectorConfigMapMetadataOwnerReferencesRegion {
	return CreateConfigMapRequestPathSelectorConfigMapMetadataOwnerReferencesRegion{}
}

func (CreateConfigMapRequestPathSelectorConfigMapMetadataOwnerReferences) Controller() CreateConfigMapRequestPathSelectorConfigMapMetadataOwnerReferencesController {
	return CreateConfigMapRequestPathSelectorConfigMapMetadataOwnerReferencesController{}
}

func (CreateConfigMapRequestPathSelectorConfigMapMetadataOwnerReferences) BlockOwnerDeletion() CreateConfigMapRequestPathSelectorConfigMapMetadataOwnerReferencesBlockOwnerDeletion {
	return CreateConfigMapRequestPathSelectorConfigMapMetadataOwnerReferencesBlockOwnerDeletion{}
}

func (CreateConfigMapRequestPathSelectorConfigMapMetadataOwnerReferences) RequiresOwnerReference() CreateConfigMapRequestPathSelectorConfigMapMetadataOwnerReferencesRequiresOwnerReference {
	return CreateConfigMapRequestPathSelectorConfigMapMetadataOwnerReferencesRequiresOwnerReference{}
}

type CreateConfigMapRequestPathSelectorConfigMapMetadataOwnerReferencesKind struct{}

func (CreateConfigMapRequestPathSelectorConfigMapMetadataOwnerReferencesKind) FieldPath() *CreateConfigMapRequest_FieldSubPath {
	return &CreateConfigMapRequest_FieldSubPath{
		selector: CreateConfigMapRequest_FieldPathSelectorConfigMap,
		subPath:  config_map.NewConfigMapFieldPathBuilder().Metadata().OwnerReferences().Kind().FieldPath(),
	}
}

func (s CreateConfigMapRequestPathSelectorConfigMapMetadataOwnerReferencesKind) WithValue(value string) *CreateConfigMapRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*CreateConfigMapRequest_FieldSubPathValue)
}

func (s CreateConfigMapRequestPathSelectorConfigMapMetadataOwnerReferencesKind) WithArrayOfValues(values []string) *CreateConfigMapRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CreateConfigMapRequest_FieldSubPathArrayOfValues)
}

type CreateConfigMapRequestPathSelectorConfigMapMetadataOwnerReferencesVersion struct{}

func (CreateConfigMapRequestPathSelectorConfigMapMetadataOwnerReferencesVersion) FieldPath() *CreateConfigMapRequest_FieldSubPath {
	return &CreateConfigMapRequest_FieldSubPath{
		selector: CreateConfigMapRequest_FieldPathSelectorConfigMap,
		subPath:  config_map.NewConfigMapFieldPathBuilder().Metadata().OwnerReferences().Version().FieldPath(),
	}
}

func (s CreateConfigMapRequestPathSelectorConfigMapMetadataOwnerReferencesVersion) WithValue(value string) *CreateConfigMapRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*CreateConfigMapRequest_FieldSubPathValue)
}

func (s CreateConfigMapRequestPathSelectorConfigMapMetadataOwnerReferencesVersion) WithArrayOfValues(values []string) *CreateConfigMapRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CreateConfigMapRequest_FieldSubPathArrayOfValues)
}

type CreateConfigMapRequestPathSelectorConfigMapMetadataOwnerReferencesName struct{}

func (CreateConfigMapRequestPathSelectorConfigMapMetadataOwnerReferencesName) FieldPath() *CreateConfigMapRequest_FieldSubPath {
	return &CreateConfigMapRequest_FieldSubPath{
		selector: CreateConfigMapRequest_FieldPathSelectorConfigMap,
		subPath:  config_map.NewConfigMapFieldPathBuilder().Metadata().OwnerReferences().Name().FieldPath(),
	}
}

func (s CreateConfigMapRequestPathSelectorConfigMapMetadataOwnerReferencesName) WithValue(value string) *CreateConfigMapRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*CreateConfigMapRequest_FieldSubPathValue)
}

func (s CreateConfigMapRequestPathSelectorConfigMapMetadataOwnerReferencesName) WithArrayOfValues(values []string) *CreateConfigMapRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CreateConfigMapRequest_FieldSubPathArrayOfValues)
}

type CreateConfigMapRequestPathSelectorConfigMapMetadataOwnerReferencesRegion struct{}

func (CreateConfigMapRequestPathSelectorConfigMapMetadataOwnerReferencesRegion) FieldPath() *CreateConfigMapRequest_FieldSubPath {
	return &CreateConfigMapRequest_FieldSubPath{
		selector: CreateConfigMapRequest_FieldPathSelectorConfigMap,
		subPath:  config_map.NewConfigMapFieldPathBuilder().Metadata().OwnerReferences().Region().FieldPath(),
	}
}

func (s CreateConfigMapRequestPathSelectorConfigMapMetadataOwnerReferencesRegion) WithValue(value string) *CreateConfigMapRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*CreateConfigMapRequest_FieldSubPathValue)
}

func (s CreateConfigMapRequestPathSelectorConfigMapMetadataOwnerReferencesRegion) WithArrayOfValues(values []string) *CreateConfigMapRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CreateConfigMapRequest_FieldSubPathArrayOfValues)
}

type CreateConfigMapRequestPathSelectorConfigMapMetadataOwnerReferencesController struct{}

func (CreateConfigMapRequestPathSelectorConfigMapMetadataOwnerReferencesController) FieldPath() *CreateConfigMapRequest_FieldSubPath {
	return &CreateConfigMapRequest_FieldSubPath{
		selector: CreateConfigMapRequest_FieldPathSelectorConfigMap,
		subPath:  config_map.NewConfigMapFieldPathBuilder().Metadata().OwnerReferences().Controller().FieldPath(),
	}
}

func (s CreateConfigMapRequestPathSelectorConfigMapMetadataOwnerReferencesController) WithValue(value bool) *CreateConfigMapRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*CreateConfigMapRequest_FieldSubPathValue)
}

func (s CreateConfigMapRequestPathSelectorConfigMapMetadataOwnerReferencesController) WithArrayOfValues(values []bool) *CreateConfigMapRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CreateConfigMapRequest_FieldSubPathArrayOfValues)
}

type CreateConfigMapRequestPathSelectorConfigMapMetadataOwnerReferencesBlockOwnerDeletion struct{}

func (CreateConfigMapRequestPathSelectorConfigMapMetadataOwnerReferencesBlockOwnerDeletion) FieldPath() *CreateConfigMapRequest_FieldSubPath {
	return &CreateConfigMapRequest_FieldSubPath{
		selector: CreateConfigMapRequest_FieldPathSelectorConfigMap,
		subPath:  config_map.NewConfigMapFieldPathBuilder().Metadata().OwnerReferences().BlockOwnerDeletion().FieldPath(),
	}
}

func (s CreateConfigMapRequestPathSelectorConfigMapMetadataOwnerReferencesBlockOwnerDeletion) WithValue(value bool) *CreateConfigMapRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*CreateConfigMapRequest_FieldSubPathValue)
}

func (s CreateConfigMapRequestPathSelectorConfigMapMetadataOwnerReferencesBlockOwnerDeletion) WithArrayOfValues(values []bool) *CreateConfigMapRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CreateConfigMapRequest_FieldSubPathArrayOfValues)
}

type CreateConfigMapRequestPathSelectorConfigMapMetadataOwnerReferencesRequiresOwnerReference struct{}

func (CreateConfigMapRequestPathSelectorConfigMapMetadataOwnerReferencesRequiresOwnerReference) FieldPath() *CreateConfigMapRequest_FieldSubPath {
	return &CreateConfigMapRequest_FieldSubPath{
		selector: CreateConfigMapRequest_FieldPathSelectorConfigMap,
		subPath:  config_map.NewConfigMapFieldPathBuilder().Metadata().OwnerReferences().RequiresOwnerReference().FieldPath(),
	}
}

func (s CreateConfigMapRequestPathSelectorConfigMapMetadataOwnerReferencesRequiresOwnerReference) WithValue(value bool) *CreateConfigMapRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*CreateConfigMapRequest_FieldSubPathValue)
}

func (s CreateConfigMapRequestPathSelectorConfigMapMetadataOwnerReferencesRequiresOwnerReference) WithArrayOfValues(values []bool) *CreateConfigMapRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CreateConfigMapRequest_FieldSubPathArrayOfValues)
}

type CreateConfigMapRequestPathSelectorConfigMapMetadataShards struct{}

func (CreateConfigMapRequestPathSelectorConfigMapMetadataShards) FieldPath() *CreateConfigMapRequest_FieldSubPath {
	return &CreateConfigMapRequest_FieldSubPath{
		selector: CreateConfigMapRequest_FieldPathSelectorConfigMap,
		subPath:  config_map.NewConfigMapFieldPathBuilder().Metadata().Shards().FieldPath(),
	}
}

func (s CreateConfigMapRequestPathSelectorConfigMapMetadataShards) WithValue(value map[string]int64) *CreateConfigMapRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*CreateConfigMapRequest_FieldSubPathValue)
}

func (s CreateConfigMapRequestPathSelectorConfigMapMetadataShards) WithArrayOfValues(values []map[string]int64) *CreateConfigMapRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CreateConfigMapRequest_FieldSubPathArrayOfValues)
}

func (CreateConfigMapRequestPathSelectorConfigMapMetadataShards) WithKey(key string) CreateConfigMapRequestMapPathSelectorConfigMapMetadataShards {
	return CreateConfigMapRequestMapPathSelectorConfigMapMetadataShards{key: key}
}

type CreateConfigMapRequestMapPathSelectorConfigMapMetadataShards struct {
	key string
}

func (s CreateConfigMapRequestMapPathSelectorConfigMapMetadataShards) FieldPath() *CreateConfigMapRequest_FieldSubPath {
	return &CreateConfigMapRequest_FieldSubPath{
		selector: CreateConfigMapRequest_FieldPathSelectorConfigMap,
		subPath:  config_map.NewConfigMapFieldPathBuilder().Metadata().Shards().WithKey(s.key).FieldPath(),
	}
}

func (s CreateConfigMapRequestMapPathSelectorConfigMapMetadataShards) WithValue(value int64) *CreateConfigMapRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*CreateConfigMapRequest_FieldSubPathValue)
}

func (s CreateConfigMapRequestMapPathSelectorConfigMapMetadataShards) WithArrayOfValues(values []int64) *CreateConfigMapRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CreateConfigMapRequest_FieldSubPathArrayOfValues)
}

type CreateConfigMapRequestPathSelectorConfigMapMetadataSyncing struct{}

func (CreateConfigMapRequestPathSelectorConfigMapMetadataSyncing) FieldPath() *CreateConfigMapRequest_FieldSubPath {
	return &CreateConfigMapRequest_FieldSubPath{
		selector: CreateConfigMapRequest_FieldPathSelectorConfigMap,
		subPath:  config_map.NewConfigMapFieldPathBuilder().Metadata().Syncing().FieldPath(),
	}
}

func (s CreateConfigMapRequestPathSelectorConfigMapMetadataSyncing) WithValue(value *ntt_meta.SyncingMeta) *CreateConfigMapRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*CreateConfigMapRequest_FieldSubPathValue)
}

func (s CreateConfigMapRequestPathSelectorConfigMapMetadataSyncing) WithArrayOfValues(values []*ntt_meta.SyncingMeta) *CreateConfigMapRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CreateConfigMapRequest_FieldSubPathArrayOfValues)
}

func (CreateConfigMapRequestPathSelectorConfigMapMetadataSyncing) OwningRegion() CreateConfigMapRequestPathSelectorConfigMapMetadataSyncingOwningRegion {
	return CreateConfigMapRequestPathSelectorConfigMapMetadataSyncingOwningRegion{}
}

func (CreateConfigMapRequestPathSelectorConfigMapMetadataSyncing) Regions() CreateConfigMapRequestPathSelectorConfigMapMetadataSyncingRegions {
	return CreateConfigMapRequestPathSelectorConfigMapMetadataSyncingRegions{}
}

type CreateConfigMapRequestPathSelectorConfigMapMetadataSyncingOwningRegion struct{}

func (CreateConfigMapRequestPathSelectorConfigMapMetadataSyncingOwningRegion) FieldPath() *CreateConfigMapRequest_FieldSubPath {
	return &CreateConfigMapRequest_FieldSubPath{
		selector: CreateConfigMapRequest_FieldPathSelectorConfigMap,
		subPath:  config_map.NewConfigMapFieldPathBuilder().Metadata().Syncing().OwningRegion().FieldPath(),
	}
}

func (s CreateConfigMapRequestPathSelectorConfigMapMetadataSyncingOwningRegion) WithValue(value string) *CreateConfigMapRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*CreateConfigMapRequest_FieldSubPathValue)
}

func (s CreateConfigMapRequestPathSelectorConfigMapMetadataSyncingOwningRegion) WithArrayOfValues(values []string) *CreateConfigMapRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CreateConfigMapRequest_FieldSubPathArrayOfValues)
}

type CreateConfigMapRequestPathSelectorConfigMapMetadataSyncingRegions struct{}

func (CreateConfigMapRequestPathSelectorConfigMapMetadataSyncingRegions) FieldPath() *CreateConfigMapRequest_FieldSubPath {
	return &CreateConfigMapRequest_FieldSubPath{
		selector: CreateConfigMapRequest_FieldPathSelectorConfigMap,
		subPath:  config_map.NewConfigMapFieldPathBuilder().Metadata().Syncing().Regions().FieldPath(),
	}
}

func (s CreateConfigMapRequestPathSelectorConfigMapMetadataSyncingRegions) WithValue(value []string) *CreateConfigMapRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*CreateConfigMapRequest_FieldSubPathValue)
}

func (s CreateConfigMapRequestPathSelectorConfigMapMetadataSyncingRegions) WithArrayOfValues(values [][]string) *CreateConfigMapRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CreateConfigMapRequest_FieldSubPathArrayOfValues)
}

func (s CreateConfigMapRequestPathSelectorConfigMapMetadataSyncingRegions) WithItemValue(value string) *CreateConfigMapRequest_FieldSubPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*CreateConfigMapRequest_FieldSubPathArrayItemValue)
}

type CreateConfigMapRequestPathSelectorConfigMapMetadataLifecycle struct{}

func (CreateConfigMapRequestPathSelectorConfigMapMetadataLifecycle) FieldPath() *CreateConfigMapRequest_FieldSubPath {
	return &CreateConfigMapRequest_FieldSubPath{
		selector: CreateConfigMapRequest_FieldPathSelectorConfigMap,
		subPath:  config_map.NewConfigMapFieldPathBuilder().Metadata().Lifecycle().FieldPath(),
	}
}

func (s CreateConfigMapRequestPathSelectorConfigMapMetadataLifecycle) WithValue(value *ntt_meta.Lifecycle) *CreateConfigMapRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*CreateConfigMapRequest_FieldSubPathValue)
}

func (s CreateConfigMapRequestPathSelectorConfigMapMetadataLifecycle) WithArrayOfValues(values []*ntt_meta.Lifecycle) *CreateConfigMapRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CreateConfigMapRequest_FieldSubPathArrayOfValues)
}

func (CreateConfigMapRequestPathSelectorConfigMapMetadataLifecycle) State() CreateConfigMapRequestPathSelectorConfigMapMetadataLifecycleState {
	return CreateConfigMapRequestPathSelectorConfigMapMetadataLifecycleState{}
}

func (CreateConfigMapRequestPathSelectorConfigMapMetadataLifecycle) BlockDeletion() CreateConfigMapRequestPathSelectorConfigMapMetadataLifecycleBlockDeletion {
	return CreateConfigMapRequestPathSelectorConfigMapMetadataLifecycleBlockDeletion{}
}

type CreateConfigMapRequestPathSelectorConfigMapMetadataLifecycleState struct{}

func (CreateConfigMapRequestPathSelectorConfigMapMetadataLifecycleState) FieldPath() *CreateConfigMapRequest_FieldSubPath {
	return &CreateConfigMapRequest_FieldSubPath{
		selector: CreateConfigMapRequest_FieldPathSelectorConfigMap,
		subPath:  config_map.NewConfigMapFieldPathBuilder().Metadata().Lifecycle().State().FieldPath(),
	}
}

func (s CreateConfigMapRequestPathSelectorConfigMapMetadataLifecycleState) WithValue(value ntt_meta.Lifecycle_State) *CreateConfigMapRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*CreateConfigMapRequest_FieldSubPathValue)
}

func (s CreateConfigMapRequestPathSelectorConfigMapMetadataLifecycleState) WithArrayOfValues(values []ntt_meta.Lifecycle_State) *CreateConfigMapRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CreateConfigMapRequest_FieldSubPathArrayOfValues)
}

type CreateConfigMapRequestPathSelectorConfigMapMetadataLifecycleBlockDeletion struct{}

func (CreateConfigMapRequestPathSelectorConfigMapMetadataLifecycleBlockDeletion) FieldPath() *CreateConfigMapRequest_FieldSubPath {
	return &CreateConfigMapRequest_FieldSubPath{
		selector: CreateConfigMapRequest_FieldPathSelectorConfigMap,
		subPath:  config_map.NewConfigMapFieldPathBuilder().Metadata().Lifecycle().BlockDeletion().FieldPath(),
	}
}

func (s CreateConfigMapRequestPathSelectorConfigMapMetadataLifecycleBlockDeletion) WithValue(value bool) *CreateConfigMapRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*CreateConfigMapRequest_FieldSubPathValue)
}

func (s CreateConfigMapRequestPathSelectorConfigMapMetadataLifecycleBlockDeletion) WithArrayOfValues(values []bool) *CreateConfigMapRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CreateConfigMapRequest_FieldSubPathArrayOfValues)
}

type CreateConfigMapRequestPathSelectorConfigMapData struct{}

func (CreateConfigMapRequestPathSelectorConfigMapData) FieldPath() *CreateConfigMapRequest_FieldSubPath {
	return &CreateConfigMapRequest_FieldSubPath{
		selector: CreateConfigMapRequest_FieldPathSelectorConfigMap,
		subPath:  config_map.NewConfigMapFieldPathBuilder().Data().FieldPath(),
	}
}

func (s CreateConfigMapRequestPathSelectorConfigMapData) WithValue(value map[string]string) *CreateConfigMapRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*CreateConfigMapRequest_FieldSubPathValue)
}

func (s CreateConfigMapRequestPathSelectorConfigMapData) WithArrayOfValues(values []map[string]string) *CreateConfigMapRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CreateConfigMapRequest_FieldSubPathArrayOfValues)
}

func (CreateConfigMapRequestPathSelectorConfigMapData) WithKey(key string) CreateConfigMapRequestMapPathSelectorConfigMapData {
	return CreateConfigMapRequestMapPathSelectorConfigMapData{key: key}
}

type CreateConfigMapRequestMapPathSelectorConfigMapData struct {
	key string
}

func (s CreateConfigMapRequestMapPathSelectorConfigMapData) FieldPath() *CreateConfigMapRequest_FieldSubPath {
	return &CreateConfigMapRequest_FieldSubPath{
		selector: CreateConfigMapRequest_FieldPathSelectorConfigMap,
		subPath:  config_map.NewConfigMapFieldPathBuilder().Data().WithKey(s.key).FieldPath(),
	}
}

func (s CreateConfigMapRequestMapPathSelectorConfigMapData) WithValue(value string) *CreateConfigMapRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*CreateConfigMapRequest_FieldSubPathValue)
}

func (s CreateConfigMapRequestMapPathSelectorConfigMapData) WithArrayOfValues(values []string) *CreateConfigMapRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CreateConfigMapRequest_FieldSubPathArrayOfValues)
}

type CreateConfigMapRequestPathSelectorConfigMapBinaryData struct{}

func (CreateConfigMapRequestPathSelectorConfigMapBinaryData) FieldPath() *CreateConfigMapRequest_FieldSubPath {
	return &CreateConfigMapRequest_FieldSubPath{
		selector: CreateConfigMapRequest_FieldPathSelectorConfigMap,
		subPath:  config_map.NewConfigMapFieldPathBuilder().BinaryData().FieldPath(),
	}
}

func (s CreateConfigMapRequestPathSelectorConfigMapBinaryData) WithValue(value map[string][]byte) *CreateConfigMapRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*CreateConfigMapRequest_FieldSubPathValue)
}

func (s CreateConfigMapRequestPathSelectorConfigMapBinaryData) WithArrayOfValues(values []map[string][]byte) *CreateConfigMapRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CreateConfigMapRequest_FieldSubPathArrayOfValues)
}

func (CreateConfigMapRequestPathSelectorConfigMapBinaryData) WithKey(key string) CreateConfigMapRequestMapPathSelectorConfigMapBinaryData {
	return CreateConfigMapRequestMapPathSelectorConfigMapBinaryData{key: key}
}

type CreateConfigMapRequestMapPathSelectorConfigMapBinaryData struct {
	key string
}

func (s CreateConfigMapRequestMapPathSelectorConfigMapBinaryData) FieldPath() *CreateConfigMapRequest_FieldSubPath {
	return &CreateConfigMapRequest_FieldSubPath{
		selector: CreateConfigMapRequest_FieldPathSelectorConfigMap,
		subPath:  config_map.NewConfigMapFieldPathBuilder().BinaryData().WithKey(s.key).FieldPath(),
	}
}

func (s CreateConfigMapRequestMapPathSelectorConfigMapBinaryData) WithValue(value []byte) *CreateConfigMapRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*CreateConfigMapRequest_FieldSubPathValue)
}

func (s CreateConfigMapRequestMapPathSelectorConfigMapBinaryData) WithArrayOfValues(values [][]byte) *CreateConfigMapRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*CreateConfigMapRequest_FieldSubPathArrayOfValues)
}

type UpdateConfigMapRequestFieldPathBuilder struct{}

func NewUpdateConfigMapRequestFieldPathBuilder() UpdateConfigMapRequestFieldPathBuilder {
	return UpdateConfigMapRequestFieldPathBuilder{}
}
func (UpdateConfigMapRequestFieldPathBuilder) ConfigMap() UpdateConfigMapRequestPathSelectorConfigMap {
	return UpdateConfigMapRequestPathSelectorConfigMap{}
}
func (UpdateConfigMapRequestFieldPathBuilder) UpdateMask() UpdateConfigMapRequestPathSelectorUpdateMask {
	return UpdateConfigMapRequestPathSelectorUpdateMask{}
}
func (UpdateConfigMapRequestFieldPathBuilder) Cas() UpdateConfigMapRequestPathSelectorCas {
	return UpdateConfigMapRequestPathSelectorCas{}
}

type UpdateConfigMapRequestPathSelectorConfigMap struct{}

func (UpdateConfigMapRequestPathSelectorConfigMap) FieldPath() *UpdateConfigMapRequest_FieldTerminalPath {
	return &UpdateConfigMapRequest_FieldTerminalPath{selector: UpdateConfigMapRequest_FieldPathSelectorConfigMap}
}

func (s UpdateConfigMapRequestPathSelectorConfigMap) WithValue(value *config_map.ConfigMap) *UpdateConfigMapRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateConfigMapRequest_FieldTerminalPathValue)
}

func (s UpdateConfigMapRequestPathSelectorConfigMap) WithArrayOfValues(values []*config_map.ConfigMap) *UpdateConfigMapRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateConfigMapRequest_FieldTerminalPathArrayOfValues)
}

func (UpdateConfigMapRequestPathSelectorConfigMap) WithSubPath(subPath config_map.ConfigMap_FieldPath) *UpdateConfigMapRequest_FieldSubPath {
	return &UpdateConfigMapRequest_FieldSubPath{selector: UpdateConfigMapRequest_FieldPathSelectorConfigMap, subPath: subPath}
}

func (s UpdateConfigMapRequestPathSelectorConfigMap) WithSubValue(subPathValue config_map.ConfigMap_FieldPathValue) *UpdateConfigMapRequest_FieldSubPathValue {
	return &UpdateConfigMapRequest_FieldSubPathValue{UpdateConfigMapRequest_FieldPath: s.WithSubPath(subPathValue), subPathValue: subPathValue}
}

func (s UpdateConfigMapRequestPathSelectorConfigMap) WithSubArrayOfValues(subPathArrayOfValues config_map.ConfigMap_FieldPathArrayOfValues) *UpdateConfigMapRequest_FieldSubPathArrayOfValues {
	return &UpdateConfigMapRequest_FieldSubPathArrayOfValues{UpdateConfigMapRequest_FieldPath: s.WithSubPath(subPathArrayOfValues), subPathArrayOfValues: subPathArrayOfValues}
}

func (s UpdateConfigMapRequestPathSelectorConfigMap) WithSubArrayItemValue(subPathArrayItemValue config_map.ConfigMap_FieldPathArrayItemValue) *UpdateConfigMapRequest_FieldSubPathArrayItemValue {
	return &UpdateConfigMapRequest_FieldSubPathArrayItemValue{UpdateConfigMapRequest_FieldPath: s.WithSubPath(subPathArrayItemValue), subPathItemValue: subPathArrayItemValue}
}

func (UpdateConfigMapRequestPathSelectorConfigMap) Name() UpdateConfigMapRequestPathSelectorConfigMapName {
	return UpdateConfigMapRequestPathSelectorConfigMapName{}
}

func (UpdateConfigMapRequestPathSelectorConfigMap) DisplayName() UpdateConfigMapRequestPathSelectorConfigMapDisplayName {
	return UpdateConfigMapRequestPathSelectorConfigMapDisplayName{}
}

func (UpdateConfigMapRequestPathSelectorConfigMap) Metadata() UpdateConfigMapRequestPathSelectorConfigMapMetadata {
	return UpdateConfigMapRequestPathSelectorConfigMapMetadata{}
}

func (UpdateConfigMapRequestPathSelectorConfigMap) Data() UpdateConfigMapRequestPathSelectorConfigMapData {
	return UpdateConfigMapRequestPathSelectorConfigMapData{}
}

func (UpdateConfigMapRequestPathSelectorConfigMap) BinaryData() UpdateConfigMapRequestPathSelectorConfigMapBinaryData {
	return UpdateConfigMapRequestPathSelectorConfigMapBinaryData{}
}

type UpdateConfigMapRequestPathSelectorConfigMapName struct{}

func (UpdateConfigMapRequestPathSelectorConfigMapName) FieldPath() *UpdateConfigMapRequest_FieldSubPath {
	return &UpdateConfigMapRequest_FieldSubPath{
		selector: UpdateConfigMapRequest_FieldPathSelectorConfigMap,
		subPath:  config_map.NewConfigMapFieldPathBuilder().Name().FieldPath(),
	}
}

func (s UpdateConfigMapRequestPathSelectorConfigMapName) WithValue(value *config_map.Name) *UpdateConfigMapRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateConfigMapRequest_FieldSubPathValue)
}

func (s UpdateConfigMapRequestPathSelectorConfigMapName) WithArrayOfValues(values []*config_map.Name) *UpdateConfigMapRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateConfigMapRequest_FieldSubPathArrayOfValues)
}

type UpdateConfigMapRequestPathSelectorConfigMapDisplayName struct{}

func (UpdateConfigMapRequestPathSelectorConfigMapDisplayName) FieldPath() *UpdateConfigMapRequest_FieldSubPath {
	return &UpdateConfigMapRequest_FieldSubPath{
		selector: UpdateConfigMapRequest_FieldPathSelectorConfigMap,
		subPath:  config_map.NewConfigMapFieldPathBuilder().DisplayName().FieldPath(),
	}
}

func (s UpdateConfigMapRequestPathSelectorConfigMapDisplayName) WithValue(value string) *UpdateConfigMapRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateConfigMapRequest_FieldSubPathValue)
}

func (s UpdateConfigMapRequestPathSelectorConfigMapDisplayName) WithArrayOfValues(values []string) *UpdateConfigMapRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateConfigMapRequest_FieldSubPathArrayOfValues)
}

type UpdateConfigMapRequestPathSelectorConfigMapMetadata struct{}

func (UpdateConfigMapRequestPathSelectorConfigMapMetadata) FieldPath() *UpdateConfigMapRequest_FieldSubPath {
	return &UpdateConfigMapRequest_FieldSubPath{
		selector: UpdateConfigMapRequest_FieldPathSelectorConfigMap,
		subPath:  config_map.NewConfigMapFieldPathBuilder().Metadata().FieldPath(),
	}
}

func (s UpdateConfigMapRequestPathSelectorConfigMapMetadata) WithValue(value *ntt_meta.Meta) *UpdateConfigMapRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateConfigMapRequest_FieldSubPathValue)
}

func (s UpdateConfigMapRequestPathSelectorConfigMapMetadata) WithArrayOfValues(values []*ntt_meta.Meta) *UpdateConfigMapRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateConfigMapRequest_FieldSubPathArrayOfValues)
}

func (UpdateConfigMapRequestPathSelectorConfigMapMetadata) CreateTime() UpdateConfigMapRequestPathSelectorConfigMapMetadataCreateTime {
	return UpdateConfigMapRequestPathSelectorConfigMapMetadataCreateTime{}
}

func (UpdateConfigMapRequestPathSelectorConfigMapMetadata) UpdateTime() UpdateConfigMapRequestPathSelectorConfigMapMetadataUpdateTime {
	return UpdateConfigMapRequestPathSelectorConfigMapMetadataUpdateTime{}
}

func (UpdateConfigMapRequestPathSelectorConfigMapMetadata) DeleteTime() UpdateConfigMapRequestPathSelectorConfigMapMetadataDeleteTime {
	return UpdateConfigMapRequestPathSelectorConfigMapMetadataDeleteTime{}
}

func (UpdateConfigMapRequestPathSelectorConfigMapMetadata) Uuid() UpdateConfigMapRequestPathSelectorConfigMapMetadataUuid {
	return UpdateConfigMapRequestPathSelectorConfigMapMetadataUuid{}
}

func (UpdateConfigMapRequestPathSelectorConfigMapMetadata) Tags() UpdateConfigMapRequestPathSelectorConfigMapMetadataTags {
	return UpdateConfigMapRequestPathSelectorConfigMapMetadataTags{}
}

func (UpdateConfigMapRequestPathSelectorConfigMapMetadata) Labels() UpdateConfigMapRequestPathSelectorConfigMapMetadataLabels {
	return UpdateConfigMapRequestPathSelectorConfigMapMetadataLabels{}
}

func (UpdateConfigMapRequestPathSelectorConfigMapMetadata) Annotations() UpdateConfigMapRequestPathSelectorConfigMapMetadataAnnotations {
	return UpdateConfigMapRequestPathSelectorConfigMapMetadataAnnotations{}
}

func (UpdateConfigMapRequestPathSelectorConfigMapMetadata) Generation() UpdateConfigMapRequestPathSelectorConfigMapMetadataGeneration {
	return UpdateConfigMapRequestPathSelectorConfigMapMetadataGeneration{}
}

func (UpdateConfigMapRequestPathSelectorConfigMapMetadata) ResourceVersion() UpdateConfigMapRequestPathSelectorConfigMapMetadataResourceVersion {
	return UpdateConfigMapRequestPathSelectorConfigMapMetadataResourceVersion{}
}

func (UpdateConfigMapRequestPathSelectorConfigMapMetadata) OwnerReferences() UpdateConfigMapRequestPathSelectorConfigMapMetadataOwnerReferences {
	return UpdateConfigMapRequestPathSelectorConfigMapMetadataOwnerReferences{}
}

func (UpdateConfigMapRequestPathSelectorConfigMapMetadata) Shards() UpdateConfigMapRequestPathSelectorConfigMapMetadataShards {
	return UpdateConfigMapRequestPathSelectorConfigMapMetadataShards{}
}

func (UpdateConfigMapRequestPathSelectorConfigMapMetadata) Syncing() UpdateConfigMapRequestPathSelectorConfigMapMetadataSyncing {
	return UpdateConfigMapRequestPathSelectorConfigMapMetadataSyncing{}
}

func (UpdateConfigMapRequestPathSelectorConfigMapMetadata) Lifecycle() UpdateConfigMapRequestPathSelectorConfigMapMetadataLifecycle {
	return UpdateConfigMapRequestPathSelectorConfigMapMetadataLifecycle{}
}

type UpdateConfigMapRequestPathSelectorConfigMapMetadataCreateTime struct{}

func (UpdateConfigMapRequestPathSelectorConfigMapMetadataCreateTime) FieldPath() *UpdateConfigMapRequest_FieldSubPath {
	return &UpdateConfigMapRequest_FieldSubPath{
		selector: UpdateConfigMapRequest_FieldPathSelectorConfigMap,
		subPath:  config_map.NewConfigMapFieldPathBuilder().Metadata().CreateTime().FieldPath(),
	}
}

func (s UpdateConfigMapRequestPathSelectorConfigMapMetadataCreateTime) WithValue(value *timestamp.Timestamp) *UpdateConfigMapRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateConfigMapRequest_FieldSubPathValue)
}

func (s UpdateConfigMapRequestPathSelectorConfigMapMetadataCreateTime) WithArrayOfValues(values []*timestamp.Timestamp) *UpdateConfigMapRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateConfigMapRequest_FieldSubPathArrayOfValues)
}

type UpdateConfigMapRequestPathSelectorConfigMapMetadataUpdateTime struct{}

func (UpdateConfigMapRequestPathSelectorConfigMapMetadataUpdateTime) FieldPath() *UpdateConfigMapRequest_FieldSubPath {
	return &UpdateConfigMapRequest_FieldSubPath{
		selector: UpdateConfigMapRequest_FieldPathSelectorConfigMap,
		subPath:  config_map.NewConfigMapFieldPathBuilder().Metadata().UpdateTime().FieldPath(),
	}
}

func (s UpdateConfigMapRequestPathSelectorConfigMapMetadataUpdateTime) WithValue(value *timestamp.Timestamp) *UpdateConfigMapRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateConfigMapRequest_FieldSubPathValue)
}

func (s UpdateConfigMapRequestPathSelectorConfigMapMetadataUpdateTime) WithArrayOfValues(values []*timestamp.Timestamp) *UpdateConfigMapRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateConfigMapRequest_FieldSubPathArrayOfValues)
}

type UpdateConfigMapRequestPathSelectorConfigMapMetadataDeleteTime struct{}

func (UpdateConfigMapRequestPathSelectorConfigMapMetadataDeleteTime) FieldPath() *UpdateConfigMapRequest_FieldSubPath {
	return &UpdateConfigMapRequest_FieldSubPath{
		selector: UpdateConfigMapRequest_FieldPathSelectorConfigMap,
		subPath:  config_map.NewConfigMapFieldPathBuilder().Metadata().DeleteTime().FieldPath(),
	}
}

func (s UpdateConfigMapRequestPathSelectorConfigMapMetadataDeleteTime) WithValue(value *timestamp.Timestamp) *UpdateConfigMapRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateConfigMapRequest_FieldSubPathValue)
}

func (s UpdateConfigMapRequestPathSelectorConfigMapMetadataDeleteTime) WithArrayOfValues(values []*timestamp.Timestamp) *UpdateConfigMapRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateConfigMapRequest_FieldSubPathArrayOfValues)
}

type UpdateConfigMapRequestPathSelectorConfigMapMetadataUuid struct{}

func (UpdateConfigMapRequestPathSelectorConfigMapMetadataUuid) FieldPath() *UpdateConfigMapRequest_FieldSubPath {
	return &UpdateConfigMapRequest_FieldSubPath{
		selector: UpdateConfigMapRequest_FieldPathSelectorConfigMap,
		subPath:  config_map.NewConfigMapFieldPathBuilder().Metadata().Uuid().FieldPath(),
	}
}

func (s UpdateConfigMapRequestPathSelectorConfigMapMetadataUuid) WithValue(value string) *UpdateConfigMapRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateConfigMapRequest_FieldSubPathValue)
}

func (s UpdateConfigMapRequestPathSelectorConfigMapMetadataUuid) WithArrayOfValues(values []string) *UpdateConfigMapRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateConfigMapRequest_FieldSubPathArrayOfValues)
}

type UpdateConfigMapRequestPathSelectorConfigMapMetadataTags struct{}

func (UpdateConfigMapRequestPathSelectorConfigMapMetadataTags) FieldPath() *UpdateConfigMapRequest_FieldSubPath {
	return &UpdateConfigMapRequest_FieldSubPath{
		selector: UpdateConfigMapRequest_FieldPathSelectorConfigMap,
		subPath:  config_map.NewConfigMapFieldPathBuilder().Metadata().Tags().FieldPath(),
	}
}

func (s UpdateConfigMapRequestPathSelectorConfigMapMetadataTags) WithValue(value []string) *UpdateConfigMapRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateConfigMapRequest_FieldSubPathValue)
}

func (s UpdateConfigMapRequestPathSelectorConfigMapMetadataTags) WithArrayOfValues(values [][]string) *UpdateConfigMapRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateConfigMapRequest_FieldSubPathArrayOfValues)
}

func (s UpdateConfigMapRequestPathSelectorConfigMapMetadataTags) WithItemValue(value string) *UpdateConfigMapRequest_FieldSubPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*UpdateConfigMapRequest_FieldSubPathArrayItemValue)
}

type UpdateConfigMapRequestPathSelectorConfigMapMetadataLabels struct{}

func (UpdateConfigMapRequestPathSelectorConfigMapMetadataLabels) FieldPath() *UpdateConfigMapRequest_FieldSubPath {
	return &UpdateConfigMapRequest_FieldSubPath{
		selector: UpdateConfigMapRequest_FieldPathSelectorConfigMap,
		subPath:  config_map.NewConfigMapFieldPathBuilder().Metadata().Labels().FieldPath(),
	}
}

func (s UpdateConfigMapRequestPathSelectorConfigMapMetadataLabels) WithValue(value map[string]string) *UpdateConfigMapRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateConfigMapRequest_FieldSubPathValue)
}

func (s UpdateConfigMapRequestPathSelectorConfigMapMetadataLabels) WithArrayOfValues(values []map[string]string) *UpdateConfigMapRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateConfigMapRequest_FieldSubPathArrayOfValues)
}

func (UpdateConfigMapRequestPathSelectorConfigMapMetadataLabels) WithKey(key string) UpdateConfigMapRequestMapPathSelectorConfigMapMetadataLabels {
	return UpdateConfigMapRequestMapPathSelectorConfigMapMetadataLabels{key: key}
}

type UpdateConfigMapRequestMapPathSelectorConfigMapMetadataLabels struct {
	key string
}

func (s UpdateConfigMapRequestMapPathSelectorConfigMapMetadataLabels) FieldPath() *UpdateConfigMapRequest_FieldSubPath {
	return &UpdateConfigMapRequest_FieldSubPath{
		selector: UpdateConfigMapRequest_FieldPathSelectorConfigMap,
		subPath:  config_map.NewConfigMapFieldPathBuilder().Metadata().Labels().WithKey(s.key).FieldPath(),
	}
}

func (s UpdateConfigMapRequestMapPathSelectorConfigMapMetadataLabels) WithValue(value string) *UpdateConfigMapRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateConfigMapRequest_FieldSubPathValue)
}

func (s UpdateConfigMapRequestMapPathSelectorConfigMapMetadataLabels) WithArrayOfValues(values []string) *UpdateConfigMapRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateConfigMapRequest_FieldSubPathArrayOfValues)
}

type UpdateConfigMapRequestPathSelectorConfigMapMetadataAnnotations struct{}

func (UpdateConfigMapRequestPathSelectorConfigMapMetadataAnnotations) FieldPath() *UpdateConfigMapRequest_FieldSubPath {
	return &UpdateConfigMapRequest_FieldSubPath{
		selector: UpdateConfigMapRequest_FieldPathSelectorConfigMap,
		subPath:  config_map.NewConfigMapFieldPathBuilder().Metadata().Annotations().FieldPath(),
	}
}

func (s UpdateConfigMapRequestPathSelectorConfigMapMetadataAnnotations) WithValue(value map[string]string) *UpdateConfigMapRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateConfigMapRequest_FieldSubPathValue)
}

func (s UpdateConfigMapRequestPathSelectorConfigMapMetadataAnnotations) WithArrayOfValues(values []map[string]string) *UpdateConfigMapRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateConfigMapRequest_FieldSubPathArrayOfValues)
}

func (UpdateConfigMapRequestPathSelectorConfigMapMetadataAnnotations) WithKey(key string) UpdateConfigMapRequestMapPathSelectorConfigMapMetadataAnnotations {
	return UpdateConfigMapRequestMapPathSelectorConfigMapMetadataAnnotations{key: key}
}

type UpdateConfigMapRequestMapPathSelectorConfigMapMetadataAnnotations struct {
	key string
}

func (s UpdateConfigMapRequestMapPathSelectorConfigMapMetadataAnnotations) FieldPath() *UpdateConfigMapRequest_FieldSubPath {
	return &UpdateConfigMapRequest_FieldSubPath{
		selector: UpdateConfigMapRequest_FieldPathSelectorConfigMap,
		subPath:  config_map.NewConfigMapFieldPathBuilder().Metadata().Annotations().WithKey(s.key).FieldPath(),
	}
}

func (s UpdateConfigMapRequestMapPathSelectorConfigMapMetadataAnnotations) WithValue(value string) *UpdateConfigMapRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateConfigMapRequest_FieldSubPathValue)
}

func (s UpdateConfigMapRequestMapPathSelectorConfigMapMetadataAnnotations) WithArrayOfValues(values []string) *UpdateConfigMapRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateConfigMapRequest_FieldSubPathArrayOfValues)
}

type UpdateConfigMapRequestPathSelectorConfigMapMetadataGeneration struct{}

func (UpdateConfigMapRequestPathSelectorConfigMapMetadataGeneration) FieldPath() *UpdateConfigMapRequest_FieldSubPath {
	return &UpdateConfigMapRequest_FieldSubPath{
		selector: UpdateConfigMapRequest_FieldPathSelectorConfigMap,
		subPath:  config_map.NewConfigMapFieldPathBuilder().Metadata().Generation().FieldPath(),
	}
}

func (s UpdateConfigMapRequestPathSelectorConfigMapMetadataGeneration) WithValue(value int64) *UpdateConfigMapRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateConfigMapRequest_FieldSubPathValue)
}

func (s UpdateConfigMapRequestPathSelectorConfigMapMetadataGeneration) WithArrayOfValues(values []int64) *UpdateConfigMapRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateConfigMapRequest_FieldSubPathArrayOfValues)
}

type UpdateConfigMapRequestPathSelectorConfigMapMetadataResourceVersion struct{}

func (UpdateConfigMapRequestPathSelectorConfigMapMetadataResourceVersion) FieldPath() *UpdateConfigMapRequest_FieldSubPath {
	return &UpdateConfigMapRequest_FieldSubPath{
		selector: UpdateConfigMapRequest_FieldPathSelectorConfigMap,
		subPath:  config_map.NewConfigMapFieldPathBuilder().Metadata().ResourceVersion().FieldPath(),
	}
}

func (s UpdateConfigMapRequestPathSelectorConfigMapMetadataResourceVersion) WithValue(value string) *UpdateConfigMapRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateConfigMapRequest_FieldSubPathValue)
}

func (s UpdateConfigMapRequestPathSelectorConfigMapMetadataResourceVersion) WithArrayOfValues(values []string) *UpdateConfigMapRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateConfigMapRequest_FieldSubPathArrayOfValues)
}

type UpdateConfigMapRequestPathSelectorConfigMapMetadataOwnerReferences struct{}

func (UpdateConfigMapRequestPathSelectorConfigMapMetadataOwnerReferences) FieldPath() *UpdateConfigMapRequest_FieldSubPath {
	return &UpdateConfigMapRequest_FieldSubPath{
		selector: UpdateConfigMapRequest_FieldPathSelectorConfigMap,
		subPath:  config_map.NewConfigMapFieldPathBuilder().Metadata().OwnerReferences().FieldPath(),
	}
}

func (s UpdateConfigMapRequestPathSelectorConfigMapMetadataOwnerReferences) WithValue(value []*ntt_meta.OwnerReference) *UpdateConfigMapRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateConfigMapRequest_FieldSubPathValue)
}

func (s UpdateConfigMapRequestPathSelectorConfigMapMetadataOwnerReferences) WithArrayOfValues(values [][]*ntt_meta.OwnerReference) *UpdateConfigMapRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateConfigMapRequest_FieldSubPathArrayOfValues)
}

func (s UpdateConfigMapRequestPathSelectorConfigMapMetadataOwnerReferences) WithItemValue(value *ntt_meta.OwnerReference) *UpdateConfigMapRequest_FieldSubPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*UpdateConfigMapRequest_FieldSubPathArrayItemValue)
}

func (UpdateConfigMapRequestPathSelectorConfigMapMetadataOwnerReferences) Kind() UpdateConfigMapRequestPathSelectorConfigMapMetadataOwnerReferencesKind {
	return UpdateConfigMapRequestPathSelectorConfigMapMetadataOwnerReferencesKind{}
}

func (UpdateConfigMapRequestPathSelectorConfigMapMetadataOwnerReferences) Version() UpdateConfigMapRequestPathSelectorConfigMapMetadataOwnerReferencesVersion {
	return UpdateConfigMapRequestPathSelectorConfigMapMetadataOwnerReferencesVersion{}
}

func (UpdateConfigMapRequestPathSelectorConfigMapMetadataOwnerReferences) Name() UpdateConfigMapRequestPathSelectorConfigMapMetadataOwnerReferencesName {
	return UpdateConfigMapRequestPathSelectorConfigMapMetadataOwnerReferencesName{}
}

func (UpdateConfigMapRequestPathSelectorConfigMapMetadataOwnerReferences) Region() UpdateConfigMapRequestPathSelectorConfigMapMetadataOwnerReferencesRegion {
	return UpdateConfigMapRequestPathSelectorConfigMapMetadataOwnerReferencesRegion{}
}

func (UpdateConfigMapRequestPathSelectorConfigMapMetadataOwnerReferences) Controller() UpdateConfigMapRequestPathSelectorConfigMapMetadataOwnerReferencesController {
	return UpdateConfigMapRequestPathSelectorConfigMapMetadataOwnerReferencesController{}
}

func (UpdateConfigMapRequestPathSelectorConfigMapMetadataOwnerReferences) BlockOwnerDeletion() UpdateConfigMapRequestPathSelectorConfigMapMetadataOwnerReferencesBlockOwnerDeletion {
	return UpdateConfigMapRequestPathSelectorConfigMapMetadataOwnerReferencesBlockOwnerDeletion{}
}

func (UpdateConfigMapRequestPathSelectorConfigMapMetadataOwnerReferences) RequiresOwnerReference() UpdateConfigMapRequestPathSelectorConfigMapMetadataOwnerReferencesRequiresOwnerReference {
	return UpdateConfigMapRequestPathSelectorConfigMapMetadataOwnerReferencesRequiresOwnerReference{}
}

type UpdateConfigMapRequestPathSelectorConfigMapMetadataOwnerReferencesKind struct{}

func (UpdateConfigMapRequestPathSelectorConfigMapMetadataOwnerReferencesKind) FieldPath() *UpdateConfigMapRequest_FieldSubPath {
	return &UpdateConfigMapRequest_FieldSubPath{
		selector: UpdateConfigMapRequest_FieldPathSelectorConfigMap,
		subPath:  config_map.NewConfigMapFieldPathBuilder().Metadata().OwnerReferences().Kind().FieldPath(),
	}
}

func (s UpdateConfigMapRequestPathSelectorConfigMapMetadataOwnerReferencesKind) WithValue(value string) *UpdateConfigMapRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateConfigMapRequest_FieldSubPathValue)
}

func (s UpdateConfigMapRequestPathSelectorConfigMapMetadataOwnerReferencesKind) WithArrayOfValues(values []string) *UpdateConfigMapRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateConfigMapRequest_FieldSubPathArrayOfValues)
}

type UpdateConfigMapRequestPathSelectorConfigMapMetadataOwnerReferencesVersion struct{}

func (UpdateConfigMapRequestPathSelectorConfigMapMetadataOwnerReferencesVersion) FieldPath() *UpdateConfigMapRequest_FieldSubPath {
	return &UpdateConfigMapRequest_FieldSubPath{
		selector: UpdateConfigMapRequest_FieldPathSelectorConfigMap,
		subPath:  config_map.NewConfigMapFieldPathBuilder().Metadata().OwnerReferences().Version().FieldPath(),
	}
}

func (s UpdateConfigMapRequestPathSelectorConfigMapMetadataOwnerReferencesVersion) WithValue(value string) *UpdateConfigMapRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateConfigMapRequest_FieldSubPathValue)
}

func (s UpdateConfigMapRequestPathSelectorConfigMapMetadataOwnerReferencesVersion) WithArrayOfValues(values []string) *UpdateConfigMapRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateConfigMapRequest_FieldSubPathArrayOfValues)
}

type UpdateConfigMapRequestPathSelectorConfigMapMetadataOwnerReferencesName struct{}

func (UpdateConfigMapRequestPathSelectorConfigMapMetadataOwnerReferencesName) FieldPath() *UpdateConfigMapRequest_FieldSubPath {
	return &UpdateConfigMapRequest_FieldSubPath{
		selector: UpdateConfigMapRequest_FieldPathSelectorConfigMap,
		subPath:  config_map.NewConfigMapFieldPathBuilder().Metadata().OwnerReferences().Name().FieldPath(),
	}
}

func (s UpdateConfigMapRequestPathSelectorConfigMapMetadataOwnerReferencesName) WithValue(value string) *UpdateConfigMapRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateConfigMapRequest_FieldSubPathValue)
}

func (s UpdateConfigMapRequestPathSelectorConfigMapMetadataOwnerReferencesName) WithArrayOfValues(values []string) *UpdateConfigMapRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateConfigMapRequest_FieldSubPathArrayOfValues)
}

type UpdateConfigMapRequestPathSelectorConfigMapMetadataOwnerReferencesRegion struct{}

func (UpdateConfigMapRequestPathSelectorConfigMapMetadataOwnerReferencesRegion) FieldPath() *UpdateConfigMapRequest_FieldSubPath {
	return &UpdateConfigMapRequest_FieldSubPath{
		selector: UpdateConfigMapRequest_FieldPathSelectorConfigMap,
		subPath:  config_map.NewConfigMapFieldPathBuilder().Metadata().OwnerReferences().Region().FieldPath(),
	}
}

func (s UpdateConfigMapRequestPathSelectorConfigMapMetadataOwnerReferencesRegion) WithValue(value string) *UpdateConfigMapRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateConfigMapRequest_FieldSubPathValue)
}

func (s UpdateConfigMapRequestPathSelectorConfigMapMetadataOwnerReferencesRegion) WithArrayOfValues(values []string) *UpdateConfigMapRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateConfigMapRequest_FieldSubPathArrayOfValues)
}

type UpdateConfigMapRequestPathSelectorConfigMapMetadataOwnerReferencesController struct{}

func (UpdateConfigMapRequestPathSelectorConfigMapMetadataOwnerReferencesController) FieldPath() *UpdateConfigMapRequest_FieldSubPath {
	return &UpdateConfigMapRequest_FieldSubPath{
		selector: UpdateConfigMapRequest_FieldPathSelectorConfigMap,
		subPath:  config_map.NewConfigMapFieldPathBuilder().Metadata().OwnerReferences().Controller().FieldPath(),
	}
}

func (s UpdateConfigMapRequestPathSelectorConfigMapMetadataOwnerReferencesController) WithValue(value bool) *UpdateConfigMapRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateConfigMapRequest_FieldSubPathValue)
}

func (s UpdateConfigMapRequestPathSelectorConfigMapMetadataOwnerReferencesController) WithArrayOfValues(values []bool) *UpdateConfigMapRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateConfigMapRequest_FieldSubPathArrayOfValues)
}

type UpdateConfigMapRequestPathSelectorConfigMapMetadataOwnerReferencesBlockOwnerDeletion struct{}

func (UpdateConfigMapRequestPathSelectorConfigMapMetadataOwnerReferencesBlockOwnerDeletion) FieldPath() *UpdateConfigMapRequest_FieldSubPath {
	return &UpdateConfigMapRequest_FieldSubPath{
		selector: UpdateConfigMapRequest_FieldPathSelectorConfigMap,
		subPath:  config_map.NewConfigMapFieldPathBuilder().Metadata().OwnerReferences().BlockOwnerDeletion().FieldPath(),
	}
}

func (s UpdateConfigMapRequestPathSelectorConfigMapMetadataOwnerReferencesBlockOwnerDeletion) WithValue(value bool) *UpdateConfigMapRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateConfigMapRequest_FieldSubPathValue)
}

func (s UpdateConfigMapRequestPathSelectorConfigMapMetadataOwnerReferencesBlockOwnerDeletion) WithArrayOfValues(values []bool) *UpdateConfigMapRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateConfigMapRequest_FieldSubPathArrayOfValues)
}

type UpdateConfigMapRequestPathSelectorConfigMapMetadataOwnerReferencesRequiresOwnerReference struct{}

func (UpdateConfigMapRequestPathSelectorConfigMapMetadataOwnerReferencesRequiresOwnerReference) FieldPath() *UpdateConfigMapRequest_FieldSubPath {
	return &UpdateConfigMapRequest_FieldSubPath{
		selector: UpdateConfigMapRequest_FieldPathSelectorConfigMap,
		subPath:  config_map.NewConfigMapFieldPathBuilder().Metadata().OwnerReferences().RequiresOwnerReference().FieldPath(),
	}
}

func (s UpdateConfigMapRequestPathSelectorConfigMapMetadataOwnerReferencesRequiresOwnerReference) WithValue(value bool) *UpdateConfigMapRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateConfigMapRequest_FieldSubPathValue)
}

func (s UpdateConfigMapRequestPathSelectorConfigMapMetadataOwnerReferencesRequiresOwnerReference) WithArrayOfValues(values []bool) *UpdateConfigMapRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateConfigMapRequest_FieldSubPathArrayOfValues)
}

type UpdateConfigMapRequestPathSelectorConfigMapMetadataShards struct{}

func (UpdateConfigMapRequestPathSelectorConfigMapMetadataShards) FieldPath() *UpdateConfigMapRequest_FieldSubPath {
	return &UpdateConfigMapRequest_FieldSubPath{
		selector: UpdateConfigMapRequest_FieldPathSelectorConfigMap,
		subPath:  config_map.NewConfigMapFieldPathBuilder().Metadata().Shards().FieldPath(),
	}
}

func (s UpdateConfigMapRequestPathSelectorConfigMapMetadataShards) WithValue(value map[string]int64) *UpdateConfigMapRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateConfigMapRequest_FieldSubPathValue)
}

func (s UpdateConfigMapRequestPathSelectorConfigMapMetadataShards) WithArrayOfValues(values []map[string]int64) *UpdateConfigMapRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateConfigMapRequest_FieldSubPathArrayOfValues)
}

func (UpdateConfigMapRequestPathSelectorConfigMapMetadataShards) WithKey(key string) UpdateConfigMapRequestMapPathSelectorConfigMapMetadataShards {
	return UpdateConfigMapRequestMapPathSelectorConfigMapMetadataShards{key: key}
}

type UpdateConfigMapRequestMapPathSelectorConfigMapMetadataShards struct {
	key string
}

func (s UpdateConfigMapRequestMapPathSelectorConfigMapMetadataShards) FieldPath() *UpdateConfigMapRequest_FieldSubPath {
	return &UpdateConfigMapRequest_FieldSubPath{
		selector: UpdateConfigMapRequest_FieldPathSelectorConfigMap,
		subPath:  config_map.NewConfigMapFieldPathBuilder().Metadata().Shards().WithKey(s.key).FieldPath(),
	}
}

func (s UpdateConfigMapRequestMapPathSelectorConfigMapMetadataShards) WithValue(value int64) *UpdateConfigMapRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateConfigMapRequest_FieldSubPathValue)
}

func (s UpdateConfigMapRequestMapPathSelectorConfigMapMetadataShards) WithArrayOfValues(values []int64) *UpdateConfigMapRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateConfigMapRequest_FieldSubPathArrayOfValues)
}

type UpdateConfigMapRequestPathSelectorConfigMapMetadataSyncing struct{}

func (UpdateConfigMapRequestPathSelectorConfigMapMetadataSyncing) FieldPath() *UpdateConfigMapRequest_FieldSubPath {
	return &UpdateConfigMapRequest_FieldSubPath{
		selector: UpdateConfigMapRequest_FieldPathSelectorConfigMap,
		subPath:  config_map.NewConfigMapFieldPathBuilder().Metadata().Syncing().FieldPath(),
	}
}

func (s UpdateConfigMapRequestPathSelectorConfigMapMetadataSyncing) WithValue(value *ntt_meta.SyncingMeta) *UpdateConfigMapRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateConfigMapRequest_FieldSubPathValue)
}

func (s UpdateConfigMapRequestPathSelectorConfigMapMetadataSyncing) WithArrayOfValues(values []*ntt_meta.SyncingMeta) *UpdateConfigMapRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateConfigMapRequest_FieldSubPathArrayOfValues)
}

func (UpdateConfigMapRequestPathSelectorConfigMapMetadataSyncing) OwningRegion() UpdateConfigMapRequestPathSelectorConfigMapMetadataSyncingOwningRegion {
	return UpdateConfigMapRequestPathSelectorConfigMapMetadataSyncingOwningRegion{}
}

func (UpdateConfigMapRequestPathSelectorConfigMapMetadataSyncing) Regions() UpdateConfigMapRequestPathSelectorConfigMapMetadataSyncingRegions {
	return UpdateConfigMapRequestPathSelectorConfigMapMetadataSyncingRegions{}
}

type UpdateConfigMapRequestPathSelectorConfigMapMetadataSyncingOwningRegion struct{}

func (UpdateConfigMapRequestPathSelectorConfigMapMetadataSyncingOwningRegion) FieldPath() *UpdateConfigMapRequest_FieldSubPath {
	return &UpdateConfigMapRequest_FieldSubPath{
		selector: UpdateConfigMapRequest_FieldPathSelectorConfigMap,
		subPath:  config_map.NewConfigMapFieldPathBuilder().Metadata().Syncing().OwningRegion().FieldPath(),
	}
}

func (s UpdateConfigMapRequestPathSelectorConfigMapMetadataSyncingOwningRegion) WithValue(value string) *UpdateConfigMapRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateConfigMapRequest_FieldSubPathValue)
}

func (s UpdateConfigMapRequestPathSelectorConfigMapMetadataSyncingOwningRegion) WithArrayOfValues(values []string) *UpdateConfigMapRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateConfigMapRequest_FieldSubPathArrayOfValues)
}

type UpdateConfigMapRequestPathSelectorConfigMapMetadataSyncingRegions struct{}

func (UpdateConfigMapRequestPathSelectorConfigMapMetadataSyncingRegions) FieldPath() *UpdateConfigMapRequest_FieldSubPath {
	return &UpdateConfigMapRequest_FieldSubPath{
		selector: UpdateConfigMapRequest_FieldPathSelectorConfigMap,
		subPath:  config_map.NewConfigMapFieldPathBuilder().Metadata().Syncing().Regions().FieldPath(),
	}
}

func (s UpdateConfigMapRequestPathSelectorConfigMapMetadataSyncingRegions) WithValue(value []string) *UpdateConfigMapRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateConfigMapRequest_FieldSubPathValue)
}

func (s UpdateConfigMapRequestPathSelectorConfigMapMetadataSyncingRegions) WithArrayOfValues(values [][]string) *UpdateConfigMapRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateConfigMapRequest_FieldSubPathArrayOfValues)
}

func (s UpdateConfigMapRequestPathSelectorConfigMapMetadataSyncingRegions) WithItemValue(value string) *UpdateConfigMapRequest_FieldSubPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*UpdateConfigMapRequest_FieldSubPathArrayItemValue)
}

type UpdateConfigMapRequestPathSelectorConfigMapMetadataLifecycle struct{}

func (UpdateConfigMapRequestPathSelectorConfigMapMetadataLifecycle) FieldPath() *UpdateConfigMapRequest_FieldSubPath {
	return &UpdateConfigMapRequest_FieldSubPath{
		selector: UpdateConfigMapRequest_FieldPathSelectorConfigMap,
		subPath:  config_map.NewConfigMapFieldPathBuilder().Metadata().Lifecycle().FieldPath(),
	}
}

func (s UpdateConfigMapRequestPathSelectorConfigMapMetadataLifecycle) WithValue(value *ntt_meta.Lifecycle) *UpdateConfigMapRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateConfigMapRequest_FieldSubPathValue)
}

func (s UpdateConfigMapRequestPathSelectorConfigMapMetadataLifecycle) WithArrayOfValues(values []*ntt_meta.Lifecycle) *UpdateConfigMapRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateConfigMapRequest_FieldSubPathArrayOfValues)
}

func (UpdateConfigMapRequestPathSelectorConfigMapMetadataLifecycle) State() UpdateConfigMapRequestPathSelectorConfigMapMetadataLifecycleState {
	return UpdateConfigMapRequestPathSelectorConfigMapMetadataLifecycleState{}
}

func (UpdateConfigMapRequestPathSelectorConfigMapMetadataLifecycle) BlockDeletion() UpdateConfigMapRequestPathSelectorConfigMapMetadataLifecycleBlockDeletion {
	return UpdateConfigMapRequestPathSelectorConfigMapMetadataLifecycleBlockDeletion{}
}

type UpdateConfigMapRequestPathSelectorConfigMapMetadataLifecycleState struct{}

func (UpdateConfigMapRequestPathSelectorConfigMapMetadataLifecycleState) FieldPath() *UpdateConfigMapRequest_FieldSubPath {
	return &UpdateConfigMapRequest_FieldSubPath{
		selector: UpdateConfigMapRequest_FieldPathSelectorConfigMap,
		subPath:  config_map.NewConfigMapFieldPathBuilder().Metadata().Lifecycle().State().FieldPath(),
	}
}

func (s UpdateConfigMapRequestPathSelectorConfigMapMetadataLifecycleState) WithValue(value ntt_meta.Lifecycle_State) *UpdateConfigMapRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateConfigMapRequest_FieldSubPathValue)
}

func (s UpdateConfigMapRequestPathSelectorConfigMapMetadataLifecycleState) WithArrayOfValues(values []ntt_meta.Lifecycle_State) *UpdateConfigMapRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateConfigMapRequest_FieldSubPathArrayOfValues)
}

type UpdateConfigMapRequestPathSelectorConfigMapMetadataLifecycleBlockDeletion struct{}

func (UpdateConfigMapRequestPathSelectorConfigMapMetadataLifecycleBlockDeletion) FieldPath() *UpdateConfigMapRequest_FieldSubPath {
	return &UpdateConfigMapRequest_FieldSubPath{
		selector: UpdateConfigMapRequest_FieldPathSelectorConfigMap,
		subPath:  config_map.NewConfigMapFieldPathBuilder().Metadata().Lifecycle().BlockDeletion().FieldPath(),
	}
}

func (s UpdateConfigMapRequestPathSelectorConfigMapMetadataLifecycleBlockDeletion) WithValue(value bool) *UpdateConfigMapRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateConfigMapRequest_FieldSubPathValue)
}

func (s UpdateConfigMapRequestPathSelectorConfigMapMetadataLifecycleBlockDeletion) WithArrayOfValues(values []bool) *UpdateConfigMapRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateConfigMapRequest_FieldSubPathArrayOfValues)
}

type UpdateConfigMapRequestPathSelectorConfigMapData struct{}

func (UpdateConfigMapRequestPathSelectorConfigMapData) FieldPath() *UpdateConfigMapRequest_FieldSubPath {
	return &UpdateConfigMapRequest_FieldSubPath{
		selector: UpdateConfigMapRequest_FieldPathSelectorConfigMap,
		subPath:  config_map.NewConfigMapFieldPathBuilder().Data().FieldPath(),
	}
}

func (s UpdateConfigMapRequestPathSelectorConfigMapData) WithValue(value map[string]string) *UpdateConfigMapRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateConfigMapRequest_FieldSubPathValue)
}

func (s UpdateConfigMapRequestPathSelectorConfigMapData) WithArrayOfValues(values []map[string]string) *UpdateConfigMapRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateConfigMapRequest_FieldSubPathArrayOfValues)
}

func (UpdateConfigMapRequestPathSelectorConfigMapData) WithKey(key string) UpdateConfigMapRequestMapPathSelectorConfigMapData {
	return UpdateConfigMapRequestMapPathSelectorConfigMapData{key: key}
}

type UpdateConfigMapRequestMapPathSelectorConfigMapData struct {
	key string
}

func (s UpdateConfigMapRequestMapPathSelectorConfigMapData) FieldPath() *UpdateConfigMapRequest_FieldSubPath {
	return &UpdateConfigMapRequest_FieldSubPath{
		selector: UpdateConfigMapRequest_FieldPathSelectorConfigMap,
		subPath:  config_map.NewConfigMapFieldPathBuilder().Data().WithKey(s.key).FieldPath(),
	}
}

func (s UpdateConfigMapRequestMapPathSelectorConfigMapData) WithValue(value string) *UpdateConfigMapRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateConfigMapRequest_FieldSubPathValue)
}

func (s UpdateConfigMapRequestMapPathSelectorConfigMapData) WithArrayOfValues(values []string) *UpdateConfigMapRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateConfigMapRequest_FieldSubPathArrayOfValues)
}

type UpdateConfigMapRequestPathSelectorConfigMapBinaryData struct{}

func (UpdateConfigMapRequestPathSelectorConfigMapBinaryData) FieldPath() *UpdateConfigMapRequest_FieldSubPath {
	return &UpdateConfigMapRequest_FieldSubPath{
		selector: UpdateConfigMapRequest_FieldPathSelectorConfigMap,
		subPath:  config_map.NewConfigMapFieldPathBuilder().BinaryData().FieldPath(),
	}
}

func (s UpdateConfigMapRequestPathSelectorConfigMapBinaryData) WithValue(value map[string][]byte) *UpdateConfigMapRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateConfigMapRequest_FieldSubPathValue)
}

func (s UpdateConfigMapRequestPathSelectorConfigMapBinaryData) WithArrayOfValues(values []map[string][]byte) *UpdateConfigMapRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateConfigMapRequest_FieldSubPathArrayOfValues)
}

func (UpdateConfigMapRequestPathSelectorConfigMapBinaryData) WithKey(key string) UpdateConfigMapRequestMapPathSelectorConfigMapBinaryData {
	return UpdateConfigMapRequestMapPathSelectorConfigMapBinaryData{key: key}
}

type UpdateConfigMapRequestMapPathSelectorConfigMapBinaryData struct {
	key string
}

func (s UpdateConfigMapRequestMapPathSelectorConfigMapBinaryData) FieldPath() *UpdateConfigMapRequest_FieldSubPath {
	return &UpdateConfigMapRequest_FieldSubPath{
		selector: UpdateConfigMapRequest_FieldPathSelectorConfigMap,
		subPath:  config_map.NewConfigMapFieldPathBuilder().BinaryData().WithKey(s.key).FieldPath(),
	}
}

func (s UpdateConfigMapRequestMapPathSelectorConfigMapBinaryData) WithValue(value []byte) *UpdateConfigMapRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateConfigMapRequest_FieldSubPathValue)
}

func (s UpdateConfigMapRequestMapPathSelectorConfigMapBinaryData) WithArrayOfValues(values [][]byte) *UpdateConfigMapRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateConfigMapRequest_FieldSubPathArrayOfValues)
}

type UpdateConfigMapRequestPathSelectorUpdateMask struct{}

func (UpdateConfigMapRequestPathSelectorUpdateMask) FieldPath() *UpdateConfigMapRequest_FieldTerminalPath {
	return &UpdateConfigMapRequest_FieldTerminalPath{selector: UpdateConfigMapRequest_FieldPathSelectorUpdateMask}
}

func (s UpdateConfigMapRequestPathSelectorUpdateMask) WithValue(value *config_map.ConfigMap_FieldMask) *UpdateConfigMapRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateConfigMapRequest_FieldTerminalPathValue)
}

func (s UpdateConfigMapRequestPathSelectorUpdateMask) WithArrayOfValues(values []*config_map.ConfigMap_FieldMask) *UpdateConfigMapRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateConfigMapRequest_FieldTerminalPathArrayOfValues)
}

type UpdateConfigMapRequestPathSelectorCas struct{}

func (UpdateConfigMapRequestPathSelectorCas) FieldPath() *UpdateConfigMapRequest_FieldTerminalPath {
	return &UpdateConfigMapRequest_FieldTerminalPath{selector: UpdateConfigMapRequest_FieldPathSelectorCas}
}

func (s UpdateConfigMapRequestPathSelectorCas) WithValue(value *UpdateConfigMapRequest_CAS) *UpdateConfigMapRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateConfigMapRequest_FieldTerminalPathValue)
}

func (s UpdateConfigMapRequestPathSelectorCas) WithArrayOfValues(values []*UpdateConfigMapRequest_CAS) *UpdateConfigMapRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateConfigMapRequest_FieldTerminalPathArrayOfValues)
}

func (UpdateConfigMapRequestPathSelectorCas) WithSubPath(subPath UpdateConfigMapRequestCAS_FieldPath) *UpdateConfigMapRequest_FieldSubPath {
	return &UpdateConfigMapRequest_FieldSubPath{selector: UpdateConfigMapRequest_FieldPathSelectorCas, subPath: subPath}
}

func (s UpdateConfigMapRequestPathSelectorCas) WithSubValue(subPathValue UpdateConfigMapRequestCAS_FieldPathValue) *UpdateConfigMapRequest_FieldSubPathValue {
	return &UpdateConfigMapRequest_FieldSubPathValue{UpdateConfigMapRequest_FieldPath: s.WithSubPath(subPathValue), subPathValue: subPathValue}
}

func (s UpdateConfigMapRequestPathSelectorCas) WithSubArrayOfValues(subPathArrayOfValues UpdateConfigMapRequestCAS_FieldPathArrayOfValues) *UpdateConfigMapRequest_FieldSubPathArrayOfValues {
	return &UpdateConfigMapRequest_FieldSubPathArrayOfValues{UpdateConfigMapRequest_FieldPath: s.WithSubPath(subPathArrayOfValues), subPathArrayOfValues: subPathArrayOfValues}
}

func (s UpdateConfigMapRequestPathSelectorCas) WithSubArrayItemValue(subPathArrayItemValue UpdateConfigMapRequestCAS_FieldPathArrayItemValue) *UpdateConfigMapRequest_FieldSubPathArrayItemValue {
	return &UpdateConfigMapRequest_FieldSubPathArrayItemValue{UpdateConfigMapRequest_FieldPath: s.WithSubPath(subPathArrayItemValue), subPathItemValue: subPathArrayItemValue}
}

func (UpdateConfigMapRequestPathSelectorCas) ConditionalState() UpdateConfigMapRequestPathSelectorCasConditionalState {
	return UpdateConfigMapRequestPathSelectorCasConditionalState{}
}

func (UpdateConfigMapRequestPathSelectorCas) FieldMask() UpdateConfigMapRequestPathSelectorCasFieldMask {
	return UpdateConfigMapRequestPathSelectorCasFieldMask{}
}

type UpdateConfigMapRequestPathSelectorCasConditionalState struct{}

func (UpdateConfigMapRequestPathSelectorCasConditionalState) FieldPath() *UpdateConfigMapRequest_FieldSubPath {
	return &UpdateConfigMapRequest_FieldSubPath{
		selector: UpdateConfigMapRequest_FieldPathSelectorCas,
		subPath:  NewUpdateConfigMapRequestCASFieldPathBuilder().ConditionalState().FieldPath(),
	}
}

func (s UpdateConfigMapRequestPathSelectorCasConditionalState) WithValue(value *config_map.ConfigMap) *UpdateConfigMapRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateConfigMapRequest_FieldSubPathValue)
}

func (s UpdateConfigMapRequestPathSelectorCasConditionalState) WithArrayOfValues(values []*config_map.ConfigMap) *UpdateConfigMapRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateConfigMapRequest_FieldSubPathArrayOfValues)
}

func (UpdateConfigMapRequestPathSelectorCasConditionalState) Name() UpdateConfigMapRequestPathSelectorCasConditionalStateName {
	return UpdateConfigMapRequestPathSelectorCasConditionalStateName{}
}

func (UpdateConfigMapRequestPathSelectorCasConditionalState) DisplayName() UpdateConfigMapRequestPathSelectorCasConditionalStateDisplayName {
	return UpdateConfigMapRequestPathSelectorCasConditionalStateDisplayName{}
}

func (UpdateConfigMapRequestPathSelectorCasConditionalState) Metadata() UpdateConfigMapRequestPathSelectorCasConditionalStateMetadata {
	return UpdateConfigMapRequestPathSelectorCasConditionalStateMetadata{}
}

func (UpdateConfigMapRequestPathSelectorCasConditionalState) Data() UpdateConfigMapRequestPathSelectorCasConditionalStateData {
	return UpdateConfigMapRequestPathSelectorCasConditionalStateData{}
}

func (UpdateConfigMapRequestPathSelectorCasConditionalState) BinaryData() UpdateConfigMapRequestPathSelectorCasConditionalStateBinaryData {
	return UpdateConfigMapRequestPathSelectorCasConditionalStateBinaryData{}
}

type UpdateConfigMapRequestPathSelectorCasConditionalStateName struct{}

func (UpdateConfigMapRequestPathSelectorCasConditionalStateName) FieldPath() *UpdateConfigMapRequest_FieldSubPath {
	return &UpdateConfigMapRequest_FieldSubPath{
		selector: UpdateConfigMapRequest_FieldPathSelectorCas,
		subPath:  NewUpdateConfigMapRequestCASFieldPathBuilder().ConditionalState().Name().FieldPath(),
	}
}

func (s UpdateConfigMapRequestPathSelectorCasConditionalStateName) WithValue(value *config_map.Name) *UpdateConfigMapRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateConfigMapRequest_FieldSubPathValue)
}

func (s UpdateConfigMapRequestPathSelectorCasConditionalStateName) WithArrayOfValues(values []*config_map.Name) *UpdateConfigMapRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateConfigMapRequest_FieldSubPathArrayOfValues)
}

type UpdateConfigMapRequestPathSelectorCasConditionalStateDisplayName struct{}

func (UpdateConfigMapRequestPathSelectorCasConditionalStateDisplayName) FieldPath() *UpdateConfigMapRequest_FieldSubPath {
	return &UpdateConfigMapRequest_FieldSubPath{
		selector: UpdateConfigMapRequest_FieldPathSelectorCas,
		subPath:  NewUpdateConfigMapRequestCASFieldPathBuilder().ConditionalState().DisplayName().FieldPath(),
	}
}

func (s UpdateConfigMapRequestPathSelectorCasConditionalStateDisplayName) WithValue(value string) *UpdateConfigMapRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateConfigMapRequest_FieldSubPathValue)
}

func (s UpdateConfigMapRequestPathSelectorCasConditionalStateDisplayName) WithArrayOfValues(values []string) *UpdateConfigMapRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateConfigMapRequest_FieldSubPathArrayOfValues)
}

type UpdateConfigMapRequestPathSelectorCasConditionalStateMetadata struct{}

func (UpdateConfigMapRequestPathSelectorCasConditionalStateMetadata) FieldPath() *UpdateConfigMapRequest_FieldSubPath {
	return &UpdateConfigMapRequest_FieldSubPath{
		selector: UpdateConfigMapRequest_FieldPathSelectorCas,
		subPath:  NewUpdateConfigMapRequestCASFieldPathBuilder().ConditionalState().Metadata().FieldPath(),
	}
}

func (s UpdateConfigMapRequestPathSelectorCasConditionalStateMetadata) WithValue(value *ntt_meta.Meta) *UpdateConfigMapRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateConfigMapRequest_FieldSubPathValue)
}

func (s UpdateConfigMapRequestPathSelectorCasConditionalStateMetadata) WithArrayOfValues(values []*ntt_meta.Meta) *UpdateConfigMapRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateConfigMapRequest_FieldSubPathArrayOfValues)
}

func (UpdateConfigMapRequestPathSelectorCasConditionalStateMetadata) CreateTime() UpdateConfigMapRequestPathSelectorCasConditionalStateMetadataCreateTime {
	return UpdateConfigMapRequestPathSelectorCasConditionalStateMetadataCreateTime{}
}

func (UpdateConfigMapRequestPathSelectorCasConditionalStateMetadata) UpdateTime() UpdateConfigMapRequestPathSelectorCasConditionalStateMetadataUpdateTime {
	return UpdateConfigMapRequestPathSelectorCasConditionalStateMetadataUpdateTime{}
}

func (UpdateConfigMapRequestPathSelectorCasConditionalStateMetadata) DeleteTime() UpdateConfigMapRequestPathSelectorCasConditionalStateMetadataDeleteTime {
	return UpdateConfigMapRequestPathSelectorCasConditionalStateMetadataDeleteTime{}
}

func (UpdateConfigMapRequestPathSelectorCasConditionalStateMetadata) Uuid() UpdateConfigMapRequestPathSelectorCasConditionalStateMetadataUuid {
	return UpdateConfigMapRequestPathSelectorCasConditionalStateMetadataUuid{}
}

func (UpdateConfigMapRequestPathSelectorCasConditionalStateMetadata) Tags() UpdateConfigMapRequestPathSelectorCasConditionalStateMetadataTags {
	return UpdateConfigMapRequestPathSelectorCasConditionalStateMetadataTags{}
}

func (UpdateConfigMapRequestPathSelectorCasConditionalStateMetadata) Labels() UpdateConfigMapRequestPathSelectorCasConditionalStateMetadataLabels {
	return UpdateConfigMapRequestPathSelectorCasConditionalStateMetadataLabels{}
}

func (UpdateConfigMapRequestPathSelectorCasConditionalStateMetadata) Annotations() UpdateConfigMapRequestPathSelectorCasConditionalStateMetadataAnnotations {
	return UpdateConfigMapRequestPathSelectorCasConditionalStateMetadataAnnotations{}
}

func (UpdateConfigMapRequestPathSelectorCasConditionalStateMetadata) Generation() UpdateConfigMapRequestPathSelectorCasConditionalStateMetadataGeneration {
	return UpdateConfigMapRequestPathSelectorCasConditionalStateMetadataGeneration{}
}

func (UpdateConfigMapRequestPathSelectorCasConditionalStateMetadata) ResourceVersion() UpdateConfigMapRequestPathSelectorCasConditionalStateMetadataResourceVersion {
	return UpdateConfigMapRequestPathSelectorCasConditionalStateMetadataResourceVersion{}
}

func (UpdateConfigMapRequestPathSelectorCasConditionalStateMetadata) OwnerReferences() UpdateConfigMapRequestPathSelectorCasConditionalStateMetadataOwnerReferences {
	return UpdateConfigMapRequestPathSelectorCasConditionalStateMetadataOwnerReferences{}
}

func (UpdateConfigMapRequestPathSelectorCasConditionalStateMetadata) Shards() UpdateConfigMapRequestPathSelectorCasConditionalStateMetadataShards {
	return UpdateConfigMapRequestPathSelectorCasConditionalStateMetadataShards{}
}

func (UpdateConfigMapRequestPathSelectorCasConditionalStateMetadata) Syncing() UpdateConfigMapRequestPathSelectorCasConditionalStateMetadataSyncing {
	return UpdateConfigMapRequestPathSelectorCasConditionalStateMetadataSyncing{}
}

func (UpdateConfigMapRequestPathSelectorCasConditionalStateMetadata) Lifecycle() UpdateConfigMapRequestPathSelectorCasConditionalStateMetadataLifecycle {
	return UpdateConfigMapRequestPathSelectorCasConditionalStateMetadataLifecycle{}
}

type UpdateConfigMapRequestPathSelectorCasConditionalStateMetadataCreateTime struct{}

func (UpdateConfigMapRequestPathSelectorCasConditionalStateMetadataCreateTime) FieldPath() *UpdateConfigMapRequest_FieldSubPath {
	return &UpdateConfigMapRequest_FieldSubPath{
		selector: UpdateConfigMapRequest_FieldPathSelectorCas,
		subPath:  NewUpdateConfigMapRequestCASFieldPathBuilder().ConditionalState().Metadata().CreateTime().FieldPath(),
	}
}

func (s UpdateConfigMapRequestPathSelectorCasConditionalStateMetadataCreateTime) WithValue(value *timestamp.Timestamp) *UpdateConfigMapRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateConfigMapRequest_FieldSubPathValue)
}

func (s UpdateConfigMapRequestPathSelectorCasConditionalStateMetadataCreateTime) WithArrayOfValues(values []*timestamp.Timestamp) *UpdateConfigMapRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateConfigMapRequest_FieldSubPathArrayOfValues)
}

type UpdateConfigMapRequestPathSelectorCasConditionalStateMetadataUpdateTime struct{}

func (UpdateConfigMapRequestPathSelectorCasConditionalStateMetadataUpdateTime) FieldPath() *UpdateConfigMapRequest_FieldSubPath {
	return &UpdateConfigMapRequest_FieldSubPath{
		selector: UpdateConfigMapRequest_FieldPathSelectorCas,
		subPath:  NewUpdateConfigMapRequestCASFieldPathBuilder().ConditionalState().Metadata().UpdateTime().FieldPath(),
	}
}

func (s UpdateConfigMapRequestPathSelectorCasConditionalStateMetadataUpdateTime) WithValue(value *timestamp.Timestamp) *UpdateConfigMapRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateConfigMapRequest_FieldSubPathValue)
}

func (s UpdateConfigMapRequestPathSelectorCasConditionalStateMetadataUpdateTime) WithArrayOfValues(values []*timestamp.Timestamp) *UpdateConfigMapRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateConfigMapRequest_FieldSubPathArrayOfValues)
}

type UpdateConfigMapRequestPathSelectorCasConditionalStateMetadataDeleteTime struct{}

func (UpdateConfigMapRequestPathSelectorCasConditionalStateMetadataDeleteTime) FieldPath() *UpdateConfigMapRequest_FieldSubPath {
	return &UpdateConfigMapRequest_FieldSubPath{
		selector: UpdateConfigMapRequest_FieldPathSelectorCas,
		subPath:  NewUpdateConfigMapRequestCASFieldPathBuilder().ConditionalState().Metadata().DeleteTime().FieldPath(),
	}
}

func (s UpdateConfigMapRequestPathSelectorCasConditionalStateMetadataDeleteTime) WithValue(value *timestamp.Timestamp) *UpdateConfigMapRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateConfigMapRequest_FieldSubPathValue)
}

func (s UpdateConfigMapRequestPathSelectorCasConditionalStateMetadataDeleteTime) WithArrayOfValues(values []*timestamp.Timestamp) *UpdateConfigMapRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateConfigMapRequest_FieldSubPathArrayOfValues)
}

type UpdateConfigMapRequestPathSelectorCasConditionalStateMetadataUuid struct{}

func (UpdateConfigMapRequestPathSelectorCasConditionalStateMetadataUuid) FieldPath() *UpdateConfigMapRequest_FieldSubPath {
	return &UpdateConfigMapRequest_FieldSubPath{
		selector: UpdateConfigMapRequest_FieldPathSelectorCas,
		subPath:  NewUpdateConfigMapRequestCASFieldPathBuilder().ConditionalState().Metadata().Uuid().FieldPath(),
	}
}

func (s UpdateConfigMapRequestPathSelectorCasConditionalStateMetadataUuid) WithValue(value string) *UpdateConfigMapRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateConfigMapRequest_FieldSubPathValue)
}

func (s UpdateConfigMapRequestPathSelectorCasConditionalStateMetadataUuid) WithArrayOfValues(values []string) *UpdateConfigMapRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateConfigMapRequest_FieldSubPathArrayOfValues)
}

type UpdateConfigMapRequestPathSelectorCasConditionalStateMetadataTags struct{}

func (UpdateConfigMapRequestPathSelectorCasConditionalStateMetadataTags) FieldPath() *UpdateConfigMapRequest_FieldSubPath {
	return &UpdateConfigMapRequest_FieldSubPath{
		selector: UpdateConfigMapRequest_FieldPathSelectorCas,
		subPath:  NewUpdateConfigMapRequestCASFieldPathBuilder().ConditionalState().Metadata().Tags().FieldPath(),
	}
}

func (s UpdateConfigMapRequestPathSelectorCasConditionalStateMetadataTags) WithValue(value []string) *UpdateConfigMapRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateConfigMapRequest_FieldSubPathValue)
}

func (s UpdateConfigMapRequestPathSelectorCasConditionalStateMetadataTags) WithArrayOfValues(values [][]string) *UpdateConfigMapRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateConfigMapRequest_FieldSubPathArrayOfValues)
}

func (s UpdateConfigMapRequestPathSelectorCasConditionalStateMetadataTags) WithItemValue(value string) *UpdateConfigMapRequest_FieldSubPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*UpdateConfigMapRequest_FieldSubPathArrayItemValue)
}

type UpdateConfigMapRequestPathSelectorCasConditionalStateMetadataLabels struct{}

func (UpdateConfigMapRequestPathSelectorCasConditionalStateMetadataLabels) FieldPath() *UpdateConfigMapRequest_FieldSubPath {
	return &UpdateConfigMapRequest_FieldSubPath{
		selector: UpdateConfigMapRequest_FieldPathSelectorCas,
		subPath:  NewUpdateConfigMapRequestCASFieldPathBuilder().ConditionalState().Metadata().Labels().FieldPath(),
	}
}

func (s UpdateConfigMapRequestPathSelectorCasConditionalStateMetadataLabels) WithValue(value map[string]string) *UpdateConfigMapRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateConfigMapRequest_FieldSubPathValue)
}

func (s UpdateConfigMapRequestPathSelectorCasConditionalStateMetadataLabels) WithArrayOfValues(values []map[string]string) *UpdateConfigMapRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateConfigMapRequest_FieldSubPathArrayOfValues)
}

func (UpdateConfigMapRequestPathSelectorCasConditionalStateMetadataLabels) WithKey(key string) UpdateConfigMapRequestMapPathSelectorCasConditionalStateMetadataLabels {
	return UpdateConfigMapRequestMapPathSelectorCasConditionalStateMetadataLabels{key: key}
}

type UpdateConfigMapRequestMapPathSelectorCasConditionalStateMetadataLabels struct {
	key string
}

func (s UpdateConfigMapRequestMapPathSelectorCasConditionalStateMetadataLabels) FieldPath() *UpdateConfigMapRequest_FieldSubPath {
	return &UpdateConfigMapRequest_FieldSubPath{
		selector: UpdateConfigMapRequest_FieldPathSelectorCas,
		subPath:  NewUpdateConfigMapRequestCASFieldPathBuilder().ConditionalState().Metadata().Labels().WithKey(s.key).FieldPath(),
	}
}

func (s UpdateConfigMapRequestMapPathSelectorCasConditionalStateMetadataLabels) WithValue(value string) *UpdateConfigMapRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateConfigMapRequest_FieldSubPathValue)
}

func (s UpdateConfigMapRequestMapPathSelectorCasConditionalStateMetadataLabels) WithArrayOfValues(values []string) *UpdateConfigMapRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateConfigMapRequest_FieldSubPathArrayOfValues)
}

type UpdateConfigMapRequestPathSelectorCasConditionalStateMetadataAnnotations struct{}

func (UpdateConfigMapRequestPathSelectorCasConditionalStateMetadataAnnotations) FieldPath() *UpdateConfigMapRequest_FieldSubPath {
	return &UpdateConfigMapRequest_FieldSubPath{
		selector: UpdateConfigMapRequest_FieldPathSelectorCas,
		subPath:  NewUpdateConfigMapRequestCASFieldPathBuilder().ConditionalState().Metadata().Annotations().FieldPath(),
	}
}

func (s UpdateConfigMapRequestPathSelectorCasConditionalStateMetadataAnnotations) WithValue(value map[string]string) *UpdateConfigMapRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateConfigMapRequest_FieldSubPathValue)
}

func (s UpdateConfigMapRequestPathSelectorCasConditionalStateMetadataAnnotations) WithArrayOfValues(values []map[string]string) *UpdateConfigMapRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateConfigMapRequest_FieldSubPathArrayOfValues)
}

func (UpdateConfigMapRequestPathSelectorCasConditionalStateMetadataAnnotations) WithKey(key string) UpdateConfigMapRequestMapPathSelectorCasConditionalStateMetadataAnnotations {
	return UpdateConfigMapRequestMapPathSelectorCasConditionalStateMetadataAnnotations{key: key}
}

type UpdateConfigMapRequestMapPathSelectorCasConditionalStateMetadataAnnotations struct {
	key string
}

func (s UpdateConfigMapRequestMapPathSelectorCasConditionalStateMetadataAnnotations) FieldPath() *UpdateConfigMapRequest_FieldSubPath {
	return &UpdateConfigMapRequest_FieldSubPath{
		selector: UpdateConfigMapRequest_FieldPathSelectorCas,
		subPath:  NewUpdateConfigMapRequestCASFieldPathBuilder().ConditionalState().Metadata().Annotations().WithKey(s.key).FieldPath(),
	}
}

func (s UpdateConfigMapRequestMapPathSelectorCasConditionalStateMetadataAnnotations) WithValue(value string) *UpdateConfigMapRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateConfigMapRequest_FieldSubPathValue)
}

func (s UpdateConfigMapRequestMapPathSelectorCasConditionalStateMetadataAnnotations) WithArrayOfValues(values []string) *UpdateConfigMapRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateConfigMapRequest_FieldSubPathArrayOfValues)
}

type UpdateConfigMapRequestPathSelectorCasConditionalStateMetadataGeneration struct{}

func (UpdateConfigMapRequestPathSelectorCasConditionalStateMetadataGeneration) FieldPath() *UpdateConfigMapRequest_FieldSubPath {
	return &UpdateConfigMapRequest_FieldSubPath{
		selector: UpdateConfigMapRequest_FieldPathSelectorCas,
		subPath:  NewUpdateConfigMapRequestCASFieldPathBuilder().ConditionalState().Metadata().Generation().FieldPath(),
	}
}

func (s UpdateConfigMapRequestPathSelectorCasConditionalStateMetadataGeneration) WithValue(value int64) *UpdateConfigMapRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateConfigMapRequest_FieldSubPathValue)
}

func (s UpdateConfigMapRequestPathSelectorCasConditionalStateMetadataGeneration) WithArrayOfValues(values []int64) *UpdateConfigMapRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateConfigMapRequest_FieldSubPathArrayOfValues)
}

type UpdateConfigMapRequestPathSelectorCasConditionalStateMetadataResourceVersion struct{}

func (UpdateConfigMapRequestPathSelectorCasConditionalStateMetadataResourceVersion) FieldPath() *UpdateConfigMapRequest_FieldSubPath {
	return &UpdateConfigMapRequest_FieldSubPath{
		selector: UpdateConfigMapRequest_FieldPathSelectorCas,
		subPath:  NewUpdateConfigMapRequestCASFieldPathBuilder().ConditionalState().Metadata().ResourceVersion().FieldPath(),
	}
}

func (s UpdateConfigMapRequestPathSelectorCasConditionalStateMetadataResourceVersion) WithValue(value string) *UpdateConfigMapRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateConfigMapRequest_FieldSubPathValue)
}

func (s UpdateConfigMapRequestPathSelectorCasConditionalStateMetadataResourceVersion) WithArrayOfValues(values []string) *UpdateConfigMapRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateConfigMapRequest_FieldSubPathArrayOfValues)
}

type UpdateConfigMapRequestPathSelectorCasConditionalStateMetadataOwnerReferences struct{}

func (UpdateConfigMapRequestPathSelectorCasConditionalStateMetadataOwnerReferences) FieldPath() *UpdateConfigMapRequest_FieldSubPath {
	return &UpdateConfigMapRequest_FieldSubPath{
		selector: UpdateConfigMapRequest_FieldPathSelectorCas,
		subPath:  NewUpdateConfigMapRequestCASFieldPathBuilder().ConditionalState().Metadata().OwnerReferences().FieldPath(),
	}
}

func (s UpdateConfigMapRequestPathSelectorCasConditionalStateMetadataOwnerReferences) WithValue(value []*ntt_meta.OwnerReference) *UpdateConfigMapRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateConfigMapRequest_FieldSubPathValue)
}

func (s UpdateConfigMapRequestPathSelectorCasConditionalStateMetadataOwnerReferences) WithArrayOfValues(values [][]*ntt_meta.OwnerReference) *UpdateConfigMapRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateConfigMapRequest_FieldSubPathArrayOfValues)
}

func (s UpdateConfigMapRequestPathSelectorCasConditionalStateMetadataOwnerReferences) WithItemValue(value *ntt_meta.OwnerReference) *UpdateConfigMapRequest_FieldSubPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*UpdateConfigMapRequest_FieldSubPathArrayItemValue)
}

func (UpdateConfigMapRequestPathSelectorCasConditionalStateMetadataOwnerReferences) Kind() UpdateConfigMapRequestPathSelectorCasConditionalStateMetadataOwnerReferencesKind {
	return UpdateConfigMapRequestPathSelectorCasConditionalStateMetadataOwnerReferencesKind{}
}

func (UpdateConfigMapRequestPathSelectorCasConditionalStateMetadataOwnerReferences) Version() UpdateConfigMapRequestPathSelectorCasConditionalStateMetadataOwnerReferencesVersion {
	return UpdateConfigMapRequestPathSelectorCasConditionalStateMetadataOwnerReferencesVersion{}
}

func (UpdateConfigMapRequestPathSelectorCasConditionalStateMetadataOwnerReferences) Name() UpdateConfigMapRequestPathSelectorCasConditionalStateMetadataOwnerReferencesName {
	return UpdateConfigMapRequestPathSelectorCasConditionalStateMetadataOwnerReferencesName{}
}

func (UpdateConfigMapRequestPathSelectorCasConditionalStateMetadataOwnerReferences) Region() UpdateConfigMapRequestPathSelectorCasConditionalStateMetadataOwnerReferencesRegion {
	return UpdateConfigMapRequestPathSelectorCasConditionalStateMetadataOwnerReferencesRegion{}
}

func (UpdateConfigMapRequestPathSelectorCasConditionalStateMetadataOwnerReferences) Controller() UpdateConfigMapRequestPathSelectorCasConditionalStateMetadataOwnerReferencesController {
	return UpdateConfigMapRequestPathSelectorCasConditionalStateMetadataOwnerReferencesController{}
}

func (UpdateConfigMapRequestPathSelectorCasConditionalStateMetadataOwnerReferences) BlockOwnerDeletion() UpdateConfigMapRequestPathSelectorCasConditionalStateMetadataOwnerReferencesBlockOwnerDeletion {
	return UpdateConfigMapRequestPathSelectorCasConditionalStateMetadataOwnerReferencesBlockOwnerDeletion{}
}

func (UpdateConfigMapRequestPathSelectorCasConditionalStateMetadataOwnerReferences) RequiresOwnerReference() UpdateConfigMapRequestPathSelectorCasConditionalStateMetadataOwnerReferencesRequiresOwnerReference {
	return UpdateConfigMapRequestPathSelectorCasConditionalStateMetadataOwnerReferencesRequiresOwnerReference{}
}

type UpdateConfigMapRequestPathSelectorCasConditionalStateMetadataOwnerReferencesKind struct{}

func (UpdateConfigMapRequestPathSelectorCasConditionalStateMetadataOwnerReferencesKind) FieldPath() *UpdateConfigMapRequest_FieldSubPath {
	return &UpdateConfigMapRequest_FieldSubPath{
		selector: UpdateConfigMapRequest_FieldPathSelectorCas,
		subPath:  NewUpdateConfigMapRequestCASFieldPathBuilder().ConditionalState().Metadata().OwnerReferences().Kind().FieldPath(),
	}
}

func (s UpdateConfigMapRequestPathSelectorCasConditionalStateMetadataOwnerReferencesKind) WithValue(value string) *UpdateConfigMapRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateConfigMapRequest_FieldSubPathValue)
}

func (s UpdateConfigMapRequestPathSelectorCasConditionalStateMetadataOwnerReferencesKind) WithArrayOfValues(values []string) *UpdateConfigMapRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateConfigMapRequest_FieldSubPathArrayOfValues)
}

type UpdateConfigMapRequestPathSelectorCasConditionalStateMetadataOwnerReferencesVersion struct{}

func (UpdateConfigMapRequestPathSelectorCasConditionalStateMetadataOwnerReferencesVersion) FieldPath() *UpdateConfigMapRequest_FieldSubPath {
	return &UpdateConfigMapRequest_FieldSubPath{
		selector: UpdateConfigMapRequest_FieldPathSelectorCas,
		subPath:  NewUpdateConfigMapRequestCASFieldPathBuilder().ConditionalState().Metadata().OwnerReferences().Version().FieldPath(),
	}
}

func (s UpdateConfigMapRequestPathSelectorCasConditionalStateMetadataOwnerReferencesVersion) WithValue(value string) *UpdateConfigMapRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateConfigMapRequest_FieldSubPathValue)
}

func (s UpdateConfigMapRequestPathSelectorCasConditionalStateMetadataOwnerReferencesVersion) WithArrayOfValues(values []string) *UpdateConfigMapRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateConfigMapRequest_FieldSubPathArrayOfValues)
}

type UpdateConfigMapRequestPathSelectorCasConditionalStateMetadataOwnerReferencesName struct{}

func (UpdateConfigMapRequestPathSelectorCasConditionalStateMetadataOwnerReferencesName) FieldPath() *UpdateConfigMapRequest_FieldSubPath {
	return &UpdateConfigMapRequest_FieldSubPath{
		selector: UpdateConfigMapRequest_FieldPathSelectorCas,
		subPath:  NewUpdateConfigMapRequestCASFieldPathBuilder().ConditionalState().Metadata().OwnerReferences().Name().FieldPath(),
	}
}

func (s UpdateConfigMapRequestPathSelectorCasConditionalStateMetadataOwnerReferencesName) WithValue(value string) *UpdateConfigMapRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateConfigMapRequest_FieldSubPathValue)
}

func (s UpdateConfigMapRequestPathSelectorCasConditionalStateMetadataOwnerReferencesName) WithArrayOfValues(values []string) *UpdateConfigMapRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateConfigMapRequest_FieldSubPathArrayOfValues)
}

type UpdateConfigMapRequestPathSelectorCasConditionalStateMetadataOwnerReferencesRegion struct{}

func (UpdateConfigMapRequestPathSelectorCasConditionalStateMetadataOwnerReferencesRegion) FieldPath() *UpdateConfigMapRequest_FieldSubPath {
	return &UpdateConfigMapRequest_FieldSubPath{
		selector: UpdateConfigMapRequest_FieldPathSelectorCas,
		subPath:  NewUpdateConfigMapRequestCASFieldPathBuilder().ConditionalState().Metadata().OwnerReferences().Region().FieldPath(),
	}
}

func (s UpdateConfigMapRequestPathSelectorCasConditionalStateMetadataOwnerReferencesRegion) WithValue(value string) *UpdateConfigMapRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateConfigMapRequest_FieldSubPathValue)
}

func (s UpdateConfigMapRequestPathSelectorCasConditionalStateMetadataOwnerReferencesRegion) WithArrayOfValues(values []string) *UpdateConfigMapRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateConfigMapRequest_FieldSubPathArrayOfValues)
}

type UpdateConfigMapRequestPathSelectorCasConditionalStateMetadataOwnerReferencesController struct{}

func (UpdateConfigMapRequestPathSelectorCasConditionalStateMetadataOwnerReferencesController) FieldPath() *UpdateConfigMapRequest_FieldSubPath {
	return &UpdateConfigMapRequest_FieldSubPath{
		selector: UpdateConfigMapRequest_FieldPathSelectorCas,
		subPath:  NewUpdateConfigMapRequestCASFieldPathBuilder().ConditionalState().Metadata().OwnerReferences().Controller().FieldPath(),
	}
}

func (s UpdateConfigMapRequestPathSelectorCasConditionalStateMetadataOwnerReferencesController) WithValue(value bool) *UpdateConfigMapRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateConfigMapRequest_FieldSubPathValue)
}

func (s UpdateConfigMapRequestPathSelectorCasConditionalStateMetadataOwnerReferencesController) WithArrayOfValues(values []bool) *UpdateConfigMapRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateConfigMapRequest_FieldSubPathArrayOfValues)
}

type UpdateConfigMapRequestPathSelectorCasConditionalStateMetadataOwnerReferencesBlockOwnerDeletion struct{}

func (UpdateConfigMapRequestPathSelectorCasConditionalStateMetadataOwnerReferencesBlockOwnerDeletion) FieldPath() *UpdateConfigMapRequest_FieldSubPath {
	return &UpdateConfigMapRequest_FieldSubPath{
		selector: UpdateConfigMapRequest_FieldPathSelectorCas,
		subPath:  NewUpdateConfigMapRequestCASFieldPathBuilder().ConditionalState().Metadata().OwnerReferences().BlockOwnerDeletion().FieldPath(),
	}
}

func (s UpdateConfigMapRequestPathSelectorCasConditionalStateMetadataOwnerReferencesBlockOwnerDeletion) WithValue(value bool) *UpdateConfigMapRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateConfigMapRequest_FieldSubPathValue)
}

func (s UpdateConfigMapRequestPathSelectorCasConditionalStateMetadataOwnerReferencesBlockOwnerDeletion) WithArrayOfValues(values []bool) *UpdateConfigMapRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateConfigMapRequest_FieldSubPathArrayOfValues)
}

type UpdateConfigMapRequestPathSelectorCasConditionalStateMetadataOwnerReferencesRequiresOwnerReference struct{}

func (UpdateConfigMapRequestPathSelectorCasConditionalStateMetadataOwnerReferencesRequiresOwnerReference) FieldPath() *UpdateConfigMapRequest_FieldSubPath {
	return &UpdateConfigMapRequest_FieldSubPath{
		selector: UpdateConfigMapRequest_FieldPathSelectorCas,
		subPath:  NewUpdateConfigMapRequestCASFieldPathBuilder().ConditionalState().Metadata().OwnerReferences().RequiresOwnerReference().FieldPath(),
	}
}

func (s UpdateConfigMapRequestPathSelectorCasConditionalStateMetadataOwnerReferencesRequiresOwnerReference) WithValue(value bool) *UpdateConfigMapRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateConfigMapRequest_FieldSubPathValue)
}

func (s UpdateConfigMapRequestPathSelectorCasConditionalStateMetadataOwnerReferencesRequiresOwnerReference) WithArrayOfValues(values []bool) *UpdateConfigMapRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateConfigMapRequest_FieldSubPathArrayOfValues)
}

type UpdateConfigMapRequestPathSelectorCasConditionalStateMetadataShards struct{}

func (UpdateConfigMapRequestPathSelectorCasConditionalStateMetadataShards) FieldPath() *UpdateConfigMapRequest_FieldSubPath {
	return &UpdateConfigMapRequest_FieldSubPath{
		selector: UpdateConfigMapRequest_FieldPathSelectorCas,
		subPath:  NewUpdateConfigMapRequestCASFieldPathBuilder().ConditionalState().Metadata().Shards().FieldPath(),
	}
}

func (s UpdateConfigMapRequestPathSelectorCasConditionalStateMetadataShards) WithValue(value map[string]int64) *UpdateConfigMapRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateConfigMapRequest_FieldSubPathValue)
}

func (s UpdateConfigMapRequestPathSelectorCasConditionalStateMetadataShards) WithArrayOfValues(values []map[string]int64) *UpdateConfigMapRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateConfigMapRequest_FieldSubPathArrayOfValues)
}

func (UpdateConfigMapRequestPathSelectorCasConditionalStateMetadataShards) WithKey(key string) UpdateConfigMapRequestMapPathSelectorCasConditionalStateMetadataShards {
	return UpdateConfigMapRequestMapPathSelectorCasConditionalStateMetadataShards{key: key}
}

type UpdateConfigMapRequestMapPathSelectorCasConditionalStateMetadataShards struct {
	key string
}

func (s UpdateConfigMapRequestMapPathSelectorCasConditionalStateMetadataShards) FieldPath() *UpdateConfigMapRequest_FieldSubPath {
	return &UpdateConfigMapRequest_FieldSubPath{
		selector: UpdateConfigMapRequest_FieldPathSelectorCas,
		subPath:  NewUpdateConfigMapRequestCASFieldPathBuilder().ConditionalState().Metadata().Shards().WithKey(s.key).FieldPath(),
	}
}

func (s UpdateConfigMapRequestMapPathSelectorCasConditionalStateMetadataShards) WithValue(value int64) *UpdateConfigMapRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateConfigMapRequest_FieldSubPathValue)
}

func (s UpdateConfigMapRequestMapPathSelectorCasConditionalStateMetadataShards) WithArrayOfValues(values []int64) *UpdateConfigMapRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateConfigMapRequest_FieldSubPathArrayOfValues)
}

type UpdateConfigMapRequestPathSelectorCasConditionalStateMetadataSyncing struct{}

func (UpdateConfigMapRequestPathSelectorCasConditionalStateMetadataSyncing) FieldPath() *UpdateConfigMapRequest_FieldSubPath {
	return &UpdateConfigMapRequest_FieldSubPath{
		selector: UpdateConfigMapRequest_FieldPathSelectorCas,
		subPath:  NewUpdateConfigMapRequestCASFieldPathBuilder().ConditionalState().Metadata().Syncing().FieldPath(),
	}
}

func (s UpdateConfigMapRequestPathSelectorCasConditionalStateMetadataSyncing) WithValue(value *ntt_meta.SyncingMeta) *UpdateConfigMapRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateConfigMapRequest_FieldSubPathValue)
}

func (s UpdateConfigMapRequestPathSelectorCasConditionalStateMetadataSyncing) WithArrayOfValues(values []*ntt_meta.SyncingMeta) *UpdateConfigMapRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateConfigMapRequest_FieldSubPathArrayOfValues)
}

func (UpdateConfigMapRequestPathSelectorCasConditionalStateMetadataSyncing) OwningRegion() UpdateConfigMapRequestPathSelectorCasConditionalStateMetadataSyncingOwningRegion {
	return UpdateConfigMapRequestPathSelectorCasConditionalStateMetadataSyncingOwningRegion{}
}

func (UpdateConfigMapRequestPathSelectorCasConditionalStateMetadataSyncing) Regions() UpdateConfigMapRequestPathSelectorCasConditionalStateMetadataSyncingRegions {
	return UpdateConfigMapRequestPathSelectorCasConditionalStateMetadataSyncingRegions{}
}

type UpdateConfigMapRequestPathSelectorCasConditionalStateMetadataSyncingOwningRegion struct{}

func (UpdateConfigMapRequestPathSelectorCasConditionalStateMetadataSyncingOwningRegion) FieldPath() *UpdateConfigMapRequest_FieldSubPath {
	return &UpdateConfigMapRequest_FieldSubPath{
		selector: UpdateConfigMapRequest_FieldPathSelectorCas,
		subPath:  NewUpdateConfigMapRequestCASFieldPathBuilder().ConditionalState().Metadata().Syncing().OwningRegion().FieldPath(),
	}
}

func (s UpdateConfigMapRequestPathSelectorCasConditionalStateMetadataSyncingOwningRegion) WithValue(value string) *UpdateConfigMapRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateConfigMapRequest_FieldSubPathValue)
}

func (s UpdateConfigMapRequestPathSelectorCasConditionalStateMetadataSyncingOwningRegion) WithArrayOfValues(values []string) *UpdateConfigMapRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateConfigMapRequest_FieldSubPathArrayOfValues)
}

type UpdateConfigMapRequestPathSelectorCasConditionalStateMetadataSyncingRegions struct{}

func (UpdateConfigMapRequestPathSelectorCasConditionalStateMetadataSyncingRegions) FieldPath() *UpdateConfigMapRequest_FieldSubPath {
	return &UpdateConfigMapRequest_FieldSubPath{
		selector: UpdateConfigMapRequest_FieldPathSelectorCas,
		subPath:  NewUpdateConfigMapRequestCASFieldPathBuilder().ConditionalState().Metadata().Syncing().Regions().FieldPath(),
	}
}

func (s UpdateConfigMapRequestPathSelectorCasConditionalStateMetadataSyncingRegions) WithValue(value []string) *UpdateConfigMapRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateConfigMapRequest_FieldSubPathValue)
}

func (s UpdateConfigMapRequestPathSelectorCasConditionalStateMetadataSyncingRegions) WithArrayOfValues(values [][]string) *UpdateConfigMapRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateConfigMapRequest_FieldSubPathArrayOfValues)
}

func (s UpdateConfigMapRequestPathSelectorCasConditionalStateMetadataSyncingRegions) WithItemValue(value string) *UpdateConfigMapRequest_FieldSubPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*UpdateConfigMapRequest_FieldSubPathArrayItemValue)
}

type UpdateConfigMapRequestPathSelectorCasConditionalStateMetadataLifecycle struct{}

func (UpdateConfigMapRequestPathSelectorCasConditionalStateMetadataLifecycle) FieldPath() *UpdateConfigMapRequest_FieldSubPath {
	return &UpdateConfigMapRequest_FieldSubPath{
		selector: UpdateConfigMapRequest_FieldPathSelectorCas,
		subPath:  NewUpdateConfigMapRequestCASFieldPathBuilder().ConditionalState().Metadata().Lifecycle().FieldPath(),
	}
}

func (s UpdateConfigMapRequestPathSelectorCasConditionalStateMetadataLifecycle) WithValue(value *ntt_meta.Lifecycle) *UpdateConfigMapRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateConfigMapRequest_FieldSubPathValue)
}

func (s UpdateConfigMapRequestPathSelectorCasConditionalStateMetadataLifecycle) WithArrayOfValues(values []*ntt_meta.Lifecycle) *UpdateConfigMapRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateConfigMapRequest_FieldSubPathArrayOfValues)
}

func (UpdateConfigMapRequestPathSelectorCasConditionalStateMetadataLifecycle) State() UpdateConfigMapRequestPathSelectorCasConditionalStateMetadataLifecycleState {
	return UpdateConfigMapRequestPathSelectorCasConditionalStateMetadataLifecycleState{}
}

func (UpdateConfigMapRequestPathSelectorCasConditionalStateMetadataLifecycle) BlockDeletion() UpdateConfigMapRequestPathSelectorCasConditionalStateMetadataLifecycleBlockDeletion {
	return UpdateConfigMapRequestPathSelectorCasConditionalStateMetadataLifecycleBlockDeletion{}
}

type UpdateConfigMapRequestPathSelectorCasConditionalStateMetadataLifecycleState struct{}

func (UpdateConfigMapRequestPathSelectorCasConditionalStateMetadataLifecycleState) FieldPath() *UpdateConfigMapRequest_FieldSubPath {
	return &UpdateConfigMapRequest_FieldSubPath{
		selector: UpdateConfigMapRequest_FieldPathSelectorCas,
		subPath:  NewUpdateConfigMapRequestCASFieldPathBuilder().ConditionalState().Metadata().Lifecycle().State().FieldPath(),
	}
}

func (s UpdateConfigMapRequestPathSelectorCasConditionalStateMetadataLifecycleState) WithValue(value ntt_meta.Lifecycle_State) *UpdateConfigMapRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateConfigMapRequest_FieldSubPathValue)
}

func (s UpdateConfigMapRequestPathSelectorCasConditionalStateMetadataLifecycleState) WithArrayOfValues(values []ntt_meta.Lifecycle_State) *UpdateConfigMapRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateConfigMapRequest_FieldSubPathArrayOfValues)
}

type UpdateConfigMapRequestPathSelectorCasConditionalStateMetadataLifecycleBlockDeletion struct{}

func (UpdateConfigMapRequestPathSelectorCasConditionalStateMetadataLifecycleBlockDeletion) FieldPath() *UpdateConfigMapRequest_FieldSubPath {
	return &UpdateConfigMapRequest_FieldSubPath{
		selector: UpdateConfigMapRequest_FieldPathSelectorCas,
		subPath:  NewUpdateConfigMapRequestCASFieldPathBuilder().ConditionalState().Metadata().Lifecycle().BlockDeletion().FieldPath(),
	}
}

func (s UpdateConfigMapRequestPathSelectorCasConditionalStateMetadataLifecycleBlockDeletion) WithValue(value bool) *UpdateConfigMapRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateConfigMapRequest_FieldSubPathValue)
}

func (s UpdateConfigMapRequestPathSelectorCasConditionalStateMetadataLifecycleBlockDeletion) WithArrayOfValues(values []bool) *UpdateConfigMapRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateConfigMapRequest_FieldSubPathArrayOfValues)
}

type UpdateConfigMapRequestPathSelectorCasConditionalStateData struct{}

func (UpdateConfigMapRequestPathSelectorCasConditionalStateData) FieldPath() *UpdateConfigMapRequest_FieldSubPath {
	return &UpdateConfigMapRequest_FieldSubPath{
		selector: UpdateConfigMapRequest_FieldPathSelectorCas,
		subPath:  NewUpdateConfigMapRequestCASFieldPathBuilder().ConditionalState().Data().FieldPath(),
	}
}

func (s UpdateConfigMapRequestPathSelectorCasConditionalStateData) WithValue(value map[string]string) *UpdateConfigMapRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateConfigMapRequest_FieldSubPathValue)
}

func (s UpdateConfigMapRequestPathSelectorCasConditionalStateData) WithArrayOfValues(values []map[string]string) *UpdateConfigMapRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateConfigMapRequest_FieldSubPathArrayOfValues)
}

func (UpdateConfigMapRequestPathSelectorCasConditionalStateData) WithKey(key string) UpdateConfigMapRequestMapPathSelectorCasConditionalStateData {
	return UpdateConfigMapRequestMapPathSelectorCasConditionalStateData{key: key}
}

type UpdateConfigMapRequestMapPathSelectorCasConditionalStateData struct {
	key string
}

func (s UpdateConfigMapRequestMapPathSelectorCasConditionalStateData) FieldPath() *UpdateConfigMapRequest_FieldSubPath {
	return &UpdateConfigMapRequest_FieldSubPath{
		selector: UpdateConfigMapRequest_FieldPathSelectorCas,
		subPath:  NewUpdateConfigMapRequestCASFieldPathBuilder().ConditionalState().Data().WithKey(s.key).FieldPath(),
	}
}

func (s UpdateConfigMapRequestMapPathSelectorCasConditionalStateData) WithValue(value string) *UpdateConfigMapRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateConfigMapRequest_FieldSubPathValue)
}

func (s UpdateConfigMapRequestMapPathSelectorCasConditionalStateData) WithArrayOfValues(values []string) *UpdateConfigMapRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateConfigMapRequest_FieldSubPathArrayOfValues)
}

type UpdateConfigMapRequestPathSelectorCasConditionalStateBinaryData struct{}

func (UpdateConfigMapRequestPathSelectorCasConditionalStateBinaryData) FieldPath() *UpdateConfigMapRequest_FieldSubPath {
	return &UpdateConfigMapRequest_FieldSubPath{
		selector: UpdateConfigMapRequest_FieldPathSelectorCas,
		subPath:  NewUpdateConfigMapRequestCASFieldPathBuilder().ConditionalState().BinaryData().FieldPath(),
	}
}

func (s UpdateConfigMapRequestPathSelectorCasConditionalStateBinaryData) WithValue(value map[string][]byte) *UpdateConfigMapRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateConfigMapRequest_FieldSubPathValue)
}

func (s UpdateConfigMapRequestPathSelectorCasConditionalStateBinaryData) WithArrayOfValues(values []map[string][]byte) *UpdateConfigMapRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateConfigMapRequest_FieldSubPathArrayOfValues)
}

func (UpdateConfigMapRequestPathSelectorCasConditionalStateBinaryData) WithKey(key string) UpdateConfigMapRequestMapPathSelectorCasConditionalStateBinaryData {
	return UpdateConfigMapRequestMapPathSelectorCasConditionalStateBinaryData{key: key}
}

type UpdateConfigMapRequestMapPathSelectorCasConditionalStateBinaryData struct {
	key string
}

func (s UpdateConfigMapRequestMapPathSelectorCasConditionalStateBinaryData) FieldPath() *UpdateConfigMapRequest_FieldSubPath {
	return &UpdateConfigMapRequest_FieldSubPath{
		selector: UpdateConfigMapRequest_FieldPathSelectorCas,
		subPath:  NewUpdateConfigMapRequestCASFieldPathBuilder().ConditionalState().BinaryData().WithKey(s.key).FieldPath(),
	}
}

func (s UpdateConfigMapRequestMapPathSelectorCasConditionalStateBinaryData) WithValue(value []byte) *UpdateConfigMapRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateConfigMapRequest_FieldSubPathValue)
}

func (s UpdateConfigMapRequestMapPathSelectorCasConditionalStateBinaryData) WithArrayOfValues(values [][]byte) *UpdateConfigMapRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateConfigMapRequest_FieldSubPathArrayOfValues)
}

type UpdateConfigMapRequestPathSelectorCasFieldMask struct{}

func (UpdateConfigMapRequestPathSelectorCasFieldMask) FieldPath() *UpdateConfigMapRequest_FieldSubPath {
	return &UpdateConfigMapRequest_FieldSubPath{
		selector: UpdateConfigMapRequest_FieldPathSelectorCas,
		subPath:  NewUpdateConfigMapRequestCASFieldPathBuilder().FieldMask().FieldPath(),
	}
}

func (s UpdateConfigMapRequestPathSelectorCasFieldMask) WithValue(value *config_map.ConfigMap_FieldMask) *UpdateConfigMapRequest_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateConfigMapRequest_FieldSubPathValue)
}

func (s UpdateConfigMapRequestPathSelectorCasFieldMask) WithArrayOfValues(values []*config_map.ConfigMap_FieldMask) *UpdateConfigMapRequest_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateConfigMapRequest_FieldSubPathArrayOfValues)
}

type UpdateConfigMapRequestCASFieldPathBuilder struct{}

func NewUpdateConfigMapRequestCASFieldPathBuilder() UpdateConfigMapRequestCASFieldPathBuilder {
	return UpdateConfigMapRequestCASFieldPathBuilder{}
}
func (UpdateConfigMapRequestCASFieldPathBuilder) ConditionalState() UpdateConfigMapRequest_CASPathSelectorConditionalState {
	return UpdateConfigMapRequest_CASPathSelectorConditionalState{}
}
func (UpdateConfigMapRequestCASFieldPathBuilder) FieldMask() UpdateConfigMapRequest_CASPathSelectorFieldMask {
	return UpdateConfigMapRequest_CASPathSelectorFieldMask{}
}

type UpdateConfigMapRequest_CASPathSelectorConditionalState struct{}

func (UpdateConfigMapRequest_CASPathSelectorConditionalState) FieldPath() *UpdateConfigMapRequestCAS_FieldTerminalPath {
	return &UpdateConfigMapRequestCAS_FieldTerminalPath{selector: UpdateConfigMapRequestCAS_FieldPathSelectorConditionalState}
}

func (s UpdateConfigMapRequest_CASPathSelectorConditionalState) WithValue(value *config_map.ConfigMap) *UpdateConfigMapRequestCAS_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateConfigMapRequestCAS_FieldTerminalPathValue)
}

func (s UpdateConfigMapRequest_CASPathSelectorConditionalState) WithArrayOfValues(values []*config_map.ConfigMap) *UpdateConfigMapRequestCAS_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateConfigMapRequestCAS_FieldTerminalPathArrayOfValues)
}

func (UpdateConfigMapRequest_CASPathSelectorConditionalState) WithSubPath(subPath config_map.ConfigMap_FieldPath) *UpdateConfigMapRequestCAS_FieldSubPath {
	return &UpdateConfigMapRequestCAS_FieldSubPath{selector: UpdateConfigMapRequestCAS_FieldPathSelectorConditionalState, subPath: subPath}
}

func (s UpdateConfigMapRequest_CASPathSelectorConditionalState) WithSubValue(subPathValue config_map.ConfigMap_FieldPathValue) *UpdateConfigMapRequestCAS_FieldSubPathValue {
	return &UpdateConfigMapRequestCAS_FieldSubPathValue{UpdateConfigMapRequestCAS_FieldPath: s.WithSubPath(subPathValue), subPathValue: subPathValue}
}

func (s UpdateConfigMapRequest_CASPathSelectorConditionalState) WithSubArrayOfValues(subPathArrayOfValues config_map.ConfigMap_FieldPathArrayOfValues) *UpdateConfigMapRequestCAS_FieldSubPathArrayOfValues {
	return &UpdateConfigMapRequestCAS_FieldSubPathArrayOfValues{UpdateConfigMapRequestCAS_FieldPath: s.WithSubPath(subPathArrayOfValues), subPathArrayOfValues: subPathArrayOfValues}
}

func (s UpdateConfigMapRequest_CASPathSelectorConditionalState) WithSubArrayItemValue(subPathArrayItemValue config_map.ConfigMap_FieldPathArrayItemValue) *UpdateConfigMapRequestCAS_FieldSubPathArrayItemValue {
	return &UpdateConfigMapRequestCAS_FieldSubPathArrayItemValue{UpdateConfigMapRequestCAS_FieldPath: s.WithSubPath(subPathArrayItemValue), subPathItemValue: subPathArrayItemValue}
}

func (UpdateConfigMapRequest_CASPathSelectorConditionalState) Name() UpdateConfigMapRequest_CASPathSelectorConditionalStateName {
	return UpdateConfigMapRequest_CASPathSelectorConditionalStateName{}
}

func (UpdateConfigMapRequest_CASPathSelectorConditionalState) DisplayName() UpdateConfigMapRequest_CASPathSelectorConditionalStateDisplayName {
	return UpdateConfigMapRequest_CASPathSelectorConditionalStateDisplayName{}
}

func (UpdateConfigMapRequest_CASPathSelectorConditionalState) Metadata() UpdateConfigMapRequest_CASPathSelectorConditionalStateMetadata {
	return UpdateConfigMapRequest_CASPathSelectorConditionalStateMetadata{}
}

func (UpdateConfigMapRequest_CASPathSelectorConditionalState) Data() UpdateConfigMapRequest_CASPathSelectorConditionalStateData {
	return UpdateConfigMapRequest_CASPathSelectorConditionalStateData{}
}

func (UpdateConfigMapRequest_CASPathSelectorConditionalState) BinaryData() UpdateConfigMapRequest_CASPathSelectorConditionalStateBinaryData {
	return UpdateConfigMapRequest_CASPathSelectorConditionalStateBinaryData{}
}

type UpdateConfigMapRequest_CASPathSelectorConditionalStateName struct{}

func (UpdateConfigMapRequest_CASPathSelectorConditionalStateName) FieldPath() *UpdateConfigMapRequestCAS_FieldSubPath {
	return &UpdateConfigMapRequestCAS_FieldSubPath{
		selector: UpdateConfigMapRequestCAS_FieldPathSelectorConditionalState,
		subPath:  config_map.NewConfigMapFieldPathBuilder().Name().FieldPath(),
	}
}

func (s UpdateConfigMapRequest_CASPathSelectorConditionalStateName) WithValue(value *config_map.Name) *UpdateConfigMapRequestCAS_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateConfigMapRequestCAS_FieldSubPathValue)
}

func (s UpdateConfigMapRequest_CASPathSelectorConditionalStateName) WithArrayOfValues(values []*config_map.Name) *UpdateConfigMapRequestCAS_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateConfigMapRequestCAS_FieldSubPathArrayOfValues)
}

type UpdateConfigMapRequest_CASPathSelectorConditionalStateDisplayName struct{}

func (UpdateConfigMapRequest_CASPathSelectorConditionalStateDisplayName) FieldPath() *UpdateConfigMapRequestCAS_FieldSubPath {
	return &UpdateConfigMapRequestCAS_FieldSubPath{
		selector: UpdateConfigMapRequestCAS_FieldPathSelectorConditionalState,
		subPath:  config_map.NewConfigMapFieldPathBuilder().DisplayName().FieldPath(),
	}
}

func (s UpdateConfigMapRequest_CASPathSelectorConditionalStateDisplayName) WithValue(value string) *UpdateConfigMapRequestCAS_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateConfigMapRequestCAS_FieldSubPathValue)
}

func (s UpdateConfigMapRequest_CASPathSelectorConditionalStateDisplayName) WithArrayOfValues(values []string) *UpdateConfigMapRequestCAS_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateConfigMapRequestCAS_FieldSubPathArrayOfValues)
}

type UpdateConfigMapRequest_CASPathSelectorConditionalStateMetadata struct{}

func (UpdateConfigMapRequest_CASPathSelectorConditionalStateMetadata) FieldPath() *UpdateConfigMapRequestCAS_FieldSubPath {
	return &UpdateConfigMapRequestCAS_FieldSubPath{
		selector: UpdateConfigMapRequestCAS_FieldPathSelectorConditionalState,
		subPath:  config_map.NewConfigMapFieldPathBuilder().Metadata().FieldPath(),
	}
}

func (s UpdateConfigMapRequest_CASPathSelectorConditionalStateMetadata) WithValue(value *ntt_meta.Meta) *UpdateConfigMapRequestCAS_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateConfigMapRequestCAS_FieldSubPathValue)
}

func (s UpdateConfigMapRequest_CASPathSelectorConditionalStateMetadata) WithArrayOfValues(values []*ntt_meta.Meta) *UpdateConfigMapRequestCAS_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateConfigMapRequestCAS_FieldSubPathArrayOfValues)
}

func (UpdateConfigMapRequest_CASPathSelectorConditionalStateMetadata) CreateTime() UpdateConfigMapRequest_CASPathSelectorConditionalStateMetadataCreateTime {
	return UpdateConfigMapRequest_CASPathSelectorConditionalStateMetadataCreateTime{}
}

func (UpdateConfigMapRequest_CASPathSelectorConditionalStateMetadata) UpdateTime() UpdateConfigMapRequest_CASPathSelectorConditionalStateMetadataUpdateTime {
	return UpdateConfigMapRequest_CASPathSelectorConditionalStateMetadataUpdateTime{}
}

func (UpdateConfigMapRequest_CASPathSelectorConditionalStateMetadata) DeleteTime() UpdateConfigMapRequest_CASPathSelectorConditionalStateMetadataDeleteTime {
	return UpdateConfigMapRequest_CASPathSelectorConditionalStateMetadataDeleteTime{}
}

func (UpdateConfigMapRequest_CASPathSelectorConditionalStateMetadata) Uuid() UpdateConfigMapRequest_CASPathSelectorConditionalStateMetadataUuid {
	return UpdateConfigMapRequest_CASPathSelectorConditionalStateMetadataUuid{}
}

func (UpdateConfigMapRequest_CASPathSelectorConditionalStateMetadata) Tags() UpdateConfigMapRequest_CASPathSelectorConditionalStateMetadataTags {
	return UpdateConfigMapRequest_CASPathSelectorConditionalStateMetadataTags{}
}

func (UpdateConfigMapRequest_CASPathSelectorConditionalStateMetadata) Labels() UpdateConfigMapRequest_CASPathSelectorConditionalStateMetadataLabels {
	return UpdateConfigMapRequest_CASPathSelectorConditionalStateMetadataLabels{}
}

func (UpdateConfigMapRequest_CASPathSelectorConditionalStateMetadata) Annotations() UpdateConfigMapRequest_CASPathSelectorConditionalStateMetadataAnnotations {
	return UpdateConfigMapRequest_CASPathSelectorConditionalStateMetadataAnnotations{}
}

func (UpdateConfigMapRequest_CASPathSelectorConditionalStateMetadata) Generation() UpdateConfigMapRequest_CASPathSelectorConditionalStateMetadataGeneration {
	return UpdateConfigMapRequest_CASPathSelectorConditionalStateMetadataGeneration{}
}

func (UpdateConfigMapRequest_CASPathSelectorConditionalStateMetadata) ResourceVersion() UpdateConfigMapRequest_CASPathSelectorConditionalStateMetadataResourceVersion {
	return UpdateConfigMapRequest_CASPathSelectorConditionalStateMetadataResourceVersion{}
}

func (UpdateConfigMapRequest_CASPathSelectorConditionalStateMetadata) OwnerReferences() UpdateConfigMapRequest_CASPathSelectorConditionalStateMetadataOwnerReferences {
	return UpdateConfigMapRequest_CASPathSelectorConditionalStateMetadataOwnerReferences{}
}

func (UpdateConfigMapRequest_CASPathSelectorConditionalStateMetadata) Shards() UpdateConfigMapRequest_CASPathSelectorConditionalStateMetadataShards {
	return UpdateConfigMapRequest_CASPathSelectorConditionalStateMetadataShards{}
}

func (UpdateConfigMapRequest_CASPathSelectorConditionalStateMetadata) Syncing() UpdateConfigMapRequest_CASPathSelectorConditionalStateMetadataSyncing {
	return UpdateConfigMapRequest_CASPathSelectorConditionalStateMetadataSyncing{}
}

func (UpdateConfigMapRequest_CASPathSelectorConditionalStateMetadata) Lifecycle() UpdateConfigMapRequest_CASPathSelectorConditionalStateMetadataLifecycle {
	return UpdateConfigMapRequest_CASPathSelectorConditionalStateMetadataLifecycle{}
}

type UpdateConfigMapRequest_CASPathSelectorConditionalStateMetadataCreateTime struct{}

func (UpdateConfigMapRequest_CASPathSelectorConditionalStateMetadataCreateTime) FieldPath() *UpdateConfigMapRequestCAS_FieldSubPath {
	return &UpdateConfigMapRequestCAS_FieldSubPath{
		selector: UpdateConfigMapRequestCAS_FieldPathSelectorConditionalState,
		subPath:  config_map.NewConfigMapFieldPathBuilder().Metadata().CreateTime().FieldPath(),
	}
}

func (s UpdateConfigMapRequest_CASPathSelectorConditionalStateMetadataCreateTime) WithValue(value *timestamp.Timestamp) *UpdateConfigMapRequestCAS_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateConfigMapRequestCAS_FieldSubPathValue)
}

func (s UpdateConfigMapRequest_CASPathSelectorConditionalStateMetadataCreateTime) WithArrayOfValues(values []*timestamp.Timestamp) *UpdateConfigMapRequestCAS_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateConfigMapRequestCAS_FieldSubPathArrayOfValues)
}

type UpdateConfigMapRequest_CASPathSelectorConditionalStateMetadataUpdateTime struct{}

func (UpdateConfigMapRequest_CASPathSelectorConditionalStateMetadataUpdateTime) FieldPath() *UpdateConfigMapRequestCAS_FieldSubPath {
	return &UpdateConfigMapRequestCAS_FieldSubPath{
		selector: UpdateConfigMapRequestCAS_FieldPathSelectorConditionalState,
		subPath:  config_map.NewConfigMapFieldPathBuilder().Metadata().UpdateTime().FieldPath(),
	}
}

func (s UpdateConfigMapRequest_CASPathSelectorConditionalStateMetadataUpdateTime) WithValue(value *timestamp.Timestamp) *UpdateConfigMapRequestCAS_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateConfigMapRequestCAS_FieldSubPathValue)
}

func (s UpdateConfigMapRequest_CASPathSelectorConditionalStateMetadataUpdateTime) WithArrayOfValues(values []*timestamp.Timestamp) *UpdateConfigMapRequestCAS_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateConfigMapRequestCAS_FieldSubPathArrayOfValues)
}

type UpdateConfigMapRequest_CASPathSelectorConditionalStateMetadataDeleteTime struct{}

func (UpdateConfigMapRequest_CASPathSelectorConditionalStateMetadataDeleteTime) FieldPath() *UpdateConfigMapRequestCAS_FieldSubPath {
	return &UpdateConfigMapRequestCAS_FieldSubPath{
		selector: UpdateConfigMapRequestCAS_FieldPathSelectorConditionalState,
		subPath:  config_map.NewConfigMapFieldPathBuilder().Metadata().DeleteTime().FieldPath(),
	}
}

func (s UpdateConfigMapRequest_CASPathSelectorConditionalStateMetadataDeleteTime) WithValue(value *timestamp.Timestamp) *UpdateConfigMapRequestCAS_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateConfigMapRequestCAS_FieldSubPathValue)
}

func (s UpdateConfigMapRequest_CASPathSelectorConditionalStateMetadataDeleteTime) WithArrayOfValues(values []*timestamp.Timestamp) *UpdateConfigMapRequestCAS_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateConfigMapRequestCAS_FieldSubPathArrayOfValues)
}

type UpdateConfigMapRequest_CASPathSelectorConditionalStateMetadataUuid struct{}

func (UpdateConfigMapRequest_CASPathSelectorConditionalStateMetadataUuid) FieldPath() *UpdateConfigMapRequestCAS_FieldSubPath {
	return &UpdateConfigMapRequestCAS_FieldSubPath{
		selector: UpdateConfigMapRequestCAS_FieldPathSelectorConditionalState,
		subPath:  config_map.NewConfigMapFieldPathBuilder().Metadata().Uuid().FieldPath(),
	}
}

func (s UpdateConfigMapRequest_CASPathSelectorConditionalStateMetadataUuid) WithValue(value string) *UpdateConfigMapRequestCAS_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateConfigMapRequestCAS_FieldSubPathValue)
}

func (s UpdateConfigMapRequest_CASPathSelectorConditionalStateMetadataUuid) WithArrayOfValues(values []string) *UpdateConfigMapRequestCAS_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateConfigMapRequestCAS_FieldSubPathArrayOfValues)
}

type UpdateConfigMapRequest_CASPathSelectorConditionalStateMetadataTags struct{}

func (UpdateConfigMapRequest_CASPathSelectorConditionalStateMetadataTags) FieldPath() *UpdateConfigMapRequestCAS_FieldSubPath {
	return &UpdateConfigMapRequestCAS_FieldSubPath{
		selector: UpdateConfigMapRequestCAS_FieldPathSelectorConditionalState,
		subPath:  config_map.NewConfigMapFieldPathBuilder().Metadata().Tags().FieldPath(),
	}
}

func (s UpdateConfigMapRequest_CASPathSelectorConditionalStateMetadataTags) WithValue(value []string) *UpdateConfigMapRequestCAS_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateConfigMapRequestCAS_FieldSubPathValue)
}

func (s UpdateConfigMapRequest_CASPathSelectorConditionalStateMetadataTags) WithArrayOfValues(values [][]string) *UpdateConfigMapRequestCAS_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateConfigMapRequestCAS_FieldSubPathArrayOfValues)
}

func (s UpdateConfigMapRequest_CASPathSelectorConditionalStateMetadataTags) WithItemValue(value string) *UpdateConfigMapRequestCAS_FieldSubPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*UpdateConfigMapRequestCAS_FieldSubPathArrayItemValue)
}

type UpdateConfigMapRequest_CASPathSelectorConditionalStateMetadataLabels struct{}

func (UpdateConfigMapRequest_CASPathSelectorConditionalStateMetadataLabels) FieldPath() *UpdateConfigMapRequestCAS_FieldSubPath {
	return &UpdateConfigMapRequestCAS_FieldSubPath{
		selector: UpdateConfigMapRequestCAS_FieldPathSelectorConditionalState,
		subPath:  config_map.NewConfigMapFieldPathBuilder().Metadata().Labels().FieldPath(),
	}
}

func (s UpdateConfigMapRequest_CASPathSelectorConditionalStateMetadataLabels) WithValue(value map[string]string) *UpdateConfigMapRequestCAS_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateConfigMapRequestCAS_FieldSubPathValue)
}

func (s UpdateConfigMapRequest_CASPathSelectorConditionalStateMetadataLabels) WithArrayOfValues(values []map[string]string) *UpdateConfigMapRequestCAS_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateConfigMapRequestCAS_FieldSubPathArrayOfValues)
}

func (UpdateConfigMapRequest_CASPathSelectorConditionalStateMetadataLabels) WithKey(key string) UpdateConfigMapRequest_CASMapPathSelectorConditionalStateMetadataLabels {
	return UpdateConfigMapRequest_CASMapPathSelectorConditionalStateMetadataLabels{key: key}
}

type UpdateConfigMapRequest_CASMapPathSelectorConditionalStateMetadataLabels struct {
	key string
}

func (s UpdateConfigMapRequest_CASMapPathSelectorConditionalStateMetadataLabels) FieldPath() *UpdateConfigMapRequestCAS_FieldSubPath {
	return &UpdateConfigMapRequestCAS_FieldSubPath{
		selector: UpdateConfigMapRequestCAS_FieldPathSelectorConditionalState,
		subPath:  config_map.NewConfigMapFieldPathBuilder().Metadata().Labels().WithKey(s.key).FieldPath(),
	}
}

func (s UpdateConfigMapRequest_CASMapPathSelectorConditionalStateMetadataLabels) WithValue(value string) *UpdateConfigMapRequestCAS_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateConfigMapRequestCAS_FieldSubPathValue)
}

func (s UpdateConfigMapRequest_CASMapPathSelectorConditionalStateMetadataLabels) WithArrayOfValues(values []string) *UpdateConfigMapRequestCAS_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateConfigMapRequestCAS_FieldSubPathArrayOfValues)
}

type UpdateConfigMapRequest_CASPathSelectorConditionalStateMetadataAnnotations struct{}

func (UpdateConfigMapRequest_CASPathSelectorConditionalStateMetadataAnnotations) FieldPath() *UpdateConfigMapRequestCAS_FieldSubPath {
	return &UpdateConfigMapRequestCAS_FieldSubPath{
		selector: UpdateConfigMapRequestCAS_FieldPathSelectorConditionalState,
		subPath:  config_map.NewConfigMapFieldPathBuilder().Metadata().Annotations().FieldPath(),
	}
}

func (s UpdateConfigMapRequest_CASPathSelectorConditionalStateMetadataAnnotations) WithValue(value map[string]string) *UpdateConfigMapRequestCAS_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateConfigMapRequestCAS_FieldSubPathValue)
}

func (s UpdateConfigMapRequest_CASPathSelectorConditionalStateMetadataAnnotations) WithArrayOfValues(values []map[string]string) *UpdateConfigMapRequestCAS_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateConfigMapRequestCAS_FieldSubPathArrayOfValues)
}

func (UpdateConfigMapRequest_CASPathSelectorConditionalStateMetadataAnnotations) WithKey(key string) UpdateConfigMapRequest_CASMapPathSelectorConditionalStateMetadataAnnotations {
	return UpdateConfigMapRequest_CASMapPathSelectorConditionalStateMetadataAnnotations{key: key}
}

type UpdateConfigMapRequest_CASMapPathSelectorConditionalStateMetadataAnnotations struct {
	key string
}

func (s UpdateConfigMapRequest_CASMapPathSelectorConditionalStateMetadataAnnotations) FieldPath() *UpdateConfigMapRequestCAS_FieldSubPath {
	return &UpdateConfigMapRequestCAS_FieldSubPath{
		selector: UpdateConfigMapRequestCAS_FieldPathSelectorConditionalState,
		subPath:  config_map.NewConfigMapFieldPathBuilder().Metadata().Annotations().WithKey(s.key).FieldPath(),
	}
}

func (s UpdateConfigMapRequest_CASMapPathSelectorConditionalStateMetadataAnnotations) WithValue(value string) *UpdateConfigMapRequestCAS_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateConfigMapRequestCAS_FieldSubPathValue)
}

func (s UpdateConfigMapRequest_CASMapPathSelectorConditionalStateMetadataAnnotations) WithArrayOfValues(values []string) *UpdateConfigMapRequestCAS_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateConfigMapRequestCAS_FieldSubPathArrayOfValues)
}

type UpdateConfigMapRequest_CASPathSelectorConditionalStateMetadataGeneration struct{}

func (UpdateConfigMapRequest_CASPathSelectorConditionalStateMetadataGeneration) FieldPath() *UpdateConfigMapRequestCAS_FieldSubPath {
	return &UpdateConfigMapRequestCAS_FieldSubPath{
		selector: UpdateConfigMapRequestCAS_FieldPathSelectorConditionalState,
		subPath:  config_map.NewConfigMapFieldPathBuilder().Metadata().Generation().FieldPath(),
	}
}

func (s UpdateConfigMapRequest_CASPathSelectorConditionalStateMetadataGeneration) WithValue(value int64) *UpdateConfigMapRequestCAS_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateConfigMapRequestCAS_FieldSubPathValue)
}

func (s UpdateConfigMapRequest_CASPathSelectorConditionalStateMetadataGeneration) WithArrayOfValues(values []int64) *UpdateConfigMapRequestCAS_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateConfigMapRequestCAS_FieldSubPathArrayOfValues)
}

type UpdateConfigMapRequest_CASPathSelectorConditionalStateMetadataResourceVersion struct{}

func (UpdateConfigMapRequest_CASPathSelectorConditionalStateMetadataResourceVersion) FieldPath() *UpdateConfigMapRequestCAS_FieldSubPath {
	return &UpdateConfigMapRequestCAS_FieldSubPath{
		selector: UpdateConfigMapRequestCAS_FieldPathSelectorConditionalState,
		subPath:  config_map.NewConfigMapFieldPathBuilder().Metadata().ResourceVersion().FieldPath(),
	}
}

func (s UpdateConfigMapRequest_CASPathSelectorConditionalStateMetadataResourceVersion) WithValue(value string) *UpdateConfigMapRequestCAS_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateConfigMapRequestCAS_FieldSubPathValue)
}

func (s UpdateConfigMapRequest_CASPathSelectorConditionalStateMetadataResourceVersion) WithArrayOfValues(values []string) *UpdateConfigMapRequestCAS_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateConfigMapRequestCAS_FieldSubPathArrayOfValues)
}

type UpdateConfigMapRequest_CASPathSelectorConditionalStateMetadataOwnerReferences struct{}

func (UpdateConfigMapRequest_CASPathSelectorConditionalStateMetadataOwnerReferences) FieldPath() *UpdateConfigMapRequestCAS_FieldSubPath {
	return &UpdateConfigMapRequestCAS_FieldSubPath{
		selector: UpdateConfigMapRequestCAS_FieldPathSelectorConditionalState,
		subPath:  config_map.NewConfigMapFieldPathBuilder().Metadata().OwnerReferences().FieldPath(),
	}
}

func (s UpdateConfigMapRequest_CASPathSelectorConditionalStateMetadataOwnerReferences) WithValue(value []*ntt_meta.OwnerReference) *UpdateConfigMapRequestCAS_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateConfigMapRequestCAS_FieldSubPathValue)
}

func (s UpdateConfigMapRequest_CASPathSelectorConditionalStateMetadataOwnerReferences) WithArrayOfValues(values [][]*ntt_meta.OwnerReference) *UpdateConfigMapRequestCAS_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateConfigMapRequestCAS_FieldSubPathArrayOfValues)
}

func (s UpdateConfigMapRequest_CASPathSelectorConditionalStateMetadataOwnerReferences) WithItemValue(value *ntt_meta.OwnerReference) *UpdateConfigMapRequestCAS_FieldSubPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*UpdateConfigMapRequestCAS_FieldSubPathArrayItemValue)
}

func (UpdateConfigMapRequest_CASPathSelectorConditionalStateMetadataOwnerReferences) Kind() UpdateConfigMapRequest_CASPathSelectorConditionalStateMetadataOwnerReferencesKind {
	return UpdateConfigMapRequest_CASPathSelectorConditionalStateMetadataOwnerReferencesKind{}
}

func (UpdateConfigMapRequest_CASPathSelectorConditionalStateMetadataOwnerReferences) Version() UpdateConfigMapRequest_CASPathSelectorConditionalStateMetadataOwnerReferencesVersion {
	return UpdateConfigMapRequest_CASPathSelectorConditionalStateMetadataOwnerReferencesVersion{}
}

func (UpdateConfigMapRequest_CASPathSelectorConditionalStateMetadataOwnerReferences) Name() UpdateConfigMapRequest_CASPathSelectorConditionalStateMetadataOwnerReferencesName {
	return UpdateConfigMapRequest_CASPathSelectorConditionalStateMetadataOwnerReferencesName{}
}

func (UpdateConfigMapRequest_CASPathSelectorConditionalStateMetadataOwnerReferences) Region() UpdateConfigMapRequest_CASPathSelectorConditionalStateMetadataOwnerReferencesRegion {
	return UpdateConfigMapRequest_CASPathSelectorConditionalStateMetadataOwnerReferencesRegion{}
}

func (UpdateConfigMapRequest_CASPathSelectorConditionalStateMetadataOwnerReferences) Controller() UpdateConfigMapRequest_CASPathSelectorConditionalStateMetadataOwnerReferencesController {
	return UpdateConfigMapRequest_CASPathSelectorConditionalStateMetadataOwnerReferencesController{}
}

func (UpdateConfigMapRequest_CASPathSelectorConditionalStateMetadataOwnerReferences) BlockOwnerDeletion() UpdateConfigMapRequest_CASPathSelectorConditionalStateMetadataOwnerReferencesBlockOwnerDeletion {
	return UpdateConfigMapRequest_CASPathSelectorConditionalStateMetadataOwnerReferencesBlockOwnerDeletion{}
}

func (UpdateConfigMapRequest_CASPathSelectorConditionalStateMetadataOwnerReferences) RequiresOwnerReference() UpdateConfigMapRequest_CASPathSelectorConditionalStateMetadataOwnerReferencesRequiresOwnerReference {
	return UpdateConfigMapRequest_CASPathSelectorConditionalStateMetadataOwnerReferencesRequiresOwnerReference{}
}

type UpdateConfigMapRequest_CASPathSelectorConditionalStateMetadataOwnerReferencesKind struct{}

func (UpdateConfigMapRequest_CASPathSelectorConditionalStateMetadataOwnerReferencesKind) FieldPath() *UpdateConfigMapRequestCAS_FieldSubPath {
	return &UpdateConfigMapRequestCAS_FieldSubPath{
		selector: UpdateConfigMapRequestCAS_FieldPathSelectorConditionalState,
		subPath:  config_map.NewConfigMapFieldPathBuilder().Metadata().OwnerReferences().Kind().FieldPath(),
	}
}

func (s UpdateConfigMapRequest_CASPathSelectorConditionalStateMetadataOwnerReferencesKind) WithValue(value string) *UpdateConfigMapRequestCAS_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateConfigMapRequestCAS_FieldSubPathValue)
}

func (s UpdateConfigMapRequest_CASPathSelectorConditionalStateMetadataOwnerReferencesKind) WithArrayOfValues(values []string) *UpdateConfigMapRequestCAS_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateConfigMapRequestCAS_FieldSubPathArrayOfValues)
}

type UpdateConfigMapRequest_CASPathSelectorConditionalStateMetadataOwnerReferencesVersion struct{}

func (UpdateConfigMapRequest_CASPathSelectorConditionalStateMetadataOwnerReferencesVersion) FieldPath() *UpdateConfigMapRequestCAS_FieldSubPath {
	return &UpdateConfigMapRequestCAS_FieldSubPath{
		selector: UpdateConfigMapRequestCAS_FieldPathSelectorConditionalState,
		subPath:  config_map.NewConfigMapFieldPathBuilder().Metadata().OwnerReferences().Version().FieldPath(),
	}
}

func (s UpdateConfigMapRequest_CASPathSelectorConditionalStateMetadataOwnerReferencesVersion) WithValue(value string) *UpdateConfigMapRequestCAS_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateConfigMapRequestCAS_FieldSubPathValue)
}

func (s UpdateConfigMapRequest_CASPathSelectorConditionalStateMetadataOwnerReferencesVersion) WithArrayOfValues(values []string) *UpdateConfigMapRequestCAS_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateConfigMapRequestCAS_FieldSubPathArrayOfValues)
}

type UpdateConfigMapRequest_CASPathSelectorConditionalStateMetadataOwnerReferencesName struct{}

func (UpdateConfigMapRequest_CASPathSelectorConditionalStateMetadataOwnerReferencesName) FieldPath() *UpdateConfigMapRequestCAS_FieldSubPath {
	return &UpdateConfigMapRequestCAS_FieldSubPath{
		selector: UpdateConfigMapRequestCAS_FieldPathSelectorConditionalState,
		subPath:  config_map.NewConfigMapFieldPathBuilder().Metadata().OwnerReferences().Name().FieldPath(),
	}
}

func (s UpdateConfigMapRequest_CASPathSelectorConditionalStateMetadataOwnerReferencesName) WithValue(value string) *UpdateConfigMapRequestCAS_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateConfigMapRequestCAS_FieldSubPathValue)
}

func (s UpdateConfigMapRequest_CASPathSelectorConditionalStateMetadataOwnerReferencesName) WithArrayOfValues(values []string) *UpdateConfigMapRequestCAS_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateConfigMapRequestCAS_FieldSubPathArrayOfValues)
}

type UpdateConfigMapRequest_CASPathSelectorConditionalStateMetadataOwnerReferencesRegion struct{}

func (UpdateConfigMapRequest_CASPathSelectorConditionalStateMetadataOwnerReferencesRegion) FieldPath() *UpdateConfigMapRequestCAS_FieldSubPath {
	return &UpdateConfigMapRequestCAS_FieldSubPath{
		selector: UpdateConfigMapRequestCAS_FieldPathSelectorConditionalState,
		subPath:  config_map.NewConfigMapFieldPathBuilder().Metadata().OwnerReferences().Region().FieldPath(),
	}
}

func (s UpdateConfigMapRequest_CASPathSelectorConditionalStateMetadataOwnerReferencesRegion) WithValue(value string) *UpdateConfigMapRequestCAS_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateConfigMapRequestCAS_FieldSubPathValue)
}

func (s UpdateConfigMapRequest_CASPathSelectorConditionalStateMetadataOwnerReferencesRegion) WithArrayOfValues(values []string) *UpdateConfigMapRequestCAS_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateConfigMapRequestCAS_FieldSubPathArrayOfValues)
}

type UpdateConfigMapRequest_CASPathSelectorConditionalStateMetadataOwnerReferencesController struct{}

func (UpdateConfigMapRequest_CASPathSelectorConditionalStateMetadataOwnerReferencesController) FieldPath() *UpdateConfigMapRequestCAS_FieldSubPath {
	return &UpdateConfigMapRequestCAS_FieldSubPath{
		selector: UpdateConfigMapRequestCAS_FieldPathSelectorConditionalState,
		subPath:  config_map.NewConfigMapFieldPathBuilder().Metadata().OwnerReferences().Controller().FieldPath(),
	}
}

func (s UpdateConfigMapRequest_CASPathSelectorConditionalStateMetadataOwnerReferencesController) WithValue(value bool) *UpdateConfigMapRequestCAS_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateConfigMapRequestCAS_FieldSubPathValue)
}

func (s UpdateConfigMapRequest_CASPathSelectorConditionalStateMetadataOwnerReferencesController) WithArrayOfValues(values []bool) *UpdateConfigMapRequestCAS_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateConfigMapRequestCAS_FieldSubPathArrayOfValues)
}

type UpdateConfigMapRequest_CASPathSelectorConditionalStateMetadataOwnerReferencesBlockOwnerDeletion struct{}

func (UpdateConfigMapRequest_CASPathSelectorConditionalStateMetadataOwnerReferencesBlockOwnerDeletion) FieldPath() *UpdateConfigMapRequestCAS_FieldSubPath {
	return &UpdateConfigMapRequestCAS_FieldSubPath{
		selector: UpdateConfigMapRequestCAS_FieldPathSelectorConditionalState,
		subPath:  config_map.NewConfigMapFieldPathBuilder().Metadata().OwnerReferences().BlockOwnerDeletion().FieldPath(),
	}
}

func (s UpdateConfigMapRequest_CASPathSelectorConditionalStateMetadataOwnerReferencesBlockOwnerDeletion) WithValue(value bool) *UpdateConfigMapRequestCAS_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateConfigMapRequestCAS_FieldSubPathValue)
}

func (s UpdateConfigMapRequest_CASPathSelectorConditionalStateMetadataOwnerReferencesBlockOwnerDeletion) WithArrayOfValues(values []bool) *UpdateConfigMapRequestCAS_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateConfigMapRequestCAS_FieldSubPathArrayOfValues)
}

type UpdateConfigMapRequest_CASPathSelectorConditionalStateMetadataOwnerReferencesRequiresOwnerReference struct{}

func (UpdateConfigMapRequest_CASPathSelectorConditionalStateMetadataOwnerReferencesRequiresOwnerReference) FieldPath() *UpdateConfigMapRequestCAS_FieldSubPath {
	return &UpdateConfigMapRequestCAS_FieldSubPath{
		selector: UpdateConfigMapRequestCAS_FieldPathSelectorConditionalState,
		subPath:  config_map.NewConfigMapFieldPathBuilder().Metadata().OwnerReferences().RequiresOwnerReference().FieldPath(),
	}
}

func (s UpdateConfigMapRequest_CASPathSelectorConditionalStateMetadataOwnerReferencesRequiresOwnerReference) WithValue(value bool) *UpdateConfigMapRequestCAS_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateConfigMapRequestCAS_FieldSubPathValue)
}

func (s UpdateConfigMapRequest_CASPathSelectorConditionalStateMetadataOwnerReferencesRequiresOwnerReference) WithArrayOfValues(values []bool) *UpdateConfigMapRequestCAS_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateConfigMapRequestCAS_FieldSubPathArrayOfValues)
}

type UpdateConfigMapRequest_CASPathSelectorConditionalStateMetadataShards struct{}

func (UpdateConfigMapRequest_CASPathSelectorConditionalStateMetadataShards) FieldPath() *UpdateConfigMapRequestCAS_FieldSubPath {
	return &UpdateConfigMapRequestCAS_FieldSubPath{
		selector: UpdateConfigMapRequestCAS_FieldPathSelectorConditionalState,
		subPath:  config_map.NewConfigMapFieldPathBuilder().Metadata().Shards().FieldPath(),
	}
}

func (s UpdateConfigMapRequest_CASPathSelectorConditionalStateMetadataShards) WithValue(value map[string]int64) *UpdateConfigMapRequestCAS_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateConfigMapRequestCAS_FieldSubPathValue)
}

func (s UpdateConfigMapRequest_CASPathSelectorConditionalStateMetadataShards) WithArrayOfValues(values []map[string]int64) *UpdateConfigMapRequestCAS_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateConfigMapRequestCAS_FieldSubPathArrayOfValues)
}

func (UpdateConfigMapRequest_CASPathSelectorConditionalStateMetadataShards) WithKey(key string) UpdateConfigMapRequest_CASMapPathSelectorConditionalStateMetadataShards {
	return UpdateConfigMapRequest_CASMapPathSelectorConditionalStateMetadataShards{key: key}
}

type UpdateConfigMapRequest_CASMapPathSelectorConditionalStateMetadataShards struct {
	key string
}

func (s UpdateConfigMapRequest_CASMapPathSelectorConditionalStateMetadataShards) FieldPath() *UpdateConfigMapRequestCAS_FieldSubPath {
	return &UpdateConfigMapRequestCAS_FieldSubPath{
		selector: UpdateConfigMapRequestCAS_FieldPathSelectorConditionalState,
		subPath:  config_map.NewConfigMapFieldPathBuilder().Metadata().Shards().WithKey(s.key).FieldPath(),
	}
}

func (s UpdateConfigMapRequest_CASMapPathSelectorConditionalStateMetadataShards) WithValue(value int64) *UpdateConfigMapRequestCAS_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateConfigMapRequestCAS_FieldSubPathValue)
}

func (s UpdateConfigMapRequest_CASMapPathSelectorConditionalStateMetadataShards) WithArrayOfValues(values []int64) *UpdateConfigMapRequestCAS_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateConfigMapRequestCAS_FieldSubPathArrayOfValues)
}

type UpdateConfigMapRequest_CASPathSelectorConditionalStateMetadataSyncing struct{}

func (UpdateConfigMapRequest_CASPathSelectorConditionalStateMetadataSyncing) FieldPath() *UpdateConfigMapRequestCAS_FieldSubPath {
	return &UpdateConfigMapRequestCAS_FieldSubPath{
		selector: UpdateConfigMapRequestCAS_FieldPathSelectorConditionalState,
		subPath:  config_map.NewConfigMapFieldPathBuilder().Metadata().Syncing().FieldPath(),
	}
}

func (s UpdateConfigMapRequest_CASPathSelectorConditionalStateMetadataSyncing) WithValue(value *ntt_meta.SyncingMeta) *UpdateConfigMapRequestCAS_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateConfigMapRequestCAS_FieldSubPathValue)
}

func (s UpdateConfigMapRequest_CASPathSelectorConditionalStateMetadataSyncing) WithArrayOfValues(values []*ntt_meta.SyncingMeta) *UpdateConfigMapRequestCAS_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateConfigMapRequestCAS_FieldSubPathArrayOfValues)
}

func (UpdateConfigMapRequest_CASPathSelectorConditionalStateMetadataSyncing) OwningRegion() UpdateConfigMapRequest_CASPathSelectorConditionalStateMetadataSyncingOwningRegion {
	return UpdateConfigMapRequest_CASPathSelectorConditionalStateMetadataSyncingOwningRegion{}
}

func (UpdateConfigMapRequest_CASPathSelectorConditionalStateMetadataSyncing) Regions() UpdateConfigMapRequest_CASPathSelectorConditionalStateMetadataSyncingRegions {
	return UpdateConfigMapRequest_CASPathSelectorConditionalStateMetadataSyncingRegions{}
}

type UpdateConfigMapRequest_CASPathSelectorConditionalStateMetadataSyncingOwningRegion struct{}

func (UpdateConfigMapRequest_CASPathSelectorConditionalStateMetadataSyncingOwningRegion) FieldPath() *UpdateConfigMapRequestCAS_FieldSubPath {
	return &UpdateConfigMapRequestCAS_FieldSubPath{
		selector: UpdateConfigMapRequestCAS_FieldPathSelectorConditionalState,
		subPath:  config_map.NewConfigMapFieldPathBuilder().Metadata().Syncing().OwningRegion().FieldPath(),
	}
}

func (s UpdateConfigMapRequest_CASPathSelectorConditionalStateMetadataSyncingOwningRegion) WithValue(value string) *UpdateConfigMapRequestCAS_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateConfigMapRequestCAS_FieldSubPathValue)
}

func (s UpdateConfigMapRequest_CASPathSelectorConditionalStateMetadataSyncingOwningRegion) WithArrayOfValues(values []string) *UpdateConfigMapRequestCAS_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateConfigMapRequestCAS_FieldSubPathArrayOfValues)
}

type UpdateConfigMapRequest_CASPathSelectorConditionalStateMetadataSyncingRegions struct{}

func (UpdateConfigMapRequest_CASPathSelectorConditionalStateMetadataSyncingRegions) FieldPath() *UpdateConfigMapRequestCAS_FieldSubPath {
	return &UpdateConfigMapRequestCAS_FieldSubPath{
		selector: UpdateConfigMapRequestCAS_FieldPathSelectorConditionalState,
		subPath:  config_map.NewConfigMapFieldPathBuilder().Metadata().Syncing().Regions().FieldPath(),
	}
}

func (s UpdateConfigMapRequest_CASPathSelectorConditionalStateMetadataSyncingRegions) WithValue(value []string) *UpdateConfigMapRequestCAS_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateConfigMapRequestCAS_FieldSubPathValue)
}

func (s UpdateConfigMapRequest_CASPathSelectorConditionalStateMetadataSyncingRegions) WithArrayOfValues(values [][]string) *UpdateConfigMapRequestCAS_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateConfigMapRequestCAS_FieldSubPathArrayOfValues)
}

func (s UpdateConfigMapRequest_CASPathSelectorConditionalStateMetadataSyncingRegions) WithItemValue(value string) *UpdateConfigMapRequestCAS_FieldSubPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*UpdateConfigMapRequestCAS_FieldSubPathArrayItemValue)
}

type UpdateConfigMapRequest_CASPathSelectorConditionalStateMetadataLifecycle struct{}

func (UpdateConfigMapRequest_CASPathSelectorConditionalStateMetadataLifecycle) FieldPath() *UpdateConfigMapRequestCAS_FieldSubPath {
	return &UpdateConfigMapRequestCAS_FieldSubPath{
		selector: UpdateConfigMapRequestCAS_FieldPathSelectorConditionalState,
		subPath:  config_map.NewConfigMapFieldPathBuilder().Metadata().Lifecycle().FieldPath(),
	}
}

func (s UpdateConfigMapRequest_CASPathSelectorConditionalStateMetadataLifecycle) WithValue(value *ntt_meta.Lifecycle) *UpdateConfigMapRequestCAS_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateConfigMapRequestCAS_FieldSubPathValue)
}

func (s UpdateConfigMapRequest_CASPathSelectorConditionalStateMetadataLifecycle) WithArrayOfValues(values []*ntt_meta.Lifecycle) *UpdateConfigMapRequestCAS_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateConfigMapRequestCAS_FieldSubPathArrayOfValues)
}

func (UpdateConfigMapRequest_CASPathSelectorConditionalStateMetadataLifecycle) State() UpdateConfigMapRequest_CASPathSelectorConditionalStateMetadataLifecycleState {
	return UpdateConfigMapRequest_CASPathSelectorConditionalStateMetadataLifecycleState{}
}

func (UpdateConfigMapRequest_CASPathSelectorConditionalStateMetadataLifecycle) BlockDeletion() UpdateConfigMapRequest_CASPathSelectorConditionalStateMetadataLifecycleBlockDeletion {
	return UpdateConfigMapRequest_CASPathSelectorConditionalStateMetadataLifecycleBlockDeletion{}
}

type UpdateConfigMapRequest_CASPathSelectorConditionalStateMetadataLifecycleState struct{}

func (UpdateConfigMapRequest_CASPathSelectorConditionalStateMetadataLifecycleState) FieldPath() *UpdateConfigMapRequestCAS_FieldSubPath {
	return &UpdateConfigMapRequestCAS_FieldSubPath{
		selector: UpdateConfigMapRequestCAS_FieldPathSelectorConditionalState,
		subPath:  config_map.NewConfigMapFieldPathBuilder().Metadata().Lifecycle().State().FieldPath(),
	}
}

func (s UpdateConfigMapRequest_CASPathSelectorConditionalStateMetadataLifecycleState) WithValue(value ntt_meta.Lifecycle_State) *UpdateConfigMapRequestCAS_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateConfigMapRequestCAS_FieldSubPathValue)
}

func (s UpdateConfigMapRequest_CASPathSelectorConditionalStateMetadataLifecycleState) WithArrayOfValues(values []ntt_meta.Lifecycle_State) *UpdateConfigMapRequestCAS_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateConfigMapRequestCAS_FieldSubPathArrayOfValues)
}

type UpdateConfigMapRequest_CASPathSelectorConditionalStateMetadataLifecycleBlockDeletion struct{}

func (UpdateConfigMapRequest_CASPathSelectorConditionalStateMetadataLifecycleBlockDeletion) FieldPath() *UpdateConfigMapRequestCAS_FieldSubPath {
	return &UpdateConfigMapRequestCAS_FieldSubPath{
		selector: UpdateConfigMapRequestCAS_FieldPathSelectorConditionalState,
		subPath:  config_map.NewConfigMapFieldPathBuilder().Metadata().Lifecycle().BlockDeletion().FieldPath(),
	}
}

func (s UpdateConfigMapRequest_CASPathSelectorConditionalStateMetadataLifecycleBlockDeletion) WithValue(value bool) *UpdateConfigMapRequestCAS_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateConfigMapRequestCAS_FieldSubPathValue)
}

func (s UpdateConfigMapRequest_CASPathSelectorConditionalStateMetadataLifecycleBlockDeletion) WithArrayOfValues(values []bool) *UpdateConfigMapRequestCAS_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateConfigMapRequestCAS_FieldSubPathArrayOfValues)
}

type UpdateConfigMapRequest_CASPathSelectorConditionalStateData struct{}

func (UpdateConfigMapRequest_CASPathSelectorConditionalStateData) FieldPath() *UpdateConfigMapRequestCAS_FieldSubPath {
	return &UpdateConfigMapRequestCAS_FieldSubPath{
		selector: UpdateConfigMapRequestCAS_FieldPathSelectorConditionalState,
		subPath:  config_map.NewConfigMapFieldPathBuilder().Data().FieldPath(),
	}
}

func (s UpdateConfigMapRequest_CASPathSelectorConditionalStateData) WithValue(value map[string]string) *UpdateConfigMapRequestCAS_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateConfigMapRequestCAS_FieldSubPathValue)
}

func (s UpdateConfigMapRequest_CASPathSelectorConditionalStateData) WithArrayOfValues(values []map[string]string) *UpdateConfigMapRequestCAS_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateConfigMapRequestCAS_FieldSubPathArrayOfValues)
}

func (UpdateConfigMapRequest_CASPathSelectorConditionalStateData) WithKey(key string) UpdateConfigMapRequest_CASMapPathSelectorConditionalStateData {
	return UpdateConfigMapRequest_CASMapPathSelectorConditionalStateData{key: key}
}

type UpdateConfigMapRequest_CASMapPathSelectorConditionalStateData struct {
	key string
}

func (s UpdateConfigMapRequest_CASMapPathSelectorConditionalStateData) FieldPath() *UpdateConfigMapRequestCAS_FieldSubPath {
	return &UpdateConfigMapRequestCAS_FieldSubPath{
		selector: UpdateConfigMapRequestCAS_FieldPathSelectorConditionalState,
		subPath:  config_map.NewConfigMapFieldPathBuilder().Data().WithKey(s.key).FieldPath(),
	}
}

func (s UpdateConfigMapRequest_CASMapPathSelectorConditionalStateData) WithValue(value string) *UpdateConfigMapRequestCAS_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateConfigMapRequestCAS_FieldSubPathValue)
}

func (s UpdateConfigMapRequest_CASMapPathSelectorConditionalStateData) WithArrayOfValues(values []string) *UpdateConfigMapRequestCAS_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateConfigMapRequestCAS_FieldSubPathArrayOfValues)
}

type UpdateConfigMapRequest_CASPathSelectorConditionalStateBinaryData struct{}

func (UpdateConfigMapRequest_CASPathSelectorConditionalStateBinaryData) FieldPath() *UpdateConfigMapRequestCAS_FieldSubPath {
	return &UpdateConfigMapRequestCAS_FieldSubPath{
		selector: UpdateConfigMapRequestCAS_FieldPathSelectorConditionalState,
		subPath:  config_map.NewConfigMapFieldPathBuilder().BinaryData().FieldPath(),
	}
}

func (s UpdateConfigMapRequest_CASPathSelectorConditionalStateBinaryData) WithValue(value map[string][]byte) *UpdateConfigMapRequestCAS_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateConfigMapRequestCAS_FieldSubPathValue)
}

func (s UpdateConfigMapRequest_CASPathSelectorConditionalStateBinaryData) WithArrayOfValues(values []map[string][]byte) *UpdateConfigMapRequestCAS_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateConfigMapRequestCAS_FieldSubPathArrayOfValues)
}

func (UpdateConfigMapRequest_CASPathSelectorConditionalStateBinaryData) WithKey(key string) UpdateConfigMapRequest_CASMapPathSelectorConditionalStateBinaryData {
	return UpdateConfigMapRequest_CASMapPathSelectorConditionalStateBinaryData{key: key}
}

type UpdateConfigMapRequest_CASMapPathSelectorConditionalStateBinaryData struct {
	key string
}

func (s UpdateConfigMapRequest_CASMapPathSelectorConditionalStateBinaryData) FieldPath() *UpdateConfigMapRequestCAS_FieldSubPath {
	return &UpdateConfigMapRequestCAS_FieldSubPath{
		selector: UpdateConfigMapRequestCAS_FieldPathSelectorConditionalState,
		subPath:  config_map.NewConfigMapFieldPathBuilder().BinaryData().WithKey(s.key).FieldPath(),
	}
}

func (s UpdateConfigMapRequest_CASMapPathSelectorConditionalStateBinaryData) WithValue(value []byte) *UpdateConfigMapRequestCAS_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateConfigMapRequestCAS_FieldSubPathValue)
}

func (s UpdateConfigMapRequest_CASMapPathSelectorConditionalStateBinaryData) WithArrayOfValues(values [][]byte) *UpdateConfigMapRequestCAS_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateConfigMapRequestCAS_FieldSubPathArrayOfValues)
}

type UpdateConfigMapRequest_CASPathSelectorFieldMask struct{}

func (UpdateConfigMapRequest_CASPathSelectorFieldMask) FieldPath() *UpdateConfigMapRequestCAS_FieldTerminalPath {
	return &UpdateConfigMapRequestCAS_FieldTerminalPath{selector: UpdateConfigMapRequestCAS_FieldPathSelectorFieldMask}
}

func (s UpdateConfigMapRequest_CASPathSelectorFieldMask) WithValue(value *config_map.ConfigMap_FieldMask) *UpdateConfigMapRequestCAS_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*UpdateConfigMapRequestCAS_FieldTerminalPathValue)
}

func (s UpdateConfigMapRequest_CASPathSelectorFieldMask) WithArrayOfValues(values []*config_map.ConfigMap_FieldMask) *UpdateConfigMapRequestCAS_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*UpdateConfigMapRequestCAS_FieldTerminalPathArrayOfValues)
}

type DeleteConfigMapRequestFieldPathBuilder struct{}

func NewDeleteConfigMapRequestFieldPathBuilder() DeleteConfigMapRequestFieldPathBuilder {
	return DeleteConfigMapRequestFieldPathBuilder{}
}
func (DeleteConfigMapRequestFieldPathBuilder) Name() DeleteConfigMapRequestPathSelectorName {
	return DeleteConfigMapRequestPathSelectorName{}
}

type DeleteConfigMapRequestPathSelectorName struct{}

func (DeleteConfigMapRequestPathSelectorName) FieldPath() *DeleteConfigMapRequest_FieldTerminalPath {
	return &DeleteConfigMapRequest_FieldTerminalPath{selector: DeleteConfigMapRequest_FieldPathSelectorName}
}

func (s DeleteConfigMapRequestPathSelectorName) WithValue(value *config_map.Reference) *DeleteConfigMapRequest_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*DeleteConfigMapRequest_FieldTerminalPathValue)
}

func (s DeleteConfigMapRequestPathSelectorName) WithArrayOfValues(values []*config_map.Reference) *DeleteConfigMapRequest_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*DeleteConfigMapRequest_FieldTerminalPathArrayOfValues)
}
