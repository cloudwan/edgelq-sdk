// Code generated by protoc-gen-goten-client
// Service: Applications
// DO NOT EDIT!!!

package applications_client

import (
	gotenclient "github.com/cloudwan/goten-sdk/runtime/client"
	gotenresource "github.com/cloudwan/goten-sdk/runtime/resource"
)

// proto imports
import (
	config_map_client "github.com/cloudwan/edgelq-sdk/applications/client/v1alpha/config_map"
	distribution_client "github.com/cloudwan/edgelq-sdk/applications/client/v1alpha/distribution"
	pod_client "github.com/cloudwan/edgelq-sdk/applications/client/v1alpha/pod"
	project_client "github.com/cloudwan/edgelq-sdk/applications/client/v1alpha/project"
	config_map "github.com/cloudwan/edgelq-sdk/applications/resources/v1alpha/config_map"
	distribution "github.com/cloudwan/edgelq-sdk/applications/resources/v1alpha/distribution"
	pod "github.com/cloudwan/edgelq-sdk/applications/resources/v1alpha/pod"
	project "github.com/cloudwan/edgelq-sdk/applications/resources/v1alpha/project"
)

// Reference imports to suppress errors if they are not otherwise used.
var (
	_ = new(gotenclient.MethodDescriptor)
	_ = gotenresource.WildcardId
)

// make sure we're using proto imports
var (
	_ = &config_map.ConfigMap{}
	_ = &config_map_client.GetConfigMapRequest{}
	_ = &distribution.Distribution{}
	_ = &distribution_client.GetDistributionRequest{}
	_ = &pod.Pod{}
	_ = &pod_client.GetPodRequest{}
	_ = &project.Project{}
	_ = &project_client.GetProjectRequest{}
)

var (
	descriptorInitialized  bool
	applicationsDescriptor *ApplicationsDescriptor
)

type ApplicationsDescriptor struct{}

func (d *ApplicationsDescriptor) GetServiceName() string {
	return "applications"
}

func (d *ApplicationsDescriptor) GetServiceDomain() string {
	return "applications.edgelq.com"
}

func (d *ApplicationsDescriptor) GetVersion() string {
	return "v1alpha"
}

func (d *ApplicationsDescriptor) GetNextVersion() string {

	return "v1alpha2"
}

func (d *ApplicationsDescriptor) AllResourceDescriptors() []gotenresource.Descriptor {
	return []gotenresource.Descriptor{
		config_map.GetDescriptor(),
		distribution.GetDescriptor(),
		pod.GetDescriptor(),
		project.GetDescriptor(),
	}
}

func (d *ApplicationsDescriptor) AllApiDescriptors() []gotenclient.ApiDescriptor {
	return []gotenclient.ApiDescriptor{
		config_map_client.GetConfigMapServiceDescriptor(),
		distribution_client.GetDistributionServiceDescriptor(),
		pod_client.GetPodServiceDescriptor(),
		project_client.GetProjectServiceDescriptor(),
	}
}

func (d *ApplicationsDescriptor) AllImportedServiceInfos() []gotenclient.ServiceImportInfo {
	return []gotenclient.ServiceImportInfo{
		{
			Domain:  "devices.edgelq.com",
			Version: "v1alpha",
		},
		{
			Domain:  "secrets.edgelq.com",
			Version: "v1alpha",
		},
	}
}

func GetApplicationsDescriptor() *ApplicationsDescriptor {
	return applicationsDescriptor
}

func initDescriptor() {
	applicationsDescriptor = &ApplicationsDescriptor{}
	gotenclient.GetRegistry().RegisterSvcDescriptor(applicationsDescriptor)
}

func init() {
	if !descriptorInitialized {
		initDescriptor()
		descriptorInitialized = true
	}
}
