// Code generated by protoc-gen-goten-object
// File: edgelq/applications/proto/v1alpha2/config_map.proto
// DO NOT EDIT!!!

package config_map

// proto imports
import (
	project "github.com/cloudwan/edgelq-sdk/applications/resources/v1alpha2/project"
	ntt_meta "github.com/cloudwan/edgelq-sdk/common/types/meta"
	multi_region_policy "github.com/cloudwan/edgelq-sdk/common/types/multi_region_policy"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
)

// make sure we're using proto imports
var (
	_ = &project.Project{}
	_ = &ntt_meta.Meta{}
	_ = &multi_region_policy.MultiRegionPolicy{}
	_ = &timestamp.Timestamp{}
)

type ConfigMapFieldPathBuilder struct{}

func NewConfigMapFieldPathBuilder() ConfigMapFieldPathBuilder {
	return ConfigMapFieldPathBuilder{}
}
func (ConfigMapFieldPathBuilder) Name() ConfigMapPathSelectorName {
	return ConfigMapPathSelectorName{}
}
func (ConfigMapFieldPathBuilder) DisplayName() ConfigMapPathSelectorDisplayName {
	return ConfigMapPathSelectorDisplayName{}
}
func (ConfigMapFieldPathBuilder) Metadata() ConfigMapPathSelectorMetadata {
	return ConfigMapPathSelectorMetadata{}
}
func (ConfigMapFieldPathBuilder) Data() ConfigMapPathSelectorData {
	return ConfigMapPathSelectorData{}
}
func (ConfigMapFieldPathBuilder) BinaryData() ConfigMapPathSelectorBinaryData {
	return ConfigMapPathSelectorBinaryData{}
}

type ConfigMapPathSelectorName struct{}

func (ConfigMapPathSelectorName) FieldPath() *ConfigMap_FieldTerminalPath {
	return &ConfigMap_FieldTerminalPath{selector: ConfigMap_FieldPathSelectorName}
}

func (s ConfigMapPathSelectorName) WithValue(value *Name) *ConfigMap_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*ConfigMap_FieldTerminalPathValue)
}

func (s ConfigMapPathSelectorName) WithArrayOfValues(values []*Name) *ConfigMap_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ConfigMap_FieldTerminalPathArrayOfValues)
}

type ConfigMapPathSelectorDisplayName struct{}

func (ConfigMapPathSelectorDisplayName) FieldPath() *ConfigMap_FieldTerminalPath {
	return &ConfigMap_FieldTerminalPath{selector: ConfigMap_FieldPathSelectorDisplayName}
}

func (s ConfigMapPathSelectorDisplayName) WithValue(value string) *ConfigMap_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*ConfigMap_FieldTerminalPathValue)
}

func (s ConfigMapPathSelectorDisplayName) WithArrayOfValues(values []string) *ConfigMap_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ConfigMap_FieldTerminalPathArrayOfValues)
}

type ConfigMapPathSelectorMetadata struct{}

func (ConfigMapPathSelectorMetadata) FieldPath() *ConfigMap_FieldTerminalPath {
	return &ConfigMap_FieldTerminalPath{selector: ConfigMap_FieldPathSelectorMetadata}
}

func (s ConfigMapPathSelectorMetadata) WithValue(value *ntt_meta.Meta) *ConfigMap_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*ConfigMap_FieldTerminalPathValue)
}

func (s ConfigMapPathSelectorMetadata) WithArrayOfValues(values []*ntt_meta.Meta) *ConfigMap_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ConfigMap_FieldTerminalPathArrayOfValues)
}

func (ConfigMapPathSelectorMetadata) WithSubPath(subPath ntt_meta.Meta_FieldPath) *ConfigMap_FieldSubPath {
	return &ConfigMap_FieldSubPath{selector: ConfigMap_FieldPathSelectorMetadata, subPath: subPath}
}

func (s ConfigMapPathSelectorMetadata) WithSubValue(subPathValue ntt_meta.Meta_FieldPathValue) *ConfigMap_FieldSubPathValue {
	return &ConfigMap_FieldSubPathValue{ConfigMap_FieldPath: s.WithSubPath(subPathValue), subPathValue: subPathValue}
}

func (s ConfigMapPathSelectorMetadata) WithSubArrayOfValues(subPathArrayOfValues ntt_meta.Meta_FieldPathArrayOfValues) *ConfigMap_FieldSubPathArrayOfValues {
	return &ConfigMap_FieldSubPathArrayOfValues{ConfigMap_FieldPath: s.WithSubPath(subPathArrayOfValues), subPathArrayOfValues: subPathArrayOfValues}
}

func (s ConfigMapPathSelectorMetadata) WithSubArrayItemValue(subPathArrayItemValue ntt_meta.Meta_FieldPathArrayItemValue) *ConfigMap_FieldSubPathArrayItemValue {
	return &ConfigMap_FieldSubPathArrayItemValue{ConfigMap_FieldPath: s.WithSubPath(subPathArrayItemValue), subPathItemValue: subPathArrayItemValue}
}

func (ConfigMapPathSelectorMetadata) CreateTime() ConfigMapPathSelectorMetadataCreateTime {
	return ConfigMapPathSelectorMetadataCreateTime{}
}

func (ConfigMapPathSelectorMetadata) UpdateTime() ConfigMapPathSelectorMetadataUpdateTime {
	return ConfigMapPathSelectorMetadataUpdateTime{}
}

func (ConfigMapPathSelectorMetadata) Uuid() ConfigMapPathSelectorMetadataUuid {
	return ConfigMapPathSelectorMetadataUuid{}
}

func (ConfigMapPathSelectorMetadata) Tags() ConfigMapPathSelectorMetadataTags {
	return ConfigMapPathSelectorMetadataTags{}
}

func (ConfigMapPathSelectorMetadata) Labels() ConfigMapPathSelectorMetadataLabels {
	return ConfigMapPathSelectorMetadataLabels{}
}

func (ConfigMapPathSelectorMetadata) Annotations() ConfigMapPathSelectorMetadataAnnotations {
	return ConfigMapPathSelectorMetadataAnnotations{}
}

func (ConfigMapPathSelectorMetadata) Generation() ConfigMapPathSelectorMetadataGeneration {
	return ConfigMapPathSelectorMetadataGeneration{}
}

func (ConfigMapPathSelectorMetadata) ResourceVersion() ConfigMapPathSelectorMetadataResourceVersion {
	return ConfigMapPathSelectorMetadataResourceVersion{}
}

func (ConfigMapPathSelectorMetadata) OwnerReferences() ConfigMapPathSelectorMetadataOwnerReferences {
	return ConfigMapPathSelectorMetadataOwnerReferences{}
}

func (ConfigMapPathSelectorMetadata) Shards() ConfigMapPathSelectorMetadataShards {
	return ConfigMapPathSelectorMetadataShards{}
}

func (ConfigMapPathSelectorMetadata) Syncing() ConfigMapPathSelectorMetadataSyncing {
	return ConfigMapPathSelectorMetadataSyncing{}
}

type ConfigMapPathSelectorMetadataCreateTime struct{}

func (ConfigMapPathSelectorMetadataCreateTime) FieldPath() *ConfigMap_FieldSubPath {
	return &ConfigMap_FieldSubPath{
		selector: ConfigMap_FieldPathSelectorMetadata,
		subPath:  ntt_meta.NewMetaFieldPathBuilder().CreateTime().FieldPath(),
	}
}

func (s ConfigMapPathSelectorMetadataCreateTime) WithValue(value *timestamp.Timestamp) *ConfigMap_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ConfigMap_FieldSubPathValue)
}

func (s ConfigMapPathSelectorMetadataCreateTime) WithArrayOfValues(values []*timestamp.Timestamp) *ConfigMap_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ConfigMap_FieldSubPathArrayOfValues)
}

type ConfigMapPathSelectorMetadataUpdateTime struct{}

func (ConfigMapPathSelectorMetadataUpdateTime) FieldPath() *ConfigMap_FieldSubPath {
	return &ConfigMap_FieldSubPath{
		selector: ConfigMap_FieldPathSelectorMetadata,
		subPath:  ntt_meta.NewMetaFieldPathBuilder().UpdateTime().FieldPath(),
	}
}

func (s ConfigMapPathSelectorMetadataUpdateTime) WithValue(value *timestamp.Timestamp) *ConfigMap_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ConfigMap_FieldSubPathValue)
}

func (s ConfigMapPathSelectorMetadataUpdateTime) WithArrayOfValues(values []*timestamp.Timestamp) *ConfigMap_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ConfigMap_FieldSubPathArrayOfValues)
}

type ConfigMapPathSelectorMetadataUuid struct{}

func (ConfigMapPathSelectorMetadataUuid) FieldPath() *ConfigMap_FieldSubPath {
	return &ConfigMap_FieldSubPath{
		selector: ConfigMap_FieldPathSelectorMetadata,
		subPath:  ntt_meta.NewMetaFieldPathBuilder().Uuid().FieldPath(),
	}
}

func (s ConfigMapPathSelectorMetadataUuid) WithValue(value string) *ConfigMap_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ConfigMap_FieldSubPathValue)
}

func (s ConfigMapPathSelectorMetadataUuid) WithArrayOfValues(values []string) *ConfigMap_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ConfigMap_FieldSubPathArrayOfValues)
}

type ConfigMapPathSelectorMetadataTags struct{}

func (ConfigMapPathSelectorMetadataTags) FieldPath() *ConfigMap_FieldSubPath {
	return &ConfigMap_FieldSubPath{
		selector: ConfigMap_FieldPathSelectorMetadata,
		subPath:  ntt_meta.NewMetaFieldPathBuilder().Tags().FieldPath(),
	}
}

func (s ConfigMapPathSelectorMetadataTags) WithValue(value []string) *ConfigMap_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ConfigMap_FieldSubPathValue)
}

func (s ConfigMapPathSelectorMetadataTags) WithArrayOfValues(values [][]string) *ConfigMap_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ConfigMap_FieldSubPathArrayOfValues)
}

func (s ConfigMapPathSelectorMetadataTags) WithItemValue(value string) *ConfigMap_FieldSubPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*ConfigMap_FieldSubPathArrayItemValue)
}

type ConfigMapPathSelectorMetadataLabels struct{}

func (ConfigMapPathSelectorMetadataLabels) FieldPath() *ConfigMap_FieldSubPath {
	return &ConfigMap_FieldSubPath{
		selector: ConfigMap_FieldPathSelectorMetadata,
		subPath:  ntt_meta.NewMetaFieldPathBuilder().Labels().FieldPath(),
	}
}

func (s ConfigMapPathSelectorMetadataLabels) WithValue(value map[string]string) *ConfigMap_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ConfigMap_FieldSubPathValue)
}

func (s ConfigMapPathSelectorMetadataLabels) WithArrayOfValues(values []map[string]string) *ConfigMap_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ConfigMap_FieldSubPathArrayOfValues)
}

func (ConfigMapPathSelectorMetadataLabels) WithKey(key string) ConfigMapMapPathSelectorMetadataLabels {
	return ConfigMapMapPathSelectorMetadataLabels{key: key}
}

type ConfigMapMapPathSelectorMetadataLabels struct {
	key string
}

func (s ConfigMapMapPathSelectorMetadataLabels) FieldPath() *ConfigMap_FieldSubPath {
	return &ConfigMap_FieldSubPath{
		selector: ConfigMap_FieldPathSelectorMetadata,
		subPath:  ntt_meta.NewMetaFieldPathBuilder().Labels().WithKey(s.key).FieldPath(),
	}
}

func (s ConfigMapMapPathSelectorMetadataLabels) WithValue(value string) *ConfigMap_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ConfigMap_FieldSubPathValue)
}

func (s ConfigMapMapPathSelectorMetadataLabels) WithArrayOfValues(values []string) *ConfigMap_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ConfigMap_FieldSubPathArrayOfValues)
}

type ConfigMapPathSelectorMetadataAnnotations struct{}

func (ConfigMapPathSelectorMetadataAnnotations) FieldPath() *ConfigMap_FieldSubPath {
	return &ConfigMap_FieldSubPath{
		selector: ConfigMap_FieldPathSelectorMetadata,
		subPath:  ntt_meta.NewMetaFieldPathBuilder().Annotations().FieldPath(),
	}
}

func (s ConfigMapPathSelectorMetadataAnnotations) WithValue(value map[string]string) *ConfigMap_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ConfigMap_FieldSubPathValue)
}

func (s ConfigMapPathSelectorMetadataAnnotations) WithArrayOfValues(values []map[string]string) *ConfigMap_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ConfigMap_FieldSubPathArrayOfValues)
}

func (ConfigMapPathSelectorMetadataAnnotations) WithKey(key string) ConfigMapMapPathSelectorMetadataAnnotations {
	return ConfigMapMapPathSelectorMetadataAnnotations{key: key}
}

type ConfigMapMapPathSelectorMetadataAnnotations struct {
	key string
}

func (s ConfigMapMapPathSelectorMetadataAnnotations) FieldPath() *ConfigMap_FieldSubPath {
	return &ConfigMap_FieldSubPath{
		selector: ConfigMap_FieldPathSelectorMetadata,
		subPath:  ntt_meta.NewMetaFieldPathBuilder().Annotations().WithKey(s.key).FieldPath(),
	}
}

func (s ConfigMapMapPathSelectorMetadataAnnotations) WithValue(value string) *ConfigMap_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ConfigMap_FieldSubPathValue)
}

func (s ConfigMapMapPathSelectorMetadataAnnotations) WithArrayOfValues(values []string) *ConfigMap_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ConfigMap_FieldSubPathArrayOfValues)
}

type ConfigMapPathSelectorMetadataGeneration struct{}

func (ConfigMapPathSelectorMetadataGeneration) FieldPath() *ConfigMap_FieldSubPath {
	return &ConfigMap_FieldSubPath{
		selector: ConfigMap_FieldPathSelectorMetadata,
		subPath:  ntt_meta.NewMetaFieldPathBuilder().Generation().FieldPath(),
	}
}

func (s ConfigMapPathSelectorMetadataGeneration) WithValue(value int64) *ConfigMap_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ConfigMap_FieldSubPathValue)
}

func (s ConfigMapPathSelectorMetadataGeneration) WithArrayOfValues(values []int64) *ConfigMap_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ConfigMap_FieldSubPathArrayOfValues)
}

type ConfigMapPathSelectorMetadataResourceVersion struct{}

func (ConfigMapPathSelectorMetadataResourceVersion) FieldPath() *ConfigMap_FieldSubPath {
	return &ConfigMap_FieldSubPath{
		selector: ConfigMap_FieldPathSelectorMetadata,
		subPath:  ntt_meta.NewMetaFieldPathBuilder().ResourceVersion().FieldPath(),
	}
}

func (s ConfigMapPathSelectorMetadataResourceVersion) WithValue(value string) *ConfigMap_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ConfigMap_FieldSubPathValue)
}

func (s ConfigMapPathSelectorMetadataResourceVersion) WithArrayOfValues(values []string) *ConfigMap_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ConfigMap_FieldSubPathArrayOfValues)
}

type ConfigMapPathSelectorMetadataOwnerReferences struct{}

func (ConfigMapPathSelectorMetadataOwnerReferences) FieldPath() *ConfigMap_FieldSubPath {
	return &ConfigMap_FieldSubPath{
		selector: ConfigMap_FieldPathSelectorMetadata,
		subPath:  ntt_meta.NewMetaFieldPathBuilder().OwnerReferences().FieldPath(),
	}
}

func (s ConfigMapPathSelectorMetadataOwnerReferences) WithValue(value []*ntt_meta.OwnerReference) *ConfigMap_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ConfigMap_FieldSubPathValue)
}

func (s ConfigMapPathSelectorMetadataOwnerReferences) WithArrayOfValues(values [][]*ntt_meta.OwnerReference) *ConfigMap_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ConfigMap_FieldSubPathArrayOfValues)
}

func (s ConfigMapPathSelectorMetadataOwnerReferences) WithItemValue(value *ntt_meta.OwnerReference) *ConfigMap_FieldSubPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*ConfigMap_FieldSubPathArrayItemValue)
}

func (ConfigMapPathSelectorMetadataOwnerReferences) ApiVersion() ConfigMapPathSelectorMetadataOwnerReferencesApiVersion {
	return ConfigMapPathSelectorMetadataOwnerReferencesApiVersion{}
}

func (ConfigMapPathSelectorMetadataOwnerReferences) Kind() ConfigMapPathSelectorMetadataOwnerReferencesKind {
	return ConfigMapPathSelectorMetadataOwnerReferencesKind{}
}

func (ConfigMapPathSelectorMetadataOwnerReferences) Name() ConfigMapPathSelectorMetadataOwnerReferencesName {
	return ConfigMapPathSelectorMetadataOwnerReferencesName{}
}

func (ConfigMapPathSelectorMetadataOwnerReferences) Uid() ConfigMapPathSelectorMetadataOwnerReferencesUid {
	return ConfigMapPathSelectorMetadataOwnerReferencesUid{}
}

func (ConfigMapPathSelectorMetadataOwnerReferences) Controller() ConfigMapPathSelectorMetadataOwnerReferencesController {
	return ConfigMapPathSelectorMetadataOwnerReferencesController{}
}

func (ConfigMapPathSelectorMetadataOwnerReferences) BlockOwnerDeletion() ConfigMapPathSelectorMetadataOwnerReferencesBlockOwnerDeletion {
	return ConfigMapPathSelectorMetadataOwnerReferencesBlockOwnerDeletion{}
}

type ConfigMapPathSelectorMetadataOwnerReferencesApiVersion struct{}

func (ConfigMapPathSelectorMetadataOwnerReferencesApiVersion) FieldPath() *ConfigMap_FieldSubPath {
	return &ConfigMap_FieldSubPath{
		selector: ConfigMap_FieldPathSelectorMetadata,
		subPath:  ntt_meta.NewMetaFieldPathBuilder().OwnerReferences().ApiVersion().FieldPath(),
	}
}

func (s ConfigMapPathSelectorMetadataOwnerReferencesApiVersion) WithValue(value string) *ConfigMap_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ConfigMap_FieldSubPathValue)
}

func (s ConfigMapPathSelectorMetadataOwnerReferencesApiVersion) WithArrayOfValues(values []string) *ConfigMap_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ConfigMap_FieldSubPathArrayOfValues)
}

type ConfigMapPathSelectorMetadataOwnerReferencesKind struct{}

func (ConfigMapPathSelectorMetadataOwnerReferencesKind) FieldPath() *ConfigMap_FieldSubPath {
	return &ConfigMap_FieldSubPath{
		selector: ConfigMap_FieldPathSelectorMetadata,
		subPath:  ntt_meta.NewMetaFieldPathBuilder().OwnerReferences().Kind().FieldPath(),
	}
}

func (s ConfigMapPathSelectorMetadataOwnerReferencesKind) WithValue(value string) *ConfigMap_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ConfigMap_FieldSubPathValue)
}

func (s ConfigMapPathSelectorMetadataOwnerReferencesKind) WithArrayOfValues(values []string) *ConfigMap_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ConfigMap_FieldSubPathArrayOfValues)
}

type ConfigMapPathSelectorMetadataOwnerReferencesName struct{}

func (ConfigMapPathSelectorMetadataOwnerReferencesName) FieldPath() *ConfigMap_FieldSubPath {
	return &ConfigMap_FieldSubPath{
		selector: ConfigMap_FieldPathSelectorMetadata,
		subPath:  ntt_meta.NewMetaFieldPathBuilder().OwnerReferences().Name().FieldPath(),
	}
}

func (s ConfigMapPathSelectorMetadataOwnerReferencesName) WithValue(value string) *ConfigMap_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ConfigMap_FieldSubPathValue)
}

func (s ConfigMapPathSelectorMetadataOwnerReferencesName) WithArrayOfValues(values []string) *ConfigMap_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ConfigMap_FieldSubPathArrayOfValues)
}

type ConfigMapPathSelectorMetadataOwnerReferencesUid struct{}

func (ConfigMapPathSelectorMetadataOwnerReferencesUid) FieldPath() *ConfigMap_FieldSubPath {
	return &ConfigMap_FieldSubPath{
		selector: ConfigMap_FieldPathSelectorMetadata,
		subPath:  ntt_meta.NewMetaFieldPathBuilder().OwnerReferences().Uid().FieldPath(),
	}
}

func (s ConfigMapPathSelectorMetadataOwnerReferencesUid) WithValue(value string) *ConfigMap_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ConfigMap_FieldSubPathValue)
}

func (s ConfigMapPathSelectorMetadataOwnerReferencesUid) WithArrayOfValues(values []string) *ConfigMap_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ConfigMap_FieldSubPathArrayOfValues)
}

type ConfigMapPathSelectorMetadataOwnerReferencesController struct{}

func (ConfigMapPathSelectorMetadataOwnerReferencesController) FieldPath() *ConfigMap_FieldSubPath {
	return &ConfigMap_FieldSubPath{
		selector: ConfigMap_FieldPathSelectorMetadata,
		subPath:  ntt_meta.NewMetaFieldPathBuilder().OwnerReferences().Controller().FieldPath(),
	}
}

func (s ConfigMapPathSelectorMetadataOwnerReferencesController) WithValue(value bool) *ConfigMap_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ConfigMap_FieldSubPathValue)
}

func (s ConfigMapPathSelectorMetadataOwnerReferencesController) WithArrayOfValues(values []bool) *ConfigMap_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ConfigMap_FieldSubPathArrayOfValues)
}

type ConfigMapPathSelectorMetadataOwnerReferencesBlockOwnerDeletion struct{}

func (ConfigMapPathSelectorMetadataOwnerReferencesBlockOwnerDeletion) FieldPath() *ConfigMap_FieldSubPath {
	return &ConfigMap_FieldSubPath{
		selector: ConfigMap_FieldPathSelectorMetadata,
		subPath:  ntt_meta.NewMetaFieldPathBuilder().OwnerReferences().BlockOwnerDeletion().FieldPath(),
	}
}

func (s ConfigMapPathSelectorMetadataOwnerReferencesBlockOwnerDeletion) WithValue(value bool) *ConfigMap_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ConfigMap_FieldSubPathValue)
}

func (s ConfigMapPathSelectorMetadataOwnerReferencesBlockOwnerDeletion) WithArrayOfValues(values []bool) *ConfigMap_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ConfigMap_FieldSubPathArrayOfValues)
}

type ConfigMapPathSelectorMetadataShards struct{}

func (ConfigMapPathSelectorMetadataShards) FieldPath() *ConfigMap_FieldSubPath {
	return &ConfigMap_FieldSubPath{
		selector: ConfigMap_FieldPathSelectorMetadata,
		subPath:  ntt_meta.NewMetaFieldPathBuilder().Shards().FieldPath(),
	}
}

func (s ConfigMapPathSelectorMetadataShards) WithValue(value map[string]int64) *ConfigMap_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ConfigMap_FieldSubPathValue)
}

func (s ConfigMapPathSelectorMetadataShards) WithArrayOfValues(values []map[string]int64) *ConfigMap_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ConfigMap_FieldSubPathArrayOfValues)
}

func (ConfigMapPathSelectorMetadataShards) WithKey(key string) ConfigMapMapPathSelectorMetadataShards {
	return ConfigMapMapPathSelectorMetadataShards{key: key}
}

type ConfigMapMapPathSelectorMetadataShards struct {
	key string
}

func (s ConfigMapMapPathSelectorMetadataShards) FieldPath() *ConfigMap_FieldSubPath {
	return &ConfigMap_FieldSubPath{
		selector: ConfigMap_FieldPathSelectorMetadata,
		subPath:  ntt_meta.NewMetaFieldPathBuilder().Shards().WithKey(s.key).FieldPath(),
	}
}

func (s ConfigMapMapPathSelectorMetadataShards) WithValue(value int64) *ConfigMap_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ConfigMap_FieldSubPathValue)
}

func (s ConfigMapMapPathSelectorMetadataShards) WithArrayOfValues(values []int64) *ConfigMap_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ConfigMap_FieldSubPathArrayOfValues)
}

type ConfigMapPathSelectorMetadataSyncing struct{}

func (ConfigMapPathSelectorMetadataSyncing) FieldPath() *ConfigMap_FieldSubPath {
	return &ConfigMap_FieldSubPath{
		selector: ConfigMap_FieldPathSelectorMetadata,
		subPath:  ntt_meta.NewMetaFieldPathBuilder().Syncing().FieldPath(),
	}
}

func (s ConfigMapPathSelectorMetadataSyncing) WithValue(value *ntt_meta.SyncingMeta) *ConfigMap_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ConfigMap_FieldSubPathValue)
}

func (s ConfigMapPathSelectorMetadataSyncing) WithArrayOfValues(values []*ntt_meta.SyncingMeta) *ConfigMap_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ConfigMap_FieldSubPathArrayOfValues)
}

func (ConfigMapPathSelectorMetadataSyncing) OwningRegion() ConfigMapPathSelectorMetadataSyncingOwningRegion {
	return ConfigMapPathSelectorMetadataSyncingOwningRegion{}
}

func (ConfigMapPathSelectorMetadataSyncing) Regions() ConfigMapPathSelectorMetadataSyncingRegions {
	return ConfigMapPathSelectorMetadataSyncingRegions{}
}

type ConfigMapPathSelectorMetadataSyncingOwningRegion struct{}

func (ConfigMapPathSelectorMetadataSyncingOwningRegion) FieldPath() *ConfigMap_FieldSubPath {
	return &ConfigMap_FieldSubPath{
		selector: ConfigMap_FieldPathSelectorMetadata,
		subPath:  ntt_meta.NewMetaFieldPathBuilder().Syncing().OwningRegion().FieldPath(),
	}
}

func (s ConfigMapPathSelectorMetadataSyncingOwningRegion) WithValue(value string) *ConfigMap_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ConfigMap_FieldSubPathValue)
}

func (s ConfigMapPathSelectorMetadataSyncingOwningRegion) WithArrayOfValues(values []string) *ConfigMap_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ConfigMap_FieldSubPathArrayOfValues)
}

type ConfigMapPathSelectorMetadataSyncingRegions struct{}

func (ConfigMapPathSelectorMetadataSyncingRegions) FieldPath() *ConfigMap_FieldSubPath {
	return &ConfigMap_FieldSubPath{
		selector: ConfigMap_FieldPathSelectorMetadata,
		subPath:  ntt_meta.NewMetaFieldPathBuilder().Syncing().Regions().FieldPath(),
	}
}

func (s ConfigMapPathSelectorMetadataSyncingRegions) WithValue(value []string) *ConfigMap_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ConfigMap_FieldSubPathValue)
}

func (s ConfigMapPathSelectorMetadataSyncingRegions) WithArrayOfValues(values [][]string) *ConfigMap_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ConfigMap_FieldSubPathArrayOfValues)
}

func (s ConfigMapPathSelectorMetadataSyncingRegions) WithItemValue(value string) *ConfigMap_FieldSubPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*ConfigMap_FieldSubPathArrayItemValue)
}

type ConfigMapPathSelectorData struct{}

func (ConfigMapPathSelectorData) FieldPath() *ConfigMap_FieldTerminalPath {
	return &ConfigMap_FieldTerminalPath{selector: ConfigMap_FieldPathSelectorData}
}

func (s ConfigMapPathSelectorData) WithValue(value map[string]string) *ConfigMap_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*ConfigMap_FieldTerminalPathValue)
}

func (s ConfigMapPathSelectorData) WithArrayOfValues(values []map[string]string) *ConfigMap_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ConfigMap_FieldTerminalPathArrayOfValues)
}

func (ConfigMapPathSelectorData) WithKey(key string) ConfigMapMapPathSelectorData {
	return ConfigMapMapPathSelectorData{key: key}
}

type ConfigMapMapPathSelectorData struct {
	key string
}

func (s ConfigMapMapPathSelectorData) FieldPath() *ConfigMap_FieldPathMap {
	return &ConfigMap_FieldPathMap{selector: ConfigMap_FieldPathSelectorData, key: s.key}
}

func (s ConfigMapMapPathSelectorData) WithValue(value string) *ConfigMap_FieldPathMapValue {
	return s.FieldPath().WithIValue(value).(*ConfigMap_FieldPathMapValue)
}

func (s ConfigMapMapPathSelectorData) WithArrayOfValues(values []string) *ConfigMap_FieldPathMapArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ConfigMap_FieldPathMapArrayOfValues)
}

type ConfigMapPathSelectorBinaryData struct{}

func (ConfigMapPathSelectorBinaryData) FieldPath() *ConfigMap_FieldTerminalPath {
	return &ConfigMap_FieldTerminalPath{selector: ConfigMap_FieldPathSelectorBinaryData}
}

func (s ConfigMapPathSelectorBinaryData) WithValue(value map[string][]byte) *ConfigMap_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*ConfigMap_FieldTerminalPathValue)
}

func (s ConfigMapPathSelectorBinaryData) WithArrayOfValues(values []map[string][]byte) *ConfigMap_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ConfigMap_FieldTerminalPathArrayOfValues)
}

func (ConfigMapPathSelectorBinaryData) WithKey(key string) ConfigMapMapPathSelectorBinaryData {
	return ConfigMapMapPathSelectorBinaryData{key: key}
}

type ConfigMapMapPathSelectorBinaryData struct {
	key string
}

func (s ConfigMapMapPathSelectorBinaryData) FieldPath() *ConfigMap_FieldPathMap {
	return &ConfigMap_FieldPathMap{selector: ConfigMap_FieldPathSelectorBinaryData, key: s.key}
}

func (s ConfigMapMapPathSelectorBinaryData) WithValue(value []byte) *ConfigMap_FieldPathMapValue {
	return s.FieldPath().WithIValue(value).(*ConfigMap_FieldPathMapValue)
}

func (s ConfigMapMapPathSelectorBinaryData) WithArrayOfValues(values [][]byte) *ConfigMap_FieldPathMapArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ConfigMap_FieldPathMapArrayOfValues)
}
