kind: "alerting.edgelq.com/TsConditionTemplate"
version: "v1"
resources:
# Edge based alerting with anomaly detectors.

- name: "projects/public-alerting-templates/policyTemplates/edge-pod-base-alerts/tsConditionTemplates/pod-cpu"
  displayName: "CPU threshold alerting"
  description: >
    Monitors CPU utilization of each container. Contains anomaly detectors.
  specTemplate:
    queries:
    - name: "CPU utilization - 100 indicates full core occupation"
      filter: "metric.type = \"applications.edgelq.com/pod/cpu/utilization\""
      aligner: "ALIGN_MEAN"
      reducer: "REDUCE_MEAN"
      maxValue: 100.0
    queryGroupBy: [ "resource.labels.device_id", "resource.labels.pod_id", "metric.labels.container_id" ]
    thresholdAlerting:
      operator: OR
      alignmentPeriod: "60s"
      raiseAfter: "180s"
      silenceAfter: "120s"
      perQueryThresholds:
      - autoAdaptUpper: true
        autoAdaptLower: true
        minLower:
          value: 50.0
        maxLower:
          value: 10.0
    anomalyAlerting:
    - analysisWindow: "1800s"
      stepInterval: "300s"
      trainStepInterval: "1800s"
      alignmentPeriod: "60s"
      lstmAutoencoder:
        hiddenSize: 16
        learnRate: 0.01
        maxTrainingEpochs: 512
        minTrainingEpochs: 32
        acceptableTrainingError: 0.0005
        trainingPeriod: "604800s"
        checkPeriodFraction: 0.05
      raiseAfter: "180s"
      silenceAfter: "120s"
    - analysisWindow: "86400s"
      stepInterval: "1800s"
      trainStepInterval: "1800s"
      alignmentPeriod: "1800s"
      lstmAutoencoder:
        hiddenSize: 16
        learnRate: 0.01
        maxTrainingEpochs: 256
        minTrainingEpochs: 32
        acceptableTrainingError: 0.001
        trainingPeriod: "1209600s"
        checkPeriodFraction: 0.05
      raiseAfter: "3600s"
      silenceAfter: "3600s"

- name: "projects/public-alerting-templates/policyTemplates/edge-pod-base-alerts/tsConditionTemplates/pod-memory"
  displayName: "Memory utilization alerting"
  description: >
    Monitors memory utilization percentage on each device. Alerts if memory usage is too high or too low (unexpected freeing).
    Includes anomaly detectors for both short-term and long-term patterns.
  specTemplate:
    queries:
    - name: "Memory utilization percentage"
      filter: "metric.type = \"applications.edgelq.com/pod/memory/utilization\""
      aligner: "ALIGN_MEAN"
      reducer: "REDUCE_MEAN"
      maxValue: 100.0
    queryGroupBy: [ "resource.labels.device_id", "resource.labels.pod_id", "metric.labels.container_id" ]
    thresholdAlerting:
      operator: OR
      alignmentPeriod: "60s"
      raiseAfter: "180s"
      silenceAfter: "120s"
      perQueryThresholds:
      - autoAdaptUpper: true
        autoAdaptLower: true
        maxUpper:
          value: 95.0
        minLower:
          value: 40.0
    anomalyAlerting:
    - analysisWindow: "1800s"
      stepInterval: "300s"
      trainStepInterval: "1800s"
      alignmentPeriod: "60s"
      lstmAutoencoder:
        hiddenSize: 16
        learnRate: 0.01
        maxTrainingEpochs: 512
        minTrainingEpochs: 32
        acceptableTrainingError: 0.0005
        trainingPeriod: "604800s"
        checkPeriodFraction: 0.05
      raiseAfter: "180s"
      silenceAfter: "120s"
    - analysisWindow: "86400s"
      stepInterval: "1800s"
      trainStepInterval: "1800s"
      alignmentPeriod: "1800s"
      lstmAutoencoder:
        hiddenSize: 16
        learnRate: 0.01
        maxTrainingEpochs: 256
        minTrainingEpochs: 32
        acceptableTrainingError: 0.001
        trainingPeriod: "1209600s"
        checkPeriodFraction: 0.05
      raiseAfter: "3600s"
      silenceAfter: "3600s"

# Backend based alerting without anomaly detectors.
- name: "projects/public-alerting-templates/policyTemplates/backend-pod-base-alerts/tsConditionTemplates/pod-cpu"
  displayName: "CPU threshold alerting"
  description: >
    Monitors CPU utilization of each container.
  specTemplate:
    queries:
    - name: "CPU utilization - 100 indicates full core occupation"
      filter: "metric.type = \"applications.edgelq.com/pod/cpu/utilization\""
      aligner: "ALIGN_MEAN"
      reducer: "REDUCE_MEAN"
      maxValue: 100.0
    queryGroupBy: [ "resource.labels.device_id", "resource.labels.pod_id", "metric.labels.container_id" ]
    thresholdAlerting:
      operator: OR
      alignmentPeriod: "60s"
      raiseAfter: "180s"
      silenceAfter: "120s"
      perQueryThresholds:
      - autoAdaptUpper: true
        autoAdaptLower: true
        minLower:
          value: 50.0
        maxLower:
          value: 10.0

- name: "projects/public-alerting-templates/policyTemplates/backend-pod-base-alerts/tsConditionTemplates/pod-memory"
  displayName: "Memory utilization alerting"
  description: >
    Monitors memory utilization percentage on each device. Alerts if memory usage is too high or too low (unexpected freeing).
  specTemplate:
    queries:
    - name: "Memory utilization percentage"
      filter: "metric.type = \"applications.edgelq.com/pod/memory/utilization\""
      aligner: "ALIGN_MEAN"
      reducer: "REDUCE_MEAN"
      maxValue: 100.0
    queryGroupBy: [ "resource.labels.device_id", "resource.labels.pod_id", "metric.labels.container_id" ]
    thresholdAlerting:
      operator: OR
      alignmentPeriod: "60s"
      raiseAfter: "180s"
      silenceAfter: "120s"
      perQueryThresholds:
      - autoAdaptUpper: true
        autoAdaptLower: true
        maxUpper:
          value: 95.0
        minLower:
          value: 40.0

# Backend based alerting for health checks - no need for anomaly detectors, and better to use backend.

- name: "projects/public-alerting-templates/policyTemplates/backend-pod-base-alerts/tsConditionTemplates/pod-health"
  displayName: "Pod health alerting"
  description: >
    Monitors health status of pods.
  specTemplate:
    queries:
    - name: "Health status (1 is healthy - running or gracefully stopped, 0 is unhealthy)"
      filter: "metric.type = \"applications.edgelq.com/pod/health\""
      aligner: "ALIGN_MIN"
      reducer: "REDUCE_MIN"
      maxValue: 1.0
    queryGroupBy: [ "resource.labels.device_id", "resource.labels.pod_id" ]
    thresholdAlerting:
      operator: OR
      alignmentPeriod: "60s"
      raiseAfter: "120s"
      silenceAfter: "60s"
      perQueryThresholds:
      - maxLower:
          value: 1.0
