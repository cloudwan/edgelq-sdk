kind: "alerting.edgelq.com/PolicyTemplate"
version: "v1"
resources:
- name: projects/public-alerting-templates/policyTemplates/edge-pod-base-alerts
  displayName: "Pod Alerts policy on edge"
  description: "Pre-defined policy for base edge pod alerts"
  supportingDocs:
  - "projects/public-alerting-templates/documents/pod-alerting"
  specTemplate:
    enabled: true
    processingLocation: EDGE
    resourceIdentity:
      alertingResource: services/devices.edgelq.com/resources/Device
      labels:
      - key: device_id
        contexts: [RESOURCE_LABEL, LOG_LABEL]
        mappedNameSegment: device
      - key: pod_id
        contexts: [ RESOURCE_LABEL, LOG_LABEL ]
        mappedNameSegment: pod
      namePatterns:
      - projects/{project}/regions/{region}/devices/{device}
    supportingQueries:
    - tsQuery:
        description: "pod CPU utilization - 100 indicates full CPU core"
        filterTemplate: "metric.type=\"applications.edgelq.com/pod/cpu/utilization\" AND resource.labels.device_id=\"<device_id>\" AND resource.labels.pod_id=\"<pod_id>\""
        aggregation:
          alignmentPeriod: "60s"
          perSeriesAligner: ALIGN_SUMMARY
          crossSeriesReducer: REDUCE_MEAN
          groupByFields: ["resource.labels.pod_id", "resource.labels.device_id", "metric.labels.container_id"]
    - tsQuery:
        description: "pod memory utilization - in %, 100 is max"
        filterTemplate: "metric.type=\"applications.edgelq.com/pod/memory/utilization\" AND resource.labels.device_id=\"<device_id>\" AND resource.labels.pod_id=\"<pod_id>\""
        aggregation:
          alignmentPeriod: "60s"
          perSeriesAligner: ALIGN_SUMMARY
          crossSeriesReducer: REDUCE_MEAN
          groupByFields: [ "resource.labels.pod_id", "resource.labels.device_id", "metric.labels.container_id" ]
    - tsQuery:
        description: "Pod health status - 0 means unhealthy, 1 means healthy (running or stopped gracefully)"
        filterTemplate: "metric.type=\"applications.edgelq.com/pod/health\" AND resource.labels.device_id=\"<device_id>\" AND resource.labels.pod_id=\"<pod_id>\""
        aggregation:
          alignmentPeriod: "60s"
          perSeriesAligner: ALIGN_MIN
          crossSeriesReducer: REDUCE_MIN
          groupByFields: [ "resource.labels.pod_id", "resource.labels.device_id" ]
    - tsQuery:
        description: "Pod health check status - 0 means unhealthy, 1 means healthy"
        filterTemplate: "metric.type=\"applications.edgelq.com/pod/healthcheck/status\" AND resource.labels.device_id=\"<device_id>\" AND resource.labels.pod_id=\"<pod_id>\""
        aggregation:
          alignmentPeriod: "60s"
          perSeriesAligner: ALIGN_MIN
          crossSeriesReducer: REDUCE_MIN
          groupByFields: [ "resource.labels.pod_id", "resource.labels.device_id", "metric.labels.container_id", "metric.labels.healthcheck_name", "metric.labels.status_summary" ]
    - tsQuery:
        description: "Health check response times in ms"
        filterTemplate: "metric.type=\"applications.edgelq.com/pod/healthcheck/http/responsetime\" AND resource.labels.device_id=\"<device_id>\" AND resource.labels.pod_id=\"<pod_id>\""
        aggregation:
          alignmentPeriod: "60s"
          perSeriesAligner: ALIGN_SUMMARY
          crossSeriesReducer: REDUCE_MEAN
          groupByFields: [ "resource.labels.pod_id", "resource.labels.device_id", "metric.labels.container_id", "metric.labels.healthcheck_name" ]
    - logQuery:
        description: "Logs on pod"
        filterTemplate: "logDescriptor=\"projects/<project_id>/logDescriptors/devices.edgelq.com/syslog\" and labels.device_id=\"<device_id>\" and labels.pod_name=\"projects/<project_id>/regions/<region_id>/pods/<pod_id>\""
    - restGetQuery:
        description: "Device resource where pod is running"
        endpoint: "https://devices.<lqd_domain>"
        pathTemplate: "/v1/projects/<project_id>/regions/<region_id>/devices/<device_id>"
        view: "NAME"
        fieldMask: "spec.os_version,spec.netplan_yaml_config,spec.netplan_api_config_mode,spec.os_image_url,spec.location,spec.usb_guard,spec.health_checks,status"
    - restGetQuery:
        description: "Pod resource"
        endpoint: "https://applications.<lqd_domain>"
        pathTemplate: "/v1/projects/<project_id>/regions/<region_id>/pods/<pod_id>"
        view: "NAME"
        fieldMask: "spec,status"
    aiAgent:
      enabled: true
      remediationOptions:
      - reboot: {}

- name: projects/public-alerting-templates/policyTemplates/backend-pod-base-alerts
  displayName: "Pod Alerts policy on backend"
  description: "Pre-defined policy for base backend pod alerts"
  supportingDocs:
  - "projects/public-alerting-templates/documents/pod-alerting"
  specTemplate:
    enabled: true
    processingLocation: BACKEND
    resourceIdentity:
      alertingResource: services/devices.edgelq.com/resources/Device
      labels:
      - key: device_id
        contexts: [RESOURCE_LABEL, LOG_LABEL]
        mappedNameSegment: device
      - key: pod_id
        contexts: [ RESOURCE_LABEL, LOG_LABEL ]
        mappedNameSegment: pod
      namePatterns:
      - projects/{project}/regions/{region}/devices/{device}
    supportingQueries:
    - tsQuery:
        description: "pod (sum from containers) CPU utilization - 100 indicates full CPU core"
        filterTemplate: "metric.type=\"applications.edgelq.com/pod/cpu/utilization\" AND resource.labels.device_id=\"<device_id>\" AND resource.labels.pod_id=\"<pod_id>\""
        aggregation:
          alignmentPeriod: "60s"
          perSeriesAligner: ALIGN_MEAN
          crossSeriesReducer: REDUCE_SUM
          groupByFields: ["resource.labels.pod_id", "resource.labels.device_id"]
    - tsQuery:
        description: "pod (sum from containers) memory utilization - in %, 100 is max"
        filterTemplate: "metric.type=\"applications.edgelq.com/pod/memory/utilization\" AND resource.labels.device_id=\"<device_id>\" AND resource.labels.pod_id=\"<pod_id>\""
        aggregation:
          alignmentPeriod: "60s"
          perSeriesAligner: ALIGN_MEAN
          crossSeriesReducer: REDUCE_SUM
          groupByFields: [ "resource.labels.pod_id", "resource.labels.device_id" ]
    - tsQuery:
        description: "Pod health status - 0 means unhealthy, 1 means healthy (running or stopped gracefully)"
        filterTemplate: "metric.type=\"applications.edgelq.com/pod/health\" AND resource.labels.device_id=\"<device_id>\" AND resource.labels.pod_id=\"<pod_id>\""
        aggregation:
          alignmentPeriod: "60s"
          perSeriesAligner: ALIGN_MIN
          crossSeriesReducer: REDUCE_MIN
          groupByFields: [ "resource.labels.pod_id", "resource.labels.device_id" ]
    - tsQuery:
        description: "Pod health check status - 0 means unhealthy, 1 means healthy"
        filterTemplate: "metric.type=\"applications.edgelq.com/pod/healthcheck/status\" AND resource.labels.device_id=\"<device_id>\" AND resource.labels.pod_id=\"<pod_id>\""
        aggregation:
          alignmentPeriod: "60s"
          perSeriesAligner: ALIGN_MIN
          crossSeriesReducer: REDUCE_MIN
          groupByFields: [ "resource.labels.pod_id", "resource.labels.device_id", "metric.labels.container_id", "metric.labels.healthcheck_name", "metric.labels.status_summary" ]
    - tsQuery:
        description: "Health check response times in ms"
        filterTemplate: "metric.type=\"applications.edgelq.com/pod/healthcheck/http/responsetime\" AND resource.labels.device_id=\"<device_id>\" AND resource.labels.pod_id=\"<pod_id>\""
        aggregation:
          alignmentPeriod: "60s"
          perSeriesAligner: ALIGN_SUMMARY
          crossSeriesReducer: REDUCE_MEAN
          groupByFields: [ "resource.labels.pod_id", "resource.labels.device_id", "metric.labels.container_id", "metric.labels.healthcheck_name" ]
    - logQuery:
        description: "Logs on pod"
        filterTemplate: "logDescriptor=\"projects/<project_id>/logDescriptors/devices.edgelq.com/syslog\" and labels.device_id=\"<device_id>\" and labels.pod_name=\"projects/<project_id>/regions/<region_id>/pods/<pod_id>\""
    - restGetQuery:
        description: "Device resource where pod is running"
        endpoint: "https://devices.<lqd_domain>"
        pathTemplate: "/v1/projects/<project_id>/regions/<region_id>/devices/<device_id>"
        view: "NAME"
        fieldMask: "spec.os_version,spec.netplan_yaml_config,spec.netplan_api_config_mode,spec.os_image_url,spec.location,spec.usb_guard,spec.health_checks,status"
    - restGetQuery:
        description: "Pod resource"
        endpoint: "https://applications.<lqd_domain>"
        pathTemplate: "/v1/projects/<project_id>/regions/<region_id>/pods/<pod_id>"
        view: "NAME"
        fieldMask: "spec,status"
    aiAgent:
      enabled: true
      remediationOptions:
      - reboot: {}
