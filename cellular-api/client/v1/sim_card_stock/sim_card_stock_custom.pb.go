// Code generated by protoc-gen-goten-go
// File: edgelq/cellular-api/proto/v1/sim_card_stock_custom.proto
// DO NOT EDIT!!!

package sim_card_stock_client

import (
	"fmt"
	"reflect"
	"sync"

	"google.golang.org/protobuf/encoding/protojson"
	"google.golang.org/protobuf/proto"
	preflect "google.golang.org/protobuf/reflect/protoreflect"
	"google.golang.org/protobuf/runtime/protoimpl"
)

// proto imports
import (
	carrier "github.com/cloudwan/edgelq-sdk/cellular-api/carrier"
	sim_card "github.com/cloudwan/edgelq-sdk/cellular-api/resources/v1/sim_card"
	sim_card_stock "github.com/cloudwan/edgelq-sdk/cellular-api/resources/v1/sim_card_stock"
	iam_project "github.com/cloudwan/edgelq-sdk/iam/resources/v1/project"
)

// Reference imports to suppress errors if they are not otherwise used.
var (
	_ = fmt.Errorf
	_ = reflect.Method{}
	_ = sync.Once{}

	_ = protojson.MarshalOptions{}
	_ = proto.MarshalOptions{}
	_ = preflect.Value{}
	_ = protoimpl.DescBuilder{}
)

// make sure we're using proto imports
var (
	_ = &carrier.TransatelAccount{}
	_ = &sim_card.SimCard{}
	_ = &sim_card_stock.SimCardStock{}
	_ = &iam_project.Project{}
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// A request message of the Allocate method.
type AllocateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
	// Name of ntt.cellular_api.v1.SimCardStock
	Name     *sim_card_stock.Name   `protobuf:"bytes,1,opt,customtype=Name,name=name,proto3" json:"name,omitempty" firestore:"name"`
	Project  *iam_project.Reference `protobuf:"bytes,2,opt,customtype=Reference,name=project,proto3" json:"project,omitempty" firestore:"project"`
	RegionId string                 `protobuf:"bytes,3,opt,name=region_id,json=regionId,proto3" json:"region_id,omitempty" firestore:"regionId"`
	// expected state just after allocated
	// if unspecified, will try to transit to ACTIVE
	State carrier.SimState `protobuf:"varint,4,opt,name=state,proto3,enum=ntt.cellular_api.carrier.SimState" json:"state,omitempty" firestore:"state"`
}

func (m *AllocateRequest) Reset() {
	*m = AllocateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &edgelq_cellular_api_proto_v1_sim_card_stock_custom_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(m))
		ms.StoreMessageInfo(mi)
	}
}

func (m *AllocateRequest) String() string {
	return protoimpl.X.MessageStringOf(m)
}

func (*AllocateRequest) ProtoMessage() {}

func (m *AllocateRequest) ProtoReflect() preflect.Message {
	mi := &edgelq_cellular_api_proto_v1_sim_card_stock_custom_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && m != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(m))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(m)
}

func (*AllocateRequest) GotenMessage() {}

// Deprecated, Use AllocateRequest.ProtoReflect.Descriptor instead.
func (*AllocateRequest) Descriptor() ([]byte, []int) {
	return edgelq_cellular_api_proto_v1_sim_card_stock_custom_proto_rawDescGZIP(), []int{0}
}

func (m *AllocateRequest) Unmarshal(b []byte) error {
	return proto.Unmarshal(b, m)
}

func (m *AllocateRequest) Marshal() ([]byte, error) {
	return proto.Marshal(m)
}

func (m *AllocateRequest) MarshalJSON() ([]byte, error) {
	return protojson.MarshalOptions{}.Marshal(m)
}

func (m *AllocateRequest) UnmarshalJSON(data []byte) error {
	return protojson.Unmarshal(data, m)
}

func (m *AllocateRequest) GetName() *sim_card_stock.Name {
	if m != nil {
		return m.Name
	}
	return nil
}

func (m *AllocateRequest) GetProject() *iam_project.Reference {
	if m != nil {
		return m.Project
	}
	return nil
}

func (m *AllocateRequest) GetRegionId() string {
	if m != nil {
		return m.RegionId
	}
	return ""
}

func (m *AllocateRequest) GetState() carrier.SimState {
	if m != nil {
		return m.State
	}
	return carrier.SimState_SIM_STATE_UNSPECIFIED
}

func (m *AllocateRequest) SetName(fv *sim_card_stock.Name) {
	if m == nil {
		panic(fmt.Errorf("can't set %s on nil %s", "Name", "AllocateRequest"))
	}
	m.Name = fv
}

func (m *AllocateRequest) SetProject(fv *iam_project.Reference) {
	if m == nil {
		panic(fmt.Errorf("can't set %s on nil %s", "Project", "AllocateRequest"))
	}
	m.Project = fv
}

func (m *AllocateRequest) SetRegionId(fv string) {
	if m == nil {
		panic(fmt.Errorf("can't set %s on nil %s", "RegionId", "AllocateRequest"))
	}
	m.RegionId = fv
}

func (m *AllocateRequest) SetState(fv carrier.SimState) {
	if m == nil {
		panic(fmt.Errorf("can't set %s on nil %s", "State", "AllocateRequest"))
	}
	m.State = fv
}

// A request message of the Deallocate method.
type DeallocateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
	// Name of ntt.cellular_api.v1.SimCardStock
	Name    *sim_card_stock.Name `protobuf:"bytes,1,opt,customtype=Name,name=name,proto3" json:"name,omitempty" firestore:"name"`
	SimCard *sim_card.Reference  `protobuf:"bytes,2,opt,customtype=Reference,name=sim_card,json=simCard,proto3" json:"sim_card,omitempty" firestore:"simCard"`
	// expected state just after deallocated
	// if unspecified, will try to transit to SUSPENDED
	State carrier.SimState `protobuf:"varint,3,opt,name=state,proto3,enum=ntt.cellular_api.carrier.SimState" json:"state,omitempty" firestore:"state"`
}

func (m *DeallocateRequest) Reset() {
	*m = DeallocateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &edgelq_cellular_api_proto_v1_sim_card_stock_custom_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(m))
		ms.StoreMessageInfo(mi)
	}
}

func (m *DeallocateRequest) String() string {
	return protoimpl.X.MessageStringOf(m)
}

func (*DeallocateRequest) ProtoMessage() {}

func (m *DeallocateRequest) ProtoReflect() preflect.Message {
	mi := &edgelq_cellular_api_proto_v1_sim_card_stock_custom_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && m != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(m))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(m)
}

func (*DeallocateRequest) GotenMessage() {}

// Deprecated, Use DeallocateRequest.ProtoReflect.Descriptor instead.
func (*DeallocateRequest) Descriptor() ([]byte, []int) {
	return edgelq_cellular_api_proto_v1_sim_card_stock_custom_proto_rawDescGZIP(), []int{1}
}

func (m *DeallocateRequest) Unmarshal(b []byte) error {
	return proto.Unmarshal(b, m)
}

func (m *DeallocateRequest) Marshal() ([]byte, error) {
	return proto.Marshal(m)
}

func (m *DeallocateRequest) MarshalJSON() ([]byte, error) {
	return protojson.MarshalOptions{}.Marshal(m)
}

func (m *DeallocateRequest) UnmarshalJSON(data []byte) error {
	return protojson.Unmarshal(data, m)
}

func (m *DeallocateRequest) GetName() *sim_card_stock.Name {
	if m != nil {
		return m.Name
	}
	return nil
}

func (m *DeallocateRequest) GetSimCard() *sim_card.Reference {
	if m != nil {
		return m.SimCard
	}
	return nil
}

func (m *DeallocateRequest) GetState() carrier.SimState {
	if m != nil {
		return m.State
	}
	return carrier.SimState_SIM_STATE_UNSPECIFIED
}

func (m *DeallocateRequest) SetName(fv *sim_card_stock.Name) {
	if m == nil {
		panic(fmt.Errorf("can't set %s on nil %s", "Name", "DeallocateRequest"))
	}
	m.Name = fv
}

func (m *DeallocateRequest) SetSimCard(fv *sim_card.Reference) {
	if m == nil {
		panic(fmt.Errorf("can't set %s on nil %s", "SimCard", "DeallocateRequest"))
	}
	m.SimCard = fv
}

func (m *DeallocateRequest) SetState(fv carrier.SimState) {
	if m == nil {
		panic(fmt.Errorf("can't set %s on nil %s", "State", "DeallocateRequest"))
	}
	m.State = fv
}

var edgelq_cellular_api_proto_v1_sim_card_stock_custom_proto preflect.FileDescriptor

var edgelq_cellular_api_proto_v1_sim_card_stock_custom_proto_rawDesc = []byte{
	0x0a, 0x38, 0x65, 0x64, 0x67, 0x65, 0x6c, 0x71, 0x2f, 0x63, 0x65, 0x6c, 0x6c, 0x75, 0x6c, 0x61,
	0x72, 0x2d, 0x61, 0x70, 0x69, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x76, 0x31, 0x2f, 0x73,
	0x69, 0x6d, 0x5f, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x5f, 0x63, 0x75,
	0x73, 0x74, 0x6f, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x13, 0x6e, 0x74, 0x74, 0x2e,
	0x63, 0x65, 0x6c, 0x6c, 0x75, 0x6c, 0x61, 0x72, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x1a,
	0x20, 0x67, 0x6f, 0x74, 0x65, 0x6e, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x1d, 0x67, 0x6f, 0x74, 0x65, 0x6e, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x67, 0x6f, 0x74, 0x65, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x1f, 0x67, 0x6f, 0x74, 0x65, 0x6e, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x24, 0x67, 0x6f, 0x74, 0x65, 0x6e, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x6f,
	0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x29, 0x65, 0x64, 0x67, 0x65, 0x6c, 0x71, 0x2f,
	0x63, 0x65, 0x6c, 0x6c, 0x75, 0x6c, 0x61, 0x72, 0x2d, 0x61, 0x70, 0x69, 0x2f, 0x63, 0x61, 0x72,
	0x72, 0x69, 0x65, 0x72, 0x2f, 0x63, 0x61, 0x72, 0x72, 0x69, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x31, 0x65, 0x64, 0x67, 0x65, 0x6c, 0x71, 0x2f, 0x63, 0x65, 0x6c, 0x6c, 0x75,
	0x6c, 0x61, 0x72, 0x2d, 0x61, 0x70, 0x69, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x76, 0x31,
	0x2f, 0x73, 0x69, 0x6d, 0x5f, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x38, 0x65, 0x64, 0x67, 0x65, 0x6c, 0x71, 0x2f, 0x63, 0x65,
	0x6c, 0x6c, 0x75, 0x6c, 0x61, 0x72, 0x2d, 0x61, 0x70, 0x69, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2f, 0x76, 0x31, 0x2f, 0x73, 0x69, 0x6d, 0x5f, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x73, 0x74, 0x6f,
	0x63, 0x6b, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22,
	0xd8, 0x01, 0x0a, 0x0f, 0x41, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x28, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x14, 0xb2, 0xda, 0x21, 0x10, 0x0a, 0x0e, 0x0a, 0x0c, 0x53, 0x69, 0x6d, 0x43, 0x61,
	0x72, 0x64, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x3a, 0x0a,
	0x07, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x20,
	0xb2, 0xda, 0x21, 0x1c, 0x12, 0x1a, 0x0a, 0x16, 0x69, 0x61, 0x6d, 0x2e, 0x65, 0x64, 0x67, 0x65,
	0x6c, 0x71, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x10, 0x05,
	0x52, 0x07, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x25, 0x0a, 0x09, 0x72, 0x65, 0x67,
	0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x08, 0xca, 0xc6,
	0x27, 0x04, 0x2a, 0x02, 0x68, 0x01, 0x52, 0x08, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x49, 0x64,
	0x12, 0x38, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x22, 0x2e, 0x6e, 0x74, 0x74, 0x2e, 0x63, 0x65, 0x6c, 0x6c, 0x75, 0x6c, 0x61, 0x72, 0x5f, 0x61,
	0x70, 0x69, 0x2e, 0x63, 0x61, 0x72, 0x72, 0x69, 0x65, 0x72, 0x2e, 0x53, 0x69, 0x6d, 0x53, 0x74,
	0x61, 0x74, 0x65, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x22, 0xa5, 0x01, 0x0a, 0x11, 0x44,
	0x65, 0x61, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x28, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x14,
	0xb2, 0xda, 0x21, 0x10, 0x0a, 0x0e, 0x0a, 0x0c, 0x53, 0x69, 0x6d, 0x43, 0x61, 0x72, 0x64, 0x53,
	0x74, 0x6f, 0x63, 0x6b, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x2c, 0x0a, 0x08, 0x73, 0x69,
	0x6d, 0x5f, 0x63, 0x61, 0x72, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x11, 0xb2, 0xda,
	0x21, 0x0d, 0x12, 0x0b, 0x0a, 0x07, 0x53, 0x69, 0x6d, 0x43, 0x61, 0x72, 0x64, 0x10, 0x05, 0x52,
	0x07, 0x73, 0x69, 0x6d, 0x43, 0x61, 0x72, 0x64, 0x12, 0x38, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x22, 0x2e, 0x6e, 0x74, 0x74, 0x2e, 0x63, 0x65,
	0x6c, 0x6c, 0x75, 0x6c, 0x61, 0x72, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x61, 0x72, 0x72, 0x69,
	0x65, 0x72, 0x2e, 0x53, 0x69, 0x6d, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x05, 0x73, 0x74, 0x61,
	0x74, 0x65, 0x42, 0x93, 0x01, 0xe8, 0xde, 0x21, 0x00, 0x0a, 0x1a, 0x63, 0x6f, 0x6d, 0x2e, 0x6e,
	0x74, 0x74, 0x2e, 0x63, 0x65, 0x6c, 0x6c, 0x75, 0x6c, 0x61, 0x72, 0x5f, 0x61, 0x70, 0x69, 0x2e,
	0x70, 0x62, 0x2e, 0x76, 0x31, 0x42, 0x17, 0x53, 0x69, 0x6d, 0x43, 0x61, 0x72, 0x64, 0x53, 0x74,
	0x6f, 0x63, 0x6b, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x00,
	0x5a, 0x56, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x6c, 0x6f,
	0x75, 0x64, 0x77, 0x61, 0x6e, 0x2f, 0x65, 0x64, 0x67, 0x65, 0x6c, 0x71, 0x2f, 0x63, 0x65, 0x6c,
	0x6c, 0x75, 0x6c, 0x61, 0x72, 0x2d, 0x61, 0x70, 0x69, 0x2f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x2f, 0x76, 0x31, 0x2f, 0x73, 0x69, 0x6d, 0x5f, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x73, 0x74, 0x6f,
	0x63, 0x6b, 0x3b, 0x73, 0x69, 0x6d, 0x5f, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x73, 0x74, 0x6f, 0x63,
	0x6b, 0x5f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	edgelq_cellular_api_proto_v1_sim_card_stock_custom_proto_rawDescOnce sync.Once
	edgelq_cellular_api_proto_v1_sim_card_stock_custom_proto_rawDescData = edgelq_cellular_api_proto_v1_sim_card_stock_custom_proto_rawDesc
)

func edgelq_cellular_api_proto_v1_sim_card_stock_custom_proto_rawDescGZIP() []byte {
	edgelq_cellular_api_proto_v1_sim_card_stock_custom_proto_rawDescOnce.Do(func() {
		edgelq_cellular_api_proto_v1_sim_card_stock_custom_proto_rawDescData = protoimpl.X.CompressGZIP(edgelq_cellular_api_proto_v1_sim_card_stock_custom_proto_rawDescData)
	})
	return edgelq_cellular_api_proto_v1_sim_card_stock_custom_proto_rawDescData
}

var edgelq_cellular_api_proto_v1_sim_card_stock_custom_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var edgelq_cellular_api_proto_v1_sim_card_stock_custom_proto_goTypes = []interface{}{
	(*AllocateRequest)(nil),   // 0: ntt.cellular_api.v1.AllocateRequest
	(*DeallocateRequest)(nil), // 1: ntt.cellular_api.v1.DeallocateRequest
	(carrier.SimState)(0),     // 2: ntt.cellular_api.carrier.SimState
}
var edgelq_cellular_api_proto_v1_sim_card_stock_custom_proto_depIdxs = []int32{
	2, // 0: ntt.cellular_api.v1.AllocateRequest.state:type_name -> ntt.cellular_api.carrier.SimState
	2, // 1: ntt.cellular_api.v1.DeallocateRequest.state:type_name -> ntt.cellular_api.carrier.SimState
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { edgelq_cellular_api_proto_v1_sim_card_stock_custom_proto_init() }
func edgelq_cellular_api_proto_v1_sim_card_stock_custom_proto_init() {
	if edgelq_cellular_api_proto_v1_sim_card_stock_custom_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {

		edgelq_cellular_api_proto_v1_sim_card_stock_custom_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AllocateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		edgelq_cellular_api_proto_v1_sim_card_stock_custom_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeallocateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}

	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: edgelq_cellular_api_proto_v1_sim_card_stock_custom_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           edgelq_cellular_api_proto_v1_sim_card_stock_custom_proto_goTypes,
		DependencyIndexes: edgelq_cellular_api_proto_v1_sim_card_stock_custom_proto_depIdxs,
		MessageInfos:      edgelq_cellular_api_proto_v1_sim_card_stock_custom_proto_msgTypes,
	}.Build()
	edgelq_cellular_api_proto_v1_sim_card_stock_custom_proto = out.File
	edgelq_cellular_api_proto_v1_sim_card_stock_custom_proto_rawDesc = nil
	edgelq_cellular_api_proto_v1_sim_card_stock_custom_proto_goTypes = nil
	edgelq_cellular_api_proto_v1_sim_card_stock_custom_proto_depIdxs = nil
}
