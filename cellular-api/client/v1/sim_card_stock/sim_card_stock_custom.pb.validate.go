// Code generated by protoc-gen-goten-validate
// File: edgelq/cellular-api/proto/v1/sim_card_stock_custom.proto
// DO NOT EDIT!!!

package sim_card_stock_client

import (
	"bytes"
	"errors"
	"fmt"
	"net"
	"net/url"
	"regexp"
	"strings"
	"time"
	"unicode/utf8"

	gotenvalidate "github.com/cloudwan/goten-sdk/runtime/validate"
)

// proto imports
import (
	carrier "github.com/cloudwan/edgelq-sdk/cellular-api/carrier"
	sim_card "github.com/cloudwan/edgelq-sdk/cellular-api/resources/v1/sim_card"
	sim_card_stock "github.com/cloudwan/edgelq-sdk/cellular-api/resources/v1/sim_card_stock"
	iam_project "github.com/cloudwan/edgelq-sdk/iam/resources/v1/project"
)

var (
	_ = bytes.Equal
	_ = errors.New
	_ = fmt.Errorf
	_ = net.ParseIP
	_ = regexp.Match
	_ = strings.Split
	_ = time.Now
	_ = utf8.RuneCountInString
	_ = url.Parse
	_ = gotenvalidate.NewValidationError
)

// make sure we're using proto imports
var (
	_ = &carrier.TransatelAccount{}
	_ = &sim_card.SimCard{}
	_ = &sim_card_stock.SimCardStock{}
	_ = &iam_project.Project{}
)

func (obj *AllocateRequest) GotenValidate() error {
	if obj == nil {
		return nil
	}
	if obj.RegionId == "" {
		return gotenvalidate.NewValidationError("AllocateRequest", "regionId", obj.RegionId, "field is required", nil)
	}
	if cvobj, ok := interface{}(obj).(gotenvalidate.CustomValidator); ok {
		return cvobj.GotenCustomValidate()
	}
	return nil
}
func (obj *DeallocateRequest) GotenValidate() error {
	if obj == nil {
		return nil
	}
	if cvobj, ok := interface{}(obj).(gotenvalidate.CustomValidator); ok {
		return cvobj.GotenCustomValidate()
	}
	return nil
}
