// Code generated by protoc-gen-goten-go
// File: edgelq/cellular-api/proto/v1/sim_card_change.proto
// DO NOT EDIT!!!

package sim_card

import (
	"fmt"
	"reflect"
	"sync"

	"google.golang.org/protobuf/encoding/protojson"
	"google.golang.org/protobuf/proto"
	preflect "google.golang.org/protobuf/reflect/protoreflect"
	"google.golang.org/protobuf/runtime/protoimpl"
)

// proto imports
import (
	iam_project "github.com/cloudwan/edgelq-sdk/iam/resources/v1/project"
	fieldmaskpb "google.golang.org/protobuf/types/known/fieldmaskpb"
)

// Reference imports to suppress errors if they are not otherwise used.
var (
	_ = fmt.Errorf
	_ = reflect.Method{}
	_ = sync.Once{}

	_ = protojson.MarshalOptions{}
	_ = proto.MarshalOptions{}
	_ = preflect.Value{}
	_ = protoimpl.DescBuilder{}
)

// make sure we're using proto imports
var (
	_ = &iam_project.Project{}
	_ = &fieldmaskpb.FieldMask{}
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// SimCardChange is used by Watch notifications Responses to describe change of
// single SimCard One of Added, Modified, Removed
type SimCardChange struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
	// SimCard change
	//
	// Types that are valid to be assigned to ChangeType:
	//	*SimCardChange_Added_
	//	*SimCardChange_Modified_
	//	*SimCardChange_Current_
	//	*SimCardChange_Removed_
	ChangeType isSimCardChange_ChangeType `protobuf_oneof:"change_type"`
}

func (m *SimCardChange) Reset() {
	*m = SimCardChange{}
	if protoimpl.UnsafeEnabled {
		mi := &edgelq_cellular_api_proto_v1_sim_card_change_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(m))
		ms.StoreMessageInfo(mi)
	}
}

func (m *SimCardChange) String() string {
	return protoimpl.X.MessageStringOf(m)
}

func (*SimCardChange) ProtoMessage() {}

func (m *SimCardChange) ProtoReflect() preflect.Message {
	mi := &edgelq_cellular_api_proto_v1_sim_card_change_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && m != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(m))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(m)
}

func (*SimCardChange) GotenMessage() {}

// Deprecated, Use SimCardChange.ProtoReflect.Descriptor instead.
func (*SimCardChange) Descriptor() ([]byte, []int) {
	return edgelq_cellular_api_proto_v1_sim_card_change_proto_rawDescGZIP(), []int{0}
}

func (m *SimCardChange) Unmarshal(b []byte) error {
	return proto.Unmarshal(b, m)
}

func (m *SimCardChange) Marshal() ([]byte, error) {
	return proto.Marshal(m)
}

func (m *SimCardChange) MarshalJSON() ([]byte, error) {
	return protojson.MarshalOptions{}.Marshal(m)
}

func (m *SimCardChange) UnmarshalJSON(data []byte) error {
	return protojson.Unmarshal(data, m)
}

type isSimCardChange_ChangeType interface {
	isSimCardChange_ChangeType()
}

type SimCardChange_Added_ struct {
	// Added is returned when watched document is added, either created or
	// enters Query view
	Added *SimCardChange_Added `protobuf:"bytes,1,opt,name=added,proto3,oneof"`
}
type SimCardChange_Modified_ struct {
	// Modified is returned when watched document is modified
	Modified *SimCardChange_Modified `protobuf:"bytes,2,opt,name=modified,proto3,oneof"`
}
type SimCardChange_Current_ struct {
	// Current is returned in stateless watch when document enters query view or
	// is modified within.
	Current *SimCardChange_Current `protobuf:"bytes,4,opt,name=current,proto3,oneof"`
}
type SimCardChange_Removed_ struct {
	// Removed is returned when SimCard is deleted or leaves Query view
	Removed *SimCardChange_Removed `protobuf:"bytes,3,opt,name=removed,proto3,oneof"`
}

func (*SimCardChange_Added_) isSimCardChange_ChangeType()    {}
func (*SimCardChange_Modified_) isSimCardChange_ChangeType() {}
func (*SimCardChange_Current_) isSimCardChange_ChangeType()  {}
func (*SimCardChange_Removed_) isSimCardChange_ChangeType()  {}
func (m *SimCardChange) GetChangeType() isSimCardChange_ChangeType {
	if m != nil {
		return m.ChangeType
	}
	return nil
}
func (m *SimCardChange) GetAdded() *SimCardChange_Added {
	if x, ok := m.GetChangeType().(*SimCardChange_Added_); ok {
		return x.Added
	}
	return nil
}
func (m *SimCardChange) GetModified() *SimCardChange_Modified {
	if x, ok := m.GetChangeType().(*SimCardChange_Modified_); ok {
		return x.Modified
	}
	return nil
}
func (m *SimCardChange) GetCurrent() *SimCardChange_Current {
	if x, ok := m.GetChangeType().(*SimCardChange_Current_); ok {
		return x.Current
	}
	return nil
}
func (m *SimCardChange) GetRemoved() *SimCardChange_Removed {
	if x, ok := m.GetChangeType().(*SimCardChange_Removed_); ok {
		return x.Removed
	}
	return nil
}
func (m *SimCardChange) SetChangeType(ofv isSimCardChange_ChangeType) {
	if m == nil {
		panic(fmt.Errorf("can't set %s on nil %s", "isSimCardChange_ChangeType", "SimCardChange"))
	}
	m.ChangeType = ofv
}
func (m *SimCardChange) SetAdded(fv *SimCardChange_Added) {
	m.SetChangeType(&SimCardChange_Added_{Added: fv})
}
func (m *SimCardChange) SetModified(fv *SimCardChange_Modified) {
	m.SetChangeType(&SimCardChange_Modified_{Modified: fv})
}
func (m *SimCardChange) SetCurrent(fv *SimCardChange_Current) {
	m.SetChangeType(&SimCardChange_Current_{Current: fv})
}
func (m *SimCardChange) SetRemoved(fv *SimCardChange_Removed) {
	m.SetChangeType(&SimCardChange_Removed_{Removed: fv})
}

// SimCard has been added to query view
type SimCardChange_Added struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
	SimCard       *SimCard `protobuf:"bytes,1,opt,name=sim_card,json=simCard,proto3" json:"sim_card,omitempty"`
	// Integer describing index of added SimCard in resulting query view.
	ViewIndex int32 `protobuf:"varint,2,opt,name=view_index,json=viewIndex,proto3" json:"view_index,omitempty"`
}

func (m *SimCardChange_Added) Reset() {
	*m = SimCardChange_Added{}
	if protoimpl.UnsafeEnabled {
		mi := &edgelq_cellular_api_proto_v1_sim_card_change_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(m))
		ms.StoreMessageInfo(mi)
	}
}

func (m *SimCardChange_Added) String() string {
	return protoimpl.X.MessageStringOf(m)
}

func (*SimCardChange_Added) ProtoMessage() {}

func (m *SimCardChange_Added) ProtoReflect() preflect.Message {
	mi := &edgelq_cellular_api_proto_v1_sim_card_change_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && m != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(m))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(m)
}

func (*SimCardChange_Added) GotenMessage() {}

// Deprecated, Use SimCardChange_Added.ProtoReflect.Descriptor instead.
func (*SimCardChange_Added) Descriptor() ([]byte, []int) {
	return edgelq_cellular_api_proto_v1_sim_card_change_proto_rawDescGZIP(), []int{0, 0}
}

func (m *SimCardChange_Added) Unmarshal(b []byte) error {
	return proto.Unmarshal(b, m)
}

func (m *SimCardChange_Added) Marshal() ([]byte, error) {
	return proto.Marshal(m)
}

func (m *SimCardChange_Added) MarshalJSON() ([]byte, error) {
	return protojson.MarshalOptions{}.Marshal(m)
}

func (m *SimCardChange_Added) UnmarshalJSON(data []byte) error {
	return protojson.Unmarshal(data, m)
}

func (m *SimCardChange_Added) GetSimCard() *SimCard {
	if m != nil {
		return m.SimCard
	}
	return nil
}

func (m *SimCardChange_Added) GetViewIndex() int32 {
	if m != nil {
		return m.ViewIndex
	}
	return int32(0)
}

func (m *SimCardChange_Added) SetSimCard(fv *SimCard) {
	if m == nil {
		panic(fmt.Errorf("can't set %s on nil %s", "SimCard", "SimCardChange_Added"))
	}
	m.SimCard = fv
}

func (m *SimCardChange_Added) SetViewIndex(fv int32) {
	if m == nil {
		panic(fmt.Errorf("can't set %s on nil %s", "ViewIndex", "SimCardChange_Added"))
	}
	m.ViewIndex = fv
}

// SimCard changed some of it's fields - contains either full document or
// masked change
type SimCardChange_Modified struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
	// Name of modified SimCard
	Name *Name `protobuf:"bytes,1,opt,customtype=Name,name=name,proto3" json:"name,omitempty"`
	// New version of SimCard or masked difference, depending on mask_changes
	// instrumentation of issued [WatchSimCardRequest] or [WatchSimCardsRequest]
	SimCard *SimCard `protobuf:"bytes,2,opt,name=sim_card,json=simCard,proto3" json:"sim_card,omitempty"`
	// Used when mask_changes is set, contains field paths of modified
	// properties.
	FieldMask *SimCard_FieldMask `protobuf:"bytes,3,opt,customtype=SimCard_FieldMask,name=field_mask,json=fieldMask,proto3" json:"field_mask,omitempty"`
	// Previous view index specifies previous position of modified SimCard.
	// When modification doesn't affect sorted order, value will remain
	// identical to [view_index].
	PreviousViewIndex int32 `protobuf:"varint,4,opt,name=previous_view_index,json=previousViewIndex,proto3" json:"previous_view_index,omitempty"`
	// Integer specifying SimCard new index in resulting query view.
	ViewIndex int32 `protobuf:"varint,5,opt,name=view_index,json=viewIndex,proto3" json:"view_index,omitempty"`
}

func (m *SimCardChange_Modified) Reset() {
	*m = SimCardChange_Modified{}
	if protoimpl.UnsafeEnabled {
		mi := &edgelq_cellular_api_proto_v1_sim_card_change_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(m))
		ms.StoreMessageInfo(mi)
	}
}

func (m *SimCardChange_Modified) String() string {
	return protoimpl.X.MessageStringOf(m)
}

func (*SimCardChange_Modified) ProtoMessage() {}

func (m *SimCardChange_Modified) ProtoReflect() preflect.Message {
	mi := &edgelq_cellular_api_proto_v1_sim_card_change_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && m != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(m))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(m)
}

func (*SimCardChange_Modified) GotenMessage() {}

// Deprecated, Use SimCardChange_Modified.ProtoReflect.Descriptor instead.
func (*SimCardChange_Modified) Descriptor() ([]byte, []int) {
	return edgelq_cellular_api_proto_v1_sim_card_change_proto_rawDescGZIP(), []int{0, 1}
}

func (m *SimCardChange_Modified) Unmarshal(b []byte) error {
	return proto.Unmarshal(b, m)
}

func (m *SimCardChange_Modified) Marshal() ([]byte, error) {
	return proto.Marshal(m)
}

func (m *SimCardChange_Modified) MarshalJSON() ([]byte, error) {
	return protojson.MarshalOptions{}.Marshal(m)
}

func (m *SimCardChange_Modified) UnmarshalJSON(data []byte) error {
	return protojson.Unmarshal(data, m)
}

func (m *SimCardChange_Modified) GetName() *Name {
	if m != nil {
		return m.Name
	}
	return nil
}

func (m *SimCardChange_Modified) GetSimCard() *SimCard {
	if m != nil {
		return m.SimCard
	}
	return nil
}

func (m *SimCardChange_Modified) GetFieldMask() *SimCard_FieldMask {
	if m != nil {
		return m.FieldMask
	}
	return nil
}

func (m *SimCardChange_Modified) GetPreviousViewIndex() int32 {
	if m != nil {
		return m.PreviousViewIndex
	}
	return int32(0)
}

func (m *SimCardChange_Modified) GetViewIndex() int32 {
	if m != nil {
		return m.ViewIndex
	}
	return int32(0)
}

func (m *SimCardChange_Modified) SetName(fv *Name) {
	if m == nil {
		panic(fmt.Errorf("can't set %s on nil %s", "Name", "SimCardChange_Modified"))
	}
	m.Name = fv
}

func (m *SimCardChange_Modified) SetSimCard(fv *SimCard) {
	if m == nil {
		panic(fmt.Errorf("can't set %s on nil %s", "SimCard", "SimCardChange_Modified"))
	}
	m.SimCard = fv
}

func (m *SimCardChange_Modified) SetFieldMask(fv *SimCard_FieldMask) {
	if m == nil {
		panic(fmt.Errorf("can't set %s on nil %s", "FieldMask", "SimCardChange_Modified"))
	}
	m.FieldMask = fv
}

func (m *SimCardChange_Modified) SetPreviousViewIndex(fv int32) {
	if m == nil {
		panic(fmt.Errorf("can't set %s on nil %s", "PreviousViewIndex", "SimCardChange_Modified"))
	}
	m.PreviousViewIndex = fv
}

func (m *SimCardChange_Modified) SetViewIndex(fv int32) {
	if m == nil {
		panic(fmt.Errorf("can't set %s on nil %s", "ViewIndex", "SimCardChange_Modified"))
	}
	m.ViewIndex = fv
}

// SimCard has been added or modified in a query view. Version used for
// stateless watching
type SimCardChange_Current struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
	SimCard       *SimCard `protobuf:"bytes,1,opt,name=sim_card,json=simCard,proto3" json:"sim_card,omitempty"`
}

func (m *SimCardChange_Current) Reset() {
	*m = SimCardChange_Current{}
	if protoimpl.UnsafeEnabled {
		mi := &edgelq_cellular_api_proto_v1_sim_card_change_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(m))
		ms.StoreMessageInfo(mi)
	}
}

func (m *SimCardChange_Current) String() string {
	return protoimpl.X.MessageStringOf(m)
}

func (*SimCardChange_Current) ProtoMessage() {}

func (m *SimCardChange_Current) ProtoReflect() preflect.Message {
	mi := &edgelq_cellular_api_proto_v1_sim_card_change_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && m != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(m))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(m)
}

func (*SimCardChange_Current) GotenMessage() {}

// Deprecated, Use SimCardChange_Current.ProtoReflect.Descriptor instead.
func (*SimCardChange_Current) Descriptor() ([]byte, []int) {
	return edgelq_cellular_api_proto_v1_sim_card_change_proto_rawDescGZIP(), []int{0, 2}
}

func (m *SimCardChange_Current) Unmarshal(b []byte) error {
	return proto.Unmarshal(b, m)
}

func (m *SimCardChange_Current) Marshal() ([]byte, error) {
	return proto.Marshal(m)
}

func (m *SimCardChange_Current) MarshalJSON() ([]byte, error) {
	return protojson.MarshalOptions{}.Marshal(m)
}

func (m *SimCardChange_Current) UnmarshalJSON(data []byte) error {
	return protojson.Unmarshal(data, m)
}

func (m *SimCardChange_Current) GetSimCard() *SimCard {
	if m != nil {
		return m.SimCard
	}
	return nil
}

func (m *SimCardChange_Current) SetSimCard(fv *SimCard) {
	if m == nil {
		panic(fmt.Errorf("can't set %s on nil %s", "SimCard", "SimCardChange_Current"))
	}
	m.SimCard = fv
}

// Removed is returned when SimCard is deleted or leaves Query view
type SimCardChange_Removed struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
	Name          *Name `protobuf:"bytes,1,opt,customtype=Name,name=name,proto3" json:"name,omitempty"`
	// Integer specifying removed SimCard index. Not populated in stateless
	// watch type.
	ViewIndex int32 `protobuf:"varint,2,opt,name=view_index,json=viewIndex,proto3" json:"view_index,omitempty"`
}

func (m *SimCardChange_Removed) Reset() {
	*m = SimCardChange_Removed{}
	if protoimpl.UnsafeEnabled {
		mi := &edgelq_cellular_api_proto_v1_sim_card_change_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(m))
		ms.StoreMessageInfo(mi)
	}
}

func (m *SimCardChange_Removed) String() string {
	return protoimpl.X.MessageStringOf(m)
}

func (*SimCardChange_Removed) ProtoMessage() {}

func (m *SimCardChange_Removed) ProtoReflect() preflect.Message {
	mi := &edgelq_cellular_api_proto_v1_sim_card_change_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && m != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(m))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(m)
}

func (*SimCardChange_Removed) GotenMessage() {}

// Deprecated, Use SimCardChange_Removed.ProtoReflect.Descriptor instead.
func (*SimCardChange_Removed) Descriptor() ([]byte, []int) {
	return edgelq_cellular_api_proto_v1_sim_card_change_proto_rawDescGZIP(), []int{0, 3}
}

func (m *SimCardChange_Removed) Unmarshal(b []byte) error {
	return proto.Unmarshal(b, m)
}

func (m *SimCardChange_Removed) Marshal() ([]byte, error) {
	return proto.Marshal(m)
}

func (m *SimCardChange_Removed) MarshalJSON() ([]byte, error) {
	return protojson.MarshalOptions{}.Marshal(m)
}

func (m *SimCardChange_Removed) UnmarshalJSON(data []byte) error {
	return protojson.Unmarshal(data, m)
}

func (m *SimCardChange_Removed) GetName() *Name {
	if m != nil {
		return m.Name
	}
	return nil
}

func (m *SimCardChange_Removed) GetViewIndex() int32 {
	if m != nil {
		return m.ViewIndex
	}
	return int32(0)
}

func (m *SimCardChange_Removed) SetName(fv *Name) {
	if m == nil {
		panic(fmt.Errorf("can't set %s on nil %s", "Name", "SimCardChange_Removed"))
	}
	m.Name = fv
}

func (m *SimCardChange_Removed) SetViewIndex(fv int32) {
	if m == nil {
		panic(fmt.Errorf("can't set %s on nil %s", "ViewIndex", "SimCardChange_Removed"))
	}
	m.ViewIndex = fv
}

var edgelq_cellular_api_proto_v1_sim_card_change_proto preflect.FileDescriptor

var edgelq_cellular_api_proto_v1_sim_card_change_proto_rawDesc = []byte{
	0x0a, 0x32, 0x65, 0x64, 0x67, 0x65, 0x6c, 0x71, 0x2f, 0x63, 0x65, 0x6c, 0x6c, 0x75, 0x6c, 0x61,
	0x72, 0x2d, 0x61, 0x70, 0x69, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x76, 0x31, 0x2f, 0x73,
	0x69, 0x6d, 0x5f, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x13, 0x6e, 0x74, 0x74, 0x2e, 0x63, 0x65, 0x6c, 0x6c, 0x75, 0x6c,
	0x61, 0x72, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x1a, 0x19, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x20, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x6d, 0x61, 0x73, 0x6b,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1d, 0x67, 0x6f, 0x74, 0x65, 0x6e, 0x2f, 0x61, 0x6e,
	0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x67, 0x6f, 0x74, 0x65, 0x6e, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x20, 0x67, 0x6f, 0x74, 0x65, 0x6e, 0x2f, 0x61, 0x6e, 0x6e,
	0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2b, 0x65, 0x64, 0x67, 0x65, 0x6c, 0x71, 0x2f,
	0x63, 0x65, 0x6c, 0x6c, 0x75, 0x6c, 0x61, 0x72, 0x2d, 0x61, 0x70, 0x69, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x69, 0x6d, 0x5f, 0x63, 0x61, 0x72, 0x64, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0xc4, 0x06, 0x0a, 0x0d, 0x53, 0x69, 0x6d, 0x43, 0x61, 0x72, 0x64,
	0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x40, 0x0a, 0x05, 0x61, 0x64, 0x64, 0x65, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x6e, 0x74, 0x74, 0x2e, 0x63, 0x65, 0x6c, 0x6c,
	0x75, 0x6c, 0x61, 0x72, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x69, 0x6d, 0x43,
	0x61, 0x72, 0x64, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x2e, 0x41, 0x64, 0x64, 0x65, 0x64, 0x48,
	0x00, 0x52, 0x05, 0x61, 0x64, 0x64, 0x65, 0x64, 0x12, 0x49, 0x0a, 0x08, 0x6d, 0x6f, 0x64, 0x69,
	0x66, 0x69, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x6e, 0x74, 0x74,
	0x2e, 0x63, 0x65, 0x6c, 0x6c, 0x75, 0x6c, 0x61, 0x72, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31,
	0x2e, 0x53, 0x69, 0x6d, 0x43, 0x61, 0x72, 0x64, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x2e, 0x4d,
	0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x64, 0x48, 0x00, 0x52, 0x08, 0x6d, 0x6f, 0x64, 0x69, 0x66,
	0x69, 0x65, 0x64, 0x12, 0x46, 0x0a, 0x07, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x6e, 0x74, 0x74, 0x2e, 0x63, 0x65, 0x6c, 0x6c, 0x75,
	0x6c, 0x61, 0x72, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x69, 0x6d, 0x43, 0x61,
	0x72, 0x64, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x2e, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74,
	0x48, 0x00, 0x52, 0x07, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x12, 0x46, 0x0a, 0x07, 0x72,
	0x65, 0x6d, 0x6f, 0x76, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x6e,
	0x74, 0x74, 0x2e, 0x63, 0x65, 0x6c, 0x6c, 0x75, 0x6c, 0x61, 0x72, 0x5f, 0x61, 0x70, 0x69, 0x2e,
	0x76, 0x31, 0x2e, 0x53, 0x69, 0x6d, 0x43, 0x61, 0x72, 0x64, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65,
	0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x64, 0x48, 0x00, 0x52, 0x07, 0x72, 0x65, 0x6d, 0x6f,
	0x76, 0x65, 0x64, 0x1a, 0x5f, 0x0a, 0x05, 0x41, 0x64, 0x64, 0x65, 0x64, 0x12, 0x37, 0x0a, 0x08,
	0x73, 0x69, 0x6d, 0x5f, 0x63, 0x61, 0x72, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c,
	0x2e, 0x6e, 0x74, 0x74, 0x2e, 0x63, 0x65, 0x6c, 0x6c, 0x75, 0x6c, 0x61, 0x72, 0x5f, 0x61, 0x70,
	0x69, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x69, 0x6d, 0x43, 0x61, 0x72, 0x64, 0x52, 0x07, 0x73, 0x69,
	0x6d, 0x43, 0x61, 0x72, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x76, 0x69, 0x65, 0x77, 0x5f, 0x69, 0x6e,
	0x64, 0x65, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x76, 0x69, 0x65, 0x77, 0x49,
	0x6e, 0x64, 0x65, 0x78, 0x1a, 0x83, 0x02, 0x0a, 0x08, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65,
	0x64, 0x12, 0x23, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x0f, 0xb2, 0xda, 0x21, 0x0b, 0x0a, 0x09, 0x0a, 0x07, 0x53, 0x69, 0x6d, 0x43, 0x61, 0x72, 0x64,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x37, 0x0a, 0x08, 0x73, 0x69, 0x6d, 0x5f, 0x63, 0x61,
	0x72, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x6e, 0x74, 0x74, 0x2e, 0x63,
	0x65, 0x6c, 0x6c, 0x75, 0x6c, 0x61, 0x72, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x53,
	0x69, 0x6d, 0x43, 0x61, 0x72, 0x64, 0x52, 0x07, 0x73, 0x69, 0x6d, 0x43, 0x61, 0x72, 0x64, 0x12,
	0x4a, 0x0a, 0x0a, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x6d, 0x61, 0x73, 0x6b, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4d, 0x61, 0x73, 0x6b, 0x42,
	0x0f, 0xb2, 0xda, 0x21, 0x0b, 0x32, 0x09, 0x0a, 0x07, 0x53, 0x69, 0x6d, 0x43, 0x61, 0x72, 0x64,
	0x52, 0x09, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x4d, 0x61, 0x73, 0x6b, 0x12, 0x2e, 0x0a, 0x13, 0x70,
	0x72, 0x65, 0x76, 0x69, 0x6f, 0x75, 0x73, 0x5f, 0x76, 0x69, 0x65, 0x77, 0x5f, 0x69, 0x6e, 0x64,
	0x65, 0x78, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x11, 0x70, 0x72, 0x65, 0x76, 0x69, 0x6f,
	0x75, 0x73, 0x56, 0x69, 0x65, 0x77, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x1d, 0x0a, 0x0a, 0x76,
	0x69, 0x65, 0x77, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x09, 0x76, 0x69, 0x65, 0x77, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x1a, 0x42, 0x0a, 0x07, 0x43, 0x75,
	0x72, 0x72, 0x65, 0x6e, 0x74, 0x12, 0x37, 0x0a, 0x08, 0x73, 0x69, 0x6d, 0x5f, 0x63, 0x61, 0x72,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x6e, 0x74, 0x74, 0x2e, 0x63, 0x65,
	0x6c, 0x6c, 0x75, 0x6c, 0x61, 0x72, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x69,
	0x6d, 0x43, 0x61, 0x72, 0x64, 0x52, 0x07, 0x73, 0x69, 0x6d, 0x43, 0x61, 0x72, 0x64, 0x1a, 0x4d,
	0x0a, 0x07, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x64, 0x12, 0x23, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0f, 0xb2, 0xda, 0x21, 0x0b, 0x0a, 0x09, 0x0a,
	0x07, 0x53, 0x69, 0x6d, 0x43, 0x61, 0x72, 0x64, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1d,
	0x0a, 0x0a, 0x76, 0x69, 0x65, 0x77, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x09, 0x76, 0x69, 0x65, 0x77, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x3a, 0x0d, 0x9a,
	0xd9, 0x21, 0x09, 0x0a, 0x07, 0x53, 0x69, 0x6d, 0x43, 0x61, 0x72, 0x64, 0x42, 0x0d, 0x0a, 0x0b,
	0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x42, 0x7e, 0xe8, 0xde, 0x21,
	0x00, 0x0a, 0x1a, 0x63, 0x6f, 0x6d, 0x2e, 0x6e, 0x74, 0x74, 0x2e, 0x63, 0x65, 0x6c, 0x6c, 0x75,
	0x6c, 0x61, 0x72, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x62, 0x2e, 0x76, 0x31, 0x42, 0x12, 0x53,
	0x69, 0x6d, 0x43, 0x61, 0x72, 0x64, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x50, 0x72, 0x6f, 0x74,
	0x6f, 0x50, 0x00, 0x5a, 0x46, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f,
	0x63, 0x6c, 0x6f, 0x75, 0x64, 0x77, 0x61, 0x6e, 0x2f, 0x65, 0x64, 0x67, 0x65, 0x6c, 0x71, 0x2f,
	0x63, 0x65, 0x6c, 0x6c, 0x75, 0x6c, 0x61, 0x72, 0x2d, 0x61, 0x70, 0x69, 0x2f, 0x72, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x69, 0x6d, 0x5f, 0x63, 0x61,
	0x72, 0x64, 0x3b, 0x73, 0x69, 0x6d, 0x5f, 0x63, 0x61, 0x72, 0x64, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	edgelq_cellular_api_proto_v1_sim_card_change_proto_rawDescOnce sync.Once
	edgelq_cellular_api_proto_v1_sim_card_change_proto_rawDescData = edgelq_cellular_api_proto_v1_sim_card_change_proto_rawDesc
)

func edgelq_cellular_api_proto_v1_sim_card_change_proto_rawDescGZIP() []byte {
	edgelq_cellular_api_proto_v1_sim_card_change_proto_rawDescOnce.Do(func() {
		edgelq_cellular_api_proto_v1_sim_card_change_proto_rawDescData = protoimpl.X.CompressGZIP(edgelq_cellular_api_proto_v1_sim_card_change_proto_rawDescData)
	})
	return edgelq_cellular_api_proto_v1_sim_card_change_proto_rawDescData
}

var edgelq_cellular_api_proto_v1_sim_card_change_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var edgelq_cellular_api_proto_v1_sim_card_change_proto_goTypes = []interface{}{
	(*SimCardChange)(nil),          // 0: ntt.cellular_api.v1.SimCardChange
	(*SimCardChange_Added)(nil),    // 1: ntt.cellular_api.v1.SimCardChange.Added
	(*SimCardChange_Modified)(nil), // 2: ntt.cellular_api.v1.SimCardChange.Modified
	(*SimCardChange_Current)(nil),  // 3: ntt.cellular_api.v1.SimCardChange.Current
	(*SimCardChange_Removed)(nil),  // 4: ntt.cellular_api.v1.SimCardChange.Removed
	(*SimCard)(nil),                // 5: ntt.cellular_api.v1.SimCard
	(*SimCard_FieldMask)(nil),      // 6: ntt.cellular_api.v1.SimCard_FieldMask
}
var edgelq_cellular_api_proto_v1_sim_card_change_proto_depIdxs = []int32{
	1, // 0: ntt.cellular_api.v1.SimCardChange.added:type_name -> ntt.cellular_api.v1.SimCardChange.Added
	2, // 1: ntt.cellular_api.v1.SimCardChange.modified:type_name -> ntt.cellular_api.v1.SimCardChange.Modified
	3, // 2: ntt.cellular_api.v1.SimCardChange.current:type_name -> ntt.cellular_api.v1.SimCardChange.Current
	4, // 3: ntt.cellular_api.v1.SimCardChange.removed:type_name -> ntt.cellular_api.v1.SimCardChange.Removed
	5, // 4: ntt.cellular_api.v1.SimCardChange.Added.sim_card:type_name -> ntt.cellular_api.v1.SimCard
	5, // 5: ntt.cellular_api.v1.SimCardChange.Modified.sim_card:type_name -> ntt.cellular_api.v1.SimCard
	6, // 6: ntt.cellular_api.v1.SimCardChange.Modified.field_mask:type_name -> ntt.cellular_api.v1.SimCard_FieldMask
	5, // 7: ntt.cellular_api.v1.SimCardChange.Current.sim_card:type_name -> ntt.cellular_api.v1.SimCard
	8, // [8:8] is the sub-list for method output_type
	8, // [8:8] is the sub-list for method input_type
	8, // [8:8] is the sub-list for extension type_name
	8, // [8:8] is the sub-list for extension extendee
	0, // [0:8] is the sub-list for field type_name
}

func init() { edgelq_cellular_api_proto_v1_sim_card_change_proto_init() }
func edgelq_cellular_api_proto_v1_sim_card_change_proto_init() {
	if edgelq_cellular_api_proto_v1_sim_card_change_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {

		edgelq_cellular_api_proto_v1_sim_card_change_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SimCardChange); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		edgelq_cellular_api_proto_v1_sim_card_change_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SimCardChange_Added); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		edgelq_cellular_api_proto_v1_sim_card_change_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SimCardChange_Modified); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		edgelq_cellular_api_proto_v1_sim_card_change_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SimCardChange_Current); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		edgelq_cellular_api_proto_v1_sim_card_change_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SimCardChange_Removed); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}

	edgelq_cellular_api_proto_v1_sim_card_change_proto_msgTypes[0].OneofWrappers = []interface{}{
		(*SimCardChange_Added_)(nil),
		(*SimCardChange_Modified_)(nil),
		(*SimCardChange_Current_)(nil),
		(*SimCardChange_Removed_)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: edgelq_cellular_api_proto_v1_sim_card_change_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           edgelq_cellular_api_proto_v1_sim_card_change_proto_goTypes,
		DependencyIndexes: edgelq_cellular_api_proto_v1_sim_card_change_proto_depIdxs,
		MessageInfos:      edgelq_cellular_api_proto_v1_sim_card_change_proto_msgTypes,
	}.Build()
	edgelq_cellular_api_proto_v1_sim_card_change_proto = out.File
	edgelq_cellular_api_proto_v1_sim_card_change_proto_rawDesc = nil
	edgelq_cellular_api_proto_v1_sim_card_change_proto_goTypes = nil
	edgelq_cellular_api_proto_v1_sim_card_change_proto_depIdxs = nil
}
