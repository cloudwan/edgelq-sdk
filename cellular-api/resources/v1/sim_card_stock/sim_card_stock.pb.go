// Code generated by protoc-gen-goten-go
// File: edgelq/cellular-api/proto/v1/sim_card_stock.proto
// DO NOT EDIT!!!

package sim_card_stock

import (
	"fmt"
	"reflect"
	"sync"

	"google.golang.org/protobuf/encoding/protojson"
	"google.golang.org/protobuf/proto"
	preflect "google.golang.org/protobuf/reflect/protoreflect"
	"google.golang.org/protobuf/runtime/protoimpl"
)

// proto imports
import (
	contract "github.com/cloudwan/edgelq-sdk/cellular-api/resources/v1/contract"
	sim_card "github.com/cloudwan/edgelq-sdk/cellular-api/resources/v1/sim_card"
	meta "github.com/cloudwan/goten-sdk/types/meta"
)

// Reference imports to suppress errors if they are not otherwise used.
var (
	_ = fmt.Errorf
	_ = reflect.Method{}
	_ = sync.Once{}

	_ = protojson.MarshalOptions{}
	_ = proto.MarshalOptions{}
	_ = preflect.Value{}
	_ = protoimpl.DescBuilder{}
)

// make sure we're using proto imports
var (
	_ = &contract.Contract{}
	_ = &sim_card.SimCard{}
	_ = &meta.Meta{}
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SimCardStock_State int32

const (
	SimCardStock_STATE_UNSPECIFIED SimCardStock_State = 0
	SimCardStock_AVAILABLE         SimCardStock_State = 1
	SimCardStock_IN_USE            SimCardStock_State = 2
)

var (
	SimCardStock_State_name = map[int32]string{
		0: "STATE_UNSPECIFIED",
		1: "AVAILABLE",
		2: "IN_USE",
	}

	SimCardStock_State_value = map[string]int32{
		"STATE_UNSPECIFIED": 0,
		"AVAILABLE":         1,
		"IN_USE":            2,
	}
)

func (x SimCardStock_State) Enum() *SimCardStock_State {
	p := new(SimCardStock_State)
	*p = x
	return p
}

func (x SimCardStock_State) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), preflect.EnumNumber(x))
}

func (SimCardStock_State) Descriptor() preflect.EnumDescriptor {
	return edgelq_cellular_api_proto_v1_sim_card_stock_proto_enumTypes[0].Descriptor()
}

func (SimCardStock_State) Type() preflect.EnumType {
	return &edgelq_cellular_api_proto_v1_sim_card_stock_proto_enumTypes[0]
}

func (x SimCardStock_State) Number() preflect.EnumNumber {
	return preflect.EnumNumber(x)
}

// Deprecated, Use SimCardStock_State.ProtoReflect.Descriptor instead.
func (SimCardStock_State) EnumDescriptor() ([]byte, []int) {
	return edgelq_cellular_api_proto_v1_sim_card_stock_proto_rawDescGZIP(), []int{0, 0}
}

// SimCardStock Resource
type SimCardStock struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
	// Name of SimCardStock
	// When creating a new instance, this field is optional and if not provided,
	// it will be generated automatically. Last ID segment must conform to the
	// following regex: \\d{19}
	Name *Name `protobuf:"bytes,1,opt,customtype=Name,name=name,proto3" json:"name,omitempty" firestore:"name"`
	// Metadata is an object with information like create, update and delete time
	// (for async deleted resources), has user labels/annotations, sharding
	// information, multi-region syncing information and may have non-schema
	// owners (useful for taking ownership of resources belonging to lower level
	// services by higher ones).
	Metadata *meta.Meta          `protobuf:"bytes,2,opt,name=metadata,proto3" json:"metadata,omitempty" firestore:"metadata"`
	Contract *contract.Reference `protobuf:"bytes,3,opt,customtype=Reference,name=contract,proto3" json:"contract,omitempty" firestore:"contract"`
	State    SimCardStock_State  `protobuf:"varint,4,opt,name=state,proto3,enum=ntt.cellular_api.v1.SimCardStock_State" json:"state,omitempty" firestore:"state"`
	SimCard  *sim_card.Reference `protobuf:"bytes,5,opt,customtype=Reference,name=sim_card,json=simCard,proto3" json:"sim_card,omitempty" firestore:"simCard"`
}

func (m *SimCardStock) Reset() {
	*m = SimCardStock{}
	if protoimpl.UnsafeEnabled {
		mi := &edgelq_cellular_api_proto_v1_sim_card_stock_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(m))
		ms.StoreMessageInfo(mi)
	}
}

func (m *SimCardStock) String() string {
	return protoimpl.X.MessageStringOf(m)
}

func (*SimCardStock) ProtoMessage() {}

func (m *SimCardStock) ProtoReflect() preflect.Message {
	mi := &edgelq_cellular_api_proto_v1_sim_card_stock_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && m != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(m))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(m)
}

func (*SimCardStock) GotenMessage() {}

// Deprecated, Use SimCardStock.ProtoReflect.Descriptor instead.
func (*SimCardStock) Descriptor() ([]byte, []int) {
	return edgelq_cellular_api_proto_v1_sim_card_stock_proto_rawDescGZIP(), []int{0}
}

func (m *SimCardStock) Unmarshal(b []byte) error {
	return proto.Unmarshal(b, m)
}

func (m *SimCardStock) Marshal() ([]byte, error) {
	return proto.Marshal(m)
}

func (m *SimCardStock) MarshalJSON() ([]byte, error) {
	return protojson.MarshalOptions{}.Marshal(m)
}

func (m *SimCardStock) UnmarshalJSON(data []byte) error {
	return protojson.Unmarshal(data, m)
}

func (m *SimCardStock) GetName() *Name {
	if m != nil {
		return m.Name
	}
	return nil
}

func (m *SimCardStock) GetMetadata() *meta.Meta {
	if m != nil {
		return m.Metadata
	}
	return nil
}

func (m *SimCardStock) GetContract() *contract.Reference {
	if m != nil {
		return m.Contract
	}
	return nil
}

func (m *SimCardStock) GetState() SimCardStock_State {
	if m != nil {
		return m.State
	}
	return SimCardStock_STATE_UNSPECIFIED
}

func (m *SimCardStock) GetSimCard() *sim_card.Reference {
	if m != nil {
		return m.SimCard
	}
	return nil
}

func (m *SimCardStock) SetName(fv *Name) {
	if m == nil {
		panic(fmt.Errorf("can't set %s on nil %s", "Name", "SimCardStock"))
	}
	m.Name = fv
}

func (m *SimCardStock) SetMetadata(fv *meta.Meta) {
	if m == nil {
		panic(fmt.Errorf("can't set %s on nil %s", "Metadata", "SimCardStock"))
	}
	m.Metadata = fv
}

func (m *SimCardStock) SetContract(fv *contract.Reference) {
	if m == nil {
		panic(fmt.Errorf("can't set %s on nil %s", "Contract", "SimCardStock"))
	}
	m.Contract = fv
}

func (m *SimCardStock) SetState(fv SimCardStock_State) {
	if m == nil {
		panic(fmt.Errorf("can't set %s on nil %s", "State", "SimCardStock"))
	}
	m.State = fv
}

func (m *SimCardStock) SetSimCard(fv *sim_card.Reference) {
	if m == nil {
		panic(fmt.Errorf("can't set %s on nil %s", "SimCard", "SimCardStock"))
	}
	m.SimCard = fv
}

var edgelq_cellular_api_proto_v1_sim_card_stock_proto preflect.FileDescriptor

var edgelq_cellular_api_proto_v1_sim_card_stock_proto_rawDesc = []byte{
	0x0a, 0x31, 0x65, 0x64, 0x67, 0x65, 0x6c, 0x71, 0x2f, 0x63, 0x65, 0x6c, 0x6c, 0x75, 0x6c, 0x61,
	0x72, 0x2d, 0x61, 0x70, 0x69, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x76, 0x31, 0x2f, 0x73,
	0x69, 0x6d, 0x5f, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x13, 0x6e, 0x74, 0x74, 0x2e, 0x63, 0x65, 0x6c, 0x6c, 0x75, 0x6c, 0x61,
	0x72, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x1a, 0x19, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2f, 0x61, 0x70, 0x69, 0x2f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x20, 0x67, 0x6f, 0x74, 0x65, 0x6e, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1d, 0x67, 0x6f, 0x74, 0x65, 0x6e, 0x2f, 0x61, 0x6e, 0x6e,
	0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x67, 0x6f, 0x74, 0x65, 0x6e, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x20, 0x67, 0x6f, 0x74, 0x65, 0x6e, 0x2f, 0x61, 0x6e, 0x6e, 0x6f,
	0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1d, 0x67, 0x6f, 0x74, 0x65, 0x6e, 0x2f, 0x61, 0x6e,
	0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x74, 0x65, 0x6e, 0x2f, 0x61, 0x6e, 0x6e,
	0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x24, 0x67, 0x6f, 0x74, 0x65, 0x6e, 0x2f, 0x61, 0x6e,
	0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x5f,
	0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x16, 0x67, 0x6f,
	0x74, 0x65, 0x6e, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2f, 0x6d, 0x65, 0x74, 0x61, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0xc7, 0x03, 0x0a, 0x0c, 0x53, 0x69, 0x6d, 0x43, 0x61, 0x72, 0x64,
	0x53, 0x74, 0x6f, 0x63, 0x6b, 0x12, 0x28, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x14, 0xb2, 0xda, 0x21, 0x10, 0x0a, 0x0e, 0x0a, 0x0c, 0x53, 0x69, 0x6d,
	0x43, 0x61, 0x72, 0x64, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x2d, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x11, 0x2e, 0x67, 0x6f, 0x74, 0x65, 0x6e, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e,
	0x4d, 0x65, 0x74, 0x61, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x2e,
	0x0a, 0x08, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x12, 0xb2, 0xda, 0x21, 0x0e, 0x12, 0x0c, 0x0a, 0x08, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61,
	0x63, 0x74, 0x10, 0x06, 0x52, 0x08, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x12, 0x3d,
	0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x27, 0x2e,
	0x6e, 0x74, 0x74, 0x2e, 0x63, 0x65, 0x6c, 0x6c, 0x75, 0x6c, 0x61, 0x72, 0x5f, 0x61, 0x70, 0x69,
	0x2e, 0x76, 0x31, 0x2e, 0x53, 0x69, 0x6d, 0x43, 0x61, 0x72, 0x64, 0x53, 0x74, 0x6f, 0x63, 0x6b,
	0x2e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x2c, 0x0a,
	0x08, 0x73, 0x69, 0x6d, 0x5f, 0x63, 0x61, 0x72, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x11, 0xb2, 0xda, 0x21, 0x0d, 0x12, 0x0b, 0x0a, 0x07, 0x53, 0x69, 0x6d, 0x43, 0x61, 0x72, 0x64,
	0x10, 0x01, 0x52, 0x07, 0x73, 0x69, 0x6d, 0x43, 0x61, 0x72, 0x64, 0x22, 0x39, 0x0a, 0x05, 0x53,
	0x74, 0x61, 0x74, 0x65, 0x12, 0x15, 0x0a, 0x11, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x55, 0x4e,
	0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x0d, 0x0a, 0x09, 0x41,
	0x56, 0x41, 0x49, 0x4c, 0x41, 0x42, 0x4c, 0x45, 0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06, 0x49, 0x4e,
	0x5f, 0x55, 0x53, 0x45, 0x10, 0x02, 0x3a, 0x85, 0x01, 0xea, 0x41, 0x46, 0x0a, 0x24, 0x63, 0x65,
	0x6c, 0x6c, 0x75, 0x6c, 0x61, 0x72, 0x2d, 0x61, 0x70, 0x69, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x6c,
	0x71, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x53, 0x69, 0x6d, 0x43, 0x61, 0x72, 0x64, 0x53, 0x74, 0x6f,
	0x63, 0x6b, 0x12, 0x1e, 0x73, 0x69, 0x6d, 0x43, 0x61, 0x72, 0x64, 0x53, 0x74, 0x6f, 0x63, 0x6b,
	0x73, 0x2f, 0x7b, 0x73, 0x69, 0x6d, 0x5f, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x73, 0x74, 0x6f, 0x63,
	0x6b, 0x7d, 0x92, 0xd9, 0x21, 0x26, 0x0a, 0x0d, 0x73, 0x69, 0x6d, 0x43, 0x61, 0x72, 0x64, 0x53,
	0x74, 0x6f, 0x63, 0x6b, 0x73, 0x12, 0x0d, 0x73, 0x69, 0x6d, 0x43, 0x61, 0x72, 0x64, 0x53, 0x74,
	0x6f, 0x63, 0x6b, 0x73, 0x2a, 0x06, 0x5c, 0x64, 0x7b, 0x31, 0x39, 0x7d, 0xda, 0x94, 0x23, 0x08,
	0x12, 0x06, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0xe2, 0xde, 0x21, 0x02, 0x08, 0x03, 0x42, 0xc3,
	0x02, 0xe8, 0xde, 0x21, 0x01, 0xd2, 0xff, 0xd0, 0x02, 0x57, 0x0a, 0x14, 0x73, 0x69, 0x6d, 0x5f,
	0x63, 0x61, 0x72, 0x64, 0x5f, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x5f, 0x73, 0x74, 0x6f, 0x72, 0x65,
	0x12, 0x3f, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x6c, 0x6f,
	0x75, 0x64, 0x77, 0x61, 0x6e, 0x2f, 0x65, 0x64, 0x67, 0x65, 0x6c, 0x71, 0x2f, 0x63, 0x65, 0x6c,
	0x6c, 0x75, 0x6c, 0x61, 0x72, 0x2d, 0x61, 0x70, 0x69, 0x2f, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2f,
	0x76, 0x31, 0x2f, 0x73, 0x69, 0x6d, 0x5f, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x73, 0x74, 0x6f, 0x63,
	0x6b, 0xa2, 0x80, 0xd1, 0x02, 0x59, 0x0a, 0x15, 0x73, 0x69, 0x6d, 0x5f, 0x63, 0x61, 0x72, 0x64,
	0x5f, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x5f, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x40, 0x67,
	0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x77,
	0x61, 0x6e, 0x2f, 0x65, 0x64, 0x67, 0x65, 0x6c, 0x71, 0x2f, 0x63, 0x65, 0x6c, 0x6c, 0x75, 0x6c,
	0x61, 0x72, 0x2d, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x2f, 0x76, 0x31,
	0x2f, 0x73, 0x69, 0x6d, 0x5f, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x0a,
	0x1a, 0x63, 0x6f, 0x6d, 0x2e, 0x6e, 0x74, 0x74, 0x2e, 0x63, 0x65, 0x6c, 0x6c, 0x75, 0x6c, 0x61,
	0x72, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x62, 0x2e, 0x76, 0x31, 0x42, 0x11, 0x53, 0x69, 0x6d,
	0x43, 0x61, 0x72, 0x64, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01,
	0x5a, 0x52, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x6c, 0x6f,
	0x75, 0x64, 0x77, 0x61, 0x6e, 0x2f, 0x65, 0x64, 0x67, 0x65, 0x6c, 0x71, 0x2f, 0x63, 0x65, 0x6c,
	0x6c, 0x75, 0x6c, 0x61, 0x72, 0x2d, 0x61, 0x70, 0x69, 0x2f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x73, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x69, 0x6d, 0x5f, 0x63, 0x61, 0x72, 0x64, 0x5f,
	0x73, 0x74, 0x6f, 0x63, 0x6b, 0x3b, 0x73, 0x69, 0x6d, 0x5f, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x73,
	0x74, 0x6f, 0x63, 0x6b, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	edgelq_cellular_api_proto_v1_sim_card_stock_proto_rawDescOnce sync.Once
	edgelq_cellular_api_proto_v1_sim_card_stock_proto_rawDescData = edgelq_cellular_api_proto_v1_sim_card_stock_proto_rawDesc
)

func edgelq_cellular_api_proto_v1_sim_card_stock_proto_rawDescGZIP() []byte {
	edgelq_cellular_api_proto_v1_sim_card_stock_proto_rawDescOnce.Do(func() {
		edgelq_cellular_api_proto_v1_sim_card_stock_proto_rawDescData = protoimpl.X.CompressGZIP(edgelq_cellular_api_proto_v1_sim_card_stock_proto_rawDescData)
	})
	return edgelq_cellular_api_proto_v1_sim_card_stock_proto_rawDescData
}

var edgelq_cellular_api_proto_v1_sim_card_stock_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var edgelq_cellular_api_proto_v1_sim_card_stock_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var edgelq_cellular_api_proto_v1_sim_card_stock_proto_goTypes = []interface{}{
	(SimCardStock_State)(0), // 0: ntt.cellular_api.v1.SimCardStock_State
	(*SimCardStock)(nil),    // 1: ntt.cellular_api.v1.SimCardStock
	(*meta.Meta)(nil),       // 2: goten.types.Meta
}
var edgelq_cellular_api_proto_v1_sim_card_stock_proto_depIdxs = []int32{
	2, // 0: ntt.cellular_api.v1.SimCardStock.metadata:type_name -> goten.types.Meta
	0, // 1: ntt.cellular_api.v1.SimCardStock.state:type_name -> ntt.cellular_api.v1.SimCardStock_State
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { edgelq_cellular_api_proto_v1_sim_card_stock_proto_init() }
func edgelq_cellular_api_proto_v1_sim_card_stock_proto_init() {
	if edgelq_cellular_api_proto_v1_sim_card_stock_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {

		edgelq_cellular_api_proto_v1_sim_card_stock_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SimCardStock); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}

	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: edgelq_cellular_api_proto_v1_sim_card_stock_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           edgelq_cellular_api_proto_v1_sim_card_stock_proto_goTypes,
		DependencyIndexes: edgelq_cellular_api_proto_v1_sim_card_stock_proto_depIdxs,
		EnumInfos:         edgelq_cellular_api_proto_v1_sim_card_stock_proto_enumTypes,
		MessageInfos:      edgelq_cellular_api_proto_v1_sim_card_stock_proto_msgTypes,
	}.Build()
	edgelq_cellular_api_proto_v1_sim_card_stock_proto = out.File
	edgelq_cellular_api_proto_v1_sim_card_stock_proto_rawDesc = nil
	edgelq_cellular_api_proto_v1_sim_card_stock_proto_goTypes = nil
	edgelq_cellular_api_proto_v1_sim_card_stock_proto_depIdxs = nil
}
