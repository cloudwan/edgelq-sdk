// Code generated by protoc-gen-goten-object
// File: edgelq/alerting/proto/v1/log_condition.proto
// DO NOT EDIT!!!

package log_condition

// proto imports
import (
	rcommon "github.com/cloudwan/edgelq-sdk/alerting/resources/v1/common"
	document "github.com/cloudwan/edgelq-sdk/alerting/resources/v1/document"
	log_condition_template "github.com/cloudwan/edgelq-sdk/alerting/resources/v1/log_condition_template"
	notification_channel "github.com/cloudwan/edgelq-sdk/alerting/resources/v1/notification_channel"
	policy "github.com/cloudwan/edgelq-sdk/alerting/resources/v1/policy"
	policy_template "github.com/cloudwan/edgelq-sdk/alerting/resources/v1/policy_template"
	api "github.com/cloudwan/edgelq-sdk/common/api"
	iam_iam_common "github.com/cloudwan/edgelq-sdk/iam/resources/v1/common"
	iam_organization "github.com/cloudwan/edgelq-sdk/iam/resources/v1/organization"
	iam_project "github.com/cloudwan/edgelq-sdk/iam/resources/v1/project"
	logging_bucket "github.com/cloudwan/edgelq-sdk/logging/resources/v1/bucket"
	logging_common "github.com/cloudwan/edgelq-sdk/logging/resources/v1/common"
	logging_log "github.com/cloudwan/edgelq-sdk/logging/resources/v1/log"
	logging_log_descriptor "github.com/cloudwan/edgelq-sdk/logging/resources/v1/log_descriptor"
	monitoring_common "github.com/cloudwan/edgelq-sdk/monitoring/resources/v4/common"
	monitoring_metric_descriptor "github.com/cloudwan/edgelq-sdk/monitoring/resources/v4/metric_descriptor"
	monitoring_monitored_resource_descriptor "github.com/cloudwan/edgelq-sdk/monitoring/resources/v4/monitored_resource_descriptor"
	monitoring_project "github.com/cloudwan/edgelq-sdk/monitoring/resources/v4/project"
	monitoring_time_serie "github.com/cloudwan/edgelq-sdk/monitoring/resources/v4/time_serie"
	meta_common "github.com/cloudwan/goten-sdk/meta-service/resources/v1/common"
	meta_resource "github.com/cloudwan/goten-sdk/meta-service/resources/v1/resource"
	meta_service "github.com/cloudwan/goten-sdk/meta-service/resources/v1/service"
	meta "github.com/cloudwan/goten-sdk/types/meta"
	multi_region_policy "github.com/cloudwan/goten-sdk/types/multi_region_policy"
	anypb "google.golang.org/protobuf/types/known/anypb"
	durationpb "google.golang.org/protobuf/types/known/durationpb"
	fieldmaskpb "google.golang.org/protobuf/types/known/fieldmaskpb"
	structpb "google.golang.org/protobuf/types/known/structpb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
)

// make sure we're using proto imports
var (
	_ = &document.Document{}
	_ = &log_condition_template.LogConditionTemplate{}
	_ = &notification_channel.NotificationChannel{}
	_ = &policy.Policy{}
	_ = &policy_template.PolicyTemplate{}
	_ = &rcommon.LogCndSpec{}
	_ = api.LaunchStage(0)
	_ = &iam_iam_common.PCR{}
	_ = &iam_organization.Organization{}
	_ = &iam_project.Project{}
	_ = &logging_bucket.Bucket{}
	_ = &logging_common.LabelDescriptor{}
	_ = &logging_log.Log{}
	_ = &logging_log_descriptor.LogDescriptor{}
	_ = &monitoring_common.LabelDescriptor{}
	_ = &monitoring_metric_descriptor.MetricDescriptor{}
	_ = &monitoring_monitored_resource_descriptor.MonitoredResourceDescriptor{}
	_ = &monitoring_project.Project{}
	_ = &monitoring_time_serie.Point{}
	_ = &anypb.Any{}
	_ = &durationpb.Duration{}
	_ = &fieldmaskpb.FieldMask{}
	_ = &structpb.Struct{}
	_ = &timestamppb.Timestamp{}
	_ = &meta_common.LabelledDomain{}
	_ = &meta_resource.Resource{}
	_ = &meta_service.Service{}
	_ = &meta.Meta{}
	_ = &multi_region_policy.MultiRegionPolicy{}
)

type LogConditionFieldPathBuilder struct{}

func NewLogConditionFieldPathBuilder() LogConditionFieldPathBuilder {
	return LogConditionFieldPathBuilder{}
}
func (LogConditionFieldPathBuilder) Name() LogConditionPathSelectorName {
	return LogConditionPathSelectorName{}
}
func (LogConditionFieldPathBuilder) Metadata() LogConditionPathSelectorMetadata {
	return LogConditionPathSelectorMetadata{}
}
func (LogConditionFieldPathBuilder) DisplayName() LogConditionPathSelectorDisplayName {
	return LogConditionPathSelectorDisplayName{}
}
func (LogConditionFieldPathBuilder) Description() LogConditionPathSelectorDescription {
	return LogConditionPathSelectorDescription{}
}
func (LogConditionFieldPathBuilder) SupportingDocs() LogConditionPathSelectorSupportingDocs {
	return LogConditionPathSelectorSupportingDocs{}
}
func (LogConditionFieldPathBuilder) Spec() LogConditionPathSelectorSpec {
	return LogConditionPathSelectorSpec{}
}
func (LogConditionFieldPathBuilder) Internal() LogConditionPathSelectorInternal {
	return LogConditionPathSelectorInternal{}
}
func (LogConditionFieldPathBuilder) TemplateSource() LogConditionPathSelectorTemplateSource {
	return LogConditionPathSelectorTemplateSource{}
}

type LogConditionPathSelectorName struct{}

func (LogConditionPathSelectorName) FieldPath() *LogCondition_FieldTerminalPath {
	return &LogCondition_FieldTerminalPath{selector: LogCondition_FieldPathSelectorName}
}

func (s LogConditionPathSelectorName) WithValue(value *Name) *LogCondition_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*LogCondition_FieldTerminalPathValue)
}

func (s LogConditionPathSelectorName) WithArrayOfValues(values []*Name) *LogCondition_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*LogCondition_FieldTerminalPathArrayOfValues)
}

type LogConditionPathSelectorMetadata struct{}

func (LogConditionPathSelectorMetadata) FieldPath() *LogCondition_FieldTerminalPath {
	return &LogCondition_FieldTerminalPath{selector: LogCondition_FieldPathSelectorMetadata}
}

func (s LogConditionPathSelectorMetadata) WithValue(value *meta.Meta) *LogCondition_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*LogCondition_FieldTerminalPathValue)
}

func (s LogConditionPathSelectorMetadata) WithArrayOfValues(values []*meta.Meta) *LogCondition_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*LogCondition_FieldTerminalPathArrayOfValues)
}

func (LogConditionPathSelectorMetadata) WithSubPath(subPath meta.Meta_FieldPath) *LogCondition_FieldSubPath {
	return &LogCondition_FieldSubPath{selector: LogCondition_FieldPathSelectorMetadata, subPath: subPath}
}

func (s LogConditionPathSelectorMetadata) WithSubValue(subPathValue meta.Meta_FieldPathValue) *LogCondition_FieldSubPathValue {
	return &LogCondition_FieldSubPathValue{LogCondition_FieldPath: s.WithSubPath(subPathValue), subPathValue: subPathValue}
}

func (s LogConditionPathSelectorMetadata) WithSubArrayOfValues(subPathArrayOfValues meta.Meta_FieldPathArrayOfValues) *LogCondition_FieldSubPathArrayOfValues {
	return &LogCondition_FieldSubPathArrayOfValues{LogCondition_FieldPath: s.WithSubPath(subPathArrayOfValues), subPathArrayOfValues: subPathArrayOfValues}
}

func (s LogConditionPathSelectorMetadata) WithSubArrayItemValue(subPathArrayItemValue meta.Meta_FieldPathArrayItemValue) *LogCondition_FieldSubPathArrayItemValue {
	return &LogCondition_FieldSubPathArrayItemValue{LogCondition_FieldPath: s.WithSubPath(subPathArrayItemValue), subPathItemValue: subPathArrayItemValue}
}

func (LogConditionPathSelectorMetadata) CreateTime() LogConditionPathSelectorMetadataCreateTime {
	return LogConditionPathSelectorMetadataCreateTime{}
}

func (LogConditionPathSelectorMetadata) UpdateTime() LogConditionPathSelectorMetadataUpdateTime {
	return LogConditionPathSelectorMetadataUpdateTime{}
}

func (LogConditionPathSelectorMetadata) DeleteTime() LogConditionPathSelectorMetadataDeleteTime {
	return LogConditionPathSelectorMetadataDeleteTime{}
}

func (LogConditionPathSelectorMetadata) Uuid() LogConditionPathSelectorMetadataUuid {
	return LogConditionPathSelectorMetadataUuid{}
}

func (LogConditionPathSelectorMetadata) Tags() LogConditionPathSelectorMetadataTags {
	return LogConditionPathSelectorMetadataTags{}
}

func (LogConditionPathSelectorMetadata) Labels() LogConditionPathSelectorMetadataLabels {
	return LogConditionPathSelectorMetadataLabels{}
}

func (LogConditionPathSelectorMetadata) Annotations() LogConditionPathSelectorMetadataAnnotations {
	return LogConditionPathSelectorMetadataAnnotations{}
}

func (LogConditionPathSelectorMetadata) Generation() LogConditionPathSelectorMetadataGeneration {
	return LogConditionPathSelectorMetadataGeneration{}
}

func (LogConditionPathSelectorMetadata) ResourceVersion() LogConditionPathSelectorMetadataResourceVersion {
	return LogConditionPathSelectorMetadataResourceVersion{}
}

func (LogConditionPathSelectorMetadata) OwnerReferences() LogConditionPathSelectorMetadataOwnerReferences {
	return LogConditionPathSelectorMetadataOwnerReferences{}
}

func (LogConditionPathSelectorMetadata) Shards() LogConditionPathSelectorMetadataShards {
	return LogConditionPathSelectorMetadataShards{}
}

func (LogConditionPathSelectorMetadata) Syncing() LogConditionPathSelectorMetadataSyncing {
	return LogConditionPathSelectorMetadataSyncing{}
}

func (LogConditionPathSelectorMetadata) Lifecycle() LogConditionPathSelectorMetadataLifecycle {
	return LogConditionPathSelectorMetadataLifecycle{}
}

func (LogConditionPathSelectorMetadata) Services() LogConditionPathSelectorMetadataServices {
	return LogConditionPathSelectorMetadataServices{}
}

type LogConditionPathSelectorMetadataCreateTime struct{}

func (LogConditionPathSelectorMetadataCreateTime) FieldPath() *LogCondition_FieldSubPath {
	return &LogCondition_FieldSubPath{
		selector: LogCondition_FieldPathSelectorMetadata,
		subPath:  meta.NewMetaFieldPathBuilder().CreateTime().FieldPath(),
	}
}

func (s LogConditionPathSelectorMetadataCreateTime) WithValue(value *timestamppb.Timestamp) *LogCondition_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*LogCondition_FieldSubPathValue)
}

func (s LogConditionPathSelectorMetadataCreateTime) WithArrayOfValues(values []*timestamppb.Timestamp) *LogCondition_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*LogCondition_FieldSubPathArrayOfValues)
}

type LogConditionPathSelectorMetadataUpdateTime struct{}

func (LogConditionPathSelectorMetadataUpdateTime) FieldPath() *LogCondition_FieldSubPath {
	return &LogCondition_FieldSubPath{
		selector: LogCondition_FieldPathSelectorMetadata,
		subPath:  meta.NewMetaFieldPathBuilder().UpdateTime().FieldPath(),
	}
}

func (s LogConditionPathSelectorMetadataUpdateTime) WithValue(value *timestamppb.Timestamp) *LogCondition_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*LogCondition_FieldSubPathValue)
}

func (s LogConditionPathSelectorMetadataUpdateTime) WithArrayOfValues(values []*timestamppb.Timestamp) *LogCondition_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*LogCondition_FieldSubPathArrayOfValues)
}

type LogConditionPathSelectorMetadataDeleteTime struct{}

func (LogConditionPathSelectorMetadataDeleteTime) FieldPath() *LogCondition_FieldSubPath {
	return &LogCondition_FieldSubPath{
		selector: LogCondition_FieldPathSelectorMetadata,
		subPath:  meta.NewMetaFieldPathBuilder().DeleteTime().FieldPath(),
	}
}

func (s LogConditionPathSelectorMetadataDeleteTime) WithValue(value *timestamppb.Timestamp) *LogCondition_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*LogCondition_FieldSubPathValue)
}

func (s LogConditionPathSelectorMetadataDeleteTime) WithArrayOfValues(values []*timestamppb.Timestamp) *LogCondition_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*LogCondition_FieldSubPathArrayOfValues)
}

type LogConditionPathSelectorMetadataUuid struct{}

func (LogConditionPathSelectorMetadataUuid) FieldPath() *LogCondition_FieldSubPath {
	return &LogCondition_FieldSubPath{
		selector: LogCondition_FieldPathSelectorMetadata,
		subPath:  meta.NewMetaFieldPathBuilder().Uuid().FieldPath(),
	}
}

func (s LogConditionPathSelectorMetadataUuid) WithValue(value string) *LogCondition_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*LogCondition_FieldSubPathValue)
}

func (s LogConditionPathSelectorMetadataUuid) WithArrayOfValues(values []string) *LogCondition_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*LogCondition_FieldSubPathArrayOfValues)
}

type LogConditionPathSelectorMetadataTags struct{}

func (LogConditionPathSelectorMetadataTags) FieldPath() *LogCondition_FieldSubPath {
	return &LogCondition_FieldSubPath{
		selector: LogCondition_FieldPathSelectorMetadata,
		subPath:  meta.NewMetaFieldPathBuilder().Tags().FieldPath(),
	}
}

func (s LogConditionPathSelectorMetadataTags) WithValue(value []string) *LogCondition_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*LogCondition_FieldSubPathValue)
}

func (s LogConditionPathSelectorMetadataTags) WithArrayOfValues(values [][]string) *LogCondition_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*LogCondition_FieldSubPathArrayOfValues)
}

func (s LogConditionPathSelectorMetadataTags) WithItemValue(value string) *LogCondition_FieldSubPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*LogCondition_FieldSubPathArrayItemValue)
}

type LogConditionPathSelectorMetadataLabels struct{}

func (LogConditionPathSelectorMetadataLabels) FieldPath() *LogCondition_FieldSubPath {
	return &LogCondition_FieldSubPath{
		selector: LogCondition_FieldPathSelectorMetadata,
		subPath:  meta.NewMetaFieldPathBuilder().Labels().FieldPath(),
	}
}

func (s LogConditionPathSelectorMetadataLabels) WithValue(value map[string]string) *LogCondition_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*LogCondition_FieldSubPathValue)
}

func (s LogConditionPathSelectorMetadataLabels) WithArrayOfValues(values []map[string]string) *LogCondition_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*LogCondition_FieldSubPathArrayOfValues)
}

func (LogConditionPathSelectorMetadataLabels) WithKey(key string) LogConditionMapPathSelectorMetadataLabels {
	return LogConditionMapPathSelectorMetadataLabels{key: key}
}

type LogConditionMapPathSelectorMetadataLabels struct {
	key string
}

func (s LogConditionMapPathSelectorMetadataLabels) FieldPath() *LogCondition_FieldSubPath {
	return &LogCondition_FieldSubPath{
		selector: LogCondition_FieldPathSelectorMetadata,
		subPath:  meta.NewMetaFieldPathBuilder().Labels().WithKey(s.key).FieldPath(),
	}
}

func (s LogConditionMapPathSelectorMetadataLabels) WithValue(value string) *LogCondition_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*LogCondition_FieldSubPathValue)
}

func (s LogConditionMapPathSelectorMetadataLabels) WithArrayOfValues(values []string) *LogCondition_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*LogCondition_FieldSubPathArrayOfValues)
}

type LogConditionPathSelectorMetadataAnnotations struct{}

func (LogConditionPathSelectorMetadataAnnotations) FieldPath() *LogCondition_FieldSubPath {
	return &LogCondition_FieldSubPath{
		selector: LogCondition_FieldPathSelectorMetadata,
		subPath:  meta.NewMetaFieldPathBuilder().Annotations().FieldPath(),
	}
}

func (s LogConditionPathSelectorMetadataAnnotations) WithValue(value map[string]string) *LogCondition_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*LogCondition_FieldSubPathValue)
}

func (s LogConditionPathSelectorMetadataAnnotations) WithArrayOfValues(values []map[string]string) *LogCondition_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*LogCondition_FieldSubPathArrayOfValues)
}

func (LogConditionPathSelectorMetadataAnnotations) WithKey(key string) LogConditionMapPathSelectorMetadataAnnotations {
	return LogConditionMapPathSelectorMetadataAnnotations{key: key}
}

type LogConditionMapPathSelectorMetadataAnnotations struct {
	key string
}

func (s LogConditionMapPathSelectorMetadataAnnotations) FieldPath() *LogCondition_FieldSubPath {
	return &LogCondition_FieldSubPath{
		selector: LogCondition_FieldPathSelectorMetadata,
		subPath:  meta.NewMetaFieldPathBuilder().Annotations().WithKey(s.key).FieldPath(),
	}
}

func (s LogConditionMapPathSelectorMetadataAnnotations) WithValue(value string) *LogCondition_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*LogCondition_FieldSubPathValue)
}

func (s LogConditionMapPathSelectorMetadataAnnotations) WithArrayOfValues(values []string) *LogCondition_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*LogCondition_FieldSubPathArrayOfValues)
}

type LogConditionPathSelectorMetadataGeneration struct{}

func (LogConditionPathSelectorMetadataGeneration) FieldPath() *LogCondition_FieldSubPath {
	return &LogCondition_FieldSubPath{
		selector: LogCondition_FieldPathSelectorMetadata,
		subPath:  meta.NewMetaFieldPathBuilder().Generation().FieldPath(),
	}
}

func (s LogConditionPathSelectorMetadataGeneration) WithValue(value int64) *LogCondition_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*LogCondition_FieldSubPathValue)
}

func (s LogConditionPathSelectorMetadataGeneration) WithArrayOfValues(values []int64) *LogCondition_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*LogCondition_FieldSubPathArrayOfValues)
}

type LogConditionPathSelectorMetadataResourceVersion struct{}

func (LogConditionPathSelectorMetadataResourceVersion) FieldPath() *LogCondition_FieldSubPath {
	return &LogCondition_FieldSubPath{
		selector: LogCondition_FieldPathSelectorMetadata,
		subPath:  meta.NewMetaFieldPathBuilder().ResourceVersion().FieldPath(),
	}
}

func (s LogConditionPathSelectorMetadataResourceVersion) WithValue(value string) *LogCondition_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*LogCondition_FieldSubPathValue)
}

func (s LogConditionPathSelectorMetadataResourceVersion) WithArrayOfValues(values []string) *LogCondition_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*LogCondition_FieldSubPathArrayOfValues)
}

type LogConditionPathSelectorMetadataOwnerReferences struct{}

func (LogConditionPathSelectorMetadataOwnerReferences) FieldPath() *LogCondition_FieldSubPath {
	return &LogCondition_FieldSubPath{
		selector: LogCondition_FieldPathSelectorMetadata,
		subPath:  meta.NewMetaFieldPathBuilder().OwnerReferences().FieldPath(),
	}
}

func (s LogConditionPathSelectorMetadataOwnerReferences) WithValue(value []*meta.OwnerReference) *LogCondition_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*LogCondition_FieldSubPathValue)
}

func (s LogConditionPathSelectorMetadataOwnerReferences) WithArrayOfValues(values [][]*meta.OwnerReference) *LogCondition_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*LogCondition_FieldSubPathArrayOfValues)
}

func (s LogConditionPathSelectorMetadataOwnerReferences) WithItemValue(value *meta.OwnerReference) *LogCondition_FieldSubPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*LogCondition_FieldSubPathArrayItemValue)
}

func (LogConditionPathSelectorMetadataOwnerReferences) Kind() LogConditionPathSelectorMetadataOwnerReferencesKind {
	return LogConditionPathSelectorMetadataOwnerReferencesKind{}
}

func (LogConditionPathSelectorMetadataOwnerReferences) Version() LogConditionPathSelectorMetadataOwnerReferencesVersion {
	return LogConditionPathSelectorMetadataOwnerReferencesVersion{}
}

func (LogConditionPathSelectorMetadataOwnerReferences) Name() LogConditionPathSelectorMetadataOwnerReferencesName {
	return LogConditionPathSelectorMetadataOwnerReferencesName{}
}

func (LogConditionPathSelectorMetadataOwnerReferences) Region() LogConditionPathSelectorMetadataOwnerReferencesRegion {
	return LogConditionPathSelectorMetadataOwnerReferencesRegion{}
}

func (LogConditionPathSelectorMetadataOwnerReferences) Controller() LogConditionPathSelectorMetadataOwnerReferencesController {
	return LogConditionPathSelectorMetadataOwnerReferencesController{}
}

func (LogConditionPathSelectorMetadataOwnerReferences) RequiresOwnerReference() LogConditionPathSelectorMetadataOwnerReferencesRequiresOwnerReference {
	return LogConditionPathSelectorMetadataOwnerReferencesRequiresOwnerReference{}
}

func (LogConditionPathSelectorMetadataOwnerReferences) UnsetOnDelete() LogConditionPathSelectorMetadataOwnerReferencesUnsetOnDelete {
	return LogConditionPathSelectorMetadataOwnerReferencesUnsetOnDelete{}
}

type LogConditionPathSelectorMetadataOwnerReferencesKind struct{}

func (LogConditionPathSelectorMetadataOwnerReferencesKind) FieldPath() *LogCondition_FieldSubPath {
	return &LogCondition_FieldSubPath{
		selector: LogCondition_FieldPathSelectorMetadata,
		subPath:  meta.NewMetaFieldPathBuilder().OwnerReferences().Kind().FieldPath(),
	}
}

func (s LogConditionPathSelectorMetadataOwnerReferencesKind) WithValue(value string) *LogCondition_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*LogCondition_FieldSubPathValue)
}

func (s LogConditionPathSelectorMetadataOwnerReferencesKind) WithArrayOfValues(values []string) *LogCondition_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*LogCondition_FieldSubPathArrayOfValues)
}

type LogConditionPathSelectorMetadataOwnerReferencesVersion struct{}

func (LogConditionPathSelectorMetadataOwnerReferencesVersion) FieldPath() *LogCondition_FieldSubPath {
	return &LogCondition_FieldSubPath{
		selector: LogCondition_FieldPathSelectorMetadata,
		subPath:  meta.NewMetaFieldPathBuilder().OwnerReferences().Version().FieldPath(),
	}
}

func (s LogConditionPathSelectorMetadataOwnerReferencesVersion) WithValue(value string) *LogCondition_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*LogCondition_FieldSubPathValue)
}

func (s LogConditionPathSelectorMetadataOwnerReferencesVersion) WithArrayOfValues(values []string) *LogCondition_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*LogCondition_FieldSubPathArrayOfValues)
}

type LogConditionPathSelectorMetadataOwnerReferencesName struct{}

func (LogConditionPathSelectorMetadataOwnerReferencesName) FieldPath() *LogCondition_FieldSubPath {
	return &LogCondition_FieldSubPath{
		selector: LogCondition_FieldPathSelectorMetadata,
		subPath:  meta.NewMetaFieldPathBuilder().OwnerReferences().Name().FieldPath(),
	}
}

func (s LogConditionPathSelectorMetadataOwnerReferencesName) WithValue(value string) *LogCondition_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*LogCondition_FieldSubPathValue)
}

func (s LogConditionPathSelectorMetadataOwnerReferencesName) WithArrayOfValues(values []string) *LogCondition_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*LogCondition_FieldSubPathArrayOfValues)
}

type LogConditionPathSelectorMetadataOwnerReferencesRegion struct{}

func (LogConditionPathSelectorMetadataOwnerReferencesRegion) FieldPath() *LogCondition_FieldSubPath {
	return &LogCondition_FieldSubPath{
		selector: LogCondition_FieldPathSelectorMetadata,
		subPath:  meta.NewMetaFieldPathBuilder().OwnerReferences().Region().FieldPath(),
	}
}

func (s LogConditionPathSelectorMetadataOwnerReferencesRegion) WithValue(value string) *LogCondition_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*LogCondition_FieldSubPathValue)
}

func (s LogConditionPathSelectorMetadataOwnerReferencesRegion) WithArrayOfValues(values []string) *LogCondition_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*LogCondition_FieldSubPathArrayOfValues)
}

type LogConditionPathSelectorMetadataOwnerReferencesController struct{}

func (LogConditionPathSelectorMetadataOwnerReferencesController) FieldPath() *LogCondition_FieldSubPath {
	return &LogCondition_FieldSubPath{
		selector: LogCondition_FieldPathSelectorMetadata,
		subPath:  meta.NewMetaFieldPathBuilder().OwnerReferences().Controller().FieldPath(),
	}
}

func (s LogConditionPathSelectorMetadataOwnerReferencesController) WithValue(value bool) *LogCondition_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*LogCondition_FieldSubPathValue)
}

func (s LogConditionPathSelectorMetadataOwnerReferencesController) WithArrayOfValues(values []bool) *LogCondition_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*LogCondition_FieldSubPathArrayOfValues)
}

type LogConditionPathSelectorMetadataOwnerReferencesRequiresOwnerReference struct{}

func (LogConditionPathSelectorMetadataOwnerReferencesRequiresOwnerReference) FieldPath() *LogCondition_FieldSubPath {
	return &LogCondition_FieldSubPath{
		selector: LogCondition_FieldPathSelectorMetadata,
		subPath:  meta.NewMetaFieldPathBuilder().OwnerReferences().RequiresOwnerReference().FieldPath(),
	}
}

func (s LogConditionPathSelectorMetadataOwnerReferencesRequiresOwnerReference) WithValue(value bool) *LogCondition_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*LogCondition_FieldSubPathValue)
}

func (s LogConditionPathSelectorMetadataOwnerReferencesRequiresOwnerReference) WithArrayOfValues(values []bool) *LogCondition_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*LogCondition_FieldSubPathArrayOfValues)
}

type LogConditionPathSelectorMetadataOwnerReferencesUnsetOnDelete struct{}

func (LogConditionPathSelectorMetadataOwnerReferencesUnsetOnDelete) FieldPath() *LogCondition_FieldSubPath {
	return &LogCondition_FieldSubPath{
		selector: LogCondition_FieldPathSelectorMetadata,
		subPath:  meta.NewMetaFieldPathBuilder().OwnerReferences().UnsetOnDelete().FieldPath(),
	}
}

func (s LogConditionPathSelectorMetadataOwnerReferencesUnsetOnDelete) WithValue(value bool) *LogCondition_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*LogCondition_FieldSubPathValue)
}

func (s LogConditionPathSelectorMetadataOwnerReferencesUnsetOnDelete) WithArrayOfValues(values []bool) *LogCondition_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*LogCondition_FieldSubPathArrayOfValues)
}

type LogConditionPathSelectorMetadataShards struct{}

func (LogConditionPathSelectorMetadataShards) FieldPath() *LogCondition_FieldSubPath {
	return &LogCondition_FieldSubPath{
		selector: LogCondition_FieldPathSelectorMetadata,
		subPath:  meta.NewMetaFieldPathBuilder().Shards().FieldPath(),
	}
}

func (s LogConditionPathSelectorMetadataShards) WithValue(value map[string]int64) *LogCondition_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*LogCondition_FieldSubPathValue)
}

func (s LogConditionPathSelectorMetadataShards) WithArrayOfValues(values []map[string]int64) *LogCondition_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*LogCondition_FieldSubPathArrayOfValues)
}

func (LogConditionPathSelectorMetadataShards) WithKey(key string) LogConditionMapPathSelectorMetadataShards {
	return LogConditionMapPathSelectorMetadataShards{key: key}
}

type LogConditionMapPathSelectorMetadataShards struct {
	key string
}

func (s LogConditionMapPathSelectorMetadataShards) FieldPath() *LogCondition_FieldSubPath {
	return &LogCondition_FieldSubPath{
		selector: LogCondition_FieldPathSelectorMetadata,
		subPath:  meta.NewMetaFieldPathBuilder().Shards().WithKey(s.key).FieldPath(),
	}
}

func (s LogConditionMapPathSelectorMetadataShards) WithValue(value int64) *LogCondition_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*LogCondition_FieldSubPathValue)
}

func (s LogConditionMapPathSelectorMetadataShards) WithArrayOfValues(values []int64) *LogCondition_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*LogCondition_FieldSubPathArrayOfValues)
}

type LogConditionPathSelectorMetadataSyncing struct{}

func (LogConditionPathSelectorMetadataSyncing) FieldPath() *LogCondition_FieldSubPath {
	return &LogCondition_FieldSubPath{
		selector: LogCondition_FieldPathSelectorMetadata,
		subPath:  meta.NewMetaFieldPathBuilder().Syncing().FieldPath(),
	}
}

func (s LogConditionPathSelectorMetadataSyncing) WithValue(value *meta.SyncingMeta) *LogCondition_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*LogCondition_FieldSubPathValue)
}

func (s LogConditionPathSelectorMetadataSyncing) WithArrayOfValues(values []*meta.SyncingMeta) *LogCondition_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*LogCondition_FieldSubPathArrayOfValues)
}

func (LogConditionPathSelectorMetadataSyncing) OwningRegion() LogConditionPathSelectorMetadataSyncingOwningRegion {
	return LogConditionPathSelectorMetadataSyncingOwningRegion{}
}

func (LogConditionPathSelectorMetadataSyncing) Regions() LogConditionPathSelectorMetadataSyncingRegions {
	return LogConditionPathSelectorMetadataSyncingRegions{}
}

type LogConditionPathSelectorMetadataSyncingOwningRegion struct{}

func (LogConditionPathSelectorMetadataSyncingOwningRegion) FieldPath() *LogCondition_FieldSubPath {
	return &LogCondition_FieldSubPath{
		selector: LogCondition_FieldPathSelectorMetadata,
		subPath:  meta.NewMetaFieldPathBuilder().Syncing().OwningRegion().FieldPath(),
	}
}

func (s LogConditionPathSelectorMetadataSyncingOwningRegion) WithValue(value string) *LogCondition_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*LogCondition_FieldSubPathValue)
}

func (s LogConditionPathSelectorMetadataSyncingOwningRegion) WithArrayOfValues(values []string) *LogCondition_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*LogCondition_FieldSubPathArrayOfValues)
}

type LogConditionPathSelectorMetadataSyncingRegions struct{}

func (LogConditionPathSelectorMetadataSyncingRegions) FieldPath() *LogCondition_FieldSubPath {
	return &LogCondition_FieldSubPath{
		selector: LogCondition_FieldPathSelectorMetadata,
		subPath:  meta.NewMetaFieldPathBuilder().Syncing().Regions().FieldPath(),
	}
}

func (s LogConditionPathSelectorMetadataSyncingRegions) WithValue(value []string) *LogCondition_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*LogCondition_FieldSubPathValue)
}

func (s LogConditionPathSelectorMetadataSyncingRegions) WithArrayOfValues(values [][]string) *LogCondition_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*LogCondition_FieldSubPathArrayOfValues)
}

func (s LogConditionPathSelectorMetadataSyncingRegions) WithItemValue(value string) *LogCondition_FieldSubPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*LogCondition_FieldSubPathArrayItemValue)
}

type LogConditionPathSelectorMetadataLifecycle struct{}

func (LogConditionPathSelectorMetadataLifecycle) FieldPath() *LogCondition_FieldSubPath {
	return &LogCondition_FieldSubPath{
		selector: LogCondition_FieldPathSelectorMetadata,
		subPath:  meta.NewMetaFieldPathBuilder().Lifecycle().FieldPath(),
	}
}

func (s LogConditionPathSelectorMetadataLifecycle) WithValue(value *meta.Lifecycle) *LogCondition_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*LogCondition_FieldSubPathValue)
}

func (s LogConditionPathSelectorMetadataLifecycle) WithArrayOfValues(values []*meta.Lifecycle) *LogCondition_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*LogCondition_FieldSubPathArrayOfValues)
}

func (LogConditionPathSelectorMetadataLifecycle) State() LogConditionPathSelectorMetadataLifecycleState {
	return LogConditionPathSelectorMetadataLifecycleState{}
}

func (LogConditionPathSelectorMetadataLifecycle) BlockDeletion() LogConditionPathSelectorMetadataLifecycleBlockDeletion {
	return LogConditionPathSelectorMetadataLifecycleBlockDeletion{}
}

type LogConditionPathSelectorMetadataLifecycleState struct{}

func (LogConditionPathSelectorMetadataLifecycleState) FieldPath() *LogCondition_FieldSubPath {
	return &LogCondition_FieldSubPath{
		selector: LogCondition_FieldPathSelectorMetadata,
		subPath:  meta.NewMetaFieldPathBuilder().Lifecycle().State().FieldPath(),
	}
}

func (s LogConditionPathSelectorMetadataLifecycleState) WithValue(value meta.Lifecycle_State) *LogCondition_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*LogCondition_FieldSubPathValue)
}

func (s LogConditionPathSelectorMetadataLifecycleState) WithArrayOfValues(values []meta.Lifecycle_State) *LogCondition_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*LogCondition_FieldSubPathArrayOfValues)
}

type LogConditionPathSelectorMetadataLifecycleBlockDeletion struct{}

func (LogConditionPathSelectorMetadataLifecycleBlockDeletion) FieldPath() *LogCondition_FieldSubPath {
	return &LogCondition_FieldSubPath{
		selector: LogCondition_FieldPathSelectorMetadata,
		subPath:  meta.NewMetaFieldPathBuilder().Lifecycle().BlockDeletion().FieldPath(),
	}
}

func (s LogConditionPathSelectorMetadataLifecycleBlockDeletion) WithValue(value bool) *LogCondition_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*LogCondition_FieldSubPathValue)
}

func (s LogConditionPathSelectorMetadataLifecycleBlockDeletion) WithArrayOfValues(values []bool) *LogCondition_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*LogCondition_FieldSubPathArrayOfValues)
}

type LogConditionPathSelectorMetadataServices struct{}

func (LogConditionPathSelectorMetadataServices) FieldPath() *LogCondition_FieldSubPath {
	return &LogCondition_FieldSubPath{
		selector: LogCondition_FieldPathSelectorMetadata,
		subPath:  meta.NewMetaFieldPathBuilder().Services().FieldPath(),
	}
}

func (s LogConditionPathSelectorMetadataServices) WithValue(value *meta.ServicesInfo) *LogCondition_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*LogCondition_FieldSubPathValue)
}

func (s LogConditionPathSelectorMetadataServices) WithArrayOfValues(values []*meta.ServicesInfo) *LogCondition_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*LogCondition_FieldSubPathArrayOfValues)
}

func (LogConditionPathSelectorMetadataServices) OwningService() LogConditionPathSelectorMetadataServicesOwningService {
	return LogConditionPathSelectorMetadataServicesOwningService{}
}

func (LogConditionPathSelectorMetadataServices) AllowedServices() LogConditionPathSelectorMetadataServicesAllowedServices {
	return LogConditionPathSelectorMetadataServicesAllowedServices{}
}

type LogConditionPathSelectorMetadataServicesOwningService struct{}

func (LogConditionPathSelectorMetadataServicesOwningService) FieldPath() *LogCondition_FieldSubPath {
	return &LogCondition_FieldSubPath{
		selector: LogCondition_FieldPathSelectorMetadata,
		subPath:  meta.NewMetaFieldPathBuilder().Services().OwningService().FieldPath(),
	}
}

func (s LogConditionPathSelectorMetadataServicesOwningService) WithValue(value string) *LogCondition_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*LogCondition_FieldSubPathValue)
}

func (s LogConditionPathSelectorMetadataServicesOwningService) WithArrayOfValues(values []string) *LogCondition_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*LogCondition_FieldSubPathArrayOfValues)
}

type LogConditionPathSelectorMetadataServicesAllowedServices struct{}

func (LogConditionPathSelectorMetadataServicesAllowedServices) FieldPath() *LogCondition_FieldSubPath {
	return &LogCondition_FieldSubPath{
		selector: LogCondition_FieldPathSelectorMetadata,
		subPath:  meta.NewMetaFieldPathBuilder().Services().AllowedServices().FieldPath(),
	}
}

func (s LogConditionPathSelectorMetadataServicesAllowedServices) WithValue(value []string) *LogCondition_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*LogCondition_FieldSubPathValue)
}

func (s LogConditionPathSelectorMetadataServicesAllowedServices) WithArrayOfValues(values [][]string) *LogCondition_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*LogCondition_FieldSubPathArrayOfValues)
}

func (s LogConditionPathSelectorMetadataServicesAllowedServices) WithItemValue(value string) *LogCondition_FieldSubPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*LogCondition_FieldSubPathArrayItemValue)
}

type LogConditionPathSelectorDisplayName struct{}

func (LogConditionPathSelectorDisplayName) FieldPath() *LogCondition_FieldTerminalPath {
	return &LogCondition_FieldTerminalPath{selector: LogCondition_FieldPathSelectorDisplayName}
}

func (s LogConditionPathSelectorDisplayName) WithValue(value string) *LogCondition_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*LogCondition_FieldTerminalPathValue)
}

func (s LogConditionPathSelectorDisplayName) WithArrayOfValues(values []string) *LogCondition_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*LogCondition_FieldTerminalPathArrayOfValues)
}

type LogConditionPathSelectorDescription struct{}

func (LogConditionPathSelectorDescription) FieldPath() *LogCondition_FieldTerminalPath {
	return &LogCondition_FieldTerminalPath{selector: LogCondition_FieldPathSelectorDescription}
}

func (s LogConditionPathSelectorDescription) WithValue(value string) *LogCondition_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*LogCondition_FieldTerminalPathValue)
}

func (s LogConditionPathSelectorDescription) WithArrayOfValues(values []string) *LogCondition_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*LogCondition_FieldTerminalPathArrayOfValues)
}

type LogConditionPathSelectorSupportingDocs struct{}

func (LogConditionPathSelectorSupportingDocs) FieldPath() *LogCondition_FieldTerminalPath {
	return &LogCondition_FieldTerminalPath{selector: LogCondition_FieldPathSelectorSupportingDocs}
}

func (s LogConditionPathSelectorSupportingDocs) WithValue(value []*document.Reference) *LogCondition_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*LogCondition_FieldTerminalPathValue)
}

func (s LogConditionPathSelectorSupportingDocs) WithArrayOfValues(values [][]*document.Reference) *LogCondition_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*LogCondition_FieldTerminalPathArrayOfValues)
}

func (s LogConditionPathSelectorSupportingDocs) WithItemValue(value *document.Reference) *LogCondition_FieldTerminalPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*LogCondition_FieldTerminalPathArrayItemValue)
}

type LogConditionPathSelectorSpec struct{}

func (LogConditionPathSelectorSpec) FieldPath() *LogCondition_FieldTerminalPath {
	return &LogCondition_FieldTerminalPath{selector: LogCondition_FieldPathSelectorSpec}
}

func (s LogConditionPathSelectorSpec) WithValue(value *rcommon.LogCndSpec) *LogCondition_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*LogCondition_FieldTerminalPathValue)
}

func (s LogConditionPathSelectorSpec) WithArrayOfValues(values []*rcommon.LogCndSpec) *LogCondition_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*LogCondition_FieldTerminalPathArrayOfValues)
}

func (LogConditionPathSelectorSpec) WithSubPath(subPath rcommon.LogCndSpec_FieldPath) *LogCondition_FieldSubPath {
	return &LogCondition_FieldSubPath{selector: LogCondition_FieldPathSelectorSpec, subPath: subPath}
}

func (s LogConditionPathSelectorSpec) WithSubValue(subPathValue rcommon.LogCndSpec_FieldPathValue) *LogCondition_FieldSubPathValue {
	return &LogCondition_FieldSubPathValue{LogCondition_FieldPath: s.WithSubPath(subPathValue), subPathValue: subPathValue}
}

func (s LogConditionPathSelectorSpec) WithSubArrayOfValues(subPathArrayOfValues rcommon.LogCndSpec_FieldPathArrayOfValues) *LogCondition_FieldSubPathArrayOfValues {
	return &LogCondition_FieldSubPathArrayOfValues{LogCondition_FieldPath: s.WithSubPath(subPathArrayOfValues), subPathArrayOfValues: subPathArrayOfValues}
}

func (s LogConditionPathSelectorSpec) WithSubArrayItemValue(subPathArrayItemValue rcommon.LogCndSpec_FieldPathArrayItemValue) *LogCondition_FieldSubPathArrayItemValue {
	return &LogCondition_FieldSubPathArrayItemValue{LogCondition_FieldPath: s.WithSubPath(subPathArrayItemValue), subPathItemValue: subPathArrayItemValue}
}

func (LogConditionPathSelectorSpec) Query() LogConditionPathSelectorSpecQuery {
	return LogConditionPathSelectorSpecQuery{}
}

func (LogConditionPathSelectorSpec) GroupByLabels() LogConditionPathSelectorSpecGroupByLabels {
	return LogConditionPathSelectorSpecGroupByLabels{}
}

type LogConditionPathSelectorSpecQuery struct{}

func (LogConditionPathSelectorSpecQuery) FieldPath() *LogCondition_FieldSubPath {
	return &LogCondition_FieldSubPath{
		selector: LogCondition_FieldPathSelectorSpec,
		subPath:  rcommon.NewLogCndSpecFieldPathBuilder().Query().FieldPath(),
	}
}

func (s LogConditionPathSelectorSpecQuery) WithValue(value *rcommon.LogCndSpec_Query) *LogCondition_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*LogCondition_FieldSubPathValue)
}

func (s LogConditionPathSelectorSpecQuery) WithArrayOfValues(values []*rcommon.LogCndSpec_Query) *LogCondition_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*LogCondition_FieldSubPathArrayOfValues)
}

func (LogConditionPathSelectorSpecQuery) Filter() LogConditionPathSelectorSpecQueryFilter {
	return LogConditionPathSelectorSpecQueryFilter{}
}

func (LogConditionPathSelectorSpecQuery) Trigger() LogConditionPathSelectorSpecQueryTrigger {
	return LogConditionPathSelectorSpecQueryTrigger{}
}

func (LogConditionPathSelectorSpecQuery) MinDuration() LogConditionPathSelectorSpecQueryMinDuration {
	return LogConditionPathSelectorSpecQueryMinDuration{}
}

type LogConditionPathSelectorSpecQueryFilter struct{}

func (LogConditionPathSelectorSpecQueryFilter) FieldPath() *LogCondition_FieldSubPath {
	return &LogCondition_FieldSubPath{
		selector: LogCondition_FieldPathSelectorSpec,
		subPath:  rcommon.NewLogCndSpecFieldPathBuilder().Query().Filter().FieldPath(),
	}
}

func (s LogConditionPathSelectorSpecQueryFilter) WithValue(value *logging_log.Filter) *LogCondition_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*LogCondition_FieldSubPathValue)
}

func (s LogConditionPathSelectorSpecQueryFilter) WithArrayOfValues(values []*logging_log.Filter) *LogCondition_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*LogCondition_FieldSubPathArrayOfValues)
}

type LogConditionPathSelectorSpecQueryTrigger struct{}

func (LogConditionPathSelectorSpecQueryTrigger) FieldPath() *LogCondition_FieldSubPath {
	return &LogCondition_FieldSubPath{
		selector: LogCondition_FieldPathSelectorSpec,
		subPath:  rcommon.NewLogCndSpecFieldPathBuilder().Query().Trigger().FieldPath(),
	}
}

func (s LogConditionPathSelectorSpecQueryTrigger) WithValue(value *rcommon.LogCndSpec_Query_TriggerCnd) *LogCondition_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*LogCondition_FieldSubPathValue)
}

func (s LogConditionPathSelectorSpecQueryTrigger) WithArrayOfValues(values []*rcommon.LogCndSpec_Query_TriggerCnd) *LogCondition_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*LogCondition_FieldSubPathArrayOfValues)
}

type LogConditionPathSelectorSpecQueryMinDuration struct{}

func (LogConditionPathSelectorSpecQueryMinDuration) FieldPath() *LogCondition_FieldSubPath {
	return &LogCondition_FieldSubPath{
		selector: LogCondition_FieldPathSelectorSpec,
		subPath:  rcommon.NewLogCndSpecFieldPathBuilder().Query().MinDuration().FieldPath(),
	}
}

func (s LogConditionPathSelectorSpecQueryMinDuration) WithValue(value *durationpb.Duration) *LogCondition_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*LogCondition_FieldSubPathValue)
}

func (s LogConditionPathSelectorSpecQueryMinDuration) WithArrayOfValues(values []*durationpb.Duration) *LogCondition_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*LogCondition_FieldSubPathArrayOfValues)
}

type LogConditionPathSelectorSpecGroupByLabels struct{}

func (LogConditionPathSelectorSpecGroupByLabels) FieldPath() *LogCondition_FieldSubPath {
	return &LogCondition_FieldSubPath{
		selector: LogCondition_FieldPathSelectorSpec,
		subPath:  rcommon.NewLogCndSpecFieldPathBuilder().GroupByLabels().FieldPath(),
	}
}

func (s LogConditionPathSelectorSpecGroupByLabels) WithValue(value []string) *LogCondition_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*LogCondition_FieldSubPathValue)
}

func (s LogConditionPathSelectorSpecGroupByLabels) WithArrayOfValues(values [][]string) *LogCondition_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*LogCondition_FieldSubPathArrayOfValues)
}

func (s LogConditionPathSelectorSpecGroupByLabels) WithItemValue(value string) *LogCondition_FieldSubPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*LogCondition_FieldSubPathArrayItemValue)
}

type LogConditionPathSelectorInternal struct{}

func (LogConditionPathSelectorInternal) FieldPath() *LogCondition_FieldTerminalPath {
	return &LogCondition_FieldTerminalPath{selector: LogCondition_FieldPathSelectorInternal}
}

func (s LogConditionPathSelectorInternal) WithValue(value *LogCondition_Internal) *LogCondition_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*LogCondition_FieldTerminalPathValue)
}

func (s LogConditionPathSelectorInternal) WithArrayOfValues(values []*LogCondition_Internal) *LogCondition_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*LogCondition_FieldTerminalPathArrayOfValues)
}

func (LogConditionPathSelectorInternal) WithSubPath(subPath LogConditionInternal_FieldPath) *LogCondition_FieldSubPath {
	return &LogCondition_FieldSubPath{selector: LogCondition_FieldPathSelectorInternal, subPath: subPath}
}

func (s LogConditionPathSelectorInternal) WithSubValue(subPathValue LogConditionInternal_FieldPathValue) *LogCondition_FieldSubPathValue {
	return &LogCondition_FieldSubPathValue{LogCondition_FieldPath: s.WithSubPath(subPathValue), subPathValue: subPathValue}
}

func (s LogConditionPathSelectorInternal) WithSubArrayOfValues(subPathArrayOfValues LogConditionInternal_FieldPathArrayOfValues) *LogCondition_FieldSubPathArrayOfValues {
	return &LogCondition_FieldSubPathArrayOfValues{LogCondition_FieldPath: s.WithSubPath(subPathArrayOfValues), subPathArrayOfValues: subPathArrayOfValues}
}

func (s LogConditionPathSelectorInternal) WithSubArrayItemValue(subPathArrayItemValue LogConditionInternal_FieldPathArrayItemValue) *LogCondition_FieldSubPathArrayItemValue {
	return &LogCondition_FieldSubPathArrayItemValue{LogCondition_FieldPath: s.WithSubPath(subPathArrayItemValue), subPathItemValue: subPathArrayItemValue}
}

func (LogConditionPathSelectorInternal) AlertingLocation() LogConditionPathSelectorInternalAlertingLocation {
	return LogConditionPathSelectorInternalAlertingLocation{}
}

type LogConditionPathSelectorInternalAlertingLocation struct{}

func (LogConditionPathSelectorInternalAlertingLocation) FieldPath() *LogCondition_FieldSubPath {
	return &LogCondition_FieldSubPath{
		selector: LogCondition_FieldPathSelectorInternal,
		subPath:  NewLogConditionInternalFieldPathBuilder().AlertingLocation().FieldPath(),
	}
}

func (s LogConditionPathSelectorInternalAlertingLocation) WithValue(value rcommon.PolicySpec_ProcessingLocation) *LogCondition_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*LogCondition_FieldSubPathValue)
}

func (s LogConditionPathSelectorInternalAlertingLocation) WithArrayOfValues(values []rcommon.PolicySpec_ProcessingLocation) *LogCondition_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*LogCondition_FieldSubPathArrayOfValues)
}

type LogConditionPathSelectorTemplateSource struct{}

func (LogConditionPathSelectorTemplateSource) FieldPath() *LogCondition_FieldTerminalPath {
	return &LogCondition_FieldTerminalPath{selector: LogCondition_FieldPathSelectorTemplateSource}
}

func (s LogConditionPathSelectorTemplateSource) WithValue(value *LogCondition_TemplateSource) *LogCondition_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*LogCondition_FieldTerminalPathValue)
}

func (s LogConditionPathSelectorTemplateSource) WithArrayOfValues(values []*LogCondition_TemplateSource) *LogCondition_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*LogCondition_FieldTerminalPathArrayOfValues)
}

func (LogConditionPathSelectorTemplateSource) WithSubPath(subPath LogConditionTemplateSource_FieldPath) *LogCondition_FieldSubPath {
	return &LogCondition_FieldSubPath{selector: LogCondition_FieldPathSelectorTemplateSource, subPath: subPath}
}

func (s LogConditionPathSelectorTemplateSource) WithSubValue(subPathValue LogConditionTemplateSource_FieldPathValue) *LogCondition_FieldSubPathValue {
	return &LogCondition_FieldSubPathValue{LogCondition_FieldPath: s.WithSubPath(subPathValue), subPathValue: subPathValue}
}

func (s LogConditionPathSelectorTemplateSource) WithSubArrayOfValues(subPathArrayOfValues LogConditionTemplateSource_FieldPathArrayOfValues) *LogCondition_FieldSubPathArrayOfValues {
	return &LogCondition_FieldSubPathArrayOfValues{LogCondition_FieldPath: s.WithSubPath(subPathArrayOfValues), subPathArrayOfValues: subPathArrayOfValues}
}

func (s LogConditionPathSelectorTemplateSource) WithSubArrayItemValue(subPathArrayItemValue LogConditionTemplateSource_FieldPathArrayItemValue) *LogCondition_FieldSubPathArrayItemValue {
	return &LogCondition_FieldSubPathArrayItemValue{LogCondition_FieldPath: s.WithSubPath(subPathArrayItemValue), subPathItemValue: subPathArrayItemValue}
}

func (LogConditionPathSelectorTemplateSource) Template() LogConditionPathSelectorTemplateSourceTemplate {
	return LogConditionPathSelectorTemplateSourceTemplate{}
}

func (LogConditionPathSelectorTemplateSource) UpdatedFields() LogConditionPathSelectorTemplateSourceUpdatedFields {
	return LogConditionPathSelectorTemplateSourceUpdatedFields{}
}

type LogConditionPathSelectorTemplateSourceTemplate struct{}

func (LogConditionPathSelectorTemplateSourceTemplate) FieldPath() *LogCondition_FieldSubPath {
	return &LogCondition_FieldSubPath{
		selector: LogCondition_FieldPathSelectorTemplateSource,
		subPath:  NewLogConditionTemplateSourceFieldPathBuilder().Template().FieldPath(),
	}
}

func (s LogConditionPathSelectorTemplateSourceTemplate) WithValue(value *log_condition_template.Reference) *LogCondition_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*LogCondition_FieldSubPathValue)
}

func (s LogConditionPathSelectorTemplateSourceTemplate) WithArrayOfValues(values []*log_condition_template.Reference) *LogCondition_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*LogCondition_FieldSubPathArrayOfValues)
}

type LogConditionPathSelectorTemplateSourceUpdatedFields struct{}

func (LogConditionPathSelectorTemplateSourceUpdatedFields) FieldPath() *LogCondition_FieldSubPath {
	return &LogCondition_FieldSubPath{
		selector: LogCondition_FieldPathSelectorTemplateSource,
		subPath:  NewLogConditionTemplateSourceFieldPathBuilder().UpdatedFields().FieldPath(),
	}
}

func (s LogConditionPathSelectorTemplateSourceUpdatedFields) WithValue(value *fieldmaskpb.FieldMask) *LogCondition_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*LogCondition_FieldSubPathValue)
}

func (s LogConditionPathSelectorTemplateSourceUpdatedFields) WithArrayOfValues(values []*fieldmaskpb.FieldMask) *LogCondition_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*LogCondition_FieldSubPathArrayOfValues)
}

type LogConditionInternalFieldPathBuilder struct{}

func NewLogConditionInternalFieldPathBuilder() LogConditionInternalFieldPathBuilder {
	return LogConditionInternalFieldPathBuilder{}
}
func (LogConditionInternalFieldPathBuilder) AlertingLocation() LogCondition_InternalPathSelectorAlertingLocation {
	return LogCondition_InternalPathSelectorAlertingLocation{}
}

type LogCondition_InternalPathSelectorAlertingLocation struct{}

func (LogCondition_InternalPathSelectorAlertingLocation) FieldPath() *LogConditionInternal_FieldTerminalPath {
	return &LogConditionInternal_FieldTerminalPath{selector: LogConditionInternal_FieldPathSelectorAlertingLocation}
}

func (s LogCondition_InternalPathSelectorAlertingLocation) WithValue(value rcommon.PolicySpec_ProcessingLocation) *LogConditionInternal_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*LogConditionInternal_FieldTerminalPathValue)
}

func (s LogCondition_InternalPathSelectorAlertingLocation) WithArrayOfValues(values []rcommon.PolicySpec_ProcessingLocation) *LogConditionInternal_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*LogConditionInternal_FieldTerminalPathArrayOfValues)
}

type LogConditionTemplateSourceFieldPathBuilder struct{}

func NewLogConditionTemplateSourceFieldPathBuilder() LogConditionTemplateSourceFieldPathBuilder {
	return LogConditionTemplateSourceFieldPathBuilder{}
}
func (LogConditionTemplateSourceFieldPathBuilder) Template() LogCondition_TemplateSourcePathSelectorTemplate {
	return LogCondition_TemplateSourcePathSelectorTemplate{}
}
func (LogConditionTemplateSourceFieldPathBuilder) UpdatedFields() LogCondition_TemplateSourcePathSelectorUpdatedFields {
	return LogCondition_TemplateSourcePathSelectorUpdatedFields{}
}

type LogCondition_TemplateSourcePathSelectorTemplate struct{}

func (LogCondition_TemplateSourcePathSelectorTemplate) FieldPath() *LogConditionTemplateSource_FieldTerminalPath {
	return &LogConditionTemplateSource_FieldTerminalPath{selector: LogConditionTemplateSource_FieldPathSelectorTemplate}
}

func (s LogCondition_TemplateSourcePathSelectorTemplate) WithValue(value *log_condition_template.Reference) *LogConditionTemplateSource_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*LogConditionTemplateSource_FieldTerminalPathValue)
}

func (s LogCondition_TemplateSourcePathSelectorTemplate) WithArrayOfValues(values []*log_condition_template.Reference) *LogConditionTemplateSource_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*LogConditionTemplateSource_FieldTerminalPathArrayOfValues)
}

type LogCondition_TemplateSourcePathSelectorUpdatedFields struct{}

func (LogCondition_TemplateSourcePathSelectorUpdatedFields) FieldPath() *LogConditionTemplateSource_FieldTerminalPath {
	return &LogConditionTemplateSource_FieldTerminalPath{selector: LogConditionTemplateSource_FieldPathSelectorUpdatedFields}
}

func (s LogCondition_TemplateSourcePathSelectorUpdatedFields) WithValue(value *fieldmaskpb.FieldMask) *LogConditionTemplateSource_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*LogConditionTemplateSource_FieldTerminalPathValue)
}

func (s LogCondition_TemplateSourcePathSelectorUpdatedFields) WithArrayOfValues(values []*fieldmaskpb.FieldMask) *LogConditionTemplateSource_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*LogConditionTemplateSource_FieldTerminalPathArrayOfValues)
}
