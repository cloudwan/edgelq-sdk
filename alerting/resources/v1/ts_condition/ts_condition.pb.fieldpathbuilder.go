// Code generated by protoc-gen-goten-object
// File: edgelq/alerting/proto/v1/ts_condition.proto
// DO NOT EDIT!!!

package ts_condition

// proto imports
import (
	rcommon "github.com/cloudwan/edgelq-sdk/alerting/resources/v1/common"
	document "github.com/cloudwan/edgelq-sdk/alerting/resources/v1/document"
	log_condition_template "github.com/cloudwan/edgelq-sdk/alerting/resources/v1/log_condition_template"
	notification_channel "github.com/cloudwan/edgelq-sdk/alerting/resources/v1/notification_channel"
	policy "github.com/cloudwan/edgelq-sdk/alerting/resources/v1/policy"
	policy_template "github.com/cloudwan/edgelq-sdk/alerting/resources/v1/policy_template"
	api "github.com/cloudwan/edgelq-sdk/common/api"
	iam_iam_common "github.com/cloudwan/edgelq-sdk/iam/resources/v1/common"
	iam_organization "github.com/cloudwan/edgelq-sdk/iam/resources/v1/organization"
	iam_project "github.com/cloudwan/edgelq-sdk/iam/resources/v1/project"
	logging_bucket "github.com/cloudwan/edgelq-sdk/logging/resources/v1/bucket"
	logging_common "github.com/cloudwan/edgelq-sdk/logging/resources/v1/common"
	logging_log "github.com/cloudwan/edgelq-sdk/logging/resources/v1/log"
	logging_log_descriptor "github.com/cloudwan/edgelq-sdk/logging/resources/v1/log_descriptor"
	monitoring_common "github.com/cloudwan/edgelq-sdk/monitoring/resources/v4/common"
	monitoring_metric_descriptor "github.com/cloudwan/edgelq-sdk/monitoring/resources/v4/metric_descriptor"
	monitoring_monitored_resource_descriptor "github.com/cloudwan/edgelq-sdk/monitoring/resources/v4/monitored_resource_descriptor"
	monitoring_project "github.com/cloudwan/edgelq-sdk/monitoring/resources/v4/project"
	monitoring_time_serie "github.com/cloudwan/edgelq-sdk/monitoring/resources/v4/time_serie"
	meta_common "github.com/cloudwan/goten-sdk/meta-service/resources/v1/common"
	meta_resource "github.com/cloudwan/goten-sdk/meta-service/resources/v1/resource"
	meta_service "github.com/cloudwan/goten-sdk/meta-service/resources/v1/service"
	meta "github.com/cloudwan/goten-sdk/types/meta"
	multi_region_policy "github.com/cloudwan/goten-sdk/types/multi_region_policy"
	anypb "google.golang.org/protobuf/types/known/anypb"
	durationpb "google.golang.org/protobuf/types/known/durationpb"
	fieldmaskpb "google.golang.org/protobuf/types/known/fieldmaskpb"
	structpb "google.golang.org/protobuf/types/known/structpb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
)

// make sure we're using proto imports
var (
	_ = &document.Document{}
	_ = &log_condition_template.LogConditionTemplate{}
	_ = &notification_channel.NotificationChannel{}
	_ = &policy.Policy{}
	_ = &policy_template.PolicyTemplate{}
	_ = &rcommon.LogCndSpec{}
	_ = api.LaunchStage(0)
	_ = &iam_iam_common.PCR{}
	_ = &iam_organization.Organization{}
	_ = &iam_project.Project{}
	_ = &logging_bucket.Bucket{}
	_ = &logging_common.LabelDescriptor{}
	_ = &logging_log.Log{}
	_ = &logging_log_descriptor.LogDescriptor{}
	_ = &monitoring_common.LabelDescriptor{}
	_ = &monitoring_metric_descriptor.MetricDescriptor{}
	_ = &monitoring_monitored_resource_descriptor.MonitoredResourceDescriptor{}
	_ = &monitoring_project.Project{}
	_ = &monitoring_time_serie.Point{}
	_ = &anypb.Any{}
	_ = &durationpb.Duration{}
	_ = &fieldmaskpb.FieldMask{}
	_ = &structpb.Struct{}
	_ = &timestamppb.Timestamp{}
	_ = &meta_common.LabelledDomain{}
	_ = &meta_resource.Resource{}
	_ = &meta_service.Service{}
	_ = &meta.Meta{}
	_ = &multi_region_policy.MultiRegionPolicy{}
)

type TsConditionFieldPathBuilder struct{}

func NewTsConditionFieldPathBuilder() TsConditionFieldPathBuilder {
	return TsConditionFieldPathBuilder{}
}
func (TsConditionFieldPathBuilder) Name() TsConditionPathSelectorName {
	return TsConditionPathSelectorName{}
}
func (TsConditionFieldPathBuilder) Metadata() TsConditionPathSelectorMetadata {
	return TsConditionPathSelectorMetadata{}
}
func (TsConditionFieldPathBuilder) DisplayName() TsConditionPathSelectorDisplayName {
	return TsConditionPathSelectorDisplayName{}
}
func (TsConditionFieldPathBuilder) Description() TsConditionPathSelectorDescription {
	return TsConditionPathSelectorDescription{}
}
func (TsConditionFieldPathBuilder) SupportingDocs() TsConditionPathSelectorSupportingDocs {
	return TsConditionPathSelectorSupportingDocs{}
}
func (TsConditionFieldPathBuilder) Spec() TsConditionPathSelectorSpec {
	return TsConditionPathSelectorSpec{}
}
func (TsConditionFieldPathBuilder) Internal() TsConditionPathSelectorInternal {
	return TsConditionPathSelectorInternal{}
}
func (TsConditionFieldPathBuilder) FilterSelector() TsConditionPathSelectorFilterSelector {
	return TsConditionPathSelectorFilterSelector{}
}
func (TsConditionFieldPathBuilder) TemplateSource() TsConditionPathSelectorTemplateSource {
	return TsConditionPathSelectorTemplateSource{}
}

type TsConditionPathSelectorName struct{}

func (TsConditionPathSelectorName) FieldPath() *TsCondition_FieldTerminalPath {
	return &TsCondition_FieldTerminalPath{selector: TsCondition_FieldPathSelectorName}
}

func (s TsConditionPathSelectorName) WithValue(value *Name) *TsCondition_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*TsCondition_FieldTerminalPathValue)
}

func (s TsConditionPathSelectorName) WithArrayOfValues(values []*Name) *TsCondition_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*TsCondition_FieldTerminalPathArrayOfValues)
}

type TsConditionPathSelectorMetadata struct{}

func (TsConditionPathSelectorMetadata) FieldPath() *TsCondition_FieldTerminalPath {
	return &TsCondition_FieldTerminalPath{selector: TsCondition_FieldPathSelectorMetadata}
}

func (s TsConditionPathSelectorMetadata) WithValue(value *meta.Meta) *TsCondition_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*TsCondition_FieldTerminalPathValue)
}

func (s TsConditionPathSelectorMetadata) WithArrayOfValues(values []*meta.Meta) *TsCondition_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*TsCondition_FieldTerminalPathArrayOfValues)
}

func (TsConditionPathSelectorMetadata) WithSubPath(subPath meta.Meta_FieldPath) *TsCondition_FieldSubPath {
	return &TsCondition_FieldSubPath{selector: TsCondition_FieldPathSelectorMetadata, subPath: subPath}
}

func (s TsConditionPathSelectorMetadata) WithSubValue(subPathValue meta.Meta_FieldPathValue) *TsCondition_FieldSubPathValue {
	return &TsCondition_FieldSubPathValue{TsCondition_FieldPath: s.WithSubPath(subPathValue), subPathValue: subPathValue}
}

func (s TsConditionPathSelectorMetadata) WithSubArrayOfValues(subPathArrayOfValues meta.Meta_FieldPathArrayOfValues) *TsCondition_FieldSubPathArrayOfValues {
	return &TsCondition_FieldSubPathArrayOfValues{TsCondition_FieldPath: s.WithSubPath(subPathArrayOfValues), subPathArrayOfValues: subPathArrayOfValues}
}

func (s TsConditionPathSelectorMetadata) WithSubArrayItemValue(subPathArrayItemValue meta.Meta_FieldPathArrayItemValue) *TsCondition_FieldSubPathArrayItemValue {
	return &TsCondition_FieldSubPathArrayItemValue{TsCondition_FieldPath: s.WithSubPath(subPathArrayItemValue), subPathItemValue: subPathArrayItemValue}
}

func (TsConditionPathSelectorMetadata) CreateTime() TsConditionPathSelectorMetadataCreateTime {
	return TsConditionPathSelectorMetadataCreateTime{}
}

func (TsConditionPathSelectorMetadata) UpdateTime() TsConditionPathSelectorMetadataUpdateTime {
	return TsConditionPathSelectorMetadataUpdateTime{}
}

func (TsConditionPathSelectorMetadata) DeleteTime() TsConditionPathSelectorMetadataDeleteTime {
	return TsConditionPathSelectorMetadataDeleteTime{}
}

func (TsConditionPathSelectorMetadata) Uuid() TsConditionPathSelectorMetadataUuid {
	return TsConditionPathSelectorMetadataUuid{}
}

func (TsConditionPathSelectorMetadata) Tags() TsConditionPathSelectorMetadataTags {
	return TsConditionPathSelectorMetadataTags{}
}

func (TsConditionPathSelectorMetadata) Labels() TsConditionPathSelectorMetadataLabels {
	return TsConditionPathSelectorMetadataLabels{}
}

func (TsConditionPathSelectorMetadata) Annotations() TsConditionPathSelectorMetadataAnnotations {
	return TsConditionPathSelectorMetadataAnnotations{}
}

func (TsConditionPathSelectorMetadata) Generation() TsConditionPathSelectorMetadataGeneration {
	return TsConditionPathSelectorMetadataGeneration{}
}

func (TsConditionPathSelectorMetadata) ResourceVersion() TsConditionPathSelectorMetadataResourceVersion {
	return TsConditionPathSelectorMetadataResourceVersion{}
}

func (TsConditionPathSelectorMetadata) OwnerReferences() TsConditionPathSelectorMetadataOwnerReferences {
	return TsConditionPathSelectorMetadataOwnerReferences{}
}

func (TsConditionPathSelectorMetadata) Shards() TsConditionPathSelectorMetadataShards {
	return TsConditionPathSelectorMetadataShards{}
}

func (TsConditionPathSelectorMetadata) Syncing() TsConditionPathSelectorMetadataSyncing {
	return TsConditionPathSelectorMetadataSyncing{}
}

func (TsConditionPathSelectorMetadata) Lifecycle() TsConditionPathSelectorMetadataLifecycle {
	return TsConditionPathSelectorMetadataLifecycle{}
}

func (TsConditionPathSelectorMetadata) Services() TsConditionPathSelectorMetadataServices {
	return TsConditionPathSelectorMetadataServices{}
}

type TsConditionPathSelectorMetadataCreateTime struct{}

func (TsConditionPathSelectorMetadataCreateTime) FieldPath() *TsCondition_FieldSubPath {
	return &TsCondition_FieldSubPath{
		selector: TsCondition_FieldPathSelectorMetadata,
		subPath:  meta.NewMetaFieldPathBuilder().CreateTime().FieldPath(),
	}
}

func (s TsConditionPathSelectorMetadataCreateTime) WithValue(value *timestamppb.Timestamp) *TsCondition_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*TsCondition_FieldSubPathValue)
}

func (s TsConditionPathSelectorMetadataCreateTime) WithArrayOfValues(values []*timestamppb.Timestamp) *TsCondition_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*TsCondition_FieldSubPathArrayOfValues)
}

type TsConditionPathSelectorMetadataUpdateTime struct{}

func (TsConditionPathSelectorMetadataUpdateTime) FieldPath() *TsCondition_FieldSubPath {
	return &TsCondition_FieldSubPath{
		selector: TsCondition_FieldPathSelectorMetadata,
		subPath:  meta.NewMetaFieldPathBuilder().UpdateTime().FieldPath(),
	}
}

func (s TsConditionPathSelectorMetadataUpdateTime) WithValue(value *timestamppb.Timestamp) *TsCondition_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*TsCondition_FieldSubPathValue)
}

func (s TsConditionPathSelectorMetadataUpdateTime) WithArrayOfValues(values []*timestamppb.Timestamp) *TsCondition_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*TsCondition_FieldSubPathArrayOfValues)
}

type TsConditionPathSelectorMetadataDeleteTime struct{}

func (TsConditionPathSelectorMetadataDeleteTime) FieldPath() *TsCondition_FieldSubPath {
	return &TsCondition_FieldSubPath{
		selector: TsCondition_FieldPathSelectorMetadata,
		subPath:  meta.NewMetaFieldPathBuilder().DeleteTime().FieldPath(),
	}
}

func (s TsConditionPathSelectorMetadataDeleteTime) WithValue(value *timestamppb.Timestamp) *TsCondition_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*TsCondition_FieldSubPathValue)
}

func (s TsConditionPathSelectorMetadataDeleteTime) WithArrayOfValues(values []*timestamppb.Timestamp) *TsCondition_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*TsCondition_FieldSubPathArrayOfValues)
}

type TsConditionPathSelectorMetadataUuid struct{}

func (TsConditionPathSelectorMetadataUuid) FieldPath() *TsCondition_FieldSubPath {
	return &TsCondition_FieldSubPath{
		selector: TsCondition_FieldPathSelectorMetadata,
		subPath:  meta.NewMetaFieldPathBuilder().Uuid().FieldPath(),
	}
}

func (s TsConditionPathSelectorMetadataUuid) WithValue(value string) *TsCondition_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*TsCondition_FieldSubPathValue)
}

func (s TsConditionPathSelectorMetadataUuid) WithArrayOfValues(values []string) *TsCondition_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*TsCondition_FieldSubPathArrayOfValues)
}

type TsConditionPathSelectorMetadataTags struct{}

func (TsConditionPathSelectorMetadataTags) FieldPath() *TsCondition_FieldSubPath {
	return &TsCondition_FieldSubPath{
		selector: TsCondition_FieldPathSelectorMetadata,
		subPath:  meta.NewMetaFieldPathBuilder().Tags().FieldPath(),
	}
}

func (s TsConditionPathSelectorMetadataTags) WithValue(value []string) *TsCondition_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*TsCondition_FieldSubPathValue)
}

func (s TsConditionPathSelectorMetadataTags) WithArrayOfValues(values [][]string) *TsCondition_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*TsCondition_FieldSubPathArrayOfValues)
}

func (s TsConditionPathSelectorMetadataTags) WithItemValue(value string) *TsCondition_FieldSubPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*TsCondition_FieldSubPathArrayItemValue)
}

type TsConditionPathSelectorMetadataLabels struct{}

func (TsConditionPathSelectorMetadataLabels) FieldPath() *TsCondition_FieldSubPath {
	return &TsCondition_FieldSubPath{
		selector: TsCondition_FieldPathSelectorMetadata,
		subPath:  meta.NewMetaFieldPathBuilder().Labels().FieldPath(),
	}
}

func (s TsConditionPathSelectorMetadataLabels) WithValue(value map[string]string) *TsCondition_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*TsCondition_FieldSubPathValue)
}

func (s TsConditionPathSelectorMetadataLabels) WithArrayOfValues(values []map[string]string) *TsCondition_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*TsCondition_FieldSubPathArrayOfValues)
}

func (TsConditionPathSelectorMetadataLabels) WithKey(key string) TsConditionMapPathSelectorMetadataLabels {
	return TsConditionMapPathSelectorMetadataLabels{key: key}
}

type TsConditionMapPathSelectorMetadataLabels struct {
	key string
}

func (s TsConditionMapPathSelectorMetadataLabels) FieldPath() *TsCondition_FieldSubPath {
	return &TsCondition_FieldSubPath{
		selector: TsCondition_FieldPathSelectorMetadata,
		subPath:  meta.NewMetaFieldPathBuilder().Labels().WithKey(s.key).FieldPath(),
	}
}

func (s TsConditionMapPathSelectorMetadataLabels) WithValue(value string) *TsCondition_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*TsCondition_FieldSubPathValue)
}

func (s TsConditionMapPathSelectorMetadataLabels) WithArrayOfValues(values []string) *TsCondition_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*TsCondition_FieldSubPathArrayOfValues)
}

type TsConditionPathSelectorMetadataAnnotations struct{}

func (TsConditionPathSelectorMetadataAnnotations) FieldPath() *TsCondition_FieldSubPath {
	return &TsCondition_FieldSubPath{
		selector: TsCondition_FieldPathSelectorMetadata,
		subPath:  meta.NewMetaFieldPathBuilder().Annotations().FieldPath(),
	}
}

func (s TsConditionPathSelectorMetadataAnnotations) WithValue(value map[string]string) *TsCondition_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*TsCondition_FieldSubPathValue)
}

func (s TsConditionPathSelectorMetadataAnnotations) WithArrayOfValues(values []map[string]string) *TsCondition_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*TsCondition_FieldSubPathArrayOfValues)
}

func (TsConditionPathSelectorMetadataAnnotations) WithKey(key string) TsConditionMapPathSelectorMetadataAnnotations {
	return TsConditionMapPathSelectorMetadataAnnotations{key: key}
}

type TsConditionMapPathSelectorMetadataAnnotations struct {
	key string
}

func (s TsConditionMapPathSelectorMetadataAnnotations) FieldPath() *TsCondition_FieldSubPath {
	return &TsCondition_FieldSubPath{
		selector: TsCondition_FieldPathSelectorMetadata,
		subPath:  meta.NewMetaFieldPathBuilder().Annotations().WithKey(s.key).FieldPath(),
	}
}

func (s TsConditionMapPathSelectorMetadataAnnotations) WithValue(value string) *TsCondition_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*TsCondition_FieldSubPathValue)
}

func (s TsConditionMapPathSelectorMetadataAnnotations) WithArrayOfValues(values []string) *TsCondition_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*TsCondition_FieldSubPathArrayOfValues)
}

type TsConditionPathSelectorMetadataGeneration struct{}

func (TsConditionPathSelectorMetadataGeneration) FieldPath() *TsCondition_FieldSubPath {
	return &TsCondition_FieldSubPath{
		selector: TsCondition_FieldPathSelectorMetadata,
		subPath:  meta.NewMetaFieldPathBuilder().Generation().FieldPath(),
	}
}

func (s TsConditionPathSelectorMetadataGeneration) WithValue(value int64) *TsCondition_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*TsCondition_FieldSubPathValue)
}

func (s TsConditionPathSelectorMetadataGeneration) WithArrayOfValues(values []int64) *TsCondition_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*TsCondition_FieldSubPathArrayOfValues)
}

type TsConditionPathSelectorMetadataResourceVersion struct{}

func (TsConditionPathSelectorMetadataResourceVersion) FieldPath() *TsCondition_FieldSubPath {
	return &TsCondition_FieldSubPath{
		selector: TsCondition_FieldPathSelectorMetadata,
		subPath:  meta.NewMetaFieldPathBuilder().ResourceVersion().FieldPath(),
	}
}

func (s TsConditionPathSelectorMetadataResourceVersion) WithValue(value string) *TsCondition_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*TsCondition_FieldSubPathValue)
}

func (s TsConditionPathSelectorMetadataResourceVersion) WithArrayOfValues(values []string) *TsCondition_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*TsCondition_FieldSubPathArrayOfValues)
}

type TsConditionPathSelectorMetadataOwnerReferences struct{}

func (TsConditionPathSelectorMetadataOwnerReferences) FieldPath() *TsCondition_FieldSubPath {
	return &TsCondition_FieldSubPath{
		selector: TsCondition_FieldPathSelectorMetadata,
		subPath:  meta.NewMetaFieldPathBuilder().OwnerReferences().FieldPath(),
	}
}

func (s TsConditionPathSelectorMetadataOwnerReferences) WithValue(value []*meta.OwnerReference) *TsCondition_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*TsCondition_FieldSubPathValue)
}

func (s TsConditionPathSelectorMetadataOwnerReferences) WithArrayOfValues(values [][]*meta.OwnerReference) *TsCondition_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*TsCondition_FieldSubPathArrayOfValues)
}

func (s TsConditionPathSelectorMetadataOwnerReferences) WithItemValue(value *meta.OwnerReference) *TsCondition_FieldSubPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*TsCondition_FieldSubPathArrayItemValue)
}

func (TsConditionPathSelectorMetadataOwnerReferences) Kind() TsConditionPathSelectorMetadataOwnerReferencesKind {
	return TsConditionPathSelectorMetadataOwnerReferencesKind{}
}

func (TsConditionPathSelectorMetadataOwnerReferences) Version() TsConditionPathSelectorMetadataOwnerReferencesVersion {
	return TsConditionPathSelectorMetadataOwnerReferencesVersion{}
}

func (TsConditionPathSelectorMetadataOwnerReferences) Name() TsConditionPathSelectorMetadataOwnerReferencesName {
	return TsConditionPathSelectorMetadataOwnerReferencesName{}
}

func (TsConditionPathSelectorMetadataOwnerReferences) Region() TsConditionPathSelectorMetadataOwnerReferencesRegion {
	return TsConditionPathSelectorMetadataOwnerReferencesRegion{}
}

func (TsConditionPathSelectorMetadataOwnerReferences) Controller() TsConditionPathSelectorMetadataOwnerReferencesController {
	return TsConditionPathSelectorMetadataOwnerReferencesController{}
}

func (TsConditionPathSelectorMetadataOwnerReferences) RequiresOwnerReference() TsConditionPathSelectorMetadataOwnerReferencesRequiresOwnerReference {
	return TsConditionPathSelectorMetadataOwnerReferencesRequiresOwnerReference{}
}

func (TsConditionPathSelectorMetadataOwnerReferences) UnsetOnDelete() TsConditionPathSelectorMetadataOwnerReferencesUnsetOnDelete {
	return TsConditionPathSelectorMetadataOwnerReferencesUnsetOnDelete{}
}

type TsConditionPathSelectorMetadataOwnerReferencesKind struct{}

func (TsConditionPathSelectorMetadataOwnerReferencesKind) FieldPath() *TsCondition_FieldSubPath {
	return &TsCondition_FieldSubPath{
		selector: TsCondition_FieldPathSelectorMetadata,
		subPath:  meta.NewMetaFieldPathBuilder().OwnerReferences().Kind().FieldPath(),
	}
}

func (s TsConditionPathSelectorMetadataOwnerReferencesKind) WithValue(value string) *TsCondition_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*TsCondition_FieldSubPathValue)
}

func (s TsConditionPathSelectorMetadataOwnerReferencesKind) WithArrayOfValues(values []string) *TsCondition_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*TsCondition_FieldSubPathArrayOfValues)
}

type TsConditionPathSelectorMetadataOwnerReferencesVersion struct{}

func (TsConditionPathSelectorMetadataOwnerReferencesVersion) FieldPath() *TsCondition_FieldSubPath {
	return &TsCondition_FieldSubPath{
		selector: TsCondition_FieldPathSelectorMetadata,
		subPath:  meta.NewMetaFieldPathBuilder().OwnerReferences().Version().FieldPath(),
	}
}

func (s TsConditionPathSelectorMetadataOwnerReferencesVersion) WithValue(value string) *TsCondition_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*TsCondition_FieldSubPathValue)
}

func (s TsConditionPathSelectorMetadataOwnerReferencesVersion) WithArrayOfValues(values []string) *TsCondition_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*TsCondition_FieldSubPathArrayOfValues)
}

type TsConditionPathSelectorMetadataOwnerReferencesName struct{}

func (TsConditionPathSelectorMetadataOwnerReferencesName) FieldPath() *TsCondition_FieldSubPath {
	return &TsCondition_FieldSubPath{
		selector: TsCondition_FieldPathSelectorMetadata,
		subPath:  meta.NewMetaFieldPathBuilder().OwnerReferences().Name().FieldPath(),
	}
}

func (s TsConditionPathSelectorMetadataOwnerReferencesName) WithValue(value string) *TsCondition_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*TsCondition_FieldSubPathValue)
}

func (s TsConditionPathSelectorMetadataOwnerReferencesName) WithArrayOfValues(values []string) *TsCondition_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*TsCondition_FieldSubPathArrayOfValues)
}

type TsConditionPathSelectorMetadataOwnerReferencesRegion struct{}

func (TsConditionPathSelectorMetadataOwnerReferencesRegion) FieldPath() *TsCondition_FieldSubPath {
	return &TsCondition_FieldSubPath{
		selector: TsCondition_FieldPathSelectorMetadata,
		subPath:  meta.NewMetaFieldPathBuilder().OwnerReferences().Region().FieldPath(),
	}
}

func (s TsConditionPathSelectorMetadataOwnerReferencesRegion) WithValue(value string) *TsCondition_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*TsCondition_FieldSubPathValue)
}

func (s TsConditionPathSelectorMetadataOwnerReferencesRegion) WithArrayOfValues(values []string) *TsCondition_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*TsCondition_FieldSubPathArrayOfValues)
}

type TsConditionPathSelectorMetadataOwnerReferencesController struct{}

func (TsConditionPathSelectorMetadataOwnerReferencesController) FieldPath() *TsCondition_FieldSubPath {
	return &TsCondition_FieldSubPath{
		selector: TsCondition_FieldPathSelectorMetadata,
		subPath:  meta.NewMetaFieldPathBuilder().OwnerReferences().Controller().FieldPath(),
	}
}

func (s TsConditionPathSelectorMetadataOwnerReferencesController) WithValue(value bool) *TsCondition_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*TsCondition_FieldSubPathValue)
}

func (s TsConditionPathSelectorMetadataOwnerReferencesController) WithArrayOfValues(values []bool) *TsCondition_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*TsCondition_FieldSubPathArrayOfValues)
}

type TsConditionPathSelectorMetadataOwnerReferencesRequiresOwnerReference struct{}

func (TsConditionPathSelectorMetadataOwnerReferencesRequiresOwnerReference) FieldPath() *TsCondition_FieldSubPath {
	return &TsCondition_FieldSubPath{
		selector: TsCondition_FieldPathSelectorMetadata,
		subPath:  meta.NewMetaFieldPathBuilder().OwnerReferences().RequiresOwnerReference().FieldPath(),
	}
}

func (s TsConditionPathSelectorMetadataOwnerReferencesRequiresOwnerReference) WithValue(value bool) *TsCondition_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*TsCondition_FieldSubPathValue)
}

func (s TsConditionPathSelectorMetadataOwnerReferencesRequiresOwnerReference) WithArrayOfValues(values []bool) *TsCondition_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*TsCondition_FieldSubPathArrayOfValues)
}

type TsConditionPathSelectorMetadataOwnerReferencesUnsetOnDelete struct{}

func (TsConditionPathSelectorMetadataOwnerReferencesUnsetOnDelete) FieldPath() *TsCondition_FieldSubPath {
	return &TsCondition_FieldSubPath{
		selector: TsCondition_FieldPathSelectorMetadata,
		subPath:  meta.NewMetaFieldPathBuilder().OwnerReferences().UnsetOnDelete().FieldPath(),
	}
}

func (s TsConditionPathSelectorMetadataOwnerReferencesUnsetOnDelete) WithValue(value bool) *TsCondition_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*TsCondition_FieldSubPathValue)
}

func (s TsConditionPathSelectorMetadataOwnerReferencesUnsetOnDelete) WithArrayOfValues(values []bool) *TsCondition_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*TsCondition_FieldSubPathArrayOfValues)
}

type TsConditionPathSelectorMetadataShards struct{}

func (TsConditionPathSelectorMetadataShards) FieldPath() *TsCondition_FieldSubPath {
	return &TsCondition_FieldSubPath{
		selector: TsCondition_FieldPathSelectorMetadata,
		subPath:  meta.NewMetaFieldPathBuilder().Shards().FieldPath(),
	}
}

func (s TsConditionPathSelectorMetadataShards) WithValue(value map[string]int64) *TsCondition_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*TsCondition_FieldSubPathValue)
}

func (s TsConditionPathSelectorMetadataShards) WithArrayOfValues(values []map[string]int64) *TsCondition_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*TsCondition_FieldSubPathArrayOfValues)
}

func (TsConditionPathSelectorMetadataShards) WithKey(key string) TsConditionMapPathSelectorMetadataShards {
	return TsConditionMapPathSelectorMetadataShards{key: key}
}

type TsConditionMapPathSelectorMetadataShards struct {
	key string
}

func (s TsConditionMapPathSelectorMetadataShards) FieldPath() *TsCondition_FieldSubPath {
	return &TsCondition_FieldSubPath{
		selector: TsCondition_FieldPathSelectorMetadata,
		subPath:  meta.NewMetaFieldPathBuilder().Shards().WithKey(s.key).FieldPath(),
	}
}

func (s TsConditionMapPathSelectorMetadataShards) WithValue(value int64) *TsCondition_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*TsCondition_FieldSubPathValue)
}

func (s TsConditionMapPathSelectorMetadataShards) WithArrayOfValues(values []int64) *TsCondition_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*TsCondition_FieldSubPathArrayOfValues)
}

type TsConditionPathSelectorMetadataSyncing struct{}

func (TsConditionPathSelectorMetadataSyncing) FieldPath() *TsCondition_FieldSubPath {
	return &TsCondition_FieldSubPath{
		selector: TsCondition_FieldPathSelectorMetadata,
		subPath:  meta.NewMetaFieldPathBuilder().Syncing().FieldPath(),
	}
}

func (s TsConditionPathSelectorMetadataSyncing) WithValue(value *meta.SyncingMeta) *TsCondition_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*TsCondition_FieldSubPathValue)
}

func (s TsConditionPathSelectorMetadataSyncing) WithArrayOfValues(values []*meta.SyncingMeta) *TsCondition_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*TsCondition_FieldSubPathArrayOfValues)
}

func (TsConditionPathSelectorMetadataSyncing) OwningRegion() TsConditionPathSelectorMetadataSyncingOwningRegion {
	return TsConditionPathSelectorMetadataSyncingOwningRegion{}
}

func (TsConditionPathSelectorMetadataSyncing) Regions() TsConditionPathSelectorMetadataSyncingRegions {
	return TsConditionPathSelectorMetadataSyncingRegions{}
}

type TsConditionPathSelectorMetadataSyncingOwningRegion struct{}

func (TsConditionPathSelectorMetadataSyncingOwningRegion) FieldPath() *TsCondition_FieldSubPath {
	return &TsCondition_FieldSubPath{
		selector: TsCondition_FieldPathSelectorMetadata,
		subPath:  meta.NewMetaFieldPathBuilder().Syncing().OwningRegion().FieldPath(),
	}
}

func (s TsConditionPathSelectorMetadataSyncingOwningRegion) WithValue(value string) *TsCondition_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*TsCondition_FieldSubPathValue)
}

func (s TsConditionPathSelectorMetadataSyncingOwningRegion) WithArrayOfValues(values []string) *TsCondition_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*TsCondition_FieldSubPathArrayOfValues)
}

type TsConditionPathSelectorMetadataSyncingRegions struct{}

func (TsConditionPathSelectorMetadataSyncingRegions) FieldPath() *TsCondition_FieldSubPath {
	return &TsCondition_FieldSubPath{
		selector: TsCondition_FieldPathSelectorMetadata,
		subPath:  meta.NewMetaFieldPathBuilder().Syncing().Regions().FieldPath(),
	}
}

func (s TsConditionPathSelectorMetadataSyncingRegions) WithValue(value []string) *TsCondition_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*TsCondition_FieldSubPathValue)
}

func (s TsConditionPathSelectorMetadataSyncingRegions) WithArrayOfValues(values [][]string) *TsCondition_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*TsCondition_FieldSubPathArrayOfValues)
}

func (s TsConditionPathSelectorMetadataSyncingRegions) WithItemValue(value string) *TsCondition_FieldSubPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*TsCondition_FieldSubPathArrayItemValue)
}

type TsConditionPathSelectorMetadataLifecycle struct{}

func (TsConditionPathSelectorMetadataLifecycle) FieldPath() *TsCondition_FieldSubPath {
	return &TsCondition_FieldSubPath{
		selector: TsCondition_FieldPathSelectorMetadata,
		subPath:  meta.NewMetaFieldPathBuilder().Lifecycle().FieldPath(),
	}
}

func (s TsConditionPathSelectorMetadataLifecycle) WithValue(value *meta.Lifecycle) *TsCondition_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*TsCondition_FieldSubPathValue)
}

func (s TsConditionPathSelectorMetadataLifecycle) WithArrayOfValues(values []*meta.Lifecycle) *TsCondition_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*TsCondition_FieldSubPathArrayOfValues)
}

func (TsConditionPathSelectorMetadataLifecycle) State() TsConditionPathSelectorMetadataLifecycleState {
	return TsConditionPathSelectorMetadataLifecycleState{}
}

func (TsConditionPathSelectorMetadataLifecycle) BlockDeletion() TsConditionPathSelectorMetadataLifecycleBlockDeletion {
	return TsConditionPathSelectorMetadataLifecycleBlockDeletion{}
}

type TsConditionPathSelectorMetadataLifecycleState struct{}

func (TsConditionPathSelectorMetadataLifecycleState) FieldPath() *TsCondition_FieldSubPath {
	return &TsCondition_FieldSubPath{
		selector: TsCondition_FieldPathSelectorMetadata,
		subPath:  meta.NewMetaFieldPathBuilder().Lifecycle().State().FieldPath(),
	}
}

func (s TsConditionPathSelectorMetadataLifecycleState) WithValue(value meta.Lifecycle_State) *TsCondition_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*TsCondition_FieldSubPathValue)
}

func (s TsConditionPathSelectorMetadataLifecycleState) WithArrayOfValues(values []meta.Lifecycle_State) *TsCondition_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*TsCondition_FieldSubPathArrayOfValues)
}

type TsConditionPathSelectorMetadataLifecycleBlockDeletion struct{}

func (TsConditionPathSelectorMetadataLifecycleBlockDeletion) FieldPath() *TsCondition_FieldSubPath {
	return &TsCondition_FieldSubPath{
		selector: TsCondition_FieldPathSelectorMetadata,
		subPath:  meta.NewMetaFieldPathBuilder().Lifecycle().BlockDeletion().FieldPath(),
	}
}

func (s TsConditionPathSelectorMetadataLifecycleBlockDeletion) WithValue(value bool) *TsCondition_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*TsCondition_FieldSubPathValue)
}

func (s TsConditionPathSelectorMetadataLifecycleBlockDeletion) WithArrayOfValues(values []bool) *TsCondition_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*TsCondition_FieldSubPathArrayOfValues)
}

type TsConditionPathSelectorMetadataServices struct{}

func (TsConditionPathSelectorMetadataServices) FieldPath() *TsCondition_FieldSubPath {
	return &TsCondition_FieldSubPath{
		selector: TsCondition_FieldPathSelectorMetadata,
		subPath:  meta.NewMetaFieldPathBuilder().Services().FieldPath(),
	}
}

func (s TsConditionPathSelectorMetadataServices) WithValue(value *meta.ServicesInfo) *TsCondition_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*TsCondition_FieldSubPathValue)
}

func (s TsConditionPathSelectorMetadataServices) WithArrayOfValues(values []*meta.ServicesInfo) *TsCondition_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*TsCondition_FieldSubPathArrayOfValues)
}

func (TsConditionPathSelectorMetadataServices) OwningService() TsConditionPathSelectorMetadataServicesOwningService {
	return TsConditionPathSelectorMetadataServicesOwningService{}
}

func (TsConditionPathSelectorMetadataServices) AllowedServices() TsConditionPathSelectorMetadataServicesAllowedServices {
	return TsConditionPathSelectorMetadataServicesAllowedServices{}
}

type TsConditionPathSelectorMetadataServicesOwningService struct{}

func (TsConditionPathSelectorMetadataServicesOwningService) FieldPath() *TsCondition_FieldSubPath {
	return &TsCondition_FieldSubPath{
		selector: TsCondition_FieldPathSelectorMetadata,
		subPath:  meta.NewMetaFieldPathBuilder().Services().OwningService().FieldPath(),
	}
}

func (s TsConditionPathSelectorMetadataServicesOwningService) WithValue(value string) *TsCondition_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*TsCondition_FieldSubPathValue)
}

func (s TsConditionPathSelectorMetadataServicesOwningService) WithArrayOfValues(values []string) *TsCondition_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*TsCondition_FieldSubPathArrayOfValues)
}

type TsConditionPathSelectorMetadataServicesAllowedServices struct{}

func (TsConditionPathSelectorMetadataServicesAllowedServices) FieldPath() *TsCondition_FieldSubPath {
	return &TsCondition_FieldSubPath{
		selector: TsCondition_FieldPathSelectorMetadata,
		subPath:  meta.NewMetaFieldPathBuilder().Services().AllowedServices().FieldPath(),
	}
}

func (s TsConditionPathSelectorMetadataServicesAllowedServices) WithValue(value []string) *TsCondition_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*TsCondition_FieldSubPathValue)
}

func (s TsConditionPathSelectorMetadataServicesAllowedServices) WithArrayOfValues(values [][]string) *TsCondition_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*TsCondition_FieldSubPathArrayOfValues)
}

func (s TsConditionPathSelectorMetadataServicesAllowedServices) WithItemValue(value string) *TsCondition_FieldSubPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*TsCondition_FieldSubPathArrayItemValue)
}

type TsConditionPathSelectorDisplayName struct{}

func (TsConditionPathSelectorDisplayName) FieldPath() *TsCondition_FieldTerminalPath {
	return &TsCondition_FieldTerminalPath{selector: TsCondition_FieldPathSelectorDisplayName}
}

func (s TsConditionPathSelectorDisplayName) WithValue(value string) *TsCondition_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*TsCondition_FieldTerminalPathValue)
}

func (s TsConditionPathSelectorDisplayName) WithArrayOfValues(values []string) *TsCondition_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*TsCondition_FieldTerminalPathArrayOfValues)
}

type TsConditionPathSelectorDescription struct{}

func (TsConditionPathSelectorDescription) FieldPath() *TsCondition_FieldTerminalPath {
	return &TsCondition_FieldTerminalPath{selector: TsCondition_FieldPathSelectorDescription}
}

func (s TsConditionPathSelectorDescription) WithValue(value string) *TsCondition_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*TsCondition_FieldTerminalPathValue)
}

func (s TsConditionPathSelectorDescription) WithArrayOfValues(values []string) *TsCondition_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*TsCondition_FieldTerminalPathArrayOfValues)
}

type TsConditionPathSelectorSupportingDocs struct{}

func (TsConditionPathSelectorSupportingDocs) FieldPath() *TsCondition_FieldTerminalPath {
	return &TsCondition_FieldTerminalPath{selector: TsCondition_FieldPathSelectorSupportingDocs}
}

func (s TsConditionPathSelectorSupportingDocs) WithValue(value []*document.Reference) *TsCondition_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*TsCondition_FieldTerminalPathValue)
}

func (s TsConditionPathSelectorSupportingDocs) WithArrayOfValues(values [][]*document.Reference) *TsCondition_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*TsCondition_FieldTerminalPathArrayOfValues)
}

func (s TsConditionPathSelectorSupportingDocs) WithItemValue(value *document.Reference) *TsCondition_FieldTerminalPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*TsCondition_FieldTerminalPathArrayItemValue)
}

type TsConditionPathSelectorSpec struct{}

func (TsConditionPathSelectorSpec) FieldPath() *TsCondition_FieldTerminalPath {
	return &TsCondition_FieldTerminalPath{selector: TsCondition_FieldPathSelectorSpec}
}

func (s TsConditionPathSelectorSpec) WithValue(value *rcommon.TsCndSpec) *TsCondition_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*TsCondition_FieldTerminalPathValue)
}

func (s TsConditionPathSelectorSpec) WithArrayOfValues(values []*rcommon.TsCndSpec) *TsCondition_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*TsCondition_FieldTerminalPathArrayOfValues)
}

func (TsConditionPathSelectorSpec) WithSubPath(subPath rcommon.TsCndSpec_FieldPath) *TsCondition_FieldSubPath {
	return &TsCondition_FieldSubPath{selector: TsCondition_FieldPathSelectorSpec, subPath: subPath}
}

func (s TsConditionPathSelectorSpec) WithSubValue(subPathValue rcommon.TsCndSpec_FieldPathValue) *TsCondition_FieldSubPathValue {
	return &TsCondition_FieldSubPathValue{TsCondition_FieldPath: s.WithSubPath(subPathValue), subPathValue: subPathValue}
}

func (s TsConditionPathSelectorSpec) WithSubArrayOfValues(subPathArrayOfValues rcommon.TsCndSpec_FieldPathArrayOfValues) *TsCondition_FieldSubPathArrayOfValues {
	return &TsCondition_FieldSubPathArrayOfValues{TsCondition_FieldPath: s.WithSubPath(subPathArrayOfValues), subPathArrayOfValues: subPathArrayOfValues}
}

func (s TsConditionPathSelectorSpec) WithSubArrayItemValue(subPathArrayItemValue rcommon.TsCndSpec_FieldPathArrayItemValue) *TsCondition_FieldSubPathArrayItemValue {
	return &TsCondition_FieldSubPathArrayItemValue{TsCondition_FieldPath: s.WithSubPath(subPathArrayItemValue), subPathItemValue: subPathArrayItemValue}
}

func (TsConditionPathSelectorSpec) Queries() TsConditionPathSelectorSpecQueries {
	return TsConditionPathSelectorSpecQueries{}
}

func (TsConditionPathSelectorSpec) QueryGroupBy() TsConditionPathSelectorSpecQueryGroupBy {
	return TsConditionPathSelectorSpecQueryGroupBy{}
}

func (TsConditionPathSelectorSpec) ThresholdAlerting() TsConditionPathSelectorSpecThresholdAlerting {
	return TsConditionPathSelectorSpecThresholdAlerting{}
}

func (TsConditionPathSelectorSpec) AnomalyAlerting() TsConditionPathSelectorSpecAnomalyAlerting {
	return TsConditionPathSelectorSpecAnomalyAlerting{}
}

type TsConditionPathSelectorSpecQueries struct{}

func (TsConditionPathSelectorSpecQueries) FieldPath() *TsCondition_FieldSubPath {
	return &TsCondition_FieldSubPath{
		selector: TsCondition_FieldPathSelectorSpec,
		subPath:  rcommon.NewTsCndSpecFieldPathBuilder().Queries().FieldPath(),
	}
}

func (s TsConditionPathSelectorSpecQueries) WithValue(value []*rcommon.TsCndSpec_Query) *TsCondition_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*TsCondition_FieldSubPathValue)
}

func (s TsConditionPathSelectorSpecQueries) WithArrayOfValues(values [][]*rcommon.TsCndSpec_Query) *TsCondition_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*TsCondition_FieldSubPathArrayOfValues)
}

func (s TsConditionPathSelectorSpecQueries) WithItemValue(value *rcommon.TsCndSpec_Query) *TsCondition_FieldSubPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*TsCondition_FieldSubPathArrayItemValue)
}

func (TsConditionPathSelectorSpecQueries) Name() TsConditionPathSelectorSpecQueriesName {
	return TsConditionPathSelectorSpecQueriesName{}
}

func (TsConditionPathSelectorSpecQueries) Filter() TsConditionPathSelectorSpecQueriesFilter {
	return TsConditionPathSelectorSpecQueriesFilter{}
}

func (TsConditionPathSelectorSpecQueries) Aligner() TsConditionPathSelectorSpecQueriesAligner {
	return TsConditionPathSelectorSpecQueriesAligner{}
}

func (TsConditionPathSelectorSpecQueries) Reducer() TsConditionPathSelectorSpecQueriesReducer {
	return TsConditionPathSelectorSpecQueriesReducer{}
}

func (TsConditionPathSelectorSpecQueries) MaxValue() TsConditionPathSelectorSpecQueriesMaxValue {
	return TsConditionPathSelectorSpecQueriesMaxValue{}
}

type TsConditionPathSelectorSpecQueriesName struct{}

func (TsConditionPathSelectorSpecQueriesName) FieldPath() *TsCondition_FieldSubPath {
	return &TsCondition_FieldSubPath{
		selector: TsCondition_FieldPathSelectorSpec,
		subPath:  rcommon.NewTsCndSpecFieldPathBuilder().Queries().Name().FieldPath(),
	}
}

func (s TsConditionPathSelectorSpecQueriesName) WithValue(value string) *TsCondition_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*TsCondition_FieldSubPathValue)
}

func (s TsConditionPathSelectorSpecQueriesName) WithArrayOfValues(values []string) *TsCondition_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*TsCondition_FieldSubPathArrayOfValues)
}

type TsConditionPathSelectorSpecQueriesFilter struct{}

func (TsConditionPathSelectorSpecQueriesFilter) FieldPath() *TsCondition_FieldSubPath {
	return &TsCondition_FieldSubPath{
		selector: TsCondition_FieldPathSelectorSpec,
		subPath:  rcommon.NewTsCndSpecFieldPathBuilder().Queries().Filter().FieldPath(),
	}
}

func (s TsConditionPathSelectorSpecQueriesFilter) WithValue(value *monitoring_time_serie.Filter) *TsCondition_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*TsCondition_FieldSubPathValue)
}

func (s TsConditionPathSelectorSpecQueriesFilter) WithArrayOfValues(values []*monitoring_time_serie.Filter) *TsCondition_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*TsCondition_FieldSubPathArrayOfValues)
}

type TsConditionPathSelectorSpecQueriesAligner struct{}

func (TsConditionPathSelectorSpecQueriesAligner) FieldPath() *TsCondition_FieldSubPath {
	return &TsCondition_FieldSubPath{
		selector: TsCondition_FieldPathSelectorSpec,
		subPath:  rcommon.NewTsCndSpecFieldPathBuilder().Queries().Aligner().FieldPath(),
	}
}

func (s TsConditionPathSelectorSpecQueriesAligner) WithValue(value monitoring_common.Aggregation_Aligner) *TsCondition_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*TsCondition_FieldSubPathValue)
}

func (s TsConditionPathSelectorSpecQueriesAligner) WithArrayOfValues(values []monitoring_common.Aggregation_Aligner) *TsCondition_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*TsCondition_FieldSubPathArrayOfValues)
}

type TsConditionPathSelectorSpecQueriesReducer struct{}

func (TsConditionPathSelectorSpecQueriesReducer) FieldPath() *TsCondition_FieldSubPath {
	return &TsCondition_FieldSubPath{
		selector: TsCondition_FieldPathSelectorSpec,
		subPath:  rcommon.NewTsCndSpecFieldPathBuilder().Queries().Reducer().FieldPath(),
	}
}

func (s TsConditionPathSelectorSpecQueriesReducer) WithValue(value monitoring_common.Aggregation_Reducer) *TsCondition_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*TsCondition_FieldSubPathValue)
}

func (s TsConditionPathSelectorSpecQueriesReducer) WithArrayOfValues(values []monitoring_common.Aggregation_Reducer) *TsCondition_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*TsCondition_FieldSubPathArrayOfValues)
}

type TsConditionPathSelectorSpecQueriesMaxValue struct{}

func (TsConditionPathSelectorSpecQueriesMaxValue) FieldPath() *TsCondition_FieldSubPath {
	return &TsCondition_FieldSubPath{
		selector: TsCondition_FieldPathSelectorSpec,
		subPath:  rcommon.NewTsCndSpecFieldPathBuilder().Queries().MaxValue().FieldPath(),
	}
}

func (s TsConditionPathSelectorSpecQueriesMaxValue) WithValue(value float64) *TsCondition_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*TsCondition_FieldSubPathValue)
}

func (s TsConditionPathSelectorSpecQueriesMaxValue) WithArrayOfValues(values []float64) *TsCondition_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*TsCondition_FieldSubPathArrayOfValues)
}

type TsConditionPathSelectorSpecQueryGroupBy struct{}

func (TsConditionPathSelectorSpecQueryGroupBy) FieldPath() *TsCondition_FieldSubPath {
	return &TsCondition_FieldSubPath{
		selector: TsCondition_FieldPathSelectorSpec,
		subPath:  rcommon.NewTsCndSpecFieldPathBuilder().QueryGroupBy().FieldPath(),
	}
}

func (s TsConditionPathSelectorSpecQueryGroupBy) WithValue(value []string) *TsCondition_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*TsCondition_FieldSubPathValue)
}

func (s TsConditionPathSelectorSpecQueryGroupBy) WithArrayOfValues(values [][]string) *TsCondition_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*TsCondition_FieldSubPathArrayOfValues)
}

func (s TsConditionPathSelectorSpecQueryGroupBy) WithItemValue(value string) *TsCondition_FieldSubPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*TsCondition_FieldSubPathArrayItemValue)
}

type TsConditionPathSelectorSpecThresholdAlerting struct{}

func (TsConditionPathSelectorSpecThresholdAlerting) FieldPath() *TsCondition_FieldSubPath {
	return &TsCondition_FieldSubPath{
		selector: TsCondition_FieldPathSelectorSpec,
		subPath:  rcommon.NewTsCndSpecFieldPathBuilder().ThresholdAlerting().FieldPath(),
	}
}

func (s TsConditionPathSelectorSpecThresholdAlerting) WithValue(value *rcommon.TsCndSpec_ThresholdAlertingCfg) *TsCondition_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*TsCondition_FieldSubPathValue)
}

func (s TsConditionPathSelectorSpecThresholdAlerting) WithArrayOfValues(values []*rcommon.TsCndSpec_ThresholdAlertingCfg) *TsCondition_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*TsCondition_FieldSubPathArrayOfValues)
}

func (TsConditionPathSelectorSpecThresholdAlerting) Operator() TsConditionPathSelectorSpecThresholdAlertingOperator {
	return TsConditionPathSelectorSpecThresholdAlertingOperator{}
}

func (TsConditionPathSelectorSpecThresholdAlerting) AlignmentPeriod() TsConditionPathSelectorSpecThresholdAlertingAlignmentPeriod {
	return TsConditionPathSelectorSpecThresholdAlertingAlignmentPeriod{}
}

func (TsConditionPathSelectorSpecThresholdAlerting) RaiseAfter() TsConditionPathSelectorSpecThresholdAlertingRaiseAfter {
	return TsConditionPathSelectorSpecThresholdAlertingRaiseAfter{}
}

func (TsConditionPathSelectorSpecThresholdAlerting) SilenceAfter() TsConditionPathSelectorSpecThresholdAlertingSilenceAfter {
	return TsConditionPathSelectorSpecThresholdAlertingSilenceAfter{}
}

func (TsConditionPathSelectorSpecThresholdAlerting) PerQueryThresholds() TsConditionPathSelectorSpecThresholdAlertingPerQueryThresholds {
	return TsConditionPathSelectorSpecThresholdAlertingPerQueryThresholds{}
}

func (TsConditionPathSelectorSpecThresholdAlerting) AdaptiveThresholdsDetectionPeriod() TsConditionPathSelectorSpecThresholdAlertingAdaptiveThresholdsDetectionPeriod {
	return TsConditionPathSelectorSpecThresholdAlertingAdaptiveThresholdsDetectionPeriod{}
}

type TsConditionPathSelectorSpecThresholdAlertingOperator struct{}

func (TsConditionPathSelectorSpecThresholdAlertingOperator) FieldPath() *TsCondition_FieldSubPath {
	return &TsCondition_FieldSubPath{
		selector: TsCondition_FieldPathSelectorSpec,
		subPath:  rcommon.NewTsCndSpecFieldPathBuilder().ThresholdAlerting().Operator().FieldPath(),
	}
}

func (s TsConditionPathSelectorSpecThresholdAlertingOperator) WithValue(value rcommon.TsCndSpec_ThresholdAlertingCfg_Operator) *TsCondition_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*TsCondition_FieldSubPathValue)
}

func (s TsConditionPathSelectorSpecThresholdAlertingOperator) WithArrayOfValues(values []rcommon.TsCndSpec_ThresholdAlertingCfg_Operator) *TsCondition_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*TsCondition_FieldSubPathArrayOfValues)
}

type TsConditionPathSelectorSpecThresholdAlertingAlignmentPeriod struct{}

func (TsConditionPathSelectorSpecThresholdAlertingAlignmentPeriod) FieldPath() *TsCondition_FieldSubPath {
	return &TsCondition_FieldSubPath{
		selector: TsCondition_FieldPathSelectorSpec,
		subPath:  rcommon.NewTsCndSpecFieldPathBuilder().ThresholdAlerting().AlignmentPeriod().FieldPath(),
	}
}

func (s TsConditionPathSelectorSpecThresholdAlertingAlignmentPeriod) WithValue(value *durationpb.Duration) *TsCondition_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*TsCondition_FieldSubPathValue)
}

func (s TsConditionPathSelectorSpecThresholdAlertingAlignmentPeriod) WithArrayOfValues(values []*durationpb.Duration) *TsCondition_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*TsCondition_FieldSubPathArrayOfValues)
}

type TsConditionPathSelectorSpecThresholdAlertingRaiseAfter struct{}

func (TsConditionPathSelectorSpecThresholdAlertingRaiseAfter) FieldPath() *TsCondition_FieldSubPath {
	return &TsCondition_FieldSubPath{
		selector: TsCondition_FieldPathSelectorSpec,
		subPath:  rcommon.NewTsCndSpecFieldPathBuilder().ThresholdAlerting().RaiseAfter().FieldPath(),
	}
}

func (s TsConditionPathSelectorSpecThresholdAlertingRaiseAfter) WithValue(value *durationpb.Duration) *TsCondition_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*TsCondition_FieldSubPathValue)
}

func (s TsConditionPathSelectorSpecThresholdAlertingRaiseAfter) WithArrayOfValues(values []*durationpb.Duration) *TsCondition_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*TsCondition_FieldSubPathArrayOfValues)
}

type TsConditionPathSelectorSpecThresholdAlertingSilenceAfter struct{}

func (TsConditionPathSelectorSpecThresholdAlertingSilenceAfter) FieldPath() *TsCondition_FieldSubPath {
	return &TsCondition_FieldSubPath{
		selector: TsCondition_FieldPathSelectorSpec,
		subPath:  rcommon.NewTsCndSpecFieldPathBuilder().ThresholdAlerting().SilenceAfter().FieldPath(),
	}
}

func (s TsConditionPathSelectorSpecThresholdAlertingSilenceAfter) WithValue(value *durationpb.Duration) *TsCondition_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*TsCondition_FieldSubPathValue)
}

func (s TsConditionPathSelectorSpecThresholdAlertingSilenceAfter) WithArrayOfValues(values []*durationpb.Duration) *TsCondition_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*TsCondition_FieldSubPathArrayOfValues)
}

type TsConditionPathSelectorSpecThresholdAlertingPerQueryThresholds struct{}

func (TsConditionPathSelectorSpecThresholdAlertingPerQueryThresholds) FieldPath() *TsCondition_FieldSubPath {
	return &TsCondition_FieldSubPath{
		selector: TsCondition_FieldPathSelectorSpec,
		subPath:  rcommon.NewTsCndSpecFieldPathBuilder().ThresholdAlerting().PerQueryThresholds().FieldPath(),
	}
}

func (s TsConditionPathSelectorSpecThresholdAlertingPerQueryThresholds) WithValue(value []*rcommon.TsCndSpec_ThresholdAlertingCfg_AlertingThresholds) *TsCondition_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*TsCondition_FieldSubPathValue)
}

func (s TsConditionPathSelectorSpecThresholdAlertingPerQueryThresholds) WithArrayOfValues(values [][]*rcommon.TsCndSpec_ThresholdAlertingCfg_AlertingThresholds) *TsCondition_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*TsCondition_FieldSubPathArrayOfValues)
}

func (s TsConditionPathSelectorSpecThresholdAlertingPerQueryThresholds) WithItemValue(value *rcommon.TsCndSpec_ThresholdAlertingCfg_AlertingThresholds) *TsCondition_FieldSubPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*TsCondition_FieldSubPathArrayItemValue)
}

func (TsConditionPathSelectorSpecThresholdAlertingPerQueryThresholds) AutoAdaptUpper() TsConditionPathSelectorSpecThresholdAlertingPerQueryThresholdsAutoAdaptUpper {
	return TsConditionPathSelectorSpecThresholdAlertingPerQueryThresholdsAutoAdaptUpper{}
}

func (TsConditionPathSelectorSpecThresholdAlertingPerQueryThresholds) AutoAdaptLower() TsConditionPathSelectorSpecThresholdAlertingPerQueryThresholdsAutoAdaptLower {
	return TsConditionPathSelectorSpecThresholdAlertingPerQueryThresholdsAutoAdaptLower{}
}

func (TsConditionPathSelectorSpecThresholdAlertingPerQueryThresholds) MaxUpper() TsConditionPathSelectorSpecThresholdAlertingPerQueryThresholdsMaxUpper {
	return TsConditionPathSelectorSpecThresholdAlertingPerQueryThresholdsMaxUpper{}
}

func (TsConditionPathSelectorSpecThresholdAlertingPerQueryThresholds) MaxLower() TsConditionPathSelectorSpecThresholdAlertingPerQueryThresholdsMaxLower {
	return TsConditionPathSelectorSpecThresholdAlertingPerQueryThresholdsMaxLower{}
}

func (TsConditionPathSelectorSpecThresholdAlertingPerQueryThresholds) MinUpper() TsConditionPathSelectorSpecThresholdAlertingPerQueryThresholdsMinUpper {
	return TsConditionPathSelectorSpecThresholdAlertingPerQueryThresholdsMinUpper{}
}

func (TsConditionPathSelectorSpecThresholdAlertingPerQueryThresholds) MinLower() TsConditionPathSelectorSpecThresholdAlertingPerQueryThresholdsMinLower {
	return TsConditionPathSelectorSpecThresholdAlertingPerQueryThresholdsMinLower{}
}

type TsConditionPathSelectorSpecThresholdAlertingPerQueryThresholdsAutoAdaptUpper struct{}

func (TsConditionPathSelectorSpecThresholdAlertingPerQueryThresholdsAutoAdaptUpper) FieldPath() *TsCondition_FieldSubPath {
	return &TsCondition_FieldSubPath{
		selector: TsCondition_FieldPathSelectorSpec,
		subPath:  rcommon.NewTsCndSpecFieldPathBuilder().ThresholdAlerting().PerQueryThresholds().AutoAdaptUpper().FieldPath(),
	}
}

func (s TsConditionPathSelectorSpecThresholdAlertingPerQueryThresholdsAutoAdaptUpper) WithValue(value bool) *TsCondition_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*TsCondition_FieldSubPathValue)
}

func (s TsConditionPathSelectorSpecThresholdAlertingPerQueryThresholdsAutoAdaptUpper) WithArrayOfValues(values []bool) *TsCondition_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*TsCondition_FieldSubPathArrayOfValues)
}

type TsConditionPathSelectorSpecThresholdAlertingPerQueryThresholdsAutoAdaptLower struct{}

func (TsConditionPathSelectorSpecThresholdAlertingPerQueryThresholdsAutoAdaptLower) FieldPath() *TsCondition_FieldSubPath {
	return &TsCondition_FieldSubPath{
		selector: TsCondition_FieldPathSelectorSpec,
		subPath:  rcommon.NewTsCndSpecFieldPathBuilder().ThresholdAlerting().PerQueryThresholds().AutoAdaptLower().FieldPath(),
	}
}

func (s TsConditionPathSelectorSpecThresholdAlertingPerQueryThresholdsAutoAdaptLower) WithValue(value bool) *TsCondition_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*TsCondition_FieldSubPathValue)
}

func (s TsConditionPathSelectorSpecThresholdAlertingPerQueryThresholdsAutoAdaptLower) WithArrayOfValues(values []bool) *TsCondition_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*TsCondition_FieldSubPathArrayOfValues)
}

type TsConditionPathSelectorSpecThresholdAlertingPerQueryThresholdsMaxUpper struct{}

func (TsConditionPathSelectorSpecThresholdAlertingPerQueryThresholdsMaxUpper) FieldPath() *TsCondition_FieldSubPath {
	return &TsCondition_FieldSubPath{
		selector: TsCondition_FieldPathSelectorSpec,
		subPath:  rcommon.NewTsCndSpecFieldPathBuilder().ThresholdAlerting().PerQueryThresholds().MaxUpper().FieldPath(),
	}
}

func (s TsConditionPathSelectorSpecThresholdAlertingPerQueryThresholdsMaxUpper) WithValue(value *rcommon.AlertingThreshold) *TsCondition_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*TsCondition_FieldSubPathValue)
}

func (s TsConditionPathSelectorSpecThresholdAlertingPerQueryThresholdsMaxUpper) WithArrayOfValues(values []*rcommon.AlertingThreshold) *TsCondition_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*TsCondition_FieldSubPathArrayOfValues)
}

func (TsConditionPathSelectorSpecThresholdAlertingPerQueryThresholdsMaxUpper) Value() TsConditionPathSelectorSpecThresholdAlertingPerQueryThresholdsMaxUpperValue {
	return TsConditionPathSelectorSpecThresholdAlertingPerQueryThresholdsMaxUpperValue{}
}

func (TsConditionPathSelectorSpecThresholdAlertingPerQueryThresholdsMaxUpper) IsInclusive() TsConditionPathSelectorSpecThresholdAlertingPerQueryThresholdsMaxUpperIsInclusive {
	return TsConditionPathSelectorSpecThresholdAlertingPerQueryThresholdsMaxUpperIsInclusive{}
}

type TsConditionPathSelectorSpecThresholdAlertingPerQueryThresholdsMaxUpperValue struct{}

func (TsConditionPathSelectorSpecThresholdAlertingPerQueryThresholdsMaxUpperValue) FieldPath() *TsCondition_FieldSubPath {
	return &TsCondition_FieldSubPath{
		selector: TsCondition_FieldPathSelectorSpec,
		subPath:  rcommon.NewTsCndSpecFieldPathBuilder().ThresholdAlerting().PerQueryThresholds().MaxUpper().Value().FieldPath(),
	}
}

func (s TsConditionPathSelectorSpecThresholdAlertingPerQueryThresholdsMaxUpperValue) WithValue(value float64) *TsCondition_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*TsCondition_FieldSubPathValue)
}

func (s TsConditionPathSelectorSpecThresholdAlertingPerQueryThresholdsMaxUpperValue) WithArrayOfValues(values []float64) *TsCondition_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*TsCondition_FieldSubPathArrayOfValues)
}

type TsConditionPathSelectorSpecThresholdAlertingPerQueryThresholdsMaxUpperIsInclusive struct{}

func (TsConditionPathSelectorSpecThresholdAlertingPerQueryThresholdsMaxUpperIsInclusive) FieldPath() *TsCondition_FieldSubPath {
	return &TsCondition_FieldSubPath{
		selector: TsCondition_FieldPathSelectorSpec,
		subPath:  rcommon.NewTsCndSpecFieldPathBuilder().ThresholdAlerting().PerQueryThresholds().MaxUpper().IsInclusive().FieldPath(),
	}
}

func (s TsConditionPathSelectorSpecThresholdAlertingPerQueryThresholdsMaxUpperIsInclusive) WithValue(value bool) *TsCondition_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*TsCondition_FieldSubPathValue)
}

func (s TsConditionPathSelectorSpecThresholdAlertingPerQueryThresholdsMaxUpperIsInclusive) WithArrayOfValues(values []bool) *TsCondition_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*TsCondition_FieldSubPathArrayOfValues)
}

type TsConditionPathSelectorSpecThresholdAlertingPerQueryThresholdsMaxLower struct{}

func (TsConditionPathSelectorSpecThresholdAlertingPerQueryThresholdsMaxLower) FieldPath() *TsCondition_FieldSubPath {
	return &TsCondition_FieldSubPath{
		selector: TsCondition_FieldPathSelectorSpec,
		subPath:  rcommon.NewTsCndSpecFieldPathBuilder().ThresholdAlerting().PerQueryThresholds().MaxLower().FieldPath(),
	}
}

func (s TsConditionPathSelectorSpecThresholdAlertingPerQueryThresholdsMaxLower) WithValue(value *rcommon.AlertingThreshold) *TsCondition_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*TsCondition_FieldSubPathValue)
}

func (s TsConditionPathSelectorSpecThresholdAlertingPerQueryThresholdsMaxLower) WithArrayOfValues(values []*rcommon.AlertingThreshold) *TsCondition_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*TsCondition_FieldSubPathArrayOfValues)
}

func (TsConditionPathSelectorSpecThresholdAlertingPerQueryThresholdsMaxLower) Value() TsConditionPathSelectorSpecThresholdAlertingPerQueryThresholdsMaxLowerValue {
	return TsConditionPathSelectorSpecThresholdAlertingPerQueryThresholdsMaxLowerValue{}
}

func (TsConditionPathSelectorSpecThresholdAlertingPerQueryThresholdsMaxLower) IsInclusive() TsConditionPathSelectorSpecThresholdAlertingPerQueryThresholdsMaxLowerIsInclusive {
	return TsConditionPathSelectorSpecThresholdAlertingPerQueryThresholdsMaxLowerIsInclusive{}
}

type TsConditionPathSelectorSpecThresholdAlertingPerQueryThresholdsMaxLowerValue struct{}

func (TsConditionPathSelectorSpecThresholdAlertingPerQueryThresholdsMaxLowerValue) FieldPath() *TsCondition_FieldSubPath {
	return &TsCondition_FieldSubPath{
		selector: TsCondition_FieldPathSelectorSpec,
		subPath:  rcommon.NewTsCndSpecFieldPathBuilder().ThresholdAlerting().PerQueryThresholds().MaxLower().Value().FieldPath(),
	}
}

func (s TsConditionPathSelectorSpecThresholdAlertingPerQueryThresholdsMaxLowerValue) WithValue(value float64) *TsCondition_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*TsCondition_FieldSubPathValue)
}

func (s TsConditionPathSelectorSpecThresholdAlertingPerQueryThresholdsMaxLowerValue) WithArrayOfValues(values []float64) *TsCondition_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*TsCondition_FieldSubPathArrayOfValues)
}

type TsConditionPathSelectorSpecThresholdAlertingPerQueryThresholdsMaxLowerIsInclusive struct{}

func (TsConditionPathSelectorSpecThresholdAlertingPerQueryThresholdsMaxLowerIsInclusive) FieldPath() *TsCondition_FieldSubPath {
	return &TsCondition_FieldSubPath{
		selector: TsCondition_FieldPathSelectorSpec,
		subPath:  rcommon.NewTsCndSpecFieldPathBuilder().ThresholdAlerting().PerQueryThresholds().MaxLower().IsInclusive().FieldPath(),
	}
}

func (s TsConditionPathSelectorSpecThresholdAlertingPerQueryThresholdsMaxLowerIsInclusive) WithValue(value bool) *TsCondition_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*TsCondition_FieldSubPathValue)
}

func (s TsConditionPathSelectorSpecThresholdAlertingPerQueryThresholdsMaxLowerIsInclusive) WithArrayOfValues(values []bool) *TsCondition_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*TsCondition_FieldSubPathArrayOfValues)
}

type TsConditionPathSelectorSpecThresholdAlertingPerQueryThresholdsMinUpper struct{}

func (TsConditionPathSelectorSpecThresholdAlertingPerQueryThresholdsMinUpper) FieldPath() *TsCondition_FieldSubPath {
	return &TsCondition_FieldSubPath{
		selector: TsCondition_FieldPathSelectorSpec,
		subPath:  rcommon.NewTsCndSpecFieldPathBuilder().ThresholdAlerting().PerQueryThresholds().MinUpper().FieldPath(),
	}
}

func (s TsConditionPathSelectorSpecThresholdAlertingPerQueryThresholdsMinUpper) WithValue(value *rcommon.AlertingThreshold) *TsCondition_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*TsCondition_FieldSubPathValue)
}

func (s TsConditionPathSelectorSpecThresholdAlertingPerQueryThresholdsMinUpper) WithArrayOfValues(values []*rcommon.AlertingThreshold) *TsCondition_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*TsCondition_FieldSubPathArrayOfValues)
}

func (TsConditionPathSelectorSpecThresholdAlertingPerQueryThresholdsMinUpper) Value() TsConditionPathSelectorSpecThresholdAlertingPerQueryThresholdsMinUpperValue {
	return TsConditionPathSelectorSpecThresholdAlertingPerQueryThresholdsMinUpperValue{}
}

func (TsConditionPathSelectorSpecThresholdAlertingPerQueryThresholdsMinUpper) IsInclusive() TsConditionPathSelectorSpecThresholdAlertingPerQueryThresholdsMinUpperIsInclusive {
	return TsConditionPathSelectorSpecThresholdAlertingPerQueryThresholdsMinUpperIsInclusive{}
}

type TsConditionPathSelectorSpecThresholdAlertingPerQueryThresholdsMinUpperValue struct{}

func (TsConditionPathSelectorSpecThresholdAlertingPerQueryThresholdsMinUpperValue) FieldPath() *TsCondition_FieldSubPath {
	return &TsCondition_FieldSubPath{
		selector: TsCondition_FieldPathSelectorSpec,
		subPath:  rcommon.NewTsCndSpecFieldPathBuilder().ThresholdAlerting().PerQueryThresholds().MinUpper().Value().FieldPath(),
	}
}

func (s TsConditionPathSelectorSpecThresholdAlertingPerQueryThresholdsMinUpperValue) WithValue(value float64) *TsCondition_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*TsCondition_FieldSubPathValue)
}

func (s TsConditionPathSelectorSpecThresholdAlertingPerQueryThresholdsMinUpperValue) WithArrayOfValues(values []float64) *TsCondition_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*TsCondition_FieldSubPathArrayOfValues)
}

type TsConditionPathSelectorSpecThresholdAlertingPerQueryThresholdsMinUpperIsInclusive struct{}

func (TsConditionPathSelectorSpecThresholdAlertingPerQueryThresholdsMinUpperIsInclusive) FieldPath() *TsCondition_FieldSubPath {
	return &TsCondition_FieldSubPath{
		selector: TsCondition_FieldPathSelectorSpec,
		subPath:  rcommon.NewTsCndSpecFieldPathBuilder().ThresholdAlerting().PerQueryThresholds().MinUpper().IsInclusive().FieldPath(),
	}
}

func (s TsConditionPathSelectorSpecThresholdAlertingPerQueryThresholdsMinUpperIsInclusive) WithValue(value bool) *TsCondition_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*TsCondition_FieldSubPathValue)
}

func (s TsConditionPathSelectorSpecThresholdAlertingPerQueryThresholdsMinUpperIsInclusive) WithArrayOfValues(values []bool) *TsCondition_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*TsCondition_FieldSubPathArrayOfValues)
}

type TsConditionPathSelectorSpecThresholdAlertingPerQueryThresholdsMinLower struct{}

func (TsConditionPathSelectorSpecThresholdAlertingPerQueryThresholdsMinLower) FieldPath() *TsCondition_FieldSubPath {
	return &TsCondition_FieldSubPath{
		selector: TsCondition_FieldPathSelectorSpec,
		subPath:  rcommon.NewTsCndSpecFieldPathBuilder().ThresholdAlerting().PerQueryThresholds().MinLower().FieldPath(),
	}
}

func (s TsConditionPathSelectorSpecThresholdAlertingPerQueryThresholdsMinLower) WithValue(value *rcommon.AlertingThreshold) *TsCondition_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*TsCondition_FieldSubPathValue)
}

func (s TsConditionPathSelectorSpecThresholdAlertingPerQueryThresholdsMinLower) WithArrayOfValues(values []*rcommon.AlertingThreshold) *TsCondition_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*TsCondition_FieldSubPathArrayOfValues)
}

func (TsConditionPathSelectorSpecThresholdAlertingPerQueryThresholdsMinLower) Value() TsConditionPathSelectorSpecThresholdAlertingPerQueryThresholdsMinLowerValue {
	return TsConditionPathSelectorSpecThresholdAlertingPerQueryThresholdsMinLowerValue{}
}

func (TsConditionPathSelectorSpecThresholdAlertingPerQueryThresholdsMinLower) IsInclusive() TsConditionPathSelectorSpecThresholdAlertingPerQueryThresholdsMinLowerIsInclusive {
	return TsConditionPathSelectorSpecThresholdAlertingPerQueryThresholdsMinLowerIsInclusive{}
}

type TsConditionPathSelectorSpecThresholdAlertingPerQueryThresholdsMinLowerValue struct{}

func (TsConditionPathSelectorSpecThresholdAlertingPerQueryThresholdsMinLowerValue) FieldPath() *TsCondition_FieldSubPath {
	return &TsCondition_FieldSubPath{
		selector: TsCondition_FieldPathSelectorSpec,
		subPath:  rcommon.NewTsCndSpecFieldPathBuilder().ThresholdAlerting().PerQueryThresholds().MinLower().Value().FieldPath(),
	}
}

func (s TsConditionPathSelectorSpecThresholdAlertingPerQueryThresholdsMinLowerValue) WithValue(value float64) *TsCondition_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*TsCondition_FieldSubPathValue)
}

func (s TsConditionPathSelectorSpecThresholdAlertingPerQueryThresholdsMinLowerValue) WithArrayOfValues(values []float64) *TsCondition_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*TsCondition_FieldSubPathArrayOfValues)
}

type TsConditionPathSelectorSpecThresholdAlertingPerQueryThresholdsMinLowerIsInclusive struct{}

func (TsConditionPathSelectorSpecThresholdAlertingPerQueryThresholdsMinLowerIsInclusive) FieldPath() *TsCondition_FieldSubPath {
	return &TsCondition_FieldSubPath{
		selector: TsCondition_FieldPathSelectorSpec,
		subPath:  rcommon.NewTsCndSpecFieldPathBuilder().ThresholdAlerting().PerQueryThresholds().MinLower().IsInclusive().FieldPath(),
	}
}

func (s TsConditionPathSelectorSpecThresholdAlertingPerQueryThresholdsMinLowerIsInclusive) WithValue(value bool) *TsCondition_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*TsCondition_FieldSubPathValue)
}

func (s TsConditionPathSelectorSpecThresholdAlertingPerQueryThresholdsMinLowerIsInclusive) WithArrayOfValues(values []bool) *TsCondition_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*TsCondition_FieldSubPathArrayOfValues)
}

type TsConditionPathSelectorSpecThresholdAlertingAdaptiveThresholdsDetectionPeriod struct{}

func (TsConditionPathSelectorSpecThresholdAlertingAdaptiveThresholdsDetectionPeriod) FieldPath() *TsCondition_FieldSubPath {
	return &TsCondition_FieldSubPath{
		selector: TsCondition_FieldPathSelectorSpec,
		subPath:  rcommon.NewTsCndSpecFieldPathBuilder().ThresholdAlerting().AdaptiveThresholdsDetectionPeriod().FieldPath(),
	}
}

func (s TsConditionPathSelectorSpecThresholdAlertingAdaptiveThresholdsDetectionPeriod) WithValue(value *durationpb.Duration) *TsCondition_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*TsCondition_FieldSubPathValue)
}

func (s TsConditionPathSelectorSpecThresholdAlertingAdaptiveThresholdsDetectionPeriod) WithArrayOfValues(values []*durationpb.Duration) *TsCondition_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*TsCondition_FieldSubPathArrayOfValues)
}

type TsConditionPathSelectorSpecAnomalyAlerting struct{}

func (TsConditionPathSelectorSpecAnomalyAlerting) FieldPath() *TsCondition_FieldSubPath {
	return &TsCondition_FieldSubPath{
		selector: TsCondition_FieldPathSelectorSpec,
		subPath:  rcommon.NewTsCndSpecFieldPathBuilder().AnomalyAlerting().FieldPath(),
	}
}

func (s TsConditionPathSelectorSpecAnomalyAlerting) WithValue(value []*rcommon.TsCndSpec_AnomalyAlertingCfg) *TsCondition_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*TsCondition_FieldSubPathValue)
}

func (s TsConditionPathSelectorSpecAnomalyAlerting) WithArrayOfValues(values [][]*rcommon.TsCndSpec_AnomalyAlertingCfg) *TsCondition_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*TsCondition_FieldSubPathArrayOfValues)
}

func (s TsConditionPathSelectorSpecAnomalyAlerting) WithItemValue(value *rcommon.TsCndSpec_AnomalyAlertingCfg) *TsCondition_FieldSubPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*TsCondition_FieldSubPathArrayItemValue)
}

func (TsConditionPathSelectorSpecAnomalyAlerting) AnalysisWindow() TsConditionPathSelectorSpecAnomalyAlertingAnalysisWindow {
	return TsConditionPathSelectorSpecAnomalyAlertingAnalysisWindow{}
}

func (TsConditionPathSelectorSpecAnomalyAlerting) StepInterval() TsConditionPathSelectorSpecAnomalyAlertingStepInterval {
	return TsConditionPathSelectorSpecAnomalyAlertingStepInterval{}
}

func (TsConditionPathSelectorSpecAnomalyAlerting) TrainStepInterval() TsConditionPathSelectorSpecAnomalyAlertingTrainStepInterval {
	return TsConditionPathSelectorSpecAnomalyAlertingTrainStepInterval{}
}

func (TsConditionPathSelectorSpecAnomalyAlerting) AlignmentPeriod() TsConditionPathSelectorSpecAnomalyAlertingAlignmentPeriod {
	return TsConditionPathSelectorSpecAnomalyAlertingAlignmentPeriod{}
}

func (TsConditionPathSelectorSpecAnomalyAlerting) LstmAutoencoder() TsConditionPathSelectorSpecAnomalyAlertingLstmAutoencoder {
	return TsConditionPathSelectorSpecAnomalyAlertingLstmAutoencoder{}
}

func (TsConditionPathSelectorSpecAnomalyAlerting) RaiseAfter() TsConditionPathSelectorSpecAnomalyAlertingRaiseAfter {
	return TsConditionPathSelectorSpecAnomalyAlertingRaiseAfter{}
}

func (TsConditionPathSelectorSpecAnomalyAlerting) SilenceAfter() TsConditionPathSelectorSpecAnomalyAlertingSilenceAfter {
	return TsConditionPathSelectorSpecAnomalyAlertingSilenceAfter{}
}

type TsConditionPathSelectorSpecAnomalyAlertingAnalysisWindow struct{}

func (TsConditionPathSelectorSpecAnomalyAlertingAnalysisWindow) FieldPath() *TsCondition_FieldSubPath {
	return &TsCondition_FieldSubPath{
		selector: TsCondition_FieldPathSelectorSpec,
		subPath:  rcommon.NewTsCndSpecFieldPathBuilder().AnomalyAlerting().AnalysisWindow().FieldPath(),
	}
}

func (s TsConditionPathSelectorSpecAnomalyAlertingAnalysisWindow) WithValue(value *durationpb.Duration) *TsCondition_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*TsCondition_FieldSubPathValue)
}

func (s TsConditionPathSelectorSpecAnomalyAlertingAnalysisWindow) WithArrayOfValues(values []*durationpb.Duration) *TsCondition_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*TsCondition_FieldSubPathArrayOfValues)
}

type TsConditionPathSelectorSpecAnomalyAlertingStepInterval struct{}

func (TsConditionPathSelectorSpecAnomalyAlertingStepInterval) FieldPath() *TsCondition_FieldSubPath {
	return &TsCondition_FieldSubPath{
		selector: TsCondition_FieldPathSelectorSpec,
		subPath:  rcommon.NewTsCndSpecFieldPathBuilder().AnomalyAlerting().StepInterval().FieldPath(),
	}
}

func (s TsConditionPathSelectorSpecAnomalyAlertingStepInterval) WithValue(value *durationpb.Duration) *TsCondition_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*TsCondition_FieldSubPathValue)
}

func (s TsConditionPathSelectorSpecAnomalyAlertingStepInterval) WithArrayOfValues(values []*durationpb.Duration) *TsCondition_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*TsCondition_FieldSubPathArrayOfValues)
}

type TsConditionPathSelectorSpecAnomalyAlertingTrainStepInterval struct{}

func (TsConditionPathSelectorSpecAnomalyAlertingTrainStepInterval) FieldPath() *TsCondition_FieldSubPath {
	return &TsCondition_FieldSubPath{
		selector: TsCondition_FieldPathSelectorSpec,
		subPath:  rcommon.NewTsCndSpecFieldPathBuilder().AnomalyAlerting().TrainStepInterval().FieldPath(),
	}
}

func (s TsConditionPathSelectorSpecAnomalyAlertingTrainStepInterval) WithValue(value *durationpb.Duration) *TsCondition_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*TsCondition_FieldSubPathValue)
}

func (s TsConditionPathSelectorSpecAnomalyAlertingTrainStepInterval) WithArrayOfValues(values []*durationpb.Duration) *TsCondition_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*TsCondition_FieldSubPathArrayOfValues)
}

type TsConditionPathSelectorSpecAnomalyAlertingAlignmentPeriod struct{}

func (TsConditionPathSelectorSpecAnomalyAlertingAlignmentPeriod) FieldPath() *TsCondition_FieldSubPath {
	return &TsCondition_FieldSubPath{
		selector: TsCondition_FieldPathSelectorSpec,
		subPath:  rcommon.NewTsCndSpecFieldPathBuilder().AnomalyAlerting().AlignmentPeriod().FieldPath(),
	}
}

func (s TsConditionPathSelectorSpecAnomalyAlertingAlignmentPeriod) WithValue(value *durationpb.Duration) *TsCondition_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*TsCondition_FieldSubPathValue)
}

func (s TsConditionPathSelectorSpecAnomalyAlertingAlignmentPeriod) WithArrayOfValues(values []*durationpb.Duration) *TsCondition_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*TsCondition_FieldSubPathArrayOfValues)
}

type TsConditionPathSelectorSpecAnomalyAlertingLstmAutoencoder struct{}

func (TsConditionPathSelectorSpecAnomalyAlertingLstmAutoencoder) FieldPath() *TsCondition_FieldSubPath {
	return &TsCondition_FieldSubPath{
		selector: TsCondition_FieldPathSelectorSpec,
		subPath:  rcommon.NewTsCndSpecFieldPathBuilder().AnomalyAlerting().LstmAutoencoder().FieldPath(),
	}
}

func (s TsConditionPathSelectorSpecAnomalyAlertingLstmAutoencoder) WithValue(value *rcommon.TsCndSpec_AnomalyAlertingCfg_LstmAutoEncoder) *TsCondition_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*TsCondition_FieldSubPathValue)
}

func (s TsConditionPathSelectorSpecAnomalyAlertingLstmAutoencoder) WithArrayOfValues(values []*rcommon.TsCndSpec_AnomalyAlertingCfg_LstmAutoEncoder) *TsCondition_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*TsCondition_FieldSubPathArrayOfValues)
}

func (TsConditionPathSelectorSpecAnomalyAlertingLstmAutoencoder) HiddenSize() TsConditionPathSelectorSpecAnomalyAlertingLstmAutoencoderHiddenSize {
	return TsConditionPathSelectorSpecAnomalyAlertingLstmAutoencoderHiddenSize{}
}

func (TsConditionPathSelectorSpecAnomalyAlertingLstmAutoencoder) LearnRate() TsConditionPathSelectorSpecAnomalyAlertingLstmAutoencoderLearnRate {
	return TsConditionPathSelectorSpecAnomalyAlertingLstmAutoencoderLearnRate{}
}

func (TsConditionPathSelectorSpecAnomalyAlertingLstmAutoencoder) MaxTrainingEpochs() TsConditionPathSelectorSpecAnomalyAlertingLstmAutoencoderMaxTrainingEpochs {
	return TsConditionPathSelectorSpecAnomalyAlertingLstmAutoencoderMaxTrainingEpochs{}
}

func (TsConditionPathSelectorSpecAnomalyAlertingLstmAutoencoder) MinTrainingEpochs() TsConditionPathSelectorSpecAnomalyAlertingLstmAutoencoderMinTrainingEpochs {
	return TsConditionPathSelectorSpecAnomalyAlertingLstmAutoencoderMinTrainingEpochs{}
}

func (TsConditionPathSelectorSpecAnomalyAlertingLstmAutoencoder) AcceptableTrainingError() TsConditionPathSelectorSpecAnomalyAlertingLstmAutoencoderAcceptableTrainingError {
	return TsConditionPathSelectorSpecAnomalyAlertingLstmAutoencoderAcceptableTrainingError{}
}

func (TsConditionPathSelectorSpecAnomalyAlertingLstmAutoencoder) TrainingPeriod() TsConditionPathSelectorSpecAnomalyAlertingLstmAutoencoderTrainingPeriod {
	return TsConditionPathSelectorSpecAnomalyAlertingLstmAutoencoderTrainingPeriod{}
}

func (TsConditionPathSelectorSpecAnomalyAlertingLstmAutoencoder) CheckPeriodFraction() TsConditionPathSelectorSpecAnomalyAlertingLstmAutoencoderCheckPeriodFraction {
	return TsConditionPathSelectorSpecAnomalyAlertingLstmAutoencoderCheckPeriodFraction{}
}

func (TsConditionPathSelectorSpecAnomalyAlertingLstmAutoencoder) TeacherForceAtInference() TsConditionPathSelectorSpecAnomalyAlertingLstmAutoencoderTeacherForceAtInference {
	return TsConditionPathSelectorSpecAnomalyAlertingLstmAutoencoderTeacherForceAtInference{}
}

type TsConditionPathSelectorSpecAnomalyAlertingLstmAutoencoderHiddenSize struct{}

func (TsConditionPathSelectorSpecAnomalyAlertingLstmAutoencoderHiddenSize) FieldPath() *TsCondition_FieldSubPath {
	return &TsCondition_FieldSubPath{
		selector: TsCondition_FieldPathSelectorSpec,
		subPath:  rcommon.NewTsCndSpecFieldPathBuilder().AnomalyAlerting().LstmAutoencoder().HiddenSize().FieldPath(),
	}
}

func (s TsConditionPathSelectorSpecAnomalyAlertingLstmAutoencoderHiddenSize) WithValue(value int32) *TsCondition_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*TsCondition_FieldSubPathValue)
}

func (s TsConditionPathSelectorSpecAnomalyAlertingLstmAutoencoderHiddenSize) WithArrayOfValues(values []int32) *TsCondition_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*TsCondition_FieldSubPathArrayOfValues)
}

type TsConditionPathSelectorSpecAnomalyAlertingLstmAutoencoderLearnRate struct{}

func (TsConditionPathSelectorSpecAnomalyAlertingLstmAutoencoderLearnRate) FieldPath() *TsCondition_FieldSubPath {
	return &TsCondition_FieldSubPath{
		selector: TsCondition_FieldPathSelectorSpec,
		subPath:  rcommon.NewTsCndSpecFieldPathBuilder().AnomalyAlerting().LstmAutoencoder().LearnRate().FieldPath(),
	}
}

func (s TsConditionPathSelectorSpecAnomalyAlertingLstmAutoencoderLearnRate) WithValue(value float64) *TsCondition_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*TsCondition_FieldSubPathValue)
}

func (s TsConditionPathSelectorSpecAnomalyAlertingLstmAutoencoderLearnRate) WithArrayOfValues(values []float64) *TsCondition_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*TsCondition_FieldSubPathArrayOfValues)
}

type TsConditionPathSelectorSpecAnomalyAlertingLstmAutoencoderMaxTrainingEpochs struct{}

func (TsConditionPathSelectorSpecAnomalyAlertingLstmAutoencoderMaxTrainingEpochs) FieldPath() *TsCondition_FieldSubPath {
	return &TsCondition_FieldSubPath{
		selector: TsCondition_FieldPathSelectorSpec,
		subPath:  rcommon.NewTsCndSpecFieldPathBuilder().AnomalyAlerting().LstmAutoencoder().MaxTrainingEpochs().FieldPath(),
	}
}

func (s TsConditionPathSelectorSpecAnomalyAlertingLstmAutoencoderMaxTrainingEpochs) WithValue(value int32) *TsCondition_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*TsCondition_FieldSubPathValue)
}

func (s TsConditionPathSelectorSpecAnomalyAlertingLstmAutoencoderMaxTrainingEpochs) WithArrayOfValues(values []int32) *TsCondition_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*TsCondition_FieldSubPathArrayOfValues)
}

type TsConditionPathSelectorSpecAnomalyAlertingLstmAutoencoderMinTrainingEpochs struct{}

func (TsConditionPathSelectorSpecAnomalyAlertingLstmAutoencoderMinTrainingEpochs) FieldPath() *TsCondition_FieldSubPath {
	return &TsCondition_FieldSubPath{
		selector: TsCondition_FieldPathSelectorSpec,
		subPath:  rcommon.NewTsCndSpecFieldPathBuilder().AnomalyAlerting().LstmAutoencoder().MinTrainingEpochs().FieldPath(),
	}
}

func (s TsConditionPathSelectorSpecAnomalyAlertingLstmAutoencoderMinTrainingEpochs) WithValue(value int32) *TsCondition_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*TsCondition_FieldSubPathValue)
}

func (s TsConditionPathSelectorSpecAnomalyAlertingLstmAutoencoderMinTrainingEpochs) WithArrayOfValues(values []int32) *TsCondition_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*TsCondition_FieldSubPathArrayOfValues)
}

type TsConditionPathSelectorSpecAnomalyAlertingLstmAutoencoderAcceptableTrainingError struct{}

func (TsConditionPathSelectorSpecAnomalyAlertingLstmAutoencoderAcceptableTrainingError) FieldPath() *TsCondition_FieldSubPath {
	return &TsCondition_FieldSubPath{
		selector: TsCondition_FieldPathSelectorSpec,
		subPath:  rcommon.NewTsCndSpecFieldPathBuilder().AnomalyAlerting().LstmAutoencoder().AcceptableTrainingError().FieldPath(),
	}
}

func (s TsConditionPathSelectorSpecAnomalyAlertingLstmAutoencoderAcceptableTrainingError) WithValue(value float64) *TsCondition_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*TsCondition_FieldSubPathValue)
}

func (s TsConditionPathSelectorSpecAnomalyAlertingLstmAutoencoderAcceptableTrainingError) WithArrayOfValues(values []float64) *TsCondition_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*TsCondition_FieldSubPathArrayOfValues)
}

type TsConditionPathSelectorSpecAnomalyAlertingLstmAutoencoderTrainingPeriod struct{}

func (TsConditionPathSelectorSpecAnomalyAlertingLstmAutoencoderTrainingPeriod) FieldPath() *TsCondition_FieldSubPath {
	return &TsCondition_FieldSubPath{
		selector: TsCondition_FieldPathSelectorSpec,
		subPath:  rcommon.NewTsCndSpecFieldPathBuilder().AnomalyAlerting().LstmAutoencoder().TrainingPeriod().FieldPath(),
	}
}

func (s TsConditionPathSelectorSpecAnomalyAlertingLstmAutoencoderTrainingPeriod) WithValue(value *durationpb.Duration) *TsCondition_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*TsCondition_FieldSubPathValue)
}

func (s TsConditionPathSelectorSpecAnomalyAlertingLstmAutoencoderTrainingPeriod) WithArrayOfValues(values []*durationpb.Duration) *TsCondition_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*TsCondition_FieldSubPathArrayOfValues)
}

type TsConditionPathSelectorSpecAnomalyAlertingLstmAutoencoderCheckPeriodFraction struct{}

func (TsConditionPathSelectorSpecAnomalyAlertingLstmAutoencoderCheckPeriodFraction) FieldPath() *TsCondition_FieldSubPath {
	return &TsCondition_FieldSubPath{
		selector: TsCondition_FieldPathSelectorSpec,
		subPath:  rcommon.NewTsCndSpecFieldPathBuilder().AnomalyAlerting().LstmAutoencoder().CheckPeriodFraction().FieldPath(),
	}
}

func (s TsConditionPathSelectorSpecAnomalyAlertingLstmAutoencoderCheckPeriodFraction) WithValue(value float64) *TsCondition_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*TsCondition_FieldSubPathValue)
}

func (s TsConditionPathSelectorSpecAnomalyAlertingLstmAutoencoderCheckPeriodFraction) WithArrayOfValues(values []float64) *TsCondition_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*TsCondition_FieldSubPathArrayOfValues)
}

type TsConditionPathSelectorSpecAnomalyAlertingLstmAutoencoderTeacherForceAtInference struct{}

func (TsConditionPathSelectorSpecAnomalyAlertingLstmAutoencoderTeacherForceAtInference) FieldPath() *TsCondition_FieldSubPath {
	return &TsCondition_FieldSubPath{
		selector: TsCondition_FieldPathSelectorSpec,
		subPath:  rcommon.NewTsCndSpecFieldPathBuilder().AnomalyAlerting().LstmAutoencoder().TeacherForceAtInference().FieldPath(),
	}
}

func (s TsConditionPathSelectorSpecAnomalyAlertingLstmAutoencoderTeacherForceAtInference) WithValue(value bool) *TsCondition_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*TsCondition_FieldSubPathValue)
}

func (s TsConditionPathSelectorSpecAnomalyAlertingLstmAutoencoderTeacherForceAtInference) WithArrayOfValues(values []bool) *TsCondition_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*TsCondition_FieldSubPathArrayOfValues)
}

type TsConditionPathSelectorSpecAnomalyAlertingRaiseAfter struct{}

func (TsConditionPathSelectorSpecAnomalyAlertingRaiseAfter) FieldPath() *TsCondition_FieldSubPath {
	return &TsCondition_FieldSubPath{
		selector: TsCondition_FieldPathSelectorSpec,
		subPath:  rcommon.NewTsCndSpecFieldPathBuilder().AnomalyAlerting().RaiseAfter().FieldPath(),
	}
}

func (s TsConditionPathSelectorSpecAnomalyAlertingRaiseAfter) WithValue(value *durationpb.Duration) *TsCondition_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*TsCondition_FieldSubPathValue)
}

func (s TsConditionPathSelectorSpecAnomalyAlertingRaiseAfter) WithArrayOfValues(values []*durationpb.Duration) *TsCondition_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*TsCondition_FieldSubPathArrayOfValues)
}

type TsConditionPathSelectorSpecAnomalyAlertingSilenceAfter struct{}

func (TsConditionPathSelectorSpecAnomalyAlertingSilenceAfter) FieldPath() *TsCondition_FieldSubPath {
	return &TsCondition_FieldSubPath{
		selector: TsCondition_FieldPathSelectorSpec,
		subPath:  rcommon.NewTsCndSpecFieldPathBuilder().AnomalyAlerting().SilenceAfter().FieldPath(),
	}
}

func (s TsConditionPathSelectorSpecAnomalyAlertingSilenceAfter) WithValue(value *durationpb.Duration) *TsCondition_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*TsCondition_FieldSubPathValue)
}

func (s TsConditionPathSelectorSpecAnomalyAlertingSilenceAfter) WithArrayOfValues(values []*durationpb.Duration) *TsCondition_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*TsCondition_FieldSubPathArrayOfValues)
}

type TsConditionPathSelectorInternal struct{}

func (TsConditionPathSelectorInternal) FieldPath() *TsCondition_FieldTerminalPath {
	return &TsCondition_FieldTerminalPath{selector: TsCondition_FieldPathSelectorInternal}
}

func (s TsConditionPathSelectorInternal) WithValue(value *TsCondition_Internal) *TsCondition_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*TsCondition_FieldTerminalPathValue)
}

func (s TsConditionPathSelectorInternal) WithArrayOfValues(values []*TsCondition_Internal) *TsCondition_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*TsCondition_FieldTerminalPathArrayOfValues)
}

func (TsConditionPathSelectorInternal) WithSubPath(subPath TsConditionInternal_FieldPath) *TsCondition_FieldSubPath {
	return &TsCondition_FieldSubPath{selector: TsCondition_FieldPathSelectorInternal, subPath: subPath}
}

func (s TsConditionPathSelectorInternal) WithSubValue(subPathValue TsConditionInternal_FieldPathValue) *TsCondition_FieldSubPathValue {
	return &TsCondition_FieldSubPathValue{TsCondition_FieldPath: s.WithSubPath(subPathValue), subPathValue: subPathValue}
}

func (s TsConditionPathSelectorInternal) WithSubArrayOfValues(subPathArrayOfValues TsConditionInternal_FieldPathArrayOfValues) *TsCondition_FieldSubPathArrayOfValues {
	return &TsCondition_FieldSubPathArrayOfValues{TsCondition_FieldPath: s.WithSubPath(subPathArrayOfValues), subPathArrayOfValues: subPathArrayOfValues}
}

func (s TsConditionPathSelectorInternal) WithSubArrayItemValue(subPathArrayItemValue TsConditionInternal_FieldPathArrayItemValue) *TsCondition_FieldSubPathArrayItemValue {
	return &TsCondition_FieldSubPathArrayItemValue{TsCondition_FieldPath: s.WithSubPath(subPathArrayItemValue), subPathItemValue: subPathArrayItemValue}
}

func (TsConditionPathSelectorInternal) CommonKeyKset() TsConditionPathSelectorInternalCommonKeyKset {
	return TsConditionPathSelectorInternalCommonKeyKset{}
}

func (TsConditionPathSelectorInternal) EntrySpecGeneration() TsConditionPathSelectorInternalEntrySpecGeneration {
	return TsConditionPathSelectorInternalEntrySpecGeneration{}
}

func (TsConditionPathSelectorInternal) AlertingLocation() TsConditionPathSelectorInternalAlertingLocation {
	return TsConditionPathSelectorInternalAlertingLocation{}
}

type TsConditionPathSelectorInternalCommonKeyKset struct{}

func (TsConditionPathSelectorInternalCommonKeyKset) FieldPath() *TsCondition_FieldSubPath {
	return &TsCondition_FieldSubPath{
		selector: TsCondition_FieldPathSelectorInternal,
		subPath:  NewTsConditionInternalFieldPathBuilder().CommonKeyKset().FieldPath(),
	}
}

func (s TsConditionPathSelectorInternalCommonKeyKset) WithValue(value []byte) *TsCondition_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*TsCondition_FieldSubPathValue)
}

func (s TsConditionPathSelectorInternalCommonKeyKset) WithArrayOfValues(values [][]byte) *TsCondition_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*TsCondition_FieldSubPathArrayOfValues)
}

type TsConditionPathSelectorInternalEntrySpecGeneration struct{}

func (TsConditionPathSelectorInternalEntrySpecGeneration) FieldPath() *TsCondition_FieldSubPath {
	return &TsCondition_FieldSubPath{
		selector: TsCondition_FieldPathSelectorInternal,
		subPath:  NewTsConditionInternalFieldPathBuilder().EntrySpecGeneration().FieldPath(),
	}
}

func (s TsConditionPathSelectorInternalEntrySpecGeneration) WithValue(value int32) *TsCondition_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*TsCondition_FieldSubPathValue)
}

func (s TsConditionPathSelectorInternalEntrySpecGeneration) WithArrayOfValues(values []int32) *TsCondition_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*TsCondition_FieldSubPathArrayOfValues)
}

type TsConditionPathSelectorInternalAlertingLocation struct{}

func (TsConditionPathSelectorInternalAlertingLocation) FieldPath() *TsCondition_FieldSubPath {
	return &TsCondition_FieldSubPath{
		selector: TsCondition_FieldPathSelectorInternal,
		subPath:  NewTsConditionInternalFieldPathBuilder().AlertingLocation().FieldPath(),
	}
}

func (s TsConditionPathSelectorInternalAlertingLocation) WithValue(value rcommon.PolicySpec_ProcessingLocation) *TsCondition_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*TsCondition_FieldSubPathValue)
}

func (s TsConditionPathSelectorInternalAlertingLocation) WithArrayOfValues(values []rcommon.PolicySpec_ProcessingLocation) *TsCondition_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*TsCondition_FieldSubPathArrayOfValues)
}

type TsConditionPathSelectorFilterSelector struct{}

func (TsConditionPathSelectorFilterSelector) FieldPath() *TsCondition_FieldTerminalPath {
	return &TsCondition_FieldTerminalPath{selector: TsCondition_FieldPathSelectorFilterSelector}
}

func (s TsConditionPathSelectorFilterSelector) WithValue(value *TsCondition_Selector) *TsCondition_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*TsCondition_FieldTerminalPathValue)
}

func (s TsConditionPathSelectorFilterSelector) WithArrayOfValues(values []*TsCondition_Selector) *TsCondition_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*TsCondition_FieldTerminalPathArrayOfValues)
}

func (TsConditionPathSelectorFilterSelector) WithSubPath(subPath TsConditionSelector_FieldPath) *TsCondition_FieldSubPath {
	return &TsCondition_FieldSubPath{selector: TsCondition_FieldPathSelectorFilterSelector, subPath: subPath}
}

func (s TsConditionPathSelectorFilterSelector) WithSubValue(subPathValue TsConditionSelector_FieldPathValue) *TsCondition_FieldSubPathValue {
	return &TsCondition_FieldSubPathValue{TsCondition_FieldPath: s.WithSubPath(subPathValue), subPathValue: subPathValue}
}

func (s TsConditionPathSelectorFilterSelector) WithSubArrayOfValues(subPathArrayOfValues TsConditionSelector_FieldPathArrayOfValues) *TsCondition_FieldSubPathArrayOfValues {
	return &TsCondition_FieldSubPathArrayOfValues{TsCondition_FieldPath: s.WithSubPath(subPathArrayOfValues), subPathArrayOfValues: subPathArrayOfValues}
}

func (s TsConditionPathSelectorFilterSelector) WithSubArrayItemValue(subPathArrayItemValue TsConditionSelector_FieldPathArrayItemValue) *TsCondition_FieldSubPathArrayItemValue {
	return &TsCondition_FieldSubPathArrayItemValue{TsCondition_FieldPath: s.WithSubPath(subPathArrayItemValue), subPathItemValue: subPathArrayItemValue}
}

func (TsConditionPathSelectorFilterSelector) MetricTypes() TsConditionPathSelectorFilterSelectorMetricTypes {
	return TsConditionPathSelectorFilterSelectorMetricTypes{}
}

func (TsConditionPathSelectorFilterSelector) ResourceTypes() TsConditionPathSelectorFilterSelectorResourceTypes {
	return TsConditionPathSelectorFilterSelectorResourceTypes{}
}

func (TsConditionPathSelectorFilterSelector) CommonMetricLabels() TsConditionPathSelectorFilterSelectorCommonMetricLabels {
	return TsConditionPathSelectorFilterSelectorCommonMetricLabels{}
}

func (TsConditionPathSelectorFilterSelector) CommonResourceLabels() TsConditionPathSelectorFilterSelectorCommonResourceLabels {
	return TsConditionPathSelectorFilterSelectorCommonResourceLabels{}
}

type TsConditionPathSelectorFilterSelectorMetricTypes struct{}

func (TsConditionPathSelectorFilterSelectorMetricTypes) FieldPath() *TsCondition_FieldSubPath {
	return &TsCondition_FieldSubPath{
		selector: TsCondition_FieldPathSelectorFilterSelector,
		subPath:  NewTsConditionSelectorFieldPathBuilder().MetricTypes().FieldPath(),
	}
}

func (s TsConditionPathSelectorFilterSelectorMetricTypes) WithValue(value []string) *TsCondition_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*TsCondition_FieldSubPathValue)
}

func (s TsConditionPathSelectorFilterSelectorMetricTypes) WithArrayOfValues(values [][]string) *TsCondition_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*TsCondition_FieldSubPathArrayOfValues)
}

func (s TsConditionPathSelectorFilterSelectorMetricTypes) WithItemValue(value string) *TsCondition_FieldSubPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*TsCondition_FieldSubPathArrayItemValue)
}

type TsConditionPathSelectorFilterSelectorResourceTypes struct{}

func (TsConditionPathSelectorFilterSelectorResourceTypes) FieldPath() *TsCondition_FieldSubPath {
	return &TsCondition_FieldSubPath{
		selector: TsCondition_FieldPathSelectorFilterSelector,
		subPath:  NewTsConditionSelectorFieldPathBuilder().ResourceTypes().FieldPath(),
	}
}

func (s TsConditionPathSelectorFilterSelectorResourceTypes) WithValue(value []string) *TsCondition_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*TsCondition_FieldSubPathValue)
}

func (s TsConditionPathSelectorFilterSelectorResourceTypes) WithArrayOfValues(values [][]string) *TsCondition_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*TsCondition_FieldSubPathArrayOfValues)
}

func (s TsConditionPathSelectorFilterSelectorResourceTypes) WithItemValue(value string) *TsCondition_FieldSubPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*TsCondition_FieldSubPathArrayItemValue)
}

type TsConditionPathSelectorFilterSelectorCommonMetricLabels struct{}

func (TsConditionPathSelectorFilterSelectorCommonMetricLabels) FieldPath() *TsCondition_FieldSubPath {
	return &TsCondition_FieldSubPath{
		selector: TsCondition_FieldPathSelectorFilterSelector,
		subPath:  NewTsConditionSelectorFieldPathBuilder().CommonMetricLabels().FieldPath(),
	}
}

func (s TsConditionPathSelectorFilterSelectorCommonMetricLabels) WithValue(value map[string]*TsCondition_Selector_Strings) *TsCondition_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*TsCondition_FieldSubPathValue)
}

func (s TsConditionPathSelectorFilterSelectorCommonMetricLabels) WithArrayOfValues(values []map[string]*TsCondition_Selector_Strings) *TsCondition_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*TsCondition_FieldSubPathArrayOfValues)
}

func (TsConditionPathSelectorFilterSelectorCommonMetricLabels) WithKey(key string) TsConditionMapPathSelectorFilterSelectorCommonMetricLabels {
	return TsConditionMapPathSelectorFilterSelectorCommonMetricLabels{key: key}
}

type TsConditionMapPathSelectorFilterSelectorCommonMetricLabels struct {
	key string
}

func (s TsConditionMapPathSelectorFilterSelectorCommonMetricLabels) FieldPath() *TsCondition_FieldSubPath {
	return &TsCondition_FieldSubPath{
		selector: TsCondition_FieldPathSelectorFilterSelector,
		subPath:  NewTsConditionSelectorFieldPathBuilder().CommonMetricLabels().WithKey(s.key).FieldPath(),
	}
}

func (s TsConditionMapPathSelectorFilterSelectorCommonMetricLabels) WithValue(value *TsCondition_Selector_Strings) *TsCondition_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*TsCondition_FieldSubPathValue)
}

func (s TsConditionMapPathSelectorFilterSelectorCommonMetricLabels) WithArrayOfValues(values []*TsCondition_Selector_Strings) *TsCondition_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*TsCondition_FieldSubPathArrayOfValues)
}

type TsConditionPathSelectorFilterSelectorCommonResourceLabels struct{}

func (TsConditionPathSelectorFilterSelectorCommonResourceLabels) FieldPath() *TsCondition_FieldSubPath {
	return &TsCondition_FieldSubPath{
		selector: TsCondition_FieldPathSelectorFilterSelector,
		subPath:  NewTsConditionSelectorFieldPathBuilder().CommonResourceLabels().FieldPath(),
	}
}

func (s TsConditionPathSelectorFilterSelectorCommonResourceLabels) WithValue(value map[string]*TsCondition_Selector_Strings) *TsCondition_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*TsCondition_FieldSubPathValue)
}

func (s TsConditionPathSelectorFilterSelectorCommonResourceLabels) WithArrayOfValues(values []map[string]*TsCondition_Selector_Strings) *TsCondition_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*TsCondition_FieldSubPathArrayOfValues)
}

func (TsConditionPathSelectorFilterSelectorCommonResourceLabels) WithKey(key string) TsConditionMapPathSelectorFilterSelectorCommonResourceLabels {
	return TsConditionMapPathSelectorFilterSelectorCommonResourceLabels{key: key}
}

type TsConditionMapPathSelectorFilterSelectorCommonResourceLabels struct {
	key string
}

func (s TsConditionMapPathSelectorFilterSelectorCommonResourceLabels) FieldPath() *TsCondition_FieldSubPath {
	return &TsCondition_FieldSubPath{
		selector: TsCondition_FieldPathSelectorFilterSelector,
		subPath:  NewTsConditionSelectorFieldPathBuilder().CommonResourceLabels().WithKey(s.key).FieldPath(),
	}
}

func (s TsConditionMapPathSelectorFilterSelectorCommonResourceLabels) WithValue(value *TsCondition_Selector_Strings) *TsCondition_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*TsCondition_FieldSubPathValue)
}

func (s TsConditionMapPathSelectorFilterSelectorCommonResourceLabels) WithArrayOfValues(values []*TsCondition_Selector_Strings) *TsCondition_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*TsCondition_FieldSubPathArrayOfValues)
}

type TsConditionPathSelectorTemplateSource struct{}

func (TsConditionPathSelectorTemplateSource) FieldPath() *TsCondition_FieldTerminalPath {
	return &TsCondition_FieldTerminalPath{selector: TsCondition_FieldPathSelectorTemplateSource}
}

func (s TsConditionPathSelectorTemplateSource) WithValue(value *TsCondition_TemplateSource) *TsCondition_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*TsCondition_FieldTerminalPathValue)
}

func (s TsConditionPathSelectorTemplateSource) WithArrayOfValues(values []*TsCondition_TemplateSource) *TsCondition_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*TsCondition_FieldTerminalPathArrayOfValues)
}

func (TsConditionPathSelectorTemplateSource) WithSubPath(subPath TsConditionTemplateSource_FieldPath) *TsCondition_FieldSubPath {
	return &TsCondition_FieldSubPath{selector: TsCondition_FieldPathSelectorTemplateSource, subPath: subPath}
}

func (s TsConditionPathSelectorTemplateSource) WithSubValue(subPathValue TsConditionTemplateSource_FieldPathValue) *TsCondition_FieldSubPathValue {
	return &TsCondition_FieldSubPathValue{TsCondition_FieldPath: s.WithSubPath(subPathValue), subPathValue: subPathValue}
}

func (s TsConditionPathSelectorTemplateSource) WithSubArrayOfValues(subPathArrayOfValues TsConditionTemplateSource_FieldPathArrayOfValues) *TsCondition_FieldSubPathArrayOfValues {
	return &TsCondition_FieldSubPathArrayOfValues{TsCondition_FieldPath: s.WithSubPath(subPathArrayOfValues), subPathArrayOfValues: subPathArrayOfValues}
}

func (s TsConditionPathSelectorTemplateSource) WithSubArrayItemValue(subPathArrayItemValue TsConditionTemplateSource_FieldPathArrayItemValue) *TsCondition_FieldSubPathArrayItemValue {
	return &TsCondition_FieldSubPathArrayItemValue{TsCondition_FieldPath: s.WithSubPath(subPathArrayItemValue), subPathItemValue: subPathArrayItemValue}
}

func (TsConditionPathSelectorTemplateSource) Template() TsConditionPathSelectorTemplateSourceTemplate {
	return TsConditionPathSelectorTemplateSourceTemplate{}
}

func (TsConditionPathSelectorTemplateSource) UpdatedFields() TsConditionPathSelectorTemplateSourceUpdatedFields {
	return TsConditionPathSelectorTemplateSourceUpdatedFields{}
}

type TsConditionPathSelectorTemplateSourceTemplate struct{}

func (TsConditionPathSelectorTemplateSourceTemplate) FieldPath() *TsCondition_FieldSubPath {
	return &TsCondition_FieldSubPath{
		selector: TsCondition_FieldPathSelectorTemplateSource,
		subPath:  NewTsConditionTemplateSourceFieldPathBuilder().Template().FieldPath(),
	}
}

func (s TsConditionPathSelectorTemplateSourceTemplate) WithValue(value *log_condition_template.Reference) *TsCondition_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*TsCondition_FieldSubPathValue)
}

func (s TsConditionPathSelectorTemplateSourceTemplate) WithArrayOfValues(values []*log_condition_template.Reference) *TsCondition_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*TsCondition_FieldSubPathArrayOfValues)
}

type TsConditionPathSelectorTemplateSourceUpdatedFields struct{}

func (TsConditionPathSelectorTemplateSourceUpdatedFields) FieldPath() *TsCondition_FieldSubPath {
	return &TsCondition_FieldSubPath{
		selector: TsCondition_FieldPathSelectorTemplateSource,
		subPath:  NewTsConditionTemplateSourceFieldPathBuilder().UpdatedFields().FieldPath(),
	}
}

func (s TsConditionPathSelectorTemplateSourceUpdatedFields) WithValue(value *fieldmaskpb.FieldMask) *TsCondition_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*TsCondition_FieldSubPathValue)
}

func (s TsConditionPathSelectorTemplateSourceUpdatedFields) WithArrayOfValues(values []*fieldmaskpb.FieldMask) *TsCondition_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*TsCondition_FieldSubPathArrayOfValues)
}

type TsConditionInternalFieldPathBuilder struct{}

func NewTsConditionInternalFieldPathBuilder() TsConditionInternalFieldPathBuilder {
	return TsConditionInternalFieldPathBuilder{}
}
func (TsConditionInternalFieldPathBuilder) CommonKeyKset() TsCondition_InternalPathSelectorCommonKeyKset {
	return TsCondition_InternalPathSelectorCommonKeyKset{}
}
func (TsConditionInternalFieldPathBuilder) EntrySpecGeneration() TsCondition_InternalPathSelectorEntrySpecGeneration {
	return TsCondition_InternalPathSelectorEntrySpecGeneration{}
}
func (TsConditionInternalFieldPathBuilder) AlertingLocation() TsCondition_InternalPathSelectorAlertingLocation {
	return TsCondition_InternalPathSelectorAlertingLocation{}
}

type TsCondition_InternalPathSelectorCommonKeyKset struct{}

func (TsCondition_InternalPathSelectorCommonKeyKset) FieldPath() *TsConditionInternal_FieldTerminalPath {
	return &TsConditionInternal_FieldTerminalPath{selector: TsConditionInternal_FieldPathSelectorCommonKeyKset}
}

func (s TsCondition_InternalPathSelectorCommonKeyKset) WithValue(value []byte) *TsConditionInternal_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*TsConditionInternal_FieldTerminalPathValue)
}

func (s TsCondition_InternalPathSelectorCommonKeyKset) WithArrayOfValues(values [][]byte) *TsConditionInternal_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*TsConditionInternal_FieldTerminalPathArrayOfValues)
}

type TsCondition_InternalPathSelectorEntrySpecGeneration struct{}

func (TsCondition_InternalPathSelectorEntrySpecGeneration) FieldPath() *TsConditionInternal_FieldTerminalPath {
	return &TsConditionInternal_FieldTerminalPath{selector: TsConditionInternal_FieldPathSelectorEntrySpecGeneration}
}

func (s TsCondition_InternalPathSelectorEntrySpecGeneration) WithValue(value int32) *TsConditionInternal_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*TsConditionInternal_FieldTerminalPathValue)
}

func (s TsCondition_InternalPathSelectorEntrySpecGeneration) WithArrayOfValues(values []int32) *TsConditionInternal_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*TsConditionInternal_FieldTerminalPathArrayOfValues)
}

type TsCondition_InternalPathSelectorAlertingLocation struct{}

func (TsCondition_InternalPathSelectorAlertingLocation) FieldPath() *TsConditionInternal_FieldTerminalPath {
	return &TsConditionInternal_FieldTerminalPath{selector: TsConditionInternal_FieldPathSelectorAlertingLocation}
}

func (s TsCondition_InternalPathSelectorAlertingLocation) WithValue(value rcommon.PolicySpec_ProcessingLocation) *TsConditionInternal_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*TsConditionInternal_FieldTerminalPathValue)
}

func (s TsCondition_InternalPathSelectorAlertingLocation) WithArrayOfValues(values []rcommon.PolicySpec_ProcessingLocation) *TsConditionInternal_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*TsConditionInternal_FieldTerminalPathArrayOfValues)
}

type TsConditionSelectorFieldPathBuilder struct{}

func NewTsConditionSelectorFieldPathBuilder() TsConditionSelectorFieldPathBuilder {
	return TsConditionSelectorFieldPathBuilder{}
}
func (TsConditionSelectorFieldPathBuilder) MetricTypes() TsCondition_SelectorPathSelectorMetricTypes {
	return TsCondition_SelectorPathSelectorMetricTypes{}
}
func (TsConditionSelectorFieldPathBuilder) ResourceTypes() TsCondition_SelectorPathSelectorResourceTypes {
	return TsCondition_SelectorPathSelectorResourceTypes{}
}
func (TsConditionSelectorFieldPathBuilder) CommonMetricLabels() TsCondition_SelectorPathSelectorCommonMetricLabels {
	return TsCondition_SelectorPathSelectorCommonMetricLabels{}
}
func (TsConditionSelectorFieldPathBuilder) CommonResourceLabels() TsCondition_SelectorPathSelectorCommonResourceLabels {
	return TsCondition_SelectorPathSelectorCommonResourceLabels{}
}

type TsCondition_SelectorPathSelectorMetricTypes struct{}

func (TsCondition_SelectorPathSelectorMetricTypes) FieldPath() *TsConditionSelector_FieldTerminalPath {
	return &TsConditionSelector_FieldTerminalPath{selector: TsConditionSelector_FieldPathSelectorMetricTypes}
}

func (s TsCondition_SelectorPathSelectorMetricTypes) WithValue(value []string) *TsConditionSelector_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*TsConditionSelector_FieldTerminalPathValue)
}

func (s TsCondition_SelectorPathSelectorMetricTypes) WithArrayOfValues(values [][]string) *TsConditionSelector_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*TsConditionSelector_FieldTerminalPathArrayOfValues)
}

func (s TsCondition_SelectorPathSelectorMetricTypes) WithItemValue(value string) *TsConditionSelector_FieldTerminalPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*TsConditionSelector_FieldTerminalPathArrayItemValue)
}

type TsCondition_SelectorPathSelectorResourceTypes struct{}

func (TsCondition_SelectorPathSelectorResourceTypes) FieldPath() *TsConditionSelector_FieldTerminalPath {
	return &TsConditionSelector_FieldTerminalPath{selector: TsConditionSelector_FieldPathSelectorResourceTypes}
}

func (s TsCondition_SelectorPathSelectorResourceTypes) WithValue(value []string) *TsConditionSelector_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*TsConditionSelector_FieldTerminalPathValue)
}

func (s TsCondition_SelectorPathSelectorResourceTypes) WithArrayOfValues(values [][]string) *TsConditionSelector_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*TsConditionSelector_FieldTerminalPathArrayOfValues)
}

func (s TsCondition_SelectorPathSelectorResourceTypes) WithItemValue(value string) *TsConditionSelector_FieldTerminalPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*TsConditionSelector_FieldTerminalPathArrayItemValue)
}

type TsCondition_SelectorPathSelectorCommonMetricLabels struct{}

func (TsCondition_SelectorPathSelectorCommonMetricLabels) FieldPath() *TsConditionSelector_FieldTerminalPath {
	return &TsConditionSelector_FieldTerminalPath{selector: TsConditionSelector_FieldPathSelectorCommonMetricLabels}
}

func (s TsCondition_SelectorPathSelectorCommonMetricLabels) WithValue(value map[string]*TsCondition_Selector_Strings) *TsConditionSelector_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*TsConditionSelector_FieldTerminalPathValue)
}

func (s TsCondition_SelectorPathSelectorCommonMetricLabels) WithArrayOfValues(values []map[string]*TsCondition_Selector_Strings) *TsConditionSelector_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*TsConditionSelector_FieldTerminalPathArrayOfValues)
}

func (TsCondition_SelectorPathSelectorCommonMetricLabels) WithKey(key string) TsCondition_SelectorMapPathSelectorCommonMetricLabels {
	return TsCondition_SelectorMapPathSelectorCommonMetricLabels{key: key}
}

type TsCondition_SelectorMapPathSelectorCommonMetricLabels struct {
	key string
}

func (s TsCondition_SelectorMapPathSelectorCommonMetricLabels) FieldPath() *TsConditionSelector_FieldPathMap {
	return &TsConditionSelector_FieldPathMap{selector: TsConditionSelector_FieldPathSelectorCommonMetricLabels, key: s.key}
}

func (s TsCondition_SelectorMapPathSelectorCommonMetricLabels) WithValue(value *TsCondition_Selector_Strings) *TsConditionSelector_FieldPathMapValue {
	return s.FieldPath().WithIValue(value).(*TsConditionSelector_FieldPathMapValue)
}

func (s TsCondition_SelectorMapPathSelectorCommonMetricLabels) WithArrayOfValues(values []*TsCondition_Selector_Strings) *TsConditionSelector_FieldPathMapArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*TsConditionSelector_FieldPathMapArrayOfValues)
}

type TsCondition_SelectorPathSelectorCommonResourceLabels struct{}

func (TsCondition_SelectorPathSelectorCommonResourceLabels) FieldPath() *TsConditionSelector_FieldTerminalPath {
	return &TsConditionSelector_FieldTerminalPath{selector: TsConditionSelector_FieldPathSelectorCommonResourceLabels}
}

func (s TsCondition_SelectorPathSelectorCommonResourceLabels) WithValue(value map[string]*TsCondition_Selector_Strings) *TsConditionSelector_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*TsConditionSelector_FieldTerminalPathValue)
}

func (s TsCondition_SelectorPathSelectorCommonResourceLabels) WithArrayOfValues(values []map[string]*TsCondition_Selector_Strings) *TsConditionSelector_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*TsConditionSelector_FieldTerminalPathArrayOfValues)
}

func (TsCondition_SelectorPathSelectorCommonResourceLabels) WithKey(key string) TsCondition_SelectorMapPathSelectorCommonResourceLabels {
	return TsCondition_SelectorMapPathSelectorCommonResourceLabels{key: key}
}

type TsCondition_SelectorMapPathSelectorCommonResourceLabels struct {
	key string
}

func (s TsCondition_SelectorMapPathSelectorCommonResourceLabels) FieldPath() *TsConditionSelector_FieldPathMap {
	return &TsConditionSelector_FieldPathMap{selector: TsConditionSelector_FieldPathSelectorCommonResourceLabels, key: s.key}
}

func (s TsCondition_SelectorMapPathSelectorCommonResourceLabels) WithValue(value *TsCondition_Selector_Strings) *TsConditionSelector_FieldPathMapValue {
	return s.FieldPath().WithIValue(value).(*TsConditionSelector_FieldPathMapValue)
}

func (s TsCondition_SelectorMapPathSelectorCommonResourceLabels) WithArrayOfValues(values []*TsCondition_Selector_Strings) *TsConditionSelector_FieldPathMapArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*TsConditionSelector_FieldPathMapArrayOfValues)
}

type TsConditionTemplateSourceFieldPathBuilder struct{}

func NewTsConditionTemplateSourceFieldPathBuilder() TsConditionTemplateSourceFieldPathBuilder {
	return TsConditionTemplateSourceFieldPathBuilder{}
}
func (TsConditionTemplateSourceFieldPathBuilder) Template() TsCondition_TemplateSourcePathSelectorTemplate {
	return TsCondition_TemplateSourcePathSelectorTemplate{}
}
func (TsConditionTemplateSourceFieldPathBuilder) UpdatedFields() TsCondition_TemplateSourcePathSelectorUpdatedFields {
	return TsCondition_TemplateSourcePathSelectorUpdatedFields{}
}

type TsCondition_TemplateSourcePathSelectorTemplate struct{}

func (TsCondition_TemplateSourcePathSelectorTemplate) FieldPath() *TsConditionTemplateSource_FieldTerminalPath {
	return &TsConditionTemplateSource_FieldTerminalPath{selector: TsConditionTemplateSource_FieldPathSelectorTemplate}
}

func (s TsCondition_TemplateSourcePathSelectorTemplate) WithValue(value *log_condition_template.Reference) *TsConditionTemplateSource_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*TsConditionTemplateSource_FieldTerminalPathValue)
}

func (s TsCondition_TemplateSourcePathSelectorTemplate) WithArrayOfValues(values []*log_condition_template.Reference) *TsConditionTemplateSource_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*TsConditionTemplateSource_FieldTerminalPathArrayOfValues)
}

type TsCondition_TemplateSourcePathSelectorUpdatedFields struct{}

func (TsCondition_TemplateSourcePathSelectorUpdatedFields) FieldPath() *TsConditionTemplateSource_FieldTerminalPath {
	return &TsConditionTemplateSource_FieldTerminalPath{selector: TsConditionTemplateSource_FieldPathSelectorUpdatedFields}
}

func (s TsCondition_TemplateSourcePathSelectorUpdatedFields) WithValue(value *fieldmaskpb.FieldMask) *TsConditionTemplateSource_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*TsConditionTemplateSource_FieldTerminalPathValue)
}

func (s TsCondition_TemplateSourcePathSelectorUpdatedFields) WithArrayOfValues(values []*fieldmaskpb.FieldMask) *TsConditionTemplateSource_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*TsConditionTemplateSource_FieldTerminalPathArrayOfValues)
}

type TsConditionSelectorStringsFieldPathBuilder struct{}

func NewTsConditionSelectorStringsFieldPathBuilder() TsConditionSelectorStringsFieldPathBuilder {
	return TsConditionSelectorStringsFieldPathBuilder{}
}
func (TsConditionSelectorStringsFieldPathBuilder) Values() TsCondition_Selector_StringsPathSelectorValues {
	return TsCondition_Selector_StringsPathSelectorValues{}
}

type TsCondition_Selector_StringsPathSelectorValues struct{}

func (TsCondition_Selector_StringsPathSelectorValues) FieldPath() *TsConditionSelectorStrings_FieldTerminalPath {
	return &TsConditionSelectorStrings_FieldTerminalPath{selector: TsConditionSelectorStrings_FieldPathSelectorValues}
}

func (s TsCondition_Selector_StringsPathSelectorValues) WithValue(value []string) *TsConditionSelectorStrings_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*TsConditionSelectorStrings_FieldTerminalPathValue)
}

func (s TsCondition_Selector_StringsPathSelectorValues) WithArrayOfValues(values [][]string) *TsConditionSelectorStrings_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*TsConditionSelectorStrings_FieldTerminalPathArrayOfValues)
}

func (s TsCondition_Selector_StringsPathSelectorValues) WithItemValue(value string) *TsConditionSelectorStrings_FieldTerminalPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*TsConditionSelectorStrings_FieldTerminalPathArrayItemValue)
}
