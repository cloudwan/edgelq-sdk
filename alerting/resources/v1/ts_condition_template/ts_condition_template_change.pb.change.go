// Code generated by protoc-gen-goten-resource
// Resource change: TsConditionTemplateChange
// DO NOT EDIT!!!

package ts_condition_template

import (
	gotenresource "github.com/cloudwan/goten-sdk/runtime/resource"
)

// proto imports
import (
	policy_template "github.com/cloudwan/edgelq-sdk/alerting/resources/v1/policy_template"
	fieldmaskpb "google.golang.org/protobuf/types/known/fieldmaskpb"
)

// ensure the imports are used
var (
	_ = new(gotenresource.ListQuery)
)

// make sure we're using proto imports
var (
	_ = &policy_template.PolicyTemplate{}
	_ = &fieldmaskpb.FieldMask{}
)

func (c *TsConditionTemplateChange) IsAdd() bool {
	if c == nil {
		return false
	}
	_, ok := c.ChangeType.(*TsConditionTemplateChange_Added_)
	return ok
}

func (c *TsConditionTemplateChange) IsModify() bool {
	if c == nil {
		return false
	}
	_, ok := c.ChangeType.(*TsConditionTemplateChange_Modified_)
	return ok
}

func (c *TsConditionTemplateChange) IsCurrent() bool {
	if c == nil {
		return false
	}
	_, ok := c.ChangeType.(*TsConditionTemplateChange_Current_)
	return ok
}

func (c *TsConditionTemplateChange) IsDelete() bool {
	if c == nil {
		return false
	}
	_, ok := c.ChangeType.(*TsConditionTemplateChange_Removed_)
	return ok
}

func (c *TsConditionTemplateChange) GetCurrentViewIndex() int32 {
	switch cType := c.ChangeType.(type) {
	case *TsConditionTemplateChange_Added_:
		return cType.Added.ViewIndex
	case *TsConditionTemplateChange_Modified_:
		return cType.Modified.ViewIndex
	}
	return 0
}

func (c *TsConditionTemplateChange) GetPreviousViewIndex() int32 {
	switch cType := c.ChangeType.(type) {
	case *TsConditionTemplateChange_Removed_:
		return cType.Removed.ViewIndex
	case *TsConditionTemplateChange_Modified_:
		return cType.Modified.PreviousViewIndex
	}
	return 0
}

func (c *TsConditionTemplateChange) GetTsConditionTemplate() *TsConditionTemplate {
	if c == nil {
		return nil
	}
	switch cType := c.ChangeType.(type) {
	case *TsConditionTemplateChange_Added_:
		return cType.Added.TsConditionTemplate
	case *TsConditionTemplateChange_Modified_:
		return cType.Modified.TsConditionTemplate
	case *TsConditionTemplateChange_Current_:
		return cType.Current.TsConditionTemplate
	case *TsConditionTemplateChange_Removed_:
		return nil
	}
	return nil
}

func (c *TsConditionTemplateChange) GetRawResource() gotenresource.Resource {
	return c.GetTsConditionTemplate()
}

func (c *TsConditionTemplateChange) GetTsConditionTemplateName() *Name {
	if c == nil {
		return nil
	}
	switch cType := c.ChangeType.(type) {
	case *TsConditionTemplateChange_Added_:
		return cType.Added.TsConditionTemplate.GetName()
	case *TsConditionTemplateChange_Modified_:
		return cType.Modified.Name
	case *TsConditionTemplateChange_Current_:
		return cType.Current.TsConditionTemplate.GetName()
	case *TsConditionTemplateChange_Removed_:
		return cType.Removed.Name
	}
	return nil
}

func (c *TsConditionTemplateChange) GetRawName() gotenresource.Name {
	return c.GetTsConditionTemplateName()
}

func (c *TsConditionTemplateChange) SetAddedRaw(snapshot gotenresource.Resource, idx int) {
	c.ChangeType = &TsConditionTemplateChange_Added_{
		Added: &TsConditionTemplateChange_Added{
			TsConditionTemplate: snapshot.(*TsConditionTemplate),
			ViewIndex:           int32(idx),
		},
	}
}

func (c *TsConditionTemplateChange) SetModifiedRaw(name gotenresource.Name, snapshot gotenresource.Resource, prevIdx int, newIdx int) {
	c.ChangeType = &TsConditionTemplateChange_Modified_{
		Modified: &TsConditionTemplateChange_Modified{
			Name:                name.(*Name),
			TsConditionTemplate: snapshot.(*TsConditionTemplate),
			PreviousViewIndex:   int32(prevIdx),
			ViewIndex:           int32(newIdx),
		},
	}
}

func (c *TsConditionTemplateChange) SetCurrentRaw(snapshot gotenresource.Resource) {
	c.ChangeType = &TsConditionTemplateChange_Current_{
		Current: &TsConditionTemplateChange_Current{
			TsConditionTemplate: snapshot.(*TsConditionTemplate),
		},
	}
}

func (c *TsConditionTemplateChange) SetDeletedRaw(name gotenresource.Name, idx int) {
	c.ChangeType = &TsConditionTemplateChange_Removed_{
		Removed: &TsConditionTemplateChange_Removed{
			Name:      name.(*Name),
			ViewIndex: int32(idx),
		},
	}
}
