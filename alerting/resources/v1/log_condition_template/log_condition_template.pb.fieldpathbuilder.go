// Code generated by protoc-gen-goten-object
// File: edgelq/alerting/proto/v1/log_condition_template.proto
// DO NOT EDIT!!!

package log_condition_template

// proto imports
import (
	rcommon "github.com/cloudwan/edgelq-sdk/alerting/resources/v1/common"
	document "github.com/cloudwan/edgelq-sdk/alerting/resources/v1/document"
	policy_template "github.com/cloudwan/edgelq-sdk/alerting/resources/v1/policy_template"
	api "github.com/cloudwan/edgelq-sdk/common/api"
	iam_iam_common "github.com/cloudwan/edgelq-sdk/iam/resources/v1/common"
	iam_organization "github.com/cloudwan/edgelq-sdk/iam/resources/v1/organization"
	iam_project "github.com/cloudwan/edgelq-sdk/iam/resources/v1/project"
	logging_bucket "github.com/cloudwan/edgelq-sdk/logging/resources/v1/bucket"
	logging_common "github.com/cloudwan/edgelq-sdk/logging/resources/v1/common"
	logging_log "github.com/cloudwan/edgelq-sdk/logging/resources/v1/log"
	logging_log_descriptor "github.com/cloudwan/edgelq-sdk/logging/resources/v1/log_descriptor"
	monitoring_common "github.com/cloudwan/edgelq-sdk/monitoring/resources/v4/common"
	monitoring_metric_descriptor "github.com/cloudwan/edgelq-sdk/monitoring/resources/v4/metric_descriptor"
	monitoring_monitored_resource_descriptor "github.com/cloudwan/edgelq-sdk/monitoring/resources/v4/monitored_resource_descriptor"
	monitoring_project "github.com/cloudwan/edgelq-sdk/monitoring/resources/v4/project"
	monitoring_time_serie "github.com/cloudwan/edgelq-sdk/monitoring/resources/v4/time_serie"
	meta_common "github.com/cloudwan/goten-sdk/meta-service/resources/v1/common"
	meta_resource "github.com/cloudwan/goten-sdk/meta-service/resources/v1/resource"
	meta_service "github.com/cloudwan/goten-sdk/meta-service/resources/v1/service"
	meta "github.com/cloudwan/goten-sdk/types/meta"
	multi_region_policy "github.com/cloudwan/goten-sdk/types/multi_region_policy"
	anypb "google.golang.org/protobuf/types/known/anypb"
	durationpb "google.golang.org/protobuf/types/known/durationpb"
	fieldmaskpb "google.golang.org/protobuf/types/known/fieldmaskpb"
	structpb "google.golang.org/protobuf/types/known/structpb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
)

// make sure we're using proto imports
var (
	_ = &document.Document{}
	_ = &policy_template.PolicyTemplate{}
	_ = &rcommon.LogCndSpec{}
	_ = api.LaunchStage(0)
	_ = &iam_iam_common.PCR{}
	_ = &iam_organization.Organization{}
	_ = &iam_project.Project{}
	_ = &logging_bucket.Bucket{}
	_ = &logging_common.LabelDescriptor{}
	_ = &logging_log.Log{}
	_ = &logging_log_descriptor.LogDescriptor{}
	_ = &monitoring_common.LabelDescriptor{}
	_ = &monitoring_metric_descriptor.MetricDescriptor{}
	_ = &monitoring_monitored_resource_descriptor.MonitoredResourceDescriptor{}
	_ = &monitoring_project.Project{}
	_ = &monitoring_time_serie.Point{}
	_ = &anypb.Any{}
	_ = &durationpb.Duration{}
	_ = &fieldmaskpb.FieldMask{}
	_ = &structpb.Struct{}
	_ = &timestamppb.Timestamp{}
	_ = &meta_common.LabelledDomain{}
	_ = &meta_resource.Resource{}
	_ = &meta_service.Service{}
	_ = &meta.Meta{}
	_ = &multi_region_policy.MultiRegionPolicy{}
)

type LogConditionTemplateFieldPathBuilder struct{}

func NewLogConditionTemplateFieldPathBuilder() LogConditionTemplateFieldPathBuilder {
	return LogConditionTemplateFieldPathBuilder{}
}
func (LogConditionTemplateFieldPathBuilder) Name() LogConditionTemplatePathSelectorName {
	return LogConditionTemplatePathSelectorName{}
}
func (LogConditionTemplateFieldPathBuilder) Metadata() LogConditionTemplatePathSelectorMetadata {
	return LogConditionTemplatePathSelectorMetadata{}
}
func (LogConditionTemplateFieldPathBuilder) DisplayName() LogConditionTemplatePathSelectorDisplayName {
	return LogConditionTemplatePathSelectorDisplayName{}
}
func (LogConditionTemplateFieldPathBuilder) Description() LogConditionTemplatePathSelectorDescription {
	return LogConditionTemplatePathSelectorDescription{}
}
func (LogConditionTemplateFieldPathBuilder) SupportingDocs() LogConditionTemplatePathSelectorSupportingDocs {
	return LogConditionTemplatePathSelectorSupportingDocs{}
}
func (LogConditionTemplateFieldPathBuilder) SpecTemplate() LogConditionTemplatePathSelectorSpecTemplate {
	return LogConditionTemplatePathSelectorSpecTemplate{}
}

type LogConditionTemplatePathSelectorName struct{}

func (LogConditionTemplatePathSelectorName) FieldPath() *LogConditionTemplate_FieldTerminalPath {
	return &LogConditionTemplate_FieldTerminalPath{selector: LogConditionTemplate_FieldPathSelectorName}
}

func (s LogConditionTemplatePathSelectorName) WithValue(value *Name) *LogConditionTemplate_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*LogConditionTemplate_FieldTerminalPathValue)
}

func (s LogConditionTemplatePathSelectorName) WithArrayOfValues(values []*Name) *LogConditionTemplate_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*LogConditionTemplate_FieldTerminalPathArrayOfValues)
}

type LogConditionTemplatePathSelectorMetadata struct{}

func (LogConditionTemplatePathSelectorMetadata) FieldPath() *LogConditionTemplate_FieldTerminalPath {
	return &LogConditionTemplate_FieldTerminalPath{selector: LogConditionTemplate_FieldPathSelectorMetadata}
}

func (s LogConditionTemplatePathSelectorMetadata) WithValue(value *meta.Meta) *LogConditionTemplate_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*LogConditionTemplate_FieldTerminalPathValue)
}

func (s LogConditionTemplatePathSelectorMetadata) WithArrayOfValues(values []*meta.Meta) *LogConditionTemplate_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*LogConditionTemplate_FieldTerminalPathArrayOfValues)
}

func (LogConditionTemplatePathSelectorMetadata) WithSubPath(subPath meta.Meta_FieldPath) *LogConditionTemplate_FieldSubPath {
	return &LogConditionTemplate_FieldSubPath{selector: LogConditionTemplate_FieldPathSelectorMetadata, subPath: subPath}
}

func (s LogConditionTemplatePathSelectorMetadata) WithSubValue(subPathValue meta.Meta_FieldPathValue) *LogConditionTemplate_FieldSubPathValue {
	return &LogConditionTemplate_FieldSubPathValue{LogConditionTemplate_FieldPath: s.WithSubPath(subPathValue), subPathValue: subPathValue}
}

func (s LogConditionTemplatePathSelectorMetadata) WithSubArrayOfValues(subPathArrayOfValues meta.Meta_FieldPathArrayOfValues) *LogConditionTemplate_FieldSubPathArrayOfValues {
	return &LogConditionTemplate_FieldSubPathArrayOfValues{LogConditionTemplate_FieldPath: s.WithSubPath(subPathArrayOfValues), subPathArrayOfValues: subPathArrayOfValues}
}

func (s LogConditionTemplatePathSelectorMetadata) WithSubArrayItemValue(subPathArrayItemValue meta.Meta_FieldPathArrayItemValue) *LogConditionTemplate_FieldSubPathArrayItemValue {
	return &LogConditionTemplate_FieldSubPathArrayItemValue{LogConditionTemplate_FieldPath: s.WithSubPath(subPathArrayItemValue), subPathItemValue: subPathArrayItemValue}
}

func (LogConditionTemplatePathSelectorMetadata) CreateTime() LogConditionTemplatePathSelectorMetadataCreateTime {
	return LogConditionTemplatePathSelectorMetadataCreateTime{}
}

func (LogConditionTemplatePathSelectorMetadata) UpdateTime() LogConditionTemplatePathSelectorMetadataUpdateTime {
	return LogConditionTemplatePathSelectorMetadataUpdateTime{}
}

func (LogConditionTemplatePathSelectorMetadata) DeleteTime() LogConditionTemplatePathSelectorMetadataDeleteTime {
	return LogConditionTemplatePathSelectorMetadataDeleteTime{}
}

func (LogConditionTemplatePathSelectorMetadata) Uuid() LogConditionTemplatePathSelectorMetadataUuid {
	return LogConditionTemplatePathSelectorMetadataUuid{}
}

func (LogConditionTemplatePathSelectorMetadata) Tags() LogConditionTemplatePathSelectorMetadataTags {
	return LogConditionTemplatePathSelectorMetadataTags{}
}

func (LogConditionTemplatePathSelectorMetadata) Labels() LogConditionTemplatePathSelectorMetadataLabels {
	return LogConditionTemplatePathSelectorMetadataLabels{}
}

func (LogConditionTemplatePathSelectorMetadata) Annotations() LogConditionTemplatePathSelectorMetadataAnnotations {
	return LogConditionTemplatePathSelectorMetadataAnnotations{}
}

func (LogConditionTemplatePathSelectorMetadata) Generation() LogConditionTemplatePathSelectorMetadataGeneration {
	return LogConditionTemplatePathSelectorMetadataGeneration{}
}

func (LogConditionTemplatePathSelectorMetadata) ResourceVersion() LogConditionTemplatePathSelectorMetadataResourceVersion {
	return LogConditionTemplatePathSelectorMetadataResourceVersion{}
}

func (LogConditionTemplatePathSelectorMetadata) OwnerReferences() LogConditionTemplatePathSelectorMetadataOwnerReferences {
	return LogConditionTemplatePathSelectorMetadataOwnerReferences{}
}

func (LogConditionTemplatePathSelectorMetadata) Shards() LogConditionTemplatePathSelectorMetadataShards {
	return LogConditionTemplatePathSelectorMetadataShards{}
}

func (LogConditionTemplatePathSelectorMetadata) Syncing() LogConditionTemplatePathSelectorMetadataSyncing {
	return LogConditionTemplatePathSelectorMetadataSyncing{}
}

func (LogConditionTemplatePathSelectorMetadata) Lifecycle() LogConditionTemplatePathSelectorMetadataLifecycle {
	return LogConditionTemplatePathSelectorMetadataLifecycle{}
}

func (LogConditionTemplatePathSelectorMetadata) Services() LogConditionTemplatePathSelectorMetadataServices {
	return LogConditionTemplatePathSelectorMetadataServices{}
}

type LogConditionTemplatePathSelectorMetadataCreateTime struct{}

func (LogConditionTemplatePathSelectorMetadataCreateTime) FieldPath() *LogConditionTemplate_FieldSubPath {
	return &LogConditionTemplate_FieldSubPath{
		selector: LogConditionTemplate_FieldPathSelectorMetadata,
		subPath:  meta.NewMetaFieldPathBuilder().CreateTime().FieldPath(),
	}
}

func (s LogConditionTemplatePathSelectorMetadataCreateTime) WithValue(value *timestamppb.Timestamp) *LogConditionTemplate_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*LogConditionTemplate_FieldSubPathValue)
}

func (s LogConditionTemplatePathSelectorMetadataCreateTime) WithArrayOfValues(values []*timestamppb.Timestamp) *LogConditionTemplate_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*LogConditionTemplate_FieldSubPathArrayOfValues)
}

type LogConditionTemplatePathSelectorMetadataUpdateTime struct{}

func (LogConditionTemplatePathSelectorMetadataUpdateTime) FieldPath() *LogConditionTemplate_FieldSubPath {
	return &LogConditionTemplate_FieldSubPath{
		selector: LogConditionTemplate_FieldPathSelectorMetadata,
		subPath:  meta.NewMetaFieldPathBuilder().UpdateTime().FieldPath(),
	}
}

func (s LogConditionTemplatePathSelectorMetadataUpdateTime) WithValue(value *timestamppb.Timestamp) *LogConditionTemplate_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*LogConditionTemplate_FieldSubPathValue)
}

func (s LogConditionTemplatePathSelectorMetadataUpdateTime) WithArrayOfValues(values []*timestamppb.Timestamp) *LogConditionTemplate_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*LogConditionTemplate_FieldSubPathArrayOfValues)
}

type LogConditionTemplatePathSelectorMetadataDeleteTime struct{}

func (LogConditionTemplatePathSelectorMetadataDeleteTime) FieldPath() *LogConditionTemplate_FieldSubPath {
	return &LogConditionTemplate_FieldSubPath{
		selector: LogConditionTemplate_FieldPathSelectorMetadata,
		subPath:  meta.NewMetaFieldPathBuilder().DeleteTime().FieldPath(),
	}
}

func (s LogConditionTemplatePathSelectorMetadataDeleteTime) WithValue(value *timestamppb.Timestamp) *LogConditionTemplate_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*LogConditionTemplate_FieldSubPathValue)
}

func (s LogConditionTemplatePathSelectorMetadataDeleteTime) WithArrayOfValues(values []*timestamppb.Timestamp) *LogConditionTemplate_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*LogConditionTemplate_FieldSubPathArrayOfValues)
}

type LogConditionTemplatePathSelectorMetadataUuid struct{}

func (LogConditionTemplatePathSelectorMetadataUuid) FieldPath() *LogConditionTemplate_FieldSubPath {
	return &LogConditionTemplate_FieldSubPath{
		selector: LogConditionTemplate_FieldPathSelectorMetadata,
		subPath:  meta.NewMetaFieldPathBuilder().Uuid().FieldPath(),
	}
}

func (s LogConditionTemplatePathSelectorMetadataUuid) WithValue(value string) *LogConditionTemplate_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*LogConditionTemplate_FieldSubPathValue)
}

func (s LogConditionTemplatePathSelectorMetadataUuid) WithArrayOfValues(values []string) *LogConditionTemplate_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*LogConditionTemplate_FieldSubPathArrayOfValues)
}

type LogConditionTemplatePathSelectorMetadataTags struct{}

func (LogConditionTemplatePathSelectorMetadataTags) FieldPath() *LogConditionTemplate_FieldSubPath {
	return &LogConditionTemplate_FieldSubPath{
		selector: LogConditionTemplate_FieldPathSelectorMetadata,
		subPath:  meta.NewMetaFieldPathBuilder().Tags().FieldPath(),
	}
}

func (s LogConditionTemplatePathSelectorMetadataTags) WithValue(value []string) *LogConditionTemplate_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*LogConditionTemplate_FieldSubPathValue)
}

func (s LogConditionTemplatePathSelectorMetadataTags) WithArrayOfValues(values [][]string) *LogConditionTemplate_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*LogConditionTemplate_FieldSubPathArrayOfValues)
}

func (s LogConditionTemplatePathSelectorMetadataTags) WithItemValue(value string) *LogConditionTemplate_FieldSubPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*LogConditionTemplate_FieldSubPathArrayItemValue)
}

type LogConditionTemplatePathSelectorMetadataLabels struct{}

func (LogConditionTemplatePathSelectorMetadataLabels) FieldPath() *LogConditionTemplate_FieldSubPath {
	return &LogConditionTemplate_FieldSubPath{
		selector: LogConditionTemplate_FieldPathSelectorMetadata,
		subPath:  meta.NewMetaFieldPathBuilder().Labels().FieldPath(),
	}
}

func (s LogConditionTemplatePathSelectorMetadataLabels) WithValue(value map[string]string) *LogConditionTemplate_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*LogConditionTemplate_FieldSubPathValue)
}

func (s LogConditionTemplatePathSelectorMetadataLabels) WithArrayOfValues(values []map[string]string) *LogConditionTemplate_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*LogConditionTemplate_FieldSubPathArrayOfValues)
}

func (LogConditionTemplatePathSelectorMetadataLabels) WithKey(key string) LogConditionTemplateMapPathSelectorMetadataLabels {
	return LogConditionTemplateMapPathSelectorMetadataLabels{key: key}
}

type LogConditionTemplateMapPathSelectorMetadataLabels struct {
	key string
}

func (s LogConditionTemplateMapPathSelectorMetadataLabels) FieldPath() *LogConditionTemplate_FieldSubPath {
	return &LogConditionTemplate_FieldSubPath{
		selector: LogConditionTemplate_FieldPathSelectorMetadata,
		subPath:  meta.NewMetaFieldPathBuilder().Labels().WithKey(s.key).FieldPath(),
	}
}

func (s LogConditionTemplateMapPathSelectorMetadataLabels) WithValue(value string) *LogConditionTemplate_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*LogConditionTemplate_FieldSubPathValue)
}

func (s LogConditionTemplateMapPathSelectorMetadataLabels) WithArrayOfValues(values []string) *LogConditionTemplate_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*LogConditionTemplate_FieldSubPathArrayOfValues)
}

type LogConditionTemplatePathSelectorMetadataAnnotations struct{}

func (LogConditionTemplatePathSelectorMetadataAnnotations) FieldPath() *LogConditionTemplate_FieldSubPath {
	return &LogConditionTemplate_FieldSubPath{
		selector: LogConditionTemplate_FieldPathSelectorMetadata,
		subPath:  meta.NewMetaFieldPathBuilder().Annotations().FieldPath(),
	}
}

func (s LogConditionTemplatePathSelectorMetadataAnnotations) WithValue(value map[string]string) *LogConditionTemplate_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*LogConditionTemplate_FieldSubPathValue)
}

func (s LogConditionTemplatePathSelectorMetadataAnnotations) WithArrayOfValues(values []map[string]string) *LogConditionTemplate_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*LogConditionTemplate_FieldSubPathArrayOfValues)
}

func (LogConditionTemplatePathSelectorMetadataAnnotations) WithKey(key string) LogConditionTemplateMapPathSelectorMetadataAnnotations {
	return LogConditionTemplateMapPathSelectorMetadataAnnotations{key: key}
}

type LogConditionTemplateMapPathSelectorMetadataAnnotations struct {
	key string
}

func (s LogConditionTemplateMapPathSelectorMetadataAnnotations) FieldPath() *LogConditionTemplate_FieldSubPath {
	return &LogConditionTemplate_FieldSubPath{
		selector: LogConditionTemplate_FieldPathSelectorMetadata,
		subPath:  meta.NewMetaFieldPathBuilder().Annotations().WithKey(s.key).FieldPath(),
	}
}

func (s LogConditionTemplateMapPathSelectorMetadataAnnotations) WithValue(value string) *LogConditionTemplate_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*LogConditionTemplate_FieldSubPathValue)
}

func (s LogConditionTemplateMapPathSelectorMetadataAnnotations) WithArrayOfValues(values []string) *LogConditionTemplate_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*LogConditionTemplate_FieldSubPathArrayOfValues)
}

type LogConditionTemplatePathSelectorMetadataGeneration struct{}

func (LogConditionTemplatePathSelectorMetadataGeneration) FieldPath() *LogConditionTemplate_FieldSubPath {
	return &LogConditionTemplate_FieldSubPath{
		selector: LogConditionTemplate_FieldPathSelectorMetadata,
		subPath:  meta.NewMetaFieldPathBuilder().Generation().FieldPath(),
	}
}

func (s LogConditionTemplatePathSelectorMetadataGeneration) WithValue(value int64) *LogConditionTemplate_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*LogConditionTemplate_FieldSubPathValue)
}

func (s LogConditionTemplatePathSelectorMetadataGeneration) WithArrayOfValues(values []int64) *LogConditionTemplate_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*LogConditionTemplate_FieldSubPathArrayOfValues)
}

type LogConditionTemplatePathSelectorMetadataResourceVersion struct{}

func (LogConditionTemplatePathSelectorMetadataResourceVersion) FieldPath() *LogConditionTemplate_FieldSubPath {
	return &LogConditionTemplate_FieldSubPath{
		selector: LogConditionTemplate_FieldPathSelectorMetadata,
		subPath:  meta.NewMetaFieldPathBuilder().ResourceVersion().FieldPath(),
	}
}

func (s LogConditionTemplatePathSelectorMetadataResourceVersion) WithValue(value string) *LogConditionTemplate_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*LogConditionTemplate_FieldSubPathValue)
}

func (s LogConditionTemplatePathSelectorMetadataResourceVersion) WithArrayOfValues(values []string) *LogConditionTemplate_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*LogConditionTemplate_FieldSubPathArrayOfValues)
}

type LogConditionTemplatePathSelectorMetadataOwnerReferences struct{}

func (LogConditionTemplatePathSelectorMetadataOwnerReferences) FieldPath() *LogConditionTemplate_FieldSubPath {
	return &LogConditionTemplate_FieldSubPath{
		selector: LogConditionTemplate_FieldPathSelectorMetadata,
		subPath:  meta.NewMetaFieldPathBuilder().OwnerReferences().FieldPath(),
	}
}

func (s LogConditionTemplatePathSelectorMetadataOwnerReferences) WithValue(value []*meta.OwnerReference) *LogConditionTemplate_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*LogConditionTemplate_FieldSubPathValue)
}

func (s LogConditionTemplatePathSelectorMetadataOwnerReferences) WithArrayOfValues(values [][]*meta.OwnerReference) *LogConditionTemplate_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*LogConditionTemplate_FieldSubPathArrayOfValues)
}

func (s LogConditionTemplatePathSelectorMetadataOwnerReferences) WithItemValue(value *meta.OwnerReference) *LogConditionTemplate_FieldSubPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*LogConditionTemplate_FieldSubPathArrayItemValue)
}

func (LogConditionTemplatePathSelectorMetadataOwnerReferences) Kind() LogConditionTemplatePathSelectorMetadataOwnerReferencesKind {
	return LogConditionTemplatePathSelectorMetadataOwnerReferencesKind{}
}

func (LogConditionTemplatePathSelectorMetadataOwnerReferences) Version() LogConditionTemplatePathSelectorMetadataOwnerReferencesVersion {
	return LogConditionTemplatePathSelectorMetadataOwnerReferencesVersion{}
}

func (LogConditionTemplatePathSelectorMetadataOwnerReferences) Name() LogConditionTemplatePathSelectorMetadataOwnerReferencesName {
	return LogConditionTemplatePathSelectorMetadataOwnerReferencesName{}
}

func (LogConditionTemplatePathSelectorMetadataOwnerReferences) Region() LogConditionTemplatePathSelectorMetadataOwnerReferencesRegion {
	return LogConditionTemplatePathSelectorMetadataOwnerReferencesRegion{}
}

func (LogConditionTemplatePathSelectorMetadataOwnerReferences) Controller() LogConditionTemplatePathSelectorMetadataOwnerReferencesController {
	return LogConditionTemplatePathSelectorMetadataOwnerReferencesController{}
}

func (LogConditionTemplatePathSelectorMetadataOwnerReferences) RequiresOwnerReference() LogConditionTemplatePathSelectorMetadataOwnerReferencesRequiresOwnerReference {
	return LogConditionTemplatePathSelectorMetadataOwnerReferencesRequiresOwnerReference{}
}

func (LogConditionTemplatePathSelectorMetadataOwnerReferences) UnsetOnDelete() LogConditionTemplatePathSelectorMetadataOwnerReferencesUnsetOnDelete {
	return LogConditionTemplatePathSelectorMetadataOwnerReferencesUnsetOnDelete{}
}

type LogConditionTemplatePathSelectorMetadataOwnerReferencesKind struct{}

func (LogConditionTemplatePathSelectorMetadataOwnerReferencesKind) FieldPath() *LogConditionTemplate_FieldSubPath {
	return &LogConditionTemplate_FieldSubPath{
		selector: LogConditionTemplate_FieldPathSelectorMetadata,
		subPath:  meta.NewMetaFieldPathBuilder().OwnerReferences().Kind().FieldPath(),
	}
}

func (s LogConditionTemplatePathSelectorMetadataOwnerReferencesKind) WithValue(value string) *LogConditionTemplate_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*LogConditionTemplate_FieldSubPathValue)
}

func (s LogConditionTemplatePathSelectorMetadataOwnerReferencesKind) WithArrayOfValues(values []string) *LogConditionTemplate_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*LogConditionTemplate_FieldSubPathArrayOfValues)
}

type LogConditionTemplatePathSelectorMetadataOwnerReferencesVersion struct{}

func (LogConditionTemplatePathSelectorMetadataOwnerReferencesVersion) FieldPath() *LogConditionTemplate_FieldSubPath {
	return &LogConditionTemplate_FieldSubPath{
		selector: LogConditionTemplate_FieldPathSelectorMetadata,
		subPath:  meta.NewMetaFieldPathBuilder().OwnerReferences().Version().FieldPath(),
	}
}

func (s LogConditionTemplatePathSelectorMetadataOwnerReferencesVersion) WithValue(value string) *LogConditionTemplate_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*LogConditionTemplate_FieldSubPathValue)
}

func (s LogConditionTemplatePathSelectorMetadataOwnerReferencesVersion) WithArrayOfValues(values []string) *LogConditionTemplate_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*LogConditionTemplate_FieldSubPathArrayOfValues)
}

type LogConditionTemplatePathSelectorMetadataOwnerReferencesName struct{}

func (LogConditionTemplatePathSelectorMetadataOwnerReferencesName) FieldPath() *LogConditionTemplate_FieldSubPath {
	return &LogConditionTemplate_FieldSubPath{
		selector: LogConditionTemplate_FieldPathSelectorMetadata,
		subPath:  meta.NewMetaFieldPathBuilder().OwnerReferences().Name().FieldPath(),
	}
}

func (s LogConditionTemplatePathSelectorMetadataOwnerReferencesName) WithValue(value string) *LogConditionTemplate_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*LogConditionTemplate_FieldSubPathValue)
}

func (s LogConditionTemplatePathSelectorMetadataOwnerReferencesName) WithArrayOfValues(values []string) *LogConditionTemplate_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*LogConditionTemplate_FieldSubPathArrayOfValues)
}

type LogConditionTemplatePathSelectorMetadataOwnerReferencesRegion struct{}

func (LogConditionTemplatePathSelectorMetadataOwnerReferencesRegion) FieldPath() *LogConditionTemplate_FieldSubPath {
	return &LogConditionTemplate_FieldSubPath{
		selector: LogConditionTemplate_FieldPathSelectorMetadata,
		subPath:  meta.NewMetaFieldPathBuilder().OwnerReferences().Region().FieldPath(),
	}
}

func (s LogConditionTemplatePathSelectorMetadataOwnerReferencesRegion) WithValue(value string) *LogConditionTemplate_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*LogConditionTemplate_FieldSubPathValue)
}

func (s LogConditionTemplatePathSelectorMetadataOwnerReferencesRegion) WithArrayOfValues(values []string) *LogConditionTemplate_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*LogConditionTemplate_FieldSubPathArrayOfValues)
}

type LogConditionTemplatePathSelectorMetadataOwnerReferencesController struct{}

func (LogConditionTemplatePathSelectorMetadataOwnerReferencesController) FieldPath() *LogConditionTemplate_FieldSubPath {
	return &LogConditionTemplate_FieldSubPath{
		selector: LogConditionTemplate_FieldPathSelectorMetadata,
		subPath:  meta.NewMetaFieldPathBuilder().OwnerReferences().Controller().FieldPath(),
	}
}

func (s LogConditionTemplatePathSelectorMetadataOwnerReferencesController) WithValue(value bool) *LogConditionTemplate_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*LogConditionTemplate_FieldSubPathValue)
}

func (s LogConditionTemplatePathSelectorMetadataOwnerReferencesController) WithArrayOfValues(values []bool) *LogConditionTemplate_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*LogConditionTemplate_FieldSubPathArrayOfValues)
}

type LogConditionTemplatePathSelectorMetadataOwnerReferencesRequiresOwnerReference struct{}

func (LogConditionTemplatePathSelectorMetadataOwnerReferencesRequiresOwnerReference) FieldPath() *LogConditionTemplate_FieldSubPath {
	return &LogConditionTemplate_FieldSubPath{
		selector: LogConditionTemplate_FieldPathSelectorMetadata,
		subPath:  meta.NewMetaFieldPathBuilder().OwnerReferences().RequiresOwnerReference().FieldPath(),
	}
}

func (s LogConditionTemplatePathSelectorMetadataOwnerReferencesRequiresOwnerReference) WithValue(value bool) *LogConditionTemplate_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*LogConditionTemplate_FieldSubPathValue)
}

func (s LogConditionTemplatePathSelectorMetadataOwnerReferencesRequiresOwnerReference) WithArrayOfValues(values []bool) *LogConditionTemplate_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*LogConditionTemplate_FieldSubPathArrayOfValues)
}

type LogConditionTemplatePathSelectorMetadataOwnerReferencesUnsetOnDelete struct{}

func (LogConditionTemplatePathSelectorMetadataOwnerReferencesUnsetOnDelete) FieldPath() *LogConditionTemplate_FieldSubPath {
	return &LogConditionTemplate_FieldSubPath{
		selector: LogConditionTemplate_FieldPathSelectorMetadata,
		subPath:  meta.NewMetaFieldPathBuilder().OwnerReferences().UnsetOnDelete().FieldPath(),
	}
}

func (s LogConditionTemplatePathSelectorMetadataOwnerReferencesUnsetOnDelete) WithValue(value bool) *LogConditionTemplate_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*LogConditionTemplate_FieldSubPathValue)
}

func (s LogConditionTemplatePathSelectorMetadataOwnerReferencesUnsetOnDelete) WithArrayOfValues(values []bool) *LogConditionTemplate_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*LogConditionTemplate_FieldSubPathArrayOfValues)
}

type LogConditionTemplatePathSelectorMetadataShards struct{}

func (LogConditionTemplatePathSelectorMetadataShards) FieldPath() *LogConditionTemplate_FieldSubPath {
	return &LogConditionTemplate_FieldSubPath{
		selector: LogConditionTemplate_FieldPathSelectorMetadata,
		subPath:  meta.NewMetaFieldPathBuilder().Shards().FieldPath(),
	}
}

func (s LogConditionTemplatePathSelectorMetadataShards) WithValue(value map[string]int64) *LogConditionTemplate_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*LogConditionTemplate_FieldSubPathValue)
}

func (s LogConditionTemplatePathSelectorMetadataShards) WithArrayOfValues(values []map[string]int64) *LogConditionTemplate_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*LogConditionTemplate_FieldSubPathArrayOfValues)
}

func (LogConditionTemplatePathSelectorMetadataShards) WithKey(key string) LogConditionTemplateMapPathSelectorMetadataShards {
	return LogConditionTemplateMapPathSelectorMetadataShards{key: key}
}

type LogConditionTemplateMapPathSelectorMetadataShards struct {
	key string
}

func (s LogConditionTemplateMapPathSelectorMetadataShards) FieldPath() *LogConditionTemplate_FieldSubPath {
	return &LogConditionTemplate_FieldSubPath{
		selector: LogConditionTemplate_FieldPathSelectorMetadata,
		subPath:  meta.NewMetaFieldPathBuilder().Shards().WithKey(s.key).FieldPath(),
	}
}

func (s LogConditionTemplateMapPathSelectorMetadataShards) WithValue(value int64) *LogConditionTemplate_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*LogConditionTemplate_FieldSubPathValue)
}

func (s LogConditionTemplateMapPathSelectorMetadataShards) WithArrayOfValues(values []int64) *LogConditionTemplate_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*LogConditionTemplate_FieldSubPathArrayOfValues)
}

type LogConditionTemplatePathSelectorMetadataSyncing struct{}

func (LogConditionTemplatePathSelectorMetadataSyncing) FieldPath() *LogConditionTemplate_FieldSubPath {
	return &LogConditionTemplate_FieldSubPath{
		selector: LogConditionTemplate_FieldPathSelectorMetadata,
		subPath:  meta.NewMetaFieldPathBuilder().Syncing().FieldPath(),
	}
}

func (s LogConditionTemplatePathSelectorMetadataSyncing) WithValue(value *meta.SyncingMeta) *LogConditionTemplate_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*LogConditionTemplate_FieldSubPathValue)
}

func (s LogConditionTemplatePathSelectorMetadataSyncing) WithArrayOfValues(values []*meta.SyncingMeta) *LogConditionTemplate_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*LogConditionTemplate_FieldSubPathArrayOfValues)
}

func (LogConditionTemplatePathSelectorMetadataSyncing) OwningRegion() LogConditionTemplatePathSelectorMetadataSyncingOwningRegion {
	return LogConditionTemplatePathSelectorMetadataSyncingOwningRegion{}
}

func (LogConditionTemplatePathSelectorMetadataSyncing) Regions() LogConditionTemplatePathSelectorMetadataSyncingRegions {
	return LogConditionTemplatePathSelectorMetadataSyncingRegions{}
}

type LogConditionTemplatePathSelectorMetadataSyncingOwningRegion struct{}

func (LogConditionTemplatePathSelectorMetadataSyncingOwningRegion) FieldPath() *LogConditionTemplate_FieldSubPath {
	return &LogConditionTemplate_FieldSubPath{
		selector: LogConditionTemplate_FieldPathSelectorMetadata,
		subPath:  meta.NewMetaFieldPathBuilder().Syncing().OwningRegion().FieldPath(),
	}
}

func (s LogConditionTemplatePathSelectorMetadataSyncingOwningRegion) WithValue(value string) *LogConditionTemplate_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*LogConditionTemplate_FieldSubPathValue)
}

func (s LogConditionTemplatePathSelectorMetadataSyncingOwningRegion) WithArrayOfValues(values []string) *LogConditionTemplate_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*LogConditionTemplate_FieldSubPathArrayOfValues)
}

type LogConditionTemplatePathSelectorMetadataSyncingRegions struct{}

func (LogConditionTemplatePathSelectorMetadataSyncingRegions) FieldPath() *LogConditionTemplate_FieldSubPath {
	return &LogConditionTemplate_FieldSubPath{
		selector: LogConditionTemplate_FieldPathSelectorMetadata,
		subPath:  meta.NewMetaFieldPathBuilder().Syncing().Regions().FieldPath(),
	}
}

func (s LogConditionTemplatePathSelectorMetadataSyncingRegions) WithValue(value []string) *LogConditionTemplate_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*LogConditionTemplate_FieldSubPathValue)
}

func (s LogConditionTemplatePathSelectorMetadataSyncingRegions) WithArrayOfValues(values [][]string) *LogConditionTemplate_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*LogConditionTemplate_FieldSubPathArrayOfValues)
}

func (s LogConditionTemplatePathSelectorMetadataSyncingRegions) WithItemValue(value string) *LogConditionTemplate_FieldSubPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*LogConditionTemplate_FieldSubPathArrayItemValue)
}

type LogConditionTemplatePathSelectorMetadataLifecycle struct{}

func (LogConditionTemplatePathSelectorMetadataLifecycle) FieldPath() *LogConditionTemplate_FieldSubPath {
	return &LogConditionTemplate_FieldSubPath{
		selector: LogConditionTemplate_FieldPathSelectorMetadata,
		subPath:  meta.NewMetaFieldPathBuilder().Lifecycle().FieldPath(),
	}
}

func (s LogConditionTemplatePathSelectorMetadataLifecycle) WithValue(value *meta.Lifecycle) *LogConditionTemplate_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*LogConditionTemplate_FieldSubPathValue)
}

func (s LogConditionTemplatePathSelectorMetadataLifecycle) WithArrayOfValues(values []*meta.Lifecycle) *LogConditionTemplate_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*LogConditionTemplate_FieldSubPathArrayOfValues)
}

func (LogConditionTemplatePathSelectorMetadataLifecycle) State() LogConditionTemplatePathSelectorMetadataLifecycleState {
	return LogConditionTemplatePathSelectorMetadataLifecycleState{}
}

func (LogConditionTemplatePathSelectorMetadataLifecycle) BlockDeletion() LogConditionTemplatePathSelectorMetadataLifecycleBlockDeletion {
	return LogConditionTemplatePathSelectorMetadataLifecycleBlockDeletion{}
}

type LogConditionTemplatePathSelectorMetadataLifecycleState struct{}

func (LogConditionTemplatePathSelectorMetadataLifecycleState) FieldPath() *LogConditionTemplate_FieldSubPath {
	return &LogConditionTemplate_FieldSubPath{
		selector: LogConditionTemplate_FieldPathSelectorMetadata,
		subPath:  meta.NewMetaFieldPathBuilder().Lifecycle().State().FieldPath(),
	}
}

func (s LogConditionTemplatePathSelectorMetadataLifecycleState) WithValue(value meta.Lifecycle_State) *LogConditionTemplate_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*LogConditionTemplate_FieldSubPathValue)
}

func (s LogConditionTemplatePathSelectorMetadataLifecycleState) WithArrayOfValues(values []meta.Lifecycle_State) *LogConditionTemplate_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*LogConditionTemplate_FieldSubPathArrayOfValues)
}

type LogConditionTemplatePathSelectorMetadataLifecycleBlockDeletion struct{}

func (LogConditionTemplatePathSelectorMetadataLifecycleBlockDeletion) FieldPath() *LogConditionTemplate_FieldSubPath {
	return &LogConditionTemplate_FieldSubPath{
		selector: LogConditionTemplate_FieldPathSelectorMetadata,
		subPath:  meta.NewMetaFieldPathBuilder().Lifecycle().BlockDeletion().FieldPath(),
	}
}

func (s LogConditionTemplatePathSelectorMetadataLifecycleBlockDeletion) WithValue(value bool) *LogConditionTemplate_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*LogConditionTemplate_FieldSubPathValue)
}

func (s LogConditionTemplatePathSelectorMetadataLifecycleBlockDeletion) WithArrayOfValues(values []bool) *LogConditionTemplate_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*LogConditionTemplate_FieldSubPathArrayOfValues)
}

type LogConditionTemplatePathSelectorMetadataServices struct{}

func (LogConditionTemplatePathSelectorMetadataServices) FieldPath() *LogConditionTemplate_FieldSubPath {
	return &LogConditionTemplate_FieldSubPath{
		selector: LogConditionTemplate_FieldPathSelectorMetadata,
		subPath:  meta.NewMetaFieldPathBuilder().Services().FieldPath(),
	}
}

func (s LogConditionTemplatePathSelectorMetadataServices) WithValue(value *meta.ServicesInfo) *LogConditionTemplate_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*LogConditionTemplate_FieldSubPathValue)
}

func (s LogConditionTemplatePathSelectorMetadataServices) WithArrayOfValues(values []*meta.ServicesInfo) *LogConditionTemplate_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*LogConditionTemplate_FieldSubPathArrayOfValues)
}

func (LogConditionTemplatePathSelectorMetadataServices) OwningService() LogConditionTemplatePathSelectorMetadataServicesOwningService {
	return LogConditionTemplatePathSelectorMetadataServicesOwningService{}
}

func (LogConditionTemplatePathSelectorMetadataServices) AllowedServices() LogConditionTemplatePathSelectorMetadataServicesAllowedServices {
	return LogConditionTemplatePathSelectorMetadataServicesAllowedServices{}
}

type LogConditionTemplatePathSelectorMetadataServicesOwningService struct{}

func (LogConditionTemplatePathSelectorMetadataServicesOwningService) FieldPath() *LogConditionTemplate_FieldSubPath {
	return &LogConditionTemplate_FieldSubPath{
		selector: LogConditionTemplate_FieldPathSelectorMetadata,
		subPath:  meta.NewMetaFieldPathBuilder().Services().OwningService().FieldPath(),
	}
}

func (s LogConditionTemplatePathSelectorMetadataServicesOwningService) WithValue(value string) *LogConditionTemplate_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*LogConditionTemplate_FieldSubPathValue)
}

func (s LogConditionTemplatePathSelectorMetadataServicesOwningService) WithArrayOfValues(values []string) *LogConditionTemplate_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*LogConditionTemplate_FieldSubPathArrayOfValues)
}

type LogConditionTemplatePathSelectorMetadataServicesAllowedServices struct{}

func (LogConditionTemplatePathSelectorMetadataServicesAllowedServices) FieldPath() *LogConditionTemplate_FieldSubPath {
	return &LogConditionTemplate_FieldSubPath{
		selector: LogConditionTemplate_FieldPathSelectorMetadata,
		subPath:  meta.NewMetaFieldPathBuilder().Services().AllowedServices().FieldPath(),
	}
}

func (s LogConditionTemplatePathSelectorMetadataServicesAllowedServices) WithValue(value []string) *LogConditionTemplate_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*LogConditionTemplate_FieldSubPathValue)
}

func (s LogConditionTemplatePathSelectorMetadataServicesAllowedServices) WithArrayOfValues(values [][]string) *LogConditionTemplate_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*LogConditionTemplate_FieldSubPathArrayOfValues)
}

func (s LogConditionTemplatePathSelectorMetadataServicesAllowedServices) WithItemValue(value string) *LogConditionTemplate_FieldSubPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*LogConditionTemplate_FieldSubPathArrayItemValue)
}

type LogConditionTemplatePathSelectorDisplayName struct{}

func (LogConditionTemplatePathSelectorDisplayName) FieldPath() *LogConditionTemplate_FieldTerminalPath {
	return &LogConditionTemplate_FieldTerminalPath{selector: LogConditionTemplate_FieldPathSelectorDisplayName}
}

func (s LogConditionTemplatePathSelectorDisplayName) WithValue(value string) *LogConditionTemplate_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*LogConditionTemplate_FieldTerminalPathValue)
}

func (s LogConditionTemplatePathSelectorDisplayName) WithArrayOfValues(values []string) *LogConditionTemplate_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*LogConditionTemplate_FieldTerminalPathArrayOfValues)
}

type LogConditionTemplatePathSelectorDescription struct{}

func (LogConditionTemplatePathSelectorDescription) FieldPath() *LogConditionTemplate_FieldTerminalPath {
	return &LogConditionTemplate_FieldTerminalPath{selector: LogConditionTemplate_FieldPathSelectorDescription}
}

func (s LogConditionTemplatePathSelectorDescription) WithValue(value string) *LogConditionTemplate_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*LogConditionTemplate_FieldTerminalPathValue)
}

func (s LogConditionTemplatePathSelectorDescription) WithArrayOfValues(values []string) *LogConditionTemplate_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*LogConditionTemplate_FieldTerminalPathArrayOfValues)
}

type LogConditionTemplatePathSelectorSupportingDocs struct{}

func (LogConditionTemplatePathSelectorSupportingDocs) FieldPath() *LogConditionTemplate_FieldTerminalPath {
	return &LogConditionTemplate_FieldTerminalPath{selector: LogConditionTemplate_FieldPathSelectorSupportingDocs}
}

func (s LogConditionTemplatePathSelectorSupportingDocs) WithValue(value []*document.Reference) *LogConditionTemplate_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*LogConditionTemplate_FieldTerminalPathValue)
}

func (s LogConditionTemplatePathSelectorSupportingDocs) WithArrayOfValues(values [][]*document.Reference) *LogConditionTemplate_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*LogConditionTemplate_FieldTerminalPathArrayOfValues)
}

func (s LogConditionTemplatePathSelectorSupportingDocs) WithItemValue(value *document.Reference) *LogConditionTemplate_FieldTerminalPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*LogConditionTemplate_FieldTerminalPathArrayItemValue)
}

type LogConditionTemplatePathSelectorSpecTemplate struct{}

func (LogConditionTemplatePathSelectorSpecTemplate) FieldPath() *LogConditionTemplate_FieldTerminalPath {
	return &LogConditionTemplate_FieldTerminalPath{selector: LogConditionTemplate_FieldPathSelectorSpecTemplate}
}

func (s LogConditionTemplatePathSelectorSpecTemplate) WithValue(value *rcommon.LogCndSpec) *LogConditionTemplate_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*LogConditionTemplate_FieldTerminalPathValue)
}

func (s LogConditionTemplatePathSelectorSpecTemplate) WithArrayOfValues(values []*rcommon.LogCndSpec) *LogConditionTemplate_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*LogConditionTemplate_FieldTerminalPathArrayOfValues)
}

func (LogConditionTemplatePathSelectorSpecTemplate) WithSubPath(subPath rcommon.LogCndSpec_FieldPath) *LogConditionTemplate_FieldSubPath {
	return &LogConditionTemplate_FieldSubPath{selector: LogConditionTemplate_FieldPathSelectorSpecTemplate, subPath: subPath}
}

func (s LogConditionTemplatePathSelectorSpecTemplate) WithSubValue(subPathValue rcommon.LogCndSpec_FieldPathValue) *LogConditionTemplate_FieldSubPathValue {
	return &LogConditionTemplate_FieldSubPathValue{LogConditionTemplate_FieldPath: s.WithSubPath(subPathValue), subPathValue: subPathValue}
}

func (s LogConditionTemplatePathSelectorSpecTemplate) WithSubArrayOfValues(subPathArrayOfValues rcommon.LogCndSpec_FieldPathArrayOfValues) *LogConditionTemplate_FieldSubPathArrayOfValues {
	return &LogConditionTemplate_FieldSubPathArrayOfValues{LogConditionTemplate_FieldPath: s.WithSubPath(subPathArrayOfValues), subPathArrayOfValues: subPathArrayOfValues}
}

func (s LogConditionTemplatePathSelectorSpecTemplate) WithSubArrayItemValue(subPathArrayItemValue rcommon.LogCndSpec_FieldPathArrayItemValue) *LogConditionTemplate_FieldSubPathArrayItemValue {
	return &LogConditionTemplate_FieldSubPathArrayItemValue{LogConditionTemplate_FieldPath: s.WithSubPath(subPathArrayItemValue), subPathItemValue: subPathArrayItemValue}
}

func (LogConditionTemplatePathSelectorSpecTemplate) Query() LogConditionTemplatePathSelectorSpecTemplateQuery {
	return LogConditionTemplatePathSelectorSpecTemplateQuery{}
}

func (LogConditionTemplatePathSelectorSpecTemplate) GroupByLabels() LogConditionTemplatePathSelectorSpecTemplateGroupByLabels {
	return LogConditionTemplatePathSelectorSpecTemplateGroupByLabels{}
}

type LogConditionTemplatePathSelectorSpecTemplateQuery struct{}

func (LogConditionTemplatePathSelectorSpecTemplateQuery) FieldPath() *LogConditionTemplate_FieldSubPath {
	return &LogConditionTemplate_FieldSubPath{
		selector: LogConditionTemplate_FieldPathSelectorSpecTemplate,
		subPath:  rcommon.NewLogCndSpecFieldPathBuilder().Query().FieldPath(),
	}
}

func (s LogConditionTemplatePathSelectorSpecTemplateQuery) WithValue(value *rcommon.LogCndSpec_Query) *LogConditionTemplate_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*LogConditionTemplate_FieldSubPathValue)
}

func (s LogConditionTemplatePathSelectorSpecTemplateQuery) WithArrayOfValues(values []*rcommon.LogCndSpec_Query) *LogConditionTemplate_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*LogConditionTemplate_FieldSubPathArrayOfValues)
}

func (LogConditionTemplatePathSelectorSpecTemplateQuery) Filter() LogConditionTemplatePathSelectorSpecTemplateQueryFilter {
	return LogConditionTemplatePathSelectorSpecTemplateQueryFilter{}
}

func (LogConditionTemplatePathSelectorSpecTemplateQuery) Trigger() LogConditionTemplatePathSelectorSpecTemplateQueryTrigger {
	return LogConditionTemplatePathSelectorSpecTemplateQueryTrigger{}
}

func (LogConditionTemplatePathSelectorSpecTemplateQuery) MinDuration() LogConditionTemplatePathSelectorSpecTemplateQueryMinDuration {
	return LogConditionTemplatePathSelectorSpecTemplateQueryMinDuration{}
}

type LogConditionTemplatePathSelectorSpecTemplateQueryFilter struct{}

func (LogConditionTemplatePathSelectorSpecTemplateQueryFilter) FieldPath() *LogConditionTemplate_FieldSubPath {
	return &LogConditionTemplate_FieldSubPath{
		selector: LogConditionTemplate_FieldPathSelectorSpecTemplate,
		subPath:  rcommon.NewLogCndSpecFieldPathBuilder().Query().Filter().FieldPath(),
	}
}

func (s LogConditionTemplatePathSelectorSpecTemplateQueryFilter) WithValue(value *logging_log.Filter) *LogConditionTemplate_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*LogConditionTemplate_FieldSubPathValue)
}

func (s LogConditionTemplatePathSelectorSpecTemplateQueryFilter) WithArrayOfValues(values []*logging_log.Filter) *LogConditionTemplate_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*LogConditionTemplate_FieldSubPathArrayOfValues)
}

type LogConditionTemplatePathSelectorSpecTemplateQueryTrigger struct{}

func (LogConditionTemplatePathSelectorSpecTemplateQueryTrigger) FieldPath() *LogConditionTemplate_FieldSubPath {
	return &LogConditionTemplate_FieldSubPath{
		selector: LogConditionTemplate_FieldPathSelectorSpecTemplate,
		subPath:  rcommon.NewLogCndSpecFieldPathBuilder().Query().Trigger().FieldPath(),
	}
}

func (s LogConditionTemplatePathSelectorSpecTemplateQueryTrigger) WithValue(value *rcommon.LogCndSpec_Query_TriggerCnd) *LogConditionTemplate_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*LogConditionTemplate_FieldSubPathValue)
}

func (s LogConditionTemplatePathSelectorSpecTemplateQueryTrigger) WithArrayOfValues(values []*rcommon.LogCndSpec_Query_TriggerCnd) *LogConditionTemplate_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*LogConditionTemplate_FieldSubPathArrayOfValues)
}

type LogConditionTemplatePathSelectorSpecTemplateQueryMinDuration struct{}

func (LogConditionTemplatePathSelectorSpecTemplateQueryMinDuration) FieldPath() *LogConditionTemplate_FieldSubPath {
	return &LogConditionTemplate_FieldSubPath{
		selector: LogConditionTemplate_FieldPathSelectorSpecTemplate,
		subPath:  rcommon.NewLogCndSpecFieldPathBuilder().Query().MinDuration().FieldPath(),
	}
}

func (s LogConditionTemplatePathSelectorSpecTemplateQueryMinDuration) WithValue(value *durationpb.Duration) *LogConditionTemplate_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*LogConditionTemplate_FieldSubPathValue)
}

func (s LogConditionTemplatePathSelectorSpecTemplateQueryMinDuration) WithArrayOfValues(values []*durationpb.Duration) *LogConditionTemplate_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*LogConditionTemplate_FieldSubPathArrayOfValues)
}

type LogConditionTemplatePathSelectorSpecTemplateGroupByLabels struct{}

func (LogConditionTemplatePathSelectorSpecTemplateGroupByLabels) FieldPath() *LogConditionTemplate_FieldSubPath {
	return &LogConditionTemplate_FieldSubPath{
		selector: LogConditionTemplate_FieldPathSelectorSpecTemplate,
		subPath:  rcommon.NewLogCndSpecFieldPathBuilder().GroupByLabels().FieldPath(),
	}
}

func (s LogConditionTemplatePathSelectorSpecTemplateGroupByLabels) WithValue(value []string) *LogConditionTemplate_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*LogConditionTemplate_FieldSubPathValue)
}

func (s LogConditionTemplatePathSelectorSpecTemplateGroupByLabels) WithArrayOfValues(values [][]string) *LogConditionTemplate_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*LogConditionTemplate_FieldSubPathArrayOfValues)
}

func (s LogConditionTemplatePathSelectorSpecTemplateGroupByLabels) WithItemValue(value string) *LogConditionTemplate_FieldSubPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*LogConditionTemplate_FieldSubPathArrayItemValue)
}
