// Code generated by protoc-gen-goten-client
// API: EdgeWatchServiceService
// DO NOT EDIT!!!

package edge_watch_service_client

import (
	"google.golang.org/protobuf/proto"

	gotenclient "github.com/cloudwan/goten-sdk/runtime/client"
	gotenresource "github.com/cloudwan/goten-sdk/runtime/resource"
)

// proto imports
import ()

// Reference imports to suppress errors if they are not otherwise used.
var (
	_ = new(proto.Message)
	_ = new(gotenclient.MethodDescriptor)
	_ = gotenresource.WildcardId
)

// make sure we're using proto imports
var ()

var (
	descriptorsInitialized            bool
	edgeWatchServiceServiceDescriptor *EdgeWatchServiceServiceDescriptor
	watchAlertDataDescriptor          *WatchAlertDataDescriptor
)

type WatchAlertDataDescriptor struct{}

type WatchAlertDataDescriptorClientMsgHandle struct{}

type WatchAlertDataDescriptorServerMsgHandle struct{}

func (d *WatchAlertDataDescriptor) NewEmptyClientMsg() proto.Message {
	return &WatchAlertDataRequest{}
}

func (d *WatchAlertDataDescriptor) NewEmptyServerMsg() proto.Message {
	return &WatchAlertDataResponse{}
}

func (d *WatchAlertDataDescriptor) IsUnary() bool {
	return false
}

func (d *WatchAlertDataDescriptor) IsClientStream() bool {
	return false
}

func (d *WatchAlertDataDescriptor) IsServerStream() bool {
	return true
}

func (d *WatchAlertDataDescriptor) IsCollection() bool {
	return false
}

func (d *WatchAlertDataDescriptor) IsPlural() bool {
	return false
}

func (d *WatchAlertDataDescriptor) HasResource() bool {
	return false
}

func (d *WatchAlertDataDescriptor) RequestHasResourceBody() bool {
	return false
}

func (d *WatchAlertDataDescriptor) GetVerb() string {
	return "watchAlertData"
}

func (d *WatchAlertDataDescriptor) GetMethodName() string {
	return "WatchAlertData"
}

func (d *WatchAlertDataDescriptor) GetFullMethodName() string {
	return "/ntt.alerting.v1.EdgeWatchServiceService/WatchAlertData"
}

func (d *WatchAlertDataDescriptor) GetProtoPkgName() string {
	return "ntt.alerting.v1"
}

func (d *WatchAlertDataDescriptor) GetApiName() string {
	return "EdgeWatchServiceService"
}

func (d *WatchAlertDataDescriptor) GetServiceDomain() string {
	return "alerting.edgelq.com"
}

func (d *WatchAlertDataDescriptor) GetServiceVersion() string {
	return "v1"
}

func (d *WatchAlertDataDescriptor) GetApiDescriptor() gotenclient.ApiDescriptor {
	return edgeWatchServiceServiceDescriptor
}

func (d *WatchAlertDataDescriptor) GetResourceDescriptor() gotenresource.Descriptor {
	return nil
}

func (d *WatchAlertDataDescriptor) GetClientMsgReflectHandle() gotenclient.MethodMsgHandle {
	return &WatchAlertDataDescriptorClientMsgHandle{}
}

func (d *WatchAlertDataDescriptor) GetServerMsgReflectHandle() gotenclient.MethodMsgHandle {
	return &WatchAlertDataDescriptorServerMsgHandle{}
}

func (h *WatchAlertDataDescriptorClientMsgHandle) ExtractResourceName(msg proto.Message) gotenresource.Name {
	return nil
}

func (h *WatchAlertDataDescriptorClientMsgHandle) ExtractResourceNames(msg proto.Message) gotenresource.NameList {
	return nil
}

func (h *WatchAlertDataDescriptorClientMsgHandle) ExtractCollectionName(msg proto.Message) gotenresource.Name {
	return nil
}

func (h *WatchAlertDataDescriptorClientMsgHandle) ExtractResourceBody(msg proto.Message) gotenresource.Resource {
	return nil
}

func (h *WatchAlertDataDescriptorClientMsgHandle) ExtractResourceBodies(msg proto.Message) gotenresource.ResourceList {
	return nil
}

func (h *WatchAlertDataDescriptorServerMsgHandle) ExtractResourceName(msg proto.Message) gotenresource.Name {
	return nil
}

func (h *WatchAlertDataDescriptorServerMsgHandle) ExtractResourceNames(msg proto.Message) gotenresource.NameList {
	return nil
}

func (h *WatchAlertDataDescriptorServerMsgHandle) ExtractCollectionName(msg proto.Message) gotenresource.Name {
	return nil
}

func (h *WatchAlertDataDescriptorServerMsgHandle) ExtractResourceBody(msg proto.Message) gotenresource.Resource {
	return nil
}

func (h *WatchAlertDataDescriptorServerMsgHandle) ExtractResourceBodies(msg proto.Message) gotenresource.ResourceList {
	return nil
}

func GetWatchAlertDataDescriptor() *WatchAlertDataDescriptor {
	return watchAlertDataDescriptor
}

type EdgeWatchServiceServiceDescriptor struct{}

func (d *EdgeWatchServiceServiceDescriptor) AllMethodDescriptors() []gotenclient.MethodDescriptor {
	return []gotenclient.MethodDescriptor{
		watchAlertDataDescriptor,
	}
}

func (d *EdgeWatchServiceServiceDescriptor) GetFullAPIName() string {
	return "/ntt.alerting.v1.EdgeWatchServiceService"
}

func (d *EdgeWatchServiceServiceDescriptor) GetProtoPkgName() string {
	return "ntt.alerting.v1"
}

func (d *EdgeWatchServiceServiceDescriptor) GetApiName() string {
	return "EdgeWatchServiceService"
}

func (d *EdgeWatchServiceServiceDescriptor) GetServiceDomain() string {
	return "alerting.edgelq.com"
}

func (d *EdgeWatchServiceServiceDescriptor) GetServiceVersion() string {
	return "v1"
}

func GetEdgeWatchServiceServiceDescriptor() *EdgeWatchServiceServiceDescriptor {
	return edgeWatchServiceServiceDescriptor
}

func initDescriptors() {
	edgeWatchServiceServiceDescriptor = &EdgeWatchServiceServiceDescriptor{}
	watchAlertDataDescriptor = &WatchAlertDataDescriptor{}
	gotenclient.GetRegistry().RegisterApiDescriptor(edgeWatchServiceServiceDescriptor)
	gotenclient.GetRegistry().RegisterMethodDescriptor(watchAlertDataDescriptor)
}

func init() {
	if !descriptorsInitialized {
		initDescriptors()
		descriptorsInitialized = true
	}
}
