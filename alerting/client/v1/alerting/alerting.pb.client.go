// Code generated by protoc-gen-goten-client
// Service: Alerting
// DO NOT EDIT!!!

package alerting_client

import (
	"google.golang.org/grpc"
)

// proto imports
import (
	alert_client "github.com/cloudwan/edgelq-sdk/alerting/client/v1/alert"
	document_client "github.com/cloudwan/edgelq-sdk/alerting/client/v1/document"
	edge_watch_service_client "github.com/cloudwan/edgelq-sdk/alerting/client/v1/edge_watch_service"
	log_condition_client "github.com/cloudwan/edgelq-sdk/alerting/client/v1/log_condition"
	log_condition_template_client "github.com/cloudwan/edgelq-sdk/alerting/client/v1/log_condition_template"
	notification_channel_client "github.com/cloudwan/edgelq-sdk/alerting/client/v1/notification_channel"
	policy_client "github.com/cloudwan/edgelq-sdk/alerting/client/v1/policy"
	policy_template_client "github.com/cloudwan/edgelq-sdk/alerting/client/v1/policy_template"
	ts_condition_client "github.com/cloudwan/edgelq-sdk/alerting/client/v1/ts_condition"
	ts_condition_template_client "github.com/cloudwan/edgelq-sdk/alerting/client/v1/ts_condition_template"
	ts_entry_client "github.com/cloudwan/edgelq-sdk/alerting/client/v1/ts_entry"
	alert "github.com/cloudwan/edgelq-sdk/alerting/resources/v1/alert"
	document "github.com/cloudwan/edgelq-sdk/alerting/resources/v1/document"
	log_condition "github.com/cloudwan/edgelq-sdk/alerting/resources/v1/log_condition"
	log_condition_template "github.com/cloudwan/edgelq-sdk/alerting/resources/v1/log_condition_template"
	notification_channel "github.com/cloudwan/edgelq-sdk/alerting/resources/v1/notification_channel"
	policy "github.com/cloudwan/edgelq-sdk/alerting/resources/v1/policy"
	policy_template "github.com/cloudwan/edgelq-sdk/alerting/resources/v1/policy_template"
	ts_condition "github.com/cloudwan/edgelq-sdk/alerting/resources/v1/ts_condition"
	ts_condition_template "github.com/cloudwan/edgelq-sdk/alerting/resources/v1/ts_condition_template"
	ts_entry "github.com/cloudwan/edgelq-sdk/alerting/resources/v1/ts_entry"
)

// Reference imports to suppress errors if they are not otherwise used.
var (
	_ = grpc.ClientConn{}
)

// make sure we're using proto imports
var (
	_ = &alert.Alert{}
	_ = &alert_client.GetAlertRequest{}
	_ = &document.Document{}
	_ = &document_client.GetDocumentRequest{}
	_ = &log_condition.LogCondition{}
	_ = &log_condition_client.GetLogConditionRequest{}
	_ = &log_condition_template.LogConditionTemplate{}
	_ = &log_condition_template_client.GetLogConditionTemplateRequest{}
	_ = &notification_channel.NotificationChannel{}
	_ = &notification_channel_client.GetNotificationChannelRequest{}
	_ = &policy.Policy{}
	_ = &policy_client.GetPolicyRequest{}
	_ = &policy_template.PolicyTemplate{}
	_ = &policy_template_client.GetPolicyTemplateRequest{}
	_ = &ts_condition.TsCondition{}
	_ = &ts_condition_client.GetTsConditionRequest{}
	_ = &ts_condition_template.TsConditionTemplate{}
	_ = &ts_condition_template_client.GetTsConditionTemplateRequest{}
	_ = &ts_entry.TsEntry{}
	_ = &ts_entry_client.GetTsEntryRequest{}
)

type AlertingClient interface {
	alert_client.AlertServiceClient
	document_client.DocumentServiceClient
	edge_watch_service_client.EdgeWatchServiceServiceClient
	log_condition_client.LogConditionServiceClient
	log_condition_template_client.LogConditionTemplateServiceClient
	notification_channel_client.NotificationChannelServiceClient
	policy_client.PolicyServiceClient
	policy_template_client.PolicyTemplateServiceClient
	ts_condition_client.TsConditionServiceClient
	ts_condition_template_client.TsConditionTemplateServiceClient
	ts_entry_client.TsEntryServiceClient
}

type alertingClient struct {
	alert_client.AlertServiceClient
	document_client.DocumentServiceClient
	edge_watch_service_client.EdgeWatchServiceServiceClient
	log_condition_client.LogConditionServiceClient
	log_condition_template_client.LogConditionTemplateServiceClient
	notification_channel_client.NotificationChannelServiceClient
	policy_client.PolicyServiceClient
	policy_template_client.PolicyTemplateServiceClient
	ts_condition_client.TsConditionServiceClient
	ts_condition_template_client.TsConditionTemplateServiceClient
	ts_entry_client.TsEntryServiceClient
}

func NewAlertingClient(cc grpc.ClientConnInterface) AlertingClient {
	return &alertingClient{
		AlertServiceClient:                alert_client.NewAlertServiceClient(cc),
		DocumentServiceClient:             document_client.NewDocumentServiceClient(cc),
		EdgeWatchServiceServiceClient:     edge_watch_service_client.NewEdgeWatchServiceServiceClient(cc),
		LogConditionServiceClient:         log_condition_client.NewLogConditionServiceClient(cc),
		LogConditionTemplateServiceClient: log_condition_template_client.NewLogConditionTemplateServiceClient(cc),
		NotificationChannelServiceClient:  notification_channel_client.NewNotificationChannelServiceClient(cc),
		PolicyServiceClient:               policy_client.NewPolicyServiceClient(cc),
		PolicyTemplateServiceClient:       policy_template_client.NewPolicyTemplateServiceClient(cc),
		TsConditionServiceClient:          ts_condition_client.NewTsConditionServiceClient(cc),
		TsConditionTemplateServiceClient:  ts_condition_template_client.NewTsConditionTemplateServiceClient(cc),
		TsEntryServiceClient:              ts_entry_client.NewTsEntryServiceClient(cc),
	}
}
