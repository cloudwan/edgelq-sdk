// Code generated by protoc-gen-goten-object
// File: edgelq/audit/proto/v1alpha2/activity_log.proto
// DO NOT EDIT!!!

package activity_log

// proto imports
import (
	audit_common "github.com/cloudwan/edgelq-sdk/audit/common/v1alpha2"
	rpc "github.com/cloudwan/edgelq-sdk/common/rpc"
	ntt_meta "github.com/cloudwan/edgelq-sdk/common/types/meta"
	iam_organization "github.com/cloudwan/edgelq-sdk/iam/resources/v1alpha2/organization"
	iam_project "github.com/cloudwan/edgelq-sdk/iam/resources/v1alpha2/project"
	policy "github.com/cloudwan/edgelq-sdk/meta/multi_region/proto/policy"
	syncing_meta "github.com/cloudwan/edgelq-sdk/meta/multi_region/proto/syncing_meta"
	meta_service "github.com/cloudwan/edgelq-sdk/meta/resources/v1alpha2/service"
	any "github.com/golang/protobuf/ptypes/any"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	field_mask "google.golang.org/genproto/protobuf/field_mask"
)

// make sure we're using proto imports
var (
	_ = &audit_common.Authentication{}
	_ = &rpc.Status{}
	_ = &ntt_meta.Meta{}
	_ = &iam_organization.Organization{}
	_ = &iam_project.Project{}
	_ = &policy.Policy{}
	_ = &syncing_meta.SyncingMeta{}
	_ = &meta_service.Service{}
	_ = &any.Any{}
	_ = &field_mask.FieldMask{}
	_ = &timestamp.Timestamp{}
)

type ActivityLogFieldPathBuilder struct{}

func NewActivityLogFieldPathBuilder() ActivityLogFieldPathBuilder {
	return ActivityLogFieldPathBuilder{}
}
func (ActivityLogFieldPathBuilder) Name() ActivityLogPathSelectorName {
	return ActivityLogPathSelectorName{}
}
func (ActivityLogFieldPathBuilder) Scope() ActivityLogPathSelectorScope {
	return ActivityLogPathSelectorScope{}
}
func (ActivityLogFieldPathBuilder) RequestId() ActivityLogPathSelectorRequestId {
	return ActivityLogPathSelectorRequestId{}
}
func (ActivityLogFieldPathBuilder) Authentication() ActivityLogPathSelectorAuthentication {
	return ActivityLogPathSelectorAuthentication{}
}
func (ActivityLogFieldPathBuilder) Authorization() ActivityLogPathSelectorAuthorization {
	return ActivityLogPathSelectorAuthorization{}
}
func (ActivityLogFieldPathBuilder) Service() ActivityLogPathSelectorService {
	return ActivityLogPathSelectorService{}
}
func (ActivityLogFieldPathBuilder) Method() ActivityLogPathSelectorMethod {
	return ActivityLogPathSelectorMethod{}
}
func (ActivityLogFieldPathBuilder) RequestMetadata() ActivityLogPathSelectorRequestMetadata {
	return ActivityLogPathSelectorRequestMetadata{}
}
func (ActivityLogFieldPathBuilder) Resource() ActivityLogPathSelectorResource {
	return ActivityLogPathSelectorResource{}
}
func (ActivityLogFieldPathBuilder) Category() ActivityLogPathSelectorCategory {
	return ActivityLogPathSelectorCategory{}
}
func (ActivityLogFieldPathBuilder) Labels() ActivityLogPathSelectorLabels {
	return ActivityLogPathSelectorLabels{}
}
func (ActivityLogFieldPathBuilder) Events() ActivityLogPathSelectorEvents {
	return ActivityLogPathSelectorEvents{}
}

type ActivityLogPathSelectorName struct{}

func (ActivityLogPathSelectorName) FieldPath() *ActivityLog_FieldTerminalPath {
	return &ActivityLog_FieldTerminalPath{selector: ActivityLog_FieldPathSelectorName}
}

func (s ActivityLogPathSelectorName) WithValue(value *Name) *ActivityLog_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*ActivityLog_FieldTerminalPathValue)
}

func (s ActivityLogPathSelectorName) WithArrayOfValues(values []*Name) *ActivityLog_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ActivityLog_FieldTerminalPathArrayOfValues)
}

type ActivityLogPathSelectorScope struct{}

func (ActivityLogPathSelectorScope) FieldPath() *ActivityLog_FieldTerminalPath {
	return &ActivityLog_FieldTerminalPath{selector: ActivityLog_FieldPathSelectorScope}
}

func (s ActivityLogPathSelectorScope) WithValue(value string) *ActivityLog_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*ActivityLog_FieldTerminalPathValue)
}

func (s ActivityLogPathSelectorScope) WithArrayOfValues(values []string) *ActivityLog_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ActivityLog_FieldTerminalPathArrayOfValues)
}

type ActivityLogPathSelectorRequestId struct{}

func (ActivityLogPathSelectorRequestId) FieldPath() *ActivityLog_FieldTerminalPath {
	return &ActivityLog_FieldTerminalPath{selector: ActivityLog_FieldPathSelectorRequestId}
}

func (s ActivityLogPathSelectorRequestId) WithValue(value uint64) *ActivityLog_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*ActivityLog_FieldTerminalPathValue)
}

func (s ActivityLogPathSelectorRequestId) WithArrayOfValues(values []uint64) *ActivityLog_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ActivityLog_FieldTerminalPathArrayOfValues)
}

type ActivityLogPathSelectorAuthentication struct{}

func (ActivityLogPathSelectorAuthentication) FieldPath() *ActivityLog_FieldTerminalPath {
	return &ActivityLog_FieldTerminalPath{selector: ActivityLog_FieldPathSelectorAuthentication}
}

func (s ActivityLogPathSelectorAuthentication) WithValue(value *audit_common.Authentication) *ActivityLog_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*ActivityLog_FieldTerminalPathValue)
}

func (s ActivityLogPathSelectorAuthentication) WithArrayOfValues(values []*audit_common.Authentication) *ActivityLog_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ActivityLog_FieldTerminalPathArrayOfValues)
}

func (ActivityLogPathSelectorAuthentication) WithSubPath(subPath audit_common.Authentication_FieldPath) *ActivityLog_FieldSubPath {
	return &ActivityLog_FieldSubPath{selector: ActivityLog_FieldPathSelectorAuthentication, subPath: subPath}
}

func (s ActivityLogPathSelectorAuthentication) WithSubValue(subPathValue audit_common.Authentication_FieldPathValue) *ActivityLog_FieldSubPathValue {
	return &ActivityLog_FieldSubPathValue{ActivityLog_FieldPath: s.WithSubPath(subPathValue), subPathValue: subPathValue}
}

func (s ActivityLogPathSelectorAuthentication) WithSubArrayOfValues(subPathArrayOfValues audit_common.Authentication_FieldPathArrayOfValues) *ActivityLog_FieldSubPathArrayOfValues {
	return &ActivityLog_FieldSubPathArrayOfValues{ActivityLog_FieldPath: s.WithSubPath(subPathArrayOfValues), subPathArrayOfValues: subPathArrayOfValues}
}

func (s ActivityLogPathSelectorAuthentication) WithSubArrayItemValue(subPathArrayItemValue audit_common.Authentication_FieldPathArrayItemValue) *ActivityLog_FieldSubPathArrayItemValue {
	return &ActivityLog_FieldSubPathArrayItemValue{ActivityLog_FieldPath: s.WithSubPath(subPathArrayItemValue), subPathItemValue: subPathArrayItemValue}
}

func (ActivityLogPathSelectorAuthentication) Principal() ActivityLogPathSelectorAuthenticationPrincipal {
	return ActivityLogPathSelectorAuthenticationPrincipal{}
}

func (ActivityLogPathSelectorAuthentication) PrincipalType() ActivityLogPathSelectorAuthenticationPrincipalType {
	return ActivityLogPathSelectorAuthenticationPrincipalType{}
}

type ActivityLogPathSelectorAuthenticationPrincipal struct{}

func (ActivityLogPathSelectorAuthenticationPrincipal) FieldPath() *ActivityLog_FieldSubPath {
	return &ActivityLog_FieldSubPath{
		selector: ActivityLog_FieldPathSelectorAuthentication,
		subPath:  audit_common.NewAuthenticationFieldPathBuilder().Principal().FieldPath(),
	}
}

func (s ActivityLogPathSelectorAuthenticationPrincipal) WithValue(value string) *ActivityLog_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ActivityLog_FieldSubPathValue)
}

func (s ActivityLogPathSelectorAuthenticationPrincipal) WithArrayOfValues(values []string) *ActivityLog_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ActivityLog_FieldSubPathArrayOfValues)
}

type ActivityLogPathSelectorAuthenticationPrincipalType struct{}

func (ActivityLogPathSelectorAuthenticationPrincipalType) FieldPath() *ActivityLog_FieldSubPath {
	return &ActivityLog_FieldSubPath{
		selector: ActivityLog_FieldPathSelectorAuthentication,
		subPath:  audit_common.NewAuthenticationFieldPathBuilder().PrincipalType().FieldPath(),
	}
}

func (s ActivityLogPathSelectorAuthenticationPrincipalType) WithValue(value string) *ActivityLog_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ActivityLog_FieldSubPathValue)
}

func (s ActivityLogPathSelectorAuthenticationPrincipalType) WithArrayOfValues(values []string) *ActivityLog_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ActivityLog_FieldSubPathArrayOfValues)
}

type ActivityLogPathSelectorAuthorization struct{}

func (ActivityLogPathSelectorAuthorization) FieldPath() *ActivityLog_FieldTerminalPath {
	return &ActivityLog_FieldTerminalPath{selector: ActivityLog_FieldPathSelectorAuthorization}
}

func (s ActivityLogPathSelectorAuthorization) WithValue(value *audit_common.Authorization) *ActivityLog_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*ActivityLog_FieldTerminalPathValue)
}

func (s ActivityLogPathSelectorAuthorization) WithArrayOfValues(values []*audit_common.Authorization) *ActivityLog_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ActivityLog_FieldTerminalPathArrayOfValues)
}

func (ActivityLogPathSelectorAuthorization) WithSubPath(subPath audit_common.Authorization_FieldPath) *ActivityLog_FieldSubPath {
	return &ActivityLog_FieldSubPath{selector: ActivityLog_FieldPathSelectorAuthorization, subPath: subPath}
}

func (s ActivityLogPathSelectorAuthorization) WithSubValue(subPathValue audit_common.Authorization_FieldPathValue) *ActivityLog_FieldSubPathValue {
	return &ActivityLog_FieldSubPathValue{ActivityLog_FieldPath: s.WithSubPath(subPathValue), subPathValue: subPathValue}
}

func (s ActivityLogPathSelectorAuthorization) WithSubArrayOfValues(subPathArrayOfValues audit_common.Authorization_FieldPathArrayOfValues) *ActivityLog_FieldSubPathArrayOfValues {
	return &ActivityLog_FieldSubPathArrayOfValues{ActivityLog_FieldPath: s.WithSubPath(subPathArrayOfValues), subPathArrayOfValues: subPathArrayOfValues}
}

func (s ActivityLogPathSelectorAuthorization) WithSubArrayItemValue(subPathArrayItemValue audit_common.Authorization_FieldPathArrayItemValue) *ActivityLog_FieldSubPathArrayItemValue {
	return &ActivityLog_FieldSubPathArrayItemValue{ActivityLog_FieldPath: s.WithSubPath(subPathArrayItemValue), subPathItemValue: subPathArrayItemValue}
}

func (ActivityLogPathSelectorAuthorization) GrantedPermissions() ActivityLogPathSelectorAuthorizationGrantedPermissions {
	return ActivityLogPathSelectorAuthorizationGrantedPermissions{}
}

func (ActivityLogPathSelectorAuthorization) DeniedPermissions() ActivityLogPathSelectorAuthorizationDeniedPermissions {
	return ActivityLogPathSelectorAuthorizationDeniedPermissions{}
}

type ActivityLogPathSelectorAuthorizationGrantedPermissions struct{}

func (ActivityLogPathSelectorAuthorizationGrantedPermissions) FieldPath() *ActivityLog_FieldSubPath {
	return &ActivityLog_FieldSubPath{
		selector: ActivityLog_FieldPathSelectorAuthorization,
		subPath:  audit_common.NewAuthorizationFieldPathBuilder().GrantedPermissions().FieldPath(),
	}
}

func (s ActivityLogPathSelectorAuthorizationGrantedPermissions) WithValue(value []string) *ActivityLog_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ActivityLog_FieldSubPathValue)
}

func (s ActivityLogPathSelectorAuthorizationGrantedPermissions) WithArrayOfValues(values [][]string) *ActivityLog_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ActivityLog_FieldSubPathArrayOfValues)
}

func (s ActivityLogPathSelectorAuthorizationGrantedPermissions) WithItemValue(value string) *ActivityLog_FieldSubPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*ActivityLog_FieldSubPathArrayItemValue)
}

type ActivityLogPathSelectorAuthorizationDeniedPermissions struct{}

func (ActivityLogPathSelectorAuthorizationDeniedPermissions) FieldPath() *ActivityLog_FieldSubPath {
	return &ActivityLog_FieldSubPath{
		selector: ActivityLog_FieldPathSelectorAuthorization,
		subPath:  audit_common.NewAuthorizationFieldPathBuilder().DeniedPermissions().FieldPath(),
	}
}

func (s ActivityLogPathSelectorAuthorizationDeniedPermissions) WithValue(value []string) *ActivityLog_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ActivityLog_FieldSubPathValue)
}

func (s ActivityLogPathSelectorAuthorizationDeniedPermissions) WithArrayOfValues(values [][]string) *ActivityLog_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ActivityLog_FieldSubPathArrayOfValues)
}

func (s ActivityLogPathSelectorAuthorizationDeniedPermissions) WithItemValue(value string) *ActivityLog_FieldSubPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*ActivityLog_FieldSubPathArrayItemValue)
}

type ActivityLogPathSelectorService struct{}

func (ActivityLogPathSelectorService) FieldPath() *ActivityLog_FieldTerminalPath {
	return &ActivityLog_FieldTerminalPath{selector: ActivityLog_FieldPathSelectorService}
}

func (s ActivityLogPathSelectorService) WithValue(value *audit_common.ServiceData) *ActivityLog_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*ActivityLog_FieldTerminalPathValue)
}

func (s ActivityLogPathSelectorService) WithArrayOfValues(values []*audit_common.ServiceData) *ActivityLog_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ActivityLog_FieldTerminalPathArrayOfValues)
}

func (ActivityLogPathSelectorService) WithSubPath(subPath audit_common.ServiceData_FieldPath) *ActivityLog_FieldSubPath {
	return &ActivityLog_FieldSubPath{selector: ActivityLog_FieldPathSelectorService, subPath: subPath}
}

func (s ActivityLogPathSelectorService) WithSubValue(subPathValue audit_common.ServiceData_FieldPathValue) *ActivityLog_FieldSubPathValue {
	return &ActivityLog_FieldSubPathValue{ActivityLog_FieldPath: s.WithSubPath(subPathValue), subPathValue: subPathValue}
}

func (s ActivityLogPathSelectorService) WithSubArrayOfValues(subPathArrayOfValues audit_common.ServiceData_FieldPathArrayOfValues) *ActivityLog_FieldSubPathArrayOfValues {
	return &ActivityLog_FieldSubPathArrayOfValues{ActivityLog_FieldPath: s.WithSubPath(subPathArrayOfValues), subPathArrayOfValues: subPathArrayOfValues}
}

func (s ActivityLogPathSelectorService) WithSubArrayItemValue(subPathArrayItemValue audit_common.ServiceData_FieldPathArrayItemValue) *ActivityLog_FieldSubPathArrayItemValue {
	return &ActivityLog_FieldSubPathArrayItemValue{ActivityLog_FieldPath: s.WithSubPath(subPathArrayItemValue), subPathItemValue: subPathArrayItemValue}
}

func (ActivityLogPathSelectorService) Name() ActivityLogPathSelectorServiceName {
	return ActivityLogPathSelectorServiceName{}
}

func (ActivityLogPathSelectorService) RegionId() ActivityLogPathSelectorServiceRegionId {
	return ActivityLogPathSelectorServiceRegionId{}
}

type ActivityLogPathSelectorServiceName struct{}

func (ActivityLogPathSelectorServiceName) FieldPath() *ActivityLog_FieldSubPath {
	return &ActivityLog_FieldSubPath{
		selector: ActivityLog_FieldPathSelectorService,
		subPath:  audit_common.NewServiceDataFieldPathBuilder().Name().FieldPath(),
	}
}

func (s ActivityLogPathSelectorServiceName) WithValue(value string) *ActivityLog_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ActivityLog_FieldSubPathValue)
}

func (s ActivityLogPathSelectorServiceName) WithArrayOfValues(values []string) *ActivityLog_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ActivityLog_FieldSubPathArrayOfValues)
}

type ActivityLogPathSelectorServiceRegionId struct{}

func (ActivityLogPathSelectorServiceRegionId) FieldPath() *ActivityLog_FieldSubPath {
	return &ActivityLog_FieldSubPath{
		selector: ActivityLog_FieldPathSelectorService,
		subPath:  audit_common.NewServiceDataFieldPathBuilder().RegionId().FieldPath(),
	}
}

func (s ActivityLogPathSelectorServiceRegionId) WithValue(value string) *ActivityLog_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ActivityLog_FieldSubPathValue)
}

func (s ActivityLogPathSelectorServiceRegionId) WithArrayOfValues(values []string) *ActivityLog_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ActivityLog_FieldSubPathArrayOfValues)
}

type ActivityLogPathSelectorMethod struct{}

func (ActivityLogPathSelectorMethod) FieldPath() *ActivityLog_FieldTerminalPath {
	return &ActivityLog_FieldTerminalPath{selector: ActivityLog_FieldPathSelectorMethod}
}

func (s ActivityLogPathSelectorMethod) WithValue(value *ActivityLog_Method) *ActivityLog_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*ActivityLog_FieldTerminalPathValue)
}

func (s ActivityLogPathSelectorMethod) WithArrayOfValues(values []*ActivityLog_Method) *ActivityLog_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ActivityLog_FieldTerminalPathArrayOfValues)
}

func (ActivityLogPathSelectorMethod) WithSubPath(subPath ActivityLogMethod_FieldPath) *ActivityLog_FieldSubPath {
	return &ActivityLog_FieldSubPath{selector: ActivityLog_FieldPathSelectorMethod, subPath: subPath}
}

func (s ActivityLogPathSelectorMethod) WithSubValue(subPathValue ActivityLogMethod_FieldPathValue) *ActivityLog_FieldSubPathValue {
	return &ActivityLog_FieldSubPathValue{ActivityLog_FieldPath: s.WithSubPath(subPathValue), subPathValue: subPathValue}
}

func (s ActivityLogPathSelectorMethod) WithSubArrayOfValues(subPathArrayOfValues ActivityLogMethod_FieldPathArrayOfValues) *ActivityLog_FieldSubPathArrayOfValues {
	return &ActivityLog_FieldSubPathArrayOfValues{ActivityLog_FieldPath: s.WithSubPath(subPathArrayOfValues), subPathArrayOfValues: subPathArrayOfValues}
}

func (s ActivityLogPathSelectorMethod) WithSubArrayItemValue(subPathArrayItemValue ActivityLogMethod_FieldPathArrayItemValue) *ActivityLog_FieldSubPathArrayItemValue {
	return &ActivityLog_FieldSubPathArrayItemValue{ActivityLog_FieldPath: s.WithSubPath(subPathArrayItemValue), subPathItemValue: subPathArrayItemValue}
}

func (ActivityLogPathSelectorMethod) Type() ActivityLogPathSelectorMethodType {
	return ActivityLogPathSelectorMethodType{}
}

func (ActivityLogPathSelectorMethod) Version() ActivityLogPathSelectorMethodVersion {
	return ActivityLogPathSelectorMethodVersion{}
}

type ActivityLogPathSelectorMethodType struct{}

func (ActivityLogPathSelectorMethodType) FieldPath() *ActivityLog_FieldSubPath {
	return &ActivityLog_FieldSubPath{
		selector: ActivityLog_FieldPathSelectorMethod,
		subPath:  NewActivityLogMethodFieldPathBuilder().Type().FieldPath(),
	}
}

func (s ActivityLogPathSelectorMethodType) WithValue(value string) *ActivityLog_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ActivityLog_FieldSubPathValue)
}

func (s ActivityLogPathSelectorMethodType) WithArrayOfValues(values []string) *ActivityLog_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ActivityLog_FieldSubPathArrayOfValues)
}

type ActivityLogPathSelectorMethodVersion struct{}

func (ActivityLogPathSelectorMethodVersion) FieldPath() *ActivityLog_FieldSubPath {
	return &ActivityLog_FieldSubPath{
		selector: ActivityLog_FieldPathSelectorMethod,
		subPath:  NewActivityLogMethodFieldPathBuilder().Version().FieldPath(),
	}
}

func (s ActivityLogPathSelectorMethodVersion) WithValue(value string) *ActivityLog_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ActivityLog_FieldSubPathValue)
}

func (s ActivityLogPathSelectorMethodVersion) WithArrayOfValues(values []string) *ActivityLog_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ActivityLog_FieldSubPathArrayOfValues)
}

type ActivityLogPathSelectorRequestMetadata struct{}

func (ActivityLogPathSelectorRequestMetadata) FieldPath() *ActivityLog_FieldTerminalPath {
	return &ActivityLog_FieldTerminalPath{selector: ActivityLog_FieldPathSelectorRequestMetadata}
}

func (s ActivityLogPathSelectorRequestMetadata) WithValue(value *ActivityLog_RequestMetadata) *ActivityLog_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*ActivityLog_FieldTerminalPathValue)
}

func (s ActivityLogPathSelectorRequestMetadata) WithArrayOfValues(values []*ActivityLog_RequestMetadata) *ActivityLog_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ActivityLog_FieldTerminalPathArrayOfValues)
}

func (ActivityLogPathSelectorRequestMetadata) WithSubPath(subPath ActivityLogRequestMetadata_FieldPath) *ActivityLog_FieldSubPath {
	return &ActivityLog_FieldSubPath{selector: ActivityLog_FieldPathSelectorRequestMetadata, subPath: subPath}
}

func (s ActivityLogPathSelectorRequestMetadata) WithSubValue(subPathValue ActivityLogRequestMetadata_FieldPathValue) *ActivityLog_FieldSubPathValue {
	return &ActivityLog_FieldSubPathValue{ActivityLog_FieldPath: s.WithSubPath(subPathValue), subPathValue: subPathValue}
}

func (s ActivityLogPathSelectorRequestMetadata) WithSubArrayOfValues(subPathArrayOfValues ActivityLogRequestMetadata_FieldPathArrayOfValues) *ActivityLog_FieldSubPathArrayOfValues {
	return &ActivityLog_FieldSubPathArrayOfValues{ActivityLog_FieldPath: s.WithSubPath(subPathArrayOfValues), subPathArrayOfValues: subPathArrayOfValues}
}

func (s ActivityLogPathSelectorRequestMetadata) WithSubArrayItemValue(subPathArrayItemValue ActivityLogRequestMetadata_FieldPathArrayItemValue) *ActivityLog_FieldSubPathArrayItemValue {
	return &ActivityLog_FieldSubPathArrayItemValue{ActivityLog_FieldPath: s.WithSubPath(subPathArrayItemValue), subPathItemValue: subPathArrayItemValue}
}

func (ActivityLogPathSelectorRequestMetadata) IpAddress() ActivityLogPathSelectorRequestMetadataIpAddress {
	return ActivityLogPathSelectorRequestMetadataIpAddress{}
}

func (ActivityLogPathSelectorRequestMetadata) UserAgent() ActivityLogPathSelectorRequestMetadataUserAgent {
	return ActivityLogPathSelectorRequestMetadataUserAgent{}
}

type ActivityLogPathSelectorRequestMetadataIpAddress struct{}

func (ActivityLogPathSelectorRequestMetadataIpAddress) FieldPath() *ActivityLog_FieldSubPath {
	return &ActivityLog_FieldSubPath{
		selector: ActivityLog_FieldPathSelectorRequestMetadata,
		subPath:  NewActivityLogRequestMetadataFieldPathBuilder().IpAddress().FieldPath(),
	}
}

func (s ActivityLogPathSelectorRequestMetadataIpAddress) WithValue(value string) *ActivityLog_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ActivityLog_FieldSubPathValue)
}

func (s ActivityLogPathSelectorRequestMetadataIpAddress) WithArrayOfValues(values []string) *ActivityLog_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ActivityLog_FieldSubPathArrayOfValues)
}

type ActivityLogPathSelectorRequestMetadataUserAgent struct{}

func (ActivityLogPathSelectorRequestMetadataUserAgent) FieldPath() *ActivityLog_FieldSubPath {
	return &ActivityLog_FieldSubPath{
		selector: ActivityLog_FieldPathSelectorRequestMetadata,
		subPath:  NewActivityLogRequestMetadataFieldPathBuilder().UserAgent().FieldPath(),
	}
}

func (s ActivityLogPathSelectorRequestMetadataUserAgent) WithValue(value string) *ActivityLog_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ActivityLog_FieldSubPathValue)
}

func (s ActivityLogPathSelectorRequestMetadataUserAgent) WithArrayOfValues(values []string) *ActivityLog_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ActivityLog_FieldSubPathArrayOfValues)
}

type ActivityLogPathSelectorResource struct{}

func (ActivityLogPathSelectorResource) FieldPath() *ActivityLog_FieldTerminalPath {
	return &ActivityLog_FieldTerminalPath{selector: ActivityLog_FieldPathSelectorResource}
}

func (s ActivityLogPathSelectorResource) WithValue(value *ActivityLog_SubjectResource) *ActivityLog_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*ActivityLog_FieldTerminalPathValue)
}

func (s ActivityLogPathSelectorResource) WithArrayOfValues(values []*ActivityLog_SubjectResource) *ActivityLog_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ActivityLog_FieldTerminalPathArrayOfValues)
}

func (ActivityLogPathSelectorResource) WithSubPath(subPath ActivityLogSubjectResource_FieldPath) *ActivityLog_FieldSubPath {
	return &ActivityLog_FieldSubPath{selector: ActivityLog_FieldPathSelectorResource, subPath: subPath}
}

func (s ActivityLogPathSelectorResource) WithSubValue(subPathValue ActivityLogSubjectResource_FieldPathValue) *ActivityLog_FieldSubPathValue {
	return &ActivityLog_FieldSubPathValue{ActivityLog_FieldPath: s.WithSubPath(subPathValue), subPathValue: subPathValue}
}

func (s ActivityLogPathSelectorResource) WithSubArrayOfValues(subPathArrayOfValues ActivityLogSubjectResource_FieldPathArrayOfValues) *ActivityLog_FieldSubPathArrayOfValues {
	return &ActivityLog_FieldSubPathArrayOfValues{ActivityLog_FieldPath: s.WithSubPath(subPathArrayOfValues), subPathArrayOfValues: subPathArrayOfValues}
}

func (s ActivityLogPathSelectorResource) WithSubArrayItemValue(subPathArrayItemValue ActivityLogSubjectResource_FieldPathArrayItemValue) *ActivityLog_FieldSubPathArrayItemValue {
	return &ActivityLog_FieldSubPathArrayItemValue{ActivityLog_FieldPath: s.WithSubPath(subPathArrayItemValue), subPathItemValue: subPathArrayItemValue}
}

func (ActivityLogPathSelectorResource) Name() ActivityLogPathSelectorResourceName {
	return ActivityLogPathSelectorResourceName{}
}

func (ActivityLogPathSelectorResource) Difference() ActivityLogPathSelectorResourceDifference {
	return ActivityLogPathSelectorResourceDifference{}
}

type ActivityLogPathSelectorResourceName struct{}

func (ActivityLogPathSelectorResourceName) FieldPath() *ActivityLog_FieldSubPath {
	return &ActivityLog_FieldSubPath{
		selector: ActivityLog_FieldPathSelectorResource,
		subPath:  NewActivityLogSubjectResourceFieldPathBuilder().Name().FieldPath(),
	}
}

func (s ActivityLogPathSelectorResourceName) WithValue(value string) *ActivityLog_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ActivityLog_FieldSubPathValue)
}

func (s ActivityLogPathSelectorResourceName) WithArrayOfValues(values []string) *ActivityLog_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ActivityLog_FieldSubPathArrayOfValues)
}

type ActivityLogPathSelectorResourceDifference struct{}

func (ActivityLogPathSelectorResourceDifference) FieldPath() *ActivityLog_FieldSubPath {
	return &ActivityLog_FieldSubPath{
		selector: ActivityLog_FieldPathSelectorResource,
		subPath:  NewActivityLogSubjectResourceFieldPathBuilder().Difference().FieldPath(),
	}
}

func (s ActivityLogPathSelectorResourceDifference) WithValue(value *ActivityLog_SubjectResource_Difference) *ActivityLog_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ActivityLog_FieldSubPathValue)
}

func (s ActivityLogPathSelectorResourceDifference) WithArrayOfValues(values []*ActivityLog_SubjectResource_Difference) *ActivityLog_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ActivityLog_FieldSubPathArrayOfValues)
}

func (ActivityLogPathSelectorResourceDifference) Fields() ActivityLogPathSelectorResourceDifferenceFields {
	return ActivityLogPathSelectorResourceDifferenceFields{}
}

func (ActivityLogPathSelectorResourceDifference) Before() ActivityLogPathSelectorResourceDifferenceBefore {
	return ActivityLogPathSelectorResourceDifferenceBefore{}
}

func (ActivityLogPathSelectorResourceDifference) After() ActivityLogPathSelectorResourceDifferenceAfter {
	return ActivityLogPathSelectorResourceDifferenceAfter{}
}

type ActivityLogPathSelectorResourceDifferenceFields struct{}

func (ActivityLogPathSelectorResourceDifferenceFields) FieldPath() *ActivityLog_FieldSubPath {
	return &ActivityLog_FieldSubPath{
		selector: ActivityLog_FieldPathSelectorResource,
		subPath:  NewActivityLogSubjectResourceFieldPathBuilder().Difference().Fields().FieldPath(),
	}
}

func (s ActivityLogPathSelectorResourceDifferenceFields) WithValue(value *field_mask.FieldMask) *ActivityLog_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ActivityLog_FieldSubPathValue)
}

func (s ActivityLogPathSelectorResourceDifferenceFields) WithArrayOfValues(values []*field_mask.FieldMask) *ActivityLog_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ActivityLog_FieldSubPathArrayOfValues)
}

type ActivityLogPathSelectorResourceDifferenceBefore struct{}

func (ActivityLogPathSelectorResourceDifferenceBefore) FieldPath() *ActivityLog_FieldSubPath {
	return &ActivityLog_FieldSubPath{
		selector: ActivityLog_FieldPathSelectorResource,
		subPath:  NewActivityLogSubjectResourceFieldPathBuilder().Difference().Before().FieldPath(),
	}
}

func (s ActivityLogPathSelectorResourceDifferenceBefore) WithValue(value *any.Any) *ActivityLog_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ActivityLog_FieldSubPathValue)
}

func (s ActivityLogPathSelectorResourceDifferenceBefore) WithArrayOfValues(values []*any.Any) *ActivityLog_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ActivityLog_FieldSubPathArrayOfValues)
}

type ActivityLogPathSelectorResourceDifferenceAfter struct{}

func (ActivityLogPathSelectorResourceDifferenceAfter) FieldPath() *ActivityLog_FieldSubPath {
	return &ActivityLog_FieldSubPath{
		selector: ActivityLog_FieldPathSelectorResource,
		subPath:  NewActivityLogSubjectResourceFieldPathBuilder().Difference().After().FieldPath(),
	}
}

func (s ActivityLogPathSelectorResourceDifferenceAfter) WithValue(value *any.Any) *ActivityLog_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ActivityLog_FieldSubPathValue)
}

func (s ActivityLogPathSelectorResourceDifferenceAfter) WithArrayOfValues(values []*any.Any) *ActivityLog_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ActivityLog_FieldSubPathArrayOfValues)
}

type ActivityLogPathSelectorCategory struct{}

func (ActivityLogPathSelectorCategory) FieldPath() *ActivityLog_FieldTerminalPath {
	return &ActivityLog_FieldTerminalPath{selector: ActivityLog_FieldPathSelectorCategory}
}

func (s ActivityLogPathSelectorCategory) WithValue(value ActivityLog_Category) *ActivityLog_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*ActivityLog_FieldTerminalPathValue)
}

func (s ActivityLogPathSelectorCategory) WithArrayOfValues(values []ActivityLog_Category) *ActivityLog_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ActivityLog_FieldTerminalPathArrayOfValues)
}

type ActivityLogPathSelectorLabels struct{}

func (ActivityLogPathSelectorLabels) FieldPath() *ActivityLog_FieldTerminalPath {
	return &ActivityLog_FieldTerminalPath{selector: ActivityLog_FieldPathSelectorLabels}
}

func (s ActivityLogPathSelectorLabels) WithValue(value map[string]string) *ActivityLog_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*ActivityLog_FieldTerminalPathValue)
}

func (s ActivityLogPathSelectorLabels) WithArrayOfValues(values []map[string]string) *ActivityLog_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ActivityLog_FieldTerminalPathArrayOfValues)
}

func (ActivityLogPathSelectorLabels) WithKey(key string) ActivityLogMapPathSelectorLabels {
	return ActivityLogMapPathSelectorLabels{key: key}
}

type ActivityLogMapPathSelectorLabels struct {
	key string
}

func (s ActivityLogMapPathSelectorLabels) FieldPath() *ActivityLog_FieldPathMap {
	return &ActivityLog_FieldPathMap{selector: ActivityLog_FieldPathSelectorLabels, key: s.key}
}

func (s ActivityLogMapPathSelectorLabels) WithValue(value string) *ActivityLog_FieldPathMapValue {
	return s.FieldPath().WithIValue(value).(*ActivityLog_FieldPathMapValue)
}

func (s ActivityLogMapPathSelectorLabels) WithArrayOfValues(values []string) *ActivityLog_FieldPathMapArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ActivityLog_FieldPathMapArrayOfValues)
}

type ActivityLogPathSelectorEvents struct{}

func (ActivityLogPathSelectorEvents) FieldPath() *ActivityLog_FieldTerminalPath {
	return &ActivityLog_FieldTerminalPath{selector: ActivityLog_FieldPathSelectorEvents}
}

func (s ActivityLogPathSelectorEvents) WithValue(value []*ActivityLog_Event) *ActivityLog_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*ActivityLog_FieldTerminalPathValue)
}

func (s ActivityLogPathSelectorEvents) WithArrayOfValues(values [][]*ActivityLog_Event) *ActivityLog_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ActivityLog_FieldTerminalPathArrayOfValues)
}

func (s ActivityLogPathSelectorEvents) WithItemValue(value *ActivityLog_Event) *ActivityLog_FieldTerminalPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*ActivityLog_FieldTerminalPathArrayItemValue)
}
func (ActivityLogPathSelectorEvents) WithSubPath(subPath ActivityLogEvent_FieldPath) *ActivityLog_FieldSubPath {
	return &ActivityLog_FieldSubPath{selector: ActivityLog_FieldPathSelectorEvents, subPath: subPath}
}

func (s ActivityLogPathSelectorEvents) WithSubValue(subPathValue ActivityLogEvent_FieldPathValue) *ActivityLog_FieldSubPathValue {
	return &ActivityLog_FieldSubPathValue{ActivityLog_FieldPath: s.WithSubPath(subPathValue), subPathValue: subPathValue}
}

func (s ActivityLogPathSelectorEvents) WithSubArrayOfValues(subPathArrayOfValues ActivityLogEvent_FieldPathArrayOfValues) *ActivityLog_FieldSubPathArrayOfValues {
	return &ActivityLog_FieldSubPathArrayOfValues{ActivityLog_FieldPath: s.WithSubPath(subPathArrayOfValues), subPathArrayOfValues: subPathArrayOfValues}
}

func (s ActivityLogPathSelectorEvents) WithSubArrayItemValue(subPathArrayItemValue ActivityLogEvent_FieldPathArrayItemValue) *ActivityLog_FieldSubPathArrayItemValue {
	return &ActivityLog_FieldSubPathArrayItemValue{ActivityLog_FieldPath: s.WithSubPath(subPathArrayItemValue), subPathItemValue: subPathArrayItemValue}
}

func (ActivityLogPathSelectorEvents) ClientMessage() ActivityLogPathSelectorEventsClientMessage {
	return ActivityLogPathSelectorEventsClientMessage{}
}

func (ActivityLogPathSelectorEvents) ServerMessage() ActivityLogPathSelectorEventsServerMessage {
	return ActivityLogPathSelectorEventsServerMessage{}
}

func (ActivityLogPathSelectorEvents) Exit() ActivityLogPathSelectorEventsExit {
	return ActivityLogPathSelectorEventsExit{}
}

func (ActivityLogPathSelectorEvents) RegionalServerMessage() ActivityLogPathSelectorEventsRegionalServerMessage {
	return ActivityLogPathSelectorEventsRegionalServerMessage{}
}

func (ActivityLogPathSelectorEvents) RegionalExit() ActivityLogPathSelectorEventsRegionalExit {
	return ActivityLogPathSelectorEventsRegionalExit{}
}

type ActivityLogPathSelectorEventsClientMessage struct{}

func (ActivityLogPathSelectorEventsClientMessage) FieldPath() *ActivityLog_FieldSubPath {
	return &ActivityLog_FieldSubPath{
		selector: ActivityLog_FieldPathSelectorEvents,
		subPath:  NewActivityLogEventFieldPathBuilder().ClientMessage().FieldPath(),
	}
}

func (s ActivityLogPathSelectorEventsClientMessage) WithValue(value *ActivityLog_Event_ClientMsgEvent) *ActivityLog_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ActivityLog_FieldSubPathValue)
}

func (s ActivityLogPathSelectorEventsClientMessage) WithArrayOfValues(values []*ActivityLog_Event_ClientMsgEvent) *ActivityLog_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ActivityLog_FieldSubPathArrayOfValues)
}

func (ActivityLogPathSelectorEventsClientMessage) Data() ActivityLogPathSelectorEventsClientMessageData {
	return ActivityLogPathSelectorEventsClientMessageData{}
}

func (ActivityLogPathSelectorEventsClientMessage) Time() ActivityLogPathSelectorEventsClientMessageTime {
	return ActivityLogPathSelectorEventsClientMessageTime{}
}

type ActivityLogPathSelectorEventsClientMessageData struct{}

func (ActivityLogPathSelectorEventsClientMessageData) FieldPath() *ActivityLog_FieldSubPath {
	return &ActivityLog_FieldSubPath{
		selector: ActivityLog_FieldPathSelectorEvents,
		subPath:  NewActivityLogEventFieldPathBuilder().ClientMessage().Data().FieldPath(),
	}
}

func (s ActivityLogPathSelectorEventsClientMessageData) WithValue(value *any.Any) *ActivityLog_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ActivityLog_FieldSubPathValue)
}

func (s ActivityLogPathSelectorEventsClientMessageData) WithArrayOfValues(values []*any.Any) *ActivityLog_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ActivityLog_FieldSubPathArrayOfValues)
}

type ActivityLogPathSelectorEventsClientMessageTime struct{}

func (ActivityLogPathSelectorEventsClientMessageTime) FieldPath() *ActivityLog_FieldSubPath {
	return &ActivityLog_FieldSubPath{
		selector: ActivityLog_FieldPathSelectorEvents,
		subPath:  NewActivityLogEventFieldPathBuilder().ClientMessage().Time().FieldPath(),
	}
}

func (s ActivityLogPathSelectorEventsClientMessageTime) WithValue(value *timestamp.Timestamp) *ActivityLog_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ActivityLog_FieldSubPathValue)
}

func (s ActivityLogPathSelectorEventsClientMessageTime) WithArrayOfValues(values []*timestamp.Timestamp) *ActivityLog_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ActivityLog_FieldSubPathArrayOfValues)
}

type ActivityLogPathSelectorEventsServerMessage struct{}

func (ActivityLogPathSelectorEventsServerMessage) FieldPath() *ActivityLog_FieldSubPath {
	return &ActivityLog_FieldSubPath{
		selector: ActivityLog_FieldPathSelectorEvents,
		subPath:  NewActivityLogEventFieldPathBuilder().ServerMessage().FieldPath(),
	}
}

func (s ActivityLogPathSelectorEventsServerMessage) WithValue(value *ActivityLog_Event_ServerMsgEvent) *ActivityLog_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ActivityLog_FieldSubPathValue)
}

func (s ActivityLogPathSelectorEventsServerMessage) WithArrayOfValues(values []*ActivityLog_Event_ServerMsgEvent) *ActivityLog_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ActivityLog_FieldSubPathArrayOfValues)
}

func (ActivityLogPathSelectorEventsServerMessage) Data() ActivityLogPathSelectorEventsServerMessageData {
	return ActivityLogPathSelectorEventsServerMessageData{}
}

func (ActivityLogPathSelectorEventsServerMessage) Time() ActivityLogPathSelectorEventsServerMessageTime {
	return ActivityLogPathSelectorEventsServerMessageTime{}
}

func (ActivityLogPathSelectorEventsServerMessage) RoutedRegionId() ActivityLogPathSelectorEventsServerMessageRoutedRegionId {
	return ActivityLogPathSelectorEventsServerMessageRoutedRegionId{}
}

type ActivityLogPathSelectorEventsServerMessageData struct{}

func (ActivityLogPathSelectorEventsServerMessageData) FieldPath() *ActivityLog_FieldSubPath {
	return &ActivityLog_FieldSubPath{
		selector: ActivityLog_FieldPathSelectorEvents,
		subPath:  NewActivityLogEventFieldPathBuilder().ServerMessage().Data().FieldPath(),
	}
}

func (s ActivityLogPathSelectorEventsServerMessageData) WithValue(value *any.Any) *ActivityLog_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ActivityLog_FieldSubPathValue)
}

func (s ActivityLogPathSelectorEventsServerMessageData) WithArrayOfValues(values []*any.Any) *ActivityLog_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ActivityLog_FieldSubPathArrayOfValues)
}

type ActivityLogPathSelectorEventsServerMessageTime struct{}

func (ActivityLogPathSelectorEventsServerMessageTime) FieldPath() *ActivityLog_FieldSubPath {
	return &ActivityLog_FieldSubPath{
		selector: ActivityLog_FieldPathSelectorEvents,
		subPath:  NewActivityLogEventFieldPathBuilder().ServerMessage().Time().FieldPath(),
	}
}

func (s ActivityLogPathSelectorEventsServerMessageTime) WithValue(value *timestamp.Timestamp) *ActivityLog_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ActivityLog_FieldSubPathValue)
}

func (s ActivityLogPathSelectorEventsServerMessageTime) WithArrayOfValues(values []*timestamp.Timestamp) *ActivityLog_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ActivityLog_FieldSubPathArrayOfValues)
}

type ActivityLogPathSelectorEventsServerMessageRoutedRegionId struct{}

func (ActivityLogPathSelectorEventsServerMessageRoutedRegionId) FieldPath() *ActivityLog_FieldSubPath {
	return &ActivityLog_FieldSubPath{
		selector: ActivityLog_FieldPathSelectorEvents,
		subPath:  NewActivityLogEventFieldPathBuilder().ServerMessage().RoutedRegionId().FieldPath(),
	}
}

func (s ActivityLogPathSelectorEventsServerMessageRoutedRegionId) WithValue(value string) *ActivityLog_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ActivityLog_FieldSubPathValue)
}

func (s ActivityLogPathSelectorEventsServerMessageRoutedRegionId) WithArrayOfValues(values []string) *ActivityLog_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ActivityLog_FieldSubPathArrayOfValues)
}

type ActivityLogPathSelectorEventsExit struct{}

func (ActivityLogPathSelectorEventsExit) FieldPath() *ActivityLog_FieldSubPath {
	return &ActivityLog_FieldSubPath{
		selector: ActivityLog_FieldPathSelectorEvents,
		subPath:  NewActivityLogEventFieldPathBuilder().Exit().FieldPath(),
	}
}

func (s ActivityLogPathSelectorEventsExit) WithValue(value *ActivityLog_Event_ExitEvent) *ActivityLog_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ActivityLog_FieldSubPathValue)
}

func (s ActivityLogPathSelectorEventsExit) WithArrayOfValues(values []*ActivityLog_Event_ExitEvent) *ActivityLog_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ActivityLog_FieldSubPathArrayOfValues)
}

func (ActivityLogPathSelectorEventsExit) Status() ActivityLogPathSelectorEventsExitStatus {
	return ActivityLogPathSelectorEventsExitStatus{}
}

func (ActivityLogPathSelectorEventsExit) Time() ActivityLogPathSelectorEventsExitTime {
	return ActivityLogPathSelectorEventsExitTime{}
}

type ActivityLogPathSelectorEventsExitStatus struct{}

func (ActivityLogPathSelectorEventsExitStatus) FieldPath() *ActivityLog_FieldSubPath {
	return &ActivityLog_FieldSubPath{
		selector: ActivityLog_FieldPathSelectorEvents,
		subPath:  NewActivityLogEventFieldPathBuilder().Exit().Status().FieldPath(),
	}
}

func (s ActivityLogPathSelectorEventsExitStatus) WithValue(value *rpc.Status) *ActivityLog_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ActivityLog_FieldSubPathValue)
}

func (s ActivityLogPathSelectorEventsExitStatus) WithArrayOfValues(values []*rpc.Status) *ActivityLog_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ActivityLog_FieldSubPathArrayOfValues)
}

func (ActivityLogPathSelectorEventsExitStatus) Code() ActivityLogPathSelectorEventsExitStatusCode {
	return ActivityLogPathSelectorEventsExitStatusCode{}
}

func (ActivityLogPathSelectorEventsExitStatus) Message() ActivityLogPathSelectorEventsExitStatusMessage {
	return ActivityLogPathSelectorEventsExitStatusMessage{}
}

func (ActivityLogPathSelectorEventsExitStatus) Details() ActivityLogPathSelectorEventsExitStatusDetails {
	return ActivityLogPathSelectorEventsExitStatusDetails{}
}

type ActivityLogPathSelectorEventsExitStatusCode struct{}

func (ActivityLogPathSelectorEventsExitStatusCode) FieldPath() *ActivityLog_FieldSubPath {
	return &ActivityLog_FieldSubPath{
		selector: ActivityLog_FieldPathSelectorEvents,
		subPath:  NewActivityLogEventFieldPathBuilder().Exit().Status().Code().FieldPath(),
	}
}

func (s ActivityLogPathSelectorEventsExitStatusCode) WithValue(value int32) *ActivityLog_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ActivityLog_FieldSubPathValue)
}

func (s ActivityLogPathSelectorEventsExitStatusCode) WithArrayOfValues(values []int32) *ActivityLog_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ActivityLog_FieldSubPathArrayOfValues)
}

type ActivityLogPathSelectorEventsExitStatusMessage struct{}

func (ActivityLogPathSelectorEventsExitStatusMessage) FieldPath() *ActivityLog_FieldSubPath {
	return &ActivityLog_FieldSubPath{
		selector: ActivityLog_FieldPathSelectorEvents,
		subPath:  NewActivityLogEventFieldPathBuilder().Exit().Status().Message().FieldPath(),
	}
}

func (s ActivityLogPathSelectorEventsExitStatusMessage) WithValue(value string) *ActivityLog_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ActivityLog_FieldSubPathValue)
}

func (s ActivityLogPathSelectorEventsExitStatusMessage) WithArrayOfValues(values []string) *ActivityLog_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ActivityLog_FieldSubPathArrayOfValues)
}

type ActivityLogPathSelectorEventsExitStatusDetails struct{}

func (ActivityLogPathSelectorEventsExitStatusDetails) FieldPath() *ActivityLog_FieldSubPath {
	return &ActivityLog_FieldSubPath{
		selector: ActivityLog_FieldPathSelectorEvents,
		subPath:  NewActivityLogEventFieldPathBuilder().Exit().Status().Details().FieldPath(),
	}
}

func (s ActivityLogPathSelectorEventsExitStatusDetails) WithValue(value []*any.Any) *ActivityLog_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ActivityLog_FieldSubPathValue)
}

func (s ActivityLogPathSelectorEventsExitStatusDetails) WithArrayOfValues(values [][]*any.Any) *ActivityLog_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ActivityLog_FieldSubPathArrayOfValues)
}

func (s ActivityLogPathSelectorEventsExitStatusDetails) WithItemValue(value *any.Any) *ActivityLog_FieldSubPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*ActivityLog_FieldSubPathArrayItemValue)
}

type ActivityLogPathSelectorEventsExitTime struct{}

func (ActivityLogPathSelectorEventsExitTime) FieldPath() *ActivityLog_FieldSubPath {
	return &ActivityLog_FieldSubPath{
		selector: ActivityLog_FieldPathSelectorEvents,
		subPath:  NewActivityLogEventFieldPathBuilder().Exit().Time().FieldPath(),
	}
}

func (s ActivityLogPathSelectorEventsExitTime) WithValue(value *timestamp.Timestamp) *ActivityLog_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ActivityLog_FieldSubPathValue)
}

func (s ActivityLogPathSelectorEventsExitTime) WithArrayOfValues(values []*timestamp.Timestamp) *ActivityLog_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ActivityLog_FieldSubPathArrayOfValues)
}

type ActivityLogPathSelectorEventsRegionalServerMessage struct{}

func (ActivityLogPathSelectorEventsRegionalServerMessage) FieldPath() *ActivityLog_FieldSubPath {
	return &ActivityLog_FieldSubPath{
		selector: ActivityLog_FieldPathSelectorEvents,
		subPath:  NewActivityLogEventFieldPathBuilder().RegionalServerMessage().FieldPath(),
	}
}

func (s ActivityLogPathSelectorEventsRegionalServerMessage) WithValue(value *ActivityLog_Event_RegionalServerMsgEvent) *ActivityLog_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ActivityLog_FieldSubPathValue)
}

func (s ActivityLogPathSelectorEventsRegionalServerMessage) WithArrayOfValues(values []*ActivityLog_Event_RegionalServerMsgEvent) *ActivityLog_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ActivityLog_FieldSubPathArrayOfValues)
}

func (ActivityLogPathSelectorEventsRegionalServerMessage) Data() ActivityLogPathSelectorEventsRegionalServerMessageData {
	return ActivityLogPathSelectorEventsRegionalServerMessageData{}
}

func (ActivityLogPathSelectorEventsRegionalServerMessage) Time() ActivityLogPathSelectorEventsRegionalServerMessageTime {
	return ActivityLogPathSelectorEventsRegionalServerMessageTime{}
}

func (ActivityLogPathSelectorEventsRegionalServerMessage) RegionId() ActivityLogPathSelectorEventsRegionalServerMessageRegionId {
	return ActivityLogPathSelectorEventsRegionalServerMessageRegionId{}
}

type ActivityLogPathSelectorEventsRegionalServerMessageData struct{}

func (ActivityLogPathSelectorEventsRegionalServerMessageData) FieldPath() *ActivityLog_FieldSubPath {
	return &ActivityLog_FieldSubPath{
		selector: ActivityLog_FieldPathSelectorEvents,
		subPath:  NewActivityLogEventFieldPathBuilder().RegionalServerMessage().Data().FieldPath(),
	}
}

func (s ActivityLogPathSelectorEventsRegionalServerMessageData) WithValue(value *any.Any) *ActivityLog_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ActivityLog_FieldSubPathValue)
}

func (s ActivityLogPathSelectorEventsRegionalServerMessageData) WithArrayOfValues(values []*any.Any) *ActivityLog_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ActivityLog_FieldSubPathArrayOfValues)
}

type ActivityLogPathSelectorEventsRegionalServerMessageTime struct{}

func (ActivityLogPathSelectorEventsRegionalServerMessageTime) FieldPath() *ActivityLog_FieldSubPath {
	return &ActivityLog_FieldSubPath{
		selector: ActivityLog_FieldPathSelectorEvents,
		subPath:  NewActivityLogEventFieldPathBuilder().RegionalServerMessage().Time().FieldPath(),
	}
}

func (s ActivityLogPathSelectorEventsRegionalServerMessageTime) WithValue(value *timestamp.Timestamp) *ActivityLog_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ActivityLog_FieldSubPathValue)
}

func (s ActivityLogPathSelectorEventsRegionalServerMessageTime) WithArrayOfValues(values []*timestamp.Timestamp) *ActivityLog_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ActivityLog_FieldSubPathArrayOfValues)
}

type ActivityLogPathSelectorEventsRegionalServerMessageRegionId struct{}

func (ActivityLogPathSelectorEventsRegionalServerMessageRegionId) FieldPath() *ActivityLog_FieldSubPath {
	return &ActivityLog_FieldSubPath{
		selector: ActivityLog_FieldPathSelectorEvents,
		subPath:  NewActivityLogEventFieldPathBuilder().RegionalServerMessage().RegionId().FieldPath(),
	}
}

func (s ActivityLogPathSelectorEventsRegionalServerMessageRegionId) WithValue(value string) *ActivityLog_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ActivityLog_FieldSubPathValue)
}

func (s ActivityLogPathSelectorEventsRegionalServerMessageRegionId) WithArrayOfValues(values []string) *ActivityLog_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ActivityLog_FieldSubPathArrayOfValues)
}

type ActivityLogPathSelectorEventsRegionalExit struct{}

func (ActivityLogPathSelectorEventsRegionalExit) FieldPath() *ActivityLog_FieldSubPath {
	return &ActivityLog_FieldSubPath{
		selector: ActivityLog_FieldPathSelectorEvents,
		subPath:  NewActivityLogEventFieldPathBuilder().RegionalExit().FieldPath(),
	}
}

func (s ActivityLogPathSelectorEventsRegionalExit) WithValue(value *ActivityLog_Event_RegionalServerMsgEvent) *ActivityLog_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ActivityLog_FieldSubPathValue)
}

func (s ActivityLogPathSelectorEventsRegionalExit) WithArrayOfValues(values []*ActivityLog_Event_RegionalServerMsgEvent) *ActivityLog_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ActivityLog_FieldSubPathArrayOfValues)
}

func (ActivityLogPathSelectorEventsRegionalExit) Data() ActivityLogPathSelectorEventsRegionalExitData {
	return ActivityLogPathSelectorEventsRegionalExitData{}
}

func (ActivityLogPathSelectorEventsRegionalExit) Time() ActivityLogPathSelectorEventsRegionalExitTime {
	return ActivityLogPathSelectorEventsRegionalExitTime{}
}

func (ActivityLogPathSelectorEventsRegionalExit) RegionId() ActivityLogPathSelectorEventsRegionalExitRegionId {
	return ActivityLogPathSelectorEventsRegionalExitRegionId{}
}

type ActivityLogPathSelectorEventsRegionalExitData struct{}

func (ActivityLogPathSelectorEventsRegionalExitData) FieldPath() *ActivityLog_FieldSubPath {
	return &ActivityLog_FieldSubPath{
		selector: ActivityLog_FieldPathSelectorEvents,
		subPath:  NewActivityLogEventFieldPathBuilder().RegionalExit().Data().FieldPath(),
	}
}

func (s ActivityLogPathSelectorEventsRegionalExitData) WithValue(value *any.Any) *ActivityLog_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ActivityLog_FieldSubPathValue)
}

func (s ActivityLogPathSelectorEventsRegionalExitData) WithArrayOfValues(values []*any.Any) *ActivityLog_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ActivityLog_FieldSubPathArrayOfValues)
}

type ActivityLogPathSelectorEventsRegionalExitTime struct{}

func (ActivityLogPathSelectorEventsRegionalExitTime) FieldPath() *ActivityLog_FieldSubPath {
	return &ActivityLog_FieldSubPath{
		selector: ActivityLog_FieldPathSelectorEvents,
		subPath:  NewActivityLogEventFieldPathBuilder().RegionalExit().Time().FieldPath(),
	}
}

func (s ActivityLogPathSelectorEventsRegionalExitTime) WithValue(value *timestamp.Timestamp) *ActivityLog_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ActivityLog_FieldSubPathValue)
}

func (s ActivityLogPathSelectorEventsRegionalExitTime) WithArrayOfValues(values []*timestamp.Timestamp) *ActivityLog_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ActivityLog_FieldSubPathArrayOfValues)
}

type ActivityLogPathSelectorEventsRegionalExitRegionId struct{}

func (ActivityLogPathSelectorEventsRegionalExitRegionId) FieldPath() *ActivityLog_FieldSubPath {
	return &ActivityLog_FieldSubPath{
		selector: ActivityLog_FieldPathSelectorEvents,
		subPath:  NewActivityLogEventFieldPathBuilder().RegionalExit().RegionId().FieldPath(),
	}
}

func (s ActivityLogPathSelectorEventsRegionalExitRegionId) WithValue(value string) *ActivityLog_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ActivityLog_FieldSubPathValue)
}

func (s ActivityLogPathSelectorEventsRegionalExitRegionId) WithArrayOfValues(values []string) *ActivityLog_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ActivityLog_FieldSubPathArrayOfValues)
}

type ActivityLogEventFieldPathBuilder struct{}

func NewActivityLogEventFieldPathBuilder() ActivityLogEventFieldPathBuilder {
	return ActivityLogEventFieldPathBuilder{}
}
func (ActivityLogEventFieldPathBuilder) ClientMessage() ActivityLog_EventPathSelectorClientMessage {
	return ActivityLog_EventPathSelectorClientMessage{}
}
func (ActivityLogEventFieldPathBuilder) ServerMessage() ActivityLog_EventPathSelectorServerMessage {
	return ActivityLog_EventPathSelectorServerMessage{}
}
func (ActivityLogEventFieldPathBuilder) Exit() ActivityLog_EventPathSelectorExit {
	return ActivityLog_EventPathSelectorExit{}
}
func (ActivityLogEventFieldPathBuilder) RegionalServerMessage() ActivityLog_EventPathSelectorRegionalServerMessage {
	return ActivityLog_EventPathSelectorRegionalServerMessage{}
}
func (ActivityLogEventFieldPathBuilder) RegionalExit() ActivityLog_EventPathSelectorRegionalExit {
	return ActivityLog_EventPathSelectorRegionalExit{}
}

type ActivityLog_EventPathSelectorClientMessage struct{}

func (ActivityLog_EventPathSelectorClientMessage) FieldPath() *ActivityLogEvent_FieldTerminalPath {
	return &ActivityLogEvent_FieldTerminalPath{selector: ActivityLogEvent_FieldPathSelectorClientMessage}
}

func (s ActivityLog_EventPathSelectorClientMessage) WithValue(value *ActivityLog_Event_ClientMsgEvent) *ActivityLogEvent_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*ActivityLogEvent_FieldTerminalPathValue)
}

func (s ActivityLog_EventPathSelectorClientMessage) WithArrayOfValues(values []*ActivityLog_Event_ClientMsgEvent) *ActivityLogEvent_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ActivityLogEvent_FieldTerminalPathArrayOfValues)
}

func (ActivityLog_EventPathSelectorClientMessage) WithSubPath(subPath ActivityLogEventClientMsgEvent_FieldPath) *ActivityLogEvent_FieldSubPath {
	return &ActivityLogEvent_FieldSubPath{selector: ActivityLogEvent_FieldPathSelectorClientMessage, subPath: subPath}
}

func (s ActivityLog_EventPathSelectorClientMessage) WithSubValue(subPathValue ActivityLogEventClientMsgEvent_FieldPathValue) *ActivityLogEvent_FieldSubPathValue {
	return &ActivityLogEvent_FieldSubPathValue{ActivityLogEvent_FieldPath: s.WithSubPath(subPathValue), subPathValue: subPathValue}
}

func (s ActivityLog_EventPathSelectorClientMessage) WithSubArrayOfValues(subPathArrayOfValues ActivityLogEventClientMsgEvent_FieldPathArrayOfValues) *ActivityLogEvent_FieldSubPathArrayOfValues {
	return &ActivityLogEvent_FieldSubPathArrayOfValues{ActivityLogEvent_FieldPath: s.WithSubPath(subPathArrayOfValues), subPathArrayOfValues: subPathArrayOfValues}
}

func (s ActivityLog_EventPathSelectorClientMessage) WithSubArrayItemValue(subPathArrayItemValue ActivityLogEventClientMsgEvent_FieldPathArrayItemValue) *ActivityLogEvent_FieldSubPathArrayItemValue {
	return &ActivityLogEvent_FieldSubPathArrayItemValue{ActivityLogEvent_FieldPath: s.WithSubPath(subPathArrayItemValue), subPathItemValue: subPathArrayItemValue}
}

func (ActivityLog_EventPathSelectorClientMessage) Data() ActivityLog_EventPathSelectorClientMessageData {
	return ActivityLog_EventPathSelectorClientMessageData{}
}

func (ActivityLog_EventPathSelectorClientMessage) Time() ActivityLog_EventPathSelectorClientMessageTime {
	return ActivityLog_EventPathSelectorClientMessageTime{}
}

type ActivityLog_EventPathSelectorClientMessageData struct{}

func (ActivityLog_EventPathSelectorClientMessageData) FieldPath() *ActivityLogEvent_FieldSubPath {
	return &ActivityLogEvent_FieldSubPath{
		selector: ActivityLogEvent_FieldPathSelectorClientMessage,
		subPath:  NewActivityLogEventClientMsgEventFieldPathBuilder().Data().FieldPath(),
	}
}

func (s ActivityLog_EventPathSelectorClientMessageData) WithValue(value *any.Any) *ActivityLogEvent_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ActivityLogEvent_FieldSubPathValue)
}

func (s ActivityLog_EventPathSelectorClientMessageData) WithArrayOfValues(values []*any.Any) *ActivityLogEvent_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ActivityLogEvent_FieldSubPathArrayOfValues)
}

type ActivityLog_EventPathSelectorClientMessageTime struct{}

func (ActivityLog_EventPathSelectorClientMessageTime) FieldPath() *ActivityLogEvent_FieldSubPath {
	return &ActivityLogEvent_FieldSubPath{
		selector: ActivityLogEvent_FieldPathSelectorClientMessage,
		subPath:  NewActivityLogEventClientMsgEventFieldPathBuilder().Time().FieldPath(),
	}
}

func (s ActivityLog_EventPathSelectorClientMessageTime) WithValue(value *timestamp.Timestamp) *ActivityLogEvent_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ActivityLogEvent_FieldSubPathValue)
}

func (s ActivityLog_EventPathSelectorClientMessageTime) WithArrayOfValues(values []*timestamp.Timestamp) *ActivityLogEvent_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ActivityLogEvent_FieldSubPathArrayOfValues)
}

type ActivityLog_EventPathSelectorServerMessage struct{}

func (ActivityLog_EventPathSelectorServerMessage) FieldPath() *ActivityLogEvent_FieldTerminalPath {
	return &ActivityLogEvent_FieldTerminalPath{selector: ActivityLogEvent_FieldPathSelectorServerMessage}
}

func (s ActivityLog_EventPathSelectorServerMessage) WithValue(value *ActivityLog_Event_ServerMsgEvent) *ActivityLogEvent_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*ActivityLogEvent_FieldTerminalPathValue)
}

func (s ActivityLog_EventPathSelectorServerMessage) WithArrayOfValues(values []*ActivityLog_Event_ServerMsgEvent) *ActivityLogEvent_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ActivityLogEvent_FieldTerminalPathArrayOfValues)
}

func (ActivityLog_EventPathSelectorServerMessage) WithSubPath(subPath ActivityLogEventServerMsgEvent_FieldPath) *ActivityLogEvent_FieldSubPath {
	return &ActivityLogEvent_FieldSubPath{selector: ActivityLogEvent_FieldPathSelectorServerMessage, subPath: subPath}
}

func (s ActivityLog_EventPathSelectorServerMessage) WithSubValue(subPathValue ActivityLogEventServerMsgEvent_FieldPathValue) *ActivityLogEvent_FieldSubPathValue {
	return &ActivityLogEvent_FieldSubPathValue{ActivityLogEvent_FieldPath: s.WithSubPath(subPathValue), subPathValue: subPathValue}
}

func (s ActivityLog_EventPathSelectorServerMessage) WithSubArrayOfValues(subPathArrayOfValues ActivityLogEventServerMsgEvent_FieldPathArrayOfValues) *ActivityLogEvent_FieldSubPathArrayOfValues {
	return &ActivityLogEvent_FieldSubPathArrayOfValues{ActivityLogEvent_FieldPath: s.WithSubPath(subPathArrayOfValues), subPathArrayOfValues: subPathArrayOfValues}
}

func (s ActivityLog_EventPathSelectorServerMessage) WithSubArrayItemValue(subPathArrayItemValue ActivityLogEventServerMsgEvent_FieldPathArrayItemValue) *ActivityLogEvent_FieldSubPathArrayItemValue {
	return &ActivityLogEvent_FieldSubPathArrayItemValue{ActivityLogEvent_FieldPath: s.WithSubPath(subPathArrayItemValue), subPathItemValue: subPathArrayItemValue}
}

func (ActivityLog_EventPathSelectorServerMessage) Data() ActivityLog_EventPathSelectorServerMessageData {
	return ActivityLog_EventPathSelectorServerMessageData{}
}

func (ActivityLog_EventPathSelectorServerMessage) Time() ActivityLog_EventPathSelectorServerMessageTime {
	return ActivityLog_EventPathSelectorServerMessageTime{}
}

func (ActivityLog_EventPathSelectorServerMessage) RoutedRegionId() ActivityLog_EventPathSelectorServerMessageRoutedRegionId {
	return ActivityLog_EventPathSelectorServerMessageRoutedRegionId{}
}

type ActivityLog_EventPathSelectorServerMessageData struct{}

func (ActivityLog_EventPathSelectorServerMessageData) FieldPath() *ActivityLogEvent_FieldSubPath {
	return &ActivityLogEvent_FieldSubPath{
		selector: ActivityLogEvent_FieldPathSelectorServerMessage,
		subPath:  NewActivityLogEventServerMsgEventFieldPathBuilder().Data().FieldPath(),
	}
}

func (s ActivityLog_EventPathSelectorServerMessageData) WithValue(value *any.Any) *ActivityLogEvent_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ActivityLogEvent_FieldSubPathValue)
}

func (s ActivityLog_EventPathSelectorServerMessageData) WithArrayOfValues(values []*any.Any) *ActivityLogEvent_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ActivityLogEvent_FieldSubPathArrayOfValues)
}

type ActivityLog_EventPathSelectorServerMessageTime struct{}

func (ActivityLog_EventPathSelectorServerMessageTime) FieldPath() *ActivityLogEvent_FieldSubPath {
	return &ActivityLogEvent_FieldSubPath{
		selector: ActivityLogEvent_FieldPathSelectorServerMessage,
		subPath:  NewActivityLogEventServerMsgEventFieldPathBuilder().Time().FieldPath(),
	}
}

func (s ActivityLog_EventPathSelectorServerMessageTime) WithValue(value *timestamp.Timestamp) *ActivityLogEvent_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ActivityLogEvent_FieldSubPathValue)
}

func (s ActivityLog_EventPathSelectorServerMessageTime) WithArrayOfValues(values []*timestamp.Timestamp) *ActivityLogEvent_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ActivityLogEvent_FieldSubPathArrayOfValues)
}

type ActivityLog_EventPathSelectorServerMessageRoutedRegionId struct{}

func (ActivityLog_EventPathSelectorServerMessageRoutedRegionId) FieldPath() *ActivityLogEvent_FieldSubPath {
	return &ActivityLogEvent_FieldSubPath{
		selector: ActivityLogEvent_FieldPathSelectorServerMessage,
		subPath:  NewActivityLogEventServerMsgEventFieldPathBuilder().RoutedRegionId().FieldPath(),
	}
}

func (s ActivityLog_EventPathSelectorServerMessageRoutedRegionId) WithValue(value string) *ActivityLogEvent_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ActivityLogEvent_FieldSubPathValue)
}

func (s ActivityLog_EventPathSelectorServerMessageRoutedRegionId) WithArrayOfValues(values []string) *ActivityLogEvent_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ActivityLogEvent_FieldSubPathArrayOfValues)
}

type ActivityLog_EventPathSelectorExit struct{}

func (ActivityLog_EventPathSelectorExit) FieldPath() *ActivityLogEvent_FieldTerminalPath {
	return &ActivityLogEvent_FieldTerminalPath{selector: ActivityLogEvent_FieldPathSelectorExit}
}

func (s ActivityLog_EventPathSelectorExit) WithValue(value *ActivityLog_Event_ExitEvent) *ActivityLogEvent_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*ActivityLogEvent_FieldTerminalPathValue)
}

func (s ActivityLog_EventPathSelectorExit) WithArrayOfValues(values []*ActivityLog_Event_ExitEvent) *ActivityLogEvent_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ActivityLogEvent_FieldTerminalPathArrayOfValues)
}

func (ActivityLog_EventPathSelectorExit) WithSubPath(subPath ActivityLogEventExitEvent_FieldPath) *ActivityLogEvent_FieldSubPath {
	return &ActivityLogEvent_FieldSubPath{selector: ActivityLogEvent_FieldPathSelectorExit, subPath: subPath}
}

func (s ActivityLog_EventPathSelectorExit) WithSubValue(subPathValue ActivityLogEventExitEvent_FieldPathValue) *ActivityLogEvent_FieldSubPathValue {
	return &ActivityLogEvent_FieldSubPathValue{ActivityLogEvent_FieldPath: s.WithSubPath(subPathValue), subPathValue: subPathValue}
}

func (s ActivityLog_EventPathSelectorExit) WithSubArrayOfValues(subPathArrayOfValues ActivityLogEventExitEvent_FieldPathArrayOfValues) *ActivityLogEvent_FieldSubPathArrayOfValues {
	return &ActivityLogEvent_FieldSubPathArrayOfValues{ActivityLogEvent_FieldPath: s.WithSubPath(subPathArrayOfValues), subPathArrayOfValues: subPathArrayOfValues}
}

func (s ActivityLog_EventPathSelectorExit) WithSubArrayItemValue(subPathArrayItemValue ActivityLogEventExitEvent_FieldPathArrayItemValue) *ActivityLogEvent_FieldSubPathArrayItemValue {
	return &ActivityLogEvent_FieldSubPathArrayItemValue{ActivityLogEvent_FieldPath: s.WithSubPath(subPathArrayItemValue), subPathItemValue: subPathArrayItemValue}
}

func (ActivityLog_EventPathSelectorExit) Status() ActivityLog_EventPathSelectorExitStatus {
	return ActivityLog_EventPathSelectorExitStatus{}
}

func (ActivityLog_EventPathSelectorExit) Time() ActivityLog_EventPathSelectorExitTime {
	return ActivityLog_EventPathSelectorExitTime{}
}

type ActivityLog_EventPathSelectorExitStatus struct{}

func (ActivityLog_EventPathSelectorExitStatus) FieldPath() *ActivityLogEvent_FieldSubPath {
	return &ActivityLogEvent_FieldSubPath{
		selector: ActivityLogEvent_FieldPathSelectorExit,
		subPath:  NewActivityLogEventExitEventFieldPathBuilder().Status().FieldPath(),
	}
}

func (s ActivityLog_EventPathSelectorExitStatus) WithValue(value *rpc.Status) *ActivityLogEvent_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ActivityLogEvent_FieldSubPathValue)
}

func (s ActivityLog_EventPathSelectorExitStatus) WithArrayOfValues(values []*rpc.Status) *ActivityLogEvent_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ActivityLogEvent_FieldSubPathArrayOfValues)
}

func (ActivityLog_EventPathSelectorExitStatus) Code() ActivityLog_EventPathSelectorExitStatusCode {
	return ActivityLog_EventPathSelectorExitStatusCode{}
}

func (ActivityLog_EventPathSelectorExitStatus) Message() ActivityLog_EventPathSelectorExitStatusMessage {
	return ActivityLog_EventPathSelectorExitStatusMessage{}
}

func (ActivityLog_EventPathSelectorExitStatus) Details() ActivityLog_EventPathSelectorExitStatusDetails {
	return ActivityLog_EventPathSelectorExitStatusDetails{}
}

type ActivityLog_EventPathSelectorExitStatusCode struct{}

func (ActivityLog_EventPathSelectorExitStatusCode) FieldPath() *ActivityLogEvent_FieldSubPath {
	return &ActivityLogEvent_FieldSubPath{
		selector: ActivityLogEvent_FieldPathSelectorExit,
		subPath:  NewActivityLogEventExitEventFieldPathBuilder().Status().Code().FieldPath(),
	}
}

func (s ActivityLog_EventPathSelectorExitStatusCode) WithValue(value int32) *ActivityLogEvent_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ActivityLogEvent_FieldSubPathValue)
}

func (s ActivityLog_EventPathSelectorExitStatusCode) WithArrayOfValues(values []int32) *ActivityLogEvent_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ActivityLogEvent_FieldSubPathArrayOfValues)
}

type ActivityLog_EventPathSelectorExitStatusMessage struct{}

func (ActivityLog_EventPathSelectorExitStatusMessage) FieldPath() *ActivityLogEvent_FieldSubPath {
	return &ActivityLogEvent_FieldSubPath{
		selector: ActivityLogEvent_FieldPathSelectorExit,
		subPath:  NewActivityLogEventExitEventFieldPathBuilder().Status().Message().FieldPath(),
	}
}

func (s ActivityLog_EventPathSelectorExitStatusMessage) WithValue(value string) *ActivityLogEvent_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ActivityLogEvent_FieldSubPathValue)
}

func (s ActivityLog_EventPathSelectorExitStatusMessage) WithArrayOfValues(values []string) *ActivityLogEvent_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ActivityLogEvent_FieldSubPathArrayOfValues)
}

type ActivityLog_EventPathSelectorExitStatusDetails struct{}

func (ActivityLog_EventPathSelectorExitStatusDetails) FieldPath() *ActivityLogEvent_FieldSubPath {
	return &ActivityLogEvent_FieldSubPath{
		selector: ActivityLogEvent_FieldPathSelectorExit,
		subPath:  NewActivityLogEventExitEventFieldPathBuilder().Status().Details().FieldPath(),
	}
}

func (s ActivityLog_EventPathSelectorExitStatusDetails) WithValue(value []*any.Any) *ActivityLogEvent_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ActivityLogEvent_FieldSubPathValue)
}

func (s ActivityLog_EventPathSelectorExitStatusDetails) WithArrayOfValues(values [][]*any.Any) *ActivityLogEvent_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ActivityLogEvent_FieldSubPathArrayOfValues)
}

func (s ActivityLog_EventPathSelectorExitStatusDetails) WithItemValue(value *any.Any) *ActivityLogEvent_FieldSubPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*ActivityLogEvent_FieldSubPathArrayItemValue)
}

type ActivityLog_EventPathSelectorExitTime struct{}

func (ActivityLog_EventPathSelectorExitTime) FieldPath() *ActivityLogEvent_FieldSubPath {
	return &ActivityLogEvent_FieldSubPath{
		selector: ActivityLogEvent_FieldPathSelectorExit,
		subPath:  NewActivityLogEventExitEventFieldPathBuilder().Time().FieldPath(),
	}
}

func (s ActivityLog_EventPathSelectorExitTime) WithValue(value *timestamp.Timestamp) *ActivityLogEvent_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ActivityLogEvent_FieldSubPathValue)
}

func (s ActivityLog_EventPathSelectorExitTime) WithArrayOfValues(values []*timestamp.Timestamp) *ActivityLogEvent_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ActivityLogEvent_FieldSubPathArrayOfValues)
}

type ActivityLog_EventPathSelectorRegionalServerMessage struct{}

func (ActivityLog_EventPathSelectorRegionalServerMessage) FieldPath() *ActivityLogEvent_FieldTerminalPath {
	return &ActivityLogEvent_FieldTerminalPath{selector: ActivityLogEvent_FieldPathSelectorRegionalServerMessage}
}

func (s ActivityLog_EventPathSelectorRegionalServerMessage) WithValue(value *ActivityLog_Event_RegionalServerMsgEvent) *ActivityLogEvent_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*ActivityLogEvent_FieldTerminalPathValue)
}

func (s ActivityLog_EventPathSelectorRegionalServerMessage) WithArrayOfValues(values []*ActivityLog_Event_RegionalServerMsgEvent) *ActivityLogEvent_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ActivityLogEvent_FieldTerminalPathArrayOfValues)
}

func (ActivityLog_EventPathSelectorRegionalServerMessage) WithSubPath(subPath ActivityLogEventRegionalServerMsgEvent_FieldPath) *ActivityLogEvent_FieldSubPath {
	return &ActivityLogEvent_FieldSubPath{selector: ActivityLogEvent_FieldPathSelectorRegionalServerMessage, subPath: subPath}
}

func (s ActivityLog_EventPathSelectorRegionalServerMessage) WithSubValue(subPathValue ActivityLogEventRegionalServerMsgEvent_FieldPathValue) *ActivityLogEvent_FieldSubPathValue {
	return &ActivityLogEvent_FieldSubPathValue{ActivityLogEvent_FieldPath: s.WithSubPath(subPathValue), subPathValue: subPathValue}
}

func (s ActivityLog_EventPathSelectorRegionalServerMessage) WithSubArrayOfValues(subPathArrayOfValues ActivityLogEventRegionalServerMsgEvent_FieldPathArrayOfValues) *ActivityLogEvent_FieldSubPathArrayOfValues {
	return &ActivityLogEvent_FieldSubPathArrayOfValues{ActivityLogEvent_FieldPath: s.WithSubPath(subPathArrayOfValues), subPathArrayOfValues: subPathArrayOfValues}
}

func (s ActivityLog_EventPathSelectorRegionalServerMessage) WithSubArrayItemValue(subPathArrayItemValue ActivityLogEventRegionalServerMsgEvent_FieldPathArrayItemValue) *ActivityLogEvent_FieldSubPathArrayItemValue {
	return &ActivityLogEvent_FieldSubPathArrayItemValue{ActivityLogEvent_FieldPath: s.WithSubPath(subPathArrayItemValue), subPathItemValue: subPathArrayItemValue}
}

func (ActivityLog_EventPathSelectorRegionalServerMessage) Data() ActivityLog_EventPathSelectorRegionalServerMessageData {
	return ActivityLog_EventPathSelectorRegionalServerMessageData{}
}

func (ActivityLog_EventPathSelectorRegionalServerMessage) Time() ActivityLog_EventPathSelectorRegionalServerMessageTime {
	return ActivityLog_EventPathSelectorRegionalServerMessageTime{}
}

func (ActivityLog_EventPathSelectorRegionalServerMessage) RegionId() ActivityLog_EventPathSelectorRegionalServerMessageRegionId {
	return ActivityLog_EventPathSelectorRegionalServerMessageRegionId{}
}

type ActivityLog_EventPathSelectorRegionalServerMessageData struct{}

func (ActivityLog_EventPathSelectorRegionalServerMessageData) FieldPath() *ActivityLogEvent_FieldSubPath {
	return &ActivityLogEvent_FieldSubPath{
		selector: ActivityLogEvent_FieldPathSelectorRegionalServerMessage,
		subPath:  NewActivityLogEventRegionalServerMsgEventFieldPathBuilder().Data().FieldPath(),
	}
}

func (s ActivityLog_EventPathSelectorRegionalServerMessageData) WithValue(value *any.Any) *ActivityLogEvent_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ActivityLogEvent_FieldSubPathValue)
}

func (s ActivityLog_EventPathSelectorRegionalServerMessageData) WithArrayOfValues(values []*any.Any) *ActivityLogEvent_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ActivityLogEvent_FieldSubPathArrayOfValues)
}

type ActivityLog_EventPathSelectorRegionalServerMessageTime struct{}

func (ActivityLog_EventPathSelectorRegionalServerMessageTime) FieldPath() *ActivityLogEvent_FieldSubPath {
	return &ActivityLogEvent_FieldSubPath{
		selector: ActivityLogEvent_FieldPathSelectorRegionalServerMessage,
		subPath:  NewActivityLogEventRegionalServerMsgEventFieldPathBuilder().Time().FieldPath(),
	}
}

func (s ActivityLog_EventPathSelectorRegionalServerMessageTime) WithValue(value *timestamp.Timestamp) *ActivityLogEvent_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ActivityLogEvent_FieldSubPathValue)
}

func (s ActivityLog_EventPathSelectorRegionalServerMessageTime) WithArrayOfValues(values []*timestamp.Timestamp) *ActivityLogEvent_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ActivityLogEvent_FieldSubPathArrayOfValues)
}

type ActivityLog_EventPathSelectorRegionalServerMessageRegionId struct{}

func (ActivityLog_EventPathSelectorRegionalServerMessageRegionId) FieldPath() *ActivityLogEvent_FieldSubPath {
	return &ActivityLogEvent_FieldSubPath{
		selector: ActivityLogEvent_FieldPathSelectorRegionalServerMessage,
		subPath:  NewActivityLogEventRegionalServerMsgEventFieldPathBuilder().RegionId().FieldPath(),
	}
}

func (s ActivityLog_EventPathSelectorRegionalServerMessageRegionId) WithValue(value string) *ActivityLogEvent_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ActivityLogEvent_FieldSubPathValue)
}

func (s ActivityLog_EventPathSelectorRegionalServerMessageRegionId) WithArrayOfValues(values []string) *ActivityLogEvent_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ActivityLogEvent_FieldSubPathArrayOfValues)
}

type ActivityLog_EventPathSelectorRegionalExit struct{}

func (ActivityLog_EventPathSelectorRegionalExit) FieldPath() *ActivityLogEvent_FieldTerminalPath {
	return &ActivityLogEvent_FieldTerminalPath{selector: ActivityLogEvent_FieldPathSelectorRegionalExit}
}

func (s ActivityLog_EventPathSelectorRegionalExit) WithValue(value *ActivityLog_Event_RegionalServerMsgEvent) *ActivityLogEvent_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*ActivityLogEvent_FieldTerminalPathValue)
}

func (s ActivityLog_EventPathSelectorRegionalExit) WithArrayOfValues(values []*ActivityLog_Event_RegionalServerMsgEvent) *ActivityLogEvent_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ActivityLogEvent_FieldTerminalPathArrayOfValues)
}

func (ActivityLog_EventPathSelectorRegionalExit) WithSubPath(subPath ActivityLogEventRegionalServerMsgEvent_FieldPath) *ActivityLogEvent_FieldSubPath {
	return &ActivityLogEvent_FieldSubPath{selector: ActivityLogEvent_FieldPathSelectorRegionalExit, subPath: subPath}
}

func (s ActivityLog_EventPathSelectorRegionalExit) WithSubValue(subPathValue ActivityLogEventRegionalServerMsgEvent_FieldPathValue) *ActivityLogEvent_FieldSubPathValue {
	return &ActivityLogEvent_FieldSubPathValue{ActivityLogEvent_FieldPath: s.WithSubPath(subPathValue), subPathValue: subPathValue}
}

func (s ActivityLog_EventPathSelectorRegionalExit) WithSubArrayOfValues(subPathArrayOfValues ActivityLogEventRegionalServerMsgEvent_FieldPathArrayOfValues) *ActivityLogEvent_FieldSubPathArrayOfValues {
	return &ActivityLogEvent_FieldSubPathArrayOfValues{ActivityLogEvent_FieldPath: s.WithSubPath(subPathArrayOfValues), subPathArrayOfValues: subPathArrayOfValues}
}

func (s ActivityLog_EventPathSelectorRegionalExit) WithSubArrayItemValue(subPathArrayItemValue ActivityLogEventRegionalServerMsgEvent_FieldPathArrayItemValue) *ActivityLogEvent_FieldSubPathArrayItemValue {
	return &ActivityLogEvent_FieldSubPathArrayItemValue{ActivityLogEvent_FieldPath: s.WithSubPath(subPathArrayItemValue), subPathItemValue: subPathArrayItemValue}
}

func (ActivityLog_EventPathSelectorRegionalExit) Data() ActivityLog_EventPathSelectorRegionalExitData {
	return ActivityLog_EventPathSelectorRegionalExitData{}
}

func (ActivityLog_EventPathSelectorRegionalExit) Time() ActivityLog_EventPathSelectorRegionalExitTime {
	return ActivityLog_EventPathSelectorRegionalExitTime{}
}

func (ActivityLog_EventPathSelectorRegionalExit) RegionId() ActivityLog_EventPathSelectorRegionalExitRegionId {
	return ActivityLog_EventPathSelectorRegionalExitRegionId{}
}

type ActivityLog_EventPathSelectorRegionalExitData struct{}

func (ActivityLog_EventPathSelectorRegionalExitData) FieldPath() *ActivityLogEvent_FieldSubPath {
	return &ActivityLogEvent_FieldSubPath{
		selector: ActivityLogEvent_FieldPathSelectorRegionalExit,
		subPath:  NewActivityLogEventRegionalServerMsgEventFieldPathBuilder().Data().FieldPath(),
	}
}

func (s ActivityLog_EventPathSelectorRegionalExitData) WithValue(value *any.Any) *ActivityLogEvent_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ActivityLogEvent_FieldSubPathValue)
}

func (s ActivityLog_EventPathSelectorRegionalExitData) WithArrayOfValues(values []*any.Any) *ActivityLogEvent_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ActivityLogEvent_FieldSubPathArrayOfValues)
}

type ActivityLog_EventPathSelectorRegionalExitTime struct{}

func (ActivityLog_EventPathSelectorRegionalExitTime) FieldPath() *ActivityLogEvent_FieldSubPath {
	return &ActivityLogEvent_FieldSubPath{
		selector: ActivityLogEvent_FieldPathSelectorRegionalExit,
		subPath:  NewActivityLogEventRegionalServerMsgEventFieldPathBuilder().Time().FieldPath(),
	}
}

func (s ActivityLog_EventPathSelectorRegionalExitTime) WithValue(value *timestamp.Timestamp) *ActivityLogEvent_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ActivityLogEvent_FieldSubPathValue)
}

func (s ActivityLog_EventPathSelectorRegionalExitTime) WithArrayOfValues(values []*timestamp.Timestamp) *ActivityLogEvent_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ActivityLogEvent_FieldSubPathArrayOfValues)
}

type ActivityLog_EventPathSelectorRegionalExitRegionId struct{}

func (ActivityLog_EventPathSelectorRegionalExitRegionId) FieldPath() *ActivityLogEvent_FieldSubPath {
	return &ActivityLogEvent_FieldSubPath{
		selector: ActivityLogEvent_FieldPathSelectorRegionalExit,
		subPath:  NewActivityLogEventRegionalServerMsgEventFieldPathBuilder().RegionId().FieldPath(),
	}
}

func (s ActivityLog_EventPathSelectorRegionalExitRegionId) WithValue(value string) *ActivityLogEvent_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ActivityLogEvent_FieldSubPathValue)
}

func (s ActivityLog_EventPathSelectorRegionalExitRegionId) WithArrayOfValues(values []string) *ActivityLogEvent_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ActivityLogEvent_FieldSubPathArrayOfValues)
}

type ActivityLogMethodFieldPathBuilder struct{}

func NewActivityLogMethodFieldPathBuilder() ActivityLogMethodFieldPathBuilder {
	return ActivityLogMethodFieldPathBuilder{}
}
func (ActivityLogMethodFieldPathBuilder) Type() ActivityLog_MethodPathSelectorType {
	return ActivityLog_MethodPathSelectorType{}
}
func (ActivityLogMethodFieldPathBuilder) Version() ActivityLog_MethodPathSelectorVersion {
	return ActivityLog_MethodPathSelectorVersion{}
}

type ActivityLog_MethodPathSelectorType struct{}

func (ActivityLog_MethodPathSelectorType) FieldPath() *ActivityLogMethod_FieldTerminalPath {
	return &ActivityLogMethod_FieldTerminalPath{selector: ActivityLogMethod_FieldPathSelectorType}
}

func (s ActivityLog_MethodPathSelectorType) WithValue(value string) *ActivityLogMethod_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*ActivityLogMethod_FieldTerminalPathValue)
}

func (s ActivityLog_MethodPathSelectorType) WithArrayOfValues(values []string) *ActivityLogMethod_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ActivityLogMethod_FieldTerminalPathArrayOfValues)
}

type ActivityLog_MethodPathSelectorVersion struct{}

func (ActivityLog_MethodPathSelectorVersion) FieldPath() *ActivityLogMethod_FieldTerminalPath {
	return &ActivityLogMethod_FieldTerminalPath{selector: ActivityLogMethod_FieldPathSelectorVersion}
}

func (s ActivityLog_MethodPathSelectorVersion) WithValue(value string) *ActivityLogMethod_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*ActivityLogMethod_FieldTerminalPathValue)
}

func (s ActivityLog_MethodPathSelectorVersion) WithArrayOfValues(values []string) *ActivityLogMethod_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ActivityLogMethod_FieldTerminalPathArrayOfValues)
}

type ActivityLogRequestMetadataFieldPathBuilder struct{}

func NewActivityLogRequestMetadataFieldPathBuilder() ActivityLogRequestMetadataFieldPathBuilder {
	return ActivityLogRequestMetadataFieldPathBuilder{}
}
func (ActivityLogRequestMetadataFieldPathBuilder) IpAddress() ActivityLog_RequestMetadataPathSelectorIpAddress {
	return ActivityLog_RequestMetadataPathSelectorIpAddress{}
}
func (ActivityLogRequestMetadataFieldPathBuilder) UserAgent() ActivityLog_RequestMetadataPathSelectorUserAgent {
	return ActivityLog_RequestMetadataPathSelectorUserAgent{}
}

type ActivityLog_RequestMetadataPathSelectorIpAddress struct{}

func (ActivityLog_RequestMetadataPathSelectorIpAddress) FieldPath() *ActivityLogRequestMetadata_FieldTerminalPath {
	return &ActivityLogRequestMetadata_FieldTerminalPath{selector: ActivityLogRequestMetadata_FieldPathSelectorIpAddress}
}

func (s ActivityLog_RequestMetadataPathSelectorIpAddress) WithValue(value string) *ActivityLogRequestMetadata_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*ActivityLogRequestMetadata_FieldTerminalPathValue)
}

func (s ActivityLog_RequestMetadataPathSelectorIpAddress) WithArrayOfValues(values []string) *ActivityLogRequestMetadata_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ActivityLogRequestMetadata_FieldTerminalPathArrayOfValues)
}

type ActivityLog_RequestMetadataPathSelectorUserAgent struct{}

func (ActivityLog_RequestMetadataPathSelectorUserAgent) FieldPath() *ActivityLogRequestMetadata_FieldTerminalPath {
	return &ActivityLogRequestMetadata_FieldTerminalPath{selector: ActivityLogRequestMetadata_FieldPathSelectorUserAgent}
}

func (s ActivityLog_RequestMetadataPathSelectorUserAgent) WithValue(value string) *ActivityLogRequestMetadata_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*ActivityLogRequestMetadata_FieldTerminalPathValue)
}

func (s ActivityLog_RequestMetadataPathSelectorUserAgent) WithArrayOfValues(values []string) *ActivityLogRequestMetadata_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ActivityLogRequestMetadata_FieldTerminalPathArrayOfValues)
}

type ActivityLogSubjectResourceFieldPathBuilder struct{}

func NewActivityLogSubjectResourceFieldPathBuilder() ActivityLogSubjectResourceFieldPathBuilder {
	return ActivityLogSubjectResourceFieldPathBuilder{}
}
func (ActivityLogSubjectResourceFieldPathBuilder) Name() ActivityLog_SubjectResourcePathSelectorName {
	return ActivityLog_SubjectResourcePathSelectorName{}
}
func (ActivityLogSubjectResourceFieldPathBuilder) Difference() ActivityLog_SubjectResourcePathSelectorDifference {
	return ActivityLog_SubjectResourcePathSelectorDifference{}
}

type ActivityLog_SubjectResourcePathSelectorName struct{}

func (ActivityLog_SubjectResourcePathSelectorName) FieldPath() *ActivityLogSubjectResource_FieldTerminalPath {
	return &ActivityLogSubjectResource_FieldTerminalPath{selector: ActivityLogSubjectResource_FieldPathSelectorName}
}

func (s ActivityLog_SubjectResourcePathSelectorName) WithValue(value string) *ActivityLogSubjectResource_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*ActivityLogSubjectResource_FieldTerminalPathValue)
}

func (s ActivityLog_SubjectResourcePathSelectorName) WithArrayOfValues(values []string) *ActivityLogSubjectResource_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ActivityLogSubjectResource_FieldTerminalPathArrayOfValues)
}

type ActivityLog_SubjectResourcePathSelectorDifference struct{}

func (ActivityLog_SubjectResourcePathSelectorDifference) FieldPath() *ActivityLogSubjectResource_FieldTerminalPath {
	return &ActivityLogSubjectResource_FieldTerminalPath{selector: ActivityLogSubjectResource_FieldPathSelectorDifference}
}

func (s ActivityLog_SubjectResourcePathSelectorDifference) WithValue(value *ActivityLog_SubjectResource_Difference) *ActivityLogSubjectResource_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*ActivityLogSubjectResource_FieldTerminalPathValue)
}

func (s ActivityLog_SubjectResourcePathSelectorDifference) WithArrayOfValues(values []*ActivityLog_SubjectResource_Difference) *ActivityLogSubjectResource_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ActivityLogSubjectResource_FieldTerminalPathArrayOfValues)
}

func (ActivityLog_SubjectResourcePathSelectorDifference) WithSubPath(subPath ActivityLogSubjectResourceDifference_FieldPath) *ActivityLogSubjectResource_FieldSubPath {
	return &ActivityLogSubjectResource_FieldSubPath{selector: ActivityLogSubjectResource_FieldPathSelectorDifference, subPath: subPath}
}

func (s ActivityLog_SubjectResourcePathSelectorDifference) WithSubValue(subPathValue ActivityLogSubjectResourceDifference_FieldPathValue) *ActivityLogSubjectResource_FieldSubPathValue {
	return &ActivityLogSubjectResource_FieldSubPathValue{ActivityLogSubjectResource_FieldPath: s.WithSubPath(subPathValue), subPathValue: subPathValue}
}

func (s ActivityLog_SubjectResourcePathSelectorDifference) WithSubArrayOfValues(subPathArrayOfValues ActivityLogSubjectResourceDifference_FieldPathArrayOfValues) *ActivityLogSubjectResource_FieldSubPathArrayOfValues {
	return &ActivityLogSubjectResource_FieldSubPathArrayOfValues{ActivityLogSubjectResource_FieldPath: s.WithSubPath(subPathArrayOfValues), subPathArrayOfValues: subPathArrayOfValues}
}

func (s ActivityLog_SubjectResourcePathSelectorDifference) WithSubArrayItemValue(subPathArrayItemValue ActivityLogSubjectResourceDifference_FieldPathArrayItemValue) *ActivityLogSubjectResource_FieldSubPathArrayItemValue {
	return &ActivityLogSubjectResource_FieldSubPathArrayItemValue{ActivityLogSubjectResource_FieldPath: s.WithSubPath(subPathArrayItemValue), subPathItemValue: subPathArrayItemValue}
}

func (ActivityLog_SubjectResourcePathSelectorDifference) Fields() ActivityLog_SubjectResourcePathSelectorDifferenceFields {
	return ActivityLog_SubjectResourcePathSelectorDifferenceFields{}
}

func (ActivityLog_SubjectResourcePathSelectorDifference) Before() ActivityLog_SubjectResourcePathSelectorDifferenceBefore {
	return ActivityLog_SubjectResourcePathSelectorDifferenceBefore{}
}

func (ActivityLog_SubjectResourcePathSelectorDifference) After() ActivityLog_SubjectResourcePathSelectorDifferenceAfter {
	return ActivityLog_SubjectResourcePathSelectorDifferenceAfter{}
}

type ActivityLog_SubjectResourcePathSelectorDifferenceFields struct{}

func (ActivityLog_SubjectResourcePathSelectorDifferenceFields) FieldPath() *ActivityLogSubjectResource_FieldSubPath {
	return &ActivityLogSubjectResource_FieldSubPath{
		selector: ActivityLogSubjectResource_FieldPathSelectorDifference,
		subPath:  NewActivityLogSubjectResourceDifferenceFieldPathBuilder().Fields().FieldPath(),
	}
}

func (s ActivityLog_SubjectResourcePathSelectorDifferenceFields) WithValue(value *field_mask.FieldMask) *ActivityLogSubjectResource_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ActivityLogSubjectResource_FieldSubPathValue)
}

func (s ActivityLog_SubjectResourcePathSelectorDifferenceFields) WithArrayOfValues(values []*field_mask.FieldMask) *ActivityLogSubjectResource_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ActivityLogSubjectResource_FieldSubPathArrayOfValues)
}

type ActivityLog_SubjectResourcePathSelectorDifferenceBefore struct{}

func (ActivityLog_SubjectResourcePathSelectorDifferenceBefore) FieldPath() *ActivityLogSubjectResource_FieldSubPath {
	return &ActivityLogSubjectResource_FieldSubPath{
		selector: ActivityLogSubjectResource_FieldPathSelectorDifference,
		subPath:  NewActivityLogSubjectResourceDifferenceFieldPathBuilder().Before().FieldPath(),
	}
}

func (s ActivityLog_SubjectResourcePathSelectorDifferenceBefore) WithValue(value *any.Any) *ActivityLogSubjectResource_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ActivityLogSubjectResource_FieldSubPathValue)
}

func (s ActivityLog_SubjectResourcePathSelectorDifferenceBefore) WithArrayOfValues(values []*any.Any) *ActivityLogSubjectResource_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ActivityLogSubjectResource_FieldSubPathArrayOfValues)
}

type ActivityLog_SubjectResourcePathSelectorDifferenceAfter struct{}

func (ActivityLog_SubjectResourcePathSelectorDifferenceAfter) FieldPath() *ActivityLogSubjectResource_FieldSubPath {
	return &ActivityLogSubjectResource_FieldSubPath{
		selector: ActivityLogSubjectResource_FieldPathSelectorDifference,
		subPath:  NewActivityLogSubjectResourceDifferenceFieldPathBuilder().After().FieldPath(),
	}
}

func (s ActivityLog_SubjectResourcePathSelectorDifferenceAfter) WithValue(value *any.Any) *ActivityLogSubjectResource_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ActivityLogSubjectResource_FieldSubPathValue)
}

func (s ActivityLog_SubjectResourcePathSelectorDifferenceAfter) WithArrayOfValues(values []*any.Any) *ActivityLogSubjectResource_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ActivityLogSubjectResource_FieldSubPathArrayOfValues)
}

type ActivityLogEventClientMsgEventFieldPathBuilder struct{}

func NewActivityLogEventClientMsgEventFieldPathBuilder() ActivityLogEventClientMsgEventFieldPathBuilder {
	return ActivityLogEventClientMsgEventFieldPathBuilder{}
}
func (ActivityLogEventClientMsgEventFieldPathBuilder) Data() ActivityLog_Event_ClientMsgEventPathSelectorData {
	return ActivityLog_Event_ClientMsgEventPathSelectorData{}
}
func (ActivityLogEventClientMsgEventFieldPathBuilder) Time() ActivityLog_Event_ClientMsgEventPathSelectorTime {
	return ActivityLog_Event_ClientMsgEventPathSelectorTime{}
}

type ActivityLog_Event_ClientMsgEventPathSelectorData struct{}

func (ActivityLog_Event_ClientMsgEventPathSelectorData) FieldPath() *ActivityLogEventClientMsgEvent_FieldTerminalPath {
	return &ActivityLogEventClientMsgEvent_FieldTerminalPath{selector: ActivityLogEventClientMsgEvent_FieldPathSelectorData}
}

func (s ActivityLog_Event_ClientMsgEventPathSelectorData) WithValue(value *any.Any) *ActivityLogEventClientMsgEvent_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*ActivityLogEventClientMsgEvent_FieldTerminalPathValue)
}

func (s ActivityLog_Event_ClientMsgEventPathSelectorData) WithArrayOfValues(values []*any.Any) *ActivityLogEventClientMsgEvent_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ActivityLogEventClientMsgEvent_FieldTerminalPathArrayOfValues)
}

type ActivityLog_Event_ClientMsgEventPathSelectorTime struct{}

func (ActivityLog_Event_ClientMsgEventPathSelectorTime) FieldPath() *ActivityLogEventClientMsgEvent_FieldTerminalPath {
	return &ActivityLogEventClientMsgEvent_FieldTerminalPath{selector: ActivityLogEventClientMsgEvent_FieldPathSelectorTime}
}

func (s ActivityLog_Event_ClientMsgEventPathSelectorTime) WithValue(value *timestamp.Timestamp) *ActivityLogEventClientMsgEvent_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*ActivityLogEventClientMsgEvent_FieldTerminalPathValue)
}

func (s ActivityLog_Event_ClientMsgEventPathSelectorTime) WithArrayOfValues(values []*timestamp.Timestamp) *ActivityLogEventClientMsgEvent_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ActivityLogEventClientMsgEvent_FieldTerminalPathArrayOfValues)
}

type ActivityLogEventRegionalServerMsgEventFieldPathBuilder struct{}

func NewActivityLogEventRegionalServerMsgEventFieldPathBuilder() ActivityLogEventRegionalServerMsgEventFieldPathBuilder {
	return ActivityLogEventRegionalServerMsgEventFieldPathBuilder{}
}
func (ActivityLogEventRegionalServerMsgEventFieldPathBuilder) Data() ActivityLog_Event_RegionalServerMsgEventPathSelectorData {
	return ActivityLog_Event_RegionalServerMsgEventPathSelectorData{}
}
func (ActivityLogEventRegionalServerMsgEventFieldPathBuilder) Time() ActivityLog_Event_RegionalServerMsgEventPathSelectorTime {
	return ActivityLog_Event_RegionalServerMsgEventPathSelectorTime{}
}
func (ActivityLogEventRegionalServerMsgEventFieldPathBuilder) RegionId() ActivityLog_Event_RegionalServerMsgEventPathSelectorRegionId {
	return ActivityLog_Event_RegionalServerMsgEventPathSelectorRegionId{}
}

type ActivityLog_Event_RegionalServerMsgEventPathSelectorData struct{}

func (ActivityLog_Event_RegionalServerMsgEventPathSelectorData) FieldPath() *ActivityLogEventRegionalServerMsgEvent_FieldTerminalPath {
	return &ActivityLogEventRegionalServerMsgEvent_FieldTerminalPath{selector: ActivityLogEventRegionalServerMsgEvent_FieldPathSelectorData}
}

func (s ActivityLog_Event_RegionalServerMsgEventPathSelectorData) WithValue(value *any.Any) *ActivityLogEventRegionalServerMsgEvent_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*ActivityLogEventRegionalServerMsgEvent_FieldTerminalPathValue)
}

func (s ActivityLog_Event_RegionalServerMsgEventPathSelectorData) WithArrayOfValues(values []*any.Any) *ActivityLogEventRegionalServerMsgEvent_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ActivityLogEventRegionalServerMsgEvent_FieldTerminalPathArrayOfValues)
}

type ActivityLog_Event_RegionalServerMsgEventPathSelectorTime struct{}

func (ActivityLog_Event_RegionalServerMsgEventPathSelectorTime) FieldPath() *ActivityLogEventRegionalServerMsgEvent_FieldTerminalPath {
	return &ActivityLogEventRegionalServerMsgEvent_FieldTerminalPath{selector: ActivityLogEventRegionalServerMsgEvent_FieldPathSelectorTime}
}

func (s ActivityLog_Event_RegionalServerMsgEventPathSelectorTime) WithValue(value *timestamp.Timestamp) *ActivityLogEventRegionalServerMsgEvent_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*ActivityLogEventRegionalServerMsgEvent_FieldTerminalPathValue)
}

func (s ActivityLog_Event_RegionalServerMsgEventPathSelectorTime) WithArrayOfValues(values []*timestamp.Timestamp) *ActivityLogEventRegionalServerMsgEvent_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ActivityLogEventRegionalServerMsgEvent_FieldTerminalPathArrayOfValues)
}

type ActivityLog_Event_RegionalServerMsgEventPathSelectorRegionId struct{}

func (ActivityLog_Event_RegionalServerMsgEventPathSelectorRegionId) FieldPath() *ActivityLogEventRegionalServerMsgEvent_FieldTerminalPath {
	return &ActivityLogEventRegionalServerMsgEvent_FieldTerminalPath{selector: ActivityLogEventRegionalServerMsgEvent_FieldPathSelectorRegionId}
}

func (s ActivityLog_Event_RegionalServerMsgEventPathSelectorRegionId) WithValue(value string) *ActivityLogEventRegionalServerMsgEvent_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*ActivityLogEventRegionalServerMsgEvent_FieldTerminalPathValue)
}

func (s ActivityLog_Event_RegionalServerMsgEventPathSelectorRegionId) WithArrayOfValues(values []string) *ActivityLogEventRegionalServerMsgEvent_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ActivityLogEventRegionalServerMsgEvent_FieldTerminalPathArrayOfValues)
}

type ActivityLogEventServerMsgEventFieldPathBuilder struct{}

func NewActivityLogEventServerMsgEventFieldPathBuilder() ActivityLogEventServerMsgEventFieldPathBuilder {
	return ActivityLogEventServerMsgEventFieldPathBuilder{}
}
func (ActivityLogEventServerMsgEventFieldPathBuilder) Data() ActivityLog_Event_ServerMsgEventPathSelectorData {
	return ActivityLog_Event_ServerMsgEventPathSelectorData{}
}
func (ActivityLogEventServerMsgEventFieldPathBuilder) Time() ActivityLog_Event_ServerMsgEventPathSelectorTime {
	return ActivityLog_Event_ServerMsgEventPathSelectorTime{}
}
func (ActivityLogEventServerMsgEventFieldPathBuilder) RoutedRegionId() ActivityLog_Event_ServerMsgEventPathSelectorRoutedRegionId {
	return ActivityLog_Event_ServerMsgEventPathSelectorRoutedRegionId{}
}

type ActivityLog_Event_ServerMsgEventPathSelectorData struct{}

func (ActivityLog_Event_ServerMsgEventPathSelectorData) FieldPath() *ActivityLogEventServerMsgEvent_FieldTerminalPath {
	return &ActivityLogEventServerMsgEvent_FieldTerminalPath{selector: ActivityLogEventServerMsgEvent_FieldPathSelectorData}
}

func (s ActivityLog_Event_ServerMsgEventPathSelectorData) WithValue(value *any.Any) *ActivityLogEventServerMsgEvent_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*ActivityLogEventServerMsgEvent_FieldTerminalPathValue)
}

func (s ActivityLog_Event_ServerMsgEventPathSelectorData) WithArrayOfValues(values []*any.Any) *ActivityLogEventServerMsgEvent_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ActivityLogEventServerMsgEvent_FieldTerminalPathArrayOfValues)
}

type ActivityLog_Event_ServerMsgEventPathSelectorTime struct{}

func (ActivityLog_Event_ServerMsgEventPathSelectorTime) FieldPath() *ActivityLogEventServerMsgEvent_FieldTerminalPath {
	return &ActivityLogEventServerMsgEvent_FieldTerminalPath{selector: ActivityLogEventServerMsgEvent_FieldPathSelectorTime}
}

func (s ActivityLog_Event_ServerMsgEventPathSelectorTime) WithValue(value *timestamp.Timestamp) *ActivityLogEventServerMsgEvent_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*ActivityLogEventServerMsgEvent_FieldTerminalPathValue)
}

func (s ActivityLog_Event_ServerMsgEventPathSelectorTime) WithArrayOfValues(values []*timestamp.Timestamp) *ActivityLogEventServerMsgEvent_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ActivityLogEventServerMsgEvent_FieldTerminalPathArrayOfValues)
}

type ActivityLog_Event_ServerMsgEventPathSelectorRoutedRegionId struct{}

func (ActivityLog_Event_ServerMsgEventPathSelectorRoutedRegionId) FieldPath() *ActivityLogEventServerMsgEvent_FieldTerminalPath {
	return &ActivityLogEventServerMsgEvent_FieldTerminalPath{selector: ActivityLogEventServerMsgEvent_FieldPathSelectorRoutedRegionId}
}

func (s ActivityLog_Event_ServerMsgEventPathSelectorRoutedRegionId) WithValue(value string) *ActivityLogEventServerMsgEvent_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*ActivityLogEventServerMsgEvent_FieldTerminalPathValue)
}

func (s ActivityLog_Event_ServerMsgEventPathSelectorRoutedRegionId) WithArrayOfValues(values []string) *ActivityLogEventServerMsgEvent_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ActivityLogEventServerMsgEvent_FieldTerminalPathArrayOfValues)
}

type ActivityLogEventRegionalExitEventFieldPathBuilder struct{}

func NewActivityLogEventRegionalExitEventFieldPathBuilder() ActivityLogEventRegionalExitEventFieldPathBuilder {
	return ActivityLogEventRegionalExitEventFieldPathBuilder{}
}
func (ActivityLogEventRegionalExitEventFieldPathBuilder) Status() ActivityLog_Event_RegionalExitEventPathSelectorStatus {
	return ActivityLog_Event_RegionalExitEventPathSelectorStatus{}
}
func (ActivityLogEventRegionalExitEventFieldPathBuilder) Time() ActivityLog_Event_RegionalExitEventPathSelectorTime {
	return ActivityLog_Event_RegionalExitEventPathSelectorTime{}
}
func (ActivityLogEventRegionalExitEventFieldPathBuilder) RegionId() ActivityLog_Event_RegionalExitEventPathSelectorRegionId {
	return ActivityLog_Event_RegionalExitEventPathSelectorRegionId{}
}

type ActivityLog_Event_RegionalExitEventPathSelectorStatus struct{}

func (ActivityLog_Event_RegionalExitEventPathSelectorStatus) FieldPath() *ActivityLogEventRegionalExitEvent_FieldTerminalPath {
	return &ActivityLogEventRegionalExitEvent_FieldTerminalPath{selector: ActivityLogEventRegionalExitEvent_FieldPathSelectorStatus}
}

func (s ActivityLog_Event_RegionalExitEventPathSelectorStatus) WithValue(value *rpc.Status) *ActivityLogEventRegionalExitEvent_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*ActivityLogEventRegionalExitEvent_FieldTerminalPathValue)
}

func (s ActivityLog_Event_RegionalExitEventPathSelectorStatus) WithArrayOfValues(values []*rpc.Status) *ActivityLogEventRegionalExitEvent_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ActivityLogEventRegionalExitEvent_FieldTerminalPathArrayOfValues)
}

func (ActivityLog_Event_RegionalExitEventPathSelectorStatus) WithSubPath(subPath rpc.Status_FieldPath) *ActivityLogEventRegionalExitEvent_FieldSubPath {
	return &ActivityLogEventRegionalExitEvent_FieldSubPath{selector: ActivityLogEventRegionalExitEvent_FieldPathSelectorStatus, subPath: subPath}
}

func (s ActivityLog_Event_RegionalExitEventPathSelectorStatus) WithSubValue(subPathValue rpc.Status_FieldPathValue) *ActivityLogEventRegionalExitEvent_FieldSubPathValue {
	return &ActivityLogEventRegionalExitEvent_FieldSubPathValue{ActivityLogEventRegionalExitEvent_FieldPath: s.WithSubPath(subPathValue), subPathValue: subPathValue}
}

func (s ActivityLog_Event_RegionalExitEventPathSelectorStatus) WithSubArrayOfValues(subPathArrayOfValues rpc.Status_FieldPathArrayOfValues) *ActivityLogEventRegionalExitEvent_FieldSubPathArrayOfValues {
	return &ActivityLogEventRegionalExitEvent_FieldSubPathArrayOfValues{ActivityLogEventRegionalExitEvent_FieldPath: s.WithSubPath(subPathArrayOfValues), subPathArrayOfValues: subPathArrayOfValues}
}

func (s ActivityLog_Event_RegionalExitEventPathSelectorStatus) WithSubArrayItemValue(subPathArrayItemValue rpc.Status_FieldPathArrayItemValue) *ActivityLogEventRegionalExitEvent_FieldSubPathArrayItemValue {
	return &ActivityLogEventRegionalExitEvent_FieldSubPathArrayItemValue{ActivityLogEventRegionalExitEvent_FieldPath: s.WithSubPath(subPathArrayItemValue), subPathItemValue: subPathArrayItemValue}
}

func (ActivityLog_Event_RegionalExitEventPathSelectorStatus) Code() ActivityLog_Event_RegionalExitEventPathSelectorStatusCode {
	return ActivityLog_Event_RegionalExitEventPathSelectorStatusCode{}
}

func (ActivityLog_Event_RegionalExitEventPathSelectorStatus) Message() ActivityLog_Event_RegionalExitEventPathSelectorStatusMessage {
	return ActivityLog_Event_RegionalExitEventPathSelectorStatusMessage{}
}

func (ActivityLog_Event_RegionalExitEventPathSelectorStatus) Details() ActivityLog_Event_RegionalExitEventPathSelectorStatusDetails {
	return ActivityLog_Event_RegionalExitEventPathSelectorStatusDetails{}
}

type ActivityLog_Event_RegionalExitEventPathSelectorStatusCode struct{}

func (ActivityLog_Event_RegionalExitEventPathSelectorStatusCode) FieldPath() *ActivityLogEventRegionalExitEvent_FieldSubPath {
	return &ActivityLogEventRegionalExitEvent_FieldSubPath{
		selector: ActivityLogEventRegionalExitEvent_FieldPathSelectorStatus,
		subPath:  rpc.NewStatusFieldPathBuilder().Code().FieldPath(),
	}
}

func (s ActivityLog_Event_RegionalExitEventPathSelectorStatusCode) WithValue(value int32) *ActivityLogEventRegionalExitEvent_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ActivityLogEventRegionalExitEvent_FieldSubPathValue)
}

func (s ActivityLog_Event_RegionalExitEventPathSelectorStatusCode) WithArrayOfValues(values []int32) *ActivityLogEventRegionalExitEvent_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ActivityLogEventRegionalExitEvent_FieldSubPathArrayOfValues)
}

type ActivityLog_Event_RegionalExitEventPathSelectorStatusMessage struct{}

func (ActivityLog_Event_RegionalExitEventPathSelectorStatusMessage) FieldPath() *ActivityLogEventRegionalExitEvent_FieldSubPath {
	return &ActivityLogEventRegionalExitEvent_FieldSubPath{
		selector: ActivityLogEventRegionalExitEvent_FieldPathSelectorStatus,
		subPath:  rpc.NewStatusFieldPathBuilder().Message().FieldPath(),
	}
}

func (s ActivityLog_Event_RegionalExitEventPathSelectorStatusMessage) WithValue(value string) *ActivityLogEventRegionalExitEvent_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ActivityLogEventRegionalExitEvent_FieldSubPathValue)
}

func (s ActivityLog_Event_RegionalExitEventPathSelectorStatusMessage) WithArrayOfValues(values []string) *ActivityLogEventRegionalExitEvent_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ActivityLogEventRegionalExitEvent_FieldSubPathArrayOfValues)
}

type ActivityLog_Event_RegionalExitEventPathSelectorStatusDetails struct{}

func (ActivityLog_Event_RegionalExitEventPathSelectorStatusDetails) FieldPath() *ActivityLogEventRegionalExitEvent_FieldSubPath {
	return &ActivityLogEventRegionalExitEvent_FieldSubPath{
		selector: ActivityLogEventRegionalExitEvent_FieldPathSelectorStatus,
		subPath:  rpc.NewStatusFieldPathBuilder().Details().FieldPath(),
	}
}

func (s ActivityLog_Event_RegionalExitEventPathSelectorStatusDetails) WithValue(value []*any.Any) *ActivityLogEventRegionalExitEvent_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ActivityLogEventRegionalExitEvent_FieldSubPathValue)
}

func (s ActivityLog_Event_RegionalExitEventPathSelectorStatusDetails) WithArrayOfValues(values [][]*any.Any) *ActivityLogEventRegionalExitEvent_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ActivityLogEventRegionalExitEvent_FieldSubPathArrayOfValues)
}

func (s ActivityLog_Event_RegionalExitEventPathSelectorStatusDetails) WithItemValue(value *any.Any) *ActivityLogEventRegionalExitEvent_FieldSubPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*ActivityLogEventRegionalExitEvent_FieldSubPathArrayItemValue)
}

type ActivityLog_Event_RegionalExitEventPathSelectorTime struct{}

func (ActivityLog_Event_RegionalExitEventPathSelectorTime) FieldPath() *ActivityLogEventRegionalExitEvent_FieldTerminalPath {
	return &ActivityLogEventRegionalExitEvent_FieldTerminalPath{selector: ActivityLogEventRegionalExitEvent_FieldPathSelectorTime}
}

func (s ActivityLog_Event_RegionalExitEventPathSelectorTime) WithValue(value *timestamp.Timestamp) *ActivityLogEventRegionalExitEvent_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*ActivityLogEventRegionalExitEvent_FieldTerminalPathValue)
}

func (s ActivityLog_Event_RegionalExitEventPathSelectorTime) WithArrayOfValues(values []*timestamp.Timestamp) *ActivityLogEventRegionalExitEvent_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ActivityLogEventRegionalExitEvent_FieldTerminalPathArrayOfValues)
}

type ActivityLog_Event_RegionalExitEventPathSelectorRegionId struct{}

func (ActivityLog_Event_RegionalExitEventPathSelectorRegionId) FieldPath() *ActivityLogEventRegionalExitEvent_FieldTerminalPath {
	return &ActivityLogEventRegionalExitEvent_FieldTerminalPath{selector: ActivityLogEventRegionalExitEvent_FieldPathSelectorRegionId}
}

func (s ActivityLog_Event_RegionalExitEventPathSelectorRegionId) WithValue(value string) *ActivityLogEventRegionalExitEvent_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*ActivityLogEventRegionalExitEvent_FieldTerminalPathValue)
}

func (s ActivityLog_Event_RegionalExitEventPathSelectorRegionId) WithArrayOfValues(values []string) *ActivityLogEventRegionalExitEvent_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ActivityLogEventRegionalExitEvent_FieldTerminalPathArrayOfValues)
}

type ActivityLogEventExitEventFieldPathBuilder struct{}

func NewActivityLogEventExitEventFieldPathBuilder() ActivityLogEventExitEventFieldPathBuilder {
	return ActivityLogEventExitEventFieldPathBuilder{}
}
func (ActivityLogEventExitEventFieldPathBuilder) Status() ActivityLog_Event_ExitEventPathSelectorStatus {
	return ActivityLog_Event_ExitEventPathSelectorStatus{}
}
func (ActivityLogEventExitEventFieldPathBuilder) Time() ActivityLog_Event_ExitEventPathSelectorTime {
	return ActivityLog_Event_ExitEventPathSelectorTime{}
}

type ActivityLog_Event_ExitEventPathSelectorStatus struct{}

func (ActivityLog_Event_ExitEventPathSelectorStatus) FieldPath() *ActivityLogEventExitEvent_FieldTerminalPath {
	return &ActivityLogEventExitEvent_FieldTerminalPath{selector: ActivityLogEventExitEvent_FieldPathSelectorStatus}
}

func (s ActivityLog_Event_ExitEventPathSelectorStatus) WithValue(value *rpc.Status) *ActivityLogEventExitEvent_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*ActivityLogEventExitEvent_FieldTerminalPathValue)
}

func (s ActivityLog_Event_ExitEventPathSelectorStatus) WithArrayOfValues(values []*rpc.Status) *ActivityLogEventExitEvent_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ActivityLogEventExitEvent_FieldTerminalPathArrayOfValues)
}

func (ActivityLog_Event_ExitEventPathSelectorStatus) WithSubPath(subPath rpc.Status_FieldPath) *ActivityLogEventExitEvent_FieldSubPath {
	return &ActivityLogEventExitEvent_FieldSubPath{selector: ActivityLogEventExitEvent_FieldPathSelectorStatus, subPath: subPath}
}

func (s ActivityLog_Event_ExitEventPathSelectorStatus) WithSubValue(subPathValue rpc.Status_FieldPathValue) *ActivityLogEventExitEvent_FieldSubPathValue {
	return &ActivityLogEventExitEvent_FieldSubPathValue{ActivityLogEventExitEvent_FieldPath: s.WithSubPath(subPathValue), subPathValue: subPathValue}
}

func (s ActivityLog_Event_ExitEventPathSelectorStatus) WithSubArrayOfValues(subPathArrayOfValues rpc.Status_FieldPathArrayOfValues) *ActivityLogEventExitEvent_FieldSubPathArrayOfValues {
	return &ActivityLogEventExitEvent_FieldSubPathArrayOfValues{ActivityLogEventExitEvent_FieldPath: s.WithSubPath(subPathArrayOfValues), subPathArrayOfValues: subPathArrayOfValues}
}

func (s ActivityLog_Event_ExitEventPathSelectorStatus) WithSubArrayItemValue(subPathArrayItemValue rpc.Status_FieldPathArrayItemValue) *ActivityLogEventExitEvent_FieldSubPathArrayItemValue {
	return &ActivityLogEventExitEvent_FieldSubPathArrayItemValue{ActivityLogEventExitEvent_FieldPath: s.WithSubPath(subPathArrayItemValue), subPathItemValue: subPathArrayItemValue}
}

func (ActivityLog_Event_ExitEventPathSelectorStatus) Code() ActivityLog_Event_ExitEventPathSelectorStatusCode {
	return ActivityLog_Event_ExitEventPathSelectorStatusCode{}
}

func (ActivityLog_Event_ExitEventPathSelectorStatus) Message() ActivityLog_Event_ExitEventPathSelectorStatusMessage {
	return ActivityLog_Event_ExitEventPathSelectorStatusMessage{}
}

func (ActivityLog_Event_ExitEventPathSelectorStatus) Details() ActivityLog_Event_ExitEventPathSelectorStatusDetails {
	return ActivityLog_Event_ExitEventPathSelectorStatusDetails{}
}

type ActivityLog_Event_ExitEventPathSelectorStatusCode struct{}

func (ActivityLog_Event_ExitEventPathSelectorStatusCode) FieldPath() *ActivityLogEventExitEvent_FieldSubPath {
	return &ActivityLogEventExitEvent_FieldSubPath{
		selector: ActivityLogEventExitEvent_FieldPathSelectorStatus,
		subPath:  rpc.NewStatusFieldPathBuilder().Code().FieldPath(),
	}
}

func (s ActivityLog_Event_ExitEventPathSelectorStatusCode) WithValue(value int32) *ActivityLogEventExitEvent_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ActivityLogEventExitEvent_FieldSubPathValue)
}

func (s ActivityLog_Event_ExitEventPathSelectorStatusCode) WithArrayOfValues(values []int32) *ActivityLogEventExitEvent_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ActivityLogEventExitEvent_FieldSubPathArrayOfValues)
}

type ActivityLog_Event_ExitEventPathSelectorStatusMessage struct{}

func (ActivityLog_Event_ExitEventPathSelectorStatusMessage) FieldPath() *ActivityLogEventExitEvent_FieldSubPath {
	return &ActivityLogEventExitEvent_FieldSubPath{
		selector: ActivityLogEventExitEvent_FieldPathSelectorStatus,
		subPath:  rpc.NewStatusFieldPathBuilder().Message().FieldPath(),
	}
}

func (s ActivityLog_Event_ExitEventPathSelectorStatusMessage) WithValue(value string) *ActivityLogEventExitEvent_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ActivityLogEventExitEvent_FieldSubPathValue)
}

func (s ActivityLog_Event_ExitEventPathSelectorStatusMessage) WithArrayOfValues(values []string) *ActivityLogEventExitEvent_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ActivityLogEventExitEvent_FieldSubPathArrayOfValues)
}

type ActivityLog_Event_ExitEventPathSelectorStatusDetails struct{}

func (ActivityLog_Event_ExitEventPathSelectorStatusDetails) FieldPath() *ActivityLogEventExitEvent_FieldSubPath {
	return &ActivityLogEventExitEvent_FieldSubPath{
		selector: ActivityLogEventExitEvent_FieldPathSelectorStatus,
		subPath:  rpc.NewStatusFieldPathBuilder().Details().FieldPath(),
	}
}

func (s ActivityLog_Event_ExitEventPathSelectorStatusDetails) WithValue(value []*any.Any) *ActivityLogEventExitEvent_FieldSubPathValue {
	return s.FieldPath().WithIValue(value).(*ActivityLogEventExitEvent_FieldSubPathValue)
}

func (s ActivityLog_Event_ExitEventPathSelectorStatusDetails) WithArrayOfValues(values [][]*any.Any) *ActivityLogEventExitEvent_FieldSubPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ActivityLogEventExitEvent_FieldSubPathArrayOfValues)
}

func (s ActivityLog_Event_ExitEventPathSelectorStatusDetails) WithItemValue(value *any.Any) *ActivityLogEventExitEvent_FieldSubPathArrayItemValue {
	return s.FieldPath().WithIArrayItemValue(value).(*ActivityLogEventExitEvent_FieldSubPathArrayItemValue)
}

type ActivityLog_Event_ExitEventPathSelectorTime struct{}

func (ActivityLog_Event_ExitEventPathSelectorTime) FieldPath() *ActivityLogEventExitEvent_FieldTerminalPath {
	return &ActivityLogEventExitEvent_FieldTerminalPath{selector: ActivityLogEventExitEvent_FieldPathSelectorTime}
}

func (s ActivityLog_Event_ExitEventPathSelectorTime) WithValue(value *timestamp.Timestamp) *ActivityLogEventExitEvent_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*ActivityLogEventExitEvent_FieldTerminalPathValue)
}

func (s ActivityLog_Event_ExitEventPathSelectorTime) WithArrayOfValues(values []*timestamp.Timestamp) *ActivityLogEventExitEvent_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ActivityLogEventExitEvent_FieldTerminalPathArrayOfValues)
}

type ActivityLogSubjectResourceDifferenceFieldPathBuilder struct{}

func NewActivityLogSubjectResourceDifferenceFieldPathBuilder() ActivityLogSubjectResourceDifferenceFieldPathBuilder {
	return ActivityLogSubjectResourceDifferenceFieldPathBuilder{}
}
func (ActivityLogSubjectResourceDifferenceFieldPathBuilder) Fields() ActivityLog_SubjectResource_DifferencePathSelectorFields {
	return ActivityLog_SubjectResource_DifferencePathSelectorFields{}
}
func (ActivityLogSubjectResourceDifferenceFieldPathBuilder) Before() ActivityLog_SubjectResource_DifferencePathSelectorBefore {
	return ActivityLog_SubjectResource_DifferencePathSelectorBefore{}
}
func (ActivityLogSubjectResourceDifferenceFieldPathBuilder) After() ActivityLog_SubjectResource_DifferencePathSelectorAfter {
	return ActivityLog_SubjectResource_DifferencePathSelectorAfter{}
}

type ActivityLog_SubjectResource_DifferencePathSelectorFields struct{}

func (ActivityLog_SubjectResource_DifferencePathSelectorFields) FieldPath() *ActivityLogSubjectResourceDifference_FieldTerminalPath {
	return &ActivityLogSubjectResourceDifference_FieldTerminalPath{selector: ActivityLogSubjectResourceDifference_FieldPathSelectorFields}
}

func (s ActivityLog_SubjectResource_DifferencePathSelectorFields) WithValue(value *field_mask.FieldMask) *ActivityLogSubjectResourceDifference_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*ActivityLogSubjectResourceDifference_FieldTerminalPathValue)
}

func (s ActivityLog_SubjectResource_DifferencePathSelectorFields) WithArrayOfValues(values []*field_mask.FieldMask) *ActivityLogSubjectResourceDifference_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ActivityLogSubjectResourceDifference_FieldTerminalPathArrayOfValues)
}

type ActivityLog_SubjectResource_DifferencePathSelectorBefore struct{}

func (ActivityLog_SubjectResource_DifferencePathSelectorBefore) FieldPath() *ActivityLogSubjectResourceDifference_FieldTerminalPath {
	return &ActivityLogSubjectResourceDifference_FieldTerminalPath{selector: ActivityLogSubjectResourceDifference_FieldPathSelectorBefore}
}

func (s ActivityLog_SubjectResource_DifferencePathSelectorBefore) WithValue(value *any.Any) *ActivityLogSubjectResourceDifference_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*ActivityLogSubjectResourceDifference_FieldTerminalPathValue)
}

func (s ActivityLog_SubjectResource_DifferencePathSelectorBefore) WithArrayOfValues(values []*any.Any) *ActivityLogSubjectResourceDifference_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ActivityLogSubjectResourceDifference_FieldTerminalPathArrayOfValues)
}

type ActivityLog_SubjectResource_DifferencePathSelectorAfter struct{}

func (ActivityLog_SubjectResource_DifferencePathSelectorAfter) FieldPath() *ActivityLogSubjectResourceDifference_FieldTerminalPath {
	return &ActivityLogSubjectResourceDifference_FieldTerminalPath{selector: ActivityLogSubjectResourceDifference_FieldPathSelectorAfter}
}

func (s ActivityLog_SubjectResource_DifferencePathSelectorAfter) WithValue(value *any.Any) *ActivityLogSubjectResourceDifference_FieldTerminalPathValue {
	return s.FieldPath().WithIValue(value).(*ActivityLogSubjectResourceDifference_FieldTerminalPathValue)
}

func (s ActivityLog_SubjectResource_DifferencePathSelectorAfter) WithArrayOfValues(values []*any.Any) *ActivityLogSubjectResourceDifference_FieldTerminalPathArrayOfValues {
	return s.FieldPath().WithIArrayOfValues(values).(*ActivityLogSubjectResourceDifference_FieldTerminalPathArrayOfValues)
}
