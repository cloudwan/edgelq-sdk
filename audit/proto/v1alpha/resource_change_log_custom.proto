syntax = "proto3";

package ntt.audit.v1alpha;

import "edgelq-sdk/audit/proto/v1alpha/common.proto";
import "edgelq-sdk/audit/proto/v1alpha/resource_change_log.proto";
import "edgelq-sdk/common/rpc/status.proto";
import "google/protobuf/timestamp.proto";

option go_package = "github.com/cloudwan/edgelq-sdk/audit/client/v1alpha/resource_change_log;resource_change_log_client";
option java_multiple_files = false;
option java_outer_classname = "ResourceChangeLogCustomProto";
option java_package = "com.ntt.audit.pb.v1alpha";

// Request message for method
// [ListResourceChangeLogs][ntt.audit.v1alpha.ListResourceChangeLogs]
message ListResourceChangeLogsRequest {
  // Parent reference of ntt.audit.v1alpha.ResourceChangeLog
  repeated string parents = 1;

  // A audit filter that specifies which resource change logs should be returned
  string filter = 2;

  // The time interval for which results should be returned. Only logs
  // that contain data points in the specified interval are included
  // in the response.
  TimeInterval interval = 4;

  // Cap on a number of resource change logs to be included in a response.
  // Number of logs in an actual response can be higher, since logs are
  // read in bulk with second precision - exceed logs above the limit will share
  // same timestamp as the logs below the limit.
  //
  // Results will be adjusted to the "end time" taken from interval field
  // (adjusted also by page_token if provided).
  int32 page_size = 5;

  // Token which identifies next page with further results. Token should be
  // taken from
  // [ListResourceChangeLogsResponse.next_page_token][ntt.audit.v1alpha.ListResourceChangeLogsResponse.next_page_token].
  string page_token = 6;
}

// Response message for method
// [ListResourceChangeLogs][ntt.audit.v1alpha.ListResourceChangeLogs]
message ListResourceChangeLogsResponse {
  // One or more resource change logs that match the filter included in the
  // request.
  repeated ResourceChangeLog resource_change_logs = 1;

  // If there are more results than have been returned, then this field is set
  // to a non-empty value. To see the additional results,
  // use that value as `pageToken` in the next call to this method.
  string next_page_token = 2;

  // Query execution errors that may have caused the response data returned
  // to be incomplete.
  repeated ntt.rpc.Status execution_errors = 3;
}

// Request message for method
// [CreatePreCommittedResourceChangeLogs][ntt.audit.v1alpha.CreatePreCommittedResourceChangeLogs]
//
// Creates resource change log.
//
// This request should not be used by regular users - only API services should
// be able to submit resource change logs. Developers of services should use
// logs exporter package offered along other Audit service packages instead of
// developing own components.
message CreatePreCommittedResourceChangeLogsRequest {
  // ID of the request - must be same as the one used in activity logs
  uint64 request_id = 1;

  // Time of the request
  google.protobuf.Timestamp timestamp = 2;

  // Authentication data - informs who made a change
  Authentication authentication = 3;

  // Information about the service
  ServiceData service = 4;

  // Information about transaction
  ResourceChangeLog.TransactionInfo transaction = 5;

  // List of changes
  repeated ResourceChangeLog.ResourceChange changes = 6;
}

// Response message for method
// [CreateResourceChangeLogs][ntt.audit.v1alpha.CreateResourceChangeLogs]
message CreatePreCommittedResourceChangeLogsResponse {
  // Resource change log keys - one key per each resource change, in same order
  repeated bytes log_keys = 1;
}

// Request message for method
// [SetResourceChangeLogsCommitState][ntt.audit.v1alpha.SetResourceChangeLogsCommitState]
//
// Sets transaction status of selected resource change logs.
//
// This request should not be used by regular users - only API services should
// be able to modify resource change logs. Developers of services should use
// logs exporter package offered along other Audit service packages instead of
// developing own components.
message SetResourceChangeLogsCommitStateRequest {
  // list of resource change log keys.
  repeated bytes log_keys = 1;

  // Time of the request - must be same as in
  // CreatePreCommittedResourceChangeLogsRequest
  google.protobuf.Timestamp timestamp = 2;

  // final state of the transaction - must be COMMITTED or ROLLED_BACK
  ResourceChangeLog.TransactionInfo.State tx_result = 3;
}

// Response message for method
// [SetResourceChangeLogsCommitState][ntt.audit.v1alpha.SetResourceChangeLogsCommitState]
message SetResourceChangeLogsCommitStateResponse {}
