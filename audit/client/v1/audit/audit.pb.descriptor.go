// Code generated by protoc-gen-goten-client
// Service: Audit
// DO NOT EDIT!!!

package audit_client

import (
	gotenclient "github.com/cloudwan/goten-sdk/runtime/client"
	gotenresource "github.com/cloudwan/goten-sdk/runtime/resource"
)

// proto imports
import (
	activity_log_client "github.com/cloudwan/edgelq-sdk/audit/client/v1/activity_log"
	audited_resource_descriptor_client "github.com/cloudwan/edgelq-sdk/audit/client/v1/audited_resource_descriptor"
	method_descriptor_client "github.com/cloudwan/edgelq-sdk/audit/client/v1/method_descriptor"
	resource_change_log_client "github.com/cloudwan/edgelq-sdk/audit/client/v1/resource_change_log"
	activity_log "github.com/cloudwan/edgelq-sdk/audit/resources/v1/activity_log"
	audited_resource_descriptor "github.com/cloudwan/edgelq-sdk/audit/resources/v1/audited_resource_descriptor"
	method_descriptor "github.com/cloudwan/edgelq-sdk/audit/resources/v1/method_descriptor"
	resource_change_log "github.com/cloudwan/edgelq-sdk/audit/resources/v1/resource_change_log"
)

// Reference imports to suppress errors if they are not otherwise used.
var (
	_ = new(gotenclient.MethodDescriptor)
	_ = gotenresource.WildcardId
)

// make sure we're using proto imports
var (
	_ = &activity_log.ActivityLog{}
	_ = &audited_resource_descriptor.AuditedResourceDescriptor{}
	_ = &audited_resource_descriptor_client.GetAuditedResourceDescriptorRequest{}
	_ = &method_descriptor.MethodDescriptor{}
	_ = &method_descriptor_client.GetMethodDescriptorRequest{}
	_ = &resource_change_log.ResourceChangeLog{}
)

var (
	descriptorInitialized bool
	auditDescriptor       *AuditDescriptor
)

type AuditDescriptor struct{}

func (d *AuditDescriptor) GetServiceName() string {
	return "audit"
}

func (d *AuditDescriptor) GetServiceDomain() string {
	return "audit.edgelq.com"
}

func (d *AuditDescriptor) GetVersion() string {
	return "v1"
}

func (d *AuditDescriptor) GetNextVersion() string {

	return ""
}

func (d *AuditDescriptor) AllResourceDescriptors() []gotenresource.Descriptor {
	return []gotenresource.Descriptor{
		activity_log.GetDescriptor(),
		audited_resource_descriptor.GetDescriptor(),
		method_descriptor.GetDescriptor(),
		resource_change_log.GetDescriptor(),
	}
}

func (d *AuditDescriptor) AllApiDescriptors() []gotenclient.ApiDescriptor {
	return []gotenclient.ApiDescriptor{
		activity_log_client.GetActivityLogServiceDescriptor(),
		audited_resource_descriptor_client.GetAuditedResourceDescriptorServiceDescriptor(),
		method_descriptor_client.GetMethodDescriptorServiceDescriptor(),
		resource_change_log_client.GetResourceChangeLogServiceDescriptor(),
	}
}

func (d *AuditDescriptor) AllImportedServiceInfos() []gotenclient.ServiceImportInfo {
	return []gotenclient.ServiceImportInfo{
		{
			Domain:  "iam.edgelq.com",
			Version: "v1",
		},
		{
			Domain:  "meta.goten.com",
			Version: "v1",
		},
	}
}

func GetAuditDescriptor() *AuditDescriptor {
	return auditDescriptor
}

func initDescriptor() {
	auditDescriptor = &AuditDescriptor{}
	gotenclient.GetRegistry().RegisterSvcDescriptor(auditDescriptor)
}

func init() {
	if !descriptorInitialized {
		initDescriptor()
		descriptorInitialized = true
	}
}
